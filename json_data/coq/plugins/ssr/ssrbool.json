{
    "filename": "plugins/ssr/ssrbool.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Bool.",
            "VernacRequire",
            "d99cac09fcaca6388642265a40277b8fa2afbf6c"
        ],
        [
            "Require Import ssreflect ssrfun.",
            "VernacRequire",
            "d2573783d781a6ed78800fafe154a9bc3e40517e"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Set Warnings \"-projection-no-head-constant\".",
            "VernacSetOption",
            "4d8ec7dbc700a2b76d2426a7417d70474ad14e41"
        ],
        [
            "Notation reflect := Bool.reflect.",
            "VernacSyntacticDefinition",
            "bc5795f5a04ad821b593b5bf3ffbc2f351abf930"
        ],
        [
            "Notation ReflectT := Bool.ReflectT.",
            "VernacSyntacticDefinition",
            "135d66ce6c66290799ea52146be883e89026343d"
        ],
        [
            "Notation ReflectF := Bool.ReflectF.",
            "VernacSyntacticDefinition",
            "d76dd5c86689fe078e0401cb5da53f66cd8f5e03"
        ],
        [
            "Reserved Notation \"~~ b\" (at level 35, right associativity).",
            "VernacSyntaxExtension",
            "97a5deb270b11583b022a4479952c467d9e70e1e"
        ],
        [
            "Reserved Notation \"b ==> c\" (at level 55, right associativity).",
            "VernacSyntaxExtension",
            "7a0f7eef5ae5a561d2026e1b4dcfb217412c107a"
        ],
        [
            "Reserved Notation \"b1 (+) b2\" (at level 50, left associativity).",
            "VernacSyntaxExtension",
            "6a3d22a031f1cdf5d28e1034d97bff74718b5c7c"
        ],
        [
            "Reserved Notation \"x \\in A\" (at level 70, format \"'[hv' x '/ ' \\in A ']'\", no associativity).",
            "VernacSyntaxExtension",
            "3311fad61d7e2fbda2c7d6e546775f89a9c1318f"
        ],
        [
            "Reserved Notation \"x \\notin A\" (at level 70, format \"'[hv' x '/ ' \\notin A ']'\", no associativity).",
            "VernacSyntaxExtension",
            "50d42207b998bff423e8d741660596fb7a537b56"
        ],
        [
            "Reserved Notation \"p1 =i p2\" (at level 70, format \"'[hv' p1 '/ ' =i p2 ']'\", no associativity).",
            "VernacSyntaxExtension",
            "237810a9761197fdd2a1c26396f444d2ebf903b2"
        ],
        [
            "Reserved Notation \"[ /\\ P1 & P2 ]\" (at level 0, only parsing).",
            "VernacSyntaxExtension",
            "7b6129816466b635ec45eae08e5e4aed6792457b"
        ],
        [
            "Reserved Notation \"[ /\\ P1 , P2 & P3 ]\" (at level 0, format \"'[hv' [ /\\ '[' P1 , '/' P2 ']' '/ ' & P3 ] ']'\").",
            "VernacSyntaxExtension",
            "81c0affac6e60cc3e0e0fb044543b5765232b97a"
        ],
        [
            "Reserved Notation \"[ /\\ P1 , P2 , P3 & P4 ]\" (at level 0, format \"'[hv' [ /\\ '[' P1 , '/' P2 , '/' P3 ']' '/ ' & P4 ] ']'\").",
            "VernacSyntaxExtension",
            "e6a8ef79904558dceba2bddb52fdafd376edbd60"
        ],
        [
            "Reserved Notation \"[ /\\ P1 , P2 , P3 , P4 & P5 ]\" (at level 0, format \"'[hv' [ /\\ '[' P1 , '/' P2 , '/' P3 , '/' P4 ']' '/ ' & P5 ] ']'\").",
            "VernacSyntaxExtension",
            "23ec5efc4b054a6d43643aec748f1f210f4bb0f8"
        ],
        [
            "Reserved Notation \"[ \\/ P1 | P2 ]\" (at level 0, only parsing).",
            "VernacSyntaxExtension",
            "d0aa8d64789ae141b03c80508bdbcd5aafb34abf"
        ],
        [
            "Reserved Notation \"[ \\/ P1 , P2 | P3 ]\" (at level 0, format \"'[hv' [ \\/ '[' P1 , '/' P2 ']' '/ ' | P3 ] ']'\").",
            "VernacSyntaxExtension",
            "bae11f163c07c69bf176f467db14692d4ce7ea83"
        ],
        [
            "Reserved Notation \"[ \\/ P1 , P2 , P3 | P4 ]\" (at level 0, format \"'[hv' [ \\/ '[' P1 , '/' P2 , '/' P3 ']' '/ ' | P4 ] ']'\").",
            "VernacSyntaxExtension",
            "9f56bb9a151b0b9e5a2e6334f94e15e3629918f8"
        ],
        [
            "Reserved Notation \"[ && b1 & c ]\" (at level 0, only parsing).",
            "VernacSyntaxExtension",
            "ddc1acf1dad57fadd5b46bb39c98f0087629ca40"
        ],
        [
            "Reserved Notation \"[ && b1 , b2 , .. , bn & c ]\" (at level 0, format \"'[hv' [ && '[' b1 , '/' b2 , '/' .. , '/' bn ']' '/ ' & c ] ']'\").",
            "VernacSyntaxExtension",
            "c927b5a3fc964b35b698207910a34d83babb1798"
        ],
        [
            "Reserved Notation \"[ || b1 | c ]\" (at level 0, only parsing).",
            "VernacSyntaxExtension",
            "316fbd93a8b4fd958d826d0f6aa6ec341b0e972e"
        ],
        [
            "Reserved Notation \"[ || b1 , b2 , .. , bn | c ]\" (at level 0, format \"'[hv' [ || '[' b1 , '/' b2 , '/' .. , '/' bn ']' '/ ' | c ] ']'\").",
            "VernacSyntaxExtension",
            "7af6561dfdc8f48440c2d66483714777a9911b43"
        ],
        [
            "Reserved Notation \"[ ==> b1 => c ]\" (at level 0, only parsing).",
            "VernacSyntaxExtension",
            "1c2ab58bcff2fb6fd2c97e41085995fe686603a6"
        ],
        [
            "Reserved Notation \"[ ==> b1 , b2 , .. , bn => c ]\" (at level 0, format \"'[hv' [ ==> '[' b1 , '/' b2 , '/' .. , '/' bn ']' '/' => c ] ']'\").",
            "VernacSyntaxExtension",
            "3de223a675de5427fa7dcb6f7e2a8177e97dcda7"
        ],
        [
            "Reserved Notation \"[ 'pred' : T => E ]\" (at level 0, format \"'[hv' [ 'pred' : T => '/ ' E ] ']'\").",
            "VernacSyntaxExtension",
            "5f3e0b16a63826899d8e16aca9f5d14df7d94a67"
        ],
        [
            "Reserved Notation \"[ 'pred' x => E ]\" (at level 0, x at level 8, format \"'[hv' [ 'pred' x => '/ ' E ] ']'\").",
            "VernacSyntaxExtension",
            "a08481a2da8f8b5726191cacbbe98123278ff466"
        ],
        [
            "Reserved Notation \"[ 'pred' x : T => E ]\" (at level 0, x at level 8, format \"'[hv' [ 'pred' x : T => '/ ' E ] ']'\").",
            "VernacSyntaxExtension",
            "25d79e4a86cf69a7f5257cfa394751b016d1f76d"
        ],
        [
            "Reserved Notation \"[ 'rel' x y => E ]\" (at level 0, x, y at level 8, format \"'[hv' [ 'rel' x y => '/ ' E ] ']'\").",
            "VernacSyntaxExtension",
            "c1ef4e1b86ea34abb019d7e8281338c9030c3ae7"
        ],
        [
            "Reserved Notation \"[ 'rel' x y : T => E ]\" (at level 0, x, y at level 8, format \"'[hv' [ 'rel' x y : T => '/ ' E ] ']'\").",
            "VernacSyntaxExtension",
            "f55439047379d8fdf724512ab6ad8976ad2a00e9"
        ],
        [
            "Delimit Scope bool_scope with B.",
            "VernacDelimiters",
            "3b3c811174968a512f1832fbb108058323fbf217"
        ],
        [
            "Open Scope bool_scope.",
            "VernacOpenCloseScope",
            "72aa7c29d11c468bfbc0b10b8d0df17f3e901223"
        ],
        [
            "Definition addb b := if b then negb else id.",
            "VernacDefinition",
            "0dcad03a7cfeeb176fd700c7edf6885efa95710c"
        ],
        [
            "Notation \"~~ b\" := (negb b) : bool_scope.",
            "VernacNotation",
            "19b7e6b46112bce44adfeca5493808a4968faa89"
        ],
        [
            "Notation \"b ==> c\" := (implb b c) : bool_scope.",
            "VernacNotation",
            "550fafb193fd4a3b2bc9f9891f4f63779d0314fa"
        ],
        [
            "Notation \"b1 (+) b2\" := (addb b1 b2) : bool_scope.",
            "VernacNotation",
            "e1d16b5bbacec06290211e269df25080483ed9b7"
        ],
        [
            "Coercion is_true : bool >-> Sortclass.",
            "VernacCoercion",
            "1be04e55d313441386851f33729ac4ce4bdb5893"
        ],
        [
            "Lemma prop_congr : forall b b' : bool, b = b' -> b = b' :> Prop.",
            "VernacStartTheoremProof",
            "ca8dfe22ff9f438e3ecda62e44aa60d0afd4e594"
        ],
        [
            "by move=> b b' ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac prop_congr := apply: prop_congr.",
            "VernacExtend",
            "3f05671a2283ccd3d80fe98ea70d200857778465"
        ],
        [
            "Lemma is_true_true : true.",
            "VernacStartTheoremProof",
            "3020681388ba62f43dac8775a5ad365c97399c77"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_false_is_true : ~ false.",
            "VernacStartTheoremProof",
            "8e6b883f872550036b2415824e8acf91d3fe231d"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_true_locked_true : locked true.",
            "VernacStartTheoremProof",
            "3f22dfc4ef74d0611af0817a28c30b0873f35146"
        ],
        [
            "by unlock.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve is_true_true not_false_is_true is_true_locked_true.",
            "VernacHints",
            "30bf172fa4a2a305530e74043625c0b989a620ec"
        ],
        [
            "Definition isT := is_true_true.",
            "VernacDefinition",
            "4e009f6d0c619b50c666c8aed7fbfe5c0bd0f64a"
        ],
        [
            "Definition notF := not_false_is_true.",
            "VernacDefinition",
            "a0568a92f901641e2581811e8f7279f851c395e4"
        ],
        [
            "Lemma negbT b : b = false -> ~~ b.",
            "VernacStartTheoremProof",
            "5e73106cea2c5f3b0a8e39487e4c06e25eafae09"
        ],
        [
            "by case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negbTE b : ~~ b -> b = false.",
            "VernacStartTheoremProof",
            "a0f1f93330a4fbe68cf7a14078f7e388d926f08c"
        ],
        [
            "by case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negbF b : (b : bool) -> ~~ b = false.",
            "VernacStartTheoremProof",
            "833394f8811d70290e5777f8cecc56269f3152dd"
        ],
        [
            "by case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negbFE b : ~~ b = false -> b.",
            "VernacStartTheoremProof",
            "ab91ee26c9c8facc2d9c35c5c28a7ab8dc55735d"
        ],
        [
            "by case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negbK : involutive negb.",
            "VernacStartTheoremProof",
            "892662041762f6311528c852d4220891eca3ce47"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negbNE b : ~~ ~~ b -> b.",
            "VernacStartTheoremProof",
            "4f686b3fecd548272ddeb03909dd5c2c8770a196"
        ],
        [
            "by case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negb_inj : injective negb.",
            "VernacStartTheoremProof",
            "197a8259933feba8e6ba14181b29537a8de3ce03"
        ],
        [
            "exact: can_inj negbK.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negbLR b c : b = ~~ c -> ~~ b = c.",
            "VernacStartTheoremProof",
            "d3d3a2340e34eca38845c5662396783679ec221b"
        ],
        [
            "exact: canLR negbK.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negbRL b c : ~~ b = c -> b = ~~ c.",
            "VernacStartTheoremProof",
            "c0e893a8c5890437614005a30cdc24fdffa1ab58"
        ],
        [
            "exact: canRL negbK.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contra (c b : bool) : (c -> b) -> ~~ b -> ~~ c.",
            "VernacStartTheoremProof",
            "57dd398857313e1b82bb4b0ccd80788f32ac0f3a"
        ],
        [
            "by case: b => //; case: c.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition contraNN := contra.",
            "VernacDefinition",
            "f7e91e2a47590f91d81adff9b4cdb2e6c7d0e655"
        ],
        [
            "Lemma contraL (c b : bool) : (c -> ~~ b) -> b -> ~~ c.",
            "VernacStartTheoremProof",
            "c3a92b565714576b228b42836d0ab4b419203401"
        ],
        [
            "by case: b => //; case: c.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition contraTN := contraL.",
            "VernacDefinition",
            "5e43bc87acb8bd8af28dd611d487ee6c73b68ab2"
        ],
        [
            "Lemma contraR (c b : bool) : (~~ c -> b) -> ~~ b -> c.",
            "VernacStartTheoremProof",
            "867af6671c4a993e994098ab0f4004b77e11cd85"
        ],
        [
            "by case: b => //; case: c.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition contraNT := contraR.",
            "VernacDefinition",
            "56c46c9c5ab644d9f53dd76ed05b417902ed22c6"
        ],
        [
            "Lemma contraLR (c b : bool) : (~~ c -> ~~ b) -> b -> c.",
            "VernacStartTheoremProof",
            "8f9a60cce2f0c373bd6aec855523ed91806d9daa"
        ],
        [
            "by case: b => //; case: c.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition contraTT := contraLR.",
            "VernacDefinition",
            "05ab386dedae828690deaff70a6888ac80d47a58"
        ],
        [
            "Lemma contraT b : (~~ b -> false) -> b.",
            "VernacStartTheoremProof",
            "0e5677dc3adad5d9be8375cddb3e2029f020fd3e"
        ],
        [
            "by case: b => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma wlog_neg b : (~~ b -> b) -> b.",
            "VernacStartTheoremProof",
            "dd30df712b392bca7e911f9dd6f52e02013cef7c"
        ],
        [
            "by case: b => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contraFT (c b : bool) : (~~ c -> b) -> b = false -> c.",
            "VernacStartTheoremProof",
            "bcd17d97c9d1d2c9ab0aeb4b1005a4a26c5dccb1"
        ],
        [
            "by move/contraR=> notb_c /negbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contraFN (c b : bool) : (c -> b) -> b = false -> ~~ c.",
            "VernacStartTheoremProof",
            "a0e091e40fbda26bf80225dc75aab0cfc01074f9"
        ],
        [
            "by move/contra=> notb_notc /negbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contraTF (c b : bool) : (c -> ~~ b) -> b -> c = false.",
            "VernacStartTheoremProof",
            "32c080a8409d9b9eb7d4cd471ea07c2e7da3f8de"
        ],
        [
            "by move/contraL=> b_notc /b_notc/negbTE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contraNF (c b : bool) : (c -> b) -> ~~ b -> c = false.",
            "VernacStartTheoremProof",
            "475b63ac37976db277608cb00ee6c06c8b5ebd94"
        ],
        [
            "by move/contra=> notb_notc /notb_notc/negbTE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma contraFF (c b : bool) : (c -> b) -> b = false -> c = false.",
            "VernacStartTheoremProof",
            "4edbfdabe10c3bfdec9ef75095018ed87e320aeb"
        ],
        [
            "by move/contraFN=> bF_notc /bF_notc/negbTE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Coercion isSome T (u : option T) := if u is Some _ then true else false.",
            "VernacDefinition",
            "3d9045746070ad6e237e06d05bb0960992c32f1e"
        ],
        [
            "Coercion is_inl A B (u : A + B) := if u is inl _ then true else false.",
            "VernacDefinition",
            "64e60f468b3fe65027fdf2dded6e46b491c0cc70"
        ],
        [
            "Coercion is_left A B (u : {A} + {B}) := if u is left _ then true else false.",
            "VernacDefinition",
            "d6e3061dd0126a797a998604fe427217d4119ca5"
        ],
        [
            "Coercion is_inleft A B (u : A + {B}) := if u is inleft _ then true else false.",
            "VernacDefinition",
            "e07e58dc31b8ddfae234208da821bce0d42f25d9"
        ],
        [
            "Prenex Implicits isSome is_inl is_left is_inleft.",
            "VernacExtend",
            "113cfb4ada2a443b7b1a0f48f934bc2d9dd2f08f"
        ],
        [
            "Definition decidable P := {P} + {~ P}.",
            "VernacDefinition",
            "54867630a44017c6831794643d79456418f4060a"
        ],
        [
            "Section BoolIf.",
            "VernacBeginSection",
            "1884146abaa70dc93ab72c5357ee6fa6d0e3a323"
        ],
        [
            "Variables (A B : Type) (x : A) (f : A -> B) (b : bool) (vT vF : A).",
            "VernacAssumption",
            "2fb04dde7ddbc5559123642e193f3df487eb07eb"
        ],
        [
            "Variant if_spec (not_b : Prop) : bool -> A -> Set := | IfSpecTrue of b : if_spec not_b true vT | IfSpecFalse of not_b : if_spec not_b false vF.",
            "VernacInductive",
            "e6b4d2f3de9bb81dcd526d5051414e584bf26e70"
        ],
        [
            "Lemma ifP : if_spec (b = false) b (if b then vT else vF).",
            "VernacStartTheoremProof",
            "55530bc3e9d8a4b2b17915924a3ca739947f66b1"
        ],
        [
            "by case def_b: b; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ifPn : if_spec (~~ b) b (if b then vT else vF).",
            "VernacStartTheoremProof",
            "88a362e81d597e6f185870a769b8419cb3a99136"
        ],
        [
            "by case def_b: b; constructor; rewrite ?def_b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ifT : b -> (if b then vT else vF) = vT.",
            "VernacStartTheoremProof",
            "bc28e8d732d6ce25c061a96738a2a2412da89626"
        ],
        [
            "by move->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ifF : b = false -> (if b then vT else vF) = vF.",
            "VernacStartTheoremProof",
            "7dc2a86f338a80015656fc3bc1d4842bdce77ddc"
        ],
        [
            "by move->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ifN : ~~ b -> (if b then vT else vF) = vF.",
            "VernacStartTheoremProof",
            "0cb8fd14188805814959bcfc9b783092869fa229"
        ],
        [
            "by move/negbTE->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma if_same : (if b then vT else vT) = vT.",
            "VernacStartTheoremProof",
            "d0c653781f01b7c00dce2ccfcef30acd72c4ada6"
        ],
        [
            "by case b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma if_neg : (if ~~ b then vT else vF) = if b then vF else vT.",
            "VernacStartTheoremProof",
            "c5f991ba15b4cc09cac76d08dfdad6ad0dbe242e"
        ],
        [
            "by case b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fun_if : f (if b then vT else vF) = if b then f vT else f vF.",
            "VernacStartTheoremProof",
            "90e799cd71d0311a6db1e67b5d0275eebe9be15e"
        ],
        [
            "by case b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma if_arg (fT fF : A -> B) : (if b then fT else fF) x = if b then fT x else fF x.",
            "VernacStartTheoremProof",
            "13589b338dbd2508ecaeccdc24e59e9ade1a2103"
        ],
        [
            "by case b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition if_expr := if b then vT else vF.",
            "VernacDefinition",
            "5f6a0fa342f384c2469575cec23b69c8f9c4cf8a"
        ],
        [
            "Lemma ifE : (if b then vT else vF) = if_expr.",
            "VernacStartTheoremProof",
            "958a756877c0021664f0b71cbb2a2fe9b6aea43c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BoolIf.",
            "VernacEndSegment",
            "3cc86d1f8a9d7bf74a8dcf9fa33966bcf6acf6fd"
        ],
        [
            "Section ReflectCore.",
            "VernacBeginSection",
            "f70a533de478b0b133e7c419de0886f8428207cf"
        ],
        [
            "Variables (P Q : Prop) (b c : bool).",
            "VernacAssumption",
            "bb541a2694b93bfb403b128d0251722175119f86"
        ],
        [
            "Hypothesis Hb : reflect P b.",
            "VernacAssumption",
            "526383de6f0b908221f26566cf5925b19c1d961b"
        ],
        [
            "Lemma introNTF : (if c then ~ P else P) -> ~~ b = c.",
            "VernacStartTheoremProof",
            "9ec40d6c3871c75bd6a6f684246484636929f595"
        ],
        [
            "by case c; case Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma introTF : (if c then P else ~ P) -> b = c.",
            "VernacStartTheoremProof",
            "698a063aceb4df7d093e0da23cdb3de7c1687a02"
        ],
        [
            "by case c; case Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elimNTF : ~~ b = c -> if c then ~ P else P.",
            "VernacStartTheoremProof",
            "97241a22e3873113867f102299b41dd97d1aeda1"
        ],
        [
            "by move <-; case Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elimTF : b = c -> if c then P else ~ P.",
            "VernacStartTheoremProof",
            "407cd6301b07a971902e74c4b520e905d845dc35"
        ],
        [
            "by move <-; case Hb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equivPif : (Q -> P) -> (P -> Q) -> if b then Q else ~ Q.",
            "VernacStartTheoremProof",
            "696e8a1cf10b3458c814ef00cf67e95c28020c7b"
        ],
        [
            "by case Hb; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma xorPif : Q \\/ P -> ~ (Q /\\ P) -> if b then ~ Q else Q.",
            "VernacStartTheoremProof",
            "56d41eeec7ea619d4aec5ef61601e636b3e182d9"
        ],
        [
            "by case Hb => [? _ H ? | ? H _]; case: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ReflectCore.",
            "VernacEndSegment",
            "50a48f233df38781719c617bd879af26a7ad9f3e"
        ],
        [
            "Section ReflectNegCore.",
            "VernacBeginSection",
            "c066e9db5c7079280a4fc2c38fda11f5f39582b0"
        ],
        [
            "Variables (P Q : Prop) (b c : bool).",
            "VernacAssumption",
            "bb541a2694b93bfb403b128d0251722175119f86"
        ],
        [
            "Hypothesis Hb : reflect P (~~ b).",
            "VernacAssumption",
            "13e2d2c0faf9851165f10d012016c35b18cd5622"
        ],
        [
            "Lemma introTFn : (if c then ~ P else P) -> b = c.",
            "VernacStartTheoremProof",
            "0a1c4a5a4cc62fd79c69e35f452f521386ef53cb"
        ],
        [
            "by move/(introNTF Hb) <-; case b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elimTFn : b = c -> if c then ~ P else P.",
            "VernacStartTheoremProof",
            "bcd28a050cfadb269e92701990f185e6896fda8c"
        ],
        [
            "by move <-; apply: (elimNTF Hb); case b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equivPifn : (Q -> P) -> (P -> Q) -> if b then ~ Q else Q.",
            "VernacStartTheoremProof",
            "67e5d3e35330e577152654f562d64fe34b6fc50b"
        ],
        [
            "by rewrite -if_neg; apply: equivPif.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma xorPifn : Q \\/ P -> ~ (Q /\\ P) -> if b then Q else ~ Q.",
            "VernacStartTheoremProof",
            "0e6d1135bd690869901730630d2a7fe27bfb70f3"
        ],
        [
            "by rewrite -if_neg; apply: xorPif.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ReflectNegCore.",
            "VernacEndSegment",
            "99d833ae30459393acd3fdf0c04901058254a56a"
        ],
        [
            "Section Reflect.",
            "VernacBeginSection",
            "4ff8e4d77c71b7fb591018fbe172e5c20a4622c2"
        ],
        [
            "Variables (P Q : Prop) (b b' c : bool).",
            "VernacAssumption",
            "716317d094dde19975ba4d352a08aed14413dc9a"
        ],
        [
            "Hypotheses (Pb : reflect P b) (Pb' : reflect P (~~ b')).",
            "VernacAssumption",
            "1a5882ca6db03cd852a8a98fb76f7f0980b021a3"
        ],
        [
            "Lemma introT : P -> b.",
            "VernacStartTheoremProof",
            "d8375ced11f1cd31229ee999da2784b01b676aff"
        ],
        [
            "exact: introTF true _.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma introF : ~ P -> b = false.",
            "VernacStartTheoremProof",
            "b96a3655d5b09034aaf07e70c08f2f632f7cdd7c"
        ],
        [
            "exact: introTF false _.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma introN : ~ P -> ~~ b.",
            "VernacStartTheoremProof",
            "dc29e51cbfc782b9e3fff79f621775e50bf2e420"
        ],
        [
            "exact: introNTF true _.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma introNf : P -> ~~ b = false.",
            "VernacStartTheoremProof",
            "0bf50f0d292efae28401917dbc6ed07eca5ec743"
        ],
        [
            "exact: introNTF false _.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma introTn : ~ P -> b'.",
            "VernacStartTheoremProof",
            "fb9e98f90296a2048198cbc35fe51a4e783d2497"
        ],
        [
            "exact: introTFn true _.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma introFn : P -> b' = false.",
            "VernacStartTheoremProof",
            "843267c81422c70e22902d9d4e2b5a0e5cc7c75b"
        ],
        [
            "exact: introTFn false _.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elimT : b -> P.",
            "VernacStartTheoremProof",
            "9ff21cf6a6957abc8f6a1f6ab6aa517267907b13"
        ],
        [
            "exact: elimTF true _.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elimF : b = false -> ~ P.",
            "VernacStartTheoremProof",
            "ed103df8a36c73a9833ccce8d0a7076292eb8bba"
        ],
        [
            "exact: elimTF false _.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elimN : ~~ b -> ~P.",
            "VernacStartTheoremProof",
            "fa5965de5a64ccbddb7f8431ce084d871911b6f0"
        ],
        [
            "exact: elimNTF true _.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elimNf : ~~ b = false -> P.",
            "VernacStartTheoremProof",
            "782fec5988cd82bb28fb4cc2d86ba28ba2b0e0d4"
        ],
        [
            "exact: elimNTF false _.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elimTn : b' -> ~ P.",
            "VernacStartTheoremProof",
            "046c70cb02d8748c62195686371b48352f82dc3b"
        ],
        [
            "exact: elimTFn true _.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elimFn : b' = false -> P.",
            "VernacStartTheoremProof",
            "8c949689501f31dec7d8be3bdb027a4da2102f43"
        ],
        [
            "exact: elimTFn false _.",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma introP : (b -> Q) -> (~~ b -> ~ Q) -> reflect Q b.",
            "VernacStartTheoremProof",
            "e1a625112f9761bc1b902cd62f273bc7665a5ab0"
        ],
        [
            "by case b; constructor; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iffP : (P -> Q) -> (Q -> P) -> reflect Q b.",
            "VernacStartTheoremProof",
            "5d99e4605319e9d4f95790450e3bbcb81a290812"
        ],
        [
            "by case: Pb; constructor; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equivP : (P <-> Q) -> reflect Q b.",
            "VernacStartTheoremProof",
            "7f0c5992d421d376488d55dc23bc379fca18aa1f"
        ],
        [
            "by case; apply: iffP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sumboolP (decQ : decidable Q) : reflect Q decQ.",
            "VernacStartTheoremProof",
            "8710904a569d1be7aefb1932e1d2ed7aa3a18d62"
        ],
        [
            "by case: decQ; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma appP : reflect Q b -> P -> Q.",
            "VernacStartTheoremProof",
            "964749be3893c508a600184dda47ed6f60af6d68"
        ],
        [
            "by move=> Qb; move/introT; case: Qb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sameP : reflect P c -> b = c.",
            "VernacStartTheoremProof",
            "7724c516f7e641cb8dddd433972896c31a4e5381"
        ],
        [
            "by case; [apply: introT | apply: introF].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decPcases : if b then P else ~ P.",
            "VernacStartTheoremProof",
            "c4ae9c193eb9d4fe733a3d4b6ef85a0dc25de29c"
        ],
        [
            "by case Pb.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition decP : decidable P.",
            "VernacDefinition",
            "01d34f7482c0ce92f321526872c6a3750aae0788"
        ],
        [
            "by case: b decPcases; [left | right].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma rwP : P <-> b.",
            "VernacStartTheoremProof",
            "53627052ec0d743e908996b7a8767b9c061c8852"
        ],
        [
            "by split; [apply: introT | apply: elimT].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rwP2 : reflect Q b -> (P <-> Q).",
            "VernacStartTheoremProof",
            "0364b7a2191d3c2389496d8d1a90d7f4548e91b5"
        ],
        [
            "by move=> Qb; split=> ?; [apply: appP | apply: elimT; case: Qb].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant alt_spec : bool -> Type := | AltTrue of P : alt_spec true | AltFalse of ~~ b : alt_spec false.",
            "VernacInductive",
            "245f9953f23237d04ada21191b127423c026eb67"
        ],
        [
            "Lemma altP : alt_spec b.",
            "VernacStartTheoremProof",
            "9b5f7da8b001bca1e5cf6d48df9ff195fcd6a00d"
        ],
        [
            "by case def_b: b / Pb; constructor; rewrite ?def_b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Reflect.",
            "VernacEndSegment",
            "5ab20173d048621aa205184cb08f523410a2152a"
        ],
        [
            "Hint View for move/ elimTF|3 elimNTF|3 elimTFn|3 introT|2 introTn|2 introN|2.",
            "VernacExtend",
            "70c554d996926cf1a3601baaf052efadf81cb5d6"
        ],
        [
            "Hint View for apply/ introTF|3 introNTF|3 introTFn|3 elimT|2 elimTn|2 elimN|2.",
            "VernacExtend",
            "70c554d996926cf1a3601baaf052efadf81cb5d6"
        ],
        [
            "Hint View for apply// equivPif|3 xorPif|3 equivPifn|3 xorPifn|3.",
            "VernacExtend",
            "7c574212accfde44662066099df3e72c85419216"
        ],
        [
            "Coercion elimT : reflect >-> Funclass.",
            "VernacCoercion",
            "7dfc3cc8f81fefd82d5072941f84a1d596be6164"
        ],
        [
            "Variant implies P Q := Implies of P -> Q.",
            "VernacInductive",
            "6eb5d20ddd0fc50ec38ce8bc7df13fd415a6b6e4"
        ],
        [
            "Lemma impliesP P Q : implies P Q -> P -> Q.",
            "VernacStartTheoremProof",
            "7ba1e5b55ae2337a369365697f354d3401326a36"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma impliesPn (P Q : Prop) : implies P Q -> ~ Q -> ~ P.",
            "VernacStartTheoremProof",
            "58bae193d4d1f5c27df87d37ca8a3eca0a40549d"
        ],
        [
            "by case=> iP ? /iP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Coercion impliesP : implies >-> Funclass.",
            "VernacCoercion",
            "b411fe7f8d47817ca9ee8c5f1adac36fada4c085"
        ],
        [
            "Hint View for move/ impliesPn|2 impliesP|2.",
            "VernacExtend",
            "5874375f089a4f1b64528f8c635fb35daf6e73b5"
        ],
        [
            "Hint View for apply/ impliesPn|2 impliesP|2.",
            "VernacExtend",
            "5874375f089a4f1b64528f8c635fb35daf6e73b5"
        ],
        [
            "Definition unless condition property : Prop := forall goal : Prop, (condition -> goal) -> (property -> goal) -> goal.",
            "VernacDefinition",
            "90acf7bdb3e571f8923ff7322ffb2e6ac2a0dd14"
        ],
        [
            "Notation \"\\unless C , P\" := (unless C P) (at level 200, C at level 100, format \"'[' \\unless C , '/ ' P ']'\") : type_scope.",
            "VernacNotation",
            "3ebcb4124e1b8d11848140c604cd64b87a318083"
        ],
        [
            "Lemma unlessL C P : implies C (\\unless C, P).",
            "VernacStartTheoremProof",
            "609eeb67c8aa64be307929b1170402cb201f5bb3"
        ],
        [
            "by split=> hC G /(_ hC).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unlessR C P : implies P (\\unless C, P).",
            "VernacStartTheoremProof",
            "53aeb29886092b3cb96bd08a7c7c45c86074c19a"
        ],
        [
            "by split=> hP G _ /(_ hP).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unless_sym C P : implies (\\unless C, P) (\\unless P, C).",
            "VernacStartTheoremProof",
            "1ff709511bf54b06d20897c7596d3d29a40fdb1d"
        ],
        [
            "by split; apply; [apply/unlessR | apply/unlessL].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unlessP (C P : Prop) : (\\unless C, P) <-> C \\/ P.",
            "VernacStartTheoremProof",
            "5c0ee72a2ab26ee364d88798c711fdd8a0c930f7"
        ],
        [
            "by split=> [|[/unlessL | /unlessR]]; apply; [left | right].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bind_unless C P {Q} : implies (\\unless C, P) (\\unless (\\unless C, Q), P).",
            "VernacStartTheoremProof",
            "7d900392e04d4e4f1d4abb286afff5d0fd660243"
        ],
        [
            "by split; apply=> [hC|hP]; [apply/unlessL/unlessL | apply/unlessR].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unless_contra b C : implies (~~ b -> C) (\\unless C, b).",
            "VernacStartTheoremProof",
            "4facf5ce49546e6a027fad57d778fc174a3576d7"
        ],
        [
            "by split; case: b => [_ | hC]; [apply/unlessR | apply/unlessL/hC].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition classically P : Prop := forall b : bool, (P -> b) -> b.",
            "VernacDefinition",
            "d8d59825825ab77d80f7d22fcdbb28ace59f7d95"
        ],
        [
            "Lemma classicP (P : Prop) : classically P <-> ~ ~ P.",
            "VernacStartTheoremProof",
            "c3cdc82921ad33921e56afcfc241dce21baa9981"
        ],
        [
            "split=> [cP nP | nnP [] // nP]; last by case nnP; move/nP.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by have: P -> false; [move/nP | move/cP].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma classicW P : P -> classically P.",
            "VernacStartTheoremProof",
            "1a80952d574b4e38c6e9e118da9de9106eaae98f"
        ],
        [
            "by move=> hP _ ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma classic_bind P Q : (P -> classically Q) -> classically P -> classically Q.",
            "VernacStartTheoremProof",
            "b3730293c0fd9cbe25be8b8bc9eb693165f20512"
        ],
        [
            "by move=> iPQ cP b /iPQ-/cP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma classic_EM P : classically (decidable P).",
            "VernacStartTheoremProof",
            "a99bdf81bb881644f3ea0a52b54fe5ea356554cd"
        ],
        [
            "by case=> // undecP; apply/undecP; right=> notP; apply/notF/undecP; left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma classic_pick T P : classically ({x : T | P x} + (forall x, ~ P x)).",
            "VernacStartTheoremProof",
            "c95c9c0ff1d7351754ce23c26daf0c7c0f15e6f4"
        ],
        [
            "case=> // undecP; apply/undecP; right=> x Px.",
            "VernacExtend",
            "58168c4367f5c8fd5aef7600205b564e8c5f4f4d"
        ],
        [
            "by apply/notF/undecP; left; exists x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma classic_imply P Q : (P -> classically Q) -> classically (P -> Q).",
            "VernacStartTheoremProof",
            "86f60cec6c4fcfd5e673932877b9f2bc950acfc0"
        ],
        [
            "move=> iPQ []// notPQ; apply/notPQ=> /iPQ-cQ.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by case: notF; apply: cQ => hQ; apply: notPQ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive and3 (P1 P2 P3 : Prop) : Prop := And3 of P1 & P2 & P3.",
            "VernacInductive",
            "c97bbc6f60a3d7966e15991062745faedb164d46"
        ],
        [
            "Inductive and4 (P1 P2 P3 P4 : Prop) : Prop := And4 of P1 & P2 & P3 & P4.",
            "VernacInductive",
            "bf1d0fb61e9baf4838951e6e4d3c4d0cec418541"
        ],
        [
            "Inductive and5 (P1 P2 P3 P4 P5 : Prop) : Prop := And5 of P1 & P2 & P3 & P4 & P5.",
            "VernacInductive",
            "b91957d8c369dd1058a3452cf62199f69c059083"
        ],
        [
            "Inductive or3 (P1 P2 P3 : Prop) : Prop := Or31 of P1 | Or32 of P2 | Or33 of P3.",
            "VernacInductive",
            "9a5e47d24808037bffd5c68041de9450ca8207b8"
        ],
        [
            "Inductive or4 (P1 P2 P3 P4 : Prop) : Prop := Or41 of P1 | Or42 of P2 | Or43 of P3 | Or44 of P4.",
            "VernacInductive",
            "0cedb6ac21938617a488795947ed48c82dee5cd7"
        ],
        [
            "Notation \"[ /\\ P1 & P2 ]\" := (and P1 P2) (only parsing) : type_scope.",
            "VernacNotation",
            "93c1a128819ccb34fffcb749c0cb9baab78a70b5"
        ],
        [
            "Notation \"[ /\\ P1 , P2 & P3 ]\" := (and3 P1 P2 P3) : type_scope.",
            "VernacNotation",
            "e4101f4c0c860ac997954df9e0fb64d26f6bf255"
        ],
        [
            "Notation \"[ /\\ P1 , P2 , P3 & P4 ]\" := (and4 P1 P2 P3 P4) : type_scope.",
            "VernacNotation",
            "b2ba8355b71f4aef8ddd913a871564faee234918"
        ],
        [
            "Notation \"[ /\\ P1 , P2 , P3 , P4 & P5 ]\" := (and5 P1 P2 P3 P4 P5) : type_scope.",
            "VernacNotation",
            "e9f64a18915b25ef6302ee115ad3d3e719e85343"
        ],
        [
            "Notation \"[ \\/ P1 | P2 ]\" := (or P1 P2) (only parsing) : type_scope.",
            "VernacNotation",
            "ef9c0c12dbd1f40196b8ef77c0d713593e2099cc"
        ],
        [
            "Notation \"[ \\/ P1 , P2 | P3 ]\" := (or3 P1 P2 P3) : type_scope.",
            "VernacNotation",
            "d00e59b39696a912d5e5be8d6722a7ce4816bf87"
        ],
        [
            "Notation \"[ \\/ P1 , P2 , P3 | P4 ]\" := (or4 P1 P2 P3 P4) : type_scope.",
            "VernacNotation",
            "5a85afdebcc8142760187ed92066d3fa55949768"
        ],
        [
            "Notation \"[ && b1 & c ]\" := (b1 && c) (only parsing) : bool_scope.",
            "VernacNotation",
            "38563427e6fada1170cc5e3a792e34b7040e82c7"
        ],
        [
            "Notation \"[ && b1 , b2 , .. , bn & c ]\" := (b1 && (b2 && .. (bn && c) .. )) : bool_scope.",
            "VernacNotation",
            "7d543e2ecb9f8c281028b17fd1514ae5f17049c1"
        ],
        [
            "Notation \"[ || b1 | c ]\" := (b1 || c) (only parsing) : bool_scope.",
            "VernacNotation",
            "5a5203cc15925c854eb4b958b77608726fd809c5"
        ],
        [
            "Notation \"[ || b1 , b2 , .. , bn | c ]\" := (b1 || (b2 || .. (bn || c) .. )) : bool_scope.",
            "VernacNotation",
            "adf3631d9656ec24880d29639a78df9d8aa7e799"
        ],
        [
            "Notation \"[ ==> b1 , b2 , .. , bn => c ]\" := (b1 ==> (b2 ==> .. (bn ==> c) .. )) : bool_scope.",
            "VernacNotation",
            "bde0300313dac36af637e33aba9ef2185e222d48"
        ],
        [
            "Notation \"[ ==> b1 => c ]\" := (b1 ==> c) (only parsing) : bool_scope.",
            "VernacNotation",
            "f29288f64c66aecec1d2f573d453a4f0124911d1"
        ],
        [
            "Section AllAnd.",
            "VernacBeginSection",
            "c3c2fced82795472ee1edb6892946c77ae494c95"
        ],
        [
            "Variables (T : Type) (P1 P2 P3 P4 P5 : T -> Prop).",
            "VernacAssumption",
            "88e8fd38a67c15145636c705a6b2f2423e48def3"
        ],
        [
            "Local Notation a P := (forall x, P x).",
            "VernacSyntacticDefinition",
            "ca739271c3bc2483ff3eb0a6a147ef219aa5170e"
        ],
        [
            "Lemma all_and2 : implies (forall x, [/\\ P1 x & P2 x]) [/\\ a P1 & a P2].",
            "VernacStartTheoremProof",
            "477f3acbc20d6ce7cc446dc57b4c0491ad555901"
        ],
        [
            "by split=> haveP; split=> x; case: (haveP x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_and3 : implies (forall x, [/\\ P1 x, P2 x & P3 x]) [/\\ a P1, a P2 & a P3].",
            "VernacStartTheoremProof",
            "c6c024dee56f89a07d47e7c998520281005dd705"
        ],
        [
            "by split=> haveP; split=> x; case: (haveP x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_and4 : implies (forall x, [/\\ P1 x, P2 x, P3 x & P4 x]) [/\\ a P1, a P2, a P3 & a P4].",
            "VernacStartTheoremProof",
            "edddda8ca4f8083e8bfd3a1a119587d8f19b3d3e"
        ],
        [
            "by split=> haveP; split=> x; case: (haveP x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_and5 : implies (forall x, [/\\ P1 x, P2 x, P3 x, P4 x & P5 x]) [/\\ a P1, a P2, a P3, a P4 & a P5].",
            "VernacStartTheoremProof",
            "adebbb2da438027493cbb28f46d159ff779c51c8"
        ],
        [
            "by split=> haveP; split=> x; case: (haveP x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End AllAnd.",
            "VernacEndSegment",
            "15beabf5d8185ffbe018e39bcd2e7a272e878245"
        ],
        [
            "Arguments all_and2 {T P1 P2}.",
            "VernacArguments",
            "ba9dcaf93ade8c21603099edd97113debfd85ff6"
        ],
        [
            "Arguments all_and3 {T P1 P2 P3}.",
            "VernacArguments",
            "3b31d984b58a339b4de90c52c26b58a0eb02eb67"
        ],
        [
            "Arguments all_and4 {T P1 P2 P3 P4}.",
            "VernacArguments",
            "ba67fee440683a2958e87ecbc26332ca04fbc09e"
        ],
        [
            "Arguments all_and5 {T P1 P2 P3 P4 P5}.",
            "VernacArguments",
            "3a5f1736f7a5083bbd5d72cdefc2f8144a5d51fd"
        ],
        [
            "Lemma pair_andP P Q : P /\\ Q <-> P * Q.",
            "VernacStartTheoremProof",
            "ddccb2774cb91732322ec23d6cf6268a116da91b"
        ],
        [
            "by split; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section ReflectConnectives.",
            "VernacBeginSection",
            "02f0c4f6eee9257dbdbf8211bfe308231ac2ac4e"
        ],
        [
            "Variable b1 b2 b3 b4 b5 : bool.",
            "VernacAssumption",
            "50833d5fa40f9c7b833e4ff57938517502fcab59"
        ],
        [
            "Lemma idP : reflect b1 b1.",
            "VernacStartTheoremProof",
            "def4d12a99447f4f66b2e3431d760b0355554f6b"
        ],
        [
            "by case b1; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma boolP : alt_spec b1 b1 b1.",
            "VernacStartTheoremProof",
            "b0caddc57d7c00caed2002ba508920b818d05e23"
        ],
        [
            "exact: (altP idP).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma idPn : reflect (~~ b1) (~~ b1).",
            "VernacStartTheoremProof",
            "19484bab305701e7589d42b8ba36d36c447afd2a"
        ],
        [
            "by case b1; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negP : reflect (~ b1) (~~ b1).",
            "VernacStartTheoremProof",
            "b49ddb54635e022b318fc767ea4c18283bc67497"
        ],
        [
            "by case b1; constructor; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negPn : reflect b1 (~~ ~~ b1).",
            "VernacStartTheoremProof",
            "9b0e1f6a281e7b979b58d4abcc7eefa3634064ec"
        ],
        [
            "by case b1; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negPf : reflect (b1 = false) (~~ b1).",
            "VernacStartTheoremProof",
            "ddeed33c00e6a8a97f00b57b3e0c20572a4ef9ce"
        ],
        [
            "by case b1; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andP : reflect (b1 /\\ b2) (b1 && b2).",
            "VernacStartTheoremProof",
            "bc29abbb111eb70f941c66131efd26c5f5914010"
        ],
        [
            "by case b1; case b2; constructor=> //; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma and3P : reflect [/\\ b1, b2 & b3] [&& b1, b2 & b3].",
            "VernacStartTheoremProof",
            "3cff580fa217d74fc54d6f172587eb4f7ced5227"
        ],
        [
            "by case b1; case b2; case b3; constructor; try by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma and4P : reflect [/\\ b1, b2, b3 & b4] [&& b1, b2, b3 & b4].",
            "VernacStartTheoremProof",
            "8cc8406d7117e1e22355187c4a9f80bea94dae40"
        ],
        [
            "by case b1; case b2; case b3; case b4; constructor; try by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma and5P : reflect [/\\ b1, b2, b3, b4 & b5] [&& b1, b2, b3, b4 & b5].",
            "VernacStartTheoremProof",
            "960801847edd6268fc0c27e3e31270ea92bacdbe"
        ],
        [
            "by case b1; case b2; case b3; case b4; case b5; constructor; try by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orP : reflect (b1 \\/ b2) (b1 || b2).",
            "VernacStartTheoremProof",
            "5c0161ae9b4a534575cdcb79aeb015843a925829"
        ],
        [
            "by case b1; case b2; constructor; auto; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or3P : reflect [\\/ b1, b2 | b3] [|| b1, b2 | b3].",
            "VernacStartTheoremProof",
            "c59861d5689dfb9238d8d93006345baead4e23fe"
        ],
        [
            "case b1; first by constructor; constructor 1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b2; first by constructor; constructor 2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b3; first by constructor; constructor 3.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by constructor; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or4P : reflect [\\/ b1, b2, b3 | b4] [|| b1, b2, b3 | b4].",
            "VernacStartTheoremProof",
            "7199ed95b65f635b63118a5bbce0d1a0cbe59daf"
        ],
        [
            "case b1; first by constructor; constructor 1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b2; first by constructor; constructor 2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b3; first by constructor; constructor 3.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case b4; first by constructor; constructor 4.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by constructor; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nandP : reflect (~~ b1 \\/ ~~ b2) (~~ (b1 && b2)).",
            "VernacStartTheoremProof",
            "8f439f29fe440778758c17b46baa2bffb0ed72b9"
        ],
        [
            "by case b1; case b2; constructor; auto; case; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norP : reflect (~~ b1 /\\ ~~ b2) (~~ (b1 || b2)).",
            "VernacStartTheoremProof",
            "32ba85e223947f50de0d615a009d63e16bea59c9"
        ],
        [
            "by case b1; case b2; constructor; auto; case; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma implyP : reflect (b1 -> b2) (b1 ==> b2).",
            "VernacStartTheoremProof",
            "4832ef923f4d1e18e1093f577d17bc01653a9c07"
        ],
        [
            "by case b1; case b2; constructor; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ReflectConnectives.",
            "VernacEndSegment",
            "6ab67952e45b808517773c4b3855540440e05eed"
        ],
        [
            "Arguments idP [b1].",
            "VernacArguments",
            "0744146a4503302aa959344aac020f63dd415093"
        ],
        [
            "Arguments idPn [b1].",
            "VernacArguments",
            "d3f7b237e93068a4973f35e08ca84c85e4125f0f"
        ],
        [
            "Arguments negP [b1].",
            "VernacArguments",
            "d8efafb6b4ecfc1ea20288c05c089e5f3fc3dffe"
        ],
        [
            "Arguments negPn [b1].",
            "VernacArguments",
            "868fcb9ac3fe790466ee6c8e7a8098559f2976f0"
        ],
        [
            "Arguments negPf [b1].",
            "VernacArguments",
            "aa4d19fdc099b0a4576b1cfb791ac913abb62f49"
        ],
        [
            "Arguments andP [b1 b2].",
            "VernacArguments",
            "076a55b92df9a9af43d07eb087f24b4c945c5a5e"
        ],
        [
            "Arguments and3P [b1 b2 b3].",
            "VernacArguments",
            "d1baddc69b1d307e8e254193328ac11560d4f136"
        ],
        [
            "Arguments and4P [b1 b2 b3 b4].",
            "VernacArguments",
            "6c5d67f921880800ab41575ade9cdf4f26cd77ca"
        ],
        [
            "Arguments and5P [b1 b2 b3 b4 b5].",
            "VernacArguments",
            "4e2a2617b26f2b1e96d9982d93b1a232937a1775"
        ],
        [
            "Arguments orP [b1 b2].",
            "VernacArguments",
            "7cc1a80531a181831d850aa96c0ae3558ddda99f"
        ],
        [
            "Arguments or3P [b1 b2 b3].",
            "VernacArguments",
            "d6b0e50df6b4bcb89030365c9521405068045315"
        ],
        [
            "Arguments or4P [b1 b2 b3 b4].",
            "VernacArguments",
            "c40cf81b9206757d6580c6c1a6fef2484419b6ae"
        ],
        [
            "Arguments nandP [b1 b2].",
            "VernacArguments",
            "1e0073f695656164a6227433b15b76aed535f0ab"
        ],
        [
            "Arguments norP [b1 b2].",
            "VernacArguments",
            "05571a580d13412a5e14b4306804eab4c472a914"
        ],
        [
            "Arguments implyP [b1 b2].",
            "VernacArguments",
            "f140ed29e3cf3f2ed352909fa4d677c4c7b07256"
        ],
        [
            "Prenex Implicits idP idPn negP negPn negPf.",
            "VernacExtend",
            "2b800ed0dc8d3fe19e949a80d3ad7faa5ac84296"
        ],
        [
            "Prenex Implicits andP and3P and4P and5P orP or3P or4P nandP norP implyP.",
            "VernacExtend",
            "fb22189d80f6d5c28e28ffb14a367802fb3edfea"
        ],
        [
            "Lemma andTb : left_id true andb.",
            "VernacStartTheoremProof",
            "1e116b2a403b8a79958942bc1460547553608b8e"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andFb : left_zero false andb.",
            "VernacStartTheoremProof",
            "0508653d2d7f8f7708a5d5d40497fd11679f3883"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andbT : right_id true andb.",
            "VernacStartTheoremProof",
            "44edbf30a418c4c7504204de1b61b6586f01221c"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andbF : right_zero false andb.",
            "VernacStartTheoremProof",
            "551d88272b96f040833880352e2dd69746d707ab"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andbb : idempotent andb.",
            "VernacStartTheoremProof",
            "d11147a4323169bf7dc9995bde39fe1637b98108"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andbC : commutative andb.",
            "VernacStartTheoremProof",
            "3ade399cc887206683fad4deb45f7b9cf6593398"
        ],
        [
            "by do 2!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andbA : associative andb.",
            "VernacStartTheoremProof",
            "1aff604c938dfe80f0187aac2315a5459fa27635"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andbCA : left_commutative andb.",
            "VernacStartTheoremProof",
            "d5a9f0fac592efe839cca9b6c949af1c2d0b997e"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andbAC : right_commutative andb.",
            "VernacStartTheoremProof",
            "6033d26ee630abee3e551c7cf73c9325fec855fd"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andbACA : interchange andb andb.",
            "VernacStartTheoremProof",
            "478f8fd19f1f3aec3385b4c179106f1b34e4fed3"
        ],
        [
            "by do 4!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orTb : forall b, true || b.",
            "VernacStartTheoremProof",
            "84f32338bfe5701ef5784c3a6dd0fdeed60f2816"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orFb : left_id false orb.",
            "VernacStartTheoremProof",
            "caa6c512e4dedbf1c7d4b055942d9e2de16b95b8"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbT : forall b, b || true.",
            "VernacStartTheoremProof",
            "d308bafa64296efe636d06fefb1e64876fd2acc4"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbF : right_id false orb.",
            "VernacStartTheoremProof",
            "854ca7ec3b62f1aaf64a76444079bf4dd0fd1b3e"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbb : idempotent orb.",
            "VernacStartTheoremProof",
            "4d4dbc148a785b74cf6650a44f2b9fcf2ceaddc2"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbC : commutative orb.",
            "VernacStartTheoremProof",
            "5ded269f5b4cd8b27fd9e0fa2082b277c443ecea"
        ],
        [
            "by do 2!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbA : associative orb.",
            "VernacStartTheoremProof",
            "0475b122e98ee5f8961f5adf8946470668434d2e"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbCA : left_commutative orb.",
            "VernacStartTheoremProof",
            "7e71348c39a95e590f805a9a78dad34e23c5759c"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbAC : right_commutative orb.",
            "VernacStartTheoremProof",
            "f5aabb561d50b8cbb9cff8d6bb061feada01c8ee"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbACA : interchange orb orb.",
            "VernacStartTheoremProof",
            "eab9e1d3024d06dfe6d2c2450761be4ba381284e"
        ],
        [
            "by do 4!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andbN b : b && ~~ b = false.",
            "VernacStartTheoremProof",
            "bcf7c38461edcca540ccd0fe814d92800b10e63f"
        ],
        [
            "by case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andNb b : ~~ b && b = false.",
            "VernacStartTheoremProof",
            "12acb188e028a44112f11cf9c59288e1469629d1"
        ],
        [
            "by case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbN b : b || ~~ b = true.",
            "VernacStartTheoremProof",
            "229d16a6ee51eed3c71b63314828120be0c22f71"
        ],
        [
            "by case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orNb b : ~~ b || b = true.",
            "VernacStartTheoremProof",
            "cadd3f4d374a5662b5a8df3c7f43feda527272de"
        ],
        [
            "by case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andb_orl : left_distributive andb orb.",
            "VernacStartTheoremProof",
            "71cd4d91f35b04ee5628e85661deafea02eb9753"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andb_orr : right_distributive andb orb.",
            "VernacStartTheoremProof",
            "4b2ae08c26a19b0d705ebe04e28bf401caf113f8"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orb_andl : left_distributive orb andb.",
            "VernacStartTheoremProof",
            "9ed2f4235ea5467dd5d3060babce33615c42180d"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orb_andr : right_distributive orb andb.",
            "VernacStartTheoremProof",
            "7607ec1bae4cb47fabc5bce411511c8aad41f6bf"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andb_idl (a b : bool) : (b -> a) -> a && b = b.",
            "VernacStartTheoremProof",
            "6f11f2b4071963629c8a1468c981d81ac51bb8f3"
        ],
        [
            "by case: a; case: b => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andb_idr (a b : bool) : (a -> b) -> a && b = a.",
            "VernacStartTheoremProof",
            "8f745a3416fee97d963479a6dbd9fbb8b1b77c88"
        ],
        [
            "by case: a; case: b => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andb_id2l (a b c : bool) : (a -> b = c) -> a && b = a && c.",
            "VernacStartTheoremProof",
            "50c2b7f6292e767313bedee1602818ae7f5f4c4f"
        ],
        [
            "by case: a; case: b; case: c => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andb_id2r (a b c : bool) : (b -> a = c) -> a && b = c && b.",
            "VernacStartTheoremProof",
            "be21d8fdfacb50bbb0663a19fe1de3faf1631857"
        ],
        [
            "by case: a; case: b; case: c => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orb_idl (a b : bool) : (a -> b) -> a || b = b.",
            "VernacStartTheoremProof",
            "8883f02973e2c6b1b7d4b6d7b77105c45b7fbaa4"
        ],
        [
            "by case: a; case: b => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orb_idr (a b : bool) : (b -> a) -> a || b = a.",
            "VernacStartTheoremProof",
            "daa2ed82c45ec282429d81d5735394a3a8789fc0"
        ],
        [
            "by case: a; case: b => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orb_id2l (a b c : bool) : (~~ a -> b = c) -> a || b = a || c.",
            "VernacStartTheoremProof",
            "f97adf933e18e58052ea0bdae0d9e521a6cac1ce"
        ],
        [
            "by case: a; case: b; case: c => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orb_id2r (a b c : bool) : (~~ b -> a = c) -> a || b = c || b.",
            "VernacStartTheoremProof",
            "f922dffa9053103f425b52710246b9d534060cce"
        ],
        [
            "by case: a; case: b; case: c => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negb_and (a b : bool) : ~~ (a && b) = ~~ a || ~~ b.",
            "VernacStartTheoremProof",
            "936b0b80d0e0e7fb1ea9b4fd9da452ead2d98f03"
        ],
        [
            "by case: a; case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negb_or (a b : bool) : ~~ (a || b) = ~~ a && ~~ b.",
            "VernacStartTheoremProof",
            "93eea5e57d168f0114bb27da000a9cc45c37ff0f"
        ],
        [
            "by case: a; case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andbK a b : a && b || a = a.",
            "VernacStartTheoremProof",
            "17a8201655cc861fb36790c93155eac496b24c75"
        ],
        [
            "by case: a; case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andKb a b : a || b && a = a.",
            "VernacStartTheoremProof",
            "06f508b940d905c6ff44faaffea1302e54f4fb0f"
        ],
        [
            "by case: a; case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orbK a b : (a || b) && a = a.",
            "VernacStartTheoremProof",
            "4ee1218c237ccd6ecc6911646da8675435c67ef6"
        ],
        [
            "by case: a; case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orKb a b : a && (b || a) = a.",
            "VernacStartTheoremProof",
            "2ac6c01d940c026a4b60d7a5fad7c95216c4201d"
        ],
        [
            "by case: a; case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma implybT b : b ==> true.",
            "VernacStartTheoremProof",
            "54259f6805309fc999d3d1c4863bbd6ac648158d"
        ],
        [
            "by case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma implybF b : (b ==> false) = ~~ b.",
            "VernacStartTheoremProof",
            "c7e7cf8cd82261ebc84bf305bccbd6f6853d4e31"
        ],
        [
            "by case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma implyFb b : false ==> b.",
            "VernacStartTheoremProof",
            "4c155fed23725d6f13be291b5f7ed7cba0c63511"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma implyTb b : (true ==> b) = b.",
            "VernacStartTheoremProof",
            "88db9d1593024cd50352201f59216b9f7d400739"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma implybb b : b ==> b.",
            "VernacStartTheoremProof",
            "35c699cc08a14b42bcbe396fccbeffab5198c0b5"
        ],
        [
            "by case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negb_imply a b : ~~ (a ==> b) = a && ~~ b.",
            "VernacStartTheoremProof",
            "9a13331781f85166420f893d5c6f85b903796a6d"
        ],
        [
            "by case: a; case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma implybE a b : (a ==> b) = ~~ a || b.",
            "VernacStartTheoremProof",
            "37b6220adc76b52a850220998a2675c8c5500ae4"
        ],
        [
            "by case: a; case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma implyNb a b : (~~ a ==> b) = a || b.",
            "VernacStartTheoremProof",
            "df694c6e4cfecd66ea8b1878b7af21020ab44324"
        ],
        [
            "by case: a; case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma implybN a b : (a ==> ~~ b) = (b ==> ~~ a).",
            "VernacStartTheoremProof",
            "6b48cccd949ab41c8dc3c44d7f1830e43d31bbcf"
        ],
        [
            "by case: a; case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma implybNN a b : (~~ a ==> ~~ b) = b ==> a.",
            "VernacStartTheoremProof",
            "13fd19e94ba4dfc6dbee38466ae0ac2afe9c5147"
        ],
        [
            "by case: a; case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma implyb_idl (a b : bool) : (~~ a -> b) -> (a ==> b) = b.",
            "VernacStartTheoremProof",
            "803acae761adb1b14023379a3c487039d4c53247"
        ],
        [
            "by case: a; case: b => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma implyb_idr (a b : bool) : (b -> ~~ a) -> (a ==> b) = ~~ a.",
            "VernacStartTheoremProof",
            "c755f29d42278fcfd698ba4cfd98225b68b1f1fd"
        ],
        [
            "by case: a; case: b => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma implyb_id2l (a b c : bool) : (a -> b = c) -> (a ==> b) = (a ==> c).",
            "VernacStartTheoremProof",
            "3da250b6f90f55e1e4927f23e206c75ca72a9ddb"
        ],
        [
            "by case: a; case: b; case: c => // ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addFb : left_id false addb.",
            "VernacStartTheoremProof",
            "094d6640d6f2ce4fa5ff4434736b372f7767ad08"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addbF : right_id false addb.",
            "VernacStartTheoremProof",
            "9c52c79d31d5ddfb81910c5b9b38bf1a1c017e31"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addbb : self_inverse false addb.",
            "VernacStartTheoremProof",
            "1ce435c6d090eee99ba913faac15b559337a58eb"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addbC : commutative addb.",
            "VernacStartTheoremProof",
            "e083283eeaaa2c3aa6ae83a9e4dda2df049ad9d9"
        ],
        [
            "by do 2!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addbA : associative addb.",
            "VernacStartTheoremProof",
            "bece588a9200df5c21f1d9cae5e65c6a7c835924"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addbCA : left_commutative addb.",
            "VernacStartTheoremProof",
            "656e3c3dd71d0d6a166d80c23c00d20425b175da"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addbAC : right_commutative addb.",
            "VernacStartTheoremProof",
            "550b17ac020c50824255902797e0b73f8f883dc1"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addbACA : interchange addb addb.",
            "VernacStartTheoremProof",
            "1d4e95d849d94b1ba8412c0ee3068624c0ddd09f"
        ],
        [
            "by do 4!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andb_addl : left_distributive andb addb.",
            "VernacStartTheoremProof",
            "727376dd5f9458db540a40833942338598b29cbd"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma andb_addr : right_distributive andb addb.",
            "VernacStartTheoremProof",
            "345827ebd7d3496e0ef05dffe8f5881728be242d"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addKb : left_loop id addb.",
            "VernacStartTheoremProof",
            "5b93bae49142e0d4a4526744bb5159c0ef5cdb74"
        ],
        [
            "by do 2!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addbK : right_loop id addb.",
            "VernacStartTheoremProof",
            "fe0cbd727d77c1b30d690189a96e188012eb5f3d"
        ],
        [
            "by do 2!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addIb : left_injective addb.",
            "VernacStartTheoremProof",
            "322fd6ce94927a156e5cdf88058012cd810a81cd"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addbI : right_injective addb.",
            "VernacStartTheoremProof",
            "91e94749d55d8f0ec30bd601ae0897ff6d571a92"
        ],
        [
            "by do 3!case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addTb b : true (+) b = ~~ b.",
            "VernacStartTheoremProof",
            "41e87f65196525213ffbd68e2af340cc5491842c"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addbT b : b (+) true = ~~ b.",
            "VernacStartTheoremProof",
            "aa51c00624eceb4cdc0b69ab3b84d4b917fe1cbe"
        ],
        [
            "by case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addbN a b : a (+) ~~ b = ~~ (a (+) b).",
            "VernacStartTheoremProof",
            "7517ebad10b298c2e87c112e77b91c17f6638dd7"
        ],
        [
            "by case: a; case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addNb a b : ~~ a (+) b = ~~ (a (+) b).",
            "VernacStartTheoremProof",
            "e125e9c7416bd499d2cee6a08ff56e353276a780"
        ],
        [
            "by case: a; case: b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma addbP a b : reflect (~~ a = b) (a (+) b).",
            "VernacStartTheoremProof",
            "bc23fea39cdf5e0c71a89e702efa4c160b7a0502"
        ],
        [
            "by case: a; case: b; constructor.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments addbP [a b].",
            "VernacArguments",
            "bd78c27ba495c7915da5bd500db2ae38133be2bd"
        ],
        [
            "Ltac bool_congr := match goal with | |- (?X1 && ?X2 = ?X3) => first [ symmetry; rewrite -1?(andbC X1) -?(andbCA X1); congr 1 (andb X1); symmetry | case: (X1); [ rewrite ?andTb ?andbT // | by rewrite ?andbF /= ] ] | |- (?X1 || ?X2 = ?X3) => first [ symmetry; rewrite -1?(orbC X1) -?(orbCA X1); congr 1 (orb X1); symmetry | case: (X1); [ by rewrite ?orbT //= | rewrite ?orFb ?orbF ] ] | |- (?X1 (+) ?X2 = ?X3) => symmetry; rewrite -1?(addbC X1) -?(addbCA X1); congr 1 (addb X1); symmetry | |- (~~ ?X1 = ?X2) => congr 1 negb end.",
            "VernacExtend",
            "1cd14faa1826c267fd3bcb731e5053c75f02403a"
        ],
        [
            "Definition pred T := T -> bool.",
            "VernacDefinition",
            "4d13fd1d98a3eed0557109cd13473a30d998dfb8"
        ],
        [
            "Identity Coercion fun_of_pred : pred >-> Funclass.",
            "VernacIdentityCoercion",
            "8675f3fa86ebf4d58295046a535f093e5f673962"
        ],
        [
            "Definition rel T := T -> pred T.",
            "VernacDefinition",
            "0aae7dc7ba8f4858b8762a4e3409905bd343df4a"
        ],
        [
            "Identity Coercion fun_of_rel : rel >-> Funclass.",
            "VernacIdentityCoercion",
            "e51400ccbfdd04685e5e9924a54f82ccf2b482e8"
        ],
        [
            "Notation xpred0 := (fun _ => false).",
            "VernacSyntacticDefinition",
            "b58104f9628fa7d20cf8342baa1c6ea18b4e9f18"
        ],
        [
            "Notation xpredT := (fun _ => true).",
            "VernacSyntacticDefinition",
            "190af83db70f423f2c7a624e7540be974e4aea9f"
        ],
        [
            "Notation xpredI := (fun (p1 p2 : pred _) x => p1 x && p2 x).",
            "VernacSyntacticDefinition",
            "1a2265399e25c43d66d843bc206c55d71dae1233"
        ],
        [
            "Notation xpredU := (fun (p1 p2 : pred _) x => p1 x || p2 x).",
            "VernacSyntacticDefinition",
            "6fcc573e2b5d5d3c14ff3a10822f96aaaa04686f"
        ],
        [
            "Notation xpredC := (fun (p : pred _) x => ~~ p x).",
            "VernacSyntacticDefinition",
            "cb9e7dcf8da43fd1b48121acb50a097eb8dd78dc"
        ],
        [
            "Notation xpredD := (fun (p1 p2 : pred _) x => ~~ p2 x && p1 x).",
            "VernacSyntacticDefinition",
            "c6a9be02ea4446fdb3d8f7608647a6f83c41472b"
        ],
        [
            "Notation xpreim := (fun f (p : pred _) x => p (f x)).",
            "VernacSyntacticDefinition",
            "15f0f41bdb7244608a43642640d195ae3bb67e6c"
        ],
        [
            "Notation xrelU := (fun (r1 r2 : rel _) x y => r1 x y || r2 x y).",
            "VernacSyntacticDefinition",
            "5adc07a942c8cae4757eb1590d406e2c627027db"
        ],
        [
            "Section Predicates.",
            "VernacBeginSection",
            "9df9f8e47ebf8f05e97818dc41a6decf2caadceb"
        ],
        [
            "Variables T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Definition subpred (p1 p2 : pred T) := forall x, p1 x -> p2 x.",
            "VernacDefinition",
            "03b780dfb1fcda5521f0569d73bb25ba44a0d94e"
        ],
        [
            "Definition subrel (r1 r2 : rel T) := forall x y, r1 x y -> r2 x y.",
            "VernacDefinition",
            "cf43efee202b417a55fc223e6919b47c7b342c56"
        ],
        [
            "Definition simpl_pred := simpl_fun T bool.",
            "VernacDefinition",
            "55032b66e5253382e2e9aff62846f54ae336785c"
        ],
        [
            "Definition applicative_pred := pred T.",
            "VernacDefinition",
            "52ee88ca8f468bfc905ccce920382f4a67f05663"
        ],
        [
            "Definition collective_pred := pred T.",
            "VernacDefinition",
            "54a2a302e6fa9e3d3d02c66a0f330323caab299e"
        ],
        [
            "Definition SimplPred (p : pred T) : simpl_pred := SimplFun p.",
            "VernacDefinition",
            "ec95fb894444ddac00f1b68b69121fedc6c93228"
        ],
        [
            "Coercion pred_of_simpl (p : simpl_pred) : pred T := fun_of_simpl p.",
            "VernacDefinition",
            "10f6813ac4e4202b20f3ef0209cb3598ee942378"
        ],
        [
            "Coercion applicative_pred_of_simpl (p : simpl_pred) : applicative_pred := fun_of_simpl p.",
            "VernacDefinition",
            "e2b00276cc2eab3b7a440705ed0499dd6e669e30"
        ],
        [
            "Coercion collective_pred_of_simpl (p : simpl_pred) : collective_pred := fun x => (let: SimplFun f := p in fun _ => f x) x.",
            "VernacDefinition",
            "16de15d7fdeeadd40e89bd3b8435462f0a619265"
        ],
        [
            "Definition pred0 := SimplPred xpred0.",
            "VernacDefinition",
            "a9540c37ff57e10bc7a23609b10dc55e92758183"
        ],
        [
            "Definition predT := SimplPred xpredT.",
            "VernacDefinition",
            "5200df2dca3b7d5a676e46bf8473f6d3aae7ec63"
        ],
        [
            "Definition predI p1 p2 := SimplPred (xpredI p1 p2).",
            "VernacDefinition",
            "dd16fad4c5546e9ddce39cd357c578fbfb3dd129"
        ],
        [
            "Definition predU p1 p2 := SimplPred (xpredU p1 p2).",
            "VernacDefinition",
            "9dc39814e808ba6338887d43b784727af662d1d1"
        ],
        [
            "Definition predC p := SimplPred (xpredC p).",
            "VernacDefinition",
            "307fcf5bbca82c0184eda15bd73bb43942257688"
        ],
        [
            "Definition predD p1 p2 := SimplPred (xpredD p1 p2).",
            "VernacDefinition",
            "c02271a028402769f216d0da4e2fac0a6bd09ca5"
        ],
        [
            "Definition preim rT f (d : pred rT) := SimplPred (xpreim f d).",
            "VernacDefinition",
            "2042dcb6c003be69c36aea305886fe75c143f537"
        ],
        [
            "Definition simpl_rel := simpl_fun T (pred T).",
            "VernacDefinition",
            "c53542d3b45808cd4d346f3e16a9c24f794148ae"
        ],
        [
            "Definition SimplRel (r : rel T) : simpl_rel := [fun x => r x].",
            "VernacDefinition",
            "ae64ca90998bbc84954f72ab089a0de8183f4adf"
        ],
        [
            "Coercion rel_of_simpl_rel (r : simpl_rel) : rel T := fun x y => r x y.",
            "VernacDefinition",
            "dbb6ff3b5fa4a17a7968a6a5fea2e1d3a77468b3"
        ],
        [
            "Definition relU r1 r2 := SimplRel (xrelU r1 r2).",
            "VernacDefinition",
            "3f1f9e0293d0aa68548f361239c1d036ac410b4c"
        ],
        [
            "Lemma subrelUl r1 r2 : subrel r1 (relU r1 r2).",
            "VernacStartTheoremProof",
            "0d7083d63851635847fa56d0ae660daae61ec8f4"
        ],
        [
            "by move=> *; apply/orP; left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subrelUr r1 r2 : subrel r2 (relU r1 r2).",
            "VernacStartTheoremProof",
            "bf4bf2bba232b34087ea5c251e2333d8c1327dd7"
        ],
        [
            "by move=> *; apply/orP; right.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variant mem_pred := Mem of pred T.",
            "VernacInductive",
            "2116cd38419a30e4115100c10d4220867f48ccc3"
        ],
        [
            "Definition isMem pT topred mem := mem = (fun p : pT => Mem [eta topred p]).",
            "VernacDefinition",
            "5fe67de405b410c62e4eab7bb733aef989ac14b6"
        ],
        [
            "Structure predType := PredType { pred_sort :> Type; topred : pred_sort -> pred T; _ : {mem | isMem topred mem} }.",
            "VernacInductive",
            "b7806c87c357499696d531c9b1a4b21ebbbe8b40"
        ],
        [
            "Definition mkPredType pT toP := PredType (exist (@isMem pT toP) _ (erefl _)).",
            "VernacDefinition",
            "d130f6109e45aa57e7e7ea93e5b9878e0dbe456e"
        ],
        [
            "Canonical predPredType := Eval hnf in @mkPredType (pred T) id.",
            "VernacDefinition",
            "57a638f5adccae177e24ade8a2ec5623acbae6cd"
        ],
        [
            "Canonical simplPredType := Eval hnf in mkPredType pred_of_simpl.",
            "VernacDefinition",
            "5ff01c80dd5b062c29072fa6c9a5ce8cc0c366be"
        ],
        [
            "Canonical boolfunPredType := Eval hnf in @mkPredType (T -> bool) id.",
            "VernacDefinition",
            "7ecf98e0f95089baa9f5a5ce772647eb18e2d0f2"
        ],
        [
            "Coercion pred_of_mem mp : pred_sort predPredType := let: Mem p := mp in [eta p].",
            "VernacDefinition",
            "988da1bdeb4378c6fbf80cb51dc5bc407707153b"
        ],
        [
            "Canonical memPredType := Eval hnf in mkPredType pred_of_mem.",
            "VernacDefinition",
            "fda5cb14dcb21abdc6466bf2d0f5fa381d0d8043"
        ],
        [
            "Definition clone_pred U := fun pT & pred_sort pT -> U => fun a mP (pT' := @PredType U a mP) & phant_id pT' pT => pT'.",
            "VernacDefinition",
            "081e68aff91b9c58e63e62a44f28d05ee04ec0f7"
        ],
        [
            "End Predicates.",
            "VernacEndSegment",
            "ecbe5da6427239d32e444fa4d516db31ac039acd"
        ],
        [
            "Arguments pred0 [T].",
            "VernacArguments",
            "34cbd84ebee9272721c7913267132bc9aedcd42f"
        ],
        [
            "Arguments predT [T].",
            "VernacArguments",
            "364d48f311efa986174aecb6f4706cb7512ba5df"
        ],
        [
            "Prenex Implicits pred0 predT predI predU predC predD preim relU.",
            "VernacExtend",
            "7bb059f255c0a814e7767f47f24e87e71ebecf2c"
        ],
        [
            "Notation \"[ 'pred' : T | E ]\" := (SimplPred (fun _ : T => E%B)) (at level 0, format \"[ 'pred' : T | E ]\") : fun_scope.",
            "VernacNotation",
            "8d827b85b25fd9cbc4292c9539709db1f2c304f4"
        ],
        [
            "Notation \"[ 'pred' x | E ]\" := (SimplPred (fun x => E%B)) (at level 0, x ident, format \"[ 'pred' x | E ]\") : fun_scope.",
            "VernacNotation",
            "02634acd403d35bac97d4de8b820063c669320ec"
        ],
        [
            "Notation \"[ 'pred' x | E1 & E2 ]\" := [pred x | E1 && E2 ] (at level 0, x ident, format \"[ 'pred' x | E1 & E2 ]\") : fun_scope.",
            "VernacNotation",
            "26bb8dee17402abcb8ad0801bd78b795f9cf31d3"
        ],
        [
            "Notation \"[ 'pred' x : T | E ]\" := (SimplPred (fun x : T => E%B)) (at level 0, x ident, only parsing) : fun_scope.",
            "VernacNotation",
            "54a188b3d37696adc0bc4374f969c75fe6d9efc7"
        ],
        [
            "Notation \"[ 'pred' x : T | E1 & E2 ]\" := [pred x : T | E1 && E2 ] (at level 0, x ident, only parsing) : fun_scope.",
            "VernacNotation",
            "654e24805206fbb039247f138d6567b30c61202d"
        ],
        [
            "Notation \"[ 'rel' x y | E ]\" := (SimplRel (fun x y => E%B)) (at level 0, x ident, y ident, format \"[ 'rel' x y | E ]\") : fun_scope.",
            "VernacNotation",
            "edb99a1eed53c118b0699cdeb72747c7d289ce54"
        ],
        [
            "Notation \"[ 'rel' x y : T | E ]\" := (SimplRel (fun x y : T => E%B)) (at level 0, x ident, y ident, only parsing) : fun_scope.",
            "VernacNotation",
            "f2e4282844b1ceabc818d73923246af19516363b"
        ],
        [
            "Notation \"[ 'predType' 'of' T ]\" := (@clone_pred _ T _ id _ _ id) (at level 0, format \"[ 'predType' 'of' T ]\") : form_scope.",
            "VernacNotation",
            "e70bb5ed518c571e12752dc796b3ff07f207d2e9"
        ],
        [
            "Notation pred_class := (pred_sort (predPredType _)).",
            "VernacSyntacticDefinition",
            "0f267f55b1f818eb7d12c0331353a3376e8bb46b"
        ],
        [
            "Coercion sort_of_simpl_pred T (p : simpl_pred T) : pred_class := p : pred T.",
            "VernacDefinition",
            "89344bbb0cdeee7faaa019372eb6c12646ffafe6"
        ],
        [
            "Definition predArgType := Type.",
            "VernacDefinition",
            "6de5e5a841210eeb3900938e5d6b850eb7ca3e9b"
        ],
        [
            "Bind Scope type_scope with predArgType.",
            "VernacBindScope",
            "5a456c660c2dd829402aeaaa47c88d43241175c4"
        ],
        [
            "Identity Coercion sort_of_predArgType : predArgType >-> Sortclass.",
            "VernacIdentityCoercion",
            "03acbd411614c6eaf2df4aec370f55289ce3d938"
        ],
        [
            "Coercion pred_of_argType (T : predArgType) : simpl_pred T := predT.",
            "VernacDefinition",
            "e47299e2ebf4d14c19ff680c0b7fcd79cd265a54"
        ],
        [
            "Notation \"{ : T }\" := (T%type : predArgType) (at level 0, format \"{ : T }\") : type_scope.",
            "VernacNotation",
            "6f0691061157b8d578afe4da08f053adda553e42"
        ],
        [
            "Definition mem T (pT : predType T) : pT -> mem_pred T := nosimpl (let: @PredType _ _ _ (exist _ mem _) := pT return pT -> _ in mem).",
            "VernacDefinition",
            "31a5acd9521e3c3ce3f1884cf7e47a29b99e4da7"
        ],
        [
            "Definition in_mem T x mp := nosimpl pred_of_mem T mp x.",
            "VernacDefinition",
            "9e6410aaaa0ee368a200f5d16344d72ed00aea13"
        ],
        [
            "Prenex Implicits mem.",
            "VernacExtend",
            "2ea97c2b6f4066555fe4ee7a45d5842e6f1ea54d"
        ],
        [
            "Coercion pred_of_mem_pred T mp := [pred x : T | in_mem x mp].",
            "VernacDefinition",
            "6aba919bc99e00cb7c0dfe7f69cc44478d883c9f"
        ],
        [
            "Definition eq_mem T p1 p2 := forall x : T, in_mem x p1 = in_mem x p2.",
            "VernacDefinition",
            "ad2fc41d03c0c5722f00a41404c09fef63289655"
        ],
        [
            "Definition sub_mem T p1 p2 := forall x : T, in_mem x p1 -> in_mem x p2.",
            "VernacDefinition",
            "1a1f3d14d2e489049b83d59e843179f9b20b9316"
        ],
        [
            "Typeclasses Opaque eq_mem.",
            "VernacExtend",
            "f31bd5da04fe87ec6cedbf0dcaaa44665c9307e7"
        ],
        [
            "Lemma sub_refl T (p : mem_pred T) : sub_mem p p.",
            "VernacStartTheoremProof",
            "b744e1e8a5949e2855bc03702cebb01ad9c7eea5"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments sub_refl {T p}.",
            "VernacArguments",
            "2985769ed4021a336680392657a0849fd9548d3b"
        ],
        [
            "Notation \"x \\in A\" := (in_mem x (mem A)) : bool_scope.",
            "VernacNotation",
            "8e9e480dc84442c3e753c68d087892119f7e957e"
        ],
        [
            "Notation \"x \\in A\" := (in_mem x (mem A)) : bool_scope.",
            "VernacNotation",
            "8e9e480dc84442c3e753c68d087892119f7e957e"
        ],
        [
            "Notation \"x \\notin A\" := (~~ (x \\in A)) : bool_scope.",
            "VernacNotation",
            "6c0d018ada1a773eca82198bc956cd8fe14275f6"
        ],
        [
            "Notation \"A =i B\" := (eq_mem (mem A) (mem B)) : type_scope.",
            "VernacNotation",
            "af19d2383adf280fff017ce1844c18f8b6ff4fb1"
        ],
        [
            "Notation \"{ 'subset' A <= B }\" := (sub_mem (mem A) (mem B)) (at level 0, A, B at level 69, format \"{ '[hv' 'subset' A '/ ' <= B ']' }\") : type_scope.",
            "VernacNotation",
            "75cff24b1430aed2c24056f946afb440372217d3"
        ],
        [
            "Notation \"[ 'mem' A ]\" := (pred_of_simpl (pred_of_mem_pred (mem A))) (at level 0, only parsing) : fun_scope.",
            "VernacNotation",
            "827af902dcf35f83f827bf62bbb2255f6598b244"
        ],
        [
            "Notation \"[ 'rel' 'of' fA ]\" := (fun x => [mem (fA x)]) (at level 0, format \"[ 'rel' 'of' fA ]\") : fun_scope.",
            "VernacNotation",
            "25e19af02ea70bee99cae5922c4b1565ea9895f0"
        ],
        [
            "Notation \"[ 'predI' A & B ]\" := (predI [mem A] [mem B]) (at level 0, format \"[ 'predI' A & B ]\") : fun_scope.",
            "VernacNotation",
            "a9b814be53d704890d2d74302c0bbc2da937a68c"
        ],
        [
            "Notation \"[ 'predU' A & B ]\" := (predU [mem A] [mem B]) (at level 0, format \"[ 'predU' A & B ]\") : fun_scope.",
            "VernacNotation",
            "872c67ce54d2c592dd9f40e3fee90bcd496ea642"
        ],
        [
            "Notation \"[ 'predD' A & B ]\" := (predD [mem A] [mem B]) (at level 0, format \"[ 'predD' A & B ]\") : fun_scope.",
            "VernacNotation",
            "6dec5f7f1a6707239133864e1b4366fe70377e58"
        ],
        [
            "Notation \"[ 'predC' A ]\" := (predC [mem A]) (at level 0, format \"[ 'predC' A ]\") : fun_scope.",
            "VernacNotation",
            "1ecfd4908dec104596d3c5a49fc4337aec99c4fd"
        ],
        [
            "Notation \"[ 'preim' f 'of' A ]\" := (preim f [mem A]) (at level 0, format \"[ 'preim' f 'of' A ]\") : fun_scope.",
            "VernacNotation",
            "429d93d8fbbf53d95df608bc8df5ae6754c9c406"
        ],
        [
            "Notation \"[ 'pred' x 'in' A ]\" := [pred x | x \\in A] (at level 0, x ident, format \"[ 'pred' x 'in' A ]\") : fun_scope.",
            "VernacNotation",
            "7e7d745a1a7e6aafab4c3bd4adb8719319c7eea3"
        ],
        [
            "Notation \"[ 'pred' x 'in' A | E ]\" := [pred x | x \\in A & E] (at level 0, x ident, format \"[ 'pred' x 'in' A | E ]\") : fun_scope.",
            "VernacNotation",
            "80f94aa113121f213a26e59a2910b1df5bcae809"
        ],
        [
            "Notation \"[ 'pred' x 'in' A | E1 & E2 ]\" := [pred x | x \\in A & E1 && E2 ] (at level 0, x ident, format \"[ 'pred' x 'in' A | E1 & E2 ]\") : fun_scope.",
            "VernacNotation",
            "0add98c994d0b44f41457d954db5b7529568d405"
        ],
        [
            "Notation \"[ 'rel' x y 'in' A & B | E ]\" := [rel x y | (x \\in A) && (y \\in B) && E] (at level 0, x ident, y ident, format \"[ 'rel' x y 'in' A & B | E ]\") : fun_scope.",
            "VernacNotation",
            "0e85a820b9b3385b790d82f11e23b556203a1baa"
        ],
        [
            "Notation \"[ 'rel' x y 'in' A & B ]\" := [rel x y | (x \\in A) && (y \\in B)] (at level 0, x ident, y ident, format \"[ 'rel' x y 'in' A & B ]\") : fun_scope.",
            "VernacNotation",
            "9985383f3499ae9ba197ebf42396ecb446b68f94"
        ],
        [
            "Notation \"[ 'rel' x y 'in' A | E ]\" := [rel x y in A & A | E] (at level 0, x ident, y ident, format \"[ 'rel' x y 'in' A | E ]\") : fun_scope.",
            "VernacNotation",
            "2a7b30b0a78b27f5c17723016276055bf4ffdcd0"
        ],
        [
            "Notation \"[ 'rel' x y 'in' A ]\" := [rel x y in A & A] (at level 0, x ident, y ident, format \"[ 'rel' x y 'in' A ]\") : fun_scope.",
            "VernacNotation",
            "b7680942d680a86aade228fb2dd5be90c61f5c52"
        ],
        [
            "Section simpl_mem.",
            "VernacBeginSection",
            "1f919c3bd58b48fa8fbd079d31dc8ec633bece57"
        ],
        [
            "Variables (T : Type) (pT : predType T).",
            "VernacAssumption",
            "44bc5390cac04931deb7a1cdff8e5c5ba7db252a"
        ],
        [
            "Implicit Types (x : T) (p : pred T) (sp : simpl_pred T) (pp : pT).",
            "VernacReserve",
            "d1e8643296d6bcbf4d7ceb2910c6d90001f14716"
        ],
        [
            "Structure manifest_applicative_pred p := ManifestApplicativePred { manifest_applicative_pred_value :> pred T; _ : manifest_applicative_pred_value = p }.",
            "VernacInductive",
            "92859846ac365e81f5fc9994aefe1314679bab54"
        ],
        [
            "Definition ApplicativePred p := ManifestApplicativePred (erefl p).",
            "VernacDefinition",
            "527bdbb1be570d496e9ce921a35f14d803926475"
        ],
        [
            "Canonical applicative_pred_applicative sp := ApplicativePred (applicative_pred_of_simpl sp).",
            "VernacDefinition",
            "ac665956743987fef6b2e3998e3ae6b59ba3270b"
        ],
        [
            "Structure manifest_simpl_pred p := ManifestSimplPred { manifest_simpl_pred_value :> simpl_pred T; _ : manifest_simpl_pred_value = SimplPred p }.",
            "VernacInductive",
            "c833a7bd4eb4b1f22471876a6c0c5120b540bb43"
        ],
        [
            "Canonical expose_simpl_pred p := ManifestSimplPred (erefl (SimplPred p)).",
            "VernacDefinition",
            "51f67a0c6162ba224888ebb11f660e9b12574c5d"
        ],
        [
            "Structure manifest_mem_pred p := ManifestMemPred { manifest_mem_pred_value :> mem_pred T; _ : manifest_mem_pred_value= Mem [eta p] }.",
            "VernacInductive",
            "9fa792453ab9416d7aeab0e166dbb6ee27fbe924"
        ],
        [
            "Canonical expose_mem_pred p := @ManifestMemPred p _ (erefl _).",
            "VernacDefinition",
            "6aa64158f9eeec9a9f3e566623b7a8d28c852467"
        ],
        [
            "Structure applicative_mem_pred p := ApplicativeMemPred {applicative_mem_pred_value :> manifest_mem_pred p}.",
            "VernacInductive",
            "09b126a4672329ca19c20e8834605d486c3b6785"
        ],
        [
            "Canonical check_applicative_mem_pred p (ap : manifest_applicative_pred p) mp := @ApplicativeMemPred ap mp.",
            "VernacDefinition",
            "5a55670ac664b79fe6b11f4deed777744ade4725"
        ],
        [
            "Lemma mem_topred (pp : pT) : mem (topred pp) = mem pp.",
            "VernacStartTheoremProof",
            "091477bb673709114f6ede2131832ac9c32574ec"
        ],
        [
            "by rewrite /mem; case: pT pp => T1 app1 [mem1 /= ->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma topredE x (pp : pT) : topred pp x = (x \\in pp).",
            "VernacStartTheoremProof",
            "c45d5074bddde286a8d29718dfdd46c136617767"
        ],
        [
            "by rewrite -mem_topred.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma app_predE x p (ap : manifest_applicative_pred p) : ap x = (x \\in p).",
            "VernacStartTheoremProof",
            "ecc7f971d345641e6e33a4c095d73d4295bfbdaf"
        ],
        [
            "by case: ap => _ /= ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_applicative x p (amp : applicative_mem_pred p) : in_mem x amp = p x.",
            "VernacStartTheoremProof",
            "9cd1aa7e8dc86b60d171c52e8a1d75e86ae63b45"
        ],
        [
            "by case: amp => [[_ /= ->]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_collective x p (msp : manifest_simpl_pred p) : (x \\in collective_pred_of_simpl msp) = p x.",
            "VernacStartTheoremProof",
            "a608485e6e6b075632676feb11abbfc7e1e91a22"
        ],
        [
            "by case: msp => _ /= ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_simpl x p (msp : manifest_simpl_pred p) : in_mem x (Mem [eta fun_of_simpl (msp : simpl_pred T)]) = p x.",
            "VernacStartTheoremProof",
            "e74b46703538ce76dcf1fcccc24fe50a400c17ca"
        ],
        [
            "by case: msp => _ /= ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unfold_in x p : (x \\in ([eta p] : pred T)) = p x.",
            "VernacStartTheoremProof",
            "51d7abcad16bec8205a29a661a794991eb1485da"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma simpl_predE p : SimplPred p =1 p.",
            "VernacStartTheoremProof",
            "eebab2e55eadfa6135d73f1aec8e7bd3a8c5a3cd"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition inE := (in_applicative, in_simpl, simpl_predE).",
            "VernacDefinition",
            "c9e241224d47003411e9de5a64d1b886397d6328"
        ],
        [
            "Lemma mem_simpl sp : mem sp = sp :> pred T.",
            "VernacStartTheoremProof",
            "025badfefb05939bf3f03105a31f676327cb1fc7"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition memE := mem_simpl.",
            "VernacDefinition",
            "51918dbbb90a924c68e1aaa9ea302a514a5fe36a"
        ],
        [
            "Lemma mem_mem (pp : pT) : (mem (mem pp) = mem pp) * (mem [mem pp] = mem pp).",
            "VernacStartTheoremProof",
            "bd0b681e5424232a87bdebdc0fdbb10b3def1486"
        ],
        [
            "by rewrite -mem_topred.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End simpl_mem.",
            "VernacEndSegment",
            "85d410cfc89069bc0884490c5e0526b89da5c3b4"
        ],
        [
            "Variant qualifier (q : nat) T := Qualifier of predPredType T.",
            "VernacInductive",
            "c9eabcee507e44adfe6bd7b845e0c87915c6bf77"
        ],
        [
            "Coercion has_quality n T (q : qualifier n T) : pred_class := fun x => let: Qualifier _ p := q in p x.",
            "VernacDefinition",
            "335fc386db1d9f48e0be10960b8c5bb7cc7ebfb1"
        ],
        [
            "Arguments has_quality n [T].",
            "VernacArguments",
            "22c07fdb2e2d6702e8d87d37f4e2d12af0ec2cd9"
        ],
        [
            "Lemma qualifE n T p x : (x \\in @Qualifier n T p) = p x.",
            "VernacStartTheoremProof",
            "db395c5b306585c8657a3b9de7fef70f39c95e2f"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation \"x \\is A\" := (x \\in has_quality 0 A) (at level 70, no associativity, format \"'[hv' x '/ ' \\is A ']'\") : bool_scope.",
            "VernacNotation",
            "2a180892817642deaa924cb9dc0b3af6979ed84f"
        ],
        [
            "Notation \"x \\is 'a' A\" := (x \\in has_quality 1 A) (at level 70, no associativity, format \"'[hv' x '/ ' \\is 'a' A ']'\") : bool_scope.",
            "VernacNotation",
            "6c867aead2968f08a1310509356e7f8cf0044176"
        ],
        [
            "Notation \"x \\is 'an' A\" := (x \\in has_quality 2 A) (at level 70, no associativity, format \"'[hv' x '/ ' \\is 'an' A ']'\") : bool_scope.",
            "VernacNotation",
            "f927aec086b393b2e56f9f3e9896ab2a2558f3ee"
        ],
        [
            "Notation \"x \\isn't A\" := (x \\notin has_quality 0 A) (at level 70, no associativity, format \"'[hv' x '/ ' \\isn't A ']'\") : bool_scope.",
            "VernacNotation",
            "e037ed6aae3767a825670a5785026c5bea467f90"
        ],
        [
            "Notation \"x \\isn't 'a' A\" := (x \\notin has_quality 1 A) (at level 70, no associativity, format \"'[hv' x '/ ' \\isn't 'a' A ']'\") : bool_scope.",
            "VernacNotation",
            "050b32f2a0d7d8e003d70d482b6566124bc9841f"
        ],
        [
            "Notation \"x \\isn't 'an' A\" := (x \\notin has_quality 2 A) (at level 70, no associativity, format \"'[hv' x '/ ' \\isn't 'an' A ']'\") : bool_scope.",
            "VernacNotation",
            "ea7b21ccb9d811a404f25997b11bb45d86a55910"
        ],
        [
            "Notation \"[ 'qualify' x | P ]\" := (Qualifier 0 (fun x => P%B)) (at level 0, x at level 99, format \"'[hv' [ 'qualify' x | '/ ' P ] ']'\") : form_scope.",
            "VernacNotation",
            "4ab74715cf376b1e6f05e3d0c89c1c4595e0c025"
        ],
        [
            "Notation \"[ 'qualify' x : T | P ]\" := (Qualifier 0 (fun x : T => P%B)) (at level 0, x at level 99, only parsing) : form_scope.",
            "VernacNotation",
            "58df3ecaf425b38b8086b34ea93ff3eceb011701"
        ],
        [
            "Notation \"[ 'qualify' 'a' x | P ]\" := (Qualifier 1 (fun x => P%B)) (at level 0, x at level 99, format \"'[hv' [ 'qualify' 'a' x | '/ ' P ] ']'\") : form_scope.",
            "VernacNotation",
            "17ac3de87cdac7c3577a12cca1d06d0273928acc"
        ],
        [
            "Notation \"[ 'qualify' 'a' x : T | P ]\" := (Qualifier 1 (fun x : T => P%B)) (at level 0, x at level 99, only parsing) : form_scope.",
            "VernacNotation",
            "bb947f967764341bc8f5ea9061f0538fb768b424"
        ],
        [
            "Notation \"[ 'qualify' 'an' x | P ]\" := (Qualifier 2 (fun x => P%B)) (at level 0, x at level 99, format \"'[hv' [ 'qualify' 'an' x | '/ ' P ] ']'\") : form_scope.",
            "VernacNotation",
            "d8229ceb8c4452c41db606d34ba5044e2deb643f"
        ],
        [
            "Notation \"[ 'qualify' 'an' x : T | P ]\" := (Qualifier 2 (fun x : T => P%B)) (at level 0, x at level 99, only parsing) : form_scope.",
            "VernacNotation",
            "9b5f77a3d58a1f0b2d83d16239343b1c3c2d9d2f"
        ],
        [
            "Section KeyPred.",
            "VernacBeginSection",
            "e37e30149db83a2330ac23c83fd92e9a7cccd1e3"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Variant pred_key (p : predPredType T) := DefaultPredKey.",
            "VernacInductive",
            "bbe2878259eede653790956bd7bdf280a8fd7c8e"
        ],
        [
            "Variable p : predPredType T.",
            "VernacAssumption",
            "79fadb93006b861bfb5df68169f4273367326004"
        ],
        [
            "Structure keyed_pred (k : pred_key p) := PackKeyedPred {unkey_pred :> pred_class; _ : unkey_pred =i p}.",
            "VernacInductive",
            "14a5849026a843f90ed18acfb79be676782e607c"
        ],
        [
            "Variable k : pred_key p.",
            "VernacAssumption",
            "5fd5fdd3d7b069f58dc930ffa2f440e39b0762e3"
        ],
        [
            "Definition KeyedPred := @PackKeyedPred k p (frefl _).",
            "VernacDefinition",
            "6cda72d1e1417959d5bf7f650e03f96b36eaf490"
        ],
        [
            "Variable k_p : keyed_pred k.",
            "VernacAssumption",
            "f4b031761caccbfd3d6a9b334e4473cb758a7d4e"
        ],
        [
            "Lemma keyed_predE : k_p =i p.",
            "VernacStartTheoremProof",
            "17dc5d67dded9deb712fdcff8bd2978d2c7a9d8b"
        ],
        [
            "by case: k_p.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical keyed_mem := @PackKeyedPred k (pred_of_mem (mem k_p)) keyed_predE.",
            "VernacDefinition",
            "a8175df8a4c56e111a4f9ae5f4d7d6289b8f0f74"
        ],
        [
            "Canonical keyed_mem_simpl := @PackKeyedPred k (pred_of_simpl (mem k_p)) keyed_predE.",
            "VernacDefinition",
            "64f8f321ef0aeb36a5a549da292a67781de879c8"
        ],
        [
            "End KeyPred.",
            "VernacEndSegment",
            "24f5df48799c7d11db171cfee553d4a41b35aaf3"
        ],
        [
            "Notation \"x \\i 'n' S\" := (x \\in @unkey_pred _ S _ _) (at level 70, format \"'[hv' x '/ ' \\i 'n' S ']'\") : bool_scope.",
            "VernacNotation",
            "c6a373dbc9f0996e04f76a4a76235d929f10bca3"
        ],
        [
            "Section KeyedQualifier.",
            "VernacBeginSection",
            "0949e625639dc01054a3ca38f1698f1529b65859"
        ],
        [
            "Variables (T : Type) (n : nat) (q : qualifier n T).",
            "VernacAssumption",
            "0178e8b2f9e5ca54be37f22943763e6b8155edb1"
        ],
        [
            "Structure keyed_qualifier (k : pred_key q) := PackKeyedQualifier {unkey_qualifier; _ : unkey_qualifier = q}.",
            "VernacInductive",
            "1c580440b4a855fbaef355ef768550ec909d4c6f"
        ],
        [
            "Definition KeyedQualifier k := PackKeyedQualifier k (erefl q).",
            "VernacDefinition",
            "f67830e902dd14fdbeed93ead9de95887db48dad"
        ],
        [
            "Variables (k : pred_key q) (k_q : keyed_qualifier k).",
            "VernacAssumption",
            "10827b1d577b92c898743881e45244c5ec013830"
        ],
        [
            "Fact keyed_qualifier_suproof : unkey_qualifier k_q =i q.",
            "VernacStartTheoremProof",
            "4072c8a30ea5e5f867b0c1478765f34315f37d8d"
        ],
        [
            "by case: k_q => /= _ ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical keyed_qualifier_keyed := PackKeyedPred k keyed_qualifier_suproof.",
            "VernacDefinition",
            "ce5cbed78774b3fd2a2728a83247b0063c2161d2"
        ],
        [
            "End KeyedQualifier.",
            "VernacEndSegment",
            "4755b0169887881b64811abfb3ba4be5063833d8"
        ],
        [
            "Notation \"x \\i 's' A\" := (x \\i n has_quality 0 A) (at level 70, format \"'[hv' x '/ ' \\i 's' A ']'\") : bool_scope.",
            "VernacNotation",
            "4ec202f35fdb96cf2d74f7341e5c122cddf726e3"
        ],
        [
            "Notation \"x \\i 's' 'a' A\" := (x \\i n has_quality 1 A) (at level 70, format \"'[hv' x '/ ' \\i 's' 'a' A ']'\") : bool_scope.",
            "VernacNotation",
            "88277458cf5d8eb6cf3291cfa5d1ff5a3b938a2a"
        ],
        [
            "Notation \"x \\i 's' 'an' A\" := (x \\i n has_quality 2 A) (at level 70, format \"'[hv' x '/ ' \\i 's' 'an' A ']'\") : bool_scope.",
            "VernacNotation",
            "680b0c89f2baefa9b8451e499c70490f0344196f"
        ],
        [
            "Module DefaultKeying.",
            "VernacDefineModule",
            "f184f722adc1fa97d96095af4c3a0e8b7fca5a2b"
        ],
        [
            "Canonical default_keyed_pred T p := KeyedPred (@DefaultPredKey T p).",
            "VernacDefinition",
            "a28f7e4e1e90c1b974f3832ceac5f8cf1e4bb345"
        ],
        [
            "Canonical default_keyed_qualifier T n (q : qualifier n T) := KeyedQualifier (DefaultPredKey q).",
            "VernacDefinition",
            "98370ed3ad22957309ece6a5fba016cb8e0f5c83"
        ],
        [
            "End DefaultKeying.",
            "VernacEndSegment",
            "7dec5daba18225b6da678ab2bf90396a00513d46"
        ],
        [
            "Lemma all_tag_cond_dep I T (C : pred I) U : (forall x, T x) -> (forall x, C x -> {y : T x & U x y}) -> {f : forall x, T x & forall x, C x -> U x (f x)}.",
            "VernacStartTheoremProof",
            "d3757f6b29a3c4d360bd8a3249e67a89b0b5588b"
        ],
        [
            "move=> f0 fP; apply: all_tag (fun x y => C x -> U x y) _ => x.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by case Cx: (C x); [case/fP: Cx => y; exists y | exists (f0 x)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_tag_cond I T (C : pred I) U : T -> (forall x, C x -> {y : T & U x y}) -> {f : I -> T & forall x, C x -> U x (f x)}.",
            "VernacStartTheoremProof",
            "bf8891e68fdb2873b75bef4b7c490025ebb0e9b5"
        ],
        [
            "by move=> y0; apply: all_tag_cond_dep.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_sig_cond_dep I T (C : pred I) P : (forall x, T x) -> (forall x, C x -> {y : T x | P x y}) -> {f : forall x, T x | forall x, C x -> P x (f x)}.",
            "VernacStartTheoremProof",
            "fdd3f32ae9eaad056cf2c469423c45bef037fedc"
        ],
        [
            "by move=> f0 /(all_tag_cond_dep f0)[f]; exists f.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma all_sig_cond I T (C : pred I) P : T -> (forall x, C x -> {y : T | P x y}) -> {f : I -> T | forall x, C x -> P x (f x)}.",
            "VernacStartTheoremProof",
            "9d334746eca662b596a03c15b664d4428da09a38"
        ],
        [
            "by move=> y0; apply: all_sig_cond_dep.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section RelationProperties.",
            "VernacBeginSection",
            "733dd5c891362c5c6c3174ee31934e7068536423"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Variable R : rel T.",
            "VernacAssumption",
            "5663c6f5082ab5e042a33a640271f77b06393b0e"
        ],
        [
            "Definition total := forall x y, R x y || R y x.",
            "VernacDefinition",
            "2e9d6f07ad58afdf0fb96083f0ab9bc4e4f7eaec"
        ],
        [
            "Definition transitive := forall y x z, R x y -> R y z -> R x z.",
            "VernacDefinition",
            "8045d64c2892d3fc588f6e8dfe70d67516728750"
        ],
        [
            "Definition symmetric := forall x y, R x y = R y x.",
            "VernacDefinition",
            "27d2940121287b166d0b9ec5ebd42c01ed350115"
        ],
        [
            "Definition antisymmetric := forall x y, R x y && R y x -> x = y.",
            "VernacDefinition",
            "3e7c5995d4d87a6177ff37d9770fbeb084b8f943"
        ],
        [
            "Definition pre_symmetric := forall x y, R x y -> R y x.",
            "VernacDefinition",
            "6121e0794c467053ae6faba8dc36bbd9292add44"
        ],
        [
            "Lemma symmetric_from_pre : pre_symmetric -> symmetric.",
            "VernacStartTheoremProof",
            "7ca32a856c9f89349eeec9f42e0da1ef5012e120"
        ],
        [
            "by move=> symR x y; apply/idP/idP; apply: symR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition reflexive := forall x, R x x.",
            "VernacDefinition",
            "43b4df181175dd91be2cabcc421ae8358cfc5ae0"
        ],
        [
            "Definition irreflexive := forall x, R x x = false.",
            "VernacDefinition",
            "ebc20930cd332da7235d90c2d63384f28a0a6daa"
        ],
        [
            "Definition left_transitive := forall x y, R x y -> R x =1 R y.",
            "VernacDefinition",
            "4d0c0bcb28f5071b4471f511a9180abc259e9d76"
        ],
        [
            "Definition right_transitive := forall x y, R x y -> R^~ x =1 R^~ y.",
            "VernacDefinition",
            "f634e2552ac21631c63d895546ccd92794cb5aab"
        ],
        [
            "Section PER.",
            "VernacBeginSection",
            "5b7bb458a1203fed786961e408ed11deabefdf2d"
        ],
        [
            "Hypotheses (symR : symmetric) (trR : transitive).",
            "VernacAssumption",
            "abd16bdba05280a3c124b2619f965636f101f53b"
        ],
        [
            "Lemma sym_left_transitive : left_transitive.",
            "VernacStartTheoremProof",
            "aa437d842f95869de02d00c2bfcb33794a6c8169"
        ],
        [
            "by move=> x y Rxy z; apply/idP/idP; apply: trR; rewrite // symR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sym_right_transitive : right_transitive.",
            "VernacStartTheoremProof",
            "ab3a52a4cc65e966590984d391bb294667da98fb"
        ],
        [
            "by move=> x y /sym_left_transitive Rxy z; rewrite !(symR z) Rxy.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PER.",
            "VernacEndSegment",
            "2ad18528c0b0f735f720a86301e1ff03f1a732cb"
        ],
        [
            "Definition equivalence_rel := forall x y z, R z z * (R x y -> R x z = R y z).",
            "VernacDefinition",
            "2727a46db520a04e9472b87e05fc3460b2682c03"
        ],
        [
            "Lemma equivalence_relP : equivalence_rel <-> reflexive /\\ left_transitive.",
            "VernacStartTheoremProof",
            "fb8b3f59388d23a21d0fa72df077109c6a6e3b75"
        ],
        [
            "split=> [eqiR | [Rxx trR] x y z]; last by split=> [|/trR->].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by split=> [x | x y Rxy z]; [rewrite (eqiR x x x) | rewrite (eqiR x y z)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End RelationProperties.",
            "VernacEndSegment",
            "746b681939cf4f77fa9c8f68a13f578285acce1a"
        ],
        [
            "Lemma rev_trans T (R : rel T) : transitive R -> transitive (fun x y => R y x).",
            "VernacStartTheoremProof",
            "c22f8e54631996975977d790fa27d1496d14506d"
        ],
        [
            "by move=> trR x y z Ryx Rzy; apply: trR Rzy Ryx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Notation \"{ 'all1' P }\" := (forall x, P x : Prop) (at level 0).",
            "VernacNotation",
            "60b6557342e5eac0e9b33c2073240bf00db23147"
        ],
        [
            "Local Notation \"{ 'all2' P }\" := (forall x y, P x y : Prop) (at level 0).",
            "VernacNotation",
            "01edc845ca49a5512b0c3aedcd5a5583585d50a7"
        ],
        [
            "Local Notation \"{ 'all3' P }\" := (forall x y z, P x y z: Prop) (at level 0).",
            "VernacNotation",
            "4205eb21cd5b91620acd3ec66756a7861f76f59c"
        ],
        [
            "Local Notation ph := (phantom _).",
            "VernacSyntacticDefinition",
            "5a98df8dfebca05eb21763ef78458f4a01fe18ba"
        ],
        [
            "Section LocalProperties.",
            "VernacBeginSection",
            "9f93943e273573ba068edacab8cdc420a50ace55"
        ],
        [
            "Variables T1 T2 T3 : Type.",
            "VernacAssumption",
            "90968a2e84cf97c6321883a67d8a05d414425fdd"
        ],
        [
            "Variables (d1 : mem_pred T1) (d2 : mem_pred T2) (d3 : mem_pred T3).",
            "VernacAssumption",
            "12f56105f0b602f61a44c52639375b9fed467693"
        ],
        [
            "Local Notation ph := (phantom Prop).",
            "VernacSyntacticDefinition",
            "48972947e6ed0c2fa3686fe84d61cf088f917651"
        ],
        [
            "Definition prop_for (x : T1) P & ph {all1 P} := P x.",
            "VernacDefinition",
            "1ecc1353f5cb372280e13950d4d3956d9c075c48"
        ],
        [
            "Lemma forE x P phP : @prop_for x P phP = P x.",
            "VernacStartTheoremProof",
            "1356294711f20222b53b9d79e2c822c50e0de0c6"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition prop_in1 P & ph {all1 P} := forall x, in_mem x d1 -> P x.",
            "VernacDefinition",
            "2db0d14f15587d4bdb840f24b598858c88bb5a8f"
        ],
        [
            "Definition prop_in11 P & ph {all2 P} := forall x y, in_mem x d1 -> in_mem y d2 -> P x y.",
            "VernacDefinition",
            "2724dc56a2a060ec1eb944decd765a8b9a737714"
        ],
        [
            "Definition prop_in2 P & ph {all2 P} := forall x y, in_mem x d1 -> in_mem y d1 -> P x y.",
            "VernacDefinition",
            "fcbcc9ca11e2daa9289405f8c777ab84915ef409"
        ],
        [
            "Definition prop_in111 P & ph {all3 P} := forall x y z, in_mem x d1 -> in_mem y d2 -> in_mem z d3 -> P x y z.",
            "VernacDefinition",
            "b2bbc021e69dd1466fcdc6a97790519c7517fd18"
        ],
        [
            "Definition prop_in12 P & ph {all3 P} := forall x y z, in_mem x d1 -> in_mem y d2 -> in_mem z d2 -> P x y z.",
            "VernacDefinition",
            "8d34f773eb92f29e1a4e45f650e34cc79648c328"
        ],
        [
            "Definition prop_in21 P & ph {all3 P} := forall x y z, in_mem x d1 -> in_mem y d1 -> in_mem z d2 -> P x y z.",
            "VernacDefinition",
            "e2681f1643a6685dda9e193e7a787864158bc8ac"
        ],
        [
            "Definition prop_in3 P & ph {all3 P} := forall x y z, in_mem x d1 -> in_mem y d1 -> in_mem z d1 -> P x y z.",
            "VernacDefinition",
            "e42f60c9299aa688581c920e5d13e8b94a238ba2"
        ],
        [
            "Variable f : T1 -> T2.",
            "VernacAssumption",
            "c71163d3c947ab3057380883ebcb7764d452fa36"
        ],
        [
            "Definition prop_on1 Pf P & phantom T3 (Pf f) & ph {all1 P} := forall x, in_mem (f x) d2 -> P x.",
            "VernacDefinition",
            "5230362fbbc2c4587d506411affadd4b1dd1c8d2"
        ],
        [
            "Definition prop_on2 Pf P & phantom T3 (Pf f) & ph {all2 P} := forall x y, in_mem (f x) d2 -> in_mem (f y) d2 -> P x y.",
            "VernacDefinition",
            "229e8e3a44f62ce00889280dacec1b93694c4893"
        ],
        [
            "End LocalProperties.",
            "VernacEndSegment",
            "714d9d3c4fa454042077a64a96bdb7197acdc4cd"
        ],
        [
            "Definition inPhantom := Phantom Prop.",
            "VernacDefinition",
            "2023bcc40e226e7fe63d258b6533d9ffec771842"
        ],
        [
            "Definition onPhantom T P (x : T) := Phantom Prop (P x).",
            "VernacDefinition",
            "9f5a5be7c75da2c5cf601cc2b66dab0183ba9b27"
        ],
        [
            "Definition bijective_in aT rT (d : mem_pred aT) (f : aT -> rT) := exists2 g, prop_in1 d (inPhantom (cancel f g)) & prop_on1 d (Phantom _ (cancel g)) (onPhantom (cancel g) f).",
            "VernacDefinition",
            "ace46cac27ee9576e94dda34a718cd83f66a9dd6"
        ],
        [
            "Definition bijective_on aT rT (cd : mem_pred rT) (f : aT -> rT) := exists2 g, prop_on1 cd (Phantom _ (cancel f)) (onPhantom (cancel f) g) & prop_in1 cd (inPhantom (cancel g f)).",
            "VernacDefinition",
            "9044dd8839941fafb0b34883dd86b1c519c057f8"
        ],
        [
            "Notation \"{ 'for' x , P }\" := (prop_for x (inPhantom P)) (at level 0, format \"{ 'for' x , P }\") : type_scope.",
            "VernacNotation",
            "aa93e8b6f201aea28e4e1b657303d21b1e87b93d"
        ],
        [
            "Notation \"{ 'in' d , P }\" := (prop_in1 (mem d) (inPhantom P)) (at level 0, format \"{ 'in' d , P }\") : type_scope.",
            "VernacNotation",
            "cc1c50f5f5994e16fae98ca42648a26af1f514dc"
        ],
        [
            "Notation \"{ 'in' d1 & d2 , P }\" := (prop_in11 (mem d1) (mem d2) (inPhantom P)) (at level 0, format \"{ 'in' d1 & d2 , P }\") : type_scope.",
            "VernacNotation",
            "49c1bdd1063b1d2b7903796a5a9145ca7dc5f3a2"
        ],
        [
            "Notation \"{ 'in' d & , P }\" := (prop_in2 (mem d) (inPhantom P)) (at level 0, format \"{ 'in' d & , P }\") : type_scope.",
            "VernacNotation",
            "b567146639dd2cc284e709796963e4c21988e272"
        ],
        [
            "Notation \"{ 'in' d1 & d2 & d3 , P }\" := (prop_in111 (mem d1) (mem d2) (mem d3) (inPhantom P)) (at level 0, format \"{ 'in' d1 & d2 & d3 , P }\") : type_scope.",
            "VernacNotation",
            "ba3312848fd67c51f32dc889d37cb40d93449b3a"
        ],
        [
            "Notation \"{ 'in' d1 & & d3 , P }\" := (prop_in21 (mem d1) (mem d3) (inPhantom P)) (at level 0, format \"{ 'in' d1 & & d3 , P }\") : type_scope.",
            "VernacNotation",
            "f9c348c20bfab8dc3968b32d41cfab0e4a0e3107"
        ],
        [
            "Notation \"{ 'in' d1 & d2 & , P }\" := (prop_in12 (mem d1) (mem d2) (inPhantom P)) (at level 0, format \"{ 'in' d1 & d2 & , P }\") : type_scope.",
            "VernacNotation",
            "926a36106e3728ef7852289c90e0d967c7df209c"
        ],
        [
            "Notation \"{ 'in' d & & , P }\" := (prop_in3 (mem d) (inPhantom P)) (at level 0, format \"{ 'in' d & & , P }\") : type_scope.",
            "VernacNotation",
            "8853c474cb87acfd8223861bc80a9bdc6a20ce83"
        ],
        [
            "Notation \"{ 'on' cd , P }\" := (prop_on1 (mem cd) (inPhantom P) (inPhantom P)) (at level 0, format \"{ 'on' cd , P }\") : type_scope.",
            "VernacNotation",
            "696d32446ac17da0d4792fe2ccdd3f9666d0fa5a"
        ],
        [
            "Notation \"{ 'on' cd & , P }\" := (prop_on2 (mem cd) (inPhantom P) (inPhantom P)) (at level 0, format \"{ 'on' cd & , P }\") : type_scope.",
            "VernacNotation",
            "ed45dc7a96e1955430db486dc6d5dda5fb5ff63a"
        ],
        [
            "Local Arguments onPhantom {_%type_scope} _ _.",
            "VernacArguments",
            "d30e1eaa5ee4c00318d4fdcee9cb91a4f939defe"
        ],
        [
            "Notation \"{ 'on' cd , P & g }\" := (prop_on1 (mem cd) (Phantom (_ -> Prop) P) (onPhantom P g)) (at level 0, format \"{ 'on' cd , P & g }\") : type_scope.",
            "VernacNotation",
            "7e6aaf62a08275c88c5e0227749cea3ecdc58a6f"
        ],
        [
            "Notation \"{ 'in' d , 'bijective' f }\" := (bijective_in (mem d) f) (at level 0, f at level 8, format \"{ 'in' d , 'bijective' f }\") : type_scope.",
            "VernacNotation",
            "5619379a6a4cee2d69660c893239d07ae4f02733"
        ],
        [
            "Notation \"{ 'on' cd , 'bijective' f }\" := (bijective_on (mem cd) f) (at level 0, f at level 8, format \"{ 'on' cd , 'bijective' f }\") : type_scope.",
            "VernacNotation",
            "f59047030c4dd59fdf8d3aa39a56db8e40fe12a2"
        ],
        [
            "Section LocalGlobal.",
            "VernacBeginSection",
            "7e760fe0ef13070037e0f26a3da89ba25a41a6fb"
        ],
        [
            "Variables T1 T2 T3 : predArgType.",
            "VernacAssumption",
            "3e37126e4a952a8f5cf86f6c28b33b4adc092b6c"
        ],
        [
            "Variables (D1 : pred T1) (D2 : pred T2) (D3 : pred T3).",
            "VernacAssumption",
            "16e24b5f6acd991c9e05ab176479f50e6b869599"
        ],
        [
            "Variables (d1 d1' : mem_pred T1) (d2 d2' : mem_pred T2) (d3 d3' : mem_pred T3).",
            "VernacAssumption",
            "36b34d4939dfb92a13e8151a5ab98cbf31e9222d"
        ],
        [
            "Variables (f f' : T1 -> T2) (g : T2 -> T1) (h : T3).",
            "VernacAssumption",
            "93e41e5e267591be0470741bc95acf47722cbbac"
        ],
        [
            "Variables (P1 : T1 -> Prop) (P2 : T1 -> T2 -> Prop).",
            "VernacAssumption",
            "a202070c0c0500f254b4ad82f7df66428239be69"
        ],
        [
            "Variable P3 : T1 -> T2 -> T3 -> Prop.",
            "VernacAssumption",
            "39d84ef9d95a77edc4adaef2ae41aa121480fd10"
        ],
        [
            "Variable Q1 : (T1 -> T2) -> T1 -> Prop.",
            "VernacAssumption",
            "d45841d41b2984c0680fae291d35be8d8fb0ae99"
        ],
        [
            "Variable Q1l : (T1 -> T2) -> T3 -> T1 -> Prop.",
            "VernacAssumption",
            "2bdabfb21aefdd229db598e9b3fef795a92e26ce"
        ],
        [
            "Variable Q2 : (T1 -> T2) -> T1 -> T1 -> Prop.",
            "VernacAssumption",
            "0c256ba73dca39d91c1145e3372beb35834e1eee"
        ],
        [
            "Hypothesis sub1 : sub_mem d1 d1'.",
            "VernacAssumption",
            "31d6f3ba1f4df51a4ea092c87c5f1197242ec02b"
        ],
        [
            "Hypothesis sub2 : sub_mem d2 d2'.",
            "VernacAssumption",
            "d0790ed94af05d6f5d4a91bb7fbdabebd69594c5"
        ],
        [
            "Hypothesis sub3 : sub_mem d3 d3'.",
            "VernacAssumption",
            "5854bee85ac6931d433b6f5de8f92dd6829a9430"
        ],
        [
            "Lemma in1W : {all1 P1} -> {in D1, {all1 P1}}.",
            "VernacStartTheoremProof",
            "7b1eaf25612a624fb3591c7b9f7a21ff47864d72"
        ],
        [
            "by move=> ? ?.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in2W : {all2 P2} -> {in D1 & D2, {all2 P2}}.",
            "VernacStartTheoremProof",
            "eb93ec57efd0a316c9af48781c4b3e415f68ca13"
        ],
        [
            "by move=> ? ?.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in3W : {all3 P3} -> {in D1 & D2 & D3, {all3 P3}}.",
            "VernacStartTheoremProof",
            "daf2fbdac88a1376965fec8b999aa30b26bfe2a6"
        ],
        [
            "by move=> ? ?.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in1T : {in T1, {all1 P1}} -> {all1 P1}.",
            "VernacStartTheoremProof",
            "f5ade91e8056706561f3b93a1973157c6d11adb0"
        ],
        [
            "by move=> ? ?; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in2T : {in T1 & T2, {all2 P2}} -> {all2 P2}.",
            "VernacStartTheoremProof",
            "f65b3fc51861bc3bbe0aeb5bd9052bb256fc4071"
        ],
        [
            "by move=> ? ?; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in3T : {in T1 & T2 & T3, {all3 P3}} -> {all3 P3}.",
            "VernacStartTheoremProof",
            "86b34286c68aab3bd3688eb775b61b715493c6a0"
        ],
        [
            "by move=> ? ?; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_in1 (Ph : ph {all1 P1}) : prop_in1 d1' Ph -> prop_in1 d1 Ph.",
            "VernacStartTheoremProof",
            "8adb1a7ec9abea982ce658d27efb41c14bada4b9"
        ],
        [
            "by move=> allP x /sub1; apply: allP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_in11 (Ph : ph {all2 P2}) : prop_in11 d1' d2' Ph -> prop_in11 d1 d2 Ph.",
            "VernacStartTheoremProof",
            "2f40659f6dfa9e86ab4d89fb9c59d8c7c43dc406"
        ],
        [
            "by move=> allP x1 x2 /sub1 d1x1 /sub2; apply: allP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_in111 (Ph : ph {all3 P3}) : prop_in111 d1' d2' d3' Ph -> prop_in111 d1 d2 d3 Ph.",
            "VernacStartTheoremProof",
            "47adf07b644370670a38a218c833a26b598e1389"
        ],
        [
            "by move=> allP x1 x2 x3 /sub1 d1x1 /sub2 d2x2 /sub3; apply: allP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let allQ1 f'' := {all1 Q1 f''}.",
            "VernacDefinition",
            "8caee163cf757de9ec01ef5c1c90f44eac146eb0"
        ],
        [
            "Let allQ1l f'' h' := {all1 Q1l f'' h'}.",
            "VernacDefinition",
            "a668a65592b5a0483ad8c5bf655838da93ceed75"
        ],
        [
            "Let allQ2 f'' := {all2 Q2 f''}.",
            "VernacDefinition",
            "f6ae4e5e4a3afd47b20cce63018b6b3726348356"
        ],
        [
            "Lemma on1W : allQ1 f -> {on D2, allQ1 f}.",
            "VernacStartTheoremProof",
            "318b2e5b504ad3fd98279779a8f4c7673f3e12a9"
        ],
        [
            "by move=> ? ?.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma on1lW : allQ1l f h -> {on D2, allQ1l f & h}.",
            "VernacStartTheoremProof",
            "61ccfd8eeec08d71f526bdfd230ff844ab2c816a"
        ],
        [
            "by move=> ? ?.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma on2W : allQ2 f -> {on D2 &, allQ2 f}.",
            "VernacStartTheoremProof",
            "23cac32c64a1a068c2283b1695b1068fe9df0b16"
        ],
        [
            "by move=> ? ?.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma on1T : {on T2, allQ1 f} -> allQ1 f.",
            "VernacStartTheoremProof",
            "9fa48f6dbdcfdaf1b2284d181366ef5b902fb264"
        ],
        [
            "by move=> ? ?; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma on1lT : {on T2, allQ1l f & h} -> allQ1l f h.",
            "VernacStartTheoremProof",
            "3dfaf589a0d82e429b52af728fac9181c41de3b3"
        ],
        [
            "by move=> ? ?; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma on2T : {on T2 &, allQ2 f} -> allQ2 f.",
            "VernacStartTheoremProof",
            "ffb0765edc2f3d12683802149b58f9e694fa9247"
        ],
        [
            "by move=> ? ?; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subon1 (Phf : ph (allQ1 f)) (Ph : ph (allQ1 f)) : prop_on1 d2' Phf Ph -> prop_on1 d2 Phf Ph.",
            "VernacStartTheoremProof",
            "25006a3293cb242527521e6ed2758d3e621d337a"
        ],
        [
            "by move=> allQ x /sub2; apply: allQ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subon1l (Phf : ph (allQ1l f)) (Ph : ph (allQ1l f h)) : prop_on1 d2' Phf Ph -> prop_on1 d2 Phf Ph.",
            "VernacStartTheoremProof",
            "0d9ef964d312613579a644653c5650ca376766d4"
        ],
        [
            "by move=> allQ x /sub2; apply: allQ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subon2 (Phf : ph (allQ2 f)) (Ph : ph (allQ2 f)) : prop_on2 d2' Phf Ph -> prop_on2 d2 Phf Ph.",
            "VernacStartTheoremProof",
            "ccddc4de8e837178f3995bb8265f1c1273ce4239"
        ],
        [
            "by move=> allQ x y /sub2=> d2fx /sub2; apply: allQ.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma can_in_inj : {in D1, cancel f g} -> {in D1 &, injective f}.",
            "VernacStartTheoremProof",
            "ff4f019f4ec3dea1f0fb5334d83c40b0f8be1528"
        ],
        [
            "by move=> fK x y /fK{2}<- /fK{2}<- ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma canLR_in x y : {in D1, cancel f g} -> y \\in D1 -> x = f y -> g x = y.",
            "VernacStartTheoremProof",
            "6ed84506f143bcbf2fcc43c24d9e5a24df76ca64"
        ],
        [
            "by move=> fK D1y ->; rewrite fK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma canRL_in x y : {in D1, cancel f g} -> x \\in D1 -> f x = y -> x = g y.",
            "VernacStartTheoremProof",
            "a0e7f4d5a287e6c2e9781cdf118b4568fde37543"
        ],
        [
            "by move=> fK D1x <-; rewrite fK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma on_can_inj : {on D2, cancel f & g} -> {on D2 &, injective f}.",
            "VernacStartTheoremProof",
            "7e9d0ac11e24e7dc1259eef1df10ae8d38863202"
        ],
        [
            "by move=> fK x y /fK{2}<- /fK{2}<- ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma canLR_on x y : {on D2, cancel f & g} -> f y \\in D2 -> x = f y -> g x = y.",
            "VernacStartTheoremProof",
            "029b73bd9d4a8db8f9bbc430eab3884926f75030"
        ],
        [
            "by move=> fK D2fy ->; rewrite fK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma canRL_on x y : {on D2, cancel f & g} -> f x \\in D2 -> f x = y -> x = g y.",
            "VernacStartTheoremProof",
            "7ce75d36fa4899a9f5d1f905f777872426073333"
        ],
        [
            "by move=> fK D2fx <-; rewrite fK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inW_bij : bijective f -> {in D1, bijective f}.",
            "VernacStartTheoremProof",
            "72ddc8a4b217986440a51d3c4d67511b384976f2"
        ],
        [
            "by case=> g' fK g'K; exists g' => * ? *; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma onW_bij : bijective f -> {on D2, bijective f}.",
            "VernacStartTheoremProof",
            "dd8f72a4585427c8cdff0fc3e6b72e92ee164712"
        ],
        [
            "by case=> g' fK g'K; exists g' => * ? *; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inT_bij : {in T1, bijective f} -> bijective f.",
            "VernacStartTheoremProof",
            "ecd7f615efb4721b50ada550a88df07ed56a843c"
        ],
        [
            "by case=> g' fK g'K; exists g' => * ? *; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma onT_bij : {on T2, bijective f} -> bijective f.",
            "VernacStartTheoremProof",
            "fcc1d695992306a7cb32d7a0561ab68d8e9cbdae"
        ],
        [
            "by case=> g' fK g'K; exists g' => * ? *; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_in_bij (D1' : pred T1) : {subset D1 <= D1'} -> {in D1', bijective f} -> {in D1, bijective f}.",
            "VernacStartTheoremProof",
            "57b9cfb63fc0d6195616a01ae4565144965bc08f"
        ],
        [
            "by move=> subD [g' fK g'K]; exists g' => x; move/subD; [apply: fK | apply: g'K].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subon_bij (D2' : pred T2) : {subset D2 <= D2'} -> {on D2', bijective f} -> {on D2, bijective f}.",
            "VernacStartTheoremProof",
            "9cd44349b5cc95641e8af90e0a4b4c1b1c8e9cc0"
        ],
        [
            "by move=> subD [g' fK g'K]; exists g' => x; move/subD; [apply: fK | apply: g'K].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LocalGlobal.",
            "VernacEndSegment",
            "213b8f3a805b359d575331f23fd9a57ef1a68ebe"
        ],
        [
            "Lemma sub_in2 T d d' (P : T -> T -> Prop) : sub_mem d d' -> forall Ph : ph {all2 P}, prop_in2 d' Ph -> prop_in2 d Ph.",
            "VernacStartTheoremProof",
            "4d1df007403325f6a2750ed80e494c475f5bb508"
        ],
        [
            "by move=> /= sub_dd'; apply: sub_in11.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_in3 T d d' (P : T -> T -> T -> Prop) : sub_mem d d' -> forall Ph : ph {all3 P}, prop_in3 d' Ph -> prop_in3 d Ph.",
            "VernacStartTheoremProof",
            "51ecb823a7da605696e178b0f89ba212a5e40af7"
        ],
        [
            "by move=> /= sub_dd'; apply: sub_in111.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_in12 T1 T d1 d1' d d' (P : T1 -> T -> T -> Prop) : sub_mem d1 d1' -> sub_mem d d' -> forall Ph : ph {all3 P}, prop_in12 d1' d' Ph -> prop_in12 d1 d Ph.",
            "VernacStartTheoremProof",
            "5bfb8a2a5833c2fdae057b16cbbfeb080cd2a4fc"
        ],
        [
            "by move=> /= sub1 sub; apply: sub_in111.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_in21 T T3 d d' d3 d3' (P : T -> T -> T3 -> Prop) : sub_mem d d' -> sub_mem d3 d3' -> forall Ph : ph {all3 P}, prop_in21 d' d3' Ph -> prop_in21 d d3 Ph.",
            "VernacStartTheoremProof",
            "fe3d02083dcfa4ea20f6c747864e647ec96029c8"
        ],
        [
            "by move=> /= sub sub3; apply: sub_in111.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equivalence_relP_in T (R : rel T) (A : pred T) : {in A & &, equivalence_rel R} <-> {in A, reflexive R} /\\ {in A &, forall x y, R x y -> {in A, R x =1 R y}}.",
            "VernacStartTheoremProof",
            "39d285edbf4f1dedf22cf015d44f19e3e38127cd"
        ],
        [
            "split=> [eqiR | [Rxx trR] x y z *]; last by split=> [|/trR-> //]; apply: Rxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by split=> [x Ax|x y Ax Ay Rxy z Az]; [rewrite (eqiR x x) | rewrite (eqiR x y)].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section MonoHomoMorphismTheory.",
            "VernacBeginSection",
            "31c38e2430fd4eb47f77c370a9bf8afebce38f68"
        ],
        [
            "Variables (aT rT sT : Type) (f : aT -> rT) (g : rT -> aT).",
            "VernacAssumption",
            "77b51ef667934f295685956d655ede50eace0712"
        ],
        [
            "Variables (aP : pred aT) (rP : pred rT) (aR : rel aT) (rR : rel rT).",
            "VernacAssumption",
            "6f54a809abbca05dd80f95160d43c2d23d7aa479"
        ],
        [
            "Lemma monoW : {mono f : x / aP x >-> rP x} -> {homo f : x / aP x >-> rP x}.",
            "VernacStartTheoremProof",
            "b580a86236524b328499122cc1ec5bc307abe416"
        ],
        [
            "by move=> hf x ax; rewrite hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mono2W : {mono f : x y / aR x y >-> rR x y} -> {homo f : x y / aR x y >-> rR x y}.",
            "VernacStartTheoremProof",
            "9dda72bc5e9b6839bf119a1c7afd0d3a682aea7f"
        ],
        [
            "by move=> hf x y axy; rewrite hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis fgK : cancel g f.",
            "VernacAssumption",
            "918c8d9a7e5614a2c9582b09a45768436367b83e"
        ],
        [
            "Lemma homoRL : {homo f : x y / aR x y >-> rR x y} -> forall x y, aR (g x) y -> rR x (f y).",
            "VernacStartTheoremProof",
            "04d4372dad13a7c6c5ed3ca17bcd3eb3bc8f2b62"
        ],
        [
            "by move=> Hf x y /Hf; rewrite fgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma homoLR : {homo f : x y / aR x y >-> rR x y} -> forall x y, aR x (g y) -> rR (f x) y.",
            "VernacStartTheoremProof",
            "318e30e954e945343bd76cbd16c79884a6c37223"
        ],
        [
            "by move=> Hf x y /Hf; rewrite fgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma homo_mono : {homo f : x y / aR x y >-> rR x y} -> {homo g : x y / rR x y >-> aR x y} -> {mono g : x y / rR x y >-> aR x y}.",
            "VernacStartTheoremProof",
            "97dd7c239dc00c1b7029a435b52d5c7807430975"
        ],
        [
            "move=> mf mg x y; case: (boolP (rR _ _))=> [/mg //|].",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by apply: contraNF=> /mf; rewrite !fgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monoLR : {mono f : x y / aR x y >-> rR x y} -> forall x y, rR (f x) y = aR x (g y).",
            "VernacStartTheoremProof",
            "3ab3bb38e0907d92914814430acc2fbd882d686c"
        ],
        [
            "by move=> mf x y; rewrite -{1}[y]fgK mf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monoRL : {mono f : x y / aR x y >-> rR x y} -> forall x y, rR x (f y) = aR (g x) y.",
            "VernacStartTheoremProof",
            "8d5b33fb6e81c01185ddeac3b6b876b38ea873e1"
        ],
        [
            "by move=> mf x y; rewrite -{1}[x]fgK mf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma can_mono : {mono f : x y / aR x y >-> rR x y} -> {mono g : x y / rR x y >-> aR x y}.",
            "VernacStartTheoremProof",
            "eb1bd9a05e3d4312e6ad44c133f09a384b7ed4d5"
        ],
        [
            "by move=> mf x y /=; rewrite -mf !fgK.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MonoHomoMorphismTheory.",
            "VernacEndSegment",
            "e0a1b6d66bee1756abdac0dd73116f5c568b4688"
        ],
        [
            "Section MonoHomoMorphismTheory_in.",
            "VernacBeginSection",
            "f5c31d23ad9fc6ba1ba51b54d41ed5b75d564fca"
        ],
        [
            "Variables (aT rT sT : predArgType) (f : aT -> rT) (g : rT -> aT).",
            "VernacAssumption",
            "2c55aa52936a099bec43baec042743e826bfbcab"
        ],
        [
            "Variable (aD : pred aT).",
            "VernacAssumption",
            "618a2f006d1f19cd415020c20eebcb4480a5ac43"
        ],
        [
            "Variable (aP : pred aT) (rP : pred rT) (aR : rel aT) (rR : rel rT).",
            "VernacAssumption",
            "6f54a809abbca05dd80f95160d43c2d23d7aa479"
        ],
        [
            "Notation rD := [pred x | g x \\in aD].",
            "VernacSyntacticDefinition",
            "634b90fa6422bf7dad47f51d811febd0ef4d94f1"
        ],
        [
            "Lemma monoW_in : {in aD &, {mono f : x y / aR x y >-> rR x y}} -> {in aD &, {homo f : x y / aR x y >-> rR x y}}.",
            "VernacStartTheoremProof",
            "5285f83ba23522c7f95fdb46379bf1fa2a8ae6a8"
        ],
        [
            "by move=> hf x y hx hy axy; rewrite hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mono2W_in : {in aD, {mono f : x / aP x >-> rP x}} -> {in aD, {homo f : x / aP x >-> rP x}}.",
            "VernacStartTheoremProof",
            "a8dc0fae22871468ad6834111849971f0be41bdd"
        ],
        [
            "by move=> hf x hx ax; rewrite hf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis fgK_on : {on aD, cancel g & f}.",
            "VernacAssumption",
            "6b0a06a7ef3032857d95937ddab513e9320151eb"
        ],
        [
            "Lemma homoRL_in : {in aD &, {homo f : x y / aR x y >-> rR x y}} -> {in rD & aD, forall x y, aR (g x) y -> rR x (f y)}.",
            "VernacStartTheoremProof",
            "6acab9265dce4010bfe18a96ff5ec0e2f0c6af70"
        ],
        [
            "by move=> Hf x y hx hy /Hf; rewrite fgK_on //; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma homoLR_in : {in aD &, {homo f : x y / aR x y >-> rR x y}} -> {in aD & rD, forall x y, aR x (g y) -> rR (f x) y}.",
            "VernacStartTheoremProof",
            "2029ff6a4c10bf176361d5de0664152657dbe394"
        ],
        [
            "by move=> Hf x y hx hy /Hf; rewrite fgK_on //; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma homo_mono_in : {in aD &, {homo f : x y / aR x y >-> rR x y}} -> {in rD &, {homo g : x y / rR x y >-> aR x y}} -> {in rD &, {mono g : x y / rR x y >-> aR x y}}.",
            "VernacStartTheoremProof",
            "f363c12ce4229148a0c220f38b00f5cbe3303008"
        ],
        [
            "move=> mf mg x y hx hy; case: (boolP (rR _ _))=> [/mg //|]; first exact.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: contraNF=> /mf; rewrite !fgK_on //; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monoLR_in : {in aD &, {mono f : x y / aR x y >-> rR x y}} -> {in aD & rD, forall x y, rR (f x) y = aR x (g y)}.",
            "VernacStartTheoremProof",
            "0c845ac78fd219858f764f23136a950b5cfb7c16"
        ],
        [
            "by move=> mf x y hx hy; rewrite -{1}[y]fgK_on // mf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma monoRL_in : {in aD &, {mono f : x y / aR x y >-> rR x y}} -> {in rD & aD, forall x y, rR x (f y) = aR (g x) y}.",
            "VernacStartTheoremProof",
            "4c5e75e4416686d4b24092accdb25ddeb9b86646"
        ],
        [
            "by move=> mf x y hx hy; rewrite -{1}[x]fgK_on // mf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma can_mono_in : {in aD &, {mono f : x y / aR x y >-> rR x y}} -> {in rD &, {mono g : x y / rR x y >-> aR x y}}.",
            "VernacStartTheoremProof",
            "8a9cb6263e9d103163abd3b7c81ea37813fbd899"
        ],
        [
            "by move=> mf x y hx hy /=; rewrite -mf // !fgK_on.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MonoHomoMorphismTheory_in.",
            "VernacEndSegment",
            "bf9d137267d099f4252de6fbb8a111045f405675"
        ]
    ],
    "proofs": [
        {
            "name": "prop_congr",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "by move=> b b' ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_true_true",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_false_is_true",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_true_locked_true",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "by unlock.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negbT",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "by case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negbTE",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "by case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negbF",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "by case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negbFE",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "by case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negbK",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negbNE",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "by case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negb_inj",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "exact: can_inj negbK.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negbLR",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "exact: canLR negbK.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negbRL",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "exact: canRL negbK.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contra",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "by case: b => //; case: c.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contraL",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "by case: b => //; case: c.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contraR",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "by case: b => //; case: c.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contraLR",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "by case: b => //; case: c.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contraT",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "by case: b => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "wlog_neg",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "by case: b => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contraFT",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "by move/contraR=> notb_c /negbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contraFN",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "by move/contra=> notb_notc /negbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contraTF",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "by move/contraL=> b_notc /b_notc/negbTE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contraNF",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "by move/contra=> notb_notc /notb_notc/negbTE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contraFF",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "by move/contraFN=> bF_notc /bF_notc/negbTE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ifP",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "by case def_b: b; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ifPn",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "by case def_b: b; constructor; rewrite ?def_b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ifT",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "by move->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ifF",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "by move->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ifN",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "by move/negbTE->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "if_same",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "by case b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "if_neg",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "by case b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fun_if",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "by case b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "if_arg",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "by case b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ifE",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "introNTF",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "by case c; case Hb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "introTF",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "by case c; case Hb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elimNTF",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "by move <-; case Hb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elimTF",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "by move <-; case Hb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equivPif",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "by case Hb; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xorPif",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "by case Hb => [? _ H ? | ? H _]; case: H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "introTFn",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "by move/(introNTF Hb) <-; case b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elimTFn",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "by move <-; apply: (elimNTF Hb); case b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equivPifn",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "by rewrite -if_neg; apply: equivPif.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "xorPifn",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "by rewrite -if_neg; apply: xorPif.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "introT",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "exact: introTF true _.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "introF",
            "line_nb": 205,
            "steps": [
                {
                    "command": [
                        "exact: introTF false _.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "introN",
            "line_nb": 208,
            "steps": [
                {
                    "command": [
                        "exact: introNTF true _.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "introNf",
            "line_nb": 211,
            "steps": [
                {
                    "command": [
                        "exact: introNTF false _.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "introTn",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "exact: introTFn true _.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "introFn",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "exact: introTFn false _.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elimT",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "exact: elimTF true _.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elimF",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "exact: elimTF false _.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elimN",
            "line_nb": 226,
            "steps": [
                {
                    "command": [
                        "exact: elimNTF true _.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elimNf",
            "line_nb": 229,
            "steps": [
                {
                    "command": [
                        "exact: elimNTF false _.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elimTn",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "exact: elimTFn true _.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elimFn",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "exact: elimTFn false _.",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "introP",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "by case b; constructor; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iffP",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "by case: Pb; constructor; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equivP",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "by case; apply: iffP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sumboolP",
            "line_nb": 247,
            "steps": [
                {
                    "command": [
                        "by case: decQ; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "appP",
            "line_nb": 250,
            "steps": [
                {
                    "command": [
                        "by move=> Qb; move/introT; case: Qb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sameP",
            "line_nb": 253,
            "steps": [
                {
                    "command": [
                        "by case; [apply: introT | apply: introF].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decPcases",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "by case Pb.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decP",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "by case: b decPcases; [left | right].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "rwP",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "by split; [apply: introT | apply: elimT].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rwP2",
            "line_nb": 265,
            "steps": [
                {
                    "command": [
                        "by move=> Qb; split=> ?; [apply: appP | apply: elimT; case: Qb].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "altP",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "by case def_b: b / Pb; constructor; rewrite ?def_b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "impliesP",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "impliesPn",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "by case=> iP ? /iP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unlessL",
            "line_nb": 289,
            "steps": [
                {
                    "command": [
                        "by split=> hC G /(_ hC).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unlessR",
            "line_nb": 292,
            "steps": [
                {
                    "command": [
                        "by split=> hP G _ /(_ hP).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unless_sym",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "by split; apply; [apply/unlessR | apply/unlessL].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unlessP",
            "line_nb": 298,
            "steps": [
                {
                    "command": [
                        "by split=> [|[/unlessL | /unlessR]]; apply; [left | right].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bind_unless",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "by split; apply=> [hC|hP]; [apply/unlessL/unlessL | apply/unlessR].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unless_contra",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "by split; case: b => [_ | hC]; [apply/unlessR | apply/unlessL/hC].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "classicP",
            "line_nb": 308,
            "steps": [
                {
                    "command": [
                        "split=> [cP nP | nnP [] // nP]; last by case nnP; move/nP.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by have: P -> false; [move/nP | move/cP].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "classicW",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "by move=> hP _ ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "classic_bind",
            "line_nb": 315,
            "steps": [
                {
                    "command": [
                        "by move=> iPQ cP b /iPQ-/cP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "classic_EM",
            "line_nb": 318,
            "steps": [
                {
                    "command": [
                        "by case=> // undecP; apply/undecP; right=> notP; apply/notF/undecP; left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "classic_pick",
            "line_nb": 321,
            "steps": [
                {
                    "command": [
                        "case=> // undecP; apply/undecP; right=> x Px.",
                        "VernacExtend",
                        "58168c4367f5c8fd5aef7600205b564e8c5f4f4d"
                    ]
                },
                {
                    "command": [
                        "by apply/notF/undecP; left; exists x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "classic_imply",
            "line_nb": 325,
            "steps": [
                {
                    "command": [
                        "move=> iPQ []// notPQ; apply/notPQ=> /iPQ-cQ.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by case: notF; apply: cQ => hQ; apply: notPQ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_and2",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "by split=> haveP; split=> x; case: (haveP x).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_and3",
            "line_nb": 353,
            "steps": [
                {
                    "command": [
                        "by split=> haveP; split=> x; case: (haveP x).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_and4",
            "line_nb": 356,
            "steps": [
                {
                    "command": [
                        "by split=> haveP; split=> x; case: (haveP x).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_and5",
            "line_nb": 359,
            "steps": [
                {
                    "command": [
                        "by split=> haveP; split=> x; case: (haveP x).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pair_andP",
            "line_nb": 367,
            "steps": [
                {
                    "command": [
                        "by split; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "idP",
            "line_nb": 372,
            "steps": [
                {
                    "command": [
                        "by case b1; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "boolP",
            "line_nb": 375,
            "steps": [
                {
                    "command": [
                        "exact: (altP idP).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "idPn",
            "line_nb": 378,
            "steps": [
                {
                    "command": [
                        "by case b1; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negP",
            "line_nb": 381,
            "steps": [
                {
                    "command": [
                        "by case b1; constructor; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negPn",
            "line_nb": 384,
            "steps": [
                {
                    "command": [
                        "by case b1; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negPf",
            "line_nb": 387,
            "steps": [
                {
                    "command": [
                        "by case b1; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andP",
            "line_nb": 390,
            "steps": [
                {
                    "command": [
                        "by case b1; case b2; constructor=> //; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and3P",
            "line_nb": 393,
            "steps": [
                {
                    "command": [
                        "by case b1; case b2; case b3; constructor; try by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and4P",
            "line_nb": 396,
            "steps": [
                {
                    "command": [
                        "by case b1; case b2; case b3; case b4; constructor; try by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and5P",
            "line_nb": 399,
            "steps": [
                {
                    "command": [
                        "by case b1; case b2; case b3; case b4; case b5; constructor; try by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orP",
            "line_nb": 402,
            "steps": [
                {
                    "command": [
                        "by case b1; case b2; constructor; auto; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or3P",
            "line_nb": 405,
            "steps": [
                {
                    "command": [
                        "case b1; first by constructor; constructor 1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b2; first by constructor; constructor 2.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b3; first by constructor; constructor 3.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by constructor; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or4P",
            "line_nb": 411,
            "steps": [
                {
                    "command": [
                        "case b1; first by constructor; constructor 1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b2; first by constructor; constructor 2.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b3; first by constructor; constructor 3.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case b4; first by constructor; constructor 4.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by constructor; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nandP",
            "line_nb": 418,
            "steps": [
                {
                    "command": [
                        "by case b1; case b2; constructor; auto; case; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norP",
            "line_nb": 421,
            "steps": [
                {
                    "command": [
                        "by case b1; case b2; constructor; auto; case; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "implyP",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "by case b1; case b2; constructor; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andTb",
            "line_nb": 445,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andFb",
            "line_nb": 448,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andbT",
            "line_nb": 451,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andbF",
            "line_nb": 454,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andbb",
            "line_nb": 457,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andbC",
            "line_nb": 460,
            "steps": [
                {
                    "command": [
                        "by do 2!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andbA",
            "line_nb": 463,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andbCA",
            "line_nb": 466,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andbAC",
            "line_nb": 469,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andbACA",
            "line_nb": 472,
            "steps": [
                {
                    "command": [
                        "by do 4!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orTb",
            "line_nb": 475,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orFb",
            "line_nb": 478,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbT",
            "line_nb": 481,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbF",
            "line_nb": 484,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbb",
            "line_nb": 487,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbC",
            "line_nb": 490,
            "steps": [
                {
                    "command": [
                        "by do 2!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbA",
            "line_nb": 493,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbCA",
            "line_nb": 496,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbAC",
            "line_nb": 499,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbACA",
            "line_nb": 502,
            "steps": [
                {
                    "command": [
                        "by do 4!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andbN",
            "line_nb": 505,
            "steps": [
                {
                    "command": [
                        "by case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andNb",
            "line_nb": 508,
            "steps": [
                {
                    "command": [
                        "by case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbN",
            "line_nb": 511,
            "steps": [
                {
                    "command": [
                        "by case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orNb",
            "line_nb": 514,
            "steps": [
                {
                    "command": [
                        "by case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andb_orl",
            "line_nb": 517,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andb_orr",
            "line_nb": 520,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orb_andl",
            "line_nb": 523,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orb_andr",
            "line_nb": 526,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andb_idl",
            "line_nb": 529,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andb_idr",
            "line_nb": 532,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andb_id2l",
            "line_nb": 535,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b; case: c => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andb_id2r",
            "line_nb": 538,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b; case: c => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orb_idl",
            "line_nb": 541,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orb_idr",
            "line_nb": 544,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orb_id2l",
            "line_nb": 547,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b; case: c => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orb_id2r",
            "line_nb": 550,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b; case: c => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negb_and",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negb_or",
            "line_nb": 556,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andbK",
            "line_nb": 559,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andKb",
            "line_nb": 562,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orbK",
            "line_nb": 565,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orKb",
            "line_nb": 568,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "implybT",
            "line_nb": 571,
            "steps": [
                {
                    "command": [
                        "by case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "implybF",
            "line_nb": 574,
            "steps": [
                {
                    "command": [
                        "by case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "implyFb",
            "line_nb": 577,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "implyTb",
            "line_nb": 580,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "implybb",
            "line_nb": 583,
            "steps": [
                {
                    "command": [
                        "by case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negb_imply",
            "line_nb": 586,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "implybE",
            "line_nb": 589,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "implyNb",
            "line_nb": 592,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "implybN",
            "line_nb": 595,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "implybNN",
            "line_nb": 598,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "implyb_idl",
            "line_nb": 601,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "implyb_idr",
            "line_nb": 604,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "implyb_id2l",
            "line_nb": 607,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b; case: c => // ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addFb",
            "line_nb": 610,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addbF",
            "line_nb": 613,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addbb",
            "line_nb": 616,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addbC",
            "line_nb": 619,
            "steps": [
                {
                    "command": [
                        "by do 2!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addbA",
            "line_nb": 622,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addbCA",
            "line_nb": 625,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addbAC",
            "line_nb": 628,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addbACA",
            "line_nb": 631,
            "steps": [
                {
                    "command": [
                        "by do 4!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andb_addl",
            "line_nb": 634,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "andb_addr",
            "line_nb": 637,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addKb",
            "line_nb": 640,
            "steps": [
                {
                    "command": [
                        "by do 2!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addbK",
            "line_nb": 643,
            "steps": [
                {
                    "command": [
                        "by do 2!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addIb",
            "line_nb": 646,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addbI",
            "line_nb": 649,
            "steps": [
                {
                    "command": [
                        "by do 3!case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addTb",
            "line_nb": 652,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addbT",
            "line_nb": 655,
            "steps": [
                {
                    "command": [
                        "by case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addbN",
            "line_nb": 658,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addNb",
            "line_nb": 661,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "addbP",
            "line_nb": 664,
            "steps": [
                {
                    "command": [
                        "by case: a; case: b; constructor.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subrelUl",
            "line_nb": 703,
            "steps": [
                {
                    "command": [
                        "by move=> *; apply/orP; left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subrelUr",
            "line_nb": 706,
            "steps": [
                {
                    "command": [
                        "by move=> *; apply/orP; right.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_refl",
            "line_nb": 745,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_topred",
            "line_nb": 780,
            "steps": [
                {
                    "command": [
                        "by rewrite /mem; case: pT pp => T1 app1 [mem1 /= ->].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "topredE",
            "line_nb": 783,
            "steps": [
                {
                    "command": [
                        "by rewrite -mem_topred.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "app_predE",
            "line_nb": 786,
            "steps": [
                {
                    "command": [
                        "by case: ap => _ /= ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_applicative",
            "line_nb": 789,
            "steps": [
                {
                    "command": [
                        "by case: amp => [[_ /= ->]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_collective",
            "line_nb": 792,
            "steps": [
                {
                    "command": [
                        "by case: msp => _ /= ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_simpl",
            "line_nb": 795,
            "steps": [
                {
                    "command": [
                        "by case: msp => _ /= ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unfold_in",
            "line_nb": 798,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "simpl_predE",
            "line_nb": 801,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_simpl",
            "line_nb": 805,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_mem",
            "line_nb": 809,
            "steps": [
                {
                    "command": [
                        "by rewrite -mem_topred.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "qualifE",
            "line_nb": 816,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "keyed_predE",
            "line_nb": 839,
            "steps": [
                {
                    "command": [
                        "by case: k_p.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "keyed_qualifier_suproof",
            "line_nb": 851,
            "steps": [
                {
                    "command": [
                        "by case: k_q => /= _ ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_tag_cond_dep",
            "line_nb": 863,
            "steps": [
                {
                    "command": [
                        "move=> f0 fP; apply: all_tag (fun x y => C x -> U x y) _ => x.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by case Cx: (C x); [case/fP: Cx => y; exists y | exists (f0 x)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_tag_cond",
            "line_nb": 867,
            "steps": [
                {
                    "command": [
                        "by move=> y0; apply: all_tag_cond_dep.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_sig_cond_dep",
            "line_nb": 870,
            "steps": [
                {
                    "command": [
                        "by move=> f0 /(all_tag_cond_dep f0)[f]; exists f.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "all_sig_cond",
            "line_nb": 873,
            "steps": [
                {
                    "command": [
                        "by move=> y0; apply: all_sig_cond_dep.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "symmetric_from_pre",
            "line_nb": 884,
            "steps": [
                {
                    "command": [
                        "by move=> symR x y; apply/idP/idP; apply: symR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sym_left_transitive",
            "line_nb": 893,
            "steps": [
                {
                    "command": [
                        "by move=> x y Rxy z; apply/idP/idP; apply: trR; rewrite // symR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sym_right_transitive",
            "line_nb": 896,
            "steps": [
                {
                    "command": [
                        "by move=> x y /sym_left_transitive Rxy z; rewrite !(symR z) Rxy.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equivalence_relP",
            "line_nb": 901,
            "steps": [
                {
                    "command": [
                        "split=> [eqiR | [Rxx trR] x y z]; last by split=> [|/trR->].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by split=> [x | x y Rxy z]; [rewrite (eqiR x x x) | rewrite (eqiR x y z)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rev_trans",
            "line_nb": 906,
            "steps": [
                {
                    "command": [
                        "by move=> trR x y z Ryx Rzy; apply: trR Rzy Ryx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "forE",
            "line_nb": 918,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in1W",
            "line_nb": 963,
            "steps": [
                {
                    "command": [
                        "by move=> ? ?.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in2W",
            "line_nb": 966,
            "steps": [
                {
                    "command": [
                        "by move=> ? ?.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in3W",
            "line_nb": 969,
            "steps": [
                {
                    "command": [
                        "by move=> ? ?.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in1T",
            "line_nb": 972,
            "steps": [
                {
                    "command": [
                        "by move=> ? ?; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in2T",
            "line_nb": 975,
            "steps": [
                {
                    "command": [
                        "by move=> ? ?; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in3T",
            "line_nb": 978,
            "steps": [
                {
                    "command": [
                        "by move=> ? ?; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_in1",
            "line_nb": 981,
            "steps": [
                {
                    "command": [
                        "by move=> allP x /sub1; apply: allP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_in11",
            "line_nb": 984,
            "steps": [
                {
                    "command": [
                        "by move=> allP x1 x2 /sub1 d1x1 /sub2; apply: allP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_in111",
            "line_nb": 987,
            "steps": [
                {
                    "command": [
                        "by move=> allP x1 x2 x3 /sub1 d1x1 /sub2 d2x2 /sub3; apply: allP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "on1W",
            "line_nb": 993,
            "steps": [
                {
                    "command": [
                        "by move=> ? ?.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "on1lW",
            "line_nb": 996,
            "steps": [
                {
                    "command": [
                        "by move=> ? ?.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "on2W",
            "line_nb": 999,
            "steps": [
                {
                    "command": [
                        "by move=> ? ?.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "on1T",
            "line_nb": 1002,
            "steps": [
                {
                    "command": [
                        "by move=> ? ?; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "on1lT",
            "line_nb": 1005,
            "steps": [
                {
                    "command": [
                        "by move=> ? ?; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "on2T",
            "line_nb": 1008,
            "steps": [
                {
                    "command": [
                        "by move=> ? ?; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subon1",
            "line_nb": 1011,
            "steps": [
                {
                    "command": [
                        "by move=> allQ x /sub2; apply: allQ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subon1l",
            "line_nb": 1014,
            "steps": [
                {
                    "command": [
                        "by move=> allQ x /sub2; apply: allQ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subon2",
            "line_nb": 1017,
            "steps": [
                {
                    "command": [
                        "by move=> allQ x y /sub2=> d2fx /sub2; apply: allQ.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "can_in_inj",
            "line_nb": 1020,
            "steps": [
                {
                    "command": [
                        "by move=> fK x y /fK{2}<- /fK{2}<- ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canLR_in",
            "line_nb": 1023,
            "steps": [
                {
                    "command": [
                        "by move=> fK D1y ->; rewrite fK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canRL_in",
            "line_nb": 1026,
            "steps": [
                {
                    "command": [
                        "by move=> fK D1x <-; rewrite fK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "on_can_inj",
            "line_nb": 1029,
            "steps": [
                {
                    "command": [
                        "by move=> fK x y /fK{2}<- /fK{2}<- ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canLR_on",
            "line_nb": 1032,
            "steps": [
                {
                    "command": [
                        "by move=> fK D2fy ->; rewrite fK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "canRL_on",
            "line_nb": 1035,
            "steps": [
                {
                    "command": [
                        "by move=> fK D2fx <-; rewrite fK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inW_bij",
            "line_nb": 1038,
            "steps": [
                {
                    "command": [
                        "by case=> g' fK g'K; exists g' => * ? *; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "onW_bij",
            "line_nb": 1041,
            "steps": [
                {
                    "command": [
                        "by case=> g' fK g'K; exists g' => * ? *; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inT_bij",
            "line_nb": 1044,
            "steps": [
                {
                    "command": [
                        "by case=> g' fK g'K; exists g' => * ? *; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "onT_bij",
            "line_nb": 1047,
            "steps": [
                {
                    "command": [
                        "by case=> g' fK g'K; exists g' => * ? *; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_in_bij",
            "line_nb": 1050,
            "steps": [
                {
                    "command": [
                        "by move=> subD [g' fK g'K]; exists g' => x; move/subD; [apply: fK | apply: g'K].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subon_bij",
            "line_nb": 1053,
            "steps": [
                {
                    "command": [
                        "by move=> subD [g' fK g'K]; exists g' => x; move/subD; [apply: fK | apply: g'K].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_in2",
            "line_nb": 1057,
            "steps": [
                {
                    "command": [
                        "by move=> /= sub_dd'; apply: sub_in11.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_in3",
            "line_nb": 1060,
            "steps": [
                {
                    "command": [
                        "by move=> /= sub_dd'; apply: sub_in111.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_in12",
            "line_nb": 1063,
            "steps": [
                {
                    "command": [
                        "by move=> /= sub1 sub; apply: sub_in111.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_in21",
            "line_nb": 1066,
            "steps": [
                {
                    "command": [
                        "by move=> /= sub sub3; apply: sub_in111.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equivalence_relP_in",
            "line_nb": 1069,
            "steps": [
                {
                    "command": [
                        "split=> [eqiR | [Rxx trR] x y z *]; last by split=> [|/trR-> //]; apply: Rxx.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by split=> [x Ax|x y Ax Ay Rxy z Az]; [rewrite (eqiR x x) | rewrite (eqiR x y)].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monoW",
            "line_nb": 1076,
            "steps": [
                {
                    "command": [
                        "by move=> hf x ax; rewrite hf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mono2W",
            "line_nb": 1079,
            "steps": [
                {
                    "command": [
                        "by move=> hf x y axy; rewrite hf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "homoRL",
            "line_nb": 1083,
            "steps": [
                {
                    "command": [
                        "by move=> Hf x y /Hf; rewrite fgK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "homoLR",
            "line_nb": 1086,
            "steps": [
                {
                    "command": [
                        "by move=> Hf x y /Hf; rewrite fgK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "homo_mono",
            "line_nb": 1089,
            "steps": [
                {
                    "command": [
                        "move=> mf mg x y; case: (boolP (rR _ _))=> [/mg //|].",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by apply: contraNF=> /mf; rewrite !fgK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monoLR",
            "line_nb": 1093,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y; rewrite -{1}[y]fgK mf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monoRL",
            "line_nb": 1096,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y; rewrite -{1}[x]fgK mf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "can_mono",
            "line_nb": 1099,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y /=; rewrite -mf !fgK.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monoW_in",
            "line_nb": 1108,
            "steps": [
                {
                    "command": [
                        "by move=> hf x y hx hy axy; rewrite hf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mono2W_in",
            "line_nb": 1111,
            "steps": [
                {
                    "command": [
                        "by move=> hf x hx ax; rewrite hf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "homoRL_in",
            "line_nb": 1115,
            "steps": [
                {
                    "command": [
                        "by move=> Hf x y hx hy /Hf; rewrite fgK_on //; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "homoLR_in",
            "line_nb": 1118,
            "steps": [
                {
                    "command": [
                        "by move=> Hf x y hx hy /Hf; rewrite fgK_on //; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "homo_mono_in",
            "line_nb": 1121,
            "steps": [
                {
                    "command": [
                        "move=> mf mg x y hx hy; case: (boolP (rR _ _))=> [/mg //|]; first exact.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: contraNF=> /mf; rewrite !fgK_on //; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monoLR_in",
            "line_nb": 1125,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y hx hy; rewrite -{1}[y]fgK_on // mf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "monoRL_in",
            "line_nb": 1128,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y hx hy; rewrite -{1}[x]fgK_on // mf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "can_mono_in",
            "line_nb": 1131,
            "steps": [
                {
                    "command": [
                        "by move=> mf x y hx hy /=; rewrite -mf // !fgK_on.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}