{
    "filename": "plugins/quote/Quote.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Declare ML Module \"quote_plugin\".",
            "VernacDeclareMLModule",
            "558a35082cfa885bc3689082ef79f59e1c571477"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Section variables_map.",
            "VernacBeginSection",
            "ad3810d5ffaea3aa7a7ec81229aefd0f5ff5bcb5"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Inductive varmap : Type := | Empty_vm : varmap | Node_vm : A -> varmap -> varmap -> varmap.",
            "VernacInductive",
            "5b9e26c987553bdf46302d698c20a52564ba3bd1"
        ],
        [
            "Inductive index : Set := | Left_idx : index -> index | Right_idx : index -> index | End_idx : index.",
            "VernacInductive",
            "ac8fb7dc6171230263ec55f2d90619f45ff8fd9b"
        ],
        [
            "Fixpoint varmap_find (default_value:A) (i:index) (v:varmap) {struct v} : A := match i, v with | End_idx, Node_vm x _ _ => x | Right_idx i1, Node_vm x v1 v2 => varmap_find default_value i1 v2 | Left_idx i1, Node_vm x v1 v2 => varmap_find default_value i1 v1 | _, _ => default_value end.",
            "VernacFixpoint",
            "66998f93f58b3fab7b000ad0efe5f6db5573912f"
        ],
        [
            "Fixpoint index_eq (n m:index) {struct m} : bool := match n, m with | End_idx, End_idx => true | Left_idx n', Left_idx m' => index_eq n' m' | Right_idx n', Right_idx m' => index_eq n' m' | _, _ => false end.",
            "VernacFixpoint",
            "e4db3b41dde47172d33111cc0496657d9511b0ce"
        ],
        [
            "Fixpoint index_lt (n m:index) {struct m} : bool := match n, m with | End_idx, Left_idx _ => true | End_idx, Right_idx _ => true | Left_idx n', Right_idx m' => true | Right_idx n', Right_idx m' => index_lt n' m' | Left_idx n', Left_idx m' => index_lt n' m' | _, _ => false end.",
            "VernacFixpoint",
            "05c153f458df18c9414f369126bd903013922dc1"
        ],
        [
            "Lemma index_eq_prop : forall n m:index, index_eq n m = true -> n = m.",
            "VernacStartTheoremProof",
            "16223d2887c77a2d98d1132c90fa96305499aa11"
        ],
        [
            "simple induction n; simple induction m; simpl; intros.",
            "VernacExtend",
            "26f073927f737ff4000a15f4c833abe47e7d0e27"
        ],
        [
            "rewrite (H i0 H1); reflexivity.",
            "VernacExtend",
            "bffa2211f63ba31c5d897193fba1c1033c04b68a"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "rewrite (H i0 H1); reflexivity.",
            "VernacExtend",
            "bffa2211f63ba31c5d897193fba1c1033c04b68a"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End variables_map.",
            "VernacEndSegment",
            "1343c0916528d156c121ff5322501f6ba32256f7"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ]
    ],
    "proofs": [
        {
            "name": "index_eq_prop",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "simple induction n; simple induction m; simpl; intros.",
                        "VernacExtend",
                        "26f073927f737ff4000a15f4c833abe47e7d0e27"
                    ]
                },
                {
                    "command": [
                        "rewrite (H i0 H1); reflexivity.",
                        "VernacExtend",
                        "bffa2211f63ba31c5d897193fba1c1033c04b68a"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "rewrite (H i0 H1); reflexivity.",
                        "VernacExtend",
                        "bffa2211f63ba31c5d897193fba1c1033c04b68a"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}