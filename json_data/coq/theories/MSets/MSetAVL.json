{
    "filename": "theories/MSets/MSetAVL.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import FunInd MSetInterface MSetGenTree BinInt Int.",
            "VernacRequire",
            "32223913d608f947138c008642b7cd1e1a3a33f6"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Local Unset Elimination Schemes.",
            "VernacUnsetOption",
            "2fc2e4d2065c5e8b5b407b11414df6bebc03d0a8"
        ],
        [
            "Module Ops (Import I:Int)(X:OrderedType) <: MSetInterface.Ops X.",
            "VernacDefineModule",
            "dcaa5b908fdb706341b8ac8a8559ec350ff483f4"
        ],
        [
            "Local Open Scope Int_scope.",
            "VernacOpenCloseScope",
            "7ceb4e893c3620e71cc3f8f031adbda11a943f86"
        ],
        [
            "Local Notation int := I.t.",
            "VernacSyntacticDefinition",
            "9e0664327a1f0963deed0dedf5650ea2ed18c469"
        ],
        [
            "Include MSetGenTree.Ops X I.",
            "VernacInclude",
            "71325d16c43d25d8b5ee0325853e8dbf179ccef1"
        ],
        [
            "Definition t := tree.",
            "VernacDefinition",
            "d4f6fdb67cffecb671b497fc85e7d235bf5cc5e7"
        ],
        [
            "Definition height (s : t) : int := match s with | Leaf => 0 | Node h _ _ _ => h end.",
            "VernacDefinition",
            "90470c06413355f01c71abfdf013a85a99ba02ec"
        ],
        [
            "Definition singleton x := Node 1 Leaf x Leaf.",
            "VernacDefinition",
            "000266297dddc9c107c533eca3d2cd6e5efee093"
        ],
        [
            "Definition create l x r := Node (max (height l) (height r) + 1) l x r.",
            "VernacDefinition",
            "fb9c7479f73e2c7716629e6098f2537e53856028"
        ],
        [
            "Definition assert_false := create.",
            "VernacDefinition",
            "9260a3671d9da44f9d1af0b2a06172956019b2f2"
        ],
        [
            "Definition bal l x r := let hl := height l in let hr := height r in if (hr+2) <? hl then match l with | Leaf => assert_false l x r | Node _ ll lx lr => if (height lr) <=? (height ll) then create ll lx (create lr x r) else match lr with | Leaf => assert_false l x r | Node _ lrl lrx lrr => create (create ll lx lrl) lrx (create lrr x r) end end else if (hl+2) <? hr then match r with | Leaf => assert_false l x r | Node _ rl rx rr => if (height rl) <=? (height rr) then create (create l x rl) rx rr else match rl with | Leaf => assert_false l x r | Node _ rll rlx rlr => create (create l x rll) rlx (create rlr rx rr) end end else create l x r.",
            "VernacDefinition",
            "90f92283b419df284d0737b3175880080b5c28d4"
        ],
        [
            "Fixpoint add x s := match s with | Leaf => Node 1 Leaf x Leaf | Node h l y r => match X.compare x y with | Lt => bal (add x l) y r | Eq => Node h l y r | Gt => bal l y (add x r) end end.",
            "VernacFixpoint",
            "e70c0424acce8870986248e01d478d5d4f28655c"
        ],
        [
            "Fixpoint join l : elt -> t -> t := match l with | Leaf => add | Node lh ll lx lr => fun x => fix join_aux (r:t) : t := match r with | Leaf => add x l | Node rh rl rx rr => if (rh+2) <? lh then bal ll lx (join lr x r) else if (lh+2) <? rh then bal (join_aux rl) rx rr else create l x r end end.",
            "VernacFixpoint",
            "f34e567af731fc5220a46d73a2c8e6e118ef2050"
        ],
        [
            "Fixpoint remove_min l x r : t*elt := match l with | Leaf => (r,x) | Node lh ll lx lr => let (l',m) := remove_min ll lx lr in (bal l' x r, m) end.",
            "VernacFixpoint",
            "5696a016456ba7f22a57f397b62cbf3a6f371dd7"
        ],
        [
            "Definition merge s1 s2 := match s1,s2 with | Leaf, _ => s2 | _, Leaf => s1 | _, Node _ l2 x2 r2 => let (s2',m) := remove_min l2 x2 r2 in bal s1 m s2' end.",
            "VernacDefinition",
            "d37859d7ed3990806685028e90af47651c4a2e12"
        ],
        [
            "Fixpoint remove x s := match s with | Leaf => Leaf | Node _ l y r => match X.compare x y with | Lt => bal (remove x l) y r | Eq => merge l r | Gt => bal l y (remove x r) end end.",
            "VernacFixpoint",
            "f69890b5520290b86314e2ba566a5fd491a37d3f"
        ],
        [
            "Definition concat s1 s2 := match s1, s2 with | Leaf, _ => s2 | _, Leaf => s1 | _, Node _ l2 x2 r2 => let (s2',m) := remove_min l2 x2 r2 in join s1 m s2' end.",
            "VernacDefinition",
            "c6bb2af2f87a1b3abc8efab1760dc8e1c96a6a3a"
        ],
        [
            "Record triple := mktriple { t_left:t; t_in:bool; t_right:t }.",
            "VernacInductive",
            "592d8397779a3fbadb4591db95f06c721f224f39"
        ],
        [
            "Notation \"<< l , b , r >>\" := (mktriple l b r) (at level 9).",
            "VernacNotation",
            "0cf956727fbec025b2823a63c64fa001626a9ad1"
        ],
        [
            "Fixpoint split x s : triple := match s with | Leaf => << Leaf, false, Leaf >> | Node _ l y r => match X.compare x y with | Lt => let (ll,b,rl) := split x l in << ll, b, join rl y r >> | Eq => << l, true, r >> | Gt => let (rl,b,rr) := split x r in << join l y rl, b, rr >> end end.",
            "VernacFixpoint",
            "50aa14b80cf1b5228318f4070bef16cbb61d3482"
        ],
        [
            "Fixpoint inter s1 s2 := match s1, s2 with | Leaf, _ => Leaf | _, Leaf => Leaf | Node _ l1 x1 r1, _ => let (l2',pres,r2') := split x1 s2 in if pres then join (inter l1 l2') x1 (inter r1 r2') else concat (inter l1 l2') (inter r1 r2') end.",
            "VernacFixpoint",
            "08d5fe0b5e42b9b9ee71c7a721317f381a0eb46e"
        ],
        [
            "Fixpoint diff s1 s2 := match s1, s2 with | Leaf, _ => Leaf | _, Leaf => s1 | Node _ l1 x1 r1, _ => let (l2',pres,r2') := split x1 s2 in if pres then concat (diff l1 l2') (diff r1 r2') else join (diff l1 l2') x1 (diff r1 r2') end.",
            "VernacFixpoint",
            "36e0b774c323b706a7d3ba5c453ec8a5394154bf"
        ],
        [
            "Fixpoint union s1 s2 := match s1, s2 with | Leaf, _ => s2 | _, Leaf => s1 | Node _ l1 x1 r1, _ => let (l2',_,r2') := split x1 s2 in join (union l1 l2') x1 (union r1 r2') end.",
            "VernacFixpoint",
            "2e3948b79f121ce937f5cff40b42026b22717cc7"
        ],
        [
            "Fixpoint filter (f:elt->bool) s := match s with | Leaf => Leaf | Node _ l x r => let l' := filter f l in let r' := filter f r in if f x then join l' x r' else concat l' r' end.",
            "VernacFixpoint",
            "decc9e908f79b276550345a5af824a49c6c1ab12"
        ],
        [
            "Fixpoint partition (f:elt->bool)(s : t) : t*t := match s with | Leaf => (Leaf, Leaf) | Node _ l x r => let (l1,l2) := partition f l in let (r1,r2) := partition f r in if f x then (join l1 x r1, concat l2 r2) else (concat l1 r1, join l2 x r2) end.",
            "VernacFixpoint",
            "3669a6174a90a523b4f14f767bfa3ca3aa11ee10"
        ],
        [
            "End Ops.",
            "VernacEndSegment",
            "c7e50ec7301a1cd71f0d4a4ff2dfc887f351fa21"
        ],
        [
            "Module MakeRaw (Import I:Int)(X:OrderedType) <: RawSets X.",
            "VernacDefineModule",
            "c904157001ec1a4753d10cfd171496b79bbd5a70"
        ],
        [
            "Include Ops I X.",
            "VernacInclude",
            "bbf253e0627a8b8f0b8c55dbcf322908994ad1d3"
        ],
        [
            "Include MSetGenTree.Props X I.",
            "VernacInclude",
            "db28e4478ddd08b8ee1f77bbcfd82b21993a8283"
        ],
        [
            "Local Hint Immediate MX.eq_sym.",
            "VernacHints",
            "c79a666ae0946cb5adeade4ca113bfb2fe7c413d"
        ],
        [
            "Local Hint Unfold In lt_tree gt_tree Ok.",
            "VernacHints",
            "c1b2684c263118e8e345ebf7e554a8ec17960f16"
        ],
        [
            "Local Hint Constructors InT bst.",
            "VernacHints",
            "2edd66ea7d6802a797bb7bd60fa7cb8652f6d3dc"
        ],
        [
            "Local Hint Resolve MX.eq_refl MX.eq_trans MX.lt_trans ok.",
            "VernacHints",
            "929c189c4d3932cdcab91c10efb2087308b4c4d0"
        ],
        [
            "Local Hint Resolve lt_leaf gt_leaf lt_tree_node gt_tree_node.",
            "VernacHints",
            "1e0818cb5e2179448cdc59c6371888baad07b77d"
        ],
        [
            "Local Hint Resolve lt_tree_not_in lt_tree_trans gt_tree_not_in gt_tree_trans.",
            "VernacHints",
            "9bfedf822cb9439e821044f23eb6f3741fe5e366"
        ],
        [
            "Local Hint Resolve elements_spec2.",
            "VernacHints",
            "8ac8e2c41c555c78c7eb5fe5261800603f24d66f"
        ],
        [
            "Tactic Notation \"factornode\" ident(s) := try clear s; match goal with | |- context [Node ?l ?x ?r ?h] => set (s:=Node l x r h) in *; clearbody s; clear l x r h | _ : context [Node ?l ?x ?r ?h] |- _ => set (s:=Node l x r h) in *; clearbody s; clear l x r h end.",
            "VernacExtend",
            "1ff2233dbc3e6fa2ad9e3712cc66ef5cf9840ad7"
        ],
        [
            "Functional Scheme bal_ind := Induction for bal Sort Prop.",
            "VernacExtend",
            "2ffffcfca85460d2d138f84a79e16a058b0ef4cd"
        ],
        [
            "Functional Scheme remove_min_ind := Induction for remove_min Sort Prop.",
            "VernacExtend",
            "d755a6a77cc7801b11200f8a7370a2a60a63bf52"
        ],
        [
            "Functional Scheme merge_ind := Induction for merge Sort Prop.",
            "VernacExtend",
            "575274cc3f3eeee7d5e2bf1f3afed5b6b530bce0"
        ],
        [
            "Functional Scheme concat_ind := Induction for concat Sort Prop.",
            "VernacExtend",
            "f61eb4d3521b7a4684e388c80b90c59f2970b02d"
        ],
        [
            "Functional Scheme inter_ind := Induction for inter Sort Prop.",
            "VernacExtend",
            "fc0a561b714aa3df1333507a425debc138f241a0"
        ],
        [
            "Functional Scheme diff_ind := Induction for diff Sort Prop.",
            "VernacExtend",
            "bae5b05bae972691b098f39a9635a50dcf7ccb80"
        ],
        [
            "Functional Scheme union_ind := Induction for union Sort Prop.",
            "VernacExtend",
            "8a2763eb864ace4b061757185a8fceb4f3faacb6"
        ],
        [
            "Notation \"s #1\" := (fst s) (at level 9, format \"s '#1'\") : pair_scope.",
            "VernacNotation",
            "9525e701785da7533020cedeec2c41712866543c"
        ],
        [
            "Notation \"s #2\" := (snd s) (at level 9, format \"s '#2'\") : pair_scope.",
            "VernacNotation",
            "327b45dc7a8ac08cedc37bb33f247a2ac5ff4814"
        ],
        [
            "Notation \"t #l\" := (t_left t) (at level 9, format \"t '#l'\") : pair_scope.",
            "VernacNotation",
            "b7e0afdd12692e88d1d244f0d29d20851fcf1bdc"
        ],
        [
            "Notation \"t #b\" := (t_in t) (at level 9, format \"t '#b'\") : pair_scope.",
            "VernacNotation",
            "5166baa78aa6071a920d84104fcc32c12a76c54d"
        ],
        [
            "Notation \"t #r\" := (t_right t) (at level 9, format \"t '#r'\") : pair_scope.",
            "VernacNotation",
            "f9842fabf338238e62b0e74d4277c6861a06ed42"
        ],
        [
            "Local Open Scope pair_scope.",
            "VernacOpenCloseScope",
            "dc0dcd7d851fdcb4f21419978fcd045b285d11f4"
        ],
        [
            "Lemma singleton_spec : forall x y, InT y (singleton x) <-> X.eq y x.",
            "VernacStartTheoremProof",
            "e685daa9cddd3e147a0a010678fdeba908b28e54"
        ],
        [
            "unfold singleton; intuition_in.",
            "VernacExtend",
            "9a2f74c1eb4dad31d2d7ab08ae5c7d2ed87f9e70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance singleton_ok x : Ok (singleton x).",
            "VernacInstance",
            "b2eb151394fefb7d5dbdc778d6ed4b69f37aa0d5"
        ],
        [
            "unfold singleton; auto.",
            "VernacExtend",
            "02345434145fab69e673ef0535e29323c257941e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma create_spec : forall l x r y, InT y (create l x r) <-> X.eq y x \\/ InT y l \\/ InT y r.",
            "VernacStartTheoremProof",
            "6233d4d8ec5132231bbf8c0104540e5aada2b71c"
        ],
        [
            "unfold create; split; [ inversion_clear 1 | ]; intuition.",
            "VernacExtend",
            "ef8d68f7e5f64dbc3f13801c31216f5d1dfde89e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance create_ok l x r `(Ok l, Ok r, lt_tree x l, gt_tree x r) : Ok (create l x r).",
            "VernacInstance",
            "0efb3f309f84cfc25285fe27ed40d0af36e37325"
        ],
        [
            "unfold create; auto.",
            "VernacExtend",
            "4d89f4b44a39fae4ef436be7c5a318c2b03c802d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bal_spec : forall l x r y, InT y (bal l x r) <-> X.eq y x \\/ InT y l \\/ InT y r.",
            "VernacStartTheoremProof",
            "310559431f91fcd87bbfb056cf8933867f32170b"
        ],
        [
            "intros l x r; functional induction bal l x r; intros; try clear e0; rewrite !create_spec; intuition_in.",
            "VernacExtend",
            "04f38955d46314e8db2472d69003d9c99732e9d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance bal_ok l x r `(Ok l, Ok r, lt_tree x l, gt_tree x r) : Ok (bal l x r).",
            "VernacInstance",
            "28528207c2b6a76b6cbe840f7756d2a9e41cf146"
        ],
        [
            "functional induction bal l x r; intros; inv; repeat apply create_ok; auto; unfold create; (apply lt_tree_node || apply gt_tree_node); auto; (eapply lt_tree_trans || eapply gt_tree_trans); eauto.",
            "VernacExtend",
            "76c8929b320139419c0bd38294a8174b30d5b288"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_spec' : forall s x y, InT y (add x s) <-> X.eq y x \\/ InT y s.",
            "VernacStartTheoremProof",
            "c9c3d2ccee1bbd9240ecd59728cb17f0a9e4626a"
        ],
        [
            "induct s x; try rewrite ?bal_spec, ?IHl, ?IHr; intuition_in.",
            "VernacExtend",
            "c8bafa5316f9c8219f84eca6b42cc98cff448e59"
        ],
        [
            "setoid_replace y with x'; eauto.",
            "VernacExtend",
            "426e85c9fc0ab044247a065906b8ec7a80a9f7f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_spec : forall s x y `{Ok s}, InT y (add x s) <-> X.eq y x \\/ InT y s.",
            "VernacStartTheoremProof",
            "432b3db21eb099c00be69db26c8eff657d1475aa"
        ],
        [
            "intros; apply add_spec'.",
            "VernacExtend",
            "dbd393de6e2903fe8161665eaf536ee652d4ae8c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance add_ok s x `(Ok s) : Ok (add x s).",
            "VernacInstance",
            "84e9b5602f2f22a140ecfb5edf01a085e2049a22"
        ],
        [
            "induct s x; auto; apply bal_ok; auto; intros y; rewrite add_spec'; intuition; order.",
            "VernacExtend",
            "bd77908014f0a992d34e995200426606e7b14b10"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Open Scope Int_scope.",
            "VernacOpenCloseScope",
            "7ceb4e893c3620e71cc3f8f031adbda11a943f86"
        ],
        [
            "Ltac join_tac := let l := fresh \"l\" in intro l; induction l as [| lh ll _ lx lr Hlr]; [ | intros x r; induction r as [| rh rl Hrl rx rr _]; unfold join; [ | destruct ((rh+2) <? lh) eqn:LT; [ match goal with |- context b [ bal ?a ?b ?c] => replace (bal a b c) with (bal ll lx (join lr x (Node rh rl rx rr))); [ | auto] end | destruct ((lh+2) <? rh) eqn:LT'; [ match goal with |- context b [ bal ?a ?b ?c] => replace (bal a b c) with (bal (join (Node lh ll lx lr) x rl) rx rr); [ | auto] end | ] ] ] ]; intros.",
            "VernacExtend",
            "08e676480d4c72de7ccb116ecedf71256cb4c4dc"
        ],
        [
            "Lemma join_spec : forall l x r y, InT y (join l x r) <-> X.eq y x \\/ InT y l \\/ InT y r.",
            "VernacStartTheoremProof",
            "d46c3d85413c8a19a0a060d007cf5a473d8a0bcd"
        ],
        [
            "join_tac.",
            "VernacExtend",
            "fcadd626977256d2b588fba3ffaada8d55550e24"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite add_spec'; intuition_in.",
            "VernacExtend",
            "e3ffba2f148079bf874e56e88a09e88a906b640d"
        ],
        [
            "rewrite add_spec'; intuition_in.",
            "VernacExtend",
            "e3ffba2f148079bf874e56e88a09e88a906b640d"
        ],
        [
            "rewrite bal_spec, Hlr; clear Hlr Hrl; intuition_in.",
            "VernacExtend",
            "5c6c599e7c2013d50c7fa8ad4c44c9023195a13e"
        ],
        [
            "rewrite bal_spec, Hrl; clear Hlr Hrl; intuition_in.",
            "VernacExtend",
            "0165813656de133e66ee139cc3a270bf71a04f6d"
        ],
        [
            "apply create_spec.",
            "VernacExtend",
            "f8b4792b869b409e0d509620b44b0e0a8efab699"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance join_ok : forall l x r `(Ok l, Ok r, lt_tree x l, gt_tree x r), Ok (join l x r).",
            "VernacInstance",
            "b6f598da5b012542d360de5dc3eb2614df1a96d1"
        ],
        [
            "join_tac; auto with *; inv; apply bal_ok; auto; clear Hrl Hlr; intro; intros; rewrite join_spec in *.",
            "VernacExtend",
            "e4de2759b9d74b0078045798ccac145f66311d82"
        ],
        [
            "intuition; [ setoid_replace y with x | ]; eauto.",
            "VernacExtend",
            "3477ca40a630105d2cf86fc5573d51e291542421"
        ],
        [
            "intuition; [ setoid_replace y with x | ]; eauto.",
            "VernacExtend",
            "3477ca40a630105d2cf86fc5573d51e291542421"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_min_spec : forall l x r y h, InT y (Node h l x r) <-> X.eq y (remove_min l x r)#2 \\/ InT y (remove_min l x r)#1.",
            "VernacStartTheoremProof",
            "4dab2d6a4afc1fdefab1fae4797993b845b8284b"
        ],
        [
            "intros l x r; functional induction (remove_min l x r); simpl in *; intros.",
            "VernacExtend",
            "72898a3337d66c76bafc8810fa5f7faf53defc98"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "rewrite bal_spec, In_node_iff, IHp, e0; simpl; intuition.",
            "VernacExtend",
            "405c44449edadb2a318b792bef55fcc771a6c1a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance remove_min_ok l x r : forall h `(Ok (Node h l x r)), Ok (remove_min l x r)#1.",
            "VernacInstance",
            "3ac3434a305e4707689a8c60b1b443f7a3948dbd"
        ],
        [
            "functional induction (remove_min l x r); simpl; intros.",
            "VernacExtend",
            "674a8c995abf307c834fefed9746d6d2caa24617"
        ],
        [
            "inv; auto.",
            "VernacExtend",
            "1e09fea56c964df79eb372d6433eec3b5c88882b"
        ],
        [
            "assert (O : Ok (Node _x ll lx lr)) by (inv; auto).",
            "VernacExtend",
            "c33cbf4c9c28774d03e28f1da547223f1a9679e4"
        ],
        [
            "assert (L : lt_tree x (Node _x ll lx lr)) by (inv; auto).",
            "VernacExtend",
            "c5e93eeec018c36925d68f0fba7018f88292db93"
        ],
        [
            "specialize IHp with (1:=O); rewrite e0 in IHp; auto; simpl in *.",
            "VernacExtend",
            "e541115d3742b5ce8873eff90ede6c57cb4947cb"
        ],
        [
            "apply bal_ok; auto.",
            "VernacExtend",
            "462bfd7ee31cc2702b6a9ab67394d014fcc79ff9"
        ],
        [
            "inv; auto.",
            "VernacExtend",
            "1e09fea56c964df79eb372d6433eec3b5c88882b"
        ],
        [
            "intro y; specialize (L y).",
            "VernacExtend",
            "fe0f5f8e28cf8b84b0304f383d0d70973a4c906e"
        ],
        [
            "rewrite remove_min_spec, e0 in L; simpl in L; intuition.",
            "VernacExtend",
            "a6ebf39d84e60f16c1eb4e0b7a6e98a81e224e7e"
        ],
        [
            "inv; auto.",
            "VernacExtend",
            "1e09fea56c964df79eb372d6433eec3b5c88882b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_min_gt_tree : forall l x r h `{Ok (Node h l x r)}, gt_tree (remove_min l x r)#2 (remove_min l x r)#1.",
            "VernacStartTheoremProof",
            "af830b11d9c68ae1f4d71dae0a051c045c90ca42"
        ],
        [
            "intros l x r; functional induction (remove_min l x r); simpl; intros.",
            "VernacExtend",
            "d4fc32d847c1d079c0c47550e58289f091cc70a9"
        ],
        [
            "inv; auto.",
            "VernacExtend",
            "1e09fea56c964df79eb372d6433eec3b5c88882b"
        ],
        [
            "assert (O : Ok (Node _x ll lx lr)) by (inv; auto).",
            "VernacExtend",
            "c33cbf4c9c28774d03e28f1da547223f1a9679e4"
        ],
        [
            "assert (L : lt_tree x (Node _x ll lx lr)) by (inv; auto).",
            "VernacExtend",
            "c5e93eeec018c36925d68f0fba7018f88292db93"
        ],
        [
            "specialize IHp with (1:=O); rewrite e0 in IHp; simpl in IHp.",
            "VernacExtend",
            "6459ef6682d05a63edf1d49be807912e95cc7ec2"
        ],
        [
            "intro y; rewrite bal_spec; intuition; specialize (L m); rewrite remove_min_spec, e0 in L; simpl in L; [setoid_replace y with x|inv]; eauto.",
            "VernacExtend",
            "78f4f0644ae1f4664200201338e9ad4d006ce73e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Hint Resolve remove_min_gt_tree.",
            "VernacHints",
            "fd8b474e087b821a6be0ab0709f8bd3d37db9331"
        ],
        [
            "Lemma merge_spec : forall s1 s2 y, InT y (merge s1 s2) <-> InT y s1 \\/ InT y s2.",
            "VernacStartTheoremProof",
            "edc48acdeed33758fc4deceb16f2949728954c1c"
        ],
        [
            "intros s1 s2; functional induction (merge s1 s2); intros; try factornode s1.",
            "VernacExtend",
            "576214377b35d55b53cf19bced210b38a155ff64"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "rewrite bal_spec, remove_min_spec, e1; simpl; intuition.",
            "VernacExtend",
            "4a7c68dfc5b7138fbed57a78da538dbdd2ae8612"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance merge_ok s1 s2 : forall `(Ok s1, Ok s2) `(forall y1 y2 : elt, InT y1 s1 -> InT y2 s2 -> X.lt y1 y2), Ok (merge s1 s2).",
            "VernacInstance",
            "aa830f44e948105d34d487198af75f82bcf49272"
        ],
        [
            "functional induction (merge s1 s2); intros; auto; try factornode s1.",
            "VernacExtend",
            "3917a5de6c15b6fc2bcc202401b4f0f4e644f292"
        ],
        [
            "apply bal_ok; auto.",
            "VernacExtend",
            "462bfd7ee31cc2702b6a9ab67394d014fcc79ff9"
        ],
        [
            "change s2' with ((s2',m)#1); rewrite <-e1; eauto with *.",
            "VernacExtend",
            "f8fe239902f727bb4dfa7e6aca4d9d81e31d79e1"
        ],
        [
            "intros y Hy.",
            "VernacExtend",
            "d610d987f827782ed7ad408419c9743f4107dcdc"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "rewrite remove_min_spec, e1; simpl; auto.",
            "VernacExtend",
            "73b94c2fc8cb378f724f366e096f1f50a057b7f8"
        ],
        [
            "change (gt_tree (s2',m)#2 (s2',m)#1); rewrite <-e1; eauto.",
            "VernacExtend",
            "c28a06a044026bac49ae00c32fb7577eb6918095"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_spec : forall s x y `{Ok s}, (InT y (remove x s) <-> InT y s /\\ ~ X.eq y x).",
            "VernacStartTheoremProof",
            "8659fcae9c63fd8b9d6cd7a6396293eb8a73b7b6"
        ],
        [
            "induct s x.",
            "VernacExtend",
            "afe5e270753ee2429716cc5ac4eca45b04e63e3e"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "rewrite merge_spec; intuition; [order|order|intuition_in].",
            "VernacExtend",
            "51c6bd2cd3ee9ba1227ea4ca494159f8b2430772"
        ],
        [
            "elim H2; eauto.",
            "VernacExtend",
            "9148c5e7f6aee20832ee2527e3c19f433e263342"
        ],
        [
            "rewrite bal_spec, IHl; clear IHl IHr; intuition; [order|order|intuition_in].",
            "VernacExtend",
            "66bb03b3fd37f9fe8ce4f7e5fa9d99c4d53dbd26"
        ],
        [
            "rewrite bal_spec, IHr; clear IHl IHr; intuition; [order|order|intuition_in].",
            "VernacExtend",
            "884d7d3994775457f33784e145ca9b52751ceac3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance remove_ok s x `(Ok s) : Ok (remove x s).",
            "VernacInstance",
            "fbf69b299eea4802deea3334ddaff7595c51f916"
        ],
        [
            "induct s x.",
            "VernacExtend",
            "afe5e270753ee2429716cc5ac4eca45b04e63e3e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply merge_ok; eauto.",
            "VernacExtend",
            "96111a4b03ee036b1c483b028f22f25f082270b4"
        ],
        [
            "apply bal_ok; auto.",
            "VernacExtend",
            "462bfd7ee31cc2702b6a9ab67394d014fcc79ff9"
        ],
        [
            "intro z; rewrite remove_spec; auto; destruct 1; eauto.",
            "VernacExtend",
            "2ea7edaf5874f67efd6cd7ddb96706c78ec5974d"
        ],
        [
            "apply bal_ok; auto.",
            "VernacExtend",
            "462bfd7ee31cc2702b6a9ab67394d014fcc79ff9"
        ],
        [
            "intro z; rewrite remove_spec; auto; destruct 1; eauto.",
            "VernacExtend",
            "2ea7edaf5874f67efd6cd7ddb96706c78ec5974d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma concat_spec : forall s1 s2 y, InT y (concat s1 s2) <-> InT y s1 \\/ InT y s2.",
            "VernacStartTheoremProof",
            "c0a19364e905e67e164f175759f12d7a9c83d029"
        ],
        [
            "intros s1 s2; functional induction (concat s1 s2); intros; try factornode s1.",
            "VernacExtend",
            "73adf11a93700bf6e49dc2767c865f97717c733b"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "rewrite join_spec, remove_min_spec, e1; simpl; intuition.",
            "VernacExtend",
            "4c08f1a41023fe53b87906bf327b84d7cc9bada1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance concat_ok s1 s2 : forall `(Ok s1, Ok s2) `(forall y1 y2 : elt, InT y1 s1 -> InT y2 s2 -> X.lt y1 y2), Ok (concat s1 s2).",
            "VernacInstance",
            "f983ddf3bdf0f3ba62303c21084513862114513e"
        ],
        [
            "functional induction (concat s1 s2); intros; auto; try factornode s1.",
            "VernacExtend",
            "01281092d8a028b5b8072426d07c82f7917a1c15"
        ],
        [
            "apply join_ok; auto.",
            "VernacExtend",
            "a52c4024397e60e0d4c2d3013e34dd7352fd5629"
        ],
        [
            "change (Ok (s2',m)#1); rewrite <-e1; eauto with *.",
            "VernacExtend",
            "0e8e4a5db49e24e0e3f8b50d43a70f3f19a82fac"
        ],
        [
            "intros y Hy.",
            "VernacExtend",
            "d610d987f827782ed7ad408419c9743f4107dcdc"
        ],
        [
            "apply H1; auto.",
            "VernacExtend",
            "57fc44af14fcaf3758941b68060efcbab0060c55"
        ],
        [
            "rewrite remove_min_spec, e1; simpl; auto.",
            "VernacExtend",
            "73b94c2fc8cb378f724f366e096f1f50a057b7f8"
        ],
        [
            "change (gt_tree (s2',m)#2 (s2',m)#1); rewrite <-e1; eauto.",
            "VernacExtend",
            "c28a06a044026bac49ae00c32fb7577eb6918095"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split_spec1 : forall s x y `{Ok s}, (InT y (split x s)#l <-> InT y s /\\ X.lt y x).",
            "VernacStartTheoremProof",
            "853115ca6f3f48442e175cbd887a31b389c46e8b"
        ],
        [
            "induct s x.",
            "VernacExtend",
            "afe5e270753ee2429716cc5ac4eca45b04e63e3e"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "intuition_in; order.",
            "VernacExtend",
            "e3f8a8989f5e1da4d90687866dd0f1c64c953e1e"
        ],
        [
            "specialize (IHl x y).",
            "VernacExtend",
            "9393b99052edef57a47b18b83df80b67c8d8bc1e"
        ],
        [
            "destruct (split x l); simpl in *.",
            "VernacExtend",
            "6872b4fb77cf8feeb285451b8ab1e05806966a66"
        ],
        [
            "rewrite IHl; intuition_in; order.",
            "VernacExtend",
            "96f3966632de45af95ce2790c88b4149c68f0dc0"
        ],
        [
            "specialize (IHr x y).",
            "VernacExtend",
            "45d9a43205076b2f9595e76ae9f594f4fbd82e41"
        ],
        [
            "destruct (split x r); simpl in *.",
            "VernacExtend",
            "0a6e3071cff9f3ccb7c249d492be895585f195c0"
        ],
        [
            "rewrite join_spec, IHr; intuition_in; order.",
            "VernacExtend",
            "eea3c6e6ad251b0d1083e39a3489d7cb9559913d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split_spec2 : forall s x y `{Ok s}, (InT y (split x s)#r <-> InT y s /\\ X.lt x y).",
            "VernacStartTheoremProof",
            "29f5ae3de22875e9abcf400e67f75308acbcfd74"
        ],
        [
            "induct s x.",
            "VernacExtend",
            "afe5e270753ee2429716cc5ac4eca45b04e63e3e"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "intuition_in; order.",
            "VernacExtend",
            "e3f8a8989f5e1da4d90687866dd0f1c64c953e1e"
        ],
        [
            "specialize (IHl x y).",
            "VernacExtend",
            "9393b99052edef57a47b18b83df80b67c8d8bc1e"
        ],
        [
            "destruct (split x l); simpl in *.",
            "VernacExtend",
            "6872b4fb77cf8feeb285451b8ab1e05806966a66"
        ],
        [
            "rewrite join_spec, IHl; intuition_in; order.",
            "VernacExtend",
            "8563f8f31202efd2548f5039660e1501163b4576"
        ],
        [
            "specialize (IHr x y).",
            "VernacExtend",
            "45d9a43205076b2f9595e76ae9f594f4fbd82e41"
        ],
        [
            "destruct (split x r); simpl in *.",
            "VernacExtend",
            "0a6e3071cff9f3ccb7c249d492be895585f195c0"
        ],
        [
            "rewrite IHr; intuition_in; order.",
            "VernacExtend",
            "c6331bdecac4aab352ffc3c130f6343f0165c78e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split_spec3 : forall s x `{Ok s}, ((split x s)#b = true <-> InT x s).",
            "VernacStartTheoremProof",
            "b441f41a9ef9b3760ba53a2108a1d40f5905e295"
        ],
        [
            "induct s x.",
            "VernacExtend",
            "afe5e270753ee2429716cc5ac4eca45b04e63e3e"
        ],
        [
            "intuition_in; try discriminate.",
            "VernacExtend",
            "a4c3159521fc9aa5791efe5321b8ffacb0f06cc5"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "specialize (IHl x).",
            "VernacExtend",
            "3d72b5797de20de1258b608ac4d6444b0eaa5bda"
        ],
        [
            "destruct (split x l); simpl in *.",
            "VernacExtend",
            "6872b4fb77cf8feeb285451b8ab1e05806966a66"
        ],
        [
            "rewrite IHl; intuition_in; order.",
            "VernacExtend",
            "96f3966632de45af95ce2790c88b4149c68f0dc0"
        ],
        [
            "specialize (IHr x).",
            "VernacExtend",
            "c71eff1e0d21bd0241e700cf6b25ed754423e309"
        ],
        [
            "destruct (split x r); simpl in *.",
            "VernacExtend",
            "0a6e3071cff9f3ccb7c249d492be895585f195c0"
        ],
        [
            "rewrite IHr; intuition_in; order.",
            "VernacExtend",
            "c6331bdecac4aab352ffc3c130f6343f0165c78e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma split_ok : forall s x `{Ok s}, Ok (split x s)#l /\\ Ok (split x s)#r.",
            "VernacStartTheoremProof",
            "21e24f6255c2bf874e7c693ce261e7f6f178ec5b"
        ],
        [
            "induct s x; simpl; auto.",
            "VernacExtend",
            "aab772aa220a1f8c5f0e22c0738eeb7c148f6c43"
        ],
        [
            "specialize (IHl x).",
            "VernacExtend",
            "3d72b5797de20de1258b608ac4d6444b0eaa5bda"
        ],
        [
            "generalize (fun y => @split_spec2 l x y _).",
            "VernacExtend",
            "b2cbfeb13a9054ab123ff77f560b82245c4b8d0f"
        ],
        [
            "destruct (split x l); simpl in *; intuition.",
            "VernacExtend",
            "9b002740b2beff717ef3e17e4baffd00477c0f1a"
        ],
        [
            "apply join_ok; auto.",
            "VernacExtend",
            "a52c4024397e60e0d4c2d3013e34dd7352fd5629"
        ],
        [
            "intros y; rewrite H; intuition.",
            "VernacExtend",
            "0c0c6a5a1873dca642165de291fec6294b89f62a"
        ],
        [
            "specialize (IHr x).",
            "VernacExtend",
            "c71eff1e0d21bd0241e700cf6b25ed754423e309"
        ],
        [
            "generalize (fun y => @split_spec1 r x y _).",
            "VernacExtend",
            "cbafd4c563b0238310ab7fe951755f911c658094"
        ],
        [
            "destruct (split x r); simpl in *; intuition.",
            "VernacExtend",
            "88cc29e1abadf0f7463323891840cffc0f07aef9"
        ],
        [
            "apply join_ok; auto.",
            "VernacExtend",
            "a52c4024397e60e0d4c2d3013e34dd7352fd5629"
        ],
        [
            "intros y; rewrite H; intuition.",
            "VernacExtend",
            "0c0c6a5a1873dca642165de291fec6294b89f62a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance split_ok1 s x `(Ok s) : Ok (split x s)#l.",
            "VernacInstance",
            "5b8043ea10ed45730e1612e9b800b69fc688cdef"
        ],
        [
            "intros; destruct (@split_ok s x); auto.",
            "VernacExtend",
            "d8e9c01f5efa28f6f1f486b5a7a9f9dfc5fbb2f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance split_ok2 s x `(Ok s) : Ok (split x s)#r.",
            "VernacInstance",
            "773ba7fbf438a8756d8d54eb400b75abf412f5da"
        ],
        [
            "intros; destruct (@split_ok s x); auto.",
            "VernacExtend",
            "d8e9c01f5efa28f6f1f486b5a7a9f9dfc5fbb2f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac destruct_split := match goal with | H : split ?x ?s = << ?u, ?v, ?w >> |- _ => assert ((split x s)#l = u) by (rewrite H; auto); assert ((split x s)#b = v) by (rewrite H; auto); assert ((split x s)#r = w) by (rewrite H; auto); clear H; subst u w end.",
            "VernacExtend",
            "75c3a63775b39758328d5ee2d3763561ce33544a"
        ],
        [
            "Lemma inter_spec_ok : forall s1 s2 `{Ok s1, Ok s2}, Ok (inter s1 s2) /\\ (forall y, InT y (inter s1 s2) <-> InT y s1 /\\ InT y s2).",
            "VernacStartTheoremProof",
            "e8ebc77b182ca89d09e71f874acd70676a11f0f5"
        ],
        [
            "intros s1 s2; functional induction inter s1 s2; intros B1 B2; [intuition_in|intuition_in | | ]; factornode s2; destruct_split; inv; destruct IHt0 as (IHo1,IHi1), IHt1 as (IHo2,IHi2); auto with *; split; intros.",
            "VernacExtend",
            "347e223180a4ea2397ee7fdcaf07559eae5f17d4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply join_ok; auto with *; intro y; rewrite ?IHi1, ?IHi2; intuition.",
            "VernacExtend",
            "4089fd2c00d0d7d65f45365fdc3ba678a6b131a7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite join_spec, IHi1, IHi2, split_spec1, split_spec2; intuition_in.",
            "VernacExtend",
            "a7bbfbec259510ab1f83e5baea00063a72d93696"
        ],
        [
            "setoid_replace y with x1; auto.",
            "VernacExtend",
            "8c0a47a181ec78efc2cfa59c83ebbfdb5f4ca652"
        ],
        [
            "rewrite <- split_spec3; auto.",
            "VernacExtend",
            "948afc5f8c61c751825335b16d7d7b9c8f4d5870"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply concat_ok; auto with *; intros y1 y2; rewrite IHi1, IHi2; intuition; order.",
            "VernacExtend",
            "b932ff7bb9a32f6e06939a4ee616fbb656b716a2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite concat_spec, IHi1, IHi2, split_spec1, split_spec2; auto.",
            "VernacExtend",
            "6efbbbcd4c405197b79dda98b91df0bf3709ffe7"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "absurd (InT x1 s2).",
            "VernacExtend",
            "396c32e537fa262a8f5c9f229082f2cb4fe01775"
        ],
        [
            "rewrite <- split_spec3; auto; congruence.",
            "VernacExtend",
            "e978d1bb4e1a0d310548ab5a0778cbcadf60961f"
        ],
        [
            "setoid_replace x1 with y; auto.",
            "VernacExtend",
            "825372060df17d3f04c0b366b7081ddf0aa8ea87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_spec : forall s1 s2 y `{Ok s1, Ok s2}, (InT y (inter s1 s2) <-> InT y s1 /\\ InT y s2).",
            "VernacStartTheoremProof",
            "512ae33b9959435dba9dbb55403aca7ba316d485"
        ],
        [
            "intros; destruct (@inter_spec_ok s1 s2); auto.",
            "VernacExtend",
            "dab123f959908e53737263de8902b7c8ae3aff16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance inter_ok s1 s2 `(Ok s1, Ok s2) : Ok (inter s1 s2).",
            "VernacInstance",
            "10e47e27a1594f6dca881353b258ae8840be9e8c"
        ],
        [
            "intros; destruct (@inter_spec_ok s1 s2); auto.",
            "VernacExtend",
            "dab123f959908e53737263de8902b7c8ae3aff16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_spec_ok : forall s1 s2 `{Ok s1, Ok s2}, Ok (diff s1 s2) /\\ (forall y, InT y (diff s1 s2) <-> InT y s1 /\\ ~InT y s2).",
            "VernacStartTheoremProof",
            "2f26f9462c97fa507ccca3d777c365a21e3515c9"
        ],
        [
            "intros s1 s2; functional induction diff s1 s2; intros B1 B2; [intuition_in|intuition_in | | ]; factornode s2; destruct_split; inv; destruct IHt0 as (IHb1,IHi1), IHt1 as (IHb2,IHi2); auto with *; split; intros.",
            "VernacExtend",
            "6c64fb4dac27f188d3a5e884617032caa920ded1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply concat_ok; auto; intros y1 y2; rewrite IHi1, IHi2; intuition; order.",
            "VernacExtend",
            "4c5b3c36c773bb0be80715be6d46b0d0a76e9eff"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite concat_spec, IHi1, IHi2, split_spec1, split_spec2; intuition_in.",
            "VernacExtend",
            "6195702de15b17946495fbf87aa31eb0782ab408"
        ],
        [
            "absurd (InT x1 s2).",
            "VernacExtend",
            "396c32e537fa262a8f5c9f229082f2cb4fe01775"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "setoid_replace x1 with y; auto.",
            "VernacExtend",
            "825372060df17d3f04c0b366b7081ddf0aa8ea87"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- split_spec3; auto; congruence.",
            "VernacExtend",
            "e978d1bb4e1a0d310548ab5a0778cbcadf60961f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply join_ok; auto; intro y; rewrite ?IHi1, ?IHi2; intuition.",
            "VernacExtend",
            "9e8d18a036c3f79f905ad30fe2286dadcaf4ad1a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite join_spec, IHi1, IHi2, split_spec1, split_spec2; auto with *.",
            "VernacExtend",
            "485745a09dd43878f62090a7460c34b497b22f21"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "absurd (InT x1 s2); auto.",
            "VernacExtend",
            "30f0f2bbc151cf93b78ebda62b5771ad1f70909e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite <- split_spec3; auto; congruence.",
            "VernacExtend",
            "e978d1bb4e1a0d310548ab5a0778cbcadf60961f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "setoid_replace x1 with y; auto.",
            "VernacExtend",
            "825372060df17d3f04c0b366b7081ddf0aa8ea87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_spec : forall s1 s2 y `{Ok s1, Ok s2}, (InT y (diff s1 s2) <-> InT y s1 /\\ ~InT y s2).",
            "VernacStartTheoremProof",
            "0f55c72b90b4a07c27e0b21cc5d59321571403ee"
        ],
        [
            "intros; destruct (@diff_spec_ok s1 s2); auto.",
            "VernacExtend",
            "65f34afa921f22c90391425421299f41b852b60a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance diff_ok s1 s2 `(Ok s1, Ok s2) : Ok (diff s1 s2).",
            "VernacInstance",
            "397238abe62733f035127574d6e23e22aa68326f"
        ],
        [
            "intros; destruct (@diff_spec_ok s1 s2); auto.",
            "VernacExtend",
            "65f34afa921f22c90391425421299f41b852b60a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_spec : forall s1 s2 y `{Ok s1, Ok s2}, (InT y (union s1 s2) <-> InT y s1 \\/ InT y s2).",
            "VernacStartTheoremProof",
            "36a0aeed2a09711e7c1258a84b3c0e0d11ac8e8b"
        ],
        [
            "intros s1 s2; functional induction union s1 s2; intros y B1 B2.",
            "VernacExtend",
            "feb9bf1cad7c9923ba7d5f714e71b777b28c9321"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "factornode s2; destruct_split; inv.",
            "VernacExtend",
            "1645c1f02fb290bddea623b10c717b451ae4c2c5"
        ],
        [
            "rewrite join_spec, IHt0, IHt1, split_spec1, split_spec2; auto with *.",
            "VernacExtend",
            "e960714c164fed8544ccaae289c481375ae08682"
        ],
        [
            "destruct (X.compare_spec y x1); intuition_in.",
            "VernacExtend",
            "83f63ca6d6341c761f95e595f6b3d5f93873eb9b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance union_ok s1 s2 : forall `(Ok s1, Ok s2), Ok (union s1 s2).",
            "VernacInstance",
            "379a4848f40c9f4e4f7ede22c3030d65fa897309"
        ],
        [
            "functional induction union s1 s2; intros B1 B2; auto.",
            "VernacExtend",
            "cc7efc3f24572d7b426a5906246924176a4e175e"
        ],
        [
            "factornode s2; destruct_split; inv.",
            "VernacExtend",
            "1645c1f02fb290bddea623b10c717b451ae4c2c5"
        ],
        [
            "apply join_ok; auto with *.",
            "VernacExtend",
            "f29d2e9a5d72940541e9e1c3485c4259d022b3f0"
        ],
        [
            "intro y; rewrite union_spec, split_spec1; intuition_in.",
            "VernacExtend",
            "b7fe8e11b14daf94be17bfc5261a28a52351e8d4"
        ],
        [
            "intro y; rewrite union_spec, split_spec2; intuition_in.",
            "VernacExtend",
            "96244ea9bea33f0121c9b62283328e9e14fc624b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_spec : forall s x f, Proper (X.eq==>Logic.eq) f -> (InT x (filter f s) <-> InT x s /\\ f x = true).",
            "VernacStartTheoremProof",
            "5ebaee53244359ea75e4bcfe186f310f69d73ad0"
        ],
        [
            "induction s as [ |h l Hl x0 r Hr]; intros x f Hf; simpl.",
            "VernacExtend",
            "4850f5d99d9afe035fe2a84db985a616d9af6093"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case_eq (f x0); intros Hx0.",
            "VernacExtend",
            "17bf517beff4fcedcc206fc0339a841cb1580316"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite join_spec, Hl, Hr; intuition_in.",
            "VernacExtend",
            "4c3a77f8cd0d1f375f5f089c3c0859a0a447ffca"
        ],
        [
            "now setoid_replace x with x0.",
            "VernacExtend",
            "783cb58cb78d163f31372b07142e5a4e79d55c0f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite concat_spec, Hl, Hr; intuition_in.",
            "VernacExtend",
            "d167af3f9af91e21ac65aded308c5a8506e514f1"
        ],
        [
            "assert (f x = f x0) by auto.",
            "VernacExtend",
            "65290bb8d02671bad207579db5aa8fa9de4ebd9a"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_weak_spec : forall s x f, InT x (filter f s) -> InT x s.",
            "VernacStartTheoremProof",
            "abc7866df016b721c06be934055e3c1cbcc5daac"
        ],
        [
            "induction s as [ |h l Hl x0 r Hr]; intros x f; simpl.",
            "VernacExtend",
            "ca87cbfbbc89ca4055d4344cbda98c53ab4df25a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (f x0).",
            "VernacExtend",
            "d104a42a9928f2630f8995a311191dc104378aba"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite join_spec; intuition_in; eauto.",
            "VernacExtend",
            "79990c95595b5a9f9c571f664ef0e225291b7b8d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite concat_spec; intuition_in; eauto.",
            "VernacExtend",
            "0eb80a0ebe0d9cbb8c0ce24a69fbb12d79a930f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance filter_ok s f `(H : Ok s) : Ok (filter f s).",
            "VernacInstance",
            "60afa64a47f0faf8e692a06065c795587e830523"
        ],
        [
            "induction H as [ | h x l r Hl Hfl Hr Hfr Hlt Hgt ].",
            "VernacExtend",
            "afeed9e90b8e2b6723b81f19ffa397388eb98f0e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (lt_tree x (filter f l)) by (eauto using filter_weak_spec).",
            "VernacExtend",
            "083dc50437fd179226ef5af8c7c7b10e3fb1ccbe"
        ],
        [
            "assert (gt_tree x (filter f r)) by (eauto using filter_weak_spec).",
            "VernacExtend",
            "4e54be88684b3e7e029506ea7c50194e4457dcfe"
        ],
        [
            "destruct (f x); eauto using concat_ok, join_ok.",
            "VernacExtend",
            "3da8b40a874b876f1c63bad7da3752be3ec5c74c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_spec1' s f : (partition f s)#1 = filter f s.",
            "VernacStartTheoremProof",
            "c8206d4c338566d3d332ecaf68b414537390664c"
        ],
        [
            "induction s as [ | h l Hl x r Hr ]; simpl.",
            "VernacExtend",
            "47d20af36297cb0c682f691e2487ae3658bae054"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- Hl, <- Hr.",
            "VernacExtend",
            "b7c72747c38858729c506ad03bf8da66d8ebe73c"
        ],
        [
            "now destruct (partition f l), (partition f r), (f x).",
            "VernacExtend",
            "e303b702cc64b7656288f364ac16b7f7d9187f1f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_spec2' s f : (partition f s)#2 = filter (fun x => negb (f x)) s.",
            "VernacStartTheoremProof",
            "6b0816f47a62f6e9578afc69b6626d222a296372"
        ],
        [
            "induction s as [ | h l Hl x r Hr ]; simpl.",
            "VernacExtend",
            "47d20af36297cb0c682f691e2487ae3658bae054"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- Hl, <- Hr.",
            "VernacExtend",
            "b7c72747c38858729c506ad03bf8da66d8ebe73c"
        ],
        [
            "now destruct (partition f l), (partition f r), (f x).",
            "VernacExtend",
            "e303b702cc64b7656288f364ac16b7f7d9187f1f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_spec1 s f : Proper (X.eq==>Logic.eq) f -> Equal (partition f s)#1 (filter f s).",
            "VernacStartTheoremProof",
            "a8e68906a9a602499d06f625c28463d10ff0b366"
        ],
        [
            "now rewrite partition_spec1'.",
            "VernacExtend",
            "814cd82d27164d4e4439ee4ce2d4309b337c6b6d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_spec2 s f : Proper (X.eq==>Logic.eq) f -> Equal (partition f s)#2 (filter (fun x => negb (f x)) s).",
            "VernacStartTheoremProof",
            "9a3ef7d47a0cf580552dcadc866a1c7ec1da1481"
        ],
        [
            "now rewrite partition_spec2'.",
            "VernacExtend",
            "e666cf5add013d51b1cc777e413e488502bfab58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance partition_ok1 s f `(Ok s) : Ok (partition f s)#1.",
            "VernacInstance",
            "a5a666ca81325bab8b577ef28358f9b95d6ccaa7"
        ],
        [
            "rewrite partition_spec1'; now apply filter_ok.",
            "VernacExtend",
            "d3f6dc8339866260a75200362a65d309a1ad5752"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance partition_ok2 s f `(Ok s) : Ok (partition f s)#2.",
            "VernacInstance",
            "ee90f3b6bc3d2758220d617ee9e6d2c001357809"
        ],
        [
            "rewrite partition_spec2'; now apply filter_ok.",
            "VernacExtend",
            "7214bc33951497499e2b3e5b3257f4744a7feea1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MakeRaw.",
            "VernacEndSegment",
            "f45e1a6c3cc609c6ba34d2d48938cc7bf5418dd7"
        ],
        [
            "Module IntMake (I:Int)(X: OrderedType) <: S with Module E := X.",
            "VernacDefineModule",
            "27983f657924756f17a29e31901d4638e1e40594"
        ],
        [
            "Module Raw := MakeRaw I X.",
            "VernacDefineModule",
            "1ccb340bccd85f15d17af92f70f04febc856e05a"
        ],
        [
            "Include Raw2Sets X Raw.",
            "VernacInclude",
            "c74b2bc25b056a10509d9b5e597f0424d803b418"
        ],
        [
            "End IntMake.",
            "VernacEndSegment",
            "ffe73b4930e1bd1c15e0d86c1aba077160e53f0f"
        ],
        [
            "Module Make (X: OrderedType) <: S with Module E := X :=IntMake(Z_as_Int)(X).",
            "VernacDefineModule",
            "72ff8ec4799bd6b7d7ad0601f54d91fbb6446bc0"
        ]
    ],
    "proofs": [
        {
            "name": "singleton_spec",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "unfold singleton; intuition_in.",
                        "VernacExtend",
                        "9a2f74c1eb4dad31d2d7ab08ae5c7d2ed87f9e70"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "singleton_ok",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "unfold singleton; auto.",
                        "VernacExtend",
                        "02345434145fab69e673ef0535e29323c257941e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "create_spec",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "unfold create; split; [ inversion_clear 1 | ]; intuition.",
                        "VernacExtend",
                        "ef8d68f7e5f64dbc3f13801c31216f5d1dfde89e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "create_ok",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "unfold create; auto.",
                        "VernacExtend",
                        "4d89f4b44a39fae4ef436be7c5a318c2b03c802d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bal_spec",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros l x r; functional induction bal l x r; intros; try clear e0; rewrite !create_spec; intuition_in.",
                        "VernacExtend",
                        "04f38955d46314e8db2472d69003d9c99732e9d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bal_ok",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "functional induction bal l x r; intros; inv; repeat apply create_ok; auto; unfold create; (apply lt_tree_node || apply gt_tree_node); auto; (eapply lt_tree_trans || eapply gt_tree_trans); eauto.",
                        "VernacExtend",
                        "76c8929b320139419c0bd38294a8174b30d5b288"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_spec'",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "induct s x; try rewrite ?bal_spec, ?IHl, ?IHr; intuition_in.",
                        "VernacExtend",
                        "c8bafa5316f9c8219f84eca6b42cc98cff448e59"
                    ]
                },
                {
                    "command": [
                        "setoid_replace y with x'; eauto.",
                        "VernacExtend",
                        "426e85c9fc0ab044247a065906b8ec7a80a9f7f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_spec",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros; apply add_spec'.",
                        "VernacExtend",
                        "dbd393de6e2903fe8161665eaf536ee652d4ae8c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_ok",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "induct s x; auto; apply bal_ok; auto; intros y; rewrite add_spec'; intuition; order.",
                        "VernacExtend",
                        "bd77908014f0a992d34e995200426606e7b14b10"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_spec",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "join_tac.",
                        "VernacExtend",
                        "fcadd626977256d2b588fba3ffaada8d55550e24"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite add_spec'; intuition_in.",
                        "VernacExtend",
                        "e3ffba2f148079bf874e56e88a09e88a906b640d"
                    ]
                },
                {
                    "command": [
                        "rewrite add_spec'; intuition_in.",
                        "VernacExtend",
                        "e3ffba2f148079bf874e56e88a09e88a906b640d"
                    ]
                },
                {
                    "command": [
                        "rewrite bal_spec, Hlr; clear Hlr Hrl; intuition_in.",
                        "VernacExtend",
                        "5c6c599e7c2013d50c7fa8ad4c44c9023195a13e"
                    ]
                },
                {
                    "command": [
                        "rewrite bal_spec, Hrl; clear Hlr Hrl; intuition_in.",
                        "VernacExtend",
                        "0165813656de133e66ee139cc3a270bf71a04f6d"
                    ]
                },
                {
                    "command": [
                        "apply create_spec.",
                        "VernacExtend",
                        "f8b4792b869b409e0d509620b44b0e0a8efab699"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_ok",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "join_tac; auto with *; inv; apply bal_ok; auto; clear Hrl Hlr; intro; intros; rewrite join_spec in *.",
                        "VernacExtend",
                        "e4de2759b9d74b0078045798ccac145f66311d82"
                    ]
                },
                {
                    "command": [
                        "intuition; [ setoid_replace y with x | ]; eauto.",
                        "VernacExtend",
                        "3477ca40a630105d2cf86fc5573d51e291542421"
                    ]
                },
                {
                    "command": [
                        "intuition; [ setoid_replace y with x | ]; eauto.",
                        "VernacExtend",
                        "3477ca40a630105d2cf86fc5573d51e291542421"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_min_spec",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intros l x r; functional induction (remove_min l x r); simpl in *; intros.",
                        "VernacExtend",
                        "72898a3337d66c76bafc8810fa5f7faf53defc98"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "rewrite bal_spec, In_node_iff, IHp, e0; simpl; intuition.",
                        "VernacExtend",
                        "405c44449edadb2a318b792bef55fcc771a6c1a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_min_ok",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "functional induction (remove_min l x r); simpl; intros.",
                        "VernacExtend",
                        "674a8c995abf307c834fefed9746d6d2caa24617"
                    ]
                },
                {
                    "command": [
                        "inv; auto.",
                        "VernacExtend",
                        "1e09fea56c964df79eb372d6433eec3b5c88882b"
                    ]
                },
                {
                    "command": [
                        "assert (O : Ok (Node _x ll lx lr)) by (inv; auto).",
                        "VernacExtend",
                        "c33cbf4c9c28774d03e28f1da547223f1a9679e4"
                    ]
                },
                {
                    "command": [
                        "assert (L : lt_tree x (Node _x ll lx lr)) by (inv; auto).",
                        "VernacExtend",
                        "c5e93eeec018c36925d68f0fba7018f88292db93"
                    ]
                },
                {
                    "command": [
                        "specialize IHp with (1:=O); rewrite e0 in IHp; auto; simpl in *.",
                        "VernacExtend",
                        "e541115d3742b5ce8873eff90ede6c57cb4947cb"
                    ]
                },
                {
                    "command": [
                        "apply bal_ok; auto.",
                        "VernacExtend",
                        "462bfd7ee31cc2702b6a9ab67394d014fcc79ff9"
                    ]
                },
                {
                    "command": [
                        "inv; auto.",
                        "VernacExtend",
                        "1e09fea56c964df79eb372d6433eec3b5c88882b"
                    ]
                },
                {
                    "command": [
                        "intro y; specialize (L y).",
                        "VernacExtend",
                        "fe0f5f8e28cf8b84b0304f383d0d70973a4c906e"
                    ]
                },
                {
                    "command": [
                        "rewrite remove_min_spec, e0 in L; simpl in L; intuition.",
                        "VernacExtend",
                        "a6ebf39d84e60f16c1eb4e0b7a6e98a81e224e7e"
                    ]
                },
                {
                    "command": [
                        "inv; auto.",
                        "VernacExtend",
                        "1e09fea56c964df79eb372d6433eec3b5c88882b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_min_gt_tree",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros l x r; functional induction (remove_min l x r); simpl; intros.",
                        "VernacExtend",
                        "d4fc32d847c1d079c0c47550e58289f091cc70a9"
                    ]
                },
                {
                    "command": [
                        "inv; auto.",
                        "VernacExtend",
                        "1e09fea56c964df79eb372d6433eec3b5c88882b"
                    ]
                },
                {
                    "command": [
                        "assert (O : Ok (Node _x ll lx lr)) by (inv; auto).",
                        "VernacExtend",
                        "c33cbf4c9c28774d03e28f1da547223f1a9679e4"
                    ]
                },
                {
                    "command": [
                        "assert (L : lt_tree x (Node _x ll lx lr)) by (inv; auto).",
                        "VernacExtend",
                        "c5e93eeec018c36925d68f0fba7018f88292db93"
                    ]
                },
                {
                    "command": [
                        "specialize IHp with (1:=O); rewrite e0 in IHp; simpl in IHp.",
                        "VernacExtend",
                        "6459ef6682d05a63edf1d49be807912e95cc7ec2"
                    ]
                },
                {
                    "command": [
                        "intro y; rewrite bal_spec; intuition; specialize (L m); rewrite remove_min_spec, e0 in L; simpl in L; [setoid_replace y with x|inv]; eauto.",
                        "VernacExtend",
                        "78f4f0644ae1f4664200201338e9ad4d006ce73e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "merge_spec",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "intros s1 s2; functional induction (merge s1 s2); intros; try factornode s1.",
                        "VernacExtend",
                        "576214377b35d55b53cf19bced210b38a155ff64"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "rewrite bal_spec, remove_min_spec, e1; simpl; intuition.",
                        "VernacExtend",
                        "4a7c68dfc5b7138fbed57a78da538dbdd2ae8612"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "merge_ok",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "functional induction (merge s1 s2); intros; auto; try factornode s1.",
                        "VernacExtend",
                        "3917a5de6c15b6fc2bcc202401b4f0f4e644f292"
                    ]
                },
                {
                    "command": [
                        "apply bal_ok; auto.",
                        "VernacExtend",
                        "462bfd7ee31cc2702b6a9ab67394d014fcc79ff9"
                    ]
                },
                {
                    "command": [
                        "change s2' with ((s2',m)#1); rewrite <-e1; eauto with *.",
                        "VernacExtend",
                        "f8fe239902f727bb4dfa7e6aca4d9d81e31d79e1"
                    ]
                },
                {
                    "command": [
                        "intros y Hy.",
                        "VernacExtend",
                        "d610d987f827782ed7ad408419c9743f4107dcdc"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "rewrite remove_min_spec, e1; simpl; auto.",
                        "VernacExtend",
                        "73b94c2fc8cb378f724f366e096f1f50a057b7f8"
                    ]
                },
                {
                    "command": [
                        "change (gt_tree (s2',m)#2 (s2',m)#1); rewrite <-e1; eauto.",
                        "VernacExtend",
                        "c28a06a044026bac49ae00c32fb7577eb6918095"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_spec",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "induct s x.",
                        "VernacExtend",
                        "afe5e270753ee2429716cc5ac4eca45b04e63e3e"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "rewrite merge_spec; intuition; [order|order|intuition_in].",
                        "VernacExtend",
                        "51c6bd2cd3ee9ba1227ea4ca494159f8b2430772"
                    ]
                },
                {
                    "command": [
                        "elim H2; eauto.",
                        "VernacExtend",
                        "9148c5e7f6aee20832ee2527e3c19f433e263342"
                    ]
                },
                {
                    "command": [
                        "rewrite bal_spec, IHl; clear IHl IHr; intuition; [order|order|intuition_in].",
                        "VernacExtend",
                        "66bb03b3fd37f9fe8ce4f7e5fa9d99c4d53dbd26"
                    ]
                },
                {
                    "command": [
                        "rewrite bal_spec, IHr; clear IHl IHr; intuition; [order|order|intuition_in].",
                        "VernacExtend",
                        "884d7d3994775457f33784e145ca9b52751ceac3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_ok",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "induct s x.",
                        "VernacExtend",
                        "afe5e270753ee2429716cc5ac4eca45b04e63e3e"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply merge_ok; eauto.",
                        "VernacExtend",
                        "96111a4b03ee036b1c483b028f22f25f082270b4"
                    ]
                },
                {
                    "command": [
                        "apply bal_ok; auto.",
                        "VernacExtend",
                        "462bfd7ee31cc2702b6a9ab67394d014fcc79ff9"
                    ]
                },
                {
                    "command": [
                        "intro z; rewrite remove_spec; auto; destruct 1; eauto.",
                        "VernacExtend",
                        "2ea7edaf5874f67efd6cd7ddb96706c78ec5974d"
                    ]
                },
                {
                    "command": [
                        "apply bal_ok; auto.",
                        "VernacExtend",
                        "462bfd7ee31cc2702b6a9ab67394d014fcc79ff9"
                    ]
                },
                {
                    "command": [
                        "intro z; rewrite remove_spec; auto; destruct 1; eauto.",
                        "VernacExtend",
                        "2ea7edaf5874f67efd6cd7ddb96706c78ec5974d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "concat_spec",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "intros s1 s2; functional induction (concat s1 s2); intros; try factornode s1.",
                        "VernacExtend",
                        "73adf11a93700bf6e49dc2767c865f97717c733b"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "rewrite join_spec, remove_min_spec, e1; simpl; intuition.",
                        "VernacExtend",
                        "4c08f1a41023fe53b87906bf327b84d7cc9bada1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "concat_ok",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "functional induction (concat s1 s2); intros; auto; try factornode s1.",
                        "VernacExtend",
                        "01281092d8a028b5b8072426d07c82f7917a1c15"
                    ]
                },
                {
                    "command": [
                        "apply join_ok; auto.",
                        "VernacExtend",
                        "a52c4024397e60e0d4c2d3013e34dd7352fd5629"
                    ]
                },
                {
                    "command": [
                        "change (Ok (s2',m)#1); rewrite <-e1; eauto with *.",
                        "VernacExtend",
                        "0e8e4a5db49e24e0e3f8b50d43a70f3f19a82fac"
                    ]
                },
                {
                    "command": [
                        "intros y Hy.",
                        "VernacExtend",
                        "d610d987f827782ed7ad408419c9743f4107dcdc"
                    ]
                },
                {
                    "command": [
                        "apply H1; auto.",
                        "VernacExtend",
                        "57fc44af14fcaf3758941b68060efcbab0060c55"
                    ]
                },
                {
                    "command": [
                        "rewrite remove_min_spec, e1; simpl; auto.",
                        "VernacExtend",
                        "73b94c2fc8cb378f724f366e096f1f50a057b7f8"
                    ]
                },
                {
                    "command": [
                        "change (gt_tree (s2',m)#2 (s2',m)#1); rewrite <-e1; eauto.",
                        "VernacExtend",
                        "c28a06a044026bac49ae00c32fb7577eb6918095"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split_spec1",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "induct s x.",
                        "VernacExtend",
                        "afe5e270753ee2429716cc5ac4eca45b04e63e3e"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "intuition_in; order.",
                        "VernacExtend",
                        "e3f8a8989f5e1da4d90687866dd0f1c64c953e1e"
                    ]
                },
                {
                    "command": [
                        "specialize (IHl x y).",
                        "VernacExtend",
                        "9393b99052edef57a47b18b83df80b67c8d8bc1e"
                    ]
                },
                {
                    "command": [
                        "destruct (split x l); simpl in *.",
                        "VernacExtend",
                        "6872b4fb77cf8feeb285451b8ab1e05806966a66"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl; intuition_in; order.",
                        "VernacExtend",
                        "96f3966632de45af95ce2790c88b4149c68f0dc0"
                    ]
                },
                {
                    "command": [
                        "specialize (IHr x y).",
                        "VernacExtend",
                        "45d9a43205076b2f9595e76ae9f594f4fbd82e41"
                    ]
                },
                {
                    "command": [
                        "destruct (split x r); simpl in *.",
                        "VernacExtend",
                        "0a6e3071cff9f3ccb7c249d492be895585f195c0"
                    ]
                },
                {
                    "command": [
                        "rewrite join_spec, IHr; intuition_in; order.",
                        "VernacExtend",
                        "eea3c6e6ad251b0d1083e39a3489d7cb9559913d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split_spec2",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "induct s x.",
                        "VernacExtend",
                        "afe5e270753ee2429716cc5ac4eca45b04e63e3e"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "intuition_in; order.",
                        "VernacExtend",
                        "e3f8a8989f5e1da4d90687866dd0f1c64c953e1e"
                    ]
                },
                {
                    "command": [
                        "specialize (IHl x y).",
                        "VernacExtend",
                        "9393b99052edef57a47b18b83df80b67c8d8bc1e"
                    ]
                },
                {
                    "command": [
                        "destruct (split x l); simpl in *.",
                        "VernacExtend",
                        "6872b4fb77cf8feeb285451b8ab1e05806966a66"
                    ]
                },
                {
                    "command": [
                        "rewrite join_spec, IHl; intuition_in; order.",
                        "VernacExtend",
                        "8563f8f31202efd2548f5039660e1501163b4576"
                    ]
                },
                {
                    "command": [
                        "specialize (IHr x y).",
                        "VernacExtend",
                        "45d9a43205076b2f9595e76ae9f594f4fbd82e41"
                    ]
                },
                {
                    "command": [
                        "destruct (split x r); simpl in *.",
                        "VernacExtend",
                        "0a6e3071cff9f3ccb7c249d492be895585f195c0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHr; intuition_in; order.",
                        "VernacExtend",
                        "c6331bdecac4aab352ffc3c130f6343f0165c78e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split_spec3",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "induct s x.",
                        "VernacExtend",
                        "afe5e270753ee2429716cc5ac4eca45b04e63e3e"
                    ]
                },
                {
                    "command": [
                        "intuition_in; try discriminate.",
                        "VernacExtend",
                        "a4c3159521fc9aa5791efe5321b8ffacb0f06cc5"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "specialize (IHl x).",
                        "VernacExtend",
                        "3d72b5797de20de1258b608ac4d6444b0eaa5bda"
                    ]
                },
                {
                    "command": [
                        "destruct (split x l); simpl in *.",
                        "VernacExtend",
                        "6872b4fb77cf8feeb285451b8ab1e05806966a66"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl; intuition_in; order.",
                        "VernacExtend",
                        "96f3966632de45af95ce2790c88b4149c68f0dc0"
                    ]
                },
                {
                    "command": [
                        "specialize (IHr x).",
                        "VernacExtend",
                        "c71eff1e0d21bd0241e700cf6b25ed754423e309"
                    ]
                },
                {
                    "command": [
                        "destruct (split x r); simpl in *.",
                        "VernacExtend",
                        "0a6e3071cff9f3ccb7c249d492be895585f195c0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHr; intuition_in; order.",
                        "VernacExtend",
                        "c6331bdecac4aab352ffc3c130f6343f0165c78e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split_ok",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "induct s x; simpl; auto.",
                        "VernacExtend",
                        "aab772aa220a1f8c5f0e22c0738eeb7c148f6c43"
                    ]
                },
                {
                    "command": [
                        "specialize (IHl x).",
                        "VernacExtend",
                        "3d72b5797de20de1258b608ac4d6444b0eaa5bda"
                    ]
                },
                {
                    "command": [
                        "generalize (fun y => @split_spec2 l x y _).",
                        "VernacExtend",
                        "b2cbfeb13a9054ab123ff77f560b82245c4b8d0f"
                    ]
                },
                {
                    "command": [
                        "destruct (split x l); simpl in *; intuition.",
                        "VernacExtend",
                        "9b002740b2beff717ef3e17e4baffd00477c0f1a"
                    ]
                },
                {
                    "command": [
                        "apply join_ok; auto.",
                        "VernacExtend",
                        "a52c4024397e60e0d4c2d3013e34dd7352fd5629"
                    ]
                },
                {
                    "command": [
                        "intros y; rewrite H; intuition.",
                        "VernacExtend",
                        "0c0c6a5a1873dca642165de291fec6294b89f62a"
                    ]
                },
                {
                    "command": [
                        "specialize (IHr x).",
                        "VernacExtend",
                        "c71eff1e0d21bd0241e700cf6b25ed754423e309"
                    ]
                },
                {
                    "command": [
                        "generalize (fun y => @split_spec1 r x y _).",
                        "VernacExtend",
                        "cbafd4c563b0238310ab7fe951755f911c658094"
                    ]
                },
                {
                    "command": [
                        "destruct (split x r); simpl in *; intuition.",
                        "VernacExtend",
                        "88cc29e1abadf0f7463323891840cffc0f07aef9"
                    ]
                },
                {
                    "command": [
                        "apply join_ok; auto.",
                        "VernacExtend",
                        "a52c4024397e60e0d4c2d3013e34dd7352fd5629"
                    ]
                },
                {
                    "command": [
                        "intros y; rewrite H; intuition.",
                        "VernacExtend",
                        "0c0c6a5a1873dca642165de291fec6294b89f62a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split_ok1",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "intros; destruct (@split_ok s x); auto.",
                        "VernacExtend",
                        "d8e9c01f5efa28f6f1f486b5a7a9f9dfc5fbb2f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split_ok2",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "intros; destruct (@split_ok s x); auto.",
                        "VernacExtend",
                        "d8e9c01f5efa28f6f1f486b5a7a9f9dfc5fbb2f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_spec_ok",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "intros s1 s2; functional induction inter s1 s2; intros B1 B2; [intuition_in|intuition_in | | ]; factornode s2; destruct_split; inv; destruct IHt0 as (IHo1,IHi1), IHt1 as (IHo2,IHi2); auto with *; split; intros.",
                        "VernacExtend",
                        "347e223180a4ea2397ee7fdcaf07559eae5f17d4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply join_ok; auto with *; intro y; rewrite ?IHi1, ?IHi2; intuition.",
                        "VernacExtend",
                        "4089fd2c00d0d7d65f45365fdc3ba678a6b131a7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite join_spec, IHi1, IHi2, split_spec1, split_spec2; intuition_in.",
                        "VernacExtend",
                        "a7bbfbec259510ab1f83e5baea00063a72d93696"
                    ]
                },
                {
                    "command": [
                        "setoid_replace y with x1; auto.",
                        "VernacExtend",
                        "8c0a47a181ec78efc2cfa59c83ebbfdb5f4ca652"
                    ]
                },
                {
                    "command": [
                        "rewrite <- split_spec3; auto.",
                        "VernacExtend",
                        "948afc5f8c61c751825335b16d7d7b9c8f4d5870"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply concat_ok; auto with *; intros y1 y2; rewrite IHi1, IHi2; intuition; order.",
                        "VernacExtend",
                        "b932ff7bb9a32f6e06939a4ee616fbb656b716a2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite concat_spec, IHi1, IHi2, split_spec1, split_spec2; auto.",
                        "VernacExtend",
                        "6efbbbcd4c405197b79dda98b91df0bf3709ffe7"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "absurd (InT x1 s2).",
                        "VernacExtend",
                        "396c32e537fa262a8f5c9f229082f2cb4fe01775"
                    ]
                },
                {
                    "command": [
                        "rewrite <- split_spec3; auto; congruence.",
                        "VernacExtend",
                        "e978d1bb4e1a0d310548ab5a0778cbcadf60961f"
                    ]
                },
                {
                    "command": [
                        "setoid_replace x1 with y; auto.",
                        "VernacExtend",
                        "825372060df17d3f04c0b366b7081ddf0aa8ea87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_spec",
            "line_nb": 240,
            "steps": [
                {
                    "command": [
                        "intros; destruct (@inter_spec_ok s1 s2); auto.",
                        "VernacExtend",
                        "dab123f959908e53737263de8902b7c8ae3aff16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_ok",
            "line_nb": 243,
            "steps": [
                {
                    "command": [
                        "intros; destruct (@inter_spec_ok s1 s2); auto.",
                        "VernacExtend",
                        "dab123f959908e53737263de8902b7c8ae3aff16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_spec_ok",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "intros s1 s2; functional induction diff s1 s2; intros B1 B2; [intuition_in|intuition_in | | ]; factornode s2; destruct_split; inv; destruct IHt0 as (IHb1,IHi1), IHt1 as (IHb2,IHi2); auto with *; split; intros.",
                        "VernacExtend",
                        "6c64fb4dac27f188d3a5e884617032caa920ded1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply concat_ok; auto; intros y1 y2; rewrite IHi1, IHi2; intuition; order.",
                        "VernacExtend",
                        "4c5b3c36c773bb0be80715be6d46b0d0a76e9eff"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite concat_spec, IHi1, IHi2, split_spec1, split_spec2; intuition_in.",
                        "VernacExtend",
                        "6195702de15b17946495fbf87aa31eb0782ab408"
                    ]
                },
                {
                    "command": [
                        "absurd (InT x1 s2).",
                        "VernacExtend",
                        "396c32e537fa262a8f5c9f229082f2cb4fe01775"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "setoid_replace x1 with y; auto.",
                        "VernacExtend",
                        "825372060df17d3f04c0b366b7081ddf0aa8ea87"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite <- split_spec3; auto; congruence.",
                        "VernacExtend",
                        "e978d1bb4e1a0d310548ab5a0778cbcadf60961f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply join_ok; auto; intro y; rewrite ?IHi1, ?IHi2; intuition.",
                        "VernacExtend",
                        "9e8d18a036c3f79f905ad30fe2286dadcaf4ad1a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite join_spec, IHi1, IHi2, split_spec1, split_spec2; auto with *.",
                        "VernacExtend",
                        "485745a09dd43878f62090a7460c34b497b22f21"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "absurd (InT x1 s2); auto.",
                        "VernacExtend",
                        "30f0f2bbc151cf93b78ebda62b5771ad1f70909e"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite <- split_spec3; auto; congruence.",
                        "VernacExtend",
                        "e978d1bb4e1a0d310548ab5a0778cbcadf60961f"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "setoid_replace x1 with y; auto.",
                        "VernacExtend",
                        "825372060df17d3f04c0b366b7081ddf0aa8ea87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_spec",
            "line_nb": 268,
            "steps": [
                {
                    "command": [
                        "intros; destruct (@diff_spec_ok s1 s2); auto.",
                        "VernacExtend",
                        "65f34afa921f22c90391425421299f41b852b60a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_ok",
            "line_nb": 271,
            "steps": [
                {
                    "command": [
                        "intros; destruct (@diff_spec_ok s1 s2); auto.",
                        "VernacExtend",
                        "65f34afa921f22c90391425421299f41b852b60a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_spec",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "intros s1 s2; functional induction union s1 s2; intros y B1 B2.",
                        "VernacExtend",
                        "feb9bf1cad7c9923ba7d5f714e71b777b28c9321"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "factornode s2; destruct_split; inv.",
                        "VernacExtend",
                        "1645c1f02fb290bddea623b10c717b451ae4c2c5"
                    ]
                },
                {
                    "command": [
                        "rewrite join_spec, IHt0, IHt1, split_spec1, split_spec2; auto with *.",
                        "VernacExtend",
                        "e960714c164fed8544ccaae289c481375ae08682"
                    ]
                },
                {
                    "command": [
                        "destruct (X.compare_spec y x1); intuition_in.",
                        "VernacExtend",
                        "83f63ca6d6341c761f95e595f6b3d5f93873eb9b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_ok",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "functional induction union s1 s2; intros B1 B2; auto.",
                        "VernacExtend",
                        "cc7efc3f24572d7b426a5906246924176a4e175e"
                    ]
                },
                {
                    "command": [
                        "factornode s2; destruct_split; inv.",
                        "VernacExtend",
                        "1645c1f02fb290bddea623b10c717b451ae4c2c5"
                    ]
                },
                {
                    "command": [
                        "apply join_ok; auto with *.",
                        "VernacExtend",
                        "f29d2e9a5d72940541e9e1c3485c4259d022b3f0"
                    ]
                },
                {
                    "command": [
                        "intro y; rewrite union_spec, split_spec1; intuition_in.",
                        "VernacExtend",
                        "b7fe8e11b14daf94be17bfc5261a28a52351e8d4"
                    ]
                },
                {
                    "command": [
                        "intro y; rewrite union_spec, split_spec2; intuition_in.",
                        "VernacExtend",
                        "96244ea9bea33f0121c9b62283328e9e14fc624b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_spec",
            "line_nb": 289,
            "steps": [
                {
                    "command": [
                        "induction s as [ |h l Hl x0 r Hr]; intros x f Hf; simpl.",
                        "VernacExtend",
                        "4850f5d99d9afe035fe2a84db985a616d9af6093"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case_eq (f x0); intros Hx0.",
                        "VernacExtend",
                        "17bf517beff4fcedcc206fc0339a841cb1580316"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite join_spec, Hl, Hr; intuition_in.",
                        "VernacExtend",
                        "4c3a77f8cd0d1f375f5f089c3c0859a0a447ffca"
                    ]
                },
                {
                    "command": [
                        "now setoid_replace x with x0.",
                        "VernacExtend",
                        "783cb58cb78d163f31372b07142e5a4e79d55c0f"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite concat_spec, Hl, Hr; intuition_in.",
                        "VernacExtend",
                        "d167af3f9af91e21ac65aded308c5a8506e514f1"
                    ]
                },
                {
                    "command": [
                        "assert (f x = f x0) by auto.",
                        "VernacExtend",
                        "65290bb8d02671bad207579db5aa8fa9de4ebd9a"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_weak_spec",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "induction s as [ |h l Hl x0 r Hr]; intros x f; simpl.",
                        "VernacExtend",
                        "ca87cbfbbc89ca4055d4344cbda98c53ab4df25a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (f x0).",
                        "VernacExtend",
                        "d104a42a9928f2630f8995a311191dc104378aba"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite join_spec; intuition_in; eauto.",
                        "VernacExtend",
                        "79990c95595b5a9f9c571f664ef0e225291b7b8d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite concat_spec; intuition_in; eauto.",
                        "VernacExtend",
                        "0eb80a0ebe0d9cbb8c0ce24a69fbb12d79a930f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_ok",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "induction H as [ | h x l r Hl Hfl Hr Hfr Hlt Hgt ].",
                        "VernacExtend",
                        "afeed9e90b8e2b6723b81f19ffa397388eb98f0e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (lt_tree x (filter f l)) by (eauto using filter_weak_spec).",
                        "VernacExtend",
                        "083dc50437fd179226ef5af8c7c7b10e3fb1ccbe"
                    ]
                },
                {
                    "command": [
                        "assert (gt_tree x (filter f r)) by (eauto using filter_weak_spec).",
                        "VernacExtend",
                        "4e54be88684b3e7e029506ea7c50194e4457dcfe"
                    ]
                },
                {
                    "command": [
                        "destruct (f x); eauto using concat_ok, join_ok.",
                        "VernacExtend",
                        "3da8b40a874b876f1c63bad7da3752be3ec5c74c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_spec1'",
            "line_nb": 324,
            "steps": [
                {
                    "command": [
                        "induction s as [ | h l Hl x r Hr ]; simpl.",
                        "VernacExtend",
                        "47d20af36297cb0c682f691e2487ae3658bae054"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hl, <- Hr.",
                        "VernacExtend",
                        "b7c72747c38858729c506ad03bf8da66d8ebe73c"
                    ]
                },
                {
                    "command": [
                        "now destruct (partition f l), (partition f r), (f x).",
                        "VernacExtend",
                        "e303b702cc64b7656288f364ac16b7f7d9187f1f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_spec2'",
            "line_nb": 332,
            "steps": [
                {
                    "command": [
                        "induction s as [ | h l Hl x r Hr ]; simpl.",
                        "VernacExtend",
                        "47d20af36297cb0c682f691e2487ae3658bae054"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hl, <- Hr.",
                        "VernacExtend",
                        "b7c72747c38858729c506ad03bf8da66d8ebe73c"
                    ]
                },
                {
                    "command": [
                        "now destruct (partition f l), (partition f r), (f x).",
                        "VernacExtend",
                        "e303b702cc64b7656288f364ac16b7f7d9187f1f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_spec1",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "now rewrite partition_spec1'.",
                        "VernacExtend",
                        "814cd82d27164d4e4439ee4ce2d4309b337c6b6d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_spec2",
            "line_nb": 343,
            "steps": [
                {
                    "command": [
                        "now rewrite partition_spec2'.",
                        "VernacExtend",
                        "e666cf5add013d51b1cc777e413e488502bfab58"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_ok1",
            "line_nb": 346,
            "steps": [
                {
                    "command": [
                        "rewrite partition_spec1'; now apply filter_ok.",
                        "VernacExtend",
                        "d3f6dc8339866260a75200362a65d309a1ad5752"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_ok2",
            "line_nb": 349,
            "steps": [
                {
                    "command": [
                        "rewrite partition_spec2'; now apply filter_ok.",
                        "VernacExtend",
                        "7214bc33951497499e2b3e5b3257f4744a7feea1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}