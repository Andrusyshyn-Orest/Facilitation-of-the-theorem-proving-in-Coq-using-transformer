{
    "filename": "theories/MSets/MSetWeakList.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import MSetInterface.",
            "VernacRequire",
            "71f05bb644dbe27af65c4a527d8603037b58540a"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Module Ops (X: DecidableType) <: WOps X.",
            "VernacDefineModule",
            "eb66cf4eab616167232c78a7fd97aa13fdb076b9"
        ],
        [
            "Definition elt := X.t.",
            "VernacDefinition",
            "1e5220371e2feaf15d74e257297a89cf424636f8"
        ],
        [
            "Definition t := list elt.",
            "VernacDefinition",
            "0cd54eb2e7290cb0099d89847b88485fed739a6a"
        ],
        [
            "Definition empty : t := nil.",
            "VernacDefinition",
            "56abb3fc6b550f64df22afbc7ee873a3294af4bb"
        ],
        [
            "Definition is_empty (l : t) : bool := if l then true else false.",
            "VernacDefinition",
            "0b5fc4ffdeb3c7228ea21d5546ff42290999cb8e"
        ],
        [
            "Fixpoint mem (x : elt) (s : t) : bool := match s with | nil => false | y :: l => if X.eq_dec x y then true else mem x l end.",
            "VernacFixpoint",
            "477137c716f58f2f4b6ca1a2cf5334ba251810a5"
        ],
        [
            "Fixpoint add (x : elt) (s : t) : t := match s with | nil => x :: nil | y :: l => if X.eq_dec x y then s else y :: add x l end.",
            "VernacFixpoint",
            "742a06860fa77c24a8563a4d0354930d9957a39d"
        ],
        [
            "Definition singleton (x : elt) : t := x :: nil.",
            "VernacDefinition",
            "c95e11234f54b4ebd4d7f436513451b1ea1f662b"
        ],
        [
            "Fixpoint remove (x : elt) (s : t) : t := match s with | nil => nil | y :: l => if X.eq_dec x y then l else y :: remove x l end.",
            "VernacFixpoint",
            "921ae8e87d798d6adef82e167902258af6f10cc1"
        ],
        [
            "Definition fold (B : Type) (f : elt -> B -> B) : t -> B -> B := fold_left (flip f).",
            "VernacDefinition",
            "5cf37d5a55ad0ef7622c942fc922adf1640370f2"
        ],
        [
            "Definition union (s : t) : t -> t := fold add s.",
            "VernacDefinition",
            "8d13bbf1ef64f624d8f9a73941921d779d06abfe"
        ],
        [
            "Definition diff (s s' : t) : t := fold remove s' s.",
            "VernacDefinition",
            "6e47aa7b946b06ba1b1efe5174e5d971fe6ba82d"
        ],
        [
            "Definition inter (s s': t) : t := fold (fun x s => if mem x s' then add x s else s) s nil.",
            "VernacDefinition",
            "79aa079c67f5d814cc2d3ddafc82d123c5e3fd72"
        ],
        [
            "Definition subset (s s' : t) : bool := is_empty (diff s s').",
            "VernacDefinition",
            "88b1de3a57c0e2b56d80cba0e8feae153696837b"
        ],
        [
            "Definition equal (s s' : t) : bool := andb (subset s s') (subset s' s).",
            "VernacDefinition",
            "258a51fe677ce281e16511ada1617c108b3493db"
        ],
        [
            "Fixpoint filter (f : elt -> bool) (s : t) : t := match s with | nil => nil | x :: l => if f x then x :: filter f l else filter f l end.",
            "VernacFixpoint",
            "76748cca6bc79c24bf81a0f7a2c505f3e1f5fd12"
        ],
        [
            "Fixpoint for_all (f : elt -> bool) (s : t) : bool := match s with | nil => true | x :: l => if f x then for_all f l else false end.",
            "VernacFixpoint",
            "44f5ccc6dc22ad404543a656b06ecba631d0c605"
        ],
        [
            "Fixpoint exists_ (f : elt -> bool) (s : t) : bool := match s with | nil => false | x :: l => if f x then true else exists_ f l end.",
            "VernacFixpoint",
            "c41e1493a2f02d2735068a3ce398cd8cc365e633"
        ],
        [
            "Fixpoint partition (f : elt -> bool) (s : t) : t * t := match s with | nil => (nil, nil) | x :: l => let (s1, s2) := partition f l in if f x then (x :: s1, s2) else (s1, x :: s2) end.",
            "VernacFixpoint",
            "b2b61e69b625097e5dfc4fffb33677d5cfa30d13"
        ],
        [
            "Definition cardinal (s : t) : nat := length s.",
            "VernacDefinition",
            "923ee9054d60e1325519fa7a0d778e4f878138fb"
        ],
        [
            "Definition elements (s : t) : list elt := s.",
            "VernacDefinition",
            "84a7413eee8556b7ae773ca5249162dec63c9a63"
        ],
        [
            "Definition choose (s : t) : option elt := match s with | nil => None | x::_ => Some x end.",
            "VernacDefinition",
            "9cab9f6983e3d0286fbafc27727083a737f9ec91"
        ],
        [
            "End Ops.",
            "VernacEndSegment",
            "c7e50ec7301a1cd71f0d4a4ff2dfc887f351fa21"
        ],
        [
            "Module MakeRaw (X:DecidableType) <: WRawSets X.",
            "VernacDefineModule",
            "43976d04dab712669dbdb65f2af0305b6f330d6a"
        ],
        [
            "Include Ops X.",
            "VernacInclude",
            "e514e2301b58cc21c7209a1d4fb67ee7541a5f23"
        ],
        [
            "Section ForNotations.",
            "VernacBeginSection",
            "efbd1ac17b9bf2fea138b1ec385ce80998e40133"
        ],
        [
            "Notation NoDup := (NoDupA X.eq).",
            "VernacSyntacticDefinition",
            "45bf1568d186df9034c43de0614740495700c938"
        ],
        [
            "Notation In := (InA X.eq).",
            "VernacSyntacticDefinition",
            "de2195f17c6f6c9ae2489b091f11d2c91518669c"
        ],
        [
            "Let eqr:= (@Equivalence_Reflexive _ _ X.eq_equiv).",
            "VernacDefinition",
            "857ac2ad0ced6ca4e0092ee09f6aa767440fe374"
        ],
        [
            "Let eqsym:= (@Equivalence_Symmetric _ _ X.eq_equiv).",
            "VernacDefinition",
            "a3a039b0b7fbeb88ba63e38ffed85e44d6ab866c"
        ],
        [
            "Let eqtrans:= (@Equivalence_Transitive _ _ X.eq_equiv).",
            "VernacDefinition",
            "9da2d31e39a9b3c0b7cca46a9d48ec22bf3f38d9"
        ],
        [
            "Hint Resolve eqr eqtrans.",
            "VernacHints",
            "7639fa61ce7cc2c42ccd05d7c2fb294b15adc2f2"
        ],
        [
            "Hint Immediate eqsym.",
            "VernacHints",
            "2464f4556f4e6d78a2b2029e4fa085b16c31d967"
        ],
        [
            "Definition IsOk := NoDup.",
            "VernacDefinition",
            "1a594d135c85041d285ce2bc186c8fb43171e882"
        ],
        [
            "Class Ok (s:t) : Prop := ok : NoDup s.",
            "VernacInductive",
            "16a10545a90e6fd33f6a9e61c06f482ea2c124d8"
        ],
        [
            "Hint Unfold Ok.",
            "VernacHints",
            "012c92e7566bcf60f5036cd0f4f53f0f3f880083"
        ],
        [
            "Hint Resolve ok.",
            "VernacHints",
            "d72c1d67483be4aeaa56676a03c6bfdaf9ac1d45"
        ],
        [
            "Instance NoDup_Ok s (nd : NoDup s) : Ok s := { ok := nd }.",
            "VernacInstance",
            "c4ee58d87daadcf32f0934f4a8ca95e55822adcd"
        ],
        [
            "Ltac inv_ok := match goal with | H:Ok (_ :: _) |- _ => inversion_clear H; inv_ok | H:Ok nil |- _ => clear H; inv_ok | H:NoDup ?l |- _ => change (Ok l) in H; inv_ok | _ => idtac end.",
            "VernacExtend",
            "7b69438f4688db7aea79fe99197c89935c901d9f"
        ],
        [
            "Ltac inv := invlist InA; inv_ok.",
            "VernacExtend",
            "471118b14db2704aa8636aaf4fff87bca014cc6e"
        ],
        [
            "Ltac constructors := repeat constructor.",
            "VernacExtend",
            "b6ba73271660cac528313dd45d5db49a3047165b"
        ],
        [
            "Fixpoint isok l := match l with | nil => true | a::l => negb (mem a l) && isok l end.",
            "VernacFixpoint",
            "7e090dd3bfa8568653d15f79d451b72369ee0c0f"
        ],
        [
            "Definition Equal s s' := forall a : elt, In a s <-> In a s'.",
            "VernacDefinition",
            "cd5f6ee7097e7157ccbc10af82ffd932eaf3c423"
        ],
        [
            "Definition Subset s s' := forall a : elt, In a s -> In a s'.",
            "VernacDefinition",
            "106ca6bd7b6e4a40ea51abcc05e3c9af2fc2bee5"
        ],
        [
            "Definition Empty s := forall a : elt, ~ In a s.",
            "VernacDefinition",
            "99dffcced2023a4cba92e934e92ab887beb9ff43"
        ],
        [
            "Definition For_all (P : elt -> Prop) s := forall x, In x s -> P x.",
            "VernacDefinition",
            "4d362106a16edcc40d0eef5faef1552c0586f113"
        ],
        [
            "Definition Exists (P : elt -> Prop) s := exists x, In x s /\\ P x.",
            "VernacDefinition",
            "7a3d224adfc848e82fb49eb1cbd9c21d19ce40b7"
        ],
        [
            "Lemma In_compat : Proper (X.eq==>eq==>iff) In.",
            "VernacStartTheoremProof",
            "59ce56de1b06013a2c0acb7c568e3b15e2d3a0f3"
        ],
        [
            "repeat red; intros.",
            "VernacExtend",
            "3b23460c57f21b9e3c22bb0a3b36545050809490"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_spec : forall s x `{Ok s}, mem x s = true <-> In x s.",
            "VernacStartTheoremProof",
            "8c6318f076e5f6eb2e31ee9d3a3ec6fa0bccba08"
        ],
        [
            "induction s; intros.",
            "VernacExtend",
            "7e5c561798a027d2f2f185c622b0b98435248a37"
        ],
        [
            "split; intros; inv.",
            "VernacExtend",
            "a92d3470fe504992f7eb0d0f1593864ab6f6b5a9"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "simpl; destruct (X.eq_dec x a); split; intros; inv; auto.",
            "VernacExtend",
            "1db4c042fca4ca019fe37f76f6e206d94d8c77bc"
        ],
        [
            "right; rewrite <- IHs; auto.",
            "VernacExtend",
            "b7bc8667c3a19f498b4e1458066328a3eafafe12"
        ],
        [
            "rewrite IHs; auto.",
            "VernacExtend",
            "307f7fbc326db99b76199a012fca963fd61b181a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isok_iff : forall l, Ok l <-> isok l = true.",
            "VernacStartTheoremProof",
            "db713d1f54a747fb8916ac85e74f777ed69d7b23"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite andb_true_iff.",
            "VernacExtend",
            "2e0a0ffca5d243f404153bc36ad3db5c01c2e4b5"
        ],
        [
            "rewrite negb_true_iff.",
            "VernacExtend",
            "797b5fcbd111bb1202ab3a04f94438c76b201fa8"
        ],
        [
            "rewrite <- IHl.",
            "VernacExtend",
            "d08c434fe9e4c4b4cc3e1701a922431b2b99a42a"
        ],
        [
            "split; intros H.",
            "VernacExtend",
            "a22fcc98cae3c9e7feb477b9e8b0236d37ea8d65"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply not_true_is_false.",
            "VernacExtend",
            "06ea57aca514fbe6d887908a5706fa89517f302b"
        ],
        [
            "rewrite mem_spec; auto.",
            "VernacExtend",
            "387a78ef2a1259be9a20e3ba050a2823c04bc814"
        ],
        [
            "destruct H; constructors; auto.",
            "VernacExtend",
            "145f7f491eaabe0f6addb0d1c68c8393d32ecacd"
        ],
        [
            "rewrite <- mem_spec; auto; congruence.",
            "VernacExtend",
            "599a3c37968fa321a7ec35c6ac014a03764acd6a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance isok_Ok l : isok l = true -> Ok l | 10.",
            "VernacInstance",
            "c4ca42ddf9a0b54f39519e8c02e6aefb8079dffe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply <- isok_iff; auto.",
            "VernacExtend",
            "15e5533debb73bb57ba9ce682ecc3c6f70591041"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_spec : forall (s : t) (x y : elt) {Hs : Ok s}, In y (add x s) <-> X.eq y x \\/ In y s.",
            "VernacStartTheoremProof",
            "b4e28783edd0c87d456a8ff83c003f9f7b1e4f95"
        ],
        [
            "induction s; simpl; intros.",
            "VernacExtend",
            "55d762fdba50b27f8695d733d2857ceea86abd6f"
        ],
        [
            "intuition; inv; auto.",
            "VernacExtend",
            "31c85709324ada0e3a3add122b7deeb18b951dcb"
        ],
        [
            "destruct X.eq_dec; inv; rewrite InA_cons, ?IHs; intuition.",
            "VernacExtend",
            "370e45a93df63c333ebedf7aeb2a8b0cd2ef38a0"
        ],
        [
            "left; eauto.",
            "VernacExtend",
            "2aadb2cc2a8fd5d6bcc75542c3cddb6fa2224625"
        ],
        [
            "inv; auto.",
            "VernacExtend",
            "1e09fea56c964df79eb372d6433eec3b5c88882b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance add_ok s x `(Ok s) : Ok (add x s).",
            "VernacInstance",
            "ac82c2de9fb180cd9e79c6f147659f51f3104001"
        ],
        [
            "induction s.",
            "VernacExtend",
            "07b2950967b17efa9314973f4d8444c5caabf173"
        ],
        [
            "simpl; intuition.",
            "VernacExtend",
            "2a8f84ed3abedbe9d9fbb80aa4215114cbdbe500"
        ],
        [
            "intros; inv.",
            "VernacExtend",
            "3b5e71dc8b4812bd621841f55d3ff22c45d0906a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct X.eq_dec; auto.",
            "VernacExtend",
            "804557094684f434609c114238f8cd22a262bed8"
        ],
        [
            "constructors; auto.",
            "VernacExtend",
            "46e376bf85e5bdbc0f1658eb4c6ac7793dcd6a18"
        ],
        [
            "intro; inv; auto.",
            "VernacExtend",
            "2ca23fd8fec638fbf495e5d40831d24a18bc6bb9"
        ],
        [
            "rewrite add_spec in *; intuition.",
            "VernacExtend",
            "38241123d1e99472a74989c93077e6c972b05918"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_spec : forall (s : t) (x y : elt) {Hs : Ok s}, In y (remove x s) <-> In y s /\\ ~X.eq y x.",
            "VernacStartTheoremProof",
            "c3feef624627582fc2d849ddcadf44524ee7db83"
        ],
        [
            "induction s; simpl; intros.",
            "VernacExtend",
            "55d762fdba50b27f8695d733d2857ceea86abd6f"
        ],
        [
            "intuition; inv; auto.",
            "VernacExtend",
            "31c85709324ada0e3a3add122b7deeb18b951dcb"
        ],
        [
            "destruct X.eq_dec as [|Hnot]; inv; rewrite !InA_cons, ?IHs; intuition.",
            "VernacExtend",
            "fdeda33c1aadd43c593a4e6ad1fff7c66024a81d"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "setoid_replace a with y; eauto.",
            "VernacExtend",
            "af218c66242dae76c2ad088f08d9a7d4d9580538"
        ],
        [
            "elim H3.",
            "VernacExtend",
            "70fb843285201ec5a9b4d417b6f0002c41dde4c6"
        ],
        [
            "setoid_replace x with y; eauto.",
            "VernacExtend",
            "050de57f799d9bbb6d52f8d75c57b93f86c3ed8b"
        ],
        [
            "elim Hnot.",
            "VernacExtend",
            "4474925777911b99e60756460355964261e838dd"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance remove_ok s x `(Ok s) : Ok (remove x s).",
            "VernacInstance",
            "3e387b9de328e396a2d796e7f04653d4e70fde6b"
        ],
        [
            "induction s; simpl; intros.",
            "VernacExtend",
            "55d762fdba50b27f8695d733d2857ceea86abd6f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "destruct X.eq_dec; inv; auto.",
            "VernacExtend",
            "ae4a2195b9ebc26886eef9f61390e3d3e7de7104"
        ],
        [
            "constructors; auto.",
            "VernacExtend",
            "46e376bf85e5bdbc0f1658eb4c6ac7793dcd6a18"
        ],
        [
            "rewrite remove_spec; intuition.",
            "VernacExtend",
            "b2154dbdf503d483ae96bdfa9f90a4760c5e75f4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma singleton_ok : forall x : elt, Ok (singleton x).",
            "VernacStartTheoremProof",
            "295401f4ee65a40f362a39b66459c092de232c67"
        ],
        [
            "unfold singleton; simpl; constructors; auto.",
            "VernacExtend",
            "dea5196ae5c758d3f16e28fb9d3a4d2a56ba5045"
        ],
        [
            "intro; inv.",
            "VernacExtend",
            "9a90e03237e76d3507f23bdd60982dd640039ea8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma singleton_spec : forall x y : elt, In y (singleton x) <-> X.eq y x.",
            "VernacStartTheoremProof",
            "ac00c4874b0e5b617f5ff107580be4730c584955"
        ],
        [
            "unfold singleton; simpl; split; intros.",
            "VernacExtend",
            "bbb74702634a71099b54c929abd6bd33fdaa5b02"
        ],
        [
            "inv; auto.",
            "VernacExtend",
            "1e09fea56c964df79eb372d6433eec3b5c88882b"
        ],
        [
            "left; auto.",
            "VernacExtend",
            "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_ok : Ok empty.",
            "VernacStartTheoremProof",
            "6a244f6712a7f244b4226aafd108574f7d75b19d"
        ],
        [
            "unfold empty; constructors.",
            "VernacExtend",
            "5d89fe204b4694df89b5cfaef8ba4e83fdb28f76"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_spec : Empty empty.",
            "VernacStartTheoremProof",
            "ac5b3ce6175ebcbfcc02350712ac2ce9336054ff"
        ],
        [
            "unfold Empty, empty; red; intros; inv.",
            "VernacExtend",
            "ad6ed5b113e2d9d299afbc0a99c1257952f98a0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_empty_spec : forall s : t, is_empty s = true <-> Empty s.",
            "VernacStartTheoremProof",
            "dba576b8ca4d3ba535c16a2016964a54b4727877"
        ],
        [
            "unfold Empty; destruct s; simpl; split; intros; auto.",
            "VernacExtend",
            "6e880081b26dec4d5e47de54bf08a64da38e55c8"
        ],
        [
            "intro; inv.",
            "VernacExtend",
            "9a90e03237e76d3507f23bdd60982dd640039ea8"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "elim (H e); auto.",
            "VernacExtend",
            "8209aa4fea37c75119b298ece78f10480d29efe0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_spec1 : forall (s : t) (x : elt), In x (elements s) <-> In x s.",
            "VernacStartTheoremProof",
            "512ffc9cbfa2ab8c5ad167f621d2a89b3d980906"
        ],
        [
            "unfold elements; intuition.",
            "VernacExtend",
            "290727e7c4a8f881541686db3ee0e87858c687e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_spec2w : forall (s : t) {Hs : Ok s}, NoDup (elements s).",
            "VernacStartTheoremProof",
            "c54875099620c66015c4b37c9fb58878040eeb9e"
        ],
        [
            "unfold elements; auto.",
            "VernacExtend",
            "a5d82bb377a11c0b45aed61350becd1881620692"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_spec : forall (s : t) (A : Type) (i : A) (f : elt -> A -> A), fold f s i = fold_left (flip f) (elements s) i.",
            "VernacStartTheoremProof",
            "b81ebf517fe81fe4b78aaac58243d7f8f057c879"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance union_ok : forall s s' `(Ok s, Ok s'), Ok (union s s').",
            "VernacInstance",
            "7c0e8204e51d1c7aa0d8828dcfce1c125ac1a666"
        ],
        [
            "induction s; simpl; auto; intros; inv; unfold flip; auto with *.",
            "VernacExtend",
            "7268ef1c3c04e96c2d4da1e2e68a417b018a2125"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_spec : forall (s s' : t) (x : elt) {Hs : Ok s} {Hs' : Ok s'}, In x (union s s') <-> In x s \\/ In x s'.",
            "VernacStartTheoremProof",
            "40b82e653baf283adfa146a0e39ce22f222e4c64"
        ],
        [
            "induction s; simpl in *; unfold flip; intros; auto; inv.",
            "VernacExtend",
            "c4b1906829de9245876dcb715be318e66d16fbd2"
        ],
        [
            "intuition; inv.",
            "VernacExtend",
            "ae060712061c9d50cbd047e9fe7f14224e689b65"
        ],
        [
            "rewrite IHs, add_spec, InA_cons; intuition.",
            "VernacExtend",
            "42b9d255876e9d6cf3cf48f7e8016b1c37f19490"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance inter_ok s s' `(Ok s, Ok s') : Ok (inter s s').",
            "VernacInstance",
            "1222a012ae464a45b27f007721127fb599fbd0c0"
        ],
        [
            "unfold inter, fold, flip.",
            "VernacExtend",
            "356050b040040e1d8f2054ad01d48f1740875881"
        ],
        [
            "set (acc := nil (A:=elt)).",
            "VernacExtend",
            "cbaebdc473a74e3317381161b61adf814ded599b"
        ],
        [
            "assert (Hacc : Ok acc) by constructors.",
            "VernacExtend",
            "5502b2a6777abe305f0eb585e9ebc8c25008f8a5"
        ],
        [
            "clearbody acc; revert acc Hacc.",
            "VernacExtend",
            "3cac67837fc7cb1214f97cd9301a542d7d63e32a"
        ],
        [
            "induction s; simpl; auto; intros.",
            "VernacExtend",
            "8cc60e2fb53dbfe93182ec51277e6b76519afa7a"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "apply IHs; auto.",
            "VernacExtend",
            "8493a6b09c1af3cdf06996104f7eea731519cbc9"
        ],
        [
            "destruct (mem a s'); auto with *.",
            "VernacExtend",
            "83e0b6717f42c3e4638751d7445eeda338b07c44"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_spec : forall (s s' : t) (x : elt) {Hs : Ok s} {Hs' : Ok s'}, In x (inter s s') <-> In x s /\\ In x s'.",
            "VernacStartTheoremProof",
            "cf264ad815fca03d973d982f07e90c8af85ebe08"
        ],
        [
            "unfold inter, fold, flip; intros.",
            "VernacExtend",
            "968dff8fa7e568827d423b0c11549d8447a4832f"
        ],
        [
            "set (acc := nil (A:=elt)) in *.",
            "VernacExtend",
            "5107f0e2779132395fd3a12c314cfa2ed27a5387"
        ],
        [
            "assert (Hacc : Ok acc) by constructors.",
            "VernacExtend",
            "5502b2a6777abe305f0eb585e9ebc8c25008f8a5"
        ],
        [
            "assert (IFF : (In x s /\\ In x s') <-> (In x s /\\ In x s') \\/ In x acc).",
            "VernacExtend",
            "c7b9ec476959e25dd7d6d8ff0f2326b663b3aeb2"
        ],
        [
            "intuition; unfold acc in *; inv.",
            "VernacExtend",
            "5e34cf719b2903687aae11eaa741502bcac08a48"
        ],
        [
            "rewrite IFF; clear IFF.",
            "VernacExtend",
            "ba6ec3aac459f6192a5d227741644fb1cec8c09c"
        ],
        [
            "clearbody acc.",
            "VernacExtend",
            "a57c2f808fc3e419fb152e5187f7102d76a32684"
        ],
        [
            "revert acc Hacc x s' Hs Hs'.",
            "VernacExtend",
            "1b7efc4d3f378e487b5f7624179705d6b215aea5"
        ],
        [
            "induction s; simpl; intros.",
            "VernacExtend",
            "55d762fdba50b27f8695d733d2857ceea86abd6f"
        ],
        [
            "intuition; inv.",
            "VernacExtend",
            "ae060712061c9d50cbd047e9fe7f14224e689b65"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "case_eq (mem a s'); intros Hm.",
            "VernacExtend",
            "b6c0d21447738374b089fcc6693cfa75a50b0955"
        ],
        [
            "rewrite IHs, add_spec, InA_cons; intuition.",
            "VernacExtend",
            "42b9d255876e9d6cf3cf48f7e8016b1c37f19490"
        ],
        [
            "rewrite mem_spec in Hm; auto.",
            "VernacExtend",
            "534b2a333a17dcf7d5b2fe7f8f6f7d772cb2134e"
        ],
        [
            "left; split; auto.",
            "VernacExtend",
            "839f21d27eb3d8616b1c18bc30b38cff7c9f8eb4"
        ],
        [
            "rewrite H1; auto.",
            "VernacExtend",
            "1413124b63144a92c2b8c7e916995d6cd3746a77"
        ],
        [
            "rewrite IHs, InA_cons; intuition.",
            "VernacExtend",
            "9ca173e081bf1f57b9e7990dfbd627bf46ec8dc3"
        ],
        [
            "rewrite H2, <- mem_spec in H3; auto.",
            "VernacExtend",
            "7d63c991a4cafec10fc7ff4fb3ee34f3b7792941"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance diff_ok : forall s s' `(Ok s, Ok s'), Ok (diff s s').",
            "VernacInstance",
            "247df68c71d2f55bf4bf6dfe8c2b912482944844"
        ],
        [
            "unfold diff; intros s s'; revert s.",
            "VernacExtend",
            "6cbff62c0f59e949daaeb970137aa8e5fd9d5b42"
        ],
        [
            "induction s'; simpl; unfold flip; auto; intros.",
            "VernacExtend",
            "7f341fc6875f92378c306030bbdfbf732411f186"
        ],
        [
            "inv; auto with *.",
            "VernacExtend",
            "7b270971a37e729d713ff43083dcda9b2f495338"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_spec : forall (s s' : t) (x : elt) {Hs : Ok s} {Hs' : Ok s'}, In x (diff s s') <-> In x s /\\ ~In x s'.",
            "VernacStartTheoremProof",
            "3f0fb6659e533838ae1e82e067c6411d0d9f4842"
        ],
        [
            "unfold diff; intros s s'; revert s.",
            "VernacExtend",
            "6cbff62c0f59e949daaeb970137aa8e5fd9d5b42"
        ],
        [
            "induction s'; simpl; unfold flip.",
            "VernacExtend",
            "bb0bdfc91df907a8cd79f79e93299cd84db27753"
        ],
        [
            "intuition; inv.",
            "VernacExtend",
            "ae060712061c9d50cbd047e9fe7f14224e689b65"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "rewrite IHs', remove_spec, InA_cons; intuition.",
            "VernacExtend",
            "cb7507ce578e59a10f9d48078330a0842ea0ec65"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_spec : forall (s s' : t) {Hs : Ok s} {Hs' : Ok s'}, subset s s' = true <-> Subset s s'.",
            "VernacStartTheoremProof",
            "4665f5e263e692c66c92a31186a4723a39e09167"
        ],
        [
            "unfold subset, Subset; intros.",
            "VernacExtend",
            "4923afd2c630b56f3115b88444132fe8bc3909e5"
        ],
        [
            "rewrite is_empty_spec.",
            "VernacExtend",
            "7b3cd232b878bbeb44ed7f044d8ba46bc009fb30"
        ],
        [
            "unfold Empty; intros.",
            "VernacExtend",
            "a769f6dbba77fb1c13b1126bc05ba8802ce906db"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "specialize (H a).",
            "VernacExtend",
            "7a27eab3769bb3de345226d5979feb4725332b08"
        ],
        [
            "rewrite diff_spec in H; intuition.",
            "VernacExtend",
            "05e8ea05a735f100f08b323dbd04ce151cfbb427"
        ],
        [
            "rewrite <- (mem_spec a) in H |- *.",
            "VernacExtend",
            "000ea72e66e13a33c053d1c8b0cc4c8d9ab5d4e5"
        ],
        [
            "destruct (mem a s'); intuition.",
            "VernacExtend",
            "3a4972439a6183f18033cdb131fe54bd11c0857e"
        ],
        [
            "rewrite diff_spec in H0; intuition.",
            "VernacExtend",
            "d88dd12563a7bec2068c01a0175d2c191891d341"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_spec : forall (s s' : t) {Hs : Ok s} {Hs' : Ok s'}, equal s s' = true <-> Equal s s'.",
            "VernacStartTheoremProof",
            "61ec4c5953c5100825e2c94f7bfddcadfe2a4209"
        ],
        [
            "unfold Equal, equal; intros.",
            "VernacExtend",
            "c26f3e86163198819ed846ba6dfab06e6a44d26b"
        ],
        [
            "rewrite andb_true_iff, !subset_spec.",
            "VernacExtend",
            "9c5d517b5d1c7b33aefb30d98569599b6b4809c0"
        ],
        [
            "unfold Subset; intuition.",
            "VernacExtend",
            "ba584e54d5246597a25705639d2b01d8432ef007"
        ],
        [
            "rewrite <- H; auto.",
            "VernacExtend",
            "339e32f989b98c4748aacd68dd3407c72de16870"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition choose_spec1 : forall (s : t) (x : elt), choose s = Some x -> In x s.",
            "VernacDefinition",
            "255daa08783a65c6f5abef9ed71becd4b47654c2"
        ],
        [
            "destruct s; simpl; intros; inversion H; auto.",
            "VernacExtend",
            "b89e78839ce409b751728f4181e4004b8131634f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition choose_spec2 : forall s : t, choose s = None -> Empty s.",
            "VernacDefinition",
            "af95735e113ac72822e58706711435bf04113be4"
        ],
        [
            "destruct s; simpl; intros.",
            "VernacExtend",
            "feba5c816e2ee653b7207b764bf977d67d2aa2c7"
        ],
        [
            "intros x H0; inversion H0.",
            "VernacExtend",
            "09eb6f03b6f4b068f7e97b27aabf66642f653f40"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_spec : forall (s : t) {Hs : Ok s}, cardinal s = length (elements s).",
            "VernacStartTheoremProof",
            "bd6a6860defce5ae74f6ad42e332f026cb3487c9"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_spec' : forall s x f, In x (filter f s) -> In x s.",
            "VernacStartTheoremProof",
            "a533137417fee61fc5fe67298fb16e4135a42302"
        ],
        [
            "induction s; simpl.",
            "VernacExtend",
            "0d97119141b8edf3eb7e6fb5ae4f956cd710346b"
        ],
        [
            "intuition; inv.",
            "VernacExtend",
            "ae060712061c9d50cbd047e9fe7f14224e689b65"
        ],
        [
            "intros; destruct (f a); inv; intuition; right; eauto.",
            "VernacExtend",
            "c321f4b17f0046aa813419b4b1c98492f708de5b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_spec : forall (s : t) (x : elt) (f : elt -> bool), Proper (X.eq==>eq) f -> (In x (filter f s) <-> In x s /\\ f x = true).",
            "VernacStartTheoremProof",
            "01de1fc905c1e3b9d75b111ae31744a39dca5c74"
        ],
        [
            "induction s; simpl.",
            "VernacExtend",
            "0d97119141b8edf3eb7e6fb5ae4f956cd710346b"
        ],
        [
            "intuition; inv.",
            "VernacExtend",
            "ae060712061c9d50cbd047e9fe7f14224e689b65"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (f a) eqn:E; rewrite ?InA_cons, IHs; intuition.",
            "VernacExtend",
            "a7f8a7a43419533a3440bebc2482ec219d62d028"
        ],
        [
            "setoid_replace x with a; auto.",
            "VernacExtend",
            "83ed7f7d976518caeb5b8a08018f847df8461e5a"
        ],
        [
            "setoid_replace a with x in E; auto.",
            "VernacExtend",
            "13ffc8c8697e0eb68425b5c9425498e5a4a40bf3"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance filter_ok s f `(Ok s) : Ok (filter f s).",
            "VernacInstance",
            "7214f67978c4a05e15436f5731dd28f32c2c81ee"
        ],
        [
            "induction s; simpl.",
            "VernacExtend",
            "0d97119141b8edf3eb7e6fb5ae4f956cd710346b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros; inv.",
            "VernacExtend",
            "3b5e71dc8b4812bd621841f55d3ff22c45d0906a"
        ],
        [
            "case (f a); auto.",
            "VernacExtend",
            "cdf56d8ddd75fa589c82fce9878d5c55ad19f99a"
        ],
        [
            "constructors; auto.",
            "VernacExtend",
            "46e376bf85e5bdbc0f1658eb4c6ac7793dcd6a18"
        ],
        [
            "contradict H0.",
            "VernacExtend",
            "e9276d92c17ea182f1ef13aa74464b33eea923d9"
        ],
        [
            "eapply filter_spec'; eauto.",
            "VernacExtend",
            "6bf9576287c3afc1594bbb74ea2063254b2e3cfa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma for_all_spec : forall (s : t) (f : elt -> bool), Proper (X.eq==>eq) f -> (for_all f s = true <-> For_all (fun x => f x = true) s).",
            "VernacStartTheoremProof",
            "2ec07c8c8de1f8c83597273245ec6bf518b11283"
        ],
        [
            "unfold For_all; induction s; simpl.",
            "VernacExtend",
            "ed3d176a2c61771c57ec98a59af5244358fe52f1"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "intros; inv.",
            "VernacExtend",
            "3b5e71dc8b4812bd621841f55d3ff22c45d0906a"
        ],
        [
            "destruct (f a) eqn:F.",
            "VernacExtend",
            "668a110fa716d9e825b82165fc0cff88b623fd4f"
        ],
        [
            "rewrite IHs; intuition.",
            "VernacExtend",
            "f728349ed8ede1c6e8615417c85f6b05d6c6046c"
        ],
        [
            "inv; auto.",
            "VernacExtend",
            "1e09fea56c964df79eb372d6433eec3b5c88882b"
        ],
        [
            "setoid_replace x with a; auto.",
            "VernacExtend",
            "83ed7f7d976518caeb5b8a08018f847df8461e5a"
        ],
        [
            "split; intros H'; try discriminate.",
            "VernacExtend",
            "4049b4292fdf23b7fe3682944ef1a16e5bc8ba40"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- F, <- (H' a); auto.",
            "VernacExtend",
            "79ec06f0b6bea3b77d03a01be9efb84de38edbb0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_spec : forall (s : t) (f : elt -> bool), Proper (X.eq==>eq) f -> (exists_ f s = true <-> Exists (fun x => f x = true) s).",
            "VernacStartTheoremProof",
            "7f71975442e7d2b367ce9eb7b4f42d0768d732db"
        ],
        [
            "unfold Exists; induction s; simpl.",
            "VernacExtend",
            "fc4dd4aae8dad18d32fa1dd13a15de6436cba5c2"
        ],
        [
            "split; [discriminate| intros (x & Hx & _); inv].",
            "VernacExtend",
            "8a71e51c30f52b352a0fea91fe748cd9c76f3382"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (f a) eqn:F.",
            "VernacExtend",
            "668a110fa716d9e825b82165fc0cff88b623fd4f"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "exists a; auto.",
            "VernacExtend",
            "dd5a786237df3984e1d2bb0f96b1da3befb55aac"
        ],
        [
            "rewrite IHs; firstorder.",
            "VernacExtend",
            "69b2511d5a3c88dee88457a867489cab89d0e28e"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "setoid_replace a with x in F; auto; congruence.",
            "VernacExtend",
            "d80c0cb8192f948ca50009c0f76f83fd9ca65fa2"
        ],
        [
            "exists x; auto.",
            "VernacExtend",
            "d8b3edd09d34953d83a4fbc6350c30f804073b09"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_spec1 : forall (s : t) (f : elt -> bool), Proper (X.eq==>eq) f -> Equal (fst (partition f s)) (filter f s).",
            "VernacStartTheoremProof",
            "3ec746f3d27c2af53732412020bbe334004fbd32"
        ],
        [
            "simple induction s; simpl; auto; unfold Equal.",
            "VernacExtend",
            "1ed6bbbcc6f9fa6fb7716f9c658944c6c3695e6a"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "intros x l Hrec f Hf.",
            "VernacExtend",
            "640ae8ab1dfdbf81b41c8dd0d01ed8619b9c9e63"
        ],
        [
            "generalize (Hrec f Hf); clear Hrec.",
            "VernacExtend",
            "edfbf7f56b4294ba552184fe7e871c7f3312210d"
        ],
        [
            "case (partition f l); intros s1 s2; simpl; intros.",
            "VernacExtend",
            "b3900a6608262a75086272c4b2f533396aa5cd68"
        ],
        [
            "case (f x); simpl; firstorder; inversion H0; intros; firstorder.",
            "VernacExtend",
            "43ef9fc6dbc5743b72e31d13f699c3d5f723ef47"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_spec2 : forall (s : t) (f : elt -> bool), Proper (X.eq==>eq) f -> Equal (snd (partition f s)) (filter (fun x => negb (f x)) s).",
            "VernacStartTheoremProof",
            "b7a437255a3f57f05e486aada9b9f8ae1ccc9e81"
        ],
        [
            "simple induction s; simpl; auto; unfold Equal.",
            "VernacExtend",
            "1ed6bbbcc6f9fa6fb7716f9c658944c6c3695e6a"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "intros x l Hrec f Hf.",
            "VernacExtend",
            "640ae8ab1dfdbf81b41c8dd0d01ed8619b9c9e63"
        ],
        [
            "generalize (Hrec f Hf); clear Hrec.",
            "VernacExtend",
            "edfbf7f56b4294ba552184fe7e871c7f3312210d"
        ],
        [
            "case (partition f l); intros s1 s2; simpl; intros.",
            "VernacExtend",
            "b3900a6608262a75086272c4b2f533396aa5cd68"
        ],
        [
            "case (f x); simpl; firstorder; inversion H0; intros; firstorder.",
            "VernacExtend",
            "43ef9fc6dbc5743b72e31d13f699c3d5f723ef47"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_ok1' : forall (s : t) {Hs : Ok s} (f : elt -> bool)(x:elt), In x (fst (partition f s)) -> In x s.",
            "VernacStartTheoremProof",
            "b2ede04ff7305d3b70f3d0a7320d89fd56a49c93"
        ],
        [
            "induction s; simpl; auto; intros.",
            "VernacExtend",
            "8cc60e2fb53dbfe93182ec51277e6b76519afa7a"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "generalize (IHs H1 f x).",
            "VernacExtend",
            "abf62acff8f85e040d00d60323b53f6ac2f8a731"
        ],
        [
            "destruct (f a); destruct (partition f s); simpl in *; auto.",
            "VernacExtend",
            "ef93d537c377655d3cdb6649ef9d6f6d0e86f1ca"
        ],
        [
            "inversion_clear H; auto.",
            "VernacExtend",
            "d3d75a19294b96dbafba557f2d6b54b4e866b1a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_ok2' : forall (s : t) {Hs : Ok s} (f : elt -> bool)(x:elt), In x (snd (partition f s)) -> In x s.",
            "VernacStartTheoremProof",
            "99902d6b73b6b73c283351f631a048ec78449bb6"
        ],
        [
            "induction s; simpl; auto; intros.",
            "VernacExtend",
            "8cc60e2fb53dbfe93182ec51277e6b76519afa7a"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "generalize (IHs H1 f x).",
            "VernacExtend",
            "abf62acff8f85e040d00d60323b53f6ac2f8a731"
        ],
        [
            "destruct (f a); destruct (partition f s); simpl in *; auto.",
            "VernacExtend",
            "ef93d537c377655d3cdb6649ef9d6f6d0e86f1ca"
        ],
        [
            "inversion_clear H; auto.",
            "VernacExtend",
            "d3d75a19294b96dbafba557f2d6b54b4e866b1a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance partition_ok1 : forall s f `(Ok s), Ok (fst (partition f s)).",
            "VernacInstance",
            "6ad1aafcfb5c5d2a4eb0616e8731611772b16f16"
        ],
        [
            "simple induction s; simpl.",
            "VernacExtend",
            "298231545dccccc350ebcbfa56e333c5f5186a1c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros x l Hrec f Hs; inv.",
            "VernacExtend",
            "c87f86a3d60a4b6401c20de67bb7bea5b6b29349"
        ],
        [
            "generalize (@partition_ok1' _ _ f x).",
            "VernacExtend",
            "c1086039b50641d5146c207acc6a21a7cd9541ca"
        ],
        [
            "generalize (Hrec f H0).",
            "VernacExtend",
            "a55c4301288d14434987fcde73383632c9a76657"
        ],
        [
            "case (f x); case (partition f l); simpl; constructors; auto.",
            "VernacExtend",
            "c7149be18ad9f7a2beed294f4c6c863b48062e37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance partition_ok2 : forall s f `(Ok s), Ok (snd (partition f s)).",
            "VernacInstance",
            "712fffcc0c53be3cd7f709f27832fdb1db5a75ec"
        ],
        [
            "simple induction s; simpl.",
            "VernacExtend",
            "298231545dccccc350ebcbfa56e333c5f5186a1c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros x l Hrec f Hs; inv.",
            "VernacExtend",
            "c87f86a3d60a4b6401c20de67bb7bea5b6b29349"
        ],
        [
            "generalize (@partition_ok2' _ _ f x).",
            "VernacExtend",
            "84c5f45c8b1f862e5937193a0f097f5135fbd6b9"
        ],
        [
            "generalize (Hrec f H0).",
            "VernacExtend",
            "a55c4301288d14434987fcde73383632c9a76657"
        ],
        [
            "case (f x); case (partition f l); simpl; constructors; auto.",
            "VernacExtend",
            "c7149be18ad9f7a2beed294f4c6c863b48062e37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ForNotations.",
            "VernacEndSegment",
            "080e55a1ea4a64d50c08a386c0bc0ed6e1ae5ec6"
        ],
        [
            "Definition In := InA X.eq.",
            "VernacDefinition",
            "31ebdd7d00e827d19e36c6a5ae0f5c1955181357"
        ],
        [
            "Definition eq := Equal.",
            "VernacDefinition",
            "c5a98812a71ff074452a9b20100debd2359418d4"
        ],
        [
            "Instance eq_equiv : Equivalence eq := _.",
            "VernacInstance",
            "40e55dd84c200b843f9af967c401dfd20f923d82"
        ],
        [
            "End MakeRaw.",
            "VernacEndSegment",
            "f45e1a6c3cc609c6ba34d2d48938cc7bf5418dd7"
        ],
        [
            "Module Make (X: DecidableType) <: WSets with Module E := X.",
            "VernacDefineModule",
            "cf78291cc37857dc435592d1d4e536af9f770ab7"
        ],
        [
            "Module Raw := MakeRaw X.",
            "VernacDefineModule",
            "4e7ebb69d6d3dda0e31011efc6b7097324cb02df"
        ],
        [
            "Include WRaw2Sets X Raw.",
            "VernacInclude",
            "eb8dd106f61d9ca2758815099901ce38f6f39351"
        ],
        [
            "End Make.",
            "VernacEndSegment",
            "158dcf795fe84f422408437686b9ec9e7417690b"
        ]
    ],
    "proofs": [
        {
            "name": "In_compat",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "repeat red; intros.",
                        "VernacExtend",
                        "3b23460c57f21b9e3c22bb0a3b36545050809490"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_spec",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "induction s; intros.",
                        "VernacExtend",
                        "7e5c561798a027d2f2f185c622b0b98435248a37"
                    ]
                },
                {
                    "command": [
                        "split; intros; inv.",
                        "VernacExtend",
                        "a92d3470fe504992f7eb0d0f1593864ab6f6b5a9"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "simpl; destruct (X.eq_dec x a); split; intros; inv; auto.",
                        "VernacExtend",
                        "1db4c042fca4ca019fe37f76f6e206d94d8c77bc"
                    ]
                },
                {
                    "command": [
                        "right; rewrite <- IHs; auto.",
                        "VernacExtend",
                        "b7bc8667c3a19f498b4e1458066328a3eafafe12"
                    ]
                },
                {
                    "command": [
                        "rewrite IHs; auto.",
                        "VernacExtend",
                        "307f7fbc326db99b76199a012fca963fd61b181a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isok_iff",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff.",
                        "VernacExtend",
                        "2e0a0ffca5d243f404153bc36ad3db5c01c2e4b5"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_true_iff.",
                        "VernacExtend",
                        "797b5fcbd111bb1202ab3a04f94438c76b201fa8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHl.",
                        "VernacExtend",
                        "d08c434fe9e4c4b4cc3e1701a922431b2b99a42a"
                    ]
                },
                {
                    "command": [
                        "split; intros H.",
                        "VernacExtend",
                        "a22fcc98cae3c9e7feb477b9e8b0236d37ea8d65"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply not_true_is_false.",
                        "VernacExtend",
                        "06ea57aca514fbe6d887908a5706fa89517f302b"
                    ]
                },
                {
                    "command": [
                        "rewrite mem_spec; auto.",
                        "VernacExtend",
                        "387a78ef2a1259be9a20e3ba050a2823c04bc814"
                    ]
                },
                {
                    "command": [
                        "destruct H; constructors; auto.",
                        "VernacExtend",
                        "145f7f491eaabe0f6addb0d1c68c8393d32ecacd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mem_spec; auto; congruence.",
                        "VernacExtend",
                        "599a3c37968fa321a7ec35c6ac014a03764acd6a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isok_Ok",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply <- isok_iff; auto.",
                        "VernacExtend",
                        "15e5533debb73bb57ba9ce682ecc3c6f70591041"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_spec",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "induction s; simpl; intros.",
                        "VernacExtend",
                        "55d762fdba50b27f8695d733d2857ceea86abd6f"
                    ]
                },
                {
                    "command": [
                        "intuition; inv; auto.",
                        "VernacExtend",
                        "31c85709324ada0e3a3add122b7deeb18b951dcb"
                    ]
                },
                {
                    "command": [
                        "destruct X.eq_dec; inv; rewrite InA_cons, ?IHs; intuition.",
                        "VernacExtend",
                        "370e45a93df63c333ebedf7aeb2a8b0cd2ef38a0"
                    ]
                },
                {
                    "command": [
                        "left; eauto.",
                        "VernacExtend",
                        "2aadb2cc2a8fd5d6bcc75542c3cddb6fa2224625"
                    ]
                },
                {
                    "command": [
                        "inv; auto.",
                        "VernacExtend",
                        "1e09fea56c964df79eb372d6433eec3b5c88882b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_ok",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "induction s.",
                        "VernacExtend",
                        "07b2950967b17efa9314973f4d8444c5caabf173"
                    ]
                },
                {
                    "command": [
                        "simpl; intuition.",
                        "VernacExtend",
                        "2a8f84ed3abedbe9d9fbb80aa4215114cbdbe500"
                    ]
                },
                {
                    "command": [
                        "intros; inv.",
                        "VernacExtend",
                        "3b5e71dc8b4812bd621841f55d3ff22c45d0906a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct X.eq_dec; auto.",
                        "VernacExtend",
                        "804557094684f434609c114238f8cd22a262bed8"
                    ]
                },
                {
                    "command": [
                        "constructors; auto.",
                        "VernacExtend",
                        "46e376bf85e5bdbc0f1658eb4c6ac7793dcd6a18"
                    ]
                },
                {
                    "command": [
                        "intro; inv; auto.",
                        "VernacExtend",
                        "2ca23fd8fec638fbf495e5d40831d24a18bc6bb9"
                    ]
                },
                {
                    "command": [
                        "rewrite add_spec in *; intuition.",
                        "VernacExtend",
                        "38241123d1e99472a74989c93077e6c972b05918"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_spec",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "induction s; simpl; intros.",
                        "VernacExtend",
                        "55d762fdba50b27f8695d733d2857ceea86abd6f"
                    ]
                },
                {
                    "command": [
                        "intuition; inv; auto.",
                        "VernacExtend",
                        "31c85709324ada0e3a3add122b7deeb18b951dcb"
                    ]
                },
                {
                    "command": [
                        "destruct X.eq_dec as [|Hnot]; inv; rewrite !InA_cons, ?IHs; intuition.",
                        "VernacExtend",
                        "fdeda33c1aadd43c593a4e6ad1fff7c66024a81d"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "setoid_replace a with y; eauto.",
                        "VernacExtend",
                        "af218c66242dae76c2ad088f08d9a7d4d9580538"
                    ]
                },
                {
                    "command": [
                        "elim H3.",
                        "VernacExtend",
                        "70fb843285201ec5a9b4d417b6f0002c41dde4c6"
                    ]
                },
                {
                    "command": [
                        "setoid_replace x with y; eauto.",
                        "VernacExtend",
                        "050de57f799d9bbb6d52f8d75c57b93f86c3ed8b"
                    ]
                },
                {
                    "command": [
                        "elim Hnot.",
                        "VernacExtend",
                        "4474925777911b99e60756460355964261e838dd"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_ok",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "induction s; simpl; intros.",
                        "VernacExtend",
                        "55d762fdba50b27f8695d733d2857ceea86abd6f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "destruct X.eq_dec; inv; auto.",
                        "VernacExtend",
                        "ae4a2195b9ebc26886eef9f61390e3d3e7de7104"
                    ]
                },
                {
                    "command": [
                        "constructors; auto.",
                        "VernacExtend",
                        "46e376bf85e5bdbc0f1658eb4c6ac7793dcd6a18"
                    ]
                },
                {
                    "command": [
                        "rewrite remove_spec; intuition.",
                        "VernacExtend",
                        "b2154dbdf503d483ae96bdfa9f90a4760c5e75f4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "singleton_ok",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "unfold singleton; simpl; constructors; auto.",
                        "VernacExtend",
                        "dea5196ae5c758d3f16e28fb9d3a4d2a56ba5045"
                    ]
                },
                {
                    "command": [
                        "intro; inv.",
                        "VernacExtend",
                        "9a90e03237e76d3507f23bdd60982dd640039ea8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "singleton_spec",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "unfold singleton; simpl; split; intros.",
                        "VernacExtend",
                        "bbb74702634a71099b54c929abd6bd33fdaa5b02"
                    ]
                },
                {
                    "command": [
                        "inv; auto.",
                        "VernacExtend",
                        "1e09fea56c964df79eb372d6433eec3b5c88882b"
                    ]
                },
                {
                    "command": [
                        "left; auto.",
                        "VernacExtend",
                        "b03090a3068bb41ee1034a9c886a5e47eddfb98a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_ok",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "unfold empty; constructors.",
                        "VernacExtend",
                        "5d89fe204b4694df89b5cfaef8ba4e83fdb28f76"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_spec",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "unfold Empty, empty; red; intros; inv.",
                        "VernacExtend",
                        "ad6ed5b113e2d9d299afbc0a99c1257952f98a0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_empty_spec",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "unfold Empty; destruct s; simpl; split; intros; auto.",
                        "VernacExtend",
                        "6e880081b26dec4d5e47de54bf08a64da38e55c8"
                    ]
                },
                {
                    "command": [
                        "intro; inv.",
                        "VernacExtend",
                        "9a90e03237e76d3507f23bdd60982dd640039ea8"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "elim (H e); auto.",
                        "VernacExtend",
                        "8209aa4fea37c75119b298ece78f10480d29efe0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_spec1",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "unfold elements; intuition.",
                        "VernacExtend",
                        "290727e7c4a8f881541686db3ee0e87858c687e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_spec2w",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "unfold elements; auto.",
                        "VernacExtend",
                        "a5d82bb377a11c0b45aed61350becd1881620692"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_spec",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_ok",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "induction s; simpl; auto; intros; inv; unfold flip; auto with *.",
                        "VernacExtend",
                        "7268ef1c3c04e96c2d4da1e2e68a417b018a2125"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_spec",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "induction s; simpl in *; unfold flip; intros; auto; inv.",
                        "VernacExtend",
                        "c4b1906829de9245876dcb715be318e66d16fbd2"
                    ]
                },
                {
                    "command": [
                        "intuition; inv.",
                        "VernacExtend",
                        "ae060712061c9d50cbd047e9fe7f14224e689b65"
                    ]
                },
                {
                    "command": [
                        "rewrite IHs, add_spec, InA_cons; intuition.",
                        "VernacExtend",
                        "42b9d255876e9d6cf3cf48f7e8016b1c37f19490"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_ok",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "unfold inter, fold, flip.",
                        "VernacExtend",
                        "356050b040040e1d8f2054ad01d48f1740875881"
                    ]
                },
                {
                    "command": [
                        "set (acc := nil (A:=elt)).",
                        "VernacExtend",
                        "cbaebdc473a74e3317381161b61adf814ded599b"
                    ]
                },
                {
                    "command": [
                        "assert (Hacc : Ok acc) by constructors.",
                        "VernacExtend",
                        "5502b2a6777abe305f0eb585e9ebc8c25008f8a5"
                    ]
                },
                {
                    "command": [
                        "clearbody acc; revert acc Hacc.",
                        "VernacExtend",
                        "3cac67837fc7cb1214f97cd9301a542d7d63e32a"
                    ]
                },
                {
                    "command": [
                        "induction s; simpl; auto; intros.",
                        "VernacExtend",
                        "8cc60e2fb53dbfe93182ec51277e6b76519afa7a"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "apply IHs; auto.",
                        "VernacExtend",
                        "8493a6b09c1af3cdf06996104f7eea731519cbc9"
                    ]
                },
                {
                    "command": [
                        "destruct (mem a s'); auto with *.",
                        "VernacExtend",
                        "83e0b6717f42c3e4638751d7445eeda338b07c44"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_spec",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "unfold inter, fold, flip; intros.",
                        "VernacExtend",
                        "968dff8fa7e568827d423b0c11549d8447a4832f"
                    ]
                },
                {
                    "command": [
                        "set (acc := nil (A:=elt)) in *.",
                        "VernacExtend",
                        "5107f0e2779132395fd3a12c314cfa2ed27a5387"
                    ]
                },
                {
                    "command": [
                        "assert (Hacc : Ok acc) by constructors.",
                        "VernacExtend",
                        "5502b2a6777abe305f0eb585e9ebc8c25008f8a5"
                    ]
                },
                {
                    "command": [
                        "assert (IFF : (In x s /\\ In x s') <-> (In x s /\\ In x s') \\/ In x acc).",
                        "VernacExtend",
                        "c7b9ec476959e25dd7d6d8ff0f2326b663b3aeb2"
                    ]
                },
                {
                    "command": [
                        "intuition; unfold acc in *; inv.",
                        "VernacExtend",
                        "5e34cf719b2903687aae11eaa741502bcac08a48"
                    ]
                },
                {
                    "command": [
                        "rewrite IFF; clear IFF.",
                        "VernacExtend",
                        "ba6ec3aac459f6192a5d227741644fb1cec8c09c"
                    ]
                },
                {
                    "command": [
                        "clearbody acc.",
                        "VernacExtend",
                        "a57c2f808fc3e419fb152e5187f7102d76a32684"
                    ]
                },
                {
                    "command": [
                        "revert acc Hacc x s' Hs Hs'.",
                        "VernacExtend",
                        "1b7efc4d3f378e487b5f7624179705d6b215aea5"
                    ]
                },
                {
                    "command": [
                        "induction s; simpl; intros.",
                        "VernacExtend",
                        "55d762fdba50b27f8695d733d2857ceea86abd6f"
                    ]
                },
                {
                    "command": [
                        "intuition; inv.",
                        "VernacExtend",
                        "ae060712061c9d50cbd047e9fe7f14224e689b65"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "case_eq (mem a s'); intros Hm.",
                        "VernacExtend",
                        "b6c0d21447738374b089fcc6693cfa75a50b0955"
                    ]
                },
                {
                    "command": [
                        "rewrite IHs, add_spec, InA_cons; intuition.",
                        "VernacExtend",
                        "42b9d255876e9d6cf3cf48f7e8016b1c37f19490"
                    ]
                },
                {
                    "command": [
                        "rewrite mem_spec in Hm; auto.",
                        "VernacExtend",
                        "534b2a333a17dcf7d5b2fe7f8f6f7d772cb2134e"
                    ]
                },
                {
                    "command": [
                        "left; split; auto.",
                        "VernacExtend",
                        "839f21d27eb3d8616b1c18bc30b38cff7c9f8eb4"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; auto.",
                        "VernacExtend",
                        "1413124b63144a92c2b8c7e916995d6cd3746a77"
                    ]
                },
                {
                    "command": [
                        "rewrite IHs, InA_cons; intuition.",
                        "VernacExtend",
                        "9ca173e081bf1f57b9e7990dfbd627bf46ec8dc3"
                    ]
                },
                {
                    "command": [
                        "rewrite H2, <- mem_spec in H3; auto.",
                        "VernacExtend",
                        "7d63c991a4cafec10fc7ff4fb3ee34f3b7792941"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_ok",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "unfold diff; intros s s'; revert s.",
                        "VernacExtend",
                        "6cbff62c0f59e949daaeb970137aa8e5fd9d5b42"
                    ]
                },
                {
                    "command": [
                        "induction s'; simpl; unfold flip; auto; intros.",
                        "VernacExtend",
                        "7f341fc6875f92378c306030bbdfbf732411f186"
                    ]
                },
                {
                    "command": [
                        "inv; auto with *.",
                        "VernacExtend",
                        "7b270971a37e729d713ff43083dcda9b2f495338"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_spec",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "unfold diff; intros s s'; revert s.",
                        "VernacExtend",
                        "6cbff62c0f59e949daaeb970137aa8e5fd9d5b42"
                    ]
                },
                {
                    "command": [
                        "induction s'; simpl; unfold flip.",
                        "VernacExtend",
                        "bb0bdfc91df907a8cd79f79e93299cd84db27753"
                    ]
                },
                {
                    "command": [
                        "intuition; inv.",
                        "VernacExtend",
                        "ae060712061c9d50cbd047e9fe7f14224e689b65"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "rewrite IHs', remove_spec, InA_cons; intuition.",
                        "VernacExtend",
                        "cb7507ce578e59a10f9d48078330a0842ea0ec65"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_spec",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "unfold subset, Subset; intros.",
                        "VernacExtend",
                        "4923afd2c630b56f3115b88444132fe8bc3909e5"
                    ]
                },
                {
                    "command": [
                        "rewrite is_empty_spec.",
                        "VernacExtend",
                        "7b3cd232b878bbeb44ed7f044d8ba46bc009fb30"
                    ]
                },
                {
                    "command": [
                        "unfold Empty; intros.",
                        "VernacExtend",
                        "a769f6dbba77fb1c13b1126bc05ba8802ce906db"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "specialize (H a).",
                        "VernacExtend",
                        "7a27eab3769bb3de345226d5979feb4725332b08"
                    ]
                },
                {
                    "command": [
                        "rewrite diff_spec in H; intuition.",
                        "VernacExtend",
                        "05e8ea05a735f100f08b323dbd04ce151cfbb427"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mem_spec a) in H |- *.",
                        "VernacExtend",
                        "000ea72e66e13a33c053d1c8b0cc4c8d9ab5d4e5"
                    ]
                },
                {
                    "command": [
                        "destruct (mem a s'); intuition.",
                        "VernacExtend",
                        "3a4972439a6183f18033cdb131fe54bd11c0857e"
                    ]
                },
                {
                    "command": [
                        "rewrite diff_spec in H0; intuition.",
                        "VernacExtend",
                        "d88dd12563a7bec2068c01a0175d2c191891d341"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_spec",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "unfold Equal, equal; intros.",
                        "VernacExtend",
                        "c26f3e86163198819ed846ba6dfab06e6a44d26b"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff, !subset_spec.",
                        "VernacExtend",
                        "9c5d517b5d1c7b33aefb30d98569599b6b4809c0"
                    ]
                },
                {
                    "command": [
                        "unfold Subset; intuition.",
                        "VernacExtend",
                        "ba584e54d5246597a25705639d2b01d8432ef007"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; auto.",
                        "VernacExtend",
                        "339e32f989b98c4748aacd68dd3407c72de16870"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "choose_spec1",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "destruct s; simpl; intros; inversion H; auto.",
                        "VernacExtend",
                        "b89e78839ce409b751728f4181e4004b8131634f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "choose_spec2",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "destruct s; simpl; intros.",
                        "VernacExtend",
                        "feba5c816e2ee653b7207b764bf977d67d2aa2c7"
                    ]
                },
                {
                    "command": [
                        "intros x H0; inversion H0.",
                        "VernacExtend",
                        "09eb6f03b6f4b068f7e97b27aabf66642f653f40"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_spec",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_spec'",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "induction s; simpl.",
                        "VernacExtend",
                        "0d97119141b8edf3eb7e6fb5ae4f956cd710346b"
                    ]
                },
                {
                    "command": [
                        "intuition; inv.",
                        "VernacExtend",
                        "ae060712061c9d50cbd047e9fe7f14224e689b65"
                    ]
                },
                {
                    "command": [
                        "intros; destruct (f a); inv; intuition; right; eauto.",
                        "VernacExtend",
                        "c321f4b17f0046aa813419b4b1c98492f708de5b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_spec",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "induction s; simpl.",
                        "VernacExtend",
                        "0d97119141b8edf3eb7e6fb5ae4f956cd710346b"
                    ]
                },
                {
                    "command": [
                        "intuition; inv.",
                        "VernacExtend",
                        "ae060712061c9d50cbd047e9fe7f14224e689b65"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (f a) eqn:E; rewrite ?InA_cons, IHs; intuition.",
                        "VernacExtend",
                        "a7f8a7a43419533a3440bebc2482ec219d62d028"
                    ]
                },
                {
                    "command": [
                        "setoid_replace x with a; auto.",
                        "VernacExtend",
                        "83ed7f7d976518caeb5b8a08018f847df8461e5a"
                    ]
                },
                {
                    "command": [
                        "setoid_replace a with x in E; auto.",
                        "VernacExtend",
                        "13ffc8c8697e0eb68425b5c9425498e5a4a40bf3"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_ok",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "induction s; simpl.",
                        "VernacExtend",
                        "0d97119141b8edf3eb7e6fb5ae4f956cd710346b"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros; inv.",
                        "VernacExtend",
                        "3b5e71dc8b4812bd621841f55d3ff22c45d0906a"
                    ]
                },
                {
                    "command": [
                        "case (f a); auto.",
                        "VernacExtend",
                        "cdf56d8ddd75fa589c82fce9878d5c55ad19f99a"
                    ]
                },
                {
                    "command": [
                        "constructors; auto.",
                        "VernacExtend",
                        "46e376bf85e5bdbc0f1658eb4c6ac7793dcd6a18"
                    ]
                },
                {
                    "command": [
                        "contradict H0.",
                        "VernacExtend",
                        "e9276d92c17ea182f1ef13aa74464b33eea923d9"
                    ]
                },
                {
                    "command": [
                        "eapply filter_spec'; eauto.",
                        "VernacExtend",
                        "6bf9576287c3afc1594bbb74ea2063254b2e3cfa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "for_all_spec",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "unfold For_all; induction s; simpl.",
                        "VernacExtend",
                        "ed3d176a2c61771c57ec98a59af5244358fe52f1"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "intros; inv.",
                        "VernacExtend",
                        "3b5e71dc8b4812bd621841f55d3ff22c45d0906a"
                    ]
                },
                {
                    "command": [
                        "destruct (f a) eqn:F.",
                        "VernacExtend",
                        "668a110fa716d9e825b82165fc0cff88b623fd4f"
                    ]
                },
                {
                    "command": [
                        "rewrite IHs; intuition.",
                        "VernacExtend",
                        "f728349ed8ede1c6e8615417c85f6b05d6c6046c"
                    ]
                },
                {
                    "command": [
                        "inv; auto.",
                        "VernacExtend",
                        "1e09fea56c964df79eb372d6433eec3b5c88882b"
                    ]
                },
                {
                    "command": [
                        "setoid_replace x with a; auto.",
                        "VernacExtend",
                        "83ed7f7d976518caeb5b8a08018f847df8461e5a"
                    ]
                },
                {
                    "command": [
                        "split; intros H'; try discriminate.",
                        "VernacExtend",
                        "4049b4292fdf23b7fe3682944ef1a16e5bc8ba40"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- F, <- (H' a); auto.",
                        "VernacExtend",
                        "79ec06f0b6bea3b77d03a01be9efb84de38edbb0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_spec",
            "line_nb": 264,
            "steps": [
                {
                    "command": [
                        "unfold Exists; induction s; simpl.",
                        "VernacExtend",
                        "fc4dd4aae8dad18d32fa1dd13a15de6436cba5c2"
                    ]
                },
                {
                    "command": [
                        "split; [discriminate| intros (x & Hx & _); inv].",
                        "VernacExtend",
                        "8a71e51c30f52b352a0fea91fe748cd9c76f3382"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (f a) eqn:F.",
                        "VernacExtend",
                        "668a110fa716d9e825b82165fc0cff88b623fd4f"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "exists a; auto.",
                        "VernacExtend",
                        "dd5a786237df3984e1d2bb0f96b1da3befb55aac"
                    ]
                },
                {
                    "command": [
                        "rewrite IHs; firstorder.",
                        "VernacExtend",
                        "69b2511d5a3c88dee88457a867489cab89d0e28e"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "setoid_replace a with x in F; auto; congruence.",
                        "VernacExtend",
                        "d80c0cb8192f948ca50009c0f76f83fd9ca65fa2"
                    ]
                },
                {
                    "command": [
                        "exists x; auto.",
                        "VernacExtend",
                        "d8b3edd09d34953d83a4fbc6350c30f804073b09"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_spec1",
            "line_nb": 276,
            "steps": [
                {
                    "command": [
                        "simple induction s; simpl; auto; unfold Equal.",
                        "VernacExtend",
                        "1ed6bbbcc6f9fa6fb7716f9c658944c6c3695e6a"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "intros x l Hrec f Hf.",
                        "VernacExtend",
                        "640ae8ab1dfdbf81b41c8dd0d01ed8619b9c9e63"
                    ]
                },
                {
                    "command": [
                        "generalize (Hrec f Hf); clear Hrec.",
                        "VernacExtend",
                        "edfbf7f56b4294ba552184fe7e871c7f3312210d"
                    ]
                },
                {
                    "command": [
                        "case (partition f l); intros s1 s2; simpl; intros.",
                        "VernacExtend",
                        "b3900a6608262a75086272c4b2f533396aa5cd68"
                    ]
                },
                {
                    "command": [
                        "case (f x); simpl; firstorder; inversion H0; intros; firstorder.",
                        "VernacExtend",
                        "43ef9fc6dbc5743b72e31d13f699c3d5f723ef47"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_spec2",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "simple induction s; simpl; auto; unfold Equal.",
                        "VernacExtend",
                        "1ed6bbbcc6f9fa6fb7716f9c658944c6c3695e6a"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "intros x l Hrec f Hf.",
                        "VernacExtend",
                        "640ae8ab1dfdbf81b41c8dd0d01ed8619b9c9e63"
                    ]
                },
                {
                    "command": [
                        "generalize (Hrec f Hf); clear Hrec.",
                        "VernacExtend",
                        "edfbf7f56b4294ba552184fe7e871c7f3312210d"
                    ]
                },
                {
                    "command": [
                        "case (partition f l); intros s1 s2; simpl; intros.",
                        "VernacExtend",
                        "b3900a6608262a75086272c4b2f533396aa5cd68"
                    ]
                },
                {
                    "command": [
                        "case (f x); simpl; firstorder; inversion H0; intros; firstorder.",
                        "VernacExtend",
                        "43ef9fc6dbc5743b72e31d13f699c3d5f723ef47"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_ok1'",
            "line_nb": 292,
            "steps": [
                {
                    "command": [
                        "induction s; simpl; auto; intros.",
                        "VernacExtend",
                        "8cc60e2fb53dbfe93182ec51277e6b76519afa7a"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "generalize (IHs H1 f x).",
                        "VernacExtend",
                        "abf62acff8f85e040d00d60323b53f6ac2f8a731"
                    ]
                },
                {
                    "command": [
                        "destruct (f a); destruct (partition f s); simpl in *; auto.",
                        "VernacExtend",
                        "ef93d537c377655d3cdb6649ef9d6f6d0e86f1ca"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H; auto.",
                        "VernacExtend",
                        "d3d75a19294b96dbafba557f2d6b54b4e866b1a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_ok2'",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "induction s; simpl; auto; intros.",
                        "VernacExtend",
                        "8cc60e2fb53dbfe93182ec51277e6b76519afa7a"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "generalize (IHs H1 f x).",
                        "VernacExtend",
                        "abf62acff8f85e040d00d60323b53f6ac2f8a731"
                    ]
                },
                {
                    "command": [
                        "destruct (f a); destruct (partition f s); simpl in *; auto.",
                        "VernacExtend",
                        "ef93d537c377655d3cdb6649ef9d6f6d0e86f1ca"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H; auto.",
                        "VernacExtend",
                        "d3d75a19294b96dbafba557f2d6b54b4e866b1a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_ok1",
            "line_nb": 306,
            "steps": [
                {
                    "command": [
                        "simple induction s; simpl.",
                        "VernacExtend",
                        "298231545dccccc350ebcbfa56e333c5f5186a1c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros x l Hrec f Hs; inv.",
                        "VernacExtend",
                        "c87f86a3d60a4b6401c20de67bb7bea5b6b29349"
                    ]
                },
                {
                    "command": [
                        "generalize (@partition_ok1' _ _ f x).",
                        "VernacExtend",
                        "c1086039b50641d5146c207acc6a21a7cd9541ca"
                    ]
                },
                {
                    "command": [
                        "generalize (Hrec f H0).",
                        "VernacExtend",
                        "a55c4301288d14434987fcde73383632c9a76657"
                    ]
                },
                {
                    "command": [
                        "case (f x); case (partition f l); simpl; constructors; auto.",
                        "VernacExtend",
                        "c7149be18ad9f7a2beed294f4c6c863b48062e37"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_ok2",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "simple induction s; simpl.",
                        "VernacExtend",
                        "298231545dccccc350ebcbfa56e333c5f5186a1c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros x l Hrec f Hs; inv.",
                        "VernacExtend",
                        "c87f86a3d60a4b6401c20de67bb7bea5b6b29349"
                    ]
                },
                {
                    "command": [
                        "generalize (@partition_ok2' _ _ f x).",
                        "VernacExtend",
                        "84c5f45c8b1f862e5937193a0f097f5135fbd6b9"
                    ]
                },
                {
                    "command": [
                        "generalize (Hrec f H0).",
                        "VernacExtend",
                        "a55c4301288d14434987fcde73383632c9a76657"
                    ]
                },
                {
                    "command": [
                        "case (f x); case (partition f l); simpl; constructors; auto.",
                        "VernacExtend",
                        "c7149be18ad9f7a2beed294f4c6c863b48062e37"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}