{
    "filename": "theories/MSets/MSetEqProperties.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import MSetProperties Zerob Sumbool Omega DecidableTypeEx.",
            "VernacRequire",
            "876a120cfa56abbbd2df6dfaac0d150235f09110"
        ],
        [
            "Module WEqPropertiesOn (Import E:DecidableType)(M:WSetsOn E).",
            "VernacDefineModule",
            "21bc0b0bf178f5a1b251b1b1186aece0f8af9c67"
        ],
        [
            "Module Import MP := WPropertiesOn E M.",
            "VernacDefineModule",
            "c512e36b81e07a3ebc63792fc93e7922e62687a3"
        ],
        [
            "Import FM Dec.F.",
            "VernacImport",
            "f361bd4d90d6bd633f4b5be79eaa6d67807c8271"
        ],
        [
            "Import M.",
            "VernacImport",
            "69325bbd0268095c07cfca05f898394c270b2c07"
        ],
        [
            "Definition Add := MP.Add.",
            "VernacDefinition",
            "c7780b5583ab72acfa1f08159faf0179045e998c"
        ],
        [
            "Section BasicProperties.",
            "VernacBeginSection",
            "801f201f840a2a358edb77326dfdb4e0482a41df"
        ],
        [
            "Variable s s' s'': t.",
            "VernacAssumption",
            "d1d63db80712d2623a501964786e218cf5e269eb"
        ],
        [
            "Variable x y z : elt.",
            "VernacAssumption",
            "9816c3ea80afc0e2df1ccf7be120eeff21cce0a7"
        ],
        [
            "Lemma mem_eq: E.eq x y -> mem x s=mem y s.",
            "VernacStartTheoremProof",
            "121d59d6ae05f4f043091774a6e62f271fe76164"
        ],
        [
            "intro H; rewrite H; auto.",
            "VernacExtend",
            "7eecf050c4dc1af5bf7fb9d4fcf5c443c79b5895"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_mem_1: (forall a, mem a s=mem a s') -> equal s s'=true.",
            "VernacStartTheoremProof",
            "c3e1c72224f459ebe964aab96a040b6c23998f42"
        ],
        [
            "intros; apply equal_1; unfold Equal; intros.",
            "VernacExtend",
            "d8a10afdf0486b3a835906276dd84ee014778d5e"
        ],
        [
            "do 2 rewrite mem_iff; rewrite H; tauto.",
            "VernacExtend",
            "2a64018c52122b5bf9bffb663d77781eec58e85b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_mem_2: equal s s'=true -> forall a, mem a s=mem a s'.",
            "VernacStartTheoremProof",
            "07b4cc5d9ae9170f440f6f97d283f99bb616bbbb"
        ],
        [
            "intros; rewrite (equal_2 H); auto.",
            "VernacExtend",
            "d1077a67f62da4bc3548d0a8dc36c35932c28a94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_mem_1: (forall a, mem a s=true->mem a s'=true) -> subset s s'=true.",
            "VernacStartTheoremProof",
            "646dfadac11e992ef202e7ad7870c70096b40313"
        ],
        [
            "intros; apply subset_1; unfold Subset; intros a.",
            "VernacExtend",
            "ef791f2e4d40325dfef7b5aef3b62c2ff594f9fc"
        ],
        [
            "do 2 rewrite mem_iff; auto.",
            "VernacExtend",
            "83585ec04d449b48f2df375a37c295f8993e4df7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_mem_2: subset s s'=true -> forall a, mem a s=true -> mem a s'=true.",
            "VernacStartTheoremProof",
            "bd1c74b8630df8ff729c5dabe28de6cb9ffd6572"
        ],
        [
            "intros H a; do 2 rewrite <- mem_iff; apply subset_2; auto.",
            "VernacExtend",
            "fdd9ceafaab288afa0973d93dd13aa74b19cbd7e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_mem: mem x empty=false.",
            "VernacStartTheoremProof",
            "611fe50f0a0f579dcce9eba451c32adf23d49662"
        ],
        [
            "rewrite <- not_mem_iff; auto with set.",
            "VernacExtend",
            "281abd702e3d196304a3bb752c03acc5dd70dad7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_empty_equal_empty: is_empty s = equal s empty.",
            "VernacStartTheoremProof",
            "5e97e836da74eac3a229dceaada0ab25627072a9"
        ],
        [
            "apply bool_1; split; intros.",
            "VernacExtend",
            "7aca02b8ba34a2cec88735aa54082e30bb78d05b"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "rewrite <- is_empty_iff; auto with set.",
            "VernacExtend",
            "4b464104adb64be2773c72ffd72bac95fb98cef8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma choose_mem_1: choose s=Some x -> mem x s=true.",
            "VernacStartTheoremProof",
            "38345fccc1c94d611d4411e8dfcd666a755e6d44"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma choose_mem_2: choose s=None -> is_empty s=true.",
            "VernacStartTheoremProof",
            "b8841d38732f5d06125cf145104973ed676c3126"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_mem_1: mem x (add x s)=true.",
            "VernacStartTheoremProof",
            "8e942c7f283460a99c970e3f38e73788e40accb8"
        ],
        [
            "auto with set relations.",
            "VernacExtend",
            "5ff65c64e5f5945446ff47fba80378b2ee87c1af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_mem_2: ~E.eq x y -> mem y (add x s)=mem y s.",
            "VernacStartTheoremProof",
            "e2389f24237555ef4047aaf836fa4b658db8e740"
        ],
        [
            "apply add_neq_b.",
            "VernacExtend",
            "fc8ad4dcbea75bc7460dbaec7100679df4978d46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_mem_1: mem x (remove x s)=false.",
            "VernacStartTheoremProof",
            "b3bb43039081c5c8e8e384aa408976d3f3e419a0"
        ],
        [
            "rewrite <- not_mem_iff; auto with set relations.",
            "VernacExtend",
            "9f7e9b162655004363205313b38539f522edabbc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_mem_2: ~E.eq x y -> mem y (remove x s)=mem y s.",
            "VernacStartTheoremProof",
            "e2b14cf02842518f493ec282a8bda472e838810a"
        ],
        [
            "apply remove_neq_b.",
            "VernacExtend",
            "0afe6978cbb08bac7d5d5ad62da54b167a84ec3b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma singleton_equal_add: equal (singleton x) (add x empty)=true.",
            "VernacStartTheoremProof",
            "ed4657e69c480c3b998ebd9de3b6adb60fef0072"
        ],
        [
            "rewrite (singleton_equal_add x); auto with set.",
            "VernacExtend",
            "61a4a6e91dac6bbfa0131c4bc77223a19e2e1d27"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_mem: mem x (union s s')=mem x s || mem x s'.",
            "VernacStartTheoremProof",
            "5f577d70dacb763097dd760f2c305eaeda0c5b26"
        ],
        [
            "apply union_b.",
            "VernacExtend",
            "160c6ea60d33df751494079fefee3c45b5c85337"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_mem: mem x (inter s s')=mem x s && mem x s'.",
            "VernacStartTheoremProof",
            "a2961dc6f211a5c61c8df2ebb6b2b260b284bbf5"
        ],
        [
            "apply inter_b.",
            "VernacExtend",
            "c63e70202cb5c0d7892b5adffb1a0b74e64acc42"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_mem: mem x (diff s s')=mem x s && negb (mem x s').",
            "VernacStartTheoremProof",
            "be463f92f8b50ad8523e3fc2b57e7c90c1362311"
        ],
        [
            "apply diff_b.",
            "VernacExtend",
            "8f4039a7f6d80eb611346f82352ce7c6482edc63"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_3 : ~In x s -> mem x s=false.",
            "VernacStartTheoremProof",
            "03fedc808f7c3fdc0827f4d796ea5eb27498732b"
        ],
        [
            "intros; rewrite <- not_mem_iff; auto.",
            "VernacExtend",
            "c5a33ed3cc7cef0a589d748e37b497cd662c8b58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_4 : mem x s=false -> ~In x s.",
            "VernacStartTheoremProof",
            "2b1abe938a53de05106cdac9d12ecbd8478e3003"
        ],
        [
            "intros; rewrite not_mem_iff; auto.",
            "VernacExtend",
            "fd0abeedcff3abf168c67e2daf0822b8d64be9c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_refl: equal s s=true.",
            "VernacStartTheoremProof",
            "3578241263ce0042b5c76fb2fdecc633118f188b"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_sym: equal s s'=equal s' s.",
            "VernacStartTheoremProof",
            "27c729b513b95145cd5e5246ade7849c90614b31"
        ],
        [
            "intros; apply bool_1; do 2 rewrite <- equal_iff; intuition.",
            "VernacExtend",
            "e5451f9da591d80f9a0ccc8f4dc6fed2ec004a75"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_trans: equal s s'=true -> equal s' s''=true -> equal s s''=true.",
            "VernacStartTheoremProof",
            "cae07ee9debb06b226050e8efe9112da783157a3"
        ],
        [
            "intros; rewrite (equal_2 H); auto.",
            "VernacExtend",
            "d1077a67f62da4bc3548d0a8dc36c35932c28a94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_equal: equal s s'=true -> equal s s''=equal s' s''.",
            "VernacStartTheoremProof",
            "96386f0e838f5c86390e50b24e966a64e3be058c"
        ],
        [
            "intros; rewrite (equal_2 H); auto.",
            "VernacExtend",
            "d1077a67f62da4bc3548d0a8dc36c35932c28a94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_cardinal: equal s s'=true -> cardinal s=cardinal s'.",
            "VernacStartTheoremProof",
            "78417692a39fe4d68aa112bb136b74e9ca91d8f7"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_refl: subset s s=true.",
            "VernacStartTheoremProof",
            "453a13935c5009ab42a085599df1e85e4f644b1c"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_antisym: subset s s'=true -> subset s' s=true -> equal s s'=true.",
            "VernacStartTheoremProof",
            "e32b1c52738d2e413bd794d07c77eb223afc788e"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_trans: subset s s'=true -> subset s' s''=true -> subset s s''=true.",
            "VernacStartTheoremProof",
            "ca0f632b7c4c8f21b187516830cd6e3f1a08e178"
        ],
        [
            "do 3 rewrite <- subset_iff; intros.",
            "VernacExtend",
            "0c47a6549346a287a13f6e7db557162d396b4d88"
        ],
        [
            "apply subset_trans with s'; auto.",
            "VernacExtend",
            "f984b86e28df1578f0d720995a8d4a4c49c265c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_equal: equal s s'=true -> subset s s'=true.",
            "VernacStartTheoremProof",
            "1a9216575892d9b9c088e0763602e941c3ecca5b"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma choose_mem_3: is_empty s=false -> {x:elt|choose s=Some x /\\ mem x s=true}.",
            "VernacStartTheoremProof",
            "bb9ffd69e862dd96b28b400d8f730a5ae1d37bb4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (@choose_1 s) (@choose_2 s).",
            "VernacExtend",
            "5902f22de6dfc6a2872833a4ac27269ae3e1c5e2"
        ],
        [
            "destruct (choose s);intros.",
            "VernacExtend",
            "4e87513f5f0f9dc96b97375c2ad6ec4b94f7733b"
        ],
        [
            "exists e;auto with set.",
            "VernacExtend",
            "51d6da455c1f6f75ad42321d59a183072008252f"
        ],
        [
            "generalize (H1 (eq_refl None)); clear H1.",
            "VernacExtend",
            "46f5172b12f0c7b0274020f527cba1a2e11fd413"
        ],
        [
            "intros; rewrite (is_empty_1 H1) in H; discriminate.",
            "VernacExtend",
            "9b51df2fca25596a01f83028d19af168719adc59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma choose_mem_4: choose empty=None.",
            "VernacStartTheoremProof",
            "e6d394c697a2c6962e641c52c0cff082be1f6a0d"
        ],
        [
            "generalize (@choose_1 empty).",
            "VernacExtend",
            "f6e0c0ef5c2d2bf174c2792bb1639bbbdf9c97f5"
        ],
        [
            "case (@choose empty);intros;auto.",
            "VernacExtend",
            "9d9e6c30fb4d20dfe89f79092b888040f2b97dc5"
        ],
        [
            "elim (@empty_1 e); auto.",
            "VernacExtend",
            "5f34a3960c06c9640cb783df418af094ff9da929"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_mem_3: mem y s=true -> mem y (add x s)=true.",
            "VernacStartTheoremProof",
            "9e8f7ceac333823750ae4767e8eedb8555c51202"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_equal: mem x s=true -> equal (add x s) s=true.",
            "VernacStartTheoremProof",
            "b4bd823218d94460d60934e1a90d95362c88546a"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_mem_3: mem y (remove x s)=true -> mem y s=true.",
            "VernacStartTheoremProof",
            "08c19e1eaeed8a0f5f96b242bf102beacb658781"
        ],
        [
            "rewrite remove_b; intros H;destruct (andb_prop _ _ H); auto.",
            "VernacExtend",
            "a9b2b47c962ca52ab93aaecf2cb2b27c140ae6c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_equal: mem x s=false -> equal (remove x s) s=true.",
            "VernacStartTheoremProof",
            "48324a361d9cc7ca2ba9a63f23d2e613274d9b06"
        ],
        [
            "intros; apply equal_1; apply remove_equal.",
            "VernacExtend",
            "8b763d664d82c68d7a79486661bb8fa28d4ab9a7"
        ],
        [
            "rewrite not_mem_iff; auto.",
            "VernacExtend",
            "add1428c446a3a1ef8439cdf5cb7307c3e9a85a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_remove: mem x s=true -> equal (add x (remove x s)) s=true.",
            "VernacStartTheoremProof",
            "a11f3805067270dbf5fc16a4c07c79393a977638"
        ],
        [
            "intros; apply equal_1; apply add_remove; auto with set.",
            "VernacExtend",
            "5e70c77f5e227489c7e59cb57eaac82b4523515a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_add: mem x s=false -> equal (remove x (add x s)) s=true.",
            "VernacStartTheoremProof",
            "65e26418350ff4a1874425a8f4c58140320fb0fc"
        ],
        [
            "intros; apply equal_1; apply remove_add; auto.",
            "VernacExtend",
            "3f9786410bca75291f0b1ef30f8429c368c13d52"
        ],
        [
            "rewrite not_mem_iff; auto.",
            "VernacExtend",
            "add1428c446a3a1ef8439cdf5cb7307c3e9a85a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_empty_cardinal: is_empty s = zerob (cardinal s).",
            "VernacStartTheoremProof",
            "09d632ebfbe67b12a27139679c7d770496a46c9b"
        ],
        [
            "intros; apply bool_1; split; intros.",
            "VernacExtend",
            "85f76807ccfd5e7b755aa493297905b50c767efc"
        ],
        [
            "rewrite MP.cardinal_1; simpl; auto with set.",
            "VernacExtend",
            "e4ff39481f6aac2fe8d90d4c62ae7dfe779d7714"
        ],
        [
            "assert (cardinal s = 0) by (apply zerob_true_elim; auto).",
            "VernacExtend",
            "018647744abc858d4b9e2a9bb42df41450d84c5e"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma singleton_mem_1: mem x (singleton x)=true.",
            "VernacStartTheoremProof",
            "83d7fb74430c073586c151a7f9d3d5d71718c921"
        ],
        [
            "auto with set relations.",
            "VernacExtend",
            "5ff65c64e5f5945446ff47fba80378b2ee87c1af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma singleton_mem_2: ~E.eq x y -> mem y (singleton x)=false.",
            "VernacStartTheoremProof",
            "054e8ac4d6baeffcc3a8cbc2cdb5ba58b4aeea99"
        ],
        [
            "intros; rewrite singleton_b.",
            "VernacExtend",
            "16806054386b27a491c786bb1367e4e74d246673"
        ],
        [
            "unfold eqb; destruct (E.eq_dec x y); intuition.",
            "VernacExtend",
            "b9ac50c562ed66c96205b911dc04dd737dd4ebcf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma singleton_mem_3: mem y (singleton x)=true -> E.eq x y.",
            "VernacStartTheoremProof",
            "20f3112f22864ae9844f63b0f0ae713761b081c3"
        ],
        [
            "intros; apply singleton_1; auto with set.",
            "VernacExtend",
            "363115bcf8b17c09482016b8122efe72c1c4ec3a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_sym: equal (union s s') (union s' s)=true.",
            "VernacStartTheoremProof",
            "95a75868be9d134cbca930c9df96eecddf5d0c89"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_subset_equal: subset s s'=true -> equal (union s s') s'=true.",
            "VernacStartTheoremProof",
            "db5587aee3b8e49a4d0357d15156c3e4bce63592"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_equal_1: equal s s'=true-> equal (union s s'') (union s' s'')=true.",
            "VernacStartTheoremProof",
            "41928827757729e6e773423a86347c79125092a9"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_equal_2: equal s' s''=true-> equal (union s s') (union s s'')=true.",
            "VernacStartTheoremProof",
            "1710c5ccabb838eddd4b38f828febe536dc04b00"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_assoc: equal (union (union s s') s'') (union s (union s' s''))=true.",
            "VernacStartTheoremProof",
            "27fd8ee1da94f96f2f68decde81f117be92c4f34"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_union_singleton: equal (add x s) (union (singleton x) s)=true.",
            "VernacStartTheoremProof",
            "b94331386b4c367063d06259e13afc094827f37f"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_add: equal (union (add x s) s') (add x (union s s'))=true.",
            "VernacStartTheoremProof",
            "36a1d528d98736ededef4bff932245c211285100"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_subset_1: subset s (union s s')=true.",
            "VernacStartTheoremProof",
            "9d37e51a46aa13a73c4c1b25af9ccf7fef9d6236"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_subset_2: subset s' (union s s')=true.",
            "VernacStartTheoremProof",
            "7c4aaa3e107256e61b9a3bfb3a965fe1e0a69f20"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_subset_3: subset s s''=true -> subset s' s''=true -> subset (union s s') s''=true.",
            "VernacStartTheoremProof",
            "1206ab439338d59ef657fbf0fd1eaca44b823bec"
        ],
        [
            "intros; apply subset_1; apply union_subset_3; auto with set.",
            "VernacExtend",
            "16be6ae42eae4508c0b5d05e49ea64ba3d66772a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_sym: equal (inter s s') (inter s' s)=true.",
            "VernacStartTheoremProof",
            "6e74692cb337f80378786da811fd0acdaf620110"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_subset_equal: subset s s'=true -> equal (inter s s') s=true.",
            "VernacStartTheoremProof",
            "56b65c1360ed39ee4e822bce8f142af4a8d9f8ce"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_equal_1: equal s s'=true -> equal (inter s s'') (inter s' s'')=true.",
            "VernacStartTheoremProof",
            "98abc255f3d0db2b84b320d66b8f77372e6a8675"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_equal_2: equal s' s''=true -> equal (inter s s') (inter s s'')=true.",
            "VernacStartTheoremProof",
            "74363fb8189aa6bce681694ebf951441f69062bc"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_assoc: equal (inter (inter s s') s'') (inter s (inter s' s''))=true.",
            "VernacStartTheoremProof",
            "03ab31bdfd09dbc07f345c67e0d769366209555a"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_inter_1: equal (inter (union s s') s'') (union (inter s s'') (inter s' s''))=true.",
            "VernacStartTheoremProof",
            "e4214a2df725444c05f47d38bdc11e87045ad949"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_inter_2: equal (union (inter s s') s'') (inter (union s s'') (union s' s''))=true.",
            "VernacStartTheoremProof",
            "f2fe277c12033dacf13ef2c81077751d52a679fb"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_add_1: mem x s'=true -> equal (inter (add x s) s') (add x (inter s s'))=true.",
            "VernacStartTheoremProof",
            "dc378dbbcc0431f85daea6bd8da1c96da11417f0"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_add_2: mem x s'=false -> equal (inter (add x s) s') (inter s s')=true.",
            "VernacStartTheoremProof",
            "208ea8979817693af0a62b3baf18b9c31b7733da"
        ],
        [
            "intros; apply equal_1; apply inter_add_2.",
            "VernacExtend",
            "072927374bde3ca9d5648f7e530a0d85f0143d9d"
        ],
        [
            "rewrite not_mem_iff; auto.",
            "VernacExtend",
            "add1428c446a3a1ef8439cdf5cb7307c3e9a85a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_subset_1: subset (inter s s') s=true.",
            "VernacStartTheoremProof",
            "d10c32a42c4a623d0f1c884f1ca140f5718ad559"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_subset_2: subset (inter s s') s'=true.",
            "VernacStartTheoremProof",
            "cc5baa3b713c120b2c18b526fdcde88decfe2c3d"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_subset_3: subset s'' s=true -> subset s'' s'=true -> subset s'' (inter s s')=true.",
            "VernacStartTheoremProof",
            "ed54597b80a14d7120080385fe94c594b6b32518"
        ],
        [
            "intros; apply subset_1; apply inter_subset_3; auto with set.",
            "VernacExtend",
            "a7a5de2dab2572ca61cf2b86572403112a182200"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_subset: subset (diff s s') s=true.",
            "VernacStartTheoremProof",
            "06cc02471bbcffdd9c71b9d292244a75efcf4f63"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_subset_equal: subset s s'=true -> equal (diff s s') empty=true.",
            "VernacStartTheoremProof",
            "7d95fd85a3f47033d1207b2c60b85088d5da662b"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_inter_singleton: equal (remove x s) (diff s (singleton x))=true.",
            "VernacStartTheoremProof",
            "2c76436b5f6876c7148aa677e0cb6e0ebadfe13f"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_inter_empty: equal (inter (diff s s') (inter s s')) empty=true.",
            "VernacStartTheoremProof",
            "1a0ff4e2a3d42f690a520c7d776bcc47a6a72b4f"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_inter_all: equal (union (diff s s') (inter s s')) s=true.",
            "VernacStartTheoremProof",
            "06f757ee42e9c0c2cc3336bb62a511058cbd447a"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BasicProperties.",
            "VernacEndSegment",
            "cfea44130858dbc2880fe337f2c5208c3eef6730"
        ],
        [
            "Hint Immediate empty_mem is_empty_equal_empty add_mem_1 remove_mem_1 singleton_equal_add union_mem inter_mem diff_mem equal_sym add_remove remove_add : set.",
            "VernacHints",
            "7baa6072e0aca0aa6eefe7b1239e177e5ae7d6cd"
        ],
        [
            "Hint Resolve equal_mem_1 subset_mem_1 choose_mem_1 choose_mem_2 add_mem_2 remove_mem_2 equal_refl equal_equal subset_refl subset_equal subset_antisym add_mem_3 add_equal remove_mem_3 remove_equal : set.",
            "VernacHints",
            "25c0e6fd66ebfe911a4577d5aea3dcf9faf9ae6e"
        ],
        [
            "Lemma set_rec: forall (P:t->Type), (forall s s', equal s s'=true -> P s -> P s') -> (forall s x, mem x s=false -> P s -> P (add x s)) -> P empty -> forall s, P s.",
            "VernacStartTheoremProof",
            "09af966aeba2cd3dcd3dbbd1a3d1fb3e2ef6245d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply set_induction; auto; intros.",
            "VernacExtend",
            "65afa07005da94fad9dde8dd4d59d56ff0eb4aa4"
        ],
        [
            "apply X with empty; auto with set.",
            "VernacExtend",
            "71066d9cc1a7ffc1f32c18849ed5e64724d39933"
        ],
        [
            "apply X with (add x s0); auto with set.",
            "VernacExtend",
            "9fcb6b3c133c2d6b81917ef295b47807f90f73cb"
        ],
        [
            "apply equal_1; intro a; rewrite add_iff; rewrite (H0 a); tauto.",
            "VernacExtend",
            "3e43278b6759f53c0f217312536e2addf60bc6ee"
        ],
        [
            "apply X0; auto with set; apply mem_3; auto.",
            "VernacExtend",
            "441e9e40e4656f82baea0c66bdd3b6f5441a15c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exclusive_set : forall s s' x, ~(In x s/\\In x s') <-> mem x s && mem x s'=false.",
            "VernacStartTheoremProof",
            "7fb8a0d2e0db83e680d21a1f1177efbd254bd037"
        ],
        [
            "intros; do 2 rewrite mem_iff.",
            "VernacExtend",
            "613602a627954490f00937d03cfd706a6f2569f2"
        ],
        [
            "destruct (mem x s); destruct (mem x s'); intuition.",
            "VernacExtend",
            "96d39705bb3e6bb5c55389a73d80e8d645cc678a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Fold.",
            "VernacBeginSection",
            "fe2fc0cb29276b8273152fd4f413fd20acc9e0e9"
        ],
        [
            "Variables (A:Type)(eqA:A->A->Prop)(st:Equivalence eqA).",
            "VernacAssumption",
            "1a516b3410ac946361d830e37268958d7b424579"
        ],
        [
            "Variables (f:elt->A->A)(Comp:Proper (E.eq==>eqA==>eqA) f)(Ass:transpose eqA f).",
            "VernacAssumption",
            "521442f7346c695ae63e9cd907378940b524e160"
        ],
        [
            "Variables (i:A).",
            "VernacAssumption",
            "2337a2847d49840a86631e14cf9a7370d3f56162"
        ],
        [
            "Variables (s s':t)(x:elt).",
            "VernacAssumption",
            "8bb6aa7e590353662d132b8dd696fdb447e79754"
        ],
        [
            "Lemma fold_empty: (fold f empty i) = i.",
            "VernacStartTheoremProof",
            "f69b6a5757f3b2970455110bcc1fc3be1249036f"
        ],
        [
            "apply fold_empty; auto.",
            "VernacExtend",
            "8f63becbdb82e3dfd8deda68d93625b40934645f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_equal: equal s s'=true -> eqA (fold f s i) (fold f s' i).",
            "VernacStartTheoremProof",
            "060f0ad6839b51615cc91a8d2f154511ae405e88"
        ],
        [
            "intros; apply fold_equal with (eqA:=eqA); auto with set.",
            "VernacExtend",
            "e05afdd1d1ce164004441c9924fef9a010a13f52"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_add: mem x s=false -> eqA (fold f (add x s) i) (f x (fold f s i)).",
            "VernacStartTheoremProof",
            "0c2e4ec993b3bb91ad92cea29866388cc977a2d5"
        ],
        [
            "intros; apply fold_add with (eqA:=eqA); auto.",
            "VernacExtend",
            "05d2f6c2bdb3a6a51ce12940645f251c239e009f"
        ],
        [
            "rewrite not_mem_iff; auto.",
            "VernacExtend",
            "add1428c446a3a1ef8439cdf5cb7307c3e9a85a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_fold: mem x s=true -> eqA (fold f (add x s) i) (fold f s i).",
            "VernacStartTheoremProof",
            "c1c7c91a80a86d4139d8f4fe4485a45621c7f3ed"
        ],
        [
            "intros; apply add_fold with (eqA:=eqA); auto with set.",
            "VernacExtend",
            "a868870d0c3064ec40f63cbdf1850c9fc6441bf6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_fold_1: mem x s=true -> eqA (f x (fold f (remove x s) i)) (fold f s i).",
            "VernacStartTheoremProof",
            "fa860d67fd7da5eb6c5121227d9df5f071d62235"
        ],
        [
            "intros; apply remove_fold_1 with (eqA:=eqA); auto with set.",
            "VernacExtend",
            "839fa508f6ba21d37a3504c4d6f5e4581ca53900"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_fold_2: mem x s=false -> eqA (fold f (remove x s) i) (fold f s i).",
            "VernacStartTheoremProof",
            "466b33385665971be289b123da92583c2c254a0b"
        ],
        [
            "intros; apply remove_fold_2 with (eqA:=eqA); auto.",
            "VernacExtend",
            "1a7598a17923c022a8cfab5cbe5fc42e7c5cd4d0"
        ],
        [
            "rewrite not_mem_iff; auto.",
            "VernacExtend",
            "add1428c446a3a1ef8439cdf5cb7307c3e9a85a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_union: (forall x, mem x s && mem x s'=false) -> eqA (fold f (union s s') i) (fold f s (fold f s' i)).",
            "VernacStartTheoremProof",
            "0e76e67ee734fac8917b5f3b582a895b9b26822e"
        ],
        [
            "intros; apply fold_union with (eqA:=eqA); auto.",
            "VernacExtend",
            "4e97596138fb5ebb2e512936f45551db0d295ace"
        ],
        [
            "intros; rewrite exclusive_set; auto.",
            "VernacExtend",
            "ad3d7c494a356463a7d08ce2b83ed667740dcbec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fold.",
            "VernacEndSegment",
            "181c4e77e3ec52c67949058abddf0e01551e3b74"
        ],
        [
            "Lemma add_cardinal_1: forall s x, mem x s=true -> cardinal (add x s)=cardinal s.",
            "VernacStartTheoremProof",
            "9d4c0c61f3ce42eb80fe2ea2e626047cf383c62b"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_cardinal_2: forall s x, mem x s=false -> cardinal (add x s)=S (cardinal s).",
            "VernacStartTheoremProof",
            "eb365fad0c7e962d63521e5966e3c9c1e4ea4e45"
        ],
        [
            "intros; apply add_cardinal_2; auto.",
            "VernacExtend",
            "1565a127a5bbb41e7addc9fd42a3c42b00177f15"
        ],
        [
            "rewrite not_mem_iff; auto.",
            "VernacExtend",
            "add1428c446a3a1ef8439cdf5cb7307c3e9a85a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_cardinal_1: forall s x, mem x s=true -> S (cardinal (remove x s))=cardinal s.",
            "VernacStartTheoremProof",
            "ec0bd1a56db88542942f48e581ed7d3f9be40125"
        ],
        [
            "intros; apply remove_cardinal_1; auto with set.",
            "VernacExtend",
            "3e3302ae1ddd12b60ef34cb6ddf3ab0697410b15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_cardinal_2: forall s x, mem x s=false -> cardinal (remove x s)=cardinal s.",
            "VernacStartTheoremProof",
            "e7a672729f1ce765220770bb774dc9ffe00bded3"
        ],
        [
            "intros; apply Equal_cardinal; apply equal_2; auto with set.",
            "VernacExtend",
            "b706db64558a011362ed2467f2f79a3a57430a37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_cardinal: forall s s', (forall x, mem x s && mem x s'=false) -> cardinal (union s s')=cardinal s+cardinal s'.",
            "VernacStartTheoremProof",
            "2771a310fecfc82840cd007fe88f9f8232374416"
        ],
        [
            "intros; apply union_cardinal; auto; intros.",
            "VernacExtend",
            "3ba7e51a45fb6cb3525ce8e1c421db6afc4fabec"
        ],
        [
            "rewrite exclusive_set; auto.",
            "VernacExtend",
            "5ad0138dd1f555062a875e041c76f4a53e085564"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_cardinal: forall s s', subset s s'=true -> cardinal s<=cardinal s'.",
            "VernacStartTheoremProof",
            "5de052bc7e0380e49f16a7132c4b6f90d91cd898"
        ],
        [
            "intros; apply subset_cardinal; auto with set.",
            "VernacExtend",
            "48ab0faa95654050c42295dd56ef7ea84ae0ace6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Bool.",
            "VernacBeginSection",
            "30d08a8aa562decad2bc4a46de0445edb78e5d03"
        ],
        [
            "Variable f:elt->bool.",
            "VernacAssumption",
            "a48ae31a3296cbc2160b688ff26a82045b6cd84c"
        ],
        [
            "Variable Comp: Proper (E.eq==>Logic.eq) f.",
            "VernacAssumption",
            "2cf480f48022f00bb4c38162f311f669cdb10071"
        ],
        [
            "Let Comp' : Proper (E.eq==>Logic.eq) (fun x =>negb (f x)).",
            "VernacDefinition",
            "2a1544ea17b6aac7103a88aa865473391ec535ca"
        ],
        [
            "repeat red; intros; f_equal; auto.",
            "VernacExtend",
            "7144316d6bbc1b2a3089d610d949a7970b729c46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_mem: forall s x, mem x (filter f s)=mem x s && f x.",
            "VernacStartTheoremProof",
            "efa5cc601c71d62050a68bd626967f992dd8a3bd"
        ],
        [
            "intros; apply filter_b; auto.",
            "VernacExtend",
            "e5e49a27a7308ccd2857f48162bf7635019194dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma for_all_filter: forall s, for_all f s=is_empty (filter (fun x => negb (f x)) s).",
            "VernacStartTheoremProof",
            "26ff82ce5eba5826b863d38c3eb54009e3b02ee1"
        ],
        [
            "intros; apply bool_1; split; intros.",
            "VernacExtend",
            "85f76807ccfd5e7b755aa493297905b50c767efc"
        ],
        [
            "apply is_empty_1.",
            "VernacExtend",
            "20902e3897882dabad41ec2cbb81598dbea9818f"
        ],
        [
            "unfold Empty; intros.",
            "VernacExtend",
            "a769f6dbba77fb1c13b1126bc05ba8802ce906db"
        ],
        [
            "rewrite filter_iff; auto.",
            "VernacExtend",
            "85d62bf03e68d9ba2c3878454b55b8943a1e114b"
        ],
        [
            "red; destruct 1.",
            "VernacExtend",
            "e5f9c7eb34e8253c2cd9a016acc6f56595dd4f8d"
        ],
        [
            "rewrite <- (@for_all_iff s f) in H; auto.",
            "VernacExtend",
            "f436e76ae92963647a5e854c7f0ed71807dde464"
        ],
        [
            "rewrite (H a H0) in H1; discriminate.",
            "VernacExtend",
            "1d0ac3f25124581fd89790ba522af415e67f9c74"
        ],
        [
            "apply for_all_1; auto; red; intros.",
            "VernacExtend",
            "3c27316bff28882fef3d98c66b2ba136e4b3d690"
        ],
        [
            "revert H; rewrite <- is_empty_iff.",
            "VernacExtend",
            "abeeaa38e66b45380ec535335de621d26729354d"
        ],
        [
            "unfold Empty; intro H; generalize (H x); clear H.",
            "VernacExtend",
            "b6506304e615f506e138521fcf7d4f4c68469752"
        ],
        [
            "rewrite filter_iff; auto.",
            "VernacExtend",
            "85d62bf03e68d9ba2c3878454b55b8943a1e114b"
        ],
        [
            "destruct (f x); auto.",
            "VernacExtend",
            "b164fdfe47b9391d455e087160294c3f20cdecd8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_filter : forall s, exists_ f s=negb (is_empty (filter f s)).",
            "VernacStartTheoremProof",
            "00d4eb0f03e02f27466a269024be6947cf7b5f01"
        ],
        [
            "intros; apply bool_1; split; intros.",
            "VernacExtend",
            "85f76807ccfd5e7b755aa493297905b50c767efc"
        ],
        [
            "destruct (exists_2 Comp H) as (a,(Ha1,Ha2)).",
            "VernacExtend",
            "974e9f36c7dbac7e87f705a3f6595fcec1ed80fd"
        ],
        [
            "apply bool_6.",
            "VernacExtend",
            "c6e5da50eecd84fd2916268b5dd15aa3eb001474"
        ],
        [
            "red; intros; apply (@is_empty_2 _ H0 a); auto with set.",
            "VernacExtend",
            "a71ce14d0de84b1a629e3486fb25805a315ce697"
        ],
        [
            "generalize (@choose_1 (filter f s)) (@choose_2 (filter f s)).",
            "VernacExtend",
            "be66336a80e7cf9af1f4f3ef0684ba546e8914e8"
        ],
        [
            "destruct (choose (filter f s)).",
            "VernacExtend",
            "82e444afef535223582721e196350ce4e928404e"
        ],
        [
            "intros H0 _; apply exists_1; auto.",
            "VernacExtend",
            "710b9baead5fc34dc19fc35af6b3935044d9c000"
        ],
        [
            "exists e; generalize (H0 e); rewrite filter_iff; auto.",
            "VernacExtend",
            "53e5c7bf229f9f7d12cbda7f449fd44ac9a3b048"
        ],
        [
            "intros _ H0.",
            "VernacExtend",
            "864462fe429ef967069d351d76d09506655775f8"
        ],
        [
            "rewrite (is_empty_1 (H0 (eq_refl None))) in H; auto; discriminate.",
            "VernacExtend",
            "3589f919fd9437f51396b0e6985717e62aeb80fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_filter_1: forall s, equal (fst (partition f s)) (filter f s)=true.",
            "VernacStartTheoremProof",
            "b7c123d13da6d1b59b94eb4ef04f1fdec9796d00"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_filter_2: forall s, equal (snd (partition f s)) (filter (fun x => negb (f x)) s)=true.",
            "VernacStartTheoremProof",
            "e665a5f3f14c1986c277222a88c39406646400d0"
        ],
        [
            "auto with set.",
            "VernacExtend",
            "3f2d3c8e4a6605365206343c256932e45edda0d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_add_1 : forall s x, f x = true -> filter f (add x s) [=] add x (filter f s).",
            "VernacStartTheoremProof",
            "817e7987f83408ecb5f656d9c9d5c31e5701935c"
        ],
        [
            "red; intros; set_iff; do 2 (rewrite filter_iff; auto); set_iff.",
            "VernacExtend",
            "a925c43c244c0620371e84b1b0902165d2a82fc7"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "rewrite <- H; apply Comp; auto with relations.",
            "VernacExtend",
            "81ba71e7c2e4210406eb1ae5e00611bad82ffc4d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_add_2 : forall s x, f x = false -> filter f (add x s) [=] filter f s.",
            "VernacStartTheoremProof",
            "fa543cd302b4b287736a5d1e21101fa1deaa924f"
        ],
        [
            "red; intros; do 2 (rewrite filter_iff; auto); set_iff.",
            "VernacExtend",
            "4a6a6c917d1743d4c00431fb5398c1df23d41364"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "assert (f x = f a) by (apply Comp; auto).",
            "VernacExtend",
            "7dd19b2651c30ad9402142f3c108c560687c65d7"
        ],
        [
            "rewrite H in H1; rewrite H2 in H1; discriminate.",
            "VernacExtend",
            "9e84306f436745ff432b548bf9550414dbe5e766"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_filter_1 : forall s s' x, f x=true -> (Add x s s') -> (Add x (filter f s) (filter f s')).",
            "VernacStartTheoremProof",
            "a791899430e82fb058c29a4a1d949a12555af8b3"
        ],
        [
            "unfold Add, MP.Add; intros.",
            "VernacExtend",
            "3f21e8aceb412f862816673396892993b29f47c5"
        ],
        [
            "repeat rewrite filter_iff; auto.",
            "VernacExtend",
            "90546d82669e2a07e7351bfa3677cdb7eddd4909"
        ],
        [
            "rewrite H0; clear H0.",
            "VernacExtend",
            "fabeca7858ebb717928a37dd7ab85d95711cf62f"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "setoid_replace y with x; auto with relations.",
            "VernacExtend",
            "202b1a3a02e43b2a4e0137841494765b9d111873"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_filter_2 : forall s s' x, f x=false -> (Add x s s') -> filter f s [=] filter f s'.",
            "VernacStartTheoremProof",
            "529e41b27615c5f80a3a73a0e32bd35bcd2311a3"
        ],
        [
            "unfold Add, MP.Add, Equal; intros.",
            "VernacExtend",
            "a5967f5361f13d9b5d310ab332d4a509c1958f95"
        ],
        [
            "repeat rewrite filter_iff; auto.",
            "VernacExtend",
            "90546d82669e2a07e7351bfa3677cdb7eddd4909"
        ],
        [
            "rewrite H0; clear H0.",
            "VernacExtend",
            "fabeca7858ebb717928a37dd7ab85d95711cf62f"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "setoid_replace x with a in H; auto.",
            "VernacExtend",
            "afa002a2ec78e64a837b555bd67b56dc01d867b1"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_filter: forall f g, Proper (E.eq==>Logic.eq) f -> Proper (E.eq==>Logic.eq) g -> forall s, union (filter f s) (filter g s) [=] filter (fun x=>orb (f x) (g x)) s.",
            "VernacStartTheoremProof",
            "2d48dc7c9d7986f1c1bee2c99e7257eab351addd"
        ],
        [
            "clear Comp' Comp f.",
            "VernacExtend",
            "dd9e162c35df2e3679708d09f617c5f3404276cf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (Proper (E.eq==>Logic.eq) (fun x => orb (f x) (g x))).",
            "VernacExtend",
            "53fdb027de427ae01b9ecf81f67ff46c5ed73d81"
        ],
        [
            "repeat red; intros.",
            "VernacExtend",
            "3b23460c57f21b9e3c22bb0a3b36545050809490"
        ],
        [
            "rewrite (H x y H1); rewrite (H0 x y H1); auto.",
            "VernacExtend",
            "421cb1c4e3b9446fbb2e0cf2d97281c21e2db3c0"
        ],
        [
            "unfold Equal; intros; set_iff; repeat rewrite filter_iff; auto.",
            "VernacExtend",
            "97a190e4ca5b0987f643a9081fa50ab87ad39c5d"
        ],
        [
            "assert (f a || g a = true <-> f a = true \\/ g a = true).",
            "VernacExtend",
            "7c1ae9907fd6d9083e58f7fcd603d94030905514"
        ],
        [
            "split; auto with bool.",
            "VernacExtend",
            "79eb554d3c0e1c7192dfa1b06caa9b9a04733a2e"
        ],
        [
            "intro H3; destruct (orb_prop _ _ H3); auto.",
            "VernacExtend",
            "65a9368f24793c1a3c9cddfaf3e9c0180cf2cd31"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_union: forall s s', filter f (union s s') [=] union (filter f s) (filter f s').",
            "VernacStartTheoremProof",
            "05b0c24408cb03b9bef26d8b1ab01b3e59cf082a"
        ],
        [
            "unfold Equal; intros; set_iff; repeat rewrite filter_iff; auto; set_iff; tauto.",
            "VernacExtend",
            "c4761292015e3941c23eec69cf9dece4d9938321"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma for_all_mem_1: forall s, (forall x, (mem x s)=true->(f x)=true) -> (for_all f s)=true.",
            "VernacStartTheoremProof",
            "53f386f4b2009c402020bc3c3f3860fd7458380a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite for_all_filter; auto.",
            "VernacExtend",
            "63c6698b991bc8554d04335afeca5092c7f1743d"
        ],
        [
            "rewrite is_empty_equal_empty.",
            "VernacExtend",
            "a598fe720439adf895bf3b393479cf571d3d7548"
        ],
        [
            "apply equal_mem_1;intros.",
            "VernacExtend",
            "6e4c39811bcca749088695a2fc8fe61ef173cbb4"
        ],
        [
            "rewrite filter_b; auto.",
            "VernacExtend",
            "6a7d8dae9f70a81bf78c798a0d8674cd099cea0f"
        ],
        [
            "rewrite empty_mem.",
            "VernacExtend",
            "e5661cd94305e160fa966f633063523e4f7b9e30"
        ],
        [
            "generalize (H a); case (mem a s);intros;auto.",
            "VernacExtend",
            "4032004278a26cc06847a94d55c89f987d91a913"
        ],
        [
            "rewrite H0;auto.",
            "VernacExtend",
            "48df2b0b453adadcea8e6914bccb68bfc33b286b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma for_all_mem_2: forall s, (for_all f s)=true -> forall x,(mem x s)=true -> (f x)=true.",
            "VernacStartTheoremProof",
            "b9492fa13277dcc2d7d3b4a6f4856fa49a3897f4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite for_all_filter in H; auto.",
            "VernacExtend",
            "2fb613e53d67d6144e674d1f6a34656c41c284cd"
        ],
        [
            "rewrite is_empty_equal_empty in H.",
            "VernacExtend",
            "3cd413618b918bd53ef04d2dd327d418b62c8482"
        ],
        [
            "generalize (equal_mem_2 _ _ H x).",
            "VernacExtend",
            "20d9ffc82aef37f9b7d339a54afc896d59caaf4a"
        ],
        [
            "rewrite filter_b; auto.",
            "VernacExtend",
            "6a7d8dae9f70a81bf78c798a0d8674cd099cea0f"
        ],
        [
            "rewrite empty_mem.",
            "VernacExtend",
            "e5661cd94305e160fa966f633063523e4f7b9e30"
        ],
        [
            "rewrite H0; simpl;intros.",
            "VernacExtend",
            "abc5a22e4dfda76d73400bfd42933b8171e2a373"
        ],
        [
            "rewrite <- negb_false_iff; auto.",
            "VernacExtend",
            "4f2fffb03bf0296ec65ea49bc1b3adabdfedfa35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma for_all_mem_3: forall s x,(mem x s)=true -> (f x)=false -> (for_all f s)=false.",
            "VernacStartTheoremProof",
            "3f0722321a8d0f28c3d6645398eaa9aea2d0a72b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (bool_eq_ind (for_all f s));intros;auto.",
            "VernacExtend",
            "82bb896c5d0f28a33aa8d7f884e150672952dc23"
        ],
        [
            "rewrite for_all_filter in H1; auto.",
            "VernacExtend",
            "c28e2708b213f870073dbe302a8d9e10f86b7690"
        ],
        [
            "rewrite is_empty_equal_empty in H1.",
            "VernacExtend",
            "4dbeb159e4e8169b9b8383474d137ee4dce53cf9"
        ],
        [
            "generalize (equal_mem_2 _ _ H1 x).",
            "VernacExtend",
            "64a2c393263904b144b7cb0a12b5ae3a06187a0f"
        ],
        [
            "rewrite filter_b; auto.",
            "VernacExtend",
            "6a7d8dae9f70a81bf78c798a0d8674cd099cea0f"
        ],
        [
            "rewrite empty_mem.",
            "VernacExtend",
            "e5661cd94305e160fa966f633063523e4f7b9e30"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "simpl;auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma for_all_mem_4: forall s, for_all f s=false -> {x:elt | mem x s=true /\\ f x=false}.",
            "VernacStartTheoremProof",
            "8a186c5946cad8dc5d01416556d8fed3d482d9bb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite for_all_filter in H; auto.",
            "VernacExtend",
            "2fb613e53d67d6144e674d1f6a34656c41c284cd"
        ],
        [
            "destruct (choose_mem_3 _ H) as (x,(H0,H1));intros.",
            "VernacExtend",
            "75c15863dd1e40265c6f71727fff5f3070316dfe"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "rewrite filter_b in H1; auto.",
            "VernacExtend",
            "77c6117c4536017edb281361020c12983cfc84f4"
        ],
        [
            "elim (andb_prop _ _ H1).",
            "VernacExtend",
            "860b475c95ab7042993d9388c4639c06a95d1290"
        ],
        [
            "split;auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite <- negb_true_iff; auto.",
            "VernacExtend",
            "22b82f429e94825c533cafdee44833443092a1ef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma for_all_exists: forall s, exists_ f s = negb (for_all (fun x =>negb (f x)) s).",
            "VernacStartTheoremProof",
            "3783d978e48eea06f019c6803b7978883d9aa0a5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite for_all_b; auto.",
            "VernacExtend",
            "62fcd3aa2cea1a356afd566bcbe8a2f126c02e93"
        ],
        [
            "rewrite exists_b; auto.",
            "VernacExtend",
            "ba13cc5d0208e5d55f8b480214f48e78b8dafd64"
        ],
        [
            "induction (elements s); simpl; auto.",
            "VernacExtend",
            "7e554746336a1ecbedde18f5cdf47e9cc725b7dd"
        ],
        [
            "destruct (f a); simpl; auto.",
            "VernacExtend",
            "7f9dba6fdc9481032c873b5a90f9d2e8ea291a8a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Bool.",
            "VernacEndSegment",
            "682fcf871c551a6f7d64a5406eb2401429023849"
        ],
        [
            "Section Bool'.",
            "VernacBeginSection",
            "3a456097fedc113eb35f7de02c9c494b523e10a5"
        ],
        [
            "Variable f:elt->bool.",
            "VernacAssumption",
            "a48ae31a3296cbc2160b688ff26a82045b6cd84c"
        ],
        [
            "Variable Comp: Proper (E.eq==>Logic.eq) f.",
            "VernacAssumption",
            "2cf480f48022f00bb4c38162f311f669cdb10071"
        ],
        [
            "Let Comp' : Proper (E.eq==>Logic.eq) (fun x => negb (f x)).",
            "VernacDefinition",
            "2a1544ea17b6aac7103a88aa865473391ec535ca"
        ],
        [
            "repeat red; intros; f_equal; auto.",
            "VernacExtend",
            "7144316d6bbc1b2a3089d610d949a7970b729c46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_mem_1: forall s, (forall x, mem x s=true->f x=false) -> exists_ f s=false.",
            "VernacStartTheoremProof",
            "5ae3e6a7fe523665ac507c203f0acd7888cba20a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite for_all_exists; auto.",
            "VernacExtend",
            "8b97642ad623854c87a2f3597fd24f9d9f1c8644"
        ],
        [
            "rewrite for_all_mem_1;auto with bool.",
            "VernacExtend",
            "fd82da9ccdf871cb0303519d9a3b43f27a75ad46"
        ],
        [
            "intros;generalize (H x H0);intros.",
            "VernacExtend",
            "884195f197045caa516a30c8185edba2ef0363a6"
        ],
        [
            "rewrite negb_true_iff; auto.",
            "VernacExtend",
            "b9e4f091110953ef1dc277817dca7b9fa4c5573b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_mem_2: forall s, exists_ f s=false -> forall x, mem x s=true -> f x=false.",
            "VernacStartTheoremProof",
            "70ccfa3a671ca1ae174e5225da3e6d2f12074e66"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite for_all_exists in H; auto.",
            "VernacExtend",
            "28f0d5819abe9a8ba0c7e732bc33de9a66b6d1ca"
        ],
        [
            "rewrite negb_false_iff in H.",
            "VernacExtend",
            "bb3a99a63a83def349941098012474daa1568680"
        ],
        [
            "rewrite <- negb_true_iff.",
            "VernacExtend",
            "d6d0966fda9e7e1c39777a44adbd3676c2858fe8"
        ],
        [
            "apply for_all_mem_2 with (2:=H); auto.",
            "VernacExtend",
            "3dff596fe01c1badeab616ee9f4046f976f2b23f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_mem_3: forall s x, mem x s=true -> f x=true -> exists_ f s=true.",
            "VernacStartTheoremProof",
            "75021e99e0500a16351b430145bb39cf8989e92a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite for_all_exists; auto.",
            "VernacExtend",
            "8b97642ad623854c87a2f3597fd24f9d9f1c8644"
        ],
        [
            "rewrite negb_true_iff.",
            "VernacExtend",
            "797b5fcbd111bb1202ab3a04f94438c76b201fa8"
        ],
        [
            "apply for_all_mem_3 with x;auto.",
            "VernacExtend",
            "835a4592a53fc8f2cf85f57aa524cc7f8280cc78"
        ],
        [
            "rewrite negb_false_iff; auto.",
            "VernacExtend",
            "1fc9f2cfe4ca966cd7c8ab03d3f8fe92bde92832"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_mem_4: forall s, exists_ f s=true -> {x:elt | (mem x s)=true /\\ (f x)=true}.",
            "VernacStartTheoremProof",
            "58520f64e14f5c075bb47f2c522e2023ffb60d5b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite for_all_exists in H; auto.",
            "VernacExtend",
            "28f0d5819abe9a8ba0c7e732bc33de9a66b6d1ca"
        ],
        [
            "rewrite negb_true_iff in H.",
            "VernacExtend",
            "24fac8337821d0ffbce5aaf906e263bfd5955048"
        ],
        [
            "destruct (@for_all_mem_4 (fun x =>negb (f x)) Comp' s) as (x,[]); auto.",
            "VernacExtend",
            "a42cea1a3e05ab57fbd332204805c628a84e2b0e"
        ],
        [
            "exists x;split;auto.",
            "VernacExtend",
            "9baaff95917bd6ede74eb9f2342b440afcd5c72d"
        ],
        [
            "rewrite <-negb_false_iff; auto.",
            "VernacExtend",
            "4f2fffb03bf0296ec65ea49bc1b3adabdfedfa35"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Bool'.",
            "VernacEndSegment",
            "b7d88970e8c7eedae35245cc956422abf4c4b198"
        ],
        [
            "Section Sum.",
            "VernacBeginSection",
            "3ad78400a33340a8325b476a9bd416e802acffdc"
        ],
        [
            "Definition sum (f:elt -> nat)(s:t) := fold (fun x => plus (f x)) s 0.",
            "VernacDefinition",
            "b99cfdb4d4ef56c335052737692b4b69262da0d8"
        ],
        [
            "Notation compat_opL := (Proper (E.eq==>Logic.eq==>Logic.eq)).",
            "VernacSyntacticDefinition",
            "e60e863aa4f61913dd2494c91346dbcfc21e0841"
        ],
        [
            "Notation transposeL := (transpose Logic.eq).",
            "VernacSyntacticDefinition",
            "2599e26b6bf4844ee175b3306c457a0d44c80666"
        ],
        [
            "Lemma sum_plus : forall f g, Proper (E.eq==>Logic.eq) f -> Proper (E.eq==>Logic.eq) g -> forall s, sum (fun x =>f x+g x) s = sum f s + sum g s.",
            "VernacStartTheoremProof",
            "475fe30813e0e24e43ecbb4cea65608ee62f7d19"
        ],
        [
            "unfold sum.",
            "VernacExtend",
            "0041b82b8e00e805d53b1432b2d9e34785706645"
        ],
        [
            "intros f g Hf Hg.",
            "VernacExtend",
            "d1bd61b817cd7182d6f73b7c77ebad719d496ec3"
        ],
        [
            "assert (fc : compat_opL (fun x:elt =>plus (f x))) by (repeat red; intros; rewrite Hf; auto).",
            "VernacExtend",
            "06eb076d499e553de665ef307a89aed29fe8dd1a"
        ],
        [
            "assert (ft : transposeL (fun x:elt =>plus (f x))) by (red; intros; omega).",
            "VernacExtend",
            "756e1f78b246125692ff097b12a71c391a556465"
        ],
        [
            "assert (gc : compat_opL (fun x:elt => plus (g x))) by (repeat red; intros; rewrite Hg; auto).",
            "VernacExtend",
            "29729accc902591e79ce38bac46dff419caf2b37"
        ],
        [
            "assert (gt : transposeL (fun x:elt =>plus (g x))) by (red; intros; omega).",
            "VernacExtend",
            "ac308a2cfdfbac7bef02eef5425469b69e44b5a0"
        ],
        [
            "assert (fgc : compat_opL (fun x:elt =>plus ((f x)+(g x)))) by (repeat red; intros; rewrite Hf,Hg; auto).",
            "VernacExtend",
            "0a9bce51e6fcdc87bdc09cb21805b0b0fd2b5d04"
        ],
        [
            "assert (fgt : transposeL (fun x:elt=>plus ((f x)+(g x)))) by (red; intros; omega).",
            "VernacExtend",
            "f1c5a03819f7d8b8407c9b311bc048381dbb4f05"
        ],
        [
            "intros s;pattern s; apply set_rec.",
            "VernacExtend",
            "7035e250e2801a66968e3e62b669db2afccafa65"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (fold_equal _ _ _ _ fc ft 0 _ _ H).",
            "VernacExtend",
            "934d63d6b9789253e5acabe21b74968f891d5c57"
        ],
        [
            "rewrite <- (fold_equal _ _ _ _ gc gt 0 _ _ H).",
            "VernacExtend",
            "d5aec76024b12eebe36840c84388916c89a3d174"
        ],
        [
            "rewrite <- (fold_equal _ _ _ _ fgc fgt 0 _ _ H); auto.",
            "VernacExtend",
            "10636d3f7c985f5049ed515967965dbac04e2f80"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "do 3 (rewrite fold_add; auto with *).",
            "VernacExtend",
            "5a06ee84ebc5395bdffcdccbc6bb88c011ff2e10"
        ],
        [
            "do 3 rewrite fold_empty;auto.",
            "VernacExtend",
            "047e99e0db1eb2db840e597371ceca7e69d12074"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_filter : forall f : elt -> bool, Proper (E.eq==>Logic.eq) f -> forall s, (sum (fun x => if f x then 1 else 0) s) = (cardinal (filter f s)).",
            "VernacStartTheoremProof",
            "236006d907e4cf234f6fbe6e8bf60f451537685a"
        ],
        [
            "unfold sum; intros f Hf.",
            "VernacExtend",
            "c4413e16e00210ac14136df16be9fb26e9503416"
        ],
        [
            "assert (st : Equivalence (@Logic.eq nat)) by (split; congruence).",
            "VernacExtend",
            "b4c7b95e8e03ed7accb299995231665c5c6321e3"
        ],
        [
            "assert (cc : compat_opL (fun x => plus (if f x then 1 else 0))) by (repeat red; intros; rewrite Hf; auto).",
            "VernacExtend",
            "c13833d8c136d506db18942706792dc42a87c84b"
        ],
        [
            "assert (ct : transposeL (fun x => plus (if f x then 1 else 0))) by (red; intros; omega).",
            "VernacExtend",
            "69dd26021217cd80ef60939231b520351b039539"
        ],
        [
            "intros s;pattern s; apply set_rec.",
            "VernacExtend",
            "7035e250e2801a66968e3e62b669db2afccafa65"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "change elt with E.t.",
            "VernacExtend",
            "4bfa21ffdbc90e2eddb23228a957789e4b772bde"
        ],
        [
            "rewrite <- (fold_equal _ _ st _ cc ct 0 _ _ H).",
            "VernacExtend",
            "74d2ebe84263f1346786089c5f8f048ed72606c5"
        ],
        [
            "apply equal_2 in H; rewrite <- H, <-H0; auto.",
            "VernacExtend",
            "b0d8b47ed8be1f0493524862a2baf4aaf13c66f1"
        ],
        [
            "intros; rewrite (fold_add _ _ st _ cc ct); auto.",
            "VernacExtend",
            "3108b599890a3e3303bca31ddb7482d1aaff2309"
        ],
        [
            "generalize (@add_filter_1 f Hf s0 (add x s0) x) (@add_filter_2 f Hf s0 (add x s0) x) .",
            "VernacExtend",
            "067928eb0d5b225f800f4d980b6eb4d9db01cd1a"
        ],
        [
            "assert (~ In x (filter f s0)).",
            "VernacExtend",
            "733526bfa9ed64c5ce2b6c1a1696d8e7f4c08a18"
        ],
        [
            "intro H1; rewrite (mem_1 (filter_1 Hf H1)) in H; discriminate H.",
            "VernacExtend",
            "81852c27ab9aab302139e0c4e5d7a4d3151fbf34"
        ],
        [
            "case (f x); simpl; intros.",
            "VernacExtend",
            "3493d23be5f41b8f60afc82724f8b77a5d86cdd8"
        ],
        [
            "rewrite (MP.cardinal_2 H1 (H2 (eq_refl true) (MP.Add_add s0 x))); auto.",
            "VernacExtend",
            "df65e783490e6adfb810bf84a9283b1a51e222cf"
        ],
        [
            "rewrite <- (MP.Equal_cardinal (H3 (eq_refl false) (MP.Add_add s0 x))); auto.",
            "VernacExtend",
            "7c3857b5107a494320bc603086b8c3258f252771"
        ],
        [
            "intros; rewrite fold_empty;auto.",
            "VernacExtend",
            "69800f14e03b087b149855ef2956542d58c84e94"
        ],
        [
            "rewrite MP.cardinal_1; auto.",
            "VernacExtend",
            "d0f8d4b2f556496f88d33d357040ebbd1859b98e"
        ],
        [
            "unfold Empty; intros.",
            "VernacExtend",
            "a769f6dbba77fb1c13b1126bc05ba8802ce906db"
        ],
        [
            "rewrite filter_iff; auto; set_iff; tauto.",
            "VernacExtend",
            "53f49162a8c526bf5005371fa63493ff0ef9cce7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_compat : forall (A:Type)(eqA:A->A->Prop)(st:Equivalence eqA) (f g:elt->A->A), Proper (E.eq==>eqA==>eqA) f -> transpose eqA f -> Proper (E.eq==>eqA==>eqA) g -> transpose eqA g -> forall (i:A)(s:t),(forall x:elt, (In x s) -> forall y, (eqA (f x y) (g x y))) -> (eqA (fold f s i) (fold g s i)).",
            "VernacStartTheoremProof",
            "9a0316411df7a9088291ab27a89c916cd46de9f1"
        ],
        [
            "intros A eqA st f g fc ft gc gt i.",
            "VernacExtend",
            "800f2ccca2dac3200822e70ac8cc6d1dc4314f06"
        ],
        [
            "intro s; pattern s; apply set_rec; intros.",
            "VernacExtend",
            "204a61628b1260c50ca4db5a29821cfbe1566cc5"
        ],
        [
            "transitivity (fold f s0 i).",
            "VernacExtend",
            "3f6f1eb13bfa27bff4b2cd9857e21ad73c8e6293"
        ],
        [
            "apply fold_equal with (eqA:=eqA); auto.",
            "VernacExtend",
            "51850b7f3f2b962dce3045c8b2b958d367315ded"
        ],
        [
            "rewrite equal_sym; auto.",
            "VernacExtend",
            "0c54bfc1256b70a94ab229005dd4c047f6eefa58"
        ],
        [
            "transitivity (fold g s0 i).",
            "VernacExtend",
            "32bcca4b293acf199681e52dd9717e9b8bce0fb6"
        ],
        [
            "apply H0; intros; apply H1; auto with set.",
            "VernacExtend",
            "4fed1cf7ff7cff97de4d255f69b3394f03eb00e6"
        ],
        [
            "elim (equal_2 H x); auto with set; intros.",
            "VernacExtend",
            "1c9d2783024b9438fcf1bbf630db26820233c21a"
        ],
        [
            "apply fold_equal with (eqA:=eqA); auto with set.",
            "VernacExtend",
            "07a10b3c09559c4b64031d6a468a641a640508c6"
        ],
        [
            "transitivity (f x (fold f s0 i)).",
            "VernacExtend",
            "cf40d03651a445343816f48dde18b379434ac6d9"
        ],
        [
            "apply fold_add with (eqA:=eqA); auto with set.",
            "VernacExtend",
            "8849d118ccbf7308cbb6c5c3ab8733c78f023e2c"
        ],
        [
            "transitivity (g x (fold f s0 i)); auto with set relations.",
            "VernacExtend",
            "2d280f06f8b9bfc6739d3379a36cb20e8f93b993"
        ],
        [
            "transitivity (g x (fold g s0 i)); auto with set relations.",
            "VernacExtend",
            "380abb9e55dc0c086a918d035f3b2ec9f353e225"
        ],
        [
            "apply gc; auto with set relations.",
            "VernacExtend",
            "cb05650b53218eb3e17f721a909b56f9cec87852"
        ],
        [
            "symmetry; apply fold_add with (eqA:=eqA); auto.",
            "VernacExtend",
            "f8bda5b27ba25820d0fe6ac19156d85fd8239801"
        ],
        [
            "do 2 rewrite fold_empty; reflexivity.",
            "VernacExtend",
            "3d43e5f4f6980a0f6f69c611344dcbf9ffcc5757"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_compat : forall f g, Proper (E.eq==>Logic.eq) f -> Proper (E.eq==>Logic.eq) g -> forall s, (forall x, In x s -> f x=g x) -> sum f s=sum g s.",
            "VernacStartTheoremProof",
            "505ce0847b0ec6c5fc3cf7d09b896d6b51c6881c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold sum; apply (@fold_compat _ (@Logic.eq nat)); repeat red; auto with *.",
            "VernacExtend",
            "7094d278a1560b67e2cb40ac89190660ffcd3625"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Sum.",
            "VernacEndSegment",
            "4f3bb45ccb2f8ea2c3019bac94947a402ddc1169"
        ],
        [
            "End WEqPropertiesOn.",
            "VernacEndSegment",
            "c5cef42e53154da92a2fcbd7b412037be3e5f560"
        ],
        [
            "Module WEqProperties (M:WSets) := WEqPropertiesOn M.E M.",
            "VernacDefineModule",
            "3ddf03cae238977b9d4f57a77ccf6626dcc969d5"
        ],
        [
            "Module EqProperties := WEqProperties.",
            "VernacDefineModule",
            "0053e0a59965c1f60281190cf7f429bf9a49cc0b"
        ]
    ],
    "proofs": [
        {
            "name": "mem_eq",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intro H; rewrite H; auto.",
                        "VernacExtend",
                        "7eecf050c4dc1af5bf7fb9d4fcf5c443c79b5895"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_mem_1",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros; apply equal_1; unfold Equal; intros.",
                        "VernacExtend",
                        "d8a10afdf0486b3a835906276dd84ee014778d5e"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite mem_iff; rewrite H; tauto.",
                        "VernacExtend",
                        "2a64018c52122b5bf9bffb663d77781eec58e85b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_mem_2",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros; rewrite (equal_2 H); auto.",
                        "VernacExtend",
                        "d1077a67f62da4bc3548d0a8dc36c35932c28a94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_mem_1",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros; apply subset_1; unfold Subset; intros a.",
                        "VernacExtend",
                        "ef791f2e4d40325dfef7b5aef3b62c2ff594f9fc"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite mem_iff; auto.",
                        "VernacExtend",
                        "83585ec04d449b48f2df375a37c295f8993e4df7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_mem_2",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros H a; do 2 rewrite <- mem_iff; apply subset_2; auto.",
                        "VernacExtend",
                        "fdd9ceafaab288afa0973d93dd13aa74b19cbd7e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_mem",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "rewrite <- not_mem_iff; auto with set.",
                        "VernacExtend",
                        "281abd702e3d196304a3bb752c03acc5dd70dad7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_empty_equal_empty",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "apply bool_1; split; intros.",
                        "VernacExtend",
                        "7aca02b8ba34a2cec88735aa54082e30bb78d05b"
                    ]
                },
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- is_empty_iff; auto with set.",
                        "VernacExtend",
                        "4b464104adb64be2773c72ffd72bac95fb98cef8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "choose_mem_1",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "choose_mem_2",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_mem_1",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "auto with set relations.",
                        "VernacExtend",
                        "5ff65c64e5f5945446ff47fba80378b2ee87c1af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_mem_2",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "apply add_neq_b.",
                        "VernacExtend",
                        "fc8ad4dcbea75bc7460dbaec7100679df4978d46"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_mem_1",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "rewrite <- not_mem_iff; auto with set relations.",
                        "VernacExtend",
                        "9f7e9b162655004363205313b38539f522edabbc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_mem_2",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "apply remove_neq_b.",
                        "VernacExtend",
                        "0afe6978cbb08bac7d5d5ad62da54b167a84ec3b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "singleton_equal_add",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "rewrite (singleton_equal_add x); auto with set.",
                        "VernacExtend",
                        "61a4a6e91dac6bbfa0131c4bc77223a19e2e1d27"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_mem",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "apply union_b.",
                        "VernacExtend",
                        "160c6ea60d33df751494079fefee3c45b5c85337"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_mem",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "apply inter_b.",
                        "VernacExtend",
                        "c63e70202cb5c0d7892b5adffb1a0b74e64acc42"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_mem",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "apply diff_b.",
                        "VernacExtend",
                        "8f4039a7f6d80eb611346f82352ce7c6482edc63"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_3",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros; rewrite <- not_mem_iff; auto.",
                        "VernacExtend",
                        "c5a33ed3cc7cef0a589d748e37b497cd662c8b58"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_4",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros; rewrite not_mem_iff; auto.",
                        "VernacExtend",
                        "fd0abeedcff3abf168c67e2daf0822b8d64be9c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_refl",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_sym",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "intros; apply bool_1; do 2 rewrite <- equal_iff; intuition.",
                        "VernacExtend",
                        "e5451f9da591d80f9a0ccc8f4dc6fed2ec004a75"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_trans",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "intros; rewrite (equal_2 H); auto.",
                        "VernacExtend",
                        "d1077a67f62da4bc3548d0a8dc36c35932c28a94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_equal",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "intros; rewrite (equal_2 H); auto.",
                        "VernacExtend",
                        "d1077a67f62da4bc3548d0a8dc36c35932c28a94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_cardinal",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_refl",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_antisym",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_trans",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "do 3 rewrite <- subset_iff; intros.",
                        "VernacExtend",
                        "0c47a6549346a287a13f6e7db557162d396b4d88"
                    ]
                },
                {
                    "command": [
                        "apply subset_trans with s'; auto.",
                        "VernacExtend",
                        "f984b86e28df1578f0d720995a8d4a4c49c265c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_equal",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "choose_mem_3",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (@choose_1 s) (@choose_2 s).",
                        "VernacExtend",
                        "5902f22de6dfc6a2872833a4ac27269ae3e1c5e2"
                    ]
                },
                {
                    "command": [
                        "destruct (choose s);intros.",
                        "VernacExtend",
                        "4e87513f5f0f9dc96b97375c2ad6ec4b94f7733b"
                    ]
                },
                {
                    "command": [
                        "exists e;auto with set.",
                        "VernacExtend",
                        "51d6da455c1f6f75ad42321d59a183072008252f"
                    ]
                },
                {
                    "command": [
                        "generalize (H1 (eq_refl None)); clear H1.",
                        "VernacExtend",
                        "46f5172b12f0c7b0274020f527cba1a2e11fd413"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite (is_empty_1 H1) in H; discriminate.",
                        "VernacExtend",
                        "9b51df2fca25596a01f83028d19af168719adc59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "choose_mem_4",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "generalize (@choose_1 empty).",
                        "VernacExtend",
                        "f6e0c0ef5c2d2bf174c2792bb1639bbbdf9c97f5"
                    ]
                },
                {
                    "command": [
                        "case (@choose empty);intros;auto.",
                        "VernacExtend",
                        "9d9e6c30fb4d20dfe89f79092b888040f2b97dc5"
                    ]
                },
                {
                    "command": [
                        "elim (@empty_1 e); auto.",
                        "VernacExtend",
                        "5f34a3960c06c9640cb783df418af094ff9da929"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_mem_3",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_equal",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_mem_3",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "rewrite remove_b; intros H;destruct (andb_prop _ _ H); auto.",
                        "VernacExtend",
                        "a9b2b47c962ca52ab93aaecf2cb2b27c140ae6c4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_equal",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "intros; apply equal_1; apply remove_equal.",
                        "VernacExtend",
                        "8b763d664d82c68d7a79486661bb8fa28d4ab9a7"
                    ]
                },
                {
                    "command": [
                        "rewrite not_mem_iff; auto.",
                        "VernacExtend",
                        "add1428c446a3a1ef8439cdf5cb7307c3e9a85a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_remove",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "intros; apply equal_1; apply add_remove; auto with set.",
                        "VernacExtend",
                        "5e70c77f5e227489c7e59cb57eaac82b4523515a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_add",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "intros; apply equal_1; apply remove_add; auto.",
                        "VernacExtend",
                        "3f9786410bca75291f0b1ef30f8429c368c13d52"
                    ]
                },
                {
                    "command": [
                        "rewrite not_mem_iff; auto.",
                        "VernacExtend",
                        "add1428c446a3a1ef8439cdf5cb7307c3e9a85a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_empty_cardinal",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "intros; apply bool_1; split; intros.",
                        "VernacExtend",
                        "85f76807ccfd5e7b755aa493297905b50c767efc"
                    ]
                },
                {
                    "command": [
                        "rewrite MP.cardinal_1; simpl; auto with set.",
                        "VernacExtend",
                        "e4ff39481f6aac2fe8d90d4c62ae7dfe779d7714"
                    ]
                },
                {
                    "command": [
                        "assert (cardinal s = 0) by (apply zerob_true_elim; auto).",
                        "VernacExtend",
                        "018647744abc858d4b9e2a9bb42df41450d84c5e"
                    ]
                },
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "singleton_mem_1",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "auto with set relations.",
                        "VernacExtend",
                        "5ff65c64e5f5945446ff47fba80378b2ee87c1af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "singleton_mem_2",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "intros; rewrite singleton_b.",
                        "VernacExtend",
                        "16806054386b27a491c786bb1367e4e74d246673"
                    ]
                },
                {
                    "command": [
                        "unfold eqb; destruct (E.eq_dec x y); intuition.",
                        "VernacExtend",
                        "b9ac50c562ed66c96205b911dc04dd737dd4ebcf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "singleton_mem_3",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "intros; apply singleton_1; auto with set.",
                        "VernacExtend",
                        "363115bcf8b17c09482016b8122efe72c1c4ec3a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_sym",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_subset_equal",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_equal_1",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_equal_2",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_assoc",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_union_singleton",
            "line_nb": 162,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_add",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_subset_1",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_subset_2",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_subset_3",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "intros; apply subset_1; apply union_subset_3; auto with set.",
                        "VernacExtend",
                        "16be6ae42eae4508c0b5d05e49ea64ba3d66772a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_sym",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_subset_equal",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_equal_1",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_equal_2",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_assoc",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_inter_1",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_inter_2",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_add_1",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_add_2",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "intros; apply equal_1; apply inter_add_2.",
                        "VernacExtend",
                        "072927374bde3ca9d5648f7e530a0d85f0143d9d"
                    ]
                },
                {
                    "command": [
                        "rewrite not_mem_iff; auto.",
                        "VernacExtend",
                        "add1428c446a3a1ef8439cdf5cb7307c3e9a85a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_subset_1",
            "line_nb": 205,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_subset_2",
            "line_nb": 208,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_subset_3",
            "line_nb": 211,
            "steps": [
                {
                    "command": [
                        "intros; apply subset_1; apply inter_subset_3; auto with set.",
                        "VernacExtend",
                        "a7a5de2dab2572ca61cf2b86572403112a182200"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_subset",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_subset_equal",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_inter_singleton",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_inter_empty",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_inter_all",
            "line_nb": 226,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "set_rec",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply set_induction; auto; intros.",
                        "VernacExtend",
                        "65afa07005da94fad9dde8dd4d59d56ff0eb4aa4"
                    ]
                },
                {
                    "command": [
                        "apply X with empty; auto with set.",
                        "VernacExtend",
                        "71066d9cc1a7ffc1f32c18849ed5e64724d39933"
                    ]
                },
                {
                    "command": [
                        "apply X with (add x s0); auto with set.",
                        "VernacExtend",
                        "9fcb6b3c133c2d6b81917ef295b47807f90f73cb"
                    ]
                },
                {
                    "command": [
                        "apply equal_1; intro a; rewrite add_iff; rewrite (H0 a); tauto.",
                        "VernacExtend",
                        "3e43278b6759f53c0f217312536e2addf60bc6ee"
                    ]
                },
                {
                    "command": [
                        "apply X0; auto with set; apply mem_3; auto.",
                        "VernacExtend",
                        "441e9e40e4656f82baea0c66bdd3b6f5441a15c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exclusive_set",
            "line_nb": 240,
            "steps": [
                {
                    "command": [
                        "intros; do 2 rewrite mem_iff.",
                        "VernacExtend",
                        "613602a627954490f00937d03cfd706a6f2569f2"
                    ]
                },
                {
                    "command": [
                        "destruct (mem x s); destruct (mem x s'); intuition.",
                        "VernacExtend",
                        "96d39705bb3e6bb5c55389a73d80e8d645cc678a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_empty",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "apply fold_empty; auto.",
                        "VernacExtend",
                        "8f63becbdb82e3dfd8deda68d93625b40934645f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_equal",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "intros; apply fold_equal with (eqA:=eqA); auto with set.",
                        "VernacExtend",
                        "e05afdd1d1ce164004441c9924fef9a010a13f52"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_add",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "intros; apply fold_add with (eqA:=eqA); auto.",
                        "VernacExtend",
                        "05d2f6c2bdb3a6a51ce12940645f251c239e009f"
                    ]
                },
                {
                    "command": [
                        "rewrite not_mem_iff; auto.",
                        "VernacExtend",
                        "add1428c446a3a1ef8439cdf5cb7307c3e9a85a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_fold",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "intros; apply add_fold with (eqA:=eqA); auto with set.",
                        "VernacExtend",
                        "a868870d0c3064ec40f63cbdf1850c9fc6441bf6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_fold_1",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "intros; apply remove_fold_1 with (eqA:=eqA); auto with set.",
                        "VernacExtend",
                        "839fa508f6ba21d37a3504c4d6f5e4581ca53900"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_fold_2",
            "line_nb": 265,
            "steps": [
                {
                    "command": [
                        "intros; apply remove_fold_2 with (eqA:=eqA); auto.",
                        "VernacExtend",
                        "1a7598a17923c022a8cfab5cbe5fc42e7c5cd4d0"
                    ]
                },
                {
                    "command": [
                        "rewrite not_mem_iff; auto.",
                        "VernacExtend",
                        "add1428c446a3a1ef8439cdf5cb7307c3e9a85a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_union",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "intros; apply fold_union with (eqA:=eqA); auto.",
                        "VernacExtend",
                        "4e97596138fb5ebb2e512936f45551db0d295ace"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite exclusive_set; auto.",
                        "VernacExtend",
                        "ad3d7c494a356463a7d08ce2b83ed667740dcbec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_cardinal_1",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_cardinal_2",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "intros; apply add_cardinal_2; auto.",
                        "VernacExtend",
                        "1565a127a5bbb41e7addc9fd42a3c42b00177f15"
                    ]
                },
                {
                    "command": [
                        "rewrite not_mem_iff; auto.",
                        "VernacExtend",
                        "add1428c446a3a1ef8439cdf5cb7307c3e9a85a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_cardinal_1",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "intros; apply remove_cardinal_1; auto with set.",
                        "VernacExtend",
                        "3e3302ae1ddd12b60ef34cb6ddf3ab0697410b15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_cardinal_2",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "intros; apply Equal_cardinal; apply equal_2; auto with set.",
                        "VernacExtend",
                        "b706db64558a011362ed2467f2f79a3a57430a37"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_cardinal",
            "line_nb": 287,
            "steps": [
                {
                    "command": [
                        "intros; apply union_cardinal; auto; intros.",
                        "VernacExtend",
                        "3ba7e51a45fb6cb3525ce8e1c421db6afc4fabec"
                    ]
                },
                {
                    "command": [
                        "rewrite exclusive_set; auto.",
                        "VernacExtend",
                        "5ad0138dd1f555062a875e041c76f4a53e085564"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_cardinal",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "intros; apply subset_cardinal; auto with set.",
                        "VernacExtend",
                        "48ab0faa95654050c42295dd56ef7ea84ae0ace6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Comp'",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "repeat red; intros; f_equal; auto.",
                        "VernacExtend",
                        "7144316d6bbc1b2a3089d610d949a7970b729c46"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_mem",
            "line_nb": 300,
            "steps": [
                {
                    "command": [
                        "intros; apply filter_b; auto.",
                        "VernacExtend",
                        "e5e49a27a7308ccd2857f48162bf7635019194dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "for_all_filter",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "intros; apply bool_1; split; intros.",
                        "VernacExtend",
                        "85f76807ccfd5e7b755aa493297905b50c767efc"
                    ]
                },
                {
                    "command": [
                        "apply is_empty_1.",
                        "VernacExtend",
                        "20902e3897882dabad41ec2cbb81598dbea9818f"
                    ]
                },
                {
                    "command": [
                        "unfold Empty; intros.",
                        "VernacExtend",
                        "a769f6dbba77fb1c13b1126bc05ba8802ce906db"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_iff; auto.",
                        "VernacExtend",
                        "85d62bf03e68d9ba2c3878454b55b8943a1e114b"
                    ]
                },
                {
                    "command": [
                        "red; destruct 1.",
                        "VernacExtend",
                        "e5f9c7eb34e8253c2cd9a016acc6f56595dd4f8d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (@for_all_iff s f) in H; auto.",
                        "VernacExtend",
                        "f436e76ae92963647a5e854c7f0ed71807dde464"
                    ]
                },
                {
                    "command": [
                        "rewrite (H a H0) in H1; discriminate.",
                        "VernacExtend",
                        "1d0ac3f25124581fd89790ba522af415e67f9c74"
                    ]
                },
                {
                    "command": [
                        "apply for_all_1; auto; red; intros.",
                        "VernacExtend",
                        "3c27316bff28882fef3d98c66b2ba136e4b3d690"
                    ]
                },
                {
                    "command": [
                        "revert H; rewrite <- is_empty_iff.",
                        "VernacExtend",
                        "abeeaa38e66b45380ec535335de621d26729354d"
                    ]
                },
                {
                    "command": [
                        "unfold Empty; intro H; generalize (H x); clear H.",
                        "VernacExtend",
                        "b6506304e615f506e138521fcf7d4f4c68469752"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_iff; auto.",
                        "VernacExtend",
                        "85d62bf03e68d9ba2c3878454b55b8943a1e114b"
                    ]
                },
                {
                    "command": [
                        "destruct (f x); auto.",
                        "VernacExtend",
                        "b164fdfe47b9391d455e087160294c3f20cdecd8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_filter",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "intros; apply bool_1; split; intros.",
                        "VernacExtend",
                        "85f76807ccfd5e7b755aa493297905b50c767efc"
                    ]
                },
                {
                    "command": [
                        "destruct (exists_2 Comp H) as (a,(Ha1,Ha2)).",
                        "VernacExtend",
                        "974e9f36c7dbac7e87f705a3f6595fcec1ed80fd"
                    ]
                },
                {
                    "command": [
                        "apply bool_6.",
                        "VernacExtend",
                        "c6e5da50eecd84fd2916268b5dd15aa3eb001474"
                    ]
                },
                {
                    "command": [
                        "red; intros; apply (@is_empty_2 _ H0 a); auto with set.",
                        "VernacExtend",
                        "a71ce14d0de84b1a629e3486fb25805a315ce697"
                    ]
                },
                {
                    "command": [
                        "generalize (@choose_1 (filter f s)) (@choose_2 (filter f s)).",
                        "VernacExtend",
                        "be66336a80e7cf9af1f4f3ef0684ba546e8914e8"
                    ]
                },
                {
                    "command": [
                        "destruct (choose (filter f s)).",
                        "VernacExtend",
                        "82e444afef535223582721e196350ce4e928404e"
                    ]
                },
                {
                    "command": [
                        "intros H0 _; apply exists_1; auto.",
                        "VernacExtend",
                        "710b9baead5fc34dc19fc35af6b3935044d9c000"
                    ]
                },
                {
                    "command": [
                        "exists e; generalize (H0 e); rewrite filter_iff; auto.",
                        "VernacExtend",
                        "53e5c7bf229f9f7d12cbda7f449fd44ac9a3b048"
                    ]
                },
                {
                    "command": [
                        "intros _ H0.",
                        "VernacExtend",
                        "864462fe429ef967069d351d76d09506655775f8"
                    ]
                },
                {
                    "command": [
                        "rewrite (is_empty_1 (H0 (eq_refl None))) in H; auto; discriminate.",
                        "VernacExtend",
                        "3589f919fd9437f51396b0e6985717e62aeb80fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_filter_1",
            "line_nb": 329,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_filter_2",
            "line_nb": 332,
            "steps": [
                {
                    "command": [
                        "auto with set.",
                        "VernacExtend",
                        "3f2d3c8e4a6605365206343c256932e45edda0d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_add_1",
            "line_nb": 335,
            "steps": [
                {
                    "command": [
                        "red; intros; set_iff; do 2 (rewrite filter_iff; auto); set_iff.",
                        "VernacExtend",
                        "a925c43c244c0620371e84b1b0902165d2a82fc7"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; apply Comp; auto with relations.",
                        "VernacExtend",
                        "81ba71e7c2e4210406eb1ae5e00611bad82ffc4d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_add_2",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "red; intros; do 2 (rewrite filter_iff; auto); set_iff.",
                        "VernacExtend",
                        "4a6a6c917d1743d4c00431fb5398c1df23d41364"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "assert (f x = f a) by (apply Comp; auto).",
                        "VernacExtend",
                        "7dd19b2651c30ad9402142f3c108c560687c65d7"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H1; rewrite H2 in H1; discriminate.",
                        "VernacExtend",
                        "9e84306f436745ff432b548bf9550414dbe5e766"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_filter_1",
            "line_nb": 346,
            "steps": [
                {
                    "command": [
                        "unfold Add, MP.Add; intros.",
                        "VernacExtend",
                        "3f21e8aceb412f862816673396892993b29f47c5"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite filter_iff; auto.",
                        "VernacExtend",
                        "90546d82669e2a07e7351bfa3677cdb7eddd4909"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; clear H0.",
                        "VernacExtend",
                        "fabeca7858ebb717928a37dd7ab85d95711cf62f"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "setoid_replace y with x; auto with relations.",
                        "VernacExtend",
                        "202b1a3a02e43b2a4e0137841494765b9d111873"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_filter_2",
            "line_nb": 353,
            "steps": [
                {
                    "command": [
                        "unfold Add, MP.Add, Equal; intros.",
                        "VernacExtend",
                        "a5967f5361f13d9b5d310ab332d4a509c1958f95"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite filter_iff; auto.",
                        "VernacExtend",
                        "90546d82669e2a07e7351bfa3677cdb7eddd4909"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; clear H0.",
                        "VernacExtend",
                        "fabeca7858ebb717928a37dd7ab85d95711cf62f"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "setoid_replace x with a in H; auto.",
                        "VernacExtend",
                        "afa002a2ec78e64a837b555bd67b56dc01d867b1"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_filter",
            "line_nb": 361,
            "steps": [
                {
                    "command": [
                        "clear Comp' Comp f.",
                        "VernacExtend",
                        "dd9e162c35df2e3679708d09f617c5f3404276cf"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (Proper (E.eq==>Logic.eq) (fun x => orb (f x) (g x))).",
                        "VernacExtend",
                        "53fdb027de427ae01b9ecf81f67ff46c5ed73d81"
                    ]
                },
                {
                    "command": [
                        "repeat red; intros.",
                        "VernacExtend",
                        "3b23460c57f21b9e3c22bb0a3b36545050809490"
                    ]
                },
                {
                    "command": [
                        "rewrite (H x y H1); rewrite (H0 x y H1); auto.",
                        "VernacExtend",
                        "421cb1c4e3b9446fbb2e0cf2d97281c21e2db3c0"
                    ]
                },
                {
                    "command": [
                        "unfold Equal; intros; set_iff; repeat rewrite filter_iff; auto.",
                        "VernacExtend",
                        "97a190e4ca5b0987f643a9081fa50ab87ad39c5d"
                    ]
                },
                {
                    "command": [
                        "assert (f a || g a = true <-> f a = true \\/ g a = true).",
                        "VernacExtend",
                        "7c1ae9907fd6d9083e58f7fcd603d94030905514"
                    ]
                },
                {
                    "command": [
                        "split; auto with bool.",
                        "VernacExtend",
                        "79eb554d3c0e1c7192dfa1b06caa9b9a04733a2e"
                    ]
                },
                {
                    "command": [
                        "intro H3; destruct (orb_prop _ _ H3); auto.",
                        "VernacExtend",
                        "65a9368f24793c1a3c9cddfaf3e9c0180cf2cd31"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_union",
            "line_nb": 373,
            "steps": [
                {
                    "command": [
                        "unfold Equal; intros; set_iff; repeat rewrite filter_iff; auto; set_iff; tauto.",
                        "VernacExtend",
                        "c4761292015e3941c23eec69cf9dece4d9938321"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "for_all_mem_1",
            "line_nb": 376,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite for_all_filter; auto.",
                        "VernacExtend",
                        "63c6698b991bc8554d04335afeca5092c7f1743d"
                    ]
                },
                {
                    "command": [
                        "rewrite is_empty_equal_empty.",
                        "VernacExtend",
                        "a598fe720439adf895bf3b393479cf571d3d7548"
                    ]
                },
                {
                    "command": [
                        "apply equal_mem_1;intros.",
                        "VernacExtend",
                        "6e4c39811bcca749088695a2fc8fe61ef173cbb4"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_b; auto.",
                        "VernacExtend",
                        "6a7d8dae9f70a81bf78c798a0d8674cd099cea0f"
                    ]
                },
                {
                    "command": [
                        "rewrite empty_mem.",
                        "VernacExtend",
                        "e5661cd94305e160fa966f633063523e4f7b9e30"
                    ]
                },
                {
                    "command": [
                        "generalize (H a); case (mem a s);intros;auto.",
                        "VernacExtend",
                        "4032004278a26cc06847a94d55c89f987d91a913"
                    ]
                },
                {
                    "command": [
                        "rewrite H0;auto.",
                        "VernacExtend",
                        "48df2b0b453adadcea8e6914bccb68bfc33b286b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "for_all_mem_2",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite for_all_filter in H; auto.",
                        "VernacExtend",
                        "2fb613e53d67d6144e674d1f6a34656c41c284cd"
                    ]
                },
                {
                    "command": [
                        "rewrite is_empty_equal_empty in H.",
                        "VernacExtend",
                        "3cd413618b918bd53ef04d2dd327d418b62c8482"
                    ]
                },
                {
                    "command": [
                        "generalize (equal_mem_2 _ _ H x).",
                        "VernacExtend",
                        "20d9ffc82aef37f9b7d339a54afc896d59caaf4a"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_b; auto.",
                        "VernacExtend",
                        "6a7d8dae9f70a81bf78c798a0d8674cd099cea0f"
                    ]
                },
                {
                    "command": [
                        "rewrite empty_mem.",
                        "VernacExtend",
                        "e5661cd94305e160fa966f633063523e4f7b9e30"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; simpl;intros.",
                        "VernacExtend",
                        "abc5a22e4dfda76d73400bfd42933b8171e2a373"
                    ]
                },
                {
                    "command": [
                        "rewrite <- negb_false_iff; auto.",
                        "VernacExtend",
                        "4f2fffb03bf0296ec65ea49bc1b3adabdfedfa35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "for_all_mem_3",
            "line_nb": 396,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (bool_eq_ind (for_all f s));intros;auto.",
                        "VernacExtend",
                        "82bb896c5d0f28a33aa8d7f884e150672952dc23"
                    ]
                },
                {
                    "command": [
                        "rewrite for_all_filter in H1; auto.",
                        "VernacExtend",
                        "c28e2708b213f870073dbe302a8d9e10f86b7690"
                    ]
                },
                {
                    "command": [
                        "rewrite is_empty_equal_empty in H1.",
                        "VernacExtend",
                        "4dbeb159e4e8169b9b8383474d137ee4dce53cf9"
                    ]
                },
                {
                    "command": [
                        "generalize (equal_mem_2 _ _ H1 x).",
                        "VernacExtend",
                        "64a2c393263904b144b7cb0a12b5ae3a06187a0f"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_b; auto.",
                        "VernacExtend",
                        "6a7d8dae9f70a81bf78c798a0d8674cd099cea0f"
                    ]
                },
                {
                    "command": [
                        "rewrite empty_mem.",
                        "VernacExtend",
                        "e5661cd94305e160fa966f633063523e4f7b9e30"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "simpl;auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "for_all_mem_4",
            "line_nb": 408,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite for_all_filter in H; auto.",
                        "VernacExtend",
                        "2fb613e53d67d6144e674d1f6a34656c41c284cd"
                    ]
                },
                {
                    "command": [
                        "destruct (choose_mem_3 _ H) as (x,(H0,H1));intros.",
                        "VernacExtend",
                        "75c15863dd1e40265c6f71727fff5f3070316dfe"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_b in H1; auto.",
                        "VernacExtend",
                        "77c6117c4536017edb281361020c12983cfc84f4"
                    ]
                },
                {
                    "command": [
                        "elim (andb_prop _ _ H1).",
                        "VernacExtend",
                        "860b475c95ab7042993d9388c4639c06a95d1290"
                    ]
                },
                {
                    "command": [
                        "split;auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "rewrite <- negb_true_iff; auto.",
                        "VernacExtend",
                        "22b82f429e94825c533cafdee44833443092a1ef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "for_all_exists",
            "line_nb": 418,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite for_all_b; auto.",
                        "VernacExtend",
                        "62fcd3aa2cea1a356afd566bcbe8a2f126c02e93"
                    ]
                },
                {
                    "command": [
                        "rewrite exists_b; auto.",
                        "VernacExtend",
                        "ba13cc5d0208e5d55f8b480214f48e78b8dafd64"
                    ]
                },
                {
                    "command": [
                        "induction (elements s); simpl; auto.",
                        "VernacExtend",
                        "7e554746336a1ecbedde18f5cdf47e9cc725b7dd"
                    ]
                },
                {
                    "command": [
                        "destruct (f a); simpl; auto.",
                        "VernacExtend",
                        "7f9dba6fdc9481032c873b5a90f9d2e8ea291a8a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_mem_1",
            "line_nb": 432,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite for_all_exists; auto.",
                        "VernacExtend",
                        "8b97642ad623854c87a2f3597fd24f9d9f1c8644"
                    ]
                },
                {
                    "command": [
                        "rewrite for_all_mem_1;auto with bool.",
                        "VernacExtend",
                        "fd82da9ccdf871cb0303519d9a3b43f27a75ad46"
                    ]
                },
                {
                    "command": [
                        "intros;generalize (H x H0);intros.",
                        "VernacExtend",
                        "884195f197045caa516a30c8185edba2ef0363a6"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_true_iff; auto.",
                        "VernacExtend",
                        "b9e4f091110953ef1dc277817dca7b9fa4c5573b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_mem_2",
            "line_nb": 439,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite for_all_exists in H; auto.",
                        "VernacExtend",
                        "28f0d5819abe9a8ba0c7e732bc33de9a66b6d1ca"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_false_iff in H.",
                        "VernacExtend",
                        "bb3a99a63a83def349941098012474daa1568680"
                    ]
                },
                {
                    "command": [
                        "rewrite <- negb_true_iff.",
                        "VernacExtend",
                        "d6d0966fda9e7e1c39777a44adbd3676c2858fe8"
                    ]
                },
                {
                    "command": [
                        "apply for_all_mem_2 with (2:=H); auto.",
                        "VernacExtend",
                        "3dff596fe01c1badeab616ee9f4046f976f2b23f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_mem_3",
            "line_nb": 446,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite for_all_exists; auto.",
                        "VernacExtend",
                        "8b97642ad623854c87a2f3597fd24f9d9f1c8644"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_true_iff.",
                        "VernacExtend",
                        "797b5fcbd111bb1202ab3a04f94438c76b201fa8"
                    ]
                },
                {
                    "command": [
                        "apply for_all_mem_3 with x;auto.",
                        "VernacExtend",
                        "835a4592a53fc8f2cf85f57aa524cc7f8280cc78"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_false_iff; auto.",
                        "VernacExtend",
                        "1fc9f2cfe4ca966cd7c8ab03d3f8fe92bde92832"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_mem_4",
            "line_nb": 453,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite for_all_exists in H; auto.",
                        "VernacExtend",
                        "28f0d5819abe9a8ba0c7e732bc33de9a66b6d1ca"
                    ]
                },
                {
                    "command": [
                        "rewrite negb_true_iff in H.",
                        "VernacExtend",
                        "24fac8337821d0ffbce5aaf906e263bfd5955048"
                    ]
                },
                {
                    "command": [
                        "destruct (@for_all_mem_4 (fun x =>negb (f x)) Comp' s) as (x,[]); auto.",
                        "VernacExtend",
                        "a42cea1a3e05ab57fbd332204805c628a84e2b0e"
                    ]
                },
                {
                    "command": [
                        "exists x;split;auto.",
                        "VernacExtend",
                        "9baaff95917bd6ede74eb9f2342b440afcd5c72d"
                    ]
                },
                {
                    "command": [
                        "rewrite <-negb_false_iff; auto.",
                        "VernacExtend",
                        "4f2fffb03bf0296ec65ea49bc1b3adabdfedfa35"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_plus",
            "line_nb": 466,
            "steps": [
                {
                    "command": [
                        "unfold sum.",
                        "VernacExtend",
                        "0041b82b8e00e805d53b1432b2d9e34785706645"
                    ]
                },
                {
                    "command": [
                        "intros f g Hf Hg.",
                        "VernacExtend",
                        "d1bd61b817cd7182d6f73b7c77ebad719d496ec3"
                    ]
                },
                {
                    "command": [
                        "assert (fc : compat_opL (fun x:elt =>plus (f x))) by (repeat red; intros; rewrite Hf; auto).",
                        "VernacExtend",
                        "06eb076d499e553de665ef307a89aed29fe8dd1a"
                    ]
                },
                {
                    "command": [
                        "assert (ft : transposeL (fun x:elt =>plus (f x))) by (red; intros; omega).",
                        "VernacExtend",
                        "756e1f78b246125692ff097b12a71c391a556465"
                    ]
                },
                {
                    "command": [
                        "assert (gc : compat_opL (fun x:elt => plus (g x))) by (repeat red; intros; rewrite Hg; auto).",
                        "VernacExtend",
                        "29729accc902591e79ce38bac46dff419caf2b37"
                    ]
                },
                {
                    "command": [
                        "assert (gt : transposeL (fun x:elt =>plus (g x))) by (red; intros; omega).",
                        "VernacExtend",
                        "ac308a2cfdfbac7bef02eef5425469b69e44b5a0"
                    ]
                },
                {
                    "command": [
                        "assert (fgc : compat_opL (fun x:elt =>plus ((f x)+(g x)))) by (repeat red; intros; rewrite Hf,Hg; auto).",
                        "VernacExtend",
                        "0a9bce51e6fcdc87bdc09cb21805b0b0fd2b5d04"
                    ]
                },
                {
                    "command": [
                        "assert (fgt : transposeL (fun x:elt=>plus ((f x)+(g x)))) by (red; intros; omega).",
                        "VernacExtend",
                        "f1c5a03819f7d8b8407c9b311bc048381dbb4f05"
                    ]
                },
                {
                    "command": [
                        "intros s;pattern s; apply set_rec.",
                        "VernacExtend",
                        "7035e250e2801a66968e3e62b669db2afccafa65"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (fold_equal _ _ _ _ fc ft 0 _ _ H).",
                        "VernacExtend",
                        "934d63d6b9789253e5acabe21b74968f891d5c57"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (fold_equal _ _ _ _ gc gt 0 _ _ H).",
                        "VernacExtend",
                        "d5aec76024b12eebe36840c84388916c89a3d174"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (fold_equal _ _ _ _ fgc fgt 0 _ _ H); auto.",
                        "VernacExtend",
                        "10636d3f7c985f5049ed515967965dbac04e2f80"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "do 3 (rewrite fold_add; auto with *).",
                        "VernacExtend",
                        "5a06ee84ebc5395bdffcdccbc6bb88c011ff2e10"
                    ]
                },
                {
                    "command": [
                        "do 3 rewrite fold_empty;auto.",
                        "VernacExtend",
                        "047e99e0db1eb2db840e597371ceca7e69d12074"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_filter",
            "line_nb": 484,
            "steps": [
                {
                    "command": [
                        "unfold sum; intros f Hf.",
                        "VernacExtend",
                        "c4413e16e00210ac14136df16be9fb26e9503416"
                    ]
                },
                {
                    "command": [
                        "assert (st : Equivalence (@Logic.eq nat)) by (split; congruence).",
                        "VernacExtend",
                        "b4c7b95e8e03ed7accb299995231665c5c6321e3"
                    ]
                },
                {
                    "command": [
                        "assert (cc : compat_opL (fun x => plus (if f x then 1 else 0))) by (repeat red; intros; rewrite Hf; auto).",
                        "VernacExtend",
                        "c13833d8c136d506db18942706792dc42a87c84b"
                    ]
                },
                {
                    "command": [
                        "assert (ct : transposeL (fun x => plus (if f x then 1 else 0))) by (red; intros; omega).",
                        "VernacExtend",
                        "69dd26021217cd80ef60939231b520351b039539"
                    ]
                },
                {
                    "command": [
                        "intros s;pattern s; apply set_rec.",
                        "VernacExtend",
                        "7035e250e2801a66968e3e62b669db2afccafa65"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "change elt with E.t.",
                        "VernacExtend",
                        "4bfa21ffdbc90e2eddb23228a957789e4b772bde"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (fold_equal _ _ st _ cc ct 0 _ _ H).",
                        "VernacExtend",
                        "74d2ebe84263f1346786089c5f8f048ed72606c5"
                    ]
                },
                {
                    "command": [
                        "apply equal_2 in H; rewrite <- H, <-H0; auto.",
                        "VernacExtend",
                        "b0d8b47ed8be1f0493524862a2baf4aaf13c66f1"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite (fold_add _ _ st _ cc ct); auto.",
                        "VernacExtend",
                        "3108b599890a3e3303bca31ddb7482d1aaff2309"
                    ]
                },
                {
                    "command": [
                        "generalize (@add_filter_1 f Hf s0 (add x s0) x) (@add_filter_2 f Hf s0 (add x s0) x) .",
                        "VernacExtend",
                        "067928eb0d5b225f800f4d980b6eb4d9db01cd1a"
                    ]
                },
                {
                    "command": [
                        "assert (~ In x (filter f s0)).",
                        "VernacExtend",
                        "733526bfa9ed64c5ce2b6c1a1696d8e7f4c08a18"
                    ]
                },
                {
                    "command": [
                        "intro H1; rewrite (mem_1 (filter_1 Hf H1)) in H; discriminate H.",
                        "VernacExtend",
                        "81852c27ab9aab302139e0c4e5d7a4d3151fbf34"
                    ]
                },
                {
                    "command": [
                        "case (f x); simpl; intros.",
                        "VernacExtend",
                        "3493d23be5f41b8f60afc82724f8b77a5d86cdd8"
                    ]
                },
                {
                    "command": [
                        "rewrite (MP.cardinal_2 H1 (H2 (eq_refl true) (MP.Add_add s0 x))); auto.",
                        "VernacExtend",
                        "df65e783490e6adfb810bf84a9283b1a51e222cf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (MP.Equal_cardinal (H3 (eq_refl false) (MP.Add_add s0 x))); auto.",
                        "VernacExtend",
                        "7c3857b5107a494320bc603086b8c3258f252771"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite fold_empty;auto.",
                        "VernacExtend",
                        "69800f14e03b087b149855ef2956542d58c84e94"
                    ]
                },
                {
                    "command": [
                        "rewrite MP.cardinal_1; auto.",
                        "VernacExtend",
                        "d0f8d4b2f556496f88d33d357040ebbd1859b98e"
                    ]
                },
                {
                    "command": [
                        "unfold Empty; intros.",
                        "VernacExtend",
                        "a769f6dbba77fb1c13b1126bc05ba8802ce906db"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_iff; auto; set_iff; tauto.",
                        "VernacExtend",
                        "53f49162a8c526bf5005371fa63493ff0ef9cce7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_compat",
            "line_nb": 506,
            "steps": [
                {
                    "command": [
                        "intros A eqA st f g fc ft gc gt i.",
                        "VernacExtend",
                        "800f2ccca2dac3200822e70ac8cc6d1dc4314f06"
                    ]
                },
                {
                    "command": [
                        "intro s; pattern s; apply set_rec; intros.",
                        "VernacExtend",
                        "204a61628b1260c50ca4db5a29821cfbe1566cc5"
                    ]
                },
                {
                    "command": [
                        "transitivity (fold f s0 i).",
                        "VernacExtend",
                        "3f6f1eb13bfa27bff4b2cd9857e21ad73c8e6293"
                    ]
                },
                {
                    "command": [
                        "apply fold_equal with (eqA:=eqA); auto.",
                        "VernacExtend",
                        "51850b7f3f2b962dce3045c8b2b958d367315ded"
                    ]
                },
                {
                    "command": [
                        "rewrite equal_sym; auto.",
                        "VernacExtend",
                        "0c54bfc1256b70a94ab229005dd4c047f6eefa58"
                    ]
                },
                {
                    "command": [
                        "transitivity (fold g s0 i).",
                        "VernacExtend",
                        "32bcca4b293acf199681e52dd9717e9b8bce0fb6"
                    ]
                },
                {
                    "command": [
                        "apply H0; intros; apply H1; auto with set.",
                        "VernacExtend",
                        "4fed1cf7ff7cff97de4d255f69b3394f03eb00e6"
                    ]
                },
                {
                    "command": [
                        "elim (equal_2 H x); auto with set; intros.",
                        "VernacExtend",
                        "1c9d2783024b9438fcf1bbf630db26820233c21a"
                    ]
                },
                {
                    "command": [
                        "apply fold_equal with (eqA:=eqA); auto with set.",
                        "VernacExtend",
                        "07a10b3c09559c4b64031d6a468a641a640508c6"
                    ]
                },
                {
                    "command": [
                        "transitivity (f x (fold f s0 i)).",
                        "VernacExtend",
                        "cf40d03651a445343816f48dde18b379434ac6d9"
                    ]
                },
                {
                    "command": [
                        "apply fold_add with (eqA:=eqA); auto with set.",
                        "VernacExtend",
                        "8849d118ccbf7308cbb6c5c3ab8733c78f023e2c"
                    ]
                },
                {
                    "command": [
                        "transitivity (g x (fold f s0 i)); auto with set relations.",
                        "VernacExtend",
                        "2d280f06f8b9bfc6739d3379a36cb20e8f93b993"
                    ]
                },
                {
                    "command": [
                        "transitivity (g x (fold g s0 i)); auto with set relations.",
                        "VernacExtend",
                        "380abb9e55dc0c086a918d035f3b2ec9f353e225"
                    ]
                },
                {
                    "command": [
                        "apply gc; auto with set relations.",
                        "VernacExtend",
                        "cb05650b53218eb3e17f721a909b56f9cec87852"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply fold_add with (eqA:=eqA); auto.",
                        "VernacExtend",
                        "f8bda5b27ba25820d0fe6ac19156d85fd8239801"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite fold_empty; reflexivity.",
                        "VernacExtend",
                        "3d43e5f4f6980a0f6f69c611344dcbf9ffcc5757"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_compat",
            "line_nb": 524,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold sum; apply (@fold_compat _ (@Logic.eq nat)); repeat red; auto with *.",
                        "VernacExtend",
                        "7094d278a1560b67e2cb40ac89190660ffcd3625"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}