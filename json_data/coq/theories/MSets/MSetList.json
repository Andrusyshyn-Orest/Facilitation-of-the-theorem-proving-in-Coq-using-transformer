{
    "filename": "theories/MSets/MSetList.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export MSetInterface OrdersFacts OrdersLists.",
            "VernacRequire",
            "02a8270183beacdf7e1267f19aa67bee9d591715"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Module Ops (X:OrderedType) <: WOps X.",
            "VernacDefineModule",
            "eef75527afa27dc528541fa167b63c516519a440"
        ],
        [
            "Definition elt := X.t.",
            "VernacDefinition",
            "1e5220371e2feaf15d74e257297a89cf424636f8"
        ],
        [
            "Definition t := list elt.",
            "VernacDefinition",
            "0cd54eb2e7290cb0099d89847b88485fed739a6a"
        ],
        [
            "Definition empty : t := nil.",
            "VernacDefinition",
            "56abb3fc6b550f64df22afbc7ee873a3294af4bb"
        ],
        [
            "Definition is_empty (l : t) := if l then true else false.",
            "VernacDefinition",
            "45371034379082ce88979881984b531272576d47"
        ],
        [
            "Fixpoint mem x s := match s with | nil => false | y :: l => match X.compare x y with | Lt => false | Eq => true | Gt => mem x l end end.",
            "VernacFixpoint",
            "bd6637abeb88bc991e7ace68ba14e748321b239d"
        ],
        [
            "Fixpoint add x s := match s with | nil => x :: nil | y :: l => match X.compare x y with | Lt => x :: s | Eq => s | Gt => y :: add x l end end.",
            "VernacFixpoint",
            "a9ecf994550c123b9c655388ff1ee41e2d62349a"
        ],
        [
            "Definition singleton (x : elt) := x :: nil.",
            "VernacDefinition",
            "1cb057e3c6a64d5150c8e0b178f6116796a2184d"
        ],
        [
            "Fixpoint remove x s : t := match s with | nil => nil | y :: l => match X.compare x y with | Lt => s | Eq => l | Gt => y :: remove x l end end.",
            "VernacFixpoint",
            "1bc7c983ff9cb3f76696810167c9e00f0afab173"
        ],
        [
            "Fixpoint union (s : t) : t -> t := match s with | nil => fun s' => s' | x :: l => (fix union_aux (s' : t) : t := match s' with | nil => s | x' :: l' => match X.compare x x' with | Lt => x :: union l s' | Eq => x :: union l l' | Gt => x' :: union_aux l' end end) end.",
            "VernacFixpoint",
            "e804674ae2c639a9ebf8361cced87b70e867c977"
        ],
        [
            "Fixpoint inter (s : t) : t -> t := match s with | nil => fun _ => nil | x :: l => (fix inter_aux (s' : t) : t := match s' with | nil => nil | x' :: l' => match X.compare x x' with | Lt => inter l s' | Eq => x :: inter l l' | Gt => inter_aux l' end end) end.",
            "VernacFixpoint",
            "290a22e1233c68b070541f71bcdbe2aaef7424ed"
        ],
        [
            "Fixpoint diff (s : t) : t -> t := match s with | nil => fun _ => nil | x :: l => (fix diff_aux (s' : t) : t := match s' with | nil => s | x' :: l' => match X.compare x x' with | Lt => x :: diff l s' | Eq => diff l l' | Gt => diff_aux l' end end) end.",
            "VernacFixpoint",
            "5472d75e8758254512c663a8a1c64106cadeff49"
        ],
        [
            "Fixpoint equal (s : t) : t -> bool := fun s' : t => match s, s' with | nil, nil => true | x :: l, x' :: l' => match X.compare x x' with | Eq => equal l l' | _ => false end | _, _ => false end.",
            "VernacFixpoint",
            "796e533fa88c787e694dac95bae8b6a650faacf3"
        ],
        [
            "Fixpoint subset s s' := match s, s' with | nil, _ => true | x :: l, x' :: l' => match X.compare x x' with | Lt => false | Eq => subset l l' | Gt => subset s l' end | _, _ => false end.",
            "VernacFixpoint",
            "30c80d6588d5c4644c62b10b8ae0d36e5f0b89f4"
        ],
        [
            "Definition fold (B : Type) (f : elt -> B -> B) (s : t) (i : B) : B := fold_left (flip f) s i.",
            "VernacDefinition",
            "2f0ac6cde259d7279d47f2ea549ac483a3551c9a"
        ],
        [
            "Fixpoint filter (f : elt -> bool) (s : t) : t := match s with | nil => nil | x :: l => if f x then x :: filter f l else filter f l end.",
            "VernacFixpoint",
            "76748cca6bc79c24bf81a0f7a2c505f3e1f5fd12"
        ],
        [
            "Fixpoint for_all (f : elt -> bool) (s : t) : bool := match s with | nil => true | x :: l => if f x then for_all f l else false end.",
            "VernacFixpoint",
            "44f5ccc6dc22ad404543a656b06ecba631d0c605"
        ],
        [
            "Fixpoint exists_ (f : elt -> bool) (s : t) : bool := match s with | nil => false | x :: l => if f x then true else exists_ f l end.",
            "VernacFixpoint",
            "c41e1493a2f02d2735068a3ce398cd8cc365e633"
        ],
        [
            "Fixpoint partition (f : elt -> bool) (s : t) : t * t := match s with | nil => (nil, nil) | x :: l => let (s1, s2) := partition f l in if f x then (x :: s1, s2) else (s1, x :: s2) end.",
            "VernacFixpoint",
            "b2b61e69b625097e5dfc4fffb33677d5cfa30d13"
        ],
        [
            "Definition cardinal (s : t) : nat := length s.",
            "VernacDefinition",
            "923ee9054d60e1325519fa7a0d778e4f878138fb"
        ],
        [
            "Definition elements (x : t) : list elt := x.",
            "VernacDefinition",
            "4e3ffd40ea7e3955af9d10b98bca6b77754a4dfd"
        ],
        [
            "Definition min_elt (s : t) : option elt := match s with | nil => None | x :: _ => Some x end.",
            "VernacDefinition",
            "c16a8cbc23054dfc26532e73004023fd30b2ce70"
        ],
        [
            "Fixpoint max_elt (s : t) : option elt := match s with | nil => None | x :: nil => Some x | _ :: l => max_elt l end.",
            "VernacFixpoint",
            "2d55c3db1b7eebc1f51c68657832e85bf4cbab13"
        ],
        [
            "Definition choose := min_elt.",
            "VernacDefinition",
            "cde4586c79b1ad2d6e92e570f7da0102638b1185"
        ],
        [
            "Fixpoint compare s s' := match s, s' with | nil, nil => Eq | nil, _ => Lt | _, nil => Gt | x::s, x'::s' => match X.compare x x' with | Eq => compare s s' | Lt => Lt | Gt => Gt end end.",
            "VernacFixpoint",
            "f3f57f838a3bf3166d242ee1bffc12355ceaa175"
        ],
        [
            "End Ops.",
            "VernacEndSegment",
            "c7e50ec7301a1cd71f0d4a4ff2dfc887f351fa21"
        ],
        [
            "Module MakeRaw (X: OrderedType) <: RawSets X.",
            "VernacDefineModule",
            "029a644c468c06bdd57bcd4933d5d39fe725b3c5"
        ],
        [
            "Module Import MX := OrderedTypeFacts X.",
            "VernacDefineModule",
            "bf745ef45e505ded22c270db23f36982dfd71874"
        ],
        [
            "Module Import ML := OrderedTypeLists X.",
            "VernacDefineModule",
            "53f2898bc26c93b48a71d8e9c9e573798c15a8a1"
        ],
        [
            "Include Ops X.",
            "VernacInclude",
            "e514e2301b58cc21c7209a1d4fb67ee7541a5f23"
        ],
        [
            "Section ForNotations.",
            "VernacBeginSection",
            "efbd1ac17b9bf2fea138b1ec385ce80998e40133"
        ],
        [
            "Definition inf x l := match l with | nil => true | y::_ => match X.compare x y with Lt => true | _ => false end end.",
            "VernacDefinition",
            "6c968228d09a327e3302b26b15e6ae883c6921f7"
        ],
        [
            "Fixpoint isok l := match l with | nil => true | x::l => inf x l && isok l end.",
            "VernacFixpoint",
            "9c7d1c3fa46a51f89d0b661a56766fdca9a87942"
        ],
        [
            "Notation Sort l := (isok l = true).",
            "VernacSyntacticDefinition",
            "39bf2e793fa2bbbfb3f06bca71b2a89f6c3ebd8c"
        ],
        [
            "Notation Inf := (lelistA X.lt).",
            "VernacSyntacticDefinition",
            "66510b8478ad45fa24765ceb520840ea6cca6a9c"
        ],
        [
            "Notation In := (InA X.eq).",
            "VernacSyntacticDefinition",
            "de2195f17c6f6c9ae2489b091f11d2c91518669c"
        ],
        [
            "Existing Instance X.eq_equiv.",
            "VernacDeclareInstances",
            "3a6ef646be36c8d6e5942b57f91b14ab3a222bac"
        ],
        [
            "Hint Extern 20 => solve [order].",
            "VernacHints",
            "d04d76faaa9dab214b2c00aac85cbfab20847ae0"
        ],
        [
            "Definition IsOk s := Sort s.",
            "VernacDefinition",
            "5900f202d7602737ba5c2e016e1a92dfe868a8bc"
        ],
        [
            "Class Ok (s:t) : Prop := ok : Sort s.",
            "VernacInductive",
            "610915cac870ba6703701ebe2d9c12fe4ab5eb7b"
        ],
        [
            "Hint Resolve ok.",
            "VernacHints",
            "d72c1d67483be4aeaa56676a03c6bfdaf9ac1d45"
        ],
        [
            "Hint Unfold Ok.",
            "VernacHints",
            "012c92e7566bcf60f5036cd0f4f53f0f3f880083"
        ],
        [
            "Instance Sort_Ok s `(Hs : Sort s) : Ok s := { ok := Hs }.",
            "VernacInstance",
            "560bca79ce7459bac3ffd0c5c9843535e6567df2"
        ],
        [
            "Lemma inf_iff : forall x l, Inf x l <-> inf x l = true.",
            "VernacStartTheoremProof",
            "4647174928c4cc414012625c9dc51d2681623997"
        ],
        [
            "intros x l; split; intro H.",
            "VernacExtend",
            "a2b6ef127c2b7fdc3484a9b220b941670cf418a7"
        ],
        [
            "destruct H; simpl in *.",
            "VernacExtend",
            "9aeb98d24e2ffa1a00218a42c01c68f46c74e85a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite <- compare_lt_iff in H; rewrite H; reflexivity.",
            "VernacExtend",
            "73cbe60c49f145ecb043ea8015f490c394d20f54"
        ],
        [
            "destruct l as [|y ys]; simpl in *.",
            "VernacExtend",
            "9edadedb7dcb8b02fe39f1f07b52384ce656f68d"
        ],
        [
            "constructor; fail.",
            "VernacExtend",
            "905b9d171fff4433d527dba7198adf81bf339f08"
        ],
        [
            "revert H; case_eq (X.compare x y); try discriminate; [].",
            "VernacExtend",
            "14febe3f895f4f90b00d32bcdf465e6e70053ec4"
        ],
        [
            "intros Ha _.",
            "VernacExtend",
            "215024c511a53ad9a5e95c7735570bee2b55d4eb"
        ],
        [
            "rewrite compare_lt_iff in Ha.",
            "VernacExtend",
            "fcad2f1b6a6a24dc413379ac50d642a78daacea7"
        ],
        [
            "constructor; assumption.",
            "VernacExtend",
            "a36f2a931681c9f1611aa56f1a810ad0f6afb946"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isok_iff : forall l, sort X.lt l <-> Ok l.",
            "VernacStartTheoremProof",
            "414ffb6a2dc524ba80beb26aad389c5e29b98ec6"
        ],
        [
            "intro l; split; intro H.",
            "VernacExtend",
            "6b0e880e9c3fddb1ae177fce710ea23a0a3e2586"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "constructor; fail.",
            "VernacExtend",
            "905b9d171fff4433d527dba7198adf81bf339f08"
        ],
        [
            "intros y ys Ha Hb Hc.",
            "VernacExtend",
            "41b6bc5cb327cb12a5237619937bfe02ef8a2a7a"
        ],
        [
            "change (inf y ys && isok ys = true).",
            "VernacExtend",
            "905743c2f280dcddd3a37ba9ad9c7dbe398d01e2"
        ],
        [
            "rewrite inf_iff in Hc.",
            "VernacExtend",
            "4f75bae2e6e311d0a5a4b7f7d43070d65b69bc0a"
        ],
        [
            "rewrite andb_true_iff; tauto.",
            "VernacExtend",
            "7c2eefada3693d72dd4380ff3fe50f19558875b5"
        ],
        [
            "induction l as [|x xs].",
            "VernacExtend",
            "0dfc9432bc496c402eda56d2a090325dd1be01a0"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "change (inf x xs && isok xs = true) in H.",
            "VernacExtend",
            "55c45f02e2840e11432d4915c56a25e1505208fb"
        ],
        [
            "rewrite andb_true_iff, <- inf_iff in H.",
            "VernacExtend",
            "2100151a953d73883ec34167c29df2cb090e87e3"
        ],
        [
            "destruct H; constructor; tauto.",
            "VernacExtend",
            "fd34b36866051707e82044d6fe957100560c3bc5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Extern 1 (Ok _) => rewrite <- isok_iff.",
            "VernacHints",
            "627d98cd920275803bea69d67e48492fe32ad545"
        ],
        [
            "Ltac inv_ok := match goal with | H:sort X.lt (_ :: _) |- _ => inversion_clear H; inv_ok | H:sort X.lt nil |- _ => clear H; inv_ok | H:sort X.lt ?l |- _ => change (Ok l) in H; inv_ok | H:Ok _ |- _ => rewrite <- isok_iff in H; inv_ok | |- Ok _ => rewrite <- isok_iff | _ => idtac end.",
            "VernacExtend",
            "4b740ad8570013c4e485501e113553ee19807d9a"
        ],
        [
            "Ltac inv := invlist InA; inv_ok; invlist lelistA.",
            "VernacExtend",
            "65544c77ca8988c7dc1c7bbb66b990f755aeaf6c"
        ],
        [
            "Ltac constructors := repeat constructor.",
            "VernacExtend",
            "b6ba73271660cac528313dd45d5db49a3047165b"
        ],
        [
            "Ltac sort_inf_in := match goal with | H:Inf ?x ?l, H':In ?y ?l |- _ => cut (X.lt x y); [ intro | apply Sort_Inf_In with l; auto] | _ => fail end.",
            "VernacExtend",
            "d2dc3c3d82e110ebc5e97588bdb85eec1f23836b"
        ],
        [
            "Global Instance isok_Ok s `(isok s = true) : Ok s | 10.",
            "VernacInstance",
            "e433f103b400941f0864800cdfc80e5054e940af"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Equal s s' := forall a : elt, In a s <-> In a s'.",
            "VernacDefinition",
            "cd5f6ee7097e7157ccbc10af82ffd932eaf3c423"
        ],
        [
            "Definition Subset s s' := forall a : elt, In a s -> In a s'.",
            "VernacDefinition",
            "106ca6bd7b6e4a40ea51abcc05e3c9af2fc2bee5"
        ],
        [
            "Definition Empty s := forall a : elt, ~ In a s.",
            "VernacDefinition",
            "99dffcced2023a4cba92e934e92ab887beb9ff43"
        ],
        [
            "Definition For_all (P : elt -> Prop) s := forall x, In x s -> P x.",
            "VernacDefinition",
            "4d362106a16edcc40d0eef5faef1552c0586f113"
        ],
        [
            "Definition Exists (P : elt -> Prop) (s : t) := exists x, In x s /\\ P x.",
            "VernacDefinition",
            "73c1983dbd85d9c47e49f862c15d2ca58ba287c7"
        ],
        [
            "Lemma mem_spec : forall (s : t) (x : elt) (Hs : Ok s), mem x s = true <-> In x s.",
            "VernacStartTheoremProof",
            "c7c1853514e97c475b1deb217c59600cd487fedd"
        ],
        [
            "induction s; intros x Hs; inv; simpl.",
            "VernacExtend",
            "81bc03808977d85ee6cf35d74fb0383de5913013"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "elim_compare x a; rewrite InA_cons; intuition; try order.",
            "VernacExtend",
            "57e6ba61d0ff40ce1213cd1793b624269de3a841"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "sort_inf_in.",
            "VernacExtend",
            "9eb25a36c2de1b390a0376d0609d48c4a8661053"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "rewrite <- IHs; auto.",
            "VernacExtend",
            "14dfbf3b505ed38d05656e9f0a10a90963706499"
        ],
        [
            "rewrite IHs; auto.",
            "VernacExtend",
            "307f7fbc326db99b76199a012fca963fd61b181a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_inf : forall (s : t) (x a : elt), Inf a s -> X.lt a x -> Inf a (add x s).",
            "VernacStartTheoremProof",
            "947860f07b22819eced95077562bb47dfdd77aad"
        ],
        [
            "simple induction s; simpl.",
            "VernacExtend",
            "298231545dccccc350ebcbfa56e333c5f5186a1c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intros; elim_compare x a; inv; intuition.",
            "VernacExtend",
            "fd704a49029206b75946919a742cecebc8bfa577"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve add_inf.",
            "VernacHints",
            "73a0a27be10082ce3468a91466468173869f67bb"
        ],
        [
            "Global Instance add_ok s x : forall `(Ok s), Ok (add x s).",
            "VernacInstance",
            "493e182cff36cc8991b8e96ee05bf3502ac515ba"
        ],
        [
            "repeat rewrite <- isok_iff; revert s x.",
            "VernacExtend",
            "6533c95119e3fa59cb2d3f10e543c5d2d19e6403"
        ],
        [
            "simple induction s; simpl.",
            "VernacExtend",
            "298231545dccccc350ebcbfa56e333c5f5186a1c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intros; elim_compare x a; inv; auto.",
            "VernacExtend",
            "a8bc21e0d264e498b17eadefa633dda2ea38b31c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_spec : forall (s : t) (x y : elt) (Hs : Ok s), In y (add x s) <-> X.eq y x \\/ In y s.",
            "VernacStartTheoremProof",
            "c4909c3f8d053f5f94c42154c662941821589dd8"
        ],
        [
            "induction s; simpl; intros.",
            "VernacExtend",
            "55d762fdba50b27f8695d733d2857ceea86abd6f"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "inv; auto.",
            "VernacExtend",
            "1e09fea56c964df79eb372d6433eec3b5c88882b"
        ],
        [
            "elim_compare x a; inv; rewrite !InA_cons, ?IHs; intuition.",
            "VernacExtend",
            "451fe387b406c1b64663c02e9993fd6a3eab95cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_inf : forall (s : t) (x a : elt) (Hs : Ok s), Inf a s -> Inf a (remove x s).",
            "VernacStartTheoremProof",
            "8e15ca3fd54b7083423215263fbb2fe119fa4eca"
        ],
        [
            "induction s; simpl.",
            "VernacExtend",
            "0d97119141b8edf3eb7e6fb5ae4f956cd710346b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intros; elim_compare x a; inv; auto.",
            "VernacExtend",
            "a8bc21e0d264e498b17eadefa633dda2ea38b31c"
        ],
        [
            "apply Inf_lt with a; auto.",
            "VernacExtend",
            "718870bdaf23fae5152f3d141fa947a2a11997c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve remove_inf.",
            "VernacHints",
            "c42df3e4ab060b9b61cac37b97acd7d8abbd9cc9"
        ],
        [
            "Global Instance remove_ok s x : forall `(Ok s), Ok (remove x s).",
            "VernacInstance",
            "58f69efab66b39a412e3daad8d09a18023025a2a"
        ],
        [
            "repeat rewrite <- isok_iff; revert s x.",
            "VernacExtend",
            "6533c95119e3fa59cb2d3f10e543c5d2d19e6403"
        ],
        [
            "induction s; simpl.",
            "VernacExtend",
            "0d97119141b8edf3eb7e6fb5ae4f956cd710346b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intros; elim_compare x a; inv; auto.",
            "VernacExtend",
            "a8bc21e0d264e498b17eadefa633dda2ea38b31c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_spec : forall (s : t) (x y : elt) (Hs : Ok s), In y (remove x s) <-> In y s /\\ ~X.eq y x.",
            "VernacStartTheoremProof",
            "44c0e2f105a738cdabfd1274df1de81bb1c33d84"
        ],
        [
            "induction s; simpl; intros.",
            "VernacExtend",
            "55d762fdba50b27f8695d733d2857ceea86abd6f"
        ],
        [
            "intuition; inv; auto.",
            "VernacExtend",
            "31c85709324ada0e3a3add122b7deeb18b951dcb"
        ],
        [
            "elim_compare x a; inv; rewrite !InA_cons, ?IHs; intuition; try sort_inf_in; try order.",
            "VernacExtend",
            "f350e68e04ec16bc26108df6a19c1ddfef0354f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance singleton_ok x : Ok (singleton x).",
            "VernacInstance",
            "685789d3c069a9ae4c5613a9a310ad0b4d487c4c"
        ],
        [
            "unfold singleton; simpl; auto.",
            "VernacExtend",
            "cd581fcf700c8e6641cb0984b50a04b75a6dca70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma singleton_spec : forall x y : elt, In y (singleton x) <-> X.eq y x.",
            "VernacStartTheoremProof",
            "ac00c4874b0e5b617f5ff107580be4730c584955"
        ],
        [
            "unfold singleton; simpl; split; intros; inv; auto.",
            "VernacExtend",
            "198bfa138e6272ff883f00a8193ea291b5780185"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac induction2 := simple induction s; [ simpl; auto; try solve [ intros; inv ] | intros x l Hrec; simple induction s'; [ simpl; auto; try solve [ intros; inv ] | intros x' l' Hrec'; simpl; elim_compare x x'; intros; inv; auto ]].",
            "VernacExtend",
            "00b180659bb35446c43ca38d80520ba0e3ef7304"
        ],
        [
            "Lemma union_inf : forall (s s' : t) (a : elt) (Hs : Ok s) (Hs' : Ok s'), Inf a s -> Inf a s' -> Inf a (union s s').",
            "VernacStartTheoremProof",
            "4c44099fa87a87c198cfef92c0e384dd78149280"
        ],
        [
            "induction2.",
            "VernacExtend",
            "7b0e5ad429ba775174c24afbf8e638ae4876ad19"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve union_inf.",
            "VernacHints",
            "5166a4cf5290b6e7fb279ddffb08cf9243e74ba8"
        ],
        [
            "Global Instance union_ok s s' : forall `(Ok s, Ok s'), Ok (union s s').",
            "VernacInstance",
            "41ededb0966e808ebe0f68869b9d42f669f2d609"
        ],
        [
            "repeat rewrite <- isok_iff; revert s s'.",
            "VernacExtend",
            "1f98221bdd911f5ad78b2961616adbcc71ad9256"
        ],
        [
            "induction2; constructors; try apply @ok; auto.",
            "VernacExtend",
            "58237df35f508b1582fd14f12e359dbc6afa8c69"
        ],
        [
            "apply Inf_eq with x'; auto; apply union_inf; auto; apply Inf_eq with x; auto; order.",
            "VernacExtend",
            "80ecab859821e0a78830ff2c7cc0b686e3d7ec2f"
        ],
        [
            "change (Inf x' (union (x :: l) l')); auto.",
            "VernacExtend",
            "da787ec616e8d8f3063c61cc70956625b5bdb25b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma union_spec : forall (s s' : t) (x : elt) (Hs : Ok s) (Hs' : Ok s'), In x (union s s') <-> In x s \\/ In x s'.",
            "VernacStartTheoremProof",
            "fb0c74c20b17ed03beaf4a4d443e19dde09e7f2b"
        ],
        [
            "induction2; try rewrite ?InA_cons, ?Hrec, ?Hrec'; intuition; inv; auto.",
            "VernacExtend",
            "48f694a4bd7418862bf1479533ec5d36f2d7bc10"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_inf : forall (s s' : t) (a : elt) (Hs : Ok s) (Hs' : Ok s'), Inf a s -> Inf a s' -> Inf a (inter s s').",
            "VernacStartTheoremProof",
            "1e3d732c90949a4a58a48d9ca4fa863322cfeb42"
        ],
        [
            "induction2.",
            "VernacExtend",
            "7b0e5ad429ba775174c24afbf8e638ae4876ad19"
        ],
        [
            "apply Inf_lt with x; auto.",
            "VernacExtend",
            "15ccda9e09d7077ece40934b354efe644bc3562f"
        ],
        [
            "apply Hrec'; auto.",
            "VernacExtend",
            "34c07d78afa18b918467a2a70331dc79bfcd97b5"
        ],
        [
            "apply Inf_lt with x'; auto.",
            "VernacExtend",
            "fccd36a90eebda70aa03e0b95a8b4630d660ab70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve inter_inf.",
            "VernacHints",
            "d63ea899754048520f040a547268c27d8d768cd7"
        ],
        [
            "Global Instance inter_ok s s' : forall `(Ok s, Ok s'), Ok (inter s s').",
            "VernacInstance",
            "588ce4b2ec3d8a3e67f3fe0595f26c403bb8cdcb"
        ],
        [
            "repeat rewrite <- isok_iff; revert s s'.",
            "VernacExtend",
            "1f98221bdd911f5ad78b2961616adbcc71ad9256"
        ],
        [
            "induction2.",
            "VernacExtend",
            "7b0e5ad429ba775174c24afbf8e638ae4876ad19"
        ],
        [
            "constructors; auto.",
            "VernacExtend",
            "46e376bf85e5bdbc0f1658eb4c6ac7793dcd6a18"
        ],
        [
            "apply Inf_eq with x'; auto; apply inter_inf; auto; apply Inf_eq with x; auto.",
            "VernacExtend",
            "240f32188e0346e394c5722d093c91a055167608"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inter_spec : forall (s s' : t) (x : elt) (Hs : Ok s) (Hs' : Ok s'), In x (inter s s') <-> In x s /\\ In x s'.",
            "VernacStartTheoremProof",
            "a2ed898f5e5cbed0265fdab955a819f8d757b7ee"
        ],
        [
            "induction2; try rewrite ?InA_cons, ?Hrec, ?Hrec'; intuition; inv; auto; try sort_inf_in; try order.",
            "VernacExtend",
            "30bb894ac01eb7a45f678b5403dcd35dd6cb9152"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_inf : forall (s s' : t) (Hs : Ok s) (Hs' : Ok s') (a : elt), Inf a s -> Inf a s' -> Inf a (diff s s').",
            "VernacStartTheoremProof",
            "c6236b39943ad4959a5a4389d2e5a7041ba57613"
        ],
        [
            "intros s s'; repeat rewrite <- isok_iff; revert s s'.",
            "VernacExtend",
            "62e0519a8ccd93f613889340ee7650a6e76530c4"
        ],
        [
            "induction2.",
            "VernacExtend",
            "7b0e5ad429ba775174c24afbf8e638ae4876ad19"
        ],
        [
            "apply Hrec; trivial.",
            "VernacExtend",
            "2e85843eba6bc911b4630b27e30c911e3442dd3a"
        ],
        [
            "apply Inf_lt with x; auto.",
            "VernacExtend",
            "15ccda9e09d7077ece40934b354efe644bc3562f"
        ],
        [
            "apply Inf_lt with x'; auto.",
            "VernacExtend",
            "fccd36a90eebda70aa03e0b95a8b4630d660ab70"
        ],
        [
            "apply Hrec'; auto.",
            "VernacExtend",
            "34c07d78afa18b918467a2a70331dc79bfcd97b5"
        ],
        [
            "apply Inf_lt with x'; auto.",
            "VernacExtend",
            "fccd36a90eebda70aa03e0b95a8b4630d660ab70"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve diff_inf.",
            "VernacHints",
            "d8c515ad547583e2111d927403612f829746f67f"
        ],
        [
            "Global Instance diff_ok s s' : forall `(Ok s, Ok s'), Ok (diff s s').",
            "VernacInstance",
            "efd6c56eab1d36f656c912a9ff7db48fd54c3367"
        ],
        [
            "repeat rewrite <- isok_iff; revert s s'.",
            "VernacExtend",
            "1f98221bdd911f5ad78b2961616adbcc71ad9256"
        ],
        [
            "induction2.",
            "VernacExtend",
            "7b0e5ad429ba775174c24afbf8e638ae4876ad19"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_spec : forall (s s' : t) (x : elt) (Hs : Ok s) (Hs' : Ok s'), In x (diff s s') <-> In x s /\\ ~In x s'.",
            "VernacStartTheoremProof",
            "1aceb5907ecb8adf635b8505c803da631e441d35"
        ],
        [
            "induction2; try rewrite ?InA_cons, ?Hrec, ?Hrec'; intuition; inv; auto; try sort_inf_in; try order.",
            "VernacExtend",
            "30bb894ac01eb7a45f678b5403dcd35dd6cb9152"
        ],
        [
            "right; intuition; inv; auto.",
            "VernacExtend",
            "13372ceff3445c3a8e1b528f7cd1bf7823a68607"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_spec : forall (s s' : t) (Hs : Ok s) (Hs' : Ok s'), equal s s' = true <-> Equal s s'.",
            "VernacStartTheoremProof",
            "21391633ff0b567b46cc2c547bf428f397cd17de"
        ],
        [
            "induction s as [ | x s IH]; intros [ | x' s'] Hs Hs'; simpl.",
            "VernacExtend",
            "c9e02582eabca911e826aab62fa6f052c28f72af"
        ],
        [
            "intuition reflexivity.",
            "VernacExtend",
            "8bf1b2c156e37bd9da7286e7674c0af33cdf6552"
        ],
        [
            "split; intros H.",
            "VernacExtend",
            "a22fcc98cae3c9e7feb477b9e8b0236d37ea8d65"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "assert (In x' nil) by (rewrite H; auto).",
            "VernacExtend",
            "3c1954fca2d3a4ef4e82eae5be3acf967740043b"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "split; intros H.",
            "VernacExtend",
            "a22fcc98cae3c9e7feb477b9e8b0236d37ea8d65"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "assert (In x nil) by (rewrite <-H; auto).",
            "VernacExtend",
            "674e2b7f1d85815f8936900967b58736d5e9ae2a"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "elim_compare x x' as C; try discriminate.",
            "VernacExtend",
            "391359533e5e980a39814518483d81bbcd2f9755"
        ],
        [
            "rewrite IH; auto.",
            "VernacExtend",
            "e446d61fab29de5c06ade533575e5b57264728f1"
        ],
        [
            "split; intros E y; specialize (E y).",
            "VernacExtend",
            "38d247cb1f24c0f1a38c372b58967d2ae348f64c"
        ],
        [
            "rewrite !InA_cons, E, C; intuition.",
            "VernacExtend",
            "a65f009646d10177723c26e60fa86f131d3bfce4"
        ],
        [
            "rewrite !InA_cons, C in E.",
            "VernacExtend",
            "651d9f30164eb1840e603ba59b07012e1ef24aef"
        ],
        [
            "intuition; try sort_inf_in; order.",
            "VernacExtend",
            "3dc5dd780982156afc392452d214ae8127277783"
        ],
        [
            "split; intros E.",
            "VernacExtend",
            "09f9c984816ae9d64d07261aa98f7c5b5fb61100"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "assert (In x (x'::s')) by (rewrite <- E; auto).",
            "VernacExtend",
            "47a8f72dd86eecc5b03a3623d3900bd75a43b179"
        ],
        [
            "inv; try sort_inf_in; order.",
            "VernacExtend",
            "8c3031d57d4241ed3ab868ecf5639c8665667512"
        ],
        [
            "split; intros E.",
            "VernacExtend",
            "09f9c984816ae9d64d07261aa98f7c5b5fb61100"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "assert (In x' (x::s)) by (rewrite E; auto).",
            "VernacExtend",
            "91d2e02c8a1b889546c41a34d4519c61e58fdb2f"
        ],
        [
            "inv; try sort_inf_in; order.",
            "VernacExtend",
            "8c3031d57d4241ed3ab868ecf5639c8665667512"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_spec : forall (s s' : t) (Hs : Ok s) (Hs' : Ok s'), subset s s' = true <-> Subset s s'.",
            "VernacStartTheoremProof",
            "1afb6203075394c4d54b61d1ea5ba0efb7c4150b"
        ],
        [
            "intros s s'; revert s.",
            "VernacExtend",
            "5d194b343fb39dff14705ed707bf306e31d88962"
        ],
        [
            "induction s' as [ | x' s' IH]; intros [ | x s] Hs Hs'; simpl; auto.",
            "VernacExtend",
            "7fcd9653fc259b2299babc2c36f1feb0d3ab59a1"
        ],
        [
            "split; try red; intros; auto.",
            "VernacExtend",
            "191156738a4730b8ca1fedd0753ae2fbcdddb81e"
        ],
        [
            "split; intros H.",
            "VernacExtend",
            "a22fcc98cae3c9e7feb477b9e8b0236d37ea8d65"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "assert (In x nil) by (apply H; auto).",
            "VernacExtend",
            "fcffa00cbe119f58941dcdd3f06933352b1366e8"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "split; try red; intros; auto.",
            "VernacExtend",
            "191156738a4730b8ca1fedd0753ae2fbcdddb81e"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "elim_compare x x' as C.",
            "VernacExtend",
            "848ffc10674d296170678f9654f17c952b93b6c3"
        ],
        [
            "rewrite IH; auto.",
            "VernacExtend",
            "e446d61fab29de5c06ade533575e5b57264728f1"
        ],
        [
            "split; intros S y; specialize (S y).",
            "VernacExtend",
            "0bd75b9c54ec37e8826f45a1fd73e1e8eb9074e8"
        ],
        [
            "rewrite !InA_cons, C.",
            "VernacExtend",
            "039dbaa82f3e2731d1ef7b31d2e32af5680bfe3c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "rewrite !InA_cons, C in S.",
            "VernacExtend",
            "414cb52aea5abae10a1fbd452b7959a8ab414ca4"
        ],
        [
            "intuition; try sort_inf_in; order.",
            "VernacExtend",
            "3dc5dd780982156afc392452d214ae8127277783"
        ],
        [
            "split; intros S.",
            "VernacExtend",
            "eae48093e8fc7c09d5f9f57d08979c3328d78ec8"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "assert (In x (x'::s')) by (apply S; auto).",
            "VernacExtend",
            "ad3b533b2a3954ee2631ea926d78b888b44ffe30"
        ],
        [
            "inv; try sort_inf_in; order.",
            "VernacExtend",
            "8c3031d57d4241ed3ab868ecf5639c8665667512"
        ],
        [
            "rewrite IH; auto.",
            "VernacExtend",
            "e446d61fab29de5c06ade533575e5b57264728f1"
        ],
        [
            "split; intros S y; specialize (S y).",
            "VernacExtend",
            "0bd75b9c54ec37e8826f45a1fd73e1e8eb9074e8"
        ],
        [
            "rewrite !InA_cons.",
            "VernacExtend",
            "b6b08f8dcb994fa26c5e4868778e410542c683ac"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "rewrite !InA_cons in S.",
            "VernacExtend",
            "e925902310c13e52dd95d1aeeb8c6e9aed01bdae"
        ],
        [
            "rewrite !InA_cons.",
            "VernacExtend",
            "b6b08f8dcb994fa26c5e4868778e410542c683ac"
        ],
        [
            "intuition; try sort_inf_in; order.",
            "VernacExtend",
            "3dc5dd780982156afc392452d214ae8127277783"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance empty_ok : Ok empty.",
            "VernacInstance",
            "3509663f2cf944f1eaa59709a78363999e92ce5f"
        ],
        [
            "constructors.",
            "VernacExtend",
            "c523d5ea5e149bc7787b1e5910d8d403274da1d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_spec : Empty empty.",
            "VernacStartTheoremProof",
            "ac5b3ce6175ebcbfcc02350712ac2ce9336054ff"
        ],
        [
            "unfold Empty, empty; intuition; inv.",
            "VernacExtend",
            "fec8a225649b9ab6bf4cc8263d6f9a001c78f784"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_empty_spec : forall s : t, is_empty s = true <-> Empty s.",
            "VernacStartTheoremProof",
            "dba576b8ca4d3ba535c16a2016964a54b4727877"
        ],
        [
            "intros [ | x s]; simpl.",
            "VernacExtend",
            "0cd0bf4dfc5af2b543e828e0bab95e8d988c8e62"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "intros _ x H.",
            "VernacExtend",
            "e14d7147a69a993c05f8498dee3df428f7af9b69"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "elim (H x); auto.",
            "VernacExtend",
            "5ccf661181acccf71586c2921eefa3182a6103e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_spec1 : forall (s : t) (x : elt), In x (elements s) <-> In x s.",
            "VernacStartTheoremProof",
            "512ffc9cbfa2ab8c5ad167f621d2a89b3d980906"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_spec2 : forall (s : t) (Hs : Ok s), sort X.lt (elements s).",
            "VernacStartTheoremProof",
            "98b0bf0588514abc5559ae3617d443ab173d845b"
        ],
        [
            "intro s; repeat rewrite <- isok_iff; auto.",
            "VernacExtend",
            "e719e519d24cfceb68665586f673ad687ae3ed7f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_spec2w : forall (s : t) (Hs : Ok s), NoDupA X.eq (elements s).",
            "VernacStartTheoremProof",
            "d63df9b57e0e4eeb103554caaeb6c2152cebd417"
        ],
        [
            "intro s; repeat rewrite <- isok_iff; auto.",
            "VernacExtend",
            "e719e519d24cfceb68665586f673ad687ae3ed7f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_elt_spec1 : forall (s : t) (x : elt), min_elt s = Some x -> In x s.",
            "VernacStartTheoremProof",
            "66e700a73aecb7b1ef30b8b3406e84fee0655824"
        ],
        [
            "destruct s; simpl; inversion 1; auto.",
            "VernacExtend",
            "9dc01cd554d17ddcd19671e1ffb7bb788d315257"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_elt_spec2 : forall (s : t) (x y : elt) (Hs : Ok s), min_elt s = Some x -> In y s -> ~ X.lt y x.",
            "VernacStartTheoremProof",
            "ec52ebedf18bf8d1926ce7df8d6a6ba317d3034e"
        ],
        [
            "induction s as [ | x s IH]; simpl; inversion 2; subst.",
            "VernacExtend",
            "de8278e5358df3cb2dbc1187063ea12f2888779e"
        ],
        [
            "intros; inv; try sort_inf_in; order.",
            "VernacExtend",
            "d2ae80ce57f6d8cd27d0217abfa041fc27907b20"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_elt_spec3 : forall s : t, min_elt s = None -> Empty s.",
            "VernacStartTheoremProof",
            "69ec713946a5ecc95bc6ce2e339499d0a6af1501"
        ],
        [
            "destruct s; simpl; red; intuition.",
            "VernacExtend",
            "0c3ddf09cd39fb62f551cd49ec3b3de79b87a432"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_elt_spec1 : forall (s : t) (x : elt), max_elt s = Some x -> In x s.",
            "VernacStartTheoremProof",
            "24028ea5aad6b0d936a6a06c071fe94dc7137b59"
        ],
        [
            "induction s as [ | x s IH].",
            "VernacExtend",
            "75028d0c728d1686fa43a206d8e54fa66967a09d"
        ],
        [
            "inversion 1.",
            "VernacExtend",
            "9152817da0dc28ba4701e3ff01c293af28a1059f"
        ],
        [
            "destruct s as [ | y s].",
            "VernacExtend",
            "85fc4ba950416b29914f29d3dc85b1efdeb6a0c0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "inversion 1; subst; auto.",
            "VernacExtend",
            "45c20932200d3232a588bb8a2bbd06f04487daa8"
        ],
        [
            "right; apply IH; auto.",
            "VernacExtend",
            "5f1bcbb22773a24038a0ae065af0df8e6bde413b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_elt_spec2 : forall (s : t) (x y : elt) (Hs : Ok s), max_elt s = Some x -> In y s -> ~ X.lt x y.",
            "VernacStartTheoremProof",
            "75106a9274c0a41928027fb2c955148facf1c9c6"
        ],
        [
            "induction s as [ | a s IH].",
            "VernacExtend",
            "daaa408c1057cc39c280bf156d9091ded522e339"
        ],
        [
            "inversion 2.",
            "VernacExtend",
            "9b1e056b41fea71e2db9d8977c86e79e382f15d7"
        ],
        [
            "destruct s as [ | b s].",
            "VernacExtend",
            "daefb02e8b24df1fe1b2badbe1619b2daf142be2"
        ],
        [
            "inversion 2; subst.",
            "VernacExtend",
            "9433bc96c9f16b5ca729d0e905a252da14503d02"
        ],
        [
            "intros; inv; order.",
            "VernacExtend",
            "95d709631574c0b351443d685ee29784efef9b91"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inv; auto.",
            "VernacExtend",
            "1e09fea56c964df79eb372d6433eec3b5c88882b"
        ],
        [
            "assert (~X.lt x b) by (apply IH; auto).",
            "VernacExtend",
            "b0aa562b82e2ce6fcde548747ea8b1289af57322"
        ],
        [
            "assert (X.lt a b) by auto.",
            "VernacExtend",
            "031a1e44a74cc91827569745667ee3e1f6b5f575"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_elt_spec3 : forall s : t, max_elt s = None -> Empty s.",
            "VernacStartTheoremProof",
            "02525df14c7e5ddc468f76d7e7b42f1aeb19e886"
        ],
        [
            "induction s as [ | a s IH].",
            "VernacExtend",
            "daaa408c1057cc39c280bf156d9091ded522e339"
        ],
        [
            "red; intuition; inv.",
            "VernacExtend",
            "93f4de3e33b344b43766103eaa5554d2430f1a92"
        ],
        [
            "destruct s as [ | b s].",
            "VernacExtend",
            "daefb02e8b24df1fe1b2badbe1619b2daf142be2"
        ],
        [
            "inversion 1.",
            "VernacExtend",
            "9152817da0dc28ba4701e3ff01c293af28a1059f"
        ],
        [
            "intros; elim IH with b; auto.",
            "VernacExtend",
            "2c543e8e683bd25524e7927aea7b1c5b1973b5bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition choose_spec1 : forall (s : t) (x : elt), choose s = Some x -> In x s := min_elt_spec1.",
            "VernacDefinition",
            "8aa4972cf6c38ffa875ae564263522bd0f057419"
        ],
        [
            "Definition choose_spec2 : forall s : t, choose s = None -> Empty s := min_elt_spec3.",
            "VernacDefinition",
            "283235c3ca1753af9fb40d1d7a0cbb17491821c1"
        ],
        [
            "Lemma choose_spec3: forall s s' x x', Ok s -> Ok s' -> choose s = Some x -> choose s' = Some x' -> Equal s s' -> X.eq x x'.",
            "VernacStartTheoremProof",
            "73ba7f15eba4cfd572a3273755198d8898bdde4b"
        ],
        [
            "unfold choose; intros s s' x x' Hs Hs' Hx Hx' H.",
            "VernacExtend",
            "d11b61aa9a03ebbf60cde1441d7d9f8c4068cc3a"
        ],
        [
            "assert (~X.lt x x').",
            "VernacExtend",
            "c2a74b7e5e3f98c1382bb63f8d6def36f1d38866"
        ],
        [
            "apply min_elt_spec2 with s'; auto.",
            "VernacExtend",
            "3940e91715bb20bc73465f9772e6583ba6fa2c48"
        ],
        [
            "rewrite <-H; auto using min_elt_spec1.",
            "VernacExtend",
            "31c2734daa91f402372d556cd3e109d9c9a90477"
        ],
        [
            "assert (~X.lt x' x).",
            "VernacExtend",
            "0136b268cb8797d5245a09fe48ece6ce357dd3e2"
        ],
        [
            "apply min_elt_spec2 with s; auto.",
            "VernacExtend",
            "38c55a4a2b826b4539ceddb3af9678c8460624a2"
        ],
        [
            "rewrite H; auto using min_elt_spec1.",
            "VernacExtend",
            "d25afb4d27790f65e1db828c2249c8b071066179"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_spec : forall (s : t) (A : Type) (i : A) (f : elt -> A -> A), fold f s i = fold_left (flip f) (elements s) i.",
            "VernacStartTheoremProof",
            "b81ebf517fe81fe4b78aaac58243d7f8f057c879"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_spec : forall (s : t) (Hs : Ok s), cardinal s = length (elements s).",
            "VernacStartTheoremProof",
            "acf31975f8fd162e50c9dab425f4f3a7b3fdca1b"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_inf : forall (s : t) (x : elt) (f : elt -> bool) (Hs : Ok s), Inf x s -> Inf x (filter f s).",
            "VernacStartTheoremProof",
            "c78b14ad258b6bfccd67f3f844f6b1fbe886e4c6"
        ],
        [
            "simple induction s; simpl.",
            "VernacExtend",
            "298231545dccccc350ebcbfa56e333c5f5186a1c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intros x l Hrec a f Hs Ha; inv.",
            "VernacExtend",
            "c5d1a1d143476ce11508967fdb35e9fe83bb02d3"
        ],
        [
            "case (f x); auto.",
            "VernacExtend",
            "e9419ac23e8cfce97043ae75e3963f8e963f0707"
        ],
        [
            "apply Hrec; auto.",
            "VernacExtend",
            "8377c8eca8e58ba4bb4b372c0ba32d47e4a00f4f"
        ],
        [
            "apply Inf_lt with x; auto.",
            "VernacExtend",
            "15ccda9e09d7077ece40934b354efe644bc3562f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance filter_ok s f : forall `(Ok s), Ok (filter f s).",
            "VernacInstance",
            "a51866efc96a27b6b1fb192005c4f52e6ea9f171"
        ],
        [
            "repeat rewrite <- isok_iff; revert s f.",
            "VernacExtend",
            "b306bc38866e60551ef1266057268442b06b3e90"
        ],
        [
            "simple induction s; simpl.",
            "VernacExtend",
            "298231545dccccc350ebcbfa56e333c5f5186a1c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros x l Hrec f Hs; inv.",
            "VernacExtend",
            "c87f86a3d60a4b6401c20de67bb7bea5b6b29349"
        ],
        [
            "case (f x); auto.",
            "VernacExtend",
            "e9419ac23e8cfce97043ae75e3963f8e963f0707"
        ],
        [
            "constructors; auto.",
            "VernacExtend",
            "46e376bf85e5bdbc0f1658eb4c6ac7793dcd6a18"
        ],
        [
            "apply filter_inf; auto.",
            "VernacExtend",
            "12d354e9c1486b926ad476120bfebb7df2d70507"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma filter_spec : forall (s : t) (x : elt) (f : elt -> bool), Proper (X.eq==>eq) f -> (In x (filter f s) <-> In x s /\\ f x = true).",
            "VernacStartTheoremProof",
            "01de1fc905c1e3b9d75b111ae31744a39dca5c74"
        ],
        [
            "induction s; simpl; intros.",
            "VernacExtend",
            "55d762fdba50b27f8695d733d2857ceea86abd6f"
        ],
        [
            "split; intuition; inv.",
            "VernacExtend",
            "b90eace4da5750db2e24db8d6aa6888b77c7eafd"
        ],
        [
            "destruct (f a) eqn:F; rewrite !InA_cons, ?IHs; intuition.",
            "VernacExtend",
            "c85484bdfebdde425cb30a5970dd725637692f67"
        ],
        [
            "setoid_replace x with a; auto.",
            "VernacExtend",
            "83ed7f7d976518caeb5b8a08018f847df8461e5a"
        ],
        [
            "setoid_replace a with x in F; auto; congruence.",
            "VernacExtend",
            "d80c0cb8192f948ca50009c0f76f83fd9ca65fa2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma for_all_spec : forall (s : t) (f : elt -> bool), Proper (X.eq==>eq) f -> (for_all f s = true <-> For_all (fun x => f x = true) s).",
            "VernacStartTheoremProof",
            "2ec07c8c8de1f8c83597273245ec6bf518b11283"
        ],
        [
            "unfold For_all; induction s; simpl; intros.",
            "VernacExtend",
            "8c54c01b3bad686667c2f9cd94dbd2ecc9a7df9e"
        ],
        [
            "split; intros; auto.",
            "VernacExtend",
            "717387d631b429238a3e5b8297a6cfab3f273dd4"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "destruct (f a) eqn:F.",
            "VernacExtend",
            "668a110fa716d9e825b82165fc0cff88b623fd4f"
        ],
        [
            "rewrite IHs; auto.",
            "VernacExtend",
            "307f7fbc326db99b76199a012fca963fd61b181a"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "inv; auto.",
            "VernacExtend",
            "1e09fea56c964df79eb372d6433eec3b5c88882b"
        ],
        [
            "setoid_replace x with a; auto.",
            "VernacExtend",
            "83ed7f7d976518caeb5b8a08018f847df8461e5a"
        ],
        [
            "split; intros H'.",
            "VernacExtend",
            "010c3ee581698c43c620d139c469a2325e8ff08c"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "rewrite H' in F; auto.",
            "VernacExtend",
            "c20a4ffcebabb7b9293d7d851217ab0b87ff2aa0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_spec : forall (s : t) (f : elt -> bool), Proper (X.eq==>eq) f -> (exists_ f s = true <-> Exists (fun x => f x = true) s).",
            "VernacStartTheoremProof",
            "7f71975442e7d2b367ce9eb7b4f42d0768d732db"
        ],
        [
            "unfold Exists; induction s; simpl; intros.",
            "VernacExtend",
            "328b9a683ded1c2b609ee1aa6890e516a40d3053"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "destruct (f a) eqn:F.",
            "VernacExtend",
            "668a110fa716d9e825b82165fc0cff88b623fd4f"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "rewrite IHs; auto.",
            "VernacExtend",
            "307f7fbc326db99b76199a012fca963fd61b181a"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "setoid_replace a with x in F; auto; congruence.",
            "VernacExtend",
            "d80c0cb8192f948ca50009c0f76f83fd9ca65fa2"
        ],
        [
            "exists x; auto.",
            "VernacExtend",
            "d8b3edd09d34953d83a4fbc6350c30f804073b09"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_inf1 : forall (s : t) (f : elt -> bool) (x : elt) (Hs : Ok s), Inf x s -> Inf x (fst (partition f s)).",
            "VernacStartTheoremProof",
            "acad03178a36f57be59b9484f769bdc7aae4b9df"
        ],
        [
            "intros s f x; repeat rewrite <- isok_iff; revert s f x.",
            "VernacExtend",
            "1753837d0fa5f2953cbbcc400e2e4d397ea4ff95"
        ],
        [
            "simple induction s; simpl.",
            "VernacExtend",
            "298231545dccccc350ebcbfa56e333c5f5186a1c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intros x l Hrec f a Hs Ha; inv.",
            "VernacExtend",
            "2c2771997715b44e5916bc9f9ffb06aeda825490"
        ],
        [
            "generalize (Hrec f a H).",
            "VernacExtend",
            "42a2a31c35a5224dc7e644a2037503a82604b66e"
        ],
        [
            "case (f x); case (partition f l); simpl.",
            "VernacExtend",
            "8263e82d8bb073a93e51183d609338d5ad3df7f8"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros; apply H2; apply Inf_lt with x; auto.",
            "VernacExtend",
            "ad81f032bd5ef7be59a92876e7ef6f0889d117da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_inf2 : forall (s : t) (f : elt -> bool) (x : elt) (Hs : Ok s), Inf x s -> Inf x (snd (partition f s)).",
            "VernacStartTheoremProof",
            "441e6cd8da7f868d771d2ff1e4b3aada2bcdcc7e"
        ],
        [
            "intros s f x; repeat rewrite <- isok_iff; revert s f x.",
            "VernacExtend",
            "1753837d0fa5f2953cbbcc400e2e4d397ea4ff95"
        ],
        [
            "simple induction s; simpl.",
            "VernacExtend",
            "298231545dccccc350ebcbfa56e333c5f5186a1c"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intros x l Hrec f a Hs Ha; inv.",
            "VernacExtend",
            "2c2771997715b44e5916bc9f9ffb06aeda825490"
        ],
        [
            "generalize (Hrec f a H).",
            "VernacExtend",
            "42a2a31c35a5224dc7e644a2037503a82604b66e"
        ],
        [
            "case (f x); case (partition f l); simpl.",
            "VernacExtend",
            "8263e82d8bb073a93e51183d609338d5ad3df7f8"
        ],
        [
            "intros; apply H2; apply Inf_lt with x; auto.",
            "VernacExtend",
            "ad81f032bd5ef7be59a92876e7ef6f0889d117da"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance partition_ok1 s f : forall `(Ok s), Ok (fst (partition f s)).",
            "VernacInstance",
            "0c5687f58e6cb3f4be31013999fc1a122aeadb29"
        ],
        [
            "repeat rewrite <- isok_iff; revert s f.",
            "VernacExtend",
            "b306bc38866e60551ef1266057268442b06b3e90"
        ],
        [
            "simple induction s; simpl.",
            "VernacExtend",
            "298231545dccccc350ebcbfa56e333c5f5186a1c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros x l Hrec f Hs; inv.",
            "VernacExtend",
            "c87f86a3d60a4b6401c20de67bb7bea5b6b29349"
        ],
        [
            "generalize (Hrec f H); generalize (@partition_inf1 l f x).",
            "VernacExtend",
            "d124504a6eae024883899a94947ccbd2a4946825"
        ],
        [
            "case (f x); case (partition f l); simpl; auto.",
            "VernacExtend",
            "afa7dc09995ff552d49459f841838b5c7c5d683e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance partition_ok2 s f : forall `(Ok s), Ok (snd (partition f s)).",
            "VernacInstance",
            "c30cf0d9d94a2ba69455da7d3d9329e82c3882d2"
        ],
        [
            "repeat rewrite <- isok_iff; revert s f.",
            "VernacExtend",
            "b306bc38866e60551ef1266057268442b06b3e90"
        ],
        [
            "simple induction s; simpl.",
            "VernacExtend",
            "298231545dccccc350ebcbfa56e333c5f5186a1c"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros x l Hrec f Hs; inv.",
            "VernacExtend",
            "c87f86a3d60a4b6401c20de67bb7bea5b6b29349"
        ],
        [
            "generalize (Hrec f H); generalize (@partition_inf2 l f x).",
            "VernacExtend",
            "70e6c272955db54555c29adc546ff6b9f2ad6d1d"
        ],
        [
            "case (f x); case (partition f l); simpl; auto.",
            "VernacExtend",
            "afa7dc09995ff552d49459f841838b5c7c5d683e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_spec1 : forall (s : t) (f : elt -> bool), Proper (X.eq==>eq) f -> Equal (fst (partition f s)) (filter f s).",
            "VernacStartTheoremProof",
            "3ec746f3d27c2af53732412020bbe334004fbd32"
        ],
        [
            "simple induction s; simpl; auto; unfold Equal.",
            "VernacExtend",
            "1ed6bbbcc6f9fa6fb7716f9c658944c6c3695e6a"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "intros x l Hrec f Hf.",
            "VernacExtend",
            "640ae8ab1dfdbf81b41c8dd0d01ed8619b9c9e63"
        ],
        [
            "generalize (Hrec f Hf); clear Hrec.",
            "VernacExtend",
            "edfbf7f56b4294ba552184fe7e871c7f3312210d"
        ],
        [
            "destruct (partition f l) as [s1 s2]; simpl; intros.",
            "VernacExtend",
            "cca8d466cee90e50011741a50e76fc9d22c46033"
        ],
        [
            "case (f x); simpl; auto.",
            "VernacExtend",
            "3274f77a1c0db6c5b7c60fabc30a88196a7ac643"
        ],
        [
            "split; inversion_clear 1; auto.",
            "VernacExtend",
            "4830b4d5012f508202936f3325fc7cc871b0bb11"
        ],
        [
            "constructor 2; rewrite <- H; auto.",
            "VernacExtend",
            "0a97c7145d4f363dabff8a2143af46aae5665e87"
        ],
        [
            "constructor 2; rewrite H; auto.",
            "VernacExtend",
            "108ab0788ffb9db8b0784b16d052e3455cc68fcf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_spec2 : forall (s : t) (f : elt -> bool), Proper (X.eq==>eq) f -> Equal (snd (partition f s)) (filter (fun x => negb (f x)) s).",
            "VernacStartTheoremProof",
            "b7a437255a3f57f05e486aada9b9f8ae1ccc9e81"
        ],
        [
            "simple induction s; simpl; auto; unfold Equal.",
            "VernacExtend",
            "1ed6bbbcc6f9fa6fb7716f9c658944c6c3695e6a"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "intros x l Hrec f Hf.",
            "VernacExtend",
            "640ae8ab1dfdbf81b41c8dd0d01ed8619b9c9e63"
        ],
        [
            "generalize (Hrec f Hf); clear Hrec.",
            "VernacExtend",
            "edfbf7f56b4294ba552184fe7e871c7f3312210d"
        ],
        [
            "destruct (partition f l) as [s1 s2]; simpl; intros.",
            "VernacExtend",
            "cca8d466cee90e50011741a50e76fc9d22c46033"
        ],
        [
            "case (f x); simpl; auto.",
            "VernacExtend",
            "3274f77a1c0db6c5b7c60fabc30a88196a7ac643"
        ],
        [
            "split; inversion_clear 1; auto.",
            "VernacExtend",
            "4830b4d5012f508202936f3325fc7cc871b0bb11"
        ],
        [
            "constructor 2; rewrite <- H; auto.",
            "VernacExtend",
            "0a97c7145d4f363dabff8a2143af46aae5665e87"
        ],
        [
            "constructor 2; rewrite H; auto.",
            "VernacExtend",
            "108ab0788ffb9db8b0784b16d052e3455cc68fcf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ForNotations.",
            "VernacEndSegment",
            "080e55a1ea4a64d50c08a386c0bc0ed6e1ae5ec6"
        ],
        [
            "Definition In := InA X.eq.",
            "VernacDefinition",
            "31ebdd7d00e827d19e36c6a5ae0f5c1955181357"
        ],
        [
            "Instance In_compat : Proper (X.eq==>eq==> iff) In.",
            "VernacInstance",
            "25919befefcff78b9df06790e76dd191413a42b3"
        ],
        [
            "repeat red; intros; rewrite H, H0; auto.",
            "VernacExtend",
            "8cee77020381c3970c5a4c91b44fe8a09759a168"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Module L := MakeListOrdering X.",
            "VernacDefineModule",
            "7d9398d7481d484f94dec0446c4c8914bc441fce"
        ],
        [
            "Definition eq := L.eq.",
            "VernacDefinition",
            "1b49a7af91adbf961413e21fa6ae4079ffffdd2d"
        ],
        [
            "Definition eq_equiv := L.eq_equiv.",
            "VernacDefinition",
            "00ed61e3a57227f3546e0f5a467ab3581bc844a4"
        ],
        [
            "Definition lt l1 l2 := exists l1' l2', Ok l1' /\\ Ok l2' /\\ eq l1 l1' /\\ eq l2 l2' /\\ L.lt l1' l2'.",
            "VernacDefinition",
            "fdd4d1f31009c57b74af82539d1a39acca7a901a"
        ],
        [
            "Instance lt_strorder : StrictOrder lt.",
            "VernacInstance",
            "fa189ac61b1474957ad71f3e51fbb244abde9f22"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros s (s1 & s2 & B1 & B2 & E1 & E2 & L).",
            "VernacExtend",
            "4a228519706bb6ce472ad5233e0048a77263e4ec"
        ],
        [
            "repeat rewrite <- isok_iff in *.",
            "VernacExtend",
            "ba052d362138de99b60fd807184417391e2f1928"
        ],
        [
            "assert (eqlistA X.eq s1 s2).",
            "VernacExtend",
            "c2154cf7f274ac1dc3ae3412087b9f85a3cc2005"
        ],
        [
            "apply SortA_equivlistA_eqlistA with (ltA:=X.lt); auto using @ok with *.",
            "VernacExtend",
            "c30d08d2ca8bb1a80facca8c2ca5f1d862ac7046"
        ],
        [
            "transitivity s; auto.",
            "VernacExtend",
            "6ebf414dce7764edd4b133af8589d25f7a3dc6a2"
        ],
        [
            "symmetry; auto.",
            "VernacExtend",
            "72331728cf41281b1b06fee3e3b5ef380ea044a9"
        ],
        [
            "rewrite H in L.",
            "VernacExtend",
            "262ee5cbccd2e64d5bb7d7fd876a4e766948f0b1"
        ],
        [
            "apply (StrictOrder_Irreflexive s2); auto.",
            "VernacExtend",
            "102f5390a0529cfa2b9f3581cde5963ca3737daf"
        ],
        [
            "intros s1 s2 s3 (s1' & s2' & B1 & B2 & E1 & E2 & L12) (s2'' & s3' & B2' & B3 & E2' & E3 & L23).",
            "VernacExtend",
            "9078959d340d7de0d2dc0b5803d9946e95b9c6f6"
        ],
        [
            "exists s1', s3'.",
            "VernacExtend",
            "0b5aa07b56c00f6c4c7bf4769ee996c653015a30"
        ],
        [
            "repeat rewrite <- isok_iff in *.",
            "VernacExtend",
            "ba052d362138de99b60fd807184417391e2f1928"
        ],
        [
            "do 4 (split; trivial).",
            "VernacExtend",
            "775f6e37f5a862d4a6a386b347f3dd2b8d2c7888"
        ],
        [
            "assert (eqlistA X.eq s2' s2'').",
            "VernacExtend",
            "f4fe892ff5419ae2711178137d3f258fc33ec46d"
        ],
        [
            "apply SortA_equivlistA_eqlistA with (ltA:=X.lt); auto using @ok with *.",
            "VernacExtend",
            "c30d08d2ca8bb1a80facca8c2ca5f1d862ac7046"
        ],
        [
            "transitivity s2; auto.",
            "VernacExtend",
            "394405d9c6e8e96932fb748642fc1718477cfe54"
        ],
        [
            "symmetry; auto.",
            "VernacExtend",
            "72331728cf41281b1b06fee3e3b5ef380ea044a9"
        ],
        [
            "transitivity s2'; auto.",
            "VernacExtend",
            "f3bf847c74797f4b4a1e1b8c9735f13dc79468f8"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance lt_compat : Proper (eq==>eq==>iff) lt.",
            "VernacInstance",
            "04e2deec4194fc51245d368b9c1ad29da27fd761"
        ],
        [
            "intros s1 s2 E12 s3 s4 E34.",
            "VernacExtend",
            "600f01bebd3a5b34f52d26bd5b6057fb2fc5f0b3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros (s1' & s3' & B1 & B3 & E1 & E3 & LT).",
            "VernacExtend",
            "23d9f553dd8b5aec9df80d7332341c1a710e657b"
        ],
        [
            "exists s1', s3'; do 2 (split; trivial).",
            "VernacExtend",
            "360c4e7b254a4961b9793209c6b011f9bb13e8db"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "transitivity s1; auto.",
            "VernacExtend",
            "bb740eda98792dc760bb29909ddd523033cca08d"
        ],
        [
            "symmetry; auto.",
            "VernacExtend",
            "72331728cf41281b1b06fee3e3b5ef380ea044a9"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "transitivity s3; auto.",
            "VernacExtend",
            "d363df512363d965e2116b9f2b5606ff46eae514"
        ],
        [
            "symmetry; auto.",
            "VernacExtend",
            "72331728cf41281b1b06fee3e3b5ef380ea044a9"
        ],
        [
            "intros (s1' & s3' & B1 & B3 & E1 & E3 & LT).",
            "VernacExtend",
            "23d9f553dd8b5aec9df80d7332341c1a710e657b"
        ],
        [
            "exists s1', s3'; do 2 (split; trivial).",
            "VernacExtend",
            "360c4e7b254a4961b9793209c6b011f9bb13e8db"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "transitivity s2; auto.",
            "VernacExtend",
            "394405d9c6e8e96932fb748642fc1718477cfe54"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "transitivity s4; auto.",
            "VernacExtend",
            "6e16546cc8fcbc8023cda0b4e0c44e133ce51f73"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_spec_aux : forall s s', CompSpec eq L.lt s s' (compare s s').",
            "VernacStartTheoremProof",
            "2d54273470d1b7ac8d5e4529628142c29fc62e99"
        ],
        [
            "induction s as [|x s IH]; intros [|x' s']; simpl; intuition.",
            "VernacExtend",
            "41b10657476a288d39a2015695b260671933fe28"
        ],
        [
            "elim_compare x x'; auto.",
            "VernacExtend",
            "defb8c112761f23e938b95db24cd2c9697a9360e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_spec : forall s s', Ok s -> Ok s' -> CompSpec eq lt s s' (compare s s').",
            "VernacStartTheoremProof",
            "26ab5ac2b662b500f9ce8cb8089abecca67ebb7c"
        ],
        [
            "intros s s' Hs Hs'.",
            "VernacExtend",
            "0a2d58c6973bef3bdb6eea3f845efcfc2d7d36b3"
        ],
        [
            "destruct (compare_spec_aux s s'); constructor; auto.",
            "VernacExtend",
            "72e5df345c0701640848a63c8a4cbd69120b103a"
        ],
        [
            "exists s, s'; repeat split; auto using @ok.",
            "VernacExtend",
            "489724e2abbbf68eded9d52ce6672db91c6a76ac"
        ],
        [
            "exists s', s; repeat split; auto using @ok.",
            "VernacExtend",
            "c57a2856a2a0e2d1aa14c0b3fbca3ae86d66de56"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MakeRaw.",
            "VernacEndSegment",
            "f45e1a6c3cc609c6ba34d2d48938cc7bf5418dd7"
        ],
        [
            "Module Make (X: OrderedType) <: S with Module E := X.",
            "VernacDefineModule",
            "e86bdb94cad48bcb7afb2d445e88bb1c938dbe1a"
        ],
        [
            "Module Raw := MakeRaw X.",
            "VernacDefineModule",
            "4e7ebb69d6d3dda0e31011efc6b7097324cb02df"
        ],
        [
            "Include Raw2Sets X Raw.",
            "VernacInclude",
            "c74b2bc25b056a10509d9b5e597f0424d803b418"
        ],
        [
            "End Make.",
            "VernacEndSegment",
            "158dcf795fe84f422408437686b9ec9e7417690b"
        ],
        [
            "Require Eqdep_dec.",
            "VernacRequire",
            "ada14d49c3442e5864ecaf447a44631803f10627"
        ],
        [
            "Module Type OrderedTypeWithLeibniz.",
            "VernacDeclareModuleType",
            "ba831437c9f8089f713300115c537141849db6e0"
        ],
        [
            "Include OrderedType.",
            "VernacInclude",
            "de2216ee4bde2ce611af17249157276e2e9c26a6"
        ],
        [
            "Parameter eq_leibniz : forall x y, eq x y -> x = y.",
            "VernacAssumption",
            "973a419b7608daf4638a89f119e194764ed0ed19"
        ],
        [
            "End OrderedTypeWithLeibniz.",
            "VernacEndSegment",
            "25af79c45805134e8dc32af0373530e8d589a0f7"
        ],
        [
            "Module Type SWithLeibniz.",
            "VernacDeclareModuleType",
            "c7b6b42438af2833028c916bf327ec95b6b3b237"
        ],
        [
            "Declare Module E : OrderedTypeWithLeibniz.",
            "VernacDeclareModule",
            "505f23843a29a95baac2a305e37351fe528e9b30"
        ],
        [
            "Include SetsOn E.",
            "VernacInclude",
            "6a5e31173f8a9df6625b60aff4522334b4111221"
        ],
        [
            "Parameter eq_leibniz : forall x y, eq x y -> x = y.",
            "VernacAssumption",
            "973a419b7608daf4638a89f119e194764ed0ed19"
        ],
        [
            "End SWithLeibniz.",
            "VernacEndSegment",
            "e569cb11803e3963e24dc52c4f2bc332f26f0231"
        ],
        [
            "Module MakeWithLeibniz (X: OrderedTypeWithLeibniz) <: SWithLeibniz with Module E := X.",
            "VernacDefineModule",
            "31101187c64345a14766ffc93be01a9fb64acb4a"
        ],
        [
            "Module E := X.",
            "VernacDefineModule",
            "dd5467716b9394b87429487ba1be9693c17fd44c"
        ],
        [
            "Module Raw := MakeRaw X.",
            "VernacDefineModule",
            "4e7ebb69d6d3dda0e31011efc6b7097324cb02df"
        ],
        [
            "Include Raw2SetsOn X Raw.",
            "VernacInclude",
            "eef8424ef0e6e7c21a49fd1c60ea4f93f601e6fb"
        ],
        [
            "Lemma eq_leibniz_list : forall xs ys, eqlistA X.eq xs ys -> xs = ys.",
            "VernacStartTheoremProof",
            "82a1267fd0521d06ead9d477c72fd9d141a4b951"
        ],
        [
            "induction xs as [|x xs]; intros [|y ys] H; inversion H; [ | ].",
            "VernacExtend",
            "23bdb6b7bdb05adfb668367a0a0affd127504aa4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply X.eq_leibniz; congruence.",
            "VernacExtend",
            "22bf61686b65bc8044d3d2f98e3053e6f9cbe8e6"
        ],
        [
            "apply IHxs; subst; assumption.",
            "VernacExtend",
            "d4840e8f5aadef8156512501f2b8dece2cfdce19"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_leibniz : forall s s', eq s s' -> s = s'.",
            "VernacStartTheoremProof",
            "265b3f21235c9497418a6c3a74a01459994bbb15"
        ],
        [
            "intros [xs Hxs] [ys Hys] Heq.",
            "VernacExtend",
            "74cde5f59149918a146a6f81f827aa4c7a1984b3"
        ],
        [
            "change (equivlistA X.eq xs ys) in Heq.",
            "VernacExtend",
            "4022df8354db8baff400d8ac8a82074886906a01"
        ],
        [
            "assert (H : eqlistA X.eq xs ys).",
            "VernacExtend",
            "62fc0e8d38e1fd4c862e23b475e1bcb51f6d78f9"
        ],
        [
            "rewrite <- Raw.isok_iff in Hxs, Hys.",
            "VernacExtend",
            "9d75c67330a0b644a416bd27a759d08e6c3e5060"
        ],
        [
            "apply SortA_equivlistA_eqlistA with X.lt; auto with *.",
            "VernacExtend",
            "1fddd2e6a9de374967b9666ec3f35b5eb125711d"
        ],
        [
            "apply eq_leibniz_list in H.",
            "VernacExtend",
            "322a11392347ac4011250e29a5061a3c77d48b2f"
        ],
        [
            "subst ys.",
            "VernacExtend",
            "f75678c29e7ce3415bb9703c5ae9ce6105727a25"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply Eqdep_dec.eq_proofs_unicity.",
            "VernacExtend",
            "34395e283e6b275fd124a75c9206047cd6bad763"
        ],
        [
            "intros x y; destruct (bool_dec x y); tauto.",
            "VernacExtend",
            "27f41389d24b00d4a3a66edcc050f388dc97c5f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MakeWithLeibniz.",
            "VernacEndSegment",
            "129fff6e744b3936eba1e2ed8e9a259aecfcbbce"
        ]
    ],
    "proofs": [
        {
            "name": "inf_iff",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros x l; split; intro H.",
                        "VernacExtend",
                        "a2b6ef127c2b7fdc3484a9b220b941670cf418a7"
                    ]
                },
                {
                    "command": [
                        "destruct H; simpl in *.",
                        "VernacExtend",
                        "9aeb98d24e2ffa1a00218a42c01c68f46c74e85a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite <- compare_lt_iff in H; rewrite H; reflexivity.",
                        "VernacExtend",
                        "73cbe60c49f145ecb043ea8015f490c394d20f54"
                    ]
                },
                {
                    "command": [
                        "destruct l as [|y ys]; simpl in *.",
                        "VernacExtend",
                        "9edadedb7dcb8b02fe39f1f07b52384ce656f68d"
                    ]
                },
                {
                    "command": [
                        "constructor; fail.",
                        "VernacExtend",
                        "905b9d171fff4433d527dba7198adf81bf339f08"
                    ]
                },
                {
                    "command": [
                        "revert H; case_eq (X.compare x y); try discriminate; [].",
                        "VernacExtend",
                        "14febe3f895f4f90b00d32bcdf465e6e70053ec4"
                    ]
                },
                {
                    "command": [
                        "intros Ha _.",
                        "VernacExtend",
                        "215024c511a53ad9a5e95c7735570bee2b55d4eb"
                    ]
                },
                {
                    "command": [
                        "rewrite compare_lt_iff in Ha.",
                        "VernacExtend",
                        "fcad2f1b6a6a24dc413379ac50d642a78daacea7"
                    ]
                },
                {
                    "command": [
                        "constructor; assumption.",
                        "VernacExtend",
                        "a36f2a931681c9f1611aa56f1a810ad0f6afb946"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isok_iff",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "intro l; split; intro H.",
                        "VernacExtend",
                        "6b0e880e9c3fddb1ae177fce710ea23a0a3e2586"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "constructor; fail.",
                        "VernacExtend",
                        "905b9d171fff4433d527dba7198adf81bf339f08"
                    ]
                },
                {
                    "command": [
                        "intros y ys Ha Hb Hc.",
                        "VernacExtend",
                        "41b6bc5cb327cb12a5237619937bfe02ef8a2a7a"
                    ]
                },
                {
                    "command": [
                        "change (inf y ys && isok ys = true).",
                        "VernacExtend",
                        "905743c2f280dcddd3a37ba9ad9c7dbe398d01e2"
                    ]
                },
                {
                    "command": [
                        "rewrite inf_iff in Hc.",
                        "VernacExtend",
                        "4f75bae2e6e311d0a5a4b7f7d43070d65b69bc0a"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff; tauto.",
                        "VernacExtend",
                        "7c2eefada3693d72dd4380ff3fe50f19558875b5"
                    ]
                },
                {
                    "command": [
                        "induction l as [|x xs].",
                        "VernacExtend",
                        "0dfc9432bc496c402eda56d2a090325dd1be01a0"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "change (inf x xs && isok xs = true) in H.",
                        "VernacExtend",
                        "55c45f02e2840e11432d4915c56a25e1505208fb"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff, <- inf_iff in H.",
                        "VernacExtend",
                        "2100151a953d73883ec34167c29df2cb090e87e3"
                    ]
                },
                {
                    "command": [
                        "destruct H; constructor; tauto.",
                        "VernacExtend",
                        "fd34b36866051707e82044d6fe957100560c3bc5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isok_Ok",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_spec",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "induction s; intros x Hs; inv; simpl.",
                        "VernacExtend",
                        "81bc03808977d85ee6cf35d74fb0383de5913013"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "elim_compare x a; rewrite InA_cons; intuition; try order.",
                        "VernacExtend",
                        "57e6ba61d0ff40ce1213cd1793b624269de3a841"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "sort_inf_in.",
                        "VernacExtend",
                        "9eb25a36c2de1b390a0376d0609d48c4a8661053"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHs; auto.",
                        "VernacExtend",
                        "14dfbf3b505ed38d05656e9f0a10a90963706499"
                    ]
                },
                {
                    "command": [
                        "rewrite IHs; auto.",
                        "VernacExtend",
                        "307f7fbc326db99b76199a012fca963fd61b181a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_inf",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "simple induction s; simpl.",
                        "VernacExtend",
                        "298231545dccccc350ebcbfa56e333c5f5186a1c"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intros; elim_compare x a; inv; intuition.",
                        "VernacExtend",
                        "fd704a49029206b75946919a742cecebc8bfa577"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_ok",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "repeat rewrite <- isok_iff; revert s x.",
                        "VernacExtend",
                        "6533c95119e3fa59cb2d3f10e543c5d2d19e6403"
                    ]
                },
                {
                    "command": [
                        "simple induction s; simpl.",
                        "VernacExtend",
                        "298231545dccccc350ebcbfa56e333c5f5186a1c"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intros; elim_compare x a; inv; auto.",
                        "VernacExtend",
                        "a8bc21e0d264e498b17eadefa633dda2ea38b31c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_spec",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "induction s; simpl; intros.",
                        "VernacExtend",
                        "55d762fdba50b27f8695d733d2857ceea86abd6f"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "inv; auto.",
                        "VernacExtend",
                        "1e09fea56c964df79eb372d6433eec3b5c88882b"
                    ]
                },
                {
                    "command": [
                        "elim_compare x a; inv; rewrite !InA_cons, ?IHs; intuition.",
                        "VernacExtend",
                        "451fe387b406c1b64663c02e9993fd6a3eab95cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_inf",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "induction s; simpl.",
                        "VernacExtend",
                        "0d97119141b8edf3eb7e6fb5ae4f956cd710346b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intros; elim_compare x a; inv; auto.",
                        "VernacExtend",
                        "a8bc21e0d264e498b17eadefa633dda2ea38b31c"
                    ]
                },
                {
                    "command": [
                        "apply Inf_lt with a; auto.",
                        "VernacExtend",
                        "718870bdaf23fae5152f3d141fa947a2a11997c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_ok",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "repeat rewrite <- isok_iff; revert s x.",
                        "VernacExtend",
                        "6533c95119e3fa59cb2d3f10e543c5d2d19e6403"
                    ]
                },
                {
                    "command": [
                        "induction s; simpl.",
                        "VernacExtend",
                        "0d97119141b8edf3eb7e6fb5ae4f956cd710346b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intros; elim_compare x a; inv; auto.",
                        "VernacExtend",
                        "a8bc21e0d264e498b17eadefa633dda2ea38b31c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_spec",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "induction s; simpl; intros.",
                        "VernacExtend",
                        "55d762fdba50b27f8695d733d2857ceea86abd6f"
                    ]
                },
                {
                    "command": [
                        "intuition; inv; auto.",
                        "VernacExtend",
                        "31c85709324ada0e3a3add122b7deeb18b951dcb"
                    ]
                },
                {
                    "command": [
                        "elim_compare x a; inv; rewrite !InA_cons, ?IHs; intuition; try sort_inf_in; try order.",
                        "VernacExtend",
                        "f350e68e04ec16bc26108df6a19c1ddfef0354f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "singleton_ok",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "unfold singleton; simpl; auto.",
                        "VernacExtend",
                        "cd581fcf700c8e6641cb0984b50a04b75a6dca70"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "singleton_spec",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "unfold singleton; simpl; split; intros; inv; auto.",
                        "VernacExtend",
                        "198bfa138e6272ff883f00a8193ea291b5780185"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_inf",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "induction2.",
                        "VernacExtend",
                        "7b0e5ad429ba775174c24afbf8e638ae4876ad19"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_ok",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "repeat rewrite <- isok_iff; revert s s'.",
                        "VernacExtend",
                        "1f98221bdd911f5ad78b2961616adbcc71ad9256"
                    ]
                },
                {
                    "command": [
                        "induction2; constructors; try apply @ok; auto.",
                        "VernacExtend",
                        "58237df35f508b1582fd14f12e359dbc6afa8c69"
                    ]
                },
                {
                    "command": [
                        "apply Inf_eq with x'; auto; apply union_inf; auto; apply Inf_eq with x; auto; order.",
                        "VernacExtend",
                        "80ecab859821e0a78830ff2c7cc0b686e3d7ec2f"
                    ]
                },
                {
                    "command": [
                        "change (Inf x' (union (x :: l) l')); auto.",
                        "VernacExtend",
                        "da787ec616e8d8f3063c61cc70956625b5bdb25b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "union_spec",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "induction2; try rewrite ?InA_cons, ?Hrec, ?Hrec'; intuition; inv; auto.",
                        "VernacExtend",
                        "48f694a4bd7418862bf1479533ec5d36f2d7bc10"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_inf",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "induction2.",
                        "VernacExtend",
                        "7b0e5ad429ba775174c24afbf8e638ae4876ad19"
                    ]
                },
                {
                    "command": [
                        "apply Inf_lt with x; auto.",
                        "VernacExtend",
                        "15ccda9e09d7077ece40934b354efe644bc3562f"
                    ]
                },
                {
                    "command": [
                        "apply Hrec'; auto.",
                        "VernacExtend",
                        "34c07d78afa18b918467a2a70331dc79bfcd97b5"
                    ]
                },
                {
                    "command": [
                        "apply Inf_lt with x'; auto.",
                        "VernacExtend",
                        "fccd36a90eebda70aa03e0b95a8b4630d660ab70"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_ok",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "repeat rewrite <- isok_iff; revert s s'.",
                        "VernacExtend",
                        "1f98221bdd911f5ad78b2961616adbcc71ad9256"
                    ]
                },
                {
                    "command": [
                        "induction2.",
                        "VernacExtend",
                        "7b0e5ad429ba775174c24afbf8e638ae4876ad19"
                    ]
                },
                {
                    "command": [
                        "constructors; auto.",
                        "VernacExtend",
                        "46e376bf85e5bdbc0f1658eb4c6ac7793dcd6a18"
                    ]
                },
                {
                    "command": [
                        "apply Inf_eq with x'; auto; apply inter_inf; auto; apply Inf_eq with x; auto.",
                        "VernacExtend",
                        "240f32188e0346e394c5722d093c91a055167608"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inter_spec",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "induction2; try rewrite ?InA_cons, ?Hrec, ?Hrec'; intuition; inv; auto; try sort_inf_in; try order.",
                        "VernacExtend",
                        "30bb894ac01eb7a45f678b5403dcd35dd6cb9152"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_inf",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "intros s s'; repeat rewrite <- isok_iff; revert s s'.",
                        "VernacExtend",
                        "62e0519a8ccd93f613889340ee7650a6e76530c4"
                    ]
                },
                {
                    "command": [
                        "induction2.",
                        "VernacExtend",
                        "7b0e5ad429ba775174c24afbf8e638ae4876ad19"
                    ]
                },
                {
                    "command": [
                        "apply Hrec; trivial.",
                        "VernacExtend",
                        "2e85843eba6bc911b4630b27e30c911e3442dd3a"
                    ]
                },
                {
                    "command": [
                        "apply Inf_lt with x; auto.",
                        "VernacExtend",
                        "15ccda9e09d7077ece40934b354efe644bc3562f"
                    ]
                },
                {
                    "command": [
                        "apply Inf_lt with x'; auto.",
                        "VernacExtend",
                        "fccd36a90eebda70aa03e0b95a8b4630d660ab70"
                    ]
                },
                {
                    "command": [
                        "apply Hrec'; auto.",
                        "VernacExtend",
                        "34c07d78afa18b918467a2a70331dc79bfcd97b5"
                    ]
                },
                {
                    "command": [
                        "apply Inf_lt with x'; auto.",
                        "VernacExtend",
                        "fccd36a90eebda70aa03e0b95a8b4630d660ab70"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_ok",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "repeat rewrite <- isok_iff; revert s s'.",
                        "VernacExtend",
                        "1f98221bdd911f5ad78b2961616adbcc71ad9256"
                    ]
                },
                {
                    "command": [
                        "induction2.",
                        "VernacExtend",
                        "7b0e5ad429ba775174c24afbf8e638ae4876ad19"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_spec",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "induction2; try rewrite ?InA_cons, ?Hrec, ?Hrec'; intuition; inv; auto; try sort_inf_in; try order.",
                        "VernacExtend",
                        "30bb894ac01eb7a45f678b5403dcd35dd6cb9152"
                    ]
                },
                {
                    "command": [
                        "right; intuition; inv; auto.",
                        "VernacExtend",
                        "13372ceff3445c3a8e1b528f7cd1bf7823a68607"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_spec",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "induction s as [ | x s IH]; intros [ | x' s'] Hs Hs'; simpl.",
                        "VernacExtend",
                        "c9e02582eabca911e826aab62fa6f052c28f72af"
                    ]
                },
                {
                    "command": [
                        "intuition reflexivity.",
                        "VernacExtend",
                        "8bf1b2c156e37bd9da7286e7674c0af33cdf6552"
                    ]
                },
                {
                    "command": [
                        "split; intros H.",
                        "VernacExtend",
                        "a22fcc98cae3c9e7feb477b9e8b0236d37ea8d65"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "assert (In x' nil) by (rewrite H; auto).",
                        "VernacExtend",
                        "3c1954fca2d3a4ef4e82eae5be3acf967740043b"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "split; intros H.",
                        "VernacExtend",
                        "a22fcc98cae3c9e7feb477b9e8b0236d37ea8d65"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "assert (In x nil) by (rewrite <-H; auto).",
                        "VernacExtend",
                        "674e2b7f1d85815f8936900967b58736d5e9ae2a"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "elim_compare x x' as C; try discriminate.",
                        "VernacExtend",
                        "391359533e5e980a39814518483d81bbcd2f9755"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto.",
                        "VernacExtend",
                        "e446d61fab29de5c06ade533575e5b57264728f1"
                    ]
                },
                {
                    "command": [
                        "split; intros E y; specialize (E y).",
                        "VernacExtend",
                        "38d247cb1f24c0f1a38c372b58967d2ae348f64c"
                    ]
                },
                {
                    "command": [
                        "rewrite !InA_cons, E, C; intuition.",
                        "VernacExtend",
                        "a65f009646d10177723c26e60fa86f131d3bfce4"
                    ]
                },
                {
                    "command": [
                        "rewrite !InA_cons, C in E.",
                        "VernacExtend",
                        "651d9f30164eb1840e603ba59b07012e1ef24aef"
                    ]
                },
                {
                    "command": [
                        "intuition; try sort_inf_in; order.",
                        "VernacExtend",
                        "3dc5dd780982156afc392452d214ae8127277783"
                    ]
                },
                {
                    "command": [
                        "split; intros E.",
                        "VernacExtend",
                        "09f9c984816ae9d64d07261aa98f7c5b5fb61100"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "assert (In x (x'::s')) by (rewrite <- E; auto).",
                        "VernacExtend",
                        "47a8f72dd86eecc5b03a3623d3900bd75a43b179"
                    ]
                },
                {
                    "command": [
                        "inv; try sort_inf_in; order.",
                        "VernacExtend",
                        "8c3031d57d4241ed3ab868ecf5639c8665667512"
                    ]
                },
                {
                    "command": [
                        "split; intros E.",
                        "VernacExtend",
                        "09f9c984816ae9d64d07261aa98f7c5b5fb61100"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "assert (In x' (x::s)) by (rewrite E; auto).",
                        "VernacExtend",
                        "91d2e02c8a1b889546c41a34d4519c61e58fdb2f"
                    ]
                },
                {
                    "command": [
                        "inv; try sort_inf_in; order.",
                        "VernacExtend",
                        "8c3031d57d4241ed3ab868ecf5639c8665667512"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_spec",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "intros s s'; revert s.",
                        "VernacExtend",
                        "5d194b343fb39dff14705ed707bf306e31d88962"
                    ]
                },
                {
                    "command": [
                        "induction s' as [ | x' s' IH]; intros [ | x s] Hs Hs'; simpl; auto.",
                        "VernacExtend",
                        "7fcd9653fc259b2299babc2c36f1feb0d3ab59a1"
                    ]
                },
                {
                    "command": [
                        "split; try red; intros; auto.",
                        "VernacExtend",
                        "191156738a4730b8ca1fedd0753ae2fbcdddb81e"
                    ]
                },
                {
                    "command": [
                        "split; intros H.",
                        "VernacExtend",
                        "a22fcc98cae3c9e7feb477b9e8b0236d37ea8d65"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "assert (In x nil) by (apply H; auto).",
                        "VernacExtend",
                        "fcffa00cbe119f58941dcdd3f06933352b1366e8"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "split; try red; intros; auto.",
                        "VernacExtend",
                        "191156738a4730b8ca1fedd0753ae2fbcdddb81e"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "elim_compare x x' as C.",
                        "VernacExtend",
                        "848ffc10674d296170678f9654f17c952b93b6c3"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto.",
                        "VernacExtend",
                        "e446d61fab29de5c06ade533575e5b57264728f1"
                    ]
                },
                {
                    "command": [
                        "split; intros S y; specialize (S y).",
                        "VernacExtend",
                        "0bd75b9c54ec37e8826f45a1fd73e1e8eb9074e8"
                    ]
                },
                {
                    "command": [
                        "rewrite !InA_cons, C.",
                        "VernacExtend",
                        "039dbaa82f3e2731d1ef7b31d2e32af5680bfe3c"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite !InA_cons, C in S.",
                        "VernacExtend",
                        "414cb52aea5abae10a1fbd452b7959a8ab414ca4"
                    ]
                },
                {
                    "command": [
                        "intuition; try sort_inf_in; order.",
                        "VernacExtend",
                        "3dc5dd780982156afc392452d214ae8127277783"
                    ]
                },
                {
                    "command": [
                        "split; intros S.",
                        "VernacExtend",
                        "eae48093e8fc7c09d5f9f57d08979c3328d78ec8"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "assert (In x (x'::s')) by (apply S; auto).",
                        "VernacExtend",
                        "ad3b533b2a3954ee2631ea926d78b888b44ffe30"
                    ]
                },
                {
                    "command": [
                        "inv; try sort_inf_in; order.",
                        "VernacExtend",
                        "8c3031d57d4241ed3ab868ecf5639c8665667512"
                    ]
                },
                {
                    "command": [
                        "rewrite IH; auto.",
                        "VernacExtend",
                        "e446d61fab29de5c06ade533575e5b57264728f1"
                    ]
                },
                {
                    "command": [
                        "split; intros S y; specialize (S y).",
                        "VernacExtend",
                        "0bd75b9c54ec37e8826f45a1fd73e1e8eb9074e8"
                    ]
                },
                {
                    "command": [
                        "rewrite !InA_cons.",
                        "VernacExtend",
                        "b6b08f8dcb994fa26c5e4868778e410542c683ac"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite !InA_cons in S.",
                        "VernacExtend",
                        "e925902310c13e52dd95d1aeeb8c6e9aed01bdae"
                    ]
                },
                {
                    "command": [
                        "rewrite !InA_cons.",
                        "VernacExtend",
                        "b6b08f8dcb994fa26c5e4868778e410542c683ac"
                    ]
                },
                {
                    "command": [
                        "intuition; try sort_inf_in; order.",
                        "VernacExtend",
                        "3dc5dd780982156afc392452d214ae8127277783"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_ok",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "constructors.",
                        "VernacExtend",
                        "c523d5ea5e149bc7787b1e5910d8d403274da1d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_spec",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "unfold Empty, empty; intuition; inv.",
                        "VernacExtend",
                        "fec8a225649b9ab6bf4cc8263d6f9a001c78f784"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_empty_spec",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "intros [ | x s]; simpl.",
                        "VernacExtend",
                        "0cd0bf4dfc5af2b543e828e0bab95e8d988c8e62"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "intros _ x H.",
                        "VernacExtend",
                        "e14d7147a69a993c05f8498dee3df428f7af9b69"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "elim (H x); auto.",
                        "VernacExtend",
                        "5ccf661181acccf71586c2921eefa3182a6103e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_spec1",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_spec2",
            "line_nb": 264,
            "steps": [
                {
                    "command": [
                        "intro s; repeat rewrite <- isok_iff; auto.",
                        "VernacExtend",
                        "e719e519d24cfceb68665586f673ad687ae3ed7f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_spec2w",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "intro s; repeat rewrite <- isok_iff; auto.",
                        "VernacExtend",
                        "e719e519d24cfceb68665586f673ad687ae3ed7f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_elt_spec1",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "destruct s; simpl; inversion 1; auto.",
                        "VernacExtend",
                        "9dc01cd554d17ddcd19671e1ffb7bb788d315257"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_elt_spec2",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "induction s as [ | x s IH]; simpl; inversion 2; subst.",
                        "VernacExtend",
                        "de8278e5358df3cb2dbc1187063ea12f2888779e"
                    ]
                },
                {
                    "command": [
                        "intros; inv; try sort_inf_in; order.",
                        "VernacExtend",
                        "d2ae80ce57f6d8cd27d0217abfa041fc27907b20"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_elt_spec3",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "destruct s; simpl; red; intuition.",
                        "VernacExtend",
                        "0c3ddf09cd39fb62f551cd49ec3b3de79b87a432"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_elt_spec1",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "induction s as [ | x s IH].",
                        "VernacExtend",
                        "75028d0c728d1686fa43a206d8e54fa66967a09d"
                    ]
                },
                {
                    "command": [
                        "inversion 1.",
                        "VernacExtend",
                        "9152817da0dc28ba4701e3ff01c293af28a1059f"
                    ]
                },
                {
                    "command": [
                        "destruct s as [ | y s].",
                        "VernacExtend",
                        "85fc4ba950416b29914f29d3dc85b1efdeb6a0c0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "inversion 1; subst; auto.",
                        "VernacExtend",
                        "45c20932200d3232a588bb8a2bbd06f04487daa8"
                    ]
                },
                {
                    "command": [
                        "right; apply IH; auto.",
                        "VernacExtend",
                        "5f1bcbb22773a24038a0ae065af0df8e6bde413b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_elt_spec2",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "induction s as [ | a s IH].",
                        "VernacExtend",
                        "daaa408c1057cc39c280bf156d9091ded522e339"
                    ]
                },
                {
                    "command": [
                        "inversion 2.",
                        "VernacExtend",
                        "9b1e056b41fea71e2db9d8977c86e79e382f15d7"
                    ]
                },
                {
                    "command": [
                        "destruct s as [ | b s].",
                        "VernacExtend",
                        "daefb02e8b24df1fe1b2badbe1619b2daf142be2"
                    ]
                },
                {
                    "command": [
                        "inversion 2; subst.",
                        "VernacExtend",
                        "9433bc96c9f16b5ca729d0e905a252da14503d02"
                    ]
                },
                {
                    "command": [
                        "intros; inv; order.",
                        "VernacExtend",
                        "95d709631574c0b351443d685ee29784efef9b91"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inv; auto.",
                        "VernacExtend",
                        "1e09fea56c964df79eb372d6433eec3b5c88882b"
                    ]
                },
                {
                    "command": [
                        "assert (~X.lt x b) by (apply IH; auto).",
                        "VernacExtend",
                        "b0aa562b82e2ce6fcde548747ea8b1289af57322"
                    ]
                },
                {
                    "command": [
                        "assert (X.lt a b) by auto.",
                        "VernacExtend",
                        "031a1e44a74cc91827569745667ee3e1f6b5f575"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_elt_spec3",
            "line_nb": 302,
            "steps": [
                {
                    "command": [
                        "induction s as [ | a s IH].",
                        "VernacExtend",
                        "daaa408c1057cc39c280bf156d9091ded522e339"
                    ]
                },
                {
                    "command": [
                        "red; intuition; inv.",
                        "VernacExtend",
                        "93f4de3e33b344b43766103eaa5554d2430f1a92"
                    ]
                },
                {
                    "command": [
                        "destruct s as [ | b s].",
                        "VernacExtend",
                        "daefb02e8b24df1fe1b2badbe1619b2daf142be2"
                    ]
                },
                {
                    "command": [
                        "inversion 1.",
                        "VernacExtend",
                        "9152817da0dc28ba4701e3ff01c293af28a1059f"
                    ]
                },
                {
                    "command": [
                        "intros; elim IH with b; auto.",
                        "VernacExtend",
                        "2c543e8e683bd25524e7927aea7b1c5b1973b5bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "choose_spec3",
            "line_nb": 311,
            "steps": [
                {
                    "command": [
                        "unfold choose; intros s s' x x' Hs Hs' Hx Hx' H.",
                        "VernacExtend",
                        "d11b61aa9a03ebbf60cde1441d7d9f8c4068cc3a"
                    ]
                },
                {
                    "command": [
                        "assert (~X.lt x x').",
                        "VernacExtend",
                        "c2a74b7e5e3f98c1382bb63f8d6def36f1d38866"
                    ]
                },
                {
                    "command": [
                        "apply min_elt_spec2 with s'; auto.",
                        "VernacExtend",
                        "3940e91715bb20bc73465f9772e6583ba6fa2c48"
                    ]
                },
                {
                    "command": [
                        "rewrite <-H; auto using min_elt_spec1.",
                        "VernacExtend",
                        "31c2734daa91f402372d556cd3e109d9c9a90477"
                    ]
                },
                {
                    "command": [
                        "assert (~X.lt x' x).",
                        "VernacExtend",
                        "0136b268cb8797d5245a09fe48ece6ce357dd3e2"
                    ]
                },
                {
                    "command": [
                        "apply min_elt_spec2 with s; auto.",
                        "VernacExtend",
                        "38c55a4a2b826b4539ceddb3af9678c8460624a2"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto using min_elt_spec1.",
                        "VernacExtend",
                        "d25afb4d27790f65e1db828c2249c8b071066179"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_spec",
            "line_nb": 321,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_spec",
            "line_nb": 324,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_inf",
            "line_nb": 327,
            "steps": [
                {
                    "command": [
                        "simple induction s; simpl.",
                        "VernacExtend",
                        "298231545dccccc350ebcbfa56e333c5f5186a1c"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intros x l Hrec a f Hs Ha; inv.",
                        "VernacExtend",
                        "c5d1a1d143476ce11508967fdb35e9fe83bb02d3"
                    ]
                },
                {
                    "command": [
                        "case (f x); auto.",
                        "VernacExtend",
                        "e9419ac23e8cfce97043ae75e3963f8e963f0707"
                    ]
                },
                {
                    "command": [
                        "apply Hrec; auto.",
                        "VernacExtend",
                        "8377c8eca8e58ba4bb4b372c0ba32d47e4a00f4f"
                    ]
                },
                {
                    "command": [
                        "apply Inf_lt with x; auto.",
                        "VernacExtend",
                        "15ccda9e09d7077ece40934b354efe644bc3562f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_ok",
            "line_nb": 335,
            "steps": [
                {
                    "command": [
                        "repeat rewrite <- isok_iff; revert s f.",
                        "VernacExtend",
                        "b306bc38866e60551ef1266057268442b06b3e90"
                    ]
                },
                {
                    "command": [
                        "simple induction s; simpl.",
                        "VernacExtend",
                        "298231545dccccc350ebcbfa56e333c5f5186a1c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros x l Hrec f Hs; inv.",
                        "VernacExtend",
                        "c87f86a3d60a4b6401c20de67bb7bea5b6b29349"
                    ]
                },
                {
                    "command": [
                        "case (f x); auto.",
                        "VernacExtend",
                        "e9419ac23e8cfce97043ae75e3963f8e963f0707"
                    ]
                },
                {
                    "command": [
                        "constructors; auto.",
                        "VernacExtend",
                        "46e376bf85e5bdbc0f1658eb4c6ac7793dcd6a18"
                    ]
                },
                {
                    "command": [
                        "apply filter_inf; auto.",
                        "VernacExtend",
                        "12d354e9c1486b926ad476120bfebb7df2d70507"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_spec",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "induction s; simpl; intros.",
                        "VernacExtend",
                        "55d762fdba50b27f8695d733d2857ceea86abd6f"
                    ]
                },
                {
                    "command": [
                        "split; intuition; inv.",
                        "VernacExtend",
                        "b90eace4da5750db2e24db8d6aa6888b77c7eafd"
                    ]
                },
                {
                    "command": [
                        "destruct (f a) eqn:F; rewrite !InA_cons, ?IHs; intuition.",
                        "VernacExtend",
                        "c85484bdfebdde425cb30a5970dd725637692f67"
                    ]
                },
                {
                    "command": [
                        "setoid_replace x with a; auto.",
                        "VernacExtend",
                        "83ed7f7d976518caeb5b8a08018f847df8461e5a"
                    ]
                },
                {
                    "command": [
                        "setoid_replace a with x in F; auto; congruence.",
                        "VernacExtend",
                        "d80c0cb8192f948ca50009c0f76f83fd9ca65fa2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "for_all_spec",
            "line_nb": 351,
            "steps": [
                {
                    "command": [
                        "unfold For_all; induction s; simpl; intros.",
                        "VernacExtend",
                        "8c54c01b3bad686667c2f9cd94dbd2ecc9a7df9e"
                    ]
                },
                {
                    "command": [
                        "split; intros; auto.",
                        "VernacExtend",
                        "717387d631b429238a3e5b8297a6cfab3f273dd4"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "destruct (f a) eqn:F.",
                        "VernacExtend",
                        "668a110fa716d9e825b82165fc0cff88b623fd4f"
                    ]
                },
                {
                    "command": [
                        "rewrite IHs; auto.",
                        "VernacExtend",
                        "307f7fbc326db99b76199a012fca963fd61b181a"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "inv; auto.",
                        "VernacExtend",
                        "1e09fea56c964df79eb372d6433eec3b5c88882b"
                    ]
                },
                {
                    "command": [
                        "setoid_replace x with a; auto.",
                        "VernacExtend",
                        "83ed7f7d976518caeb5b8a08018f847df8461e5a"
                    ]
                },
                {
                    "command": [
                        "split; intros H'.",
                        "VernacExtend",
                        "010c3ee581698c43c620d139c469a2325e8ff08c"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "rewrite H' in F; auto.",
                        "VernacExtend",
                        "c20a4ffcebabb7b9293d7d851217ab0b87ff2aa0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_spec",
            "line_nb": 364,
            "steps": [
                {
                    "command": [
                        "unfold Exists; induction s; simpl; intros.",
                        "VernacExtend",
                        "328b9a683ded1c2b609ee1aa6890e516a40d3053"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "destruct (f a) eqn:F.",
                        "VernacExtend",
                        "668a110fa716d9e825b82165fc0cff88b623fd4f"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "rewrite IHs; auto.",
                        "VernacExtend",
                        "307f7fbc326db99b76199a012fca963fd61b181a"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "setoid_replace a with x in F; auto; congruence.",
                        "VernacExtend",
                        "d80c0cb8192f948ca50009c0f76f83fd9ca65fa2"
                    ]
                },
                {
                    "command": [
                        "exists x; auto.",
                        "VernacExtend",
                        "d8b3edd09d34953d83a4fbc6350c30f804073b09"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_inf1",
            "line_nb": 377,
            "steps": [
                {
                    "command": [
                        "intros s f x; repeat rewrite <- isok_iff; revert s f x.",
                        "VernacExtend",
                        "1753837d0fa5f2953cbbcc400e2e4d397ea4ff95"
                    ]
                },
                {
                    "command": [
                        "simple induction s; simpl.",
                        "VernacExtend",
                        "298231545dccccc350ebcbfa56e333c5f5186a1c"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intros x l Hrec f a Hs Ha; inv.",
                        "VernacExtend",
                        "2c2771997715b44e5916bc9f9ffb06aeda825490"
                    ]
                },
                {
                    "command": [
                        "generalize (Hrec f a H).",
                        "VernacExtend",
                        "42a2a31c35a5224dc7e644a2037503a82604b66e"
                    ]
                },
                {
                    "command": [
                        "case (f x); case (partition f l); simpl.",
                        "VernacExtend",
                        "8263e82d8bb073a93e51183d609338d5ad3df7f8"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros; apply H2; apply Inf_lt with x; auto.",
                        "VernacExtend",
                        "ad81f032bd5ef7be59a92876e7ef6f0889d117da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_inf2",
            "line_nb": 387,
            "steps": [
                {
                    "command": [
                        "intros s f x; repeat rewrite <- isok_iff; revert s f x.",
                        "VernacExtend",
                        "1753837d0fa5f2953cbbcc400e2e4d397ea4ff95"
                    ]
                },
                {
                    "command": [
                        "simple induction s; simpl.",
                        "VernacExtend",
                        "298231545dccccc350ebcbfa56e333c5f5186a1c"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intros x l Hrec f a Hs Ha; inv.",
                        "VernacExtend",
                        "2c2771997715b44e5916bc9f9ffb06aeda825490"
                    ]
                },
                {
                    "command": [
                        "generalize (Hrec f a H).",
                        "VernacExtend",
                        "42a2a31c35a5224dc7e644a2037503a82604b66e"
                    ]
                },
                {
                    "command": [
                        "case (f x); case (partition f l); simpl.",
                        "VernacExtend",
                        "8263e82d8bb073a93e51183d609338d5ad3df7f8"
                    ]
                },
                {
                    "command": [
                        "intros; apply H2; apply Inf_lt with x; auto.",
                        "VernacExtend",
                        "ad81f032bd5ef7be59a92876e7ef6f0889d117da"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_ok1",
            "line_nb": 397,
            "steps": [
                {
                    "command": [
                        "repeat rewrite <- isok_iff; revert s f.",
                        "VernacExtend",
                        "b306bc38866e60551ef1266057268442b06b3e90"
                    ]
                },
                {
                    "command": [
                        "simple induction s; simpl.",
                        "VernacExtend",
                        "298231545dccccc350ebcbfa56e333c5f5186a1c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros x l Hrec f Hs; inv.",
                        "VernacExtend",
                        "c87f86a3d60a4b6401c20de67bb7bea5b6b29349"
                    ]
                },
                {
                    "command": [
                        "generalize (Hrec f H); generalize (@partition_inf1 l f x).",
                        "VernacExtend",
                        "d124504a6eae024883899a94947ccbd2a4946825"
                    ]
                },
                {
                    "command": [
                        "case (f x); case (partition f l); simpl; auto.",
                        "VernacExtend",
                        "afa7dc09995ff552d49459f841838b5c7c5d683e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_ok2",
            "line_nb": 405,
            "steps": [
                {
                    "command": [
                        "repeat rewrite <- isok_iff; revert s f.",
                        "VernacExtend",
                        "b306bc38866e60551ef1266057268442b06b3e90"
                    ]
                },
                {
                    "command": [
                        "simple induction s; simpl.",
                        "VernacExtend",
                        "298231545dccccc350ebcbfa56e333c5f5186a1c"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros x l Hrec f Hs; inv.",
                        "VernacExtend",
                        "c87f86a3d60a4b6401c20de67bb7bea5b6b29349"
                    ]
                },
                {
                    "command": [
                        "generalize (Hrec f H); generalize (@partition_inf2 l f x).",
                        "VernacExtend",
                        "70e6c272955db54555c29adc546ff6b9f2ad6d1d"
                    ]
                },
                {
                    "command": [
                        "case (f x); case (partition f l); simpl; auto.",
                        "VernacExtend",
                        "afa7dc09995ff552d49459f841838b5c7c5d683e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_spec1",
            "line_nb": 413,
            "steps": [
                {
                    "command": [
                        "simple induction s; simpl; auto; unfold Equal.",
                        "VernacExtend",
                        "1ed6bbbcc6f9fa6fb7716f9c658944c6c3695e6a"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "intros x l Hrec f Hf.",
                        "VernacExtend",
                        "640ae8ab1dfdbf81b41c8dd0d01ed8619b9c9e63"
                    ]
                },
                {
                    "command": [
                        "generalize (Hrec f Hf); clear Hrec.",
                        "VernacExtend",
                        "edfbf7f56b4294ba552184fe7e871c7f3312210d"
                    ]
                },
                {
                    "command": [
                        "destruct (partition f l) as [s1 s2]; simpl; intros.",
                        "VernacExtend",
                        "cca8d466cee90e50011741a50e76fc9d22c46033"
                    ]
                },
                {
                    "command": [
                        "case (f x); simpl; auto.",
                        "VernacExtend",
                        "3274f77a1c0db6c5b7c60fabc30a88196a7ac643"
                    ]
                },
                {
                    "command": [
                        "split; inversion_clear 1; auto.",
                        "VernacExtend",
                        "4830b4d5012f508202936f3325fc7cc871b0bb11"
                    ]
                },
                {
                    "command": [
                        "constructor 2; rewrite <- H; auto.",
                        "VernacExtend",
                        "0a97c7145d4f363dabff8a2143af46aae5665e87"
                    ]
                },
                {
                    "command": [
                        "constructor 2; rewrite H; auto.",
                        "VernacExtend",
                        "108ab0788ffb9db8b0784b16d052e3455cc68fcf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_spec2",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "simple induction s; simpl; auto; unfold Equal.",
                        "VernacExtend",
                        "1ed6bbbcc6f9fa6fb7716f9c658944c6c3695e6a"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "intros x l Hrec f Hf.",
                        "VernacExtend",
                        "640ae8ab1dfdbf81b41c8dd0d01ed8619b9c9e63"
                    ]
                },
                {
                    "command": [
                        "generalize (Hrec f Hf); clear Hrec.",
                        "VernacExtend",
                        "edfbf7f56b4294ba552184fe7e871c7f3312210d"
                    ]
                },
                {
                    "command": [
                        "destruct (partition f l) as [s1 s2]; simpl; intros.",
                        "VernacExtend",
                        "cca8d466cee90e50011741a50e76fc9d22c46033"
                    ]
                },
                {
                    "command": [
                        "case (f x); simpl; auto.",
                        "VernacExtend",
                        "3274f77a1c0db6c5b7c60fabc30a88196a7ac643"
                    ]
                },
                {
                    "command": [
                        "split; inversion_clear 1; auto.",
                        "VernacExtend",
                        "4830b4d5012f508202936f3325fc7cc871b0bb11"
                    ]
                },
                {
                    "command": [
                        "constructor 2; rewrite <- H; auto.",
                        "VernacExtend",
                        "0a97c7145d4f363dabff8a2143af46aae5665e87"
                    ]
                },
                {
                    "command": [
                        "constructor 2; rewrite H; auto.",
                        "VernacExtend",
                        "108ab0788ffb9db8b0784b16d052e3455cc68fcf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_compat",
            "line_nb": 437,
            "steps": [
                {
                    "command": [
                        "repeat red; intros; rewrite H, H0; auto.",
                        "VernacExtend",
                        "8cee77020381c3970c5a4c91b44fe8a09759a168"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_strorder",
            "line_nb": 444,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros s (s1 & s2 & B1 & B2 & E1 & E2 & L).",
                        "VernacExtend",
                        "4a228519706bb6ce472ad5233e0048a77263e4ec"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- isok_iff in *.",
                        "VernacExtend",
                        "ba052d362138de99b60fd807184417391e2f1928"
                    ]
                },
                {
                    "command": [
                        "assert (eqlistA X.eq s1 s2).",
                        "VernacExtend",
                        "c2154cf7f274ac1dc3ae3412087b9f85a3cc2005"
                    ]
                },
                {
                    "command": [
                        "apply SortA_equivlistA_eqlistA with (ltA:=X.lt); auto using @ok with *.",
                        "VernacExtend",
                        "c30d08d2ca8bb1a80facca8c2ca5f1d862ac7046"
                    ]
                },
                {
                    "command": [
                        "transitivity s; auto.",
                        "VernacExtend",
                        "6ebf414dce7764edd4b133af8589d25f7a3dc6a2"
                    ]
                },
                {
                    "command": [
                        "symmetry; auto.",
                        "VernacExtend",
                        "72331728cf41281b1b06fee3e3b5ef380ea044a9"
                    ]
                },
                {
                    "command": [
                        "rewrite H in L.",
                        "VernacExtend",
                        "262ee5cbccd2e64d5bb7d7fd876a4e766948f0b1"
                    ]
                },
                {
                    "command": [
                        "apply (StrictOrder_Irreflexive s2); auto.",
                        "VernacExtend",
                        "102f5390a0529cfa2b9f3581cde5963ca3737daf"
                    ]
                },
                {
                    "command": [
                        "intros s1 s2 s3 (s1' & s2' & B1 & B2 & E1 & E2 & L12) (s2'' & s3' & B2' & B3 & E2' & E3 & L23).",
                        "VernacExtend",
                        "9078959d340d7de0d2dc0b5803d9946e95b9c6f6"
                    ]
                },
                {
                    "command": [
                        "exists s1', s3'.",
                        "VernacExtend",
                        "0b5aa07b56c00f6c4c7bf4769ee996c653015a30"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- isok_iff in *.",
                        "VernacExtend",
                        "ba052d362138de99b60fd807184417391e2f1928"
                    ]
                },
                {
                    "command": [
                        "do 4 (split; trivial).",
                        "VernacExtend",
                        "775f6e37f5a862d4a6a386b347f3dd2b8d2c7888"
                    ]
                },
                {
                    "command": [
                        "assert (eqlistA X.eq s2' s2'').",
                        "VernacExtend",
                        "f4fe892ff5419ae2711178137d3f258fc33ec46d"
                    ]
                },
                {
                    "command": [
                        "apply SortA_equivlistA_eqlistA with (ltA:=X.lt); auto using @ok with *.",
                        "VernacExtend",
                        "c30d08d2ca8bb1a80facca8c2ca5f1d862ac7046"
                    ]
                },
                {
                    "command": [
                        "transitivity s2; auto.",
                        "VernacExtend",
                        "394405d9c6e8e96932fb748642fc1718477cfe54"
                    ]
                },
                {
                    "command": [
                        "symmetry; auto.",
                        "VernacExtend",
                        "72331728cf41281b1b06fee3e3b5ef380ea044a9"
                    ]
                },
                {
                    "command": [
                        "transitivity s2'; auto.",
                        "VernacExtend",
                        "f3bf847c74797f4b4a1e1b8c9735f13dc79468f8"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_compat",
            "line_nb": 465,
            "steps": [
                {
                    "command": [
                        "intros s1 s2 E12 s3 s4 E34.",
                        "VernacExtend",
                        "600f01bebd3a5b34f52d26bd5b6057fb2fc5f0b3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros (s1' & s3' & B1 & B3 & E1 & E3 & LT).",
                        "VernacExtend",
                        "23d9f553dd8b5aec9df80d7332341c1a710e657b"
                    ]
                },
                {
                    "command": [
                        "exists s1', s3'; do 2 (split; trivial).",
                        "VernacExtend",
                        "360c4e7b254a4961b9793209c6b011f9bb13e8db"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "transitivity s1; auto.",
                        "VernacExtend",
                        "bb740eda98792dc760bb29909ddd523033cca08d"
                    ]
                },
                {
                    "command": [
                        "symmetry; auto.",
                        "VernacExtend",
                        "72331728cf41281b1b06fee3e3b5ef380ea044a9"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "transitivity s3; auto.",
                        "VernacExtend",
                        "d363df512363d965e2116b9f2b5606ff46eae514"
                    ]
                },
                {
                    "command": [
                        "symmetry; auto.",
                        "VernacExtend",
                        "72331728cf41281b1b06fee3e3b5ef380ea044a9"
                    ]
                },
                {
                    "command": [
                        "intros (s1' & s3' & B1 & B3 & E1 & E3 & LT).",
                        "VernacExtend",
                        "23d9f553dd8b5aec9df80d7332341c1a710e657b"
                    ]
                },
                {
                    "command": [
                        "exists s1', s3'; do 2 (split; trivial).",
                        "VernacExtend",
                        "360c4e7b254a4961b9793209c6b011f9bb13e8db"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "transitivity s2; auto.",
                        "VernacExtend",
                        "394405d9c6e8e96932fb748642fc1718477cfe54"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "transitivity s4; auto.",
                        "VernacExtend",
                        "6e16546cc8fcbc8023cda0b4e0c44e133ce51f73"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_spec_aux",
            "line_nb": 483,
            "steps": [
                {
                    "command": [
                        "induction s as [|x s IH]; intros [|x' s']; simpl; intuition.",
                        "VernacExtend",
                        "41b10657476a288d39a2015695b260671933fe28"
                    ]
                },
                {
                    "command": [
                        "elim_compare x x'; auto.",
                        "VernacExtend",
                        "defb8c112761f23e938b95db24cd2c9697a9360e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_spec",
            "line_nb": 487,
            "steps": [
                {
                    "command": [
                        "intros s s' Hs Hs'.",
                        "VernacExtend",
                        "0a2d58c6973bef3bdb6eea3f845efcfc2d7d36b3"
                    ]
                },
                {
                    "command": [
                        "destruct (compare_spec_aux s s'); constructor; auto.",
                        "VernacExtend",
                        "72e5df345c0701640848a63c8a4cbd69120b103a"
                    ]
                },
                {
                    "command": [
                        "exists s, s'; repeat split; auto using @ok.",
                        "VernacExtend",
                        "489724e2abbbf68eded9d52ce6672db91c6a76ac"
                    ]
                },
                {
                    "command": [
                        "exists s', s; repeat split; auto using @ok.",
                        "VernacExtend",
                        "c57a2856a2a0e2d1aa14c0b3fbca3ae86d66de56"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_leibniz_list",
            "line_nb": 512,
            "steps": [
                {
                    "command": [
                        "induction xs as [|x xs]; intros [|y ys] H; inversion H; [ | ].",
                        "VernacExtend",
                        "23bdb6b7bdb05adfb668367a0a0affd127504aa4"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply X.eq_leibniz; congruence.",
                        "VernacExtend",
                        "22bf61686b65bc8044d3d2f98e3053e6f9cbe8e6"
                    ]
                },
                {
                    "command": [
                        "apply IHxs; subst; assumption.",
                        "VernacExtend",
                        "d4840e8f5aadef8156512501f2b8dece2cfdce19"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_leibniz",
            "line_nb": 519,
            "steps": [
                {
                    "command": [
                        "intros [xs Hxs] [ys Hys] Heq.",
                        "VernacExtend",
                        "74cde5f59149918a146a6f81f827aa4c7a1984b3"
                    ]
                },
                {
                    "command": [
                        "change (equivlistA X.eq xs ys) in Heq.",
                        "VernacExtend",
                        "4022df8354db8baff400d8ac8a82074886906a01"
                    ]
                },
                {
                    "command": [
                        "assert (H : eqlistA X.eq xs ys).",
                        "VernacExtend",
                        "62fc0e8d38e1fd4c862e23b475e1bcb51f6d78f9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Raw.isok_iff in Hxs, Hys.",
                        "VernacExtend",
                        "9d75c67330a0b644a416bd27a759d08e6c3e5060"
                    ]
                },
                {
                    "command": [
                        "apply SortA_equivlistA_eqlistA with X.lt; auto with *.",
                        "VernacExtend",
                        "1fddd2e6a9de374967b9666ec3f35b5eb125711d"
                    ]
                },
                {
                    "command": [
                        "apply eq_leibniz_list in H.",
                        "VernacExtend",
                        "322a11392347ac4011250e29a5061a3c77d48b2f"
                    ]
                },
                {
                    "command": [
                        "subst ys.",
                        "VernacExtend",
                        "f75678c29e7ce3415bb9703c5ae9ce6105727a25"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply Eqdep_dec.eq_proofs_unicity.",
                        "VernacExtend",
                        "34395e283e6b275fd124a75c9206047cd6bad763"
                    ]
                },
                {
                    "command": [
                        "intros x y; destruct (bool_dec x y); tauto.",
                        "VernacExtend",
                        "27f41389d24b00d4a3a66edcc050f388dc97c5f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}