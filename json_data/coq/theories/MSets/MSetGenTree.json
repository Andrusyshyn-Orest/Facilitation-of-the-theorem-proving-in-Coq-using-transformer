{
    "filename": "theories/MSets/MSetGenTree.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import FunInd Orders OrdersFacts MSetInterface PeanoNat.",
            "VernacRequire",
            "670db2cdb13c62c7d8a9a8e810e5b3ff78e20664"
        ],
        [
            "Local Open Scope list_scope.",
            "VernacOpenCloseScope",
            "b7ffbc8664ccf2e54673194b986563efc763189d"
        ],
        [
            "Local Open Scope lazy_bool_scope.",
            "VernacOpenCloseScope",
            "82821dc944d698b2d14658b321a7dfca6f09554d"
        ],
        [
            "Local Unset Elimination Schemes.",
            "VernacUnsetOption",
            "2fc2e4d2065c5e8b5b407b11414df6bebc03d0a8"
        ],
        [
            "Module Type InfoTyp.",
            "VernacDeclareModuleType",
            "65f4deab566caf016352ece66c4f2d67738dad7d"
        ],
        [
            "Parameter t : Set.",
            "VernacAssumption",
            "76f59c256867a995da6d0a99f0a6e736749fbc7b"
        ],
        [
            "End InfoTyp.",
            "VernacEndSegment",
            "df5a5ff15dcbb1e89ce6d85a645337f50131701f"
        ],
        [
            "Module Type Ops (X:OrderedType)(Info:InfoTyp).",
            "VernacDeclareModuleType",
            "a0959e3418358715df36f30b0cce229a2c5bdaff"
        ],
        [
            "Definition elt := X.t.",
            "VernacDefinition",
            "1e5220371e2feaf15d74e257297a89cf424636f8"
        ],
        [
            "Hint Transparent elt.",
            "VernacHints",
            "aec456f6e4aece4d55bd9bc5ac2fcb5562952eb3"
        ],
        [
            "Inductive tree : Type := | Leaf : tree | Node : Info.t -> tree -> X.t -> tree -> tree.",
            "VernacInductive",
            "b3cadec596f3da237638e661da23fd5be1dd2c69"
        ],
        [
            "Definition empty := Leaf.",
            "VernacDefinition",
            "63395e1518cebe061823ccfe7da24dc611f2356f"
        ],
        [
            "Definition is_empty t := match t with | Leaf => true | _ => false end.",
            "VernacDefinition",
            "e671ea0eac0aa5c53915af079dc04767a197f8cc"
        ],
        [
            "Fixpoint mem x t := match t with | Leaf => false | Node _ l k r => match X.compare x k with | Lt => mem x l | Eq => true | Gt => mem x r end end.",
            "VernacFixpoint",
            "4a947122ad074d8d8a8d5a89e6b2cfe3824fa5f7"
        ],
        [
            "Fixpoint min_elt (t : tree) : option elt := match t with | Leaf => None | Node _ Leaf x r => Some x | Node _ l x r => min_elt l end.",
            "VernacFixpoint",
            "59d9244a59b39b1db7f505a03d18612785dba3ca"
        ],
        [
            "Fixpoint max_elt (t : tree) : option elt := match t with | Leaf => None | Node _ l x Leaf => Some x | Node _ l x r => max_elt r end.",
            "VernacFixpoint",
            "4d429f6d59444b4dc73cfc329b31b770757f4d9d"
        ],
        [
            "Definition choose := min_elt.",
            "VernacDefinition",
            "cde4586c79b1ad2d6e92e570f7da0102638b1185"
        ],
        [
            "Fixpoint fold {A: Type} (f: elt -> A -> A) (t: tree) (base: A) : A := match t with | Leaf => base | Node _ l x r => fold f r (f x (fold f l base)) end.",
            "VernacFixpoint",
            "0ae50d1ea91d31c66ae33904d952daf624a21ba6"
        ],
        [
            "Fixpoint elements_aux acc s := match s with | Leaf => acc | Node _ l x r => elements_aux (x :: elements_aux acc r) l end.",
            "VernacFixpoint",
            "9f136148aec7cb19574d6521187d03503d19e556"
        ],
        [
            "Definition elements := elements_aux nil.",
            "VernacDefinition",
            "c48e25d1f68f4a0cfbf219ced502ef2793958dce"
        ],
        [
            "Fixpoint rev_elements_aux acc s := match s with | Leaf => acc | Node _ l x r => rev_elements_aux (x :: rev_elements_aux acc l) r end.",
            "VernacFixpoint",
            "3c5668885703b1ebade6d370fe05ccf44c864649"
        ],
        [
            "Definition rev_elements := rev_elements_aux nil.",
            "VernacDefinition",
            "5c51ed20d0495d24e458b83ed831b27929e13534"
        ],
        [
            "Fixpoint cardinal (s : tree) : nat := match s with | Leaf => 0 | Node _ l _ r => S (cardinal l + cardinal r) end.",
            "VernacFixpoint",
            "444b38345101297aad158fdc27557e115eb410b6"
        ],
        [
            "Fixpoint maxdepth s := match s with | Leaf => 0 | Node _ l _ r => S (max (maxdepth l) (maxdepth r)) end.",
            "VernacFixpoint",
            "583db34e3e619c609923542bb4b2be3f9e5240aa"
        ],
        [
            "Fixpoint mindepth s := match s with | Leaf => 0 | Node _ l _ r => S (min (mindepth l) (mindepth r)) end.",
            "VernacFixpoint",
            "65fb9ea8db94cbcac653041e958681e53865f65b"
        ],
        [
            "Fixpoint for_all (f:elt->bool) s := match s with | Leaf => true | Node _ l x r => f x &&& for_all f l &&& for_all f r end.",
            "VernacFixpoint",
            "2815e1180bb2e7d73a866a845024b8c1a2fb356d"
        ],
        [
            "Fixpoint exists_ (f:elt->bool) s := match s with | Leaf => false | Node _ l x r => f x ||| exists_ f l ||| exists_ f r end.",
            "VernacFixpoint",
            "5d800ae2193fe6c6e38e6e0977ddfa745972f4a9"
        ],
        [
            "Inductive enumeration := | End : enumeration | More : elt -> tree -> enumeration -> enumeration.",
            "VernacInductive",
            "121bc34f0cb77761e04f75a2d2034d9155cb37ec"
        ],
        [
            "Fixpoint cons s e : enumeration := match s with | Leaf => e | Node _ l x r => cons l (More x r e) end.",
            "VernacFixpoint",
            "1763b289fe3a218d566276174fbb8af85c37b442"
        ],
        [
            "Definition compare_more x1 (cont:enumeration->comparison) e2 := match e2 with | End => Gt | More x2 r2 e2 => match X.compare x1 x2 with | Eq => cont (cons r2 e2) | Lt => Lt | Gt => Gt end end.",
            "VernacDefinition",
            "6d3500cfe2d7eaa1cd83eec0975b103c85b53eee"
        ],
        [
            "Fixpoint compare_cont s1 (cont:enumeration->comparison) e2 := match s1 with | Leaf => cont e2 | Node _ l1 x1 r1 => compare_cont l1 (compare_more x1 (compare_cont r1 cont)) e2 end.",
            "VernacFixpoint",
            "f222cf2671dffa471c11ac9951844db9a67ecc73"
        ],
        [
            "Definition compare_end e2 := match e2 with End => Eq | _ => Lt end.",
            "VernacDefinition",
            "980cf3e3742f0d46d98f4ba0d57efd572487e497"
        ],
        [
            "Definition compare s1 s2 := compare_cont s1 compare_end (cons s2 End).",
            "VernacDefinition",
            "6d5e97b8106b24e502b409811525a6f8a494863f"
        ],
        [
            "Definition equal s1 s2 := match compare s1 s2 with Eq => true | _ => false end.",
            "VernacDefinition",
            "e8965dd995ce0c7cc163483d0b6e69f7522f1487"
        ],
        [
            "Fixpoint subsetl (subset_l1 : tree -> bool) x1 s2 : bool := match s2 with | Leaf => false | Node _ l2 x2 r2 => match X.compare x1 x2 with | Eq => subset_l1 l2 | Lt => subsetl subset_l1 x1 l2 | Gt => mem x1 r2 &&& subset_l1 s2 end end.",
            "VernacFixpoint",
            "bfc7b44de1b4a9b18b44b37d3ce712491a2873bc"
        ],
        [
            "Fixpoint subsetr (subset_r1 : tree -> bool) x1 s2 : bool := match s2 with | Leaf => false | Node _ l2 x2 r2 => match X.compare x1 x2 with | Eq => subset_r1 r2 | Lt => mem x1 l2 &&& subset_r1 s2 | Gt => subsetr subset_r1 x1 r2 end end.",
            "VernacFixpoint",
            "e71a4868770c997c98000570e2e798e17fea9272"
        ],
        [
            "Fixpoint subset s1 s2 : bool := match s1, s2 with | Leaf, _ => true | Node _ _ _ _, Leaf => false | Node _ l1 x1 r1, Node _ l2 x2 r2 => match X.compare x1 x2 with | Eq => subset l1 l2 &&& subset r1 r2 | Lt => subsetl (subset l1) x1 l2 &&& subset r1 s2 | Gt => subsetr (subset r1) x1 r2 &&& subset l1 s2 end end.",
            "VernacFixpoint",
            "b478f5570704562063dcc78a0ccfd8f4b826dd88"
        ],
        [
            "End Ops.",
            "VernacEndSegment",
            "c7e50ec7301a1cd71f0d4a4ff2dfc887f351fa21"
        ],
        [
            "Module Type Props (X:OrderedType)(Info:InfoTyp)(Import M:Ops X Info).",
            "VernacDeclareModuleType",
            "3f44ced2584ba4a71db5188c134701d4b9ece2f8"
        ],
        [
            "Inductive InT (x : elt) : tree -> Prop := | IsRoot : forall c l r y, X.eq x y -> InT x (Node c l y r) | InLeft : forall c l r y, InT x l -> InT x (Node c l y r) | InRight : forall c l r y, InT x r -> InT x (Node c l y r).",
            "VernacInductive",
            "77ef93e0452d27333bc6644d0fe28629796befc4"
        ],
        [
            "Definition In := InT.",
            "VernacDefinition",
            "6b3adfba210a758b8756fef6ce59d0a00b7340de"
        ],
        [
            "Definition Equal s s' := forall a : elt, InT a s <-> InT a s'.",
            "VernacDefinition",
            "eadbb3acda5d8498f14c23927748d64fede3665e"
        ],
        [
            "Definition Subset s s' := forall a : elt, InT a s -> InT a s'.",
            "VernacDefinition",
            "faccae8848a0d1dd0e7f2fa72a709bda76b7ba02"
        ],
        [
            "Definition Empty s := forall a : elt, ~ InT a s.",
            "VernacDefinition",
            "209212ce47cdc894cb0b749c58d330e204e9cb53"
        ],
        [
            "Definition For_all (P : elt -> Prop) s := forall x, InT x s -> P x.",
            "VernacDefinition",
            "4d9f71ec74c6abe7ce81bffd774836a7bb3a5a72"
        ],
        [
            "Definition Exists (P : elt -> Prop) s := exists x, InT x s /\\ P x.",
            "VernacDefinition",
            "6e79e7e4e3a38314ef06ab0023b4daa55e455885"
        ],
        [
            "Definition lt_tree x s := forall y, InT y s -> X.lt y x.",
            "VernacDefinition",
            "08ea28c293432b2db4fa59fde59d03d545ccd25a"
        ],
        [
            "Definition gt_tree x s := forall y, InT y s -> X.lt x y.",
            "VernacDefinition",
            "b09e5eb838ec25950aadd7c4d75ad363ef1fd3a1"
        ],
        [
            "Inductive bst : tree -> Prop := | BSLeaf : bst Leaf | BSNode : forall c x l r, bst l -> bst r -> lt_tree x l -> gt_tree x r -> bst (Node c l x r).",
            "VernacInductive",
            "eee81869f0c18bc779b3414a5dec12ff2aa25927"
        ],
        [
            "Definition IsOk := bst.",
            "VernacDefinition",
            "0e5b6b3c9ef5a9375042c40a49aad8584bc2d479"
        ],
        [
            "Class Ok (s:tree) : Prop := ok : bst s.",
            "VernacInductive",
            "ac3d421b51e529f7452e03b33a98cedf5358c1a9"
        ],
        [
            "Instance bst_Ok s (Hs : bst s) : Ok s := { ok := Hs }.",
            "VernacInstance",
            "b0314ab01cc573be9c6d6126dcc95ea2cf45a69e"
        ],
        [
            "Fixpoint ltb_tree x s := match s with | Leaf => true | Node _ l y r => match X.compare x y with | Gt => ltb_tree x l && ltb_tree x r | _ => false end end.",
            "VernacFixpoint",
            "5e94bbfa190890de866c7ba4545d54eebb329ad8"
        ],
        [
            "Fixpoint gtb_tree x s := match s with | Leaf => true | Node _ l y r => match X.compare x y with | Lt => gtb_tree x l && gtb_tree x r | _ => false end end.",
            "VernacFixpoint",
            "a372c495947f71197ca3e1edaac80a2ef772d36b"
        ],
        [
            "Fixpoint isok s := match s with | Leaf => true | Node _ l x r => isok l && isok r && ltb_tree x l && gtb_tree x r end.",
            "VernacFixpoint",
            "dee5b4fbdc7f01b3fad8d5ce940adec2f656d030"
        ],
        [
            "Module Import MX := OrderedTypeFacts X.",
            "VernacDefineModule",
            "bf745ef45e505ded22c270db23f36982dfd71874"
        ],
        [
            "Scheme tree_ind := Induction for tree Sort Prop.",
            "VernacScheme",
            "d1ef39704fae617edc12788ab0b840e1f1ca4bd8"
        ],
        [
            "Scheme bst_ind := Induction for bst Sort Prop.",
            "VernacScheme",
            "18df1e4b0314dad85c3833ad705b25a93c165ece"
        ],
        [
            "Local Hint Resolve MX.eq_refl MX.eq_trans MX.lt_trans ok.",
            "VernacHints",
            "929c189c4d3932cdcab91c10efb2087308b4c4d0"
        ],
        [
            "Local Hint Immediate MX.eq_sym.",
            "VernacHints",
            "c79a666ae0946cb5adeade4ca113bfb2fe7c413d"
        ],
        [
            "Local Hint Unfold In lt_tree gt_tree.",
            "VernacHints",
            "ebc0e1dd0706ff78f28920177b545f2657f31768"
        ],
        [
            "Local Hint Constructors InT bst.",
            "VernacHints",
            "2edd66ea7d6802a797bb7bd60fa7cb8652f6d3dc"
        ],
        [
            "Local Hint Unfold Ok.",
            "VernacHints",
            "50a80325166c4ce59067bf26c02a009f8c6b6f8a"
        ],
        [
            "Ltac clear_inversion H := inversion H; clear H; subst.",
            "VernacExtend",
            "454b08f1618d952780faa1b94d68c73a3db1a1fe"
        ],
        [
            "Ltac inv_ok := match goal with | H:Ok (Node _ _ _ _) |- _ => clear_inversion H; inv_ok | H:Ok Leaf |- _ => clear H; inv_ok | H:bst ?x |- _ => change (Ok x) in H; inv_ok | _ => idtac end.",
            "VernacExtend",
            "13111ca6b469c82b88b7f1ee44a3efb9f77448ba"
        ],
        [
            "Ltac is_tree_constr c := match c with | Leaf => idtac | Node _ _ _ _ => idtac | _ => fail end.",
            "VernacExtend",
            "a0cb6be447b317dd88cddc7918c8f9cb99b09b83"
        ],
        [
            "Ltac invtree f := match goal with | H:f ?s |- _ => is_tree_constr s; clear_inversion H; invtree f | H:f _ ?s |- _ => is_tree_constr s; clear_inversion H; invtree f | H:f _ _ ?s |- _ => is_tree_constr s; clear_inversion H; invtree f | _ => idtac end.",
            "VernacExtend",
            "1c60255df9eec16696b6fc21ba87265611cf8bb7"
        ],
        [
            "Ltac inv := inv_ok; invtree InT.",
            "VernacExtend",
            "13fabe40b4974f56ee633eae47fcd13fe3bedb02"
        ],
        [
            "Ltac intuition_in := repeat (intuition; inv).",
            "VernacExtend",
            "cef28b4f41695f36ab42a19e31e7817984a83027"
        ],
        [
            "Ltac order := match goal with | U: lt_tree _ ?s, V: InT _ ?s |- _ => generalize (U _ V); clear U; order | U: gt_tree _ ?s, V: InT _ ?s |- _ => generalize (U _ V); clear U; order | _ => MX.order end.",
            "VernacExtend",
            "47c7e64f4054f032f73155c773cb761cca1b7c10"
        ],
        [
            "Lemma ltb_tree_iff : forall x s, lt_tree x s <-> ltb_tree x s = true.",
            "VernacStartTheoremProof",
            "6d76e790c2584f637b8a99e5ea6acd81ce2f2394"
        ],
        [
            "induction s as [|c l IHl y r IHr]; simpl.",
            "VernacExtend",
            "8eb8bae15d3b43ae08908730414f304dab5d046b"
        ],
        [
            "unfold lt_tree; intuition_in.",
            "VernacExtend",
            "a6f2eea21ea8a90abb0b7c5b15925decc75e5374"
        ],
        [
            "elim_compare x y.",
            "VernacExtend",
            "805b4c081c4333d037a6dfe92aceb9d0d17ae720"
        ],
        [
            "split; intros; try discriminate.",
            "VernacExtend",
            "9af7c0a319462b411e6e1e007f1e4df7b4bc57a7"
        ],
        [
            "assert (X.lt y x) by auto.",
            "VernacExtend",
            "2fcd4f0a9fee4f633a9d2595ce882626fef03603"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "split; intros; try discriminate.",
            "VernacExtend",
            "9af7c0a319462b411e6e1e007f1e4df7b4bc57a7"
        ],
        [
            "assert (X.lt y x) by auto.",
            "VernacExtend",
            "2fcd4f0a9fee4f633a9d2595ce882626fef03603"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "rewrite !andb_true_iff, <-IHl, <-IHr.",
            "VernacExtend",
            "671921e6505bdc09172e99ad449666737db71137"
        ],
        [
            "unfold lt_tree; intuition_in; order.",
            "VernacExtend",
            "31062ba8706bcec783f52140ab7a0de170e6fdd2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtb_tree_iff : forall x s, gt_tree x s <-> gtb_tree x s = true.",
            "VernacStartTheoremProof",
            "b46c4c3e01dd93535a3839036116987b12911432"
        ],
        [
            "induction s as [|c l IHl y r IHr]; simpl.",
            "VernacExtend",
            "8eb8bae15d3b43ae08908730414f304dab5d046b"
        ],
        [
            "unfold gt_tree; intuition_in.",
            "VernacExtend",
            "43d3579ae36dad8ba83e63e30a5f2e3a121431a1"
        ],
        [
            "elim_compare x y.",
            "VernacExtend",
            "805b4c081c4333d037a6dfe92aceb9d0d17ae720"
        ],
        [
            "split; intros; try discriminate.",
            "VernacExtend",
            "9af7c0a319462b411e6e1e007f1e4df7b4bc57a7"
        ],
        [
            "assert (X.lt x y) by auto.",
            "VernacExtend",
            "8f34292191191d816d050cfb0acc1c20e26f2189"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "rewrite !andb_true_iff, <-IHl, <-IHr.",
            "VernacExtend",
            "671921e6505bdc09172e99ad449666737db71137"
        ],
        [
            "unfold gt_tree; intuition_in; order.",
            "VernacExtend",
            "d8f7d66c5ab381c88c2dab12f9d3b0cf5a2cd143"
        ],
        [
            "split; intros; try discriminate.",
            "VernacExtend",
            "9af7c0a319462b411e6e1e007f1e4df7b4bc57a7"
        ],
        [
            "assert (X.lt x y) by auto.",
            "VernacExtend",
            "8f34292191191d816d050cfb0acc1c20e26f2189"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma isok_iff : forall s, Ok s <-> isok s = true.",
            "VernacStartTheoremProof",
            "bf0d6a547f8058c6457204d9cfe15cc7c989d5d4"
        ],
        [
            "induction s as [|c l IHl y r IHr]; simpl.",
            "VernacExtend",
            "8eb8bae15d3b43ae08908730414f304dab5d046b"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "rewrite !andb_true_iff, <- IHl, <-IHr, <- ltb_tree_iff, <- gtb_tree_iff.",
            "VernacExtend",
            "50f98a6ea00e015557625411969ee92a2171892e"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance isok_Ok s : isok s = true -> Ok s | 10.",
            "VernacInstance",
            "bb3e80af333a817e7d8c33575435f41c7faa6ada"
        ],
        [
            "intros; apply <- isok_iff; auto.",
            "VernacExtend",
            "d8d1fd103ca15f33675f4824222300447c070f59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_1 : forall s x y, X.eq x y -> InT x s -> InT y s.",
            "VernacStartTheoremProof",
            "3783f6e008398ca2e5a01ca9d91924a64e58936d"
        ],
        [
            "induction s; simpl; intuition_in; eauto.",
            "VernacExtend",
            "3371e85cca7cb8d1f61a6ea6463fa3b3ee544d20"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Hint Immediate In_1.",
            "VernacHints",
            "2e59330844520f01f758cb714fa39e0d0b593887"
        ],
        [
            "Instance In_compat : Proper (X.eq==>eq==>iff) InT.",
            "VernacInstance",
            "74d4bd6b98c2927898c7b835b400269446b686cb"
        ],
        [
            "apply proper_sym_impl_iff_2; auto with *.",
            "VernacExtend",
            "eee994524435b39e51e978935650dd48d24678a0"
        ],
        [
            "repeat red; intros; subst.",
            "VernacExtend",
            "b0b5eda6eee5c9a2bda70138af8f7ee77f02a561"
        ],
        [
            "apply In_1 with x; auto.",
            "VernacExtend",
            "402590a78da6b45b9141619a6a4e9b4f81260919"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_node_iff : forall c l x r y, InT y (Node c l x r) <-> InT y l \\/ X.eq y x \\/ InT y r.",
            "VernacStartTheoremProof",
            "635d70cbb5b1f1df7705321d898e1c8e662d4c85"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_leaf_iff : forall x, InT x Leaf <-> False.",
            "VernacStartTheoremProof",
            "ce85b93284d2ead9a5f957e6ab3f4106bf44f376"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_leaf : forall x : elt, lt_tree x Leaf.",
            "VernacStartTheoremProof",
            "7b5e92d5c95b86d1b7e2e5660cc17b069bf1680b"
        ],
        [
            "red; inversion 1.",
            "VernacExtend",
            "1448138ad9c9a257a6bd7c02ce1576e92ee8afa8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gt_leaf : forall x : elt, gt_tree x Leaf.",
            "VernacStartTheoremProof",
            "670b9585f55a0140ec5e1d9e74213f5c0adebd08"
        ],
        [
            "red; inversion 1.",
            "VernacExtend",
            "1448138ad9c9a257a6bd7c02ce1576e92ee8afa8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_tree_node : forall (x y : elt) (l r : tree) (i : Info.t), lt_tree x l -> lt_tree x r -> X.lt y x -> lt_tree x (Node i l y r).",
            "VernacStartTheoremProof",
            "b1f5121450d30f764e4e227339c281d8f548ccff"
        ],
        [
            "unfold lt_tree; intuition_in; order.",
            "VernacExtend",
            "31062ba8706bcec783f52140ab7a0de170e6fdd2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gt_tree_node : forall (x y : elt) (l r : tree) (i : Info.t), gt_tree x l -> gt_tree x r -> X.lt x y -> gt_tree x (Node i l y r).",
            "VernacStartTheoremProof",
            "68b0bbded0e546e141574d4149a0bb4680d6b896"
        ],
        [
            "unfold gt_tree; intuition_in; order.",
            "VernacExtend",
            "d8f7d66c5ab381c88c2dab12f9d3b0cf5a2cd143"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Hint Resolve lt_leaf gt_leaf lt_tree_node gt_tree_node.",
            "VernacHints",
            "1e0818cb5e2179448cdc59c6371888baad07b77d"
        ],
        [
            "Lemma lt_tree_not_in : forall (x : elt) (t : tree), lt_tree x t -> ~ InT x t.",
            "VernacStartTheoremProof",
            "3683010eb4e13b6bba3b1ab285a74d3d6f10b294"
        ],
        [
            "intros; intro; order.",
            "VernacExtend",
            "8b573b6f98159f25a43e4c9a720249d96788a463"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_tree_trans : forall x y, X.lt x y -> forall t, lt_tree x t -> lt_tree y t.",
            "VernacStartTheoremProof",
            "8a833b1711daae565095cdbc91778accba800851"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gt_tree_not_in : forall (x : elt) (t : tree), gt_tree x t -> ~ InT x t.",
            "VernacStartTheoremProof",
            "697ed9c698e50084ea2eb963ffe39a7404e28a2c"
        ],
        [
            "intros; intro; order.",
            "VernacExtend",
            "8b573b6f98159f25a43e4c9a720249d96788a463"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gt_tree_trans : forall x y, X.lt y x -> forall t, gt_tree x t -> gt_tree y t.",
            "VernacStartTheoremProof",
            "30b14ea3c749fefaf11b31618cc6b5ca91683143"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance lt_tree_compat : Proper (X.eq ==> Logic.eq ==> iff) lt_tree.",
            "VernacInstance",
            "a80689bdad01d33a1dc82af11c833a6e057c2d90"
        ],
        [
            "apply proper_sym_impl_iff_2; auto.",
            "VernacExtend",
            "40a841d0493791a82ccf0cdb0ae07e074b1172e5"
        ],
        [
            "intros x x' Hx s s' Hs H y Hy.",
            "VernacExtend",
            "9568d184d29866e14a0031e92e7a77b64ad79665"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "setoid_rewrite <- Hx; auto.",
            "VernacExtend",
            "91cb510cb15e7ad2ad666b8a25915bdc50cf5ef7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance gt_tree_compat : Proper (X.eq ==> Logic.eq ==> iff) gt_tree.",
            "VernacInstance",
            "938530fb42743f88234fcdf079f4479ed56970c2"
        ],
        [
            "apply proper_sym_impl_iff_2; auto.",
            "VernacExtend",
            "40a841d0493791a82ccf0cdb0ae07e074b1172e5"
        ],
        [
            "intros x x' Hx s s' Hs H y Hy.",
            "VernacExtend",
            "9568d184d29866e14a0031e92e7a77b64ad79665"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "setoid_rewrite <- Hx; auto.",
            "VernacExtend",
            "91cb510cb15e7ad2ad666b8a25915bdc50cf5ef7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Hint Resolve lt_tree_not_in lt_tree_trans gt_tree_not_in gt_tree_trans.",
            "VernacHints",
            "9bfedf822cb9439e821044f23eb6f3741fe5e366"
        ],
        [
            "Ltac induct s x := induction s as [|i l IHl x' r IHr]; simpl; intros; [|elim_compare x x'; intros; inv].",
            "VernacExtend",
            "6b8f416438a88cfa297f2b3eb14e044b3a2be79b"
        ],
        [
            "Ltac auto_tc := auto with typeclass_instances.",
            "VernacExtend",
            "20cabd949dfe3298ed9e78dab62d19acdb1309c0"
        ],
        [
            "Ltac ok := inv; change bst with Ok in *; match goal with | |- Ok (Node _ _ _ _) => constructor; auto_tc; ok | |- lt_tree _ (Node _ _ _ _) => apply lt_tree_node; ok | |- gt_tree _ (Node _ _ _ _) => apply gt_tree_node; ok | _ => eauto with typeclass_instances end.",
            "VernacExtend",
            "48e8af0ad93632719e520889e2693c838919a2e3"
        ],
        [
            "Lemma empty_spec : Empty empty.",
            "VernacStartTheoremProof",
            "ac5b3ce6175ebcbfcc02350712ac2ce9336054ff"
        ],
        [
            "intros x H.",
            "VernacExtend",
            "a0cd74b85812810ce5a78a540bad98f664bd4842"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance empty_ok : Ok empty.",
            "VernacInstance",
            "7daf8c49c99d78629b956bc41fe68036ff6afc9e"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_empty_spec : forall s, is_empty s = true <-> Empty s.",
            "VernacStartTheoremProof",
            "7edc8c77fb986693e39c76cfa4dfebbaa3c4d042"
        ],
        [
            "destruct s as [|c r x l]; simpl; auto.",
            "VernacExtend",
            "fefc30d6b67b13edf3806979c065fba8ad85d890"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "intros _ x H.",
            "VernacExtend",
            "e14d7147a69a993c05f8498dee3df428f7af9b69"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "try discriminate.",
            "VernacExtend",
            "de2bc7a3bfd97e6b5378596411010f23f6c9ff06"
        ],
        [
            "intro H; elim (H x); auto.",
            "VernacExtend",
            "f91de508a9445e0731b43bfb3936d898ee1cf36d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_spec : forall s x `{Ok s}, mem x s = true <-> InT x s.",
            "VernacStartTheoremProof",
            "a94a9c9ff235e174fe9d04f6e031ac9b503c0a83"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "induct s x; now auto.",
            "VernacExtend",
            "6f91e1e3b624a94343e801f569c7d0c7308ede70"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "induct s x; intuition_in; order.",
            "VernacExtend",
            "541478be34515fe06b7b45ec0d11197b279fe5ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Functional Scheme min_elt_ind := Induction for min_elt Sort Prop.",
            "VernacExtend",
            "5157dc2e2b0ef153e070bda7bcf753b9e74903d5"
        ],
        [
            "Functional Scheme max_elt_ind := Induction for max_elt Sort Prop.",
            "VernacExtend",
            "2f56369a36fcc82b34f58ff7f48b5d38b471f4df"
        ],
        [
            "Lemma min_elt_spec1 s x : min_elt s = Some x -> InT x s.",
            "VernacStartTheoremProof",
            "368a3acd8aa7e830a8086e3740bc6cd2fef13085"
        ],
        [
            "functional induction (min_elt s); auto; inversion 1; auto.",
            "VernacExtend",
            "863ff9b92e776ed34bf1d98403361515a723f404"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_elt_spec2 s x y `{Ok s} : min_elt s = Some x -> InT y s -> ~ X.lt y x.",
            "VernacStartTheoremProof",
            "49ddabb78e3224d25a13ee6d67c7c79e6c24682d"
        ],
        [
            "revert y.",
            "VernacExtend",
            "5484f0bbfb13c7c22a5bdc05a6e87355be4a9cff"
        ],
        [
            "functional induction (min_elt s); try rename _x0 into r; try rename _x2 into l1, _x3 into x1, _x4 into r1.",
            "VernacExtend",
            "e5dc6adf6bc08408fdf6479c571789c3a714e5d0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros y V W.",
            "VernacExtend",
            "0711ef487b3e7b79e108f7f82598993691f52932"
        ],
        [
            "inversion V; clear V; subst.",
            "VernacExtend",
            "f5130d5aca98edbbe80b05dc693f1ed00a626462"
        ],
        [
            "inv; order.",
            "VernacExtend",
            "4f42bfb0abc30600b382a6c1992d076678737bdf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros; inv; auto.",
            "VernacExtend",
            "1e912157e0cfa8bdc19a9dc0688cb9193477dda4"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assert (X.lt x x0) by (apply H8; apply min_elt_spec1; auto).",
            "VernacExtend",
            "e038699f737a83a41fa6cf307d94b092329bf085"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assert (X.lt x1 x0) by auto.",
            "VernacExtend",
            "21bbb1c6d329b3dc0f0b91b621a33ac18b2b1dc2"
        ],
        [
            "assert (~X.lt x1 x) by auto.",
            "VernacExtend",
            "1e9d2ee52b9abc3821abd68beca4b9a6b24b0bea"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_elt_spec3 s : min_elt s = None -> Empty s.",
            "VernacStartTheoremProof",
            "a01490a0ed22e48e2373d39503f76dfa33e9890e"
        ],
        [
            "functional induction (min_elt s).",
            "VernacExtend",
            "399a5f6e6d0def2aeee797a32799d5278b792c42"
        ],
        [
            "red; red; inversion 2.",
            "VernacExtend",
            "1edc5142e6e7aa262223d1bf1b6c92a7b846147e"
        ],
        [
            "inversion 1.",
            "VernacExtend",
            "9152817da0dc28ba4701e3ff01c293af28a1059f"
        ],
        [
            "intro H0.",
            "VernacExtend",
            "33135fa360f1c5b700715c0dfac0804c96d2fa77"
        ],
        [
            "destruct (IHo H0 _x3); auto.",
            "VernacExtend",
            "25bd6a33def5ccfad18e9592e8895cac9841579b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_elt_spec1 s x : max_elt s = Some x -> InT x s.",
            "VernacStartTheoremProof",
            "3f80acead713fd7f88311e569d0f1940b04effcc"
        ],
        [
            "functional induction (max_elt s); auto; inversion 1; auto.",
            "VernacExtend",
            "848bac94f4542ab5927450d8669541cc1ad57f2e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_elt_spec2 s x y `{Ok s} : max_elt s = Some x -> InT y s -> ~ X.lt x y.",
            "VernacStartTheoremProof",
            "543e9fcd5ee8085265ce3f4a2b3fb0ecdbbb8ac4"
        ],
        [
            "revert y.",
            "VernacExtend",
            "5484f0bbfb13c7c22a5bdc05a6e87355be4a9cff"
        ],
        [
            "functional induction (max_elt s); try rename _x0 into r; try rename _x2 into l1, _x3 into x1, _x4 into r1.",
            "VernacExtend",
            "b41bb02d7da74de77b4233161d2c8ec8f83349df"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros y V W.",
            "VernacExtend",
            "0711ef487b3e7b79e108f7f82598993691f52932"
        ],
        [
            "inversion V; clear V; subst.",
            "VernacExtend",
            "f5130d5aca98edbbe80b05dc693f1ed00a626462"
        ],
        [
            "inv; order.",
            "VernacExtend",
            "4f42bfb0abc30600b382a6c1992d076678737bdf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros; inv; auto.",
            "VernacExtend",
            "1e912157e0cfa8bdc19a9dc0688cb9193477dda4"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assert (X.lt x0 x) by (apply H9; apply max_elt_spec1; auto).",
            "VernacExtend",
            "6f6f88c51a8a8786575ae5e536df6b7fcf4239e6"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assert (X.lt x0 x1) by auto.",
            "VernacExtend",
            "dd1e2eabc9bc2d02b6d4fe6ff3e966db8b783b43"
        ],
        [
            "assert (~X.lt x x1) by auto.",
            "VernacExtend",
            "42b5f4f021e70b26e5a1dc6ab3160df3069c0a43"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_elt_spec3 s : max_elt s = None -> Empty s.",
            "VernacStartTheoremProof",
            "40135985d2dc24c417edbc22215741a33709cbbd"
        ],
        [
            "functional induction (max_elt s).",
            "VernacExtend",
            "8105e2be820050c7be06f28e73743e8b4fda7679"
        ],
        [
            "red; red; inversion 2.",
            "VernacExtend",
            "1edc5142e6e7aa262223d1bf1b6c92a7b846147e"
        ],
        [
            "inversion 1.",
            "VernacExtend",
            "9152817da0dc28ba4701e3ff01c293af28a1059f"
        ],
        [
            "intro H0.",
            "VernacExtend",
            "33135fa360f1c5b700715c0dfac0804c96d2fa77"
        ],
        [
            "destruct (IHo H0 _x3); auto.",
            "VernacExtend",
            "25bd6a33def5ccfad18e9592e8895cac9841579b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma choose_spec1 : forall s x, choose s = Some x -> InT x s.",
            "VernacStartTheoremProof",
            "b5df94edbb000762a7c0ce8f30975b5f125c1ba8"
        ],
        [
            "exact min_elt_spec1.",
            "VernacExtend",
            "c75b3a6ee3e4e7a00349a5c2c530f10b3a3ab976"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma choose_spec2 : forall s, choose s = None -> Empty s.",
            "VernacStartTheoremProof",
            "39c15b03e5ad4cb8ca5455f7036247f6cab58067"
        ],
        [
            "exact min_elt_spec3.",
            "VernacExtend",
            "0e7648a2bd84e2a10c2f33a11d481fbba12b3bb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma choose_spec3 : forall s s' x x' `{Ok s, Ok s'}, choose s = Some x -> choose s' = Some x' -> Equal s s' -> X.eq x x'.",
            "VernacStartTheoremProof",
            "bd10b7e7499312e4022ffd514917dbc8c5b044ff"
        ],
        [
            "unfold choose, Equal; intros s s' x x' Hb Hb' Hx Hx' H.",
            "VernacExtend",
            "847ca0f24d42d9e408092e07727454dc66c99a3c"
        ],
        [
            "assert (~X.lt x x').",
            "VernacExtend",
            "c2a74b7e5e3f98c1382bb63f8d6def36f1d38866"
        ],
        [
            "apply min_elt_spec2 with s'; auto.",
            "VernacExtend",
            "3940e91715bb20bc73465f9772e6583ba6fa2c48"
        ],
        [
            "rewrite <-H; auto using min_elt_spec1.",
            "VernacExtend",
            "31c2734daa91f402372d556cd3e109d9c9a90477"
        ],
        [
            "assert (~X.lt x' x).",
            "VernacExtend",
            "0136b268cb8797d5245a09fe48ece6ce357dd3e2"
        ],
        [
            "apply min_elt_spec2 with s; auto.",
            "VernacExtend",
            "38c55a4a2b826b4539ceddb3af9678c8460624a2"
        ],
        [
            "rewrite H; auto using min_elt_spec1.",
            "VernacExtend",
            "d25afb4d27790f65e1db828c2249c8b071066179"
        ],
        [
            "elim_compare x x'; intuition.",
            "VernacExtend",
            "5621ae4e55c9f315ffaefee9a109f6449fbcd4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_spec1' : forall s acc x, InA X.eq x (elements_aux acc s) <-> InT x s \\/ InA X.eq x acc.",
            "VernacStartTheoremProof",
            "d6e1cb680118cb2582a265735a5b019711869617"
        ],
        [
            "induction s as [ | c l Hl x r Hr ]; simpl; auto.",
            "VernacExtend",
            "8ec1c10f058d0ace0b67de6e3e0b9a6e708cebbd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Hl.",
            "VernacExtend",
            "bcb5a79f143a574cb4193cb68e496aca9c8a7cc3"
        ],
        [
            "destruct (Hr acc x0); clear Hl Hr.",
            "VernacExtend",
            "06e9e372a4f68bb87961902a48b14e14e4499d5e"
        ],
        [
            "intuition; inversion_clear H3; intuition.",
            "VernacExtend",
            "852ca57661d7dd48d9f5a1d2060e7383228abe07"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_spec1 : forall s x, InA X.eq x (elements s) <-> InT x s.",
            "VernacStartTheoremProof",
            "195ae633b269c8c83d3bec74a122802a47ee42c4"
        ],
        [
            "intros; generalize (elements_spec1' s nil x); intuition.",
            "VernacExtend",
            "f96588303cb4ac08803311c2e274375bdd40c236"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_spec2' : forall s acc `{Ok s}, sort X.lt acc -> (forall x y : elt, InA X.eq x acc -> InT y s -> X.lt y x) -> sort X.lt (elements_aux acc s).",
            "VernacStartTheoremProof",
            "8875526e509638c03bf6a0b7f7a731ed85c92be8"
        ],
        [
            "induction s as [ | c l Hl y r Hr]; simpl; intuition.",
            "VernacExtend",
            "20296e1bad9a9009b8b42bd049522cedf001538b"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "apply Hl; auto.",
            "VernacExtend",
            "affd29bfb905b3e9f612f7867f266fb57716c53e"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply Hr; auto.",
            "VernacExtend",
            "7f069426286efbaa26cf6f325f8445cf5691dc93"
        ],
        [
            "eapply InA_InfA; eauto with *.",
            "VernacExtend",
            "adf29b0b57686df8a6dda7d04f75a3adef974a80"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (elements_spec1' r acc y0); intuition.",
            "VernacExtend",
            "128593761afcaa7116c12032dde0131dba6f9395"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "destruct (elements_spec1' r acc x); intuition eauto.",
            "VernacExtend",
            "bbf3c7c5df61d0c3f868d80f72a59fc59e1a8fd0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_spec2 : forall s `(Ok s), sort X.lt (elements s).",
            "VernacStartTheoremProof",
            "2dd65db14770abff4eda49fb97dbb5d8b2a1673f"
        ],
        [
            "intros; unfold elements; apply elements_spec2'; auto.",
            "VernacExtend",
            "494d4ad2b4659a8b5e6acac49d9afbb5a834ce59"
        ],
        [
            "intros; inversion H0.",
            "VernacExtend",
            "5b5bb256fd3a25af10fe5269009c9c424ffef90a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Hint Resolve elements_spec2.",
            "VernacHints",
            "8ac8e2c41c555c78c7eb5fe5261800603f24d66f"
        ],
        [
            "Lemma elements_spec2w : forall s `(Ok s), NoDupA X.eq (elements s).",
            "VernacStartTheoremProof",
            "013ed827da5c35dd85c7e4d63dbec079f183efcd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply SortA_NoDupA; eauto with *.",
            "VernacExtend",
            "c2e9e97506f1ac7febb51954f9215d2859c7f9c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_aux_cardinal : forall s acc, (length acc + cardinal s)%nat = length (elements_aux acc s).",
            "VernacStartTheoremProof",
            "bb942d6ca97cc2abbb730e36a86fbff6e6f30ce0"
        ],
        [
            "simple induction s; simpl; intuition.",
            "VernacExtend",
            "157c376ac8375c75e89c379ede3be8e36b5b0dcf"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "rewrite (Nat.add_comm (cardinal t0)).",
            "VernacExtend",
            "3682da63f3ca0cd455380a01401262e365efb25a"
        ],
        [
            "now rewrite <- Nat.add_succ_r, Nat.add_assoc.",
            "VernacExtend",
            "db8cd27f7eb7d9d537791381d9d00e17abd85480"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_cardinal : forall s : tree, cardinal s = length (elements s).",
            "VernacStartTheoremProof",
            "0317612dd655c64dac563d2f35259efb9f7290bf"
        ],
        [
            "exact (fun s => elements_aux_cardinal s nil).",
            "VernacExtend",
            "12b5cbf1c1c02ff99b3a821278d45dd84efb4bc2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cardinal_spec (s:tree)(Hs:Ok s) := elements_cardinal s.",
            "VernacDefinition",
            "3a5c8707c25458c47a0c2b50591a07d27b9330ee"
        ],
        [
            "Lemma elements_app : forall s acc, elements_aux acc s = elements s ++ acc.",
            "VernacStartTheoremProof",
            "fe3a577331583065709bd6bfbaf4d15b8933c9ba"
        ],
        [
            "induction s; simpl; intros; auto.",
            "VernacExtend",
            "959f715c7053f7a7d894450f1f31103c87459625"
        ],
        [
            "rewrite IHs1, IHs2.",
            "VernacExtend",
            "3365e3c5023d8e463d7af7048e4ff019f8cc1937"
        ],
        [
            "unfold elements; simpl.",
            "VernacExtend",
            "3a5ede3fc95cc2d937dc2e580411df13d3f8a30c"
        ],
        [
            "rewrite 2 IHs1, IHs2, !app_nil_r, !app_ass; auto.",
            "VernacExtend",
            "2db4dc49d2fb68c3949c26765b74f253d379ac66"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_node c l x r : elements (Node c l x r) = elements l ++ x :: elements r.",
            "VernacStartTheoremProof",
            "50e8931b8ec656b119a3d61faf99317a8d79a0e3"
        ],
        [
            "unfold elements; simpl.",
            "VernacExtend",
            "3a5ede3fc95cc2d937dc2e580411df13d3f8a30c"
        ],
        [
            "now rewrite !elements_app, !app_nil_r.",
            "VernacExtend",
            "868f3a5428e4ca350975f51c1b9de19fa12bd995"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rev_elements_app : forall s acc, rev_elements_aux acc s = rev_elements s ++ acc.",
            "VernacStartTheoremProof",
            "34eca9f538c16e1776da0f17fdc61197bc624678"
        ],
        [
            "induction s; simpl; intros; auto.",
            "VernacExtend",
            "959f715c7053f7a7d894450f1f31103c87459625"
        ],
        [
            "rewrite IHs1, IHs2.",
            "VernacExtend",
            "3365e3c5023d8e463d7af7048e4ff019f8cc1937"
        ],
        [
            "unfold rev_elements; simpl.",
            "VernacExtend",
            "0c21d95112716a416f065530a1da18c0557760d3"
        ],
        [
            "rewrite IHs1, 2 IHs2, !app_nil_r, !app_ass; auto.",
            "VernacExtend",
            "db9097d6c5eb15ffaa0ea30c04811702a18171e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rev_elements_node c l x r : rev_elements (Node c l x r) = rev_elements r ++ x :: rev_elements l.",
            "VernacStartTheoremProof",
            "efc2246238c859e54f2ee6447eb4fd67b58d8f44"
        ],
        [
            "unfold rev_elements; simpl.",
            "VernacExtend",
            "0c21d95112716a416f065530a1da18c0557760d3"
        ],
        [
            "now rewrite !rev_elements_app, !app_nil_r.",
            "VernacExtend",
            "32cba55e61355599a8c18f1b69ff86720f94e385"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rev_elements_rev s : rev_elements s = rev (elements s).",
            "VernacStartTheoremProof",
            "4d3a92289487f64508dfef9913749032a9c4c8ed"
        ],
        [
            "induction s as [|c l IHl x r IHr]; trivial.",
            "VernacExtend",
            "d5a630541321f932708c64054a8bed191a4cc19a"
        ],
        [
            "rewrite elements_node, rev_elements_node, IHl, IHr, rev_app_distr.",
            "VernacExtend",
            "875b8f358e3c2abae11f04d35dba928c08a8248c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite !app_ass.",
            "VernacExtend",
            "986d0363693b17bcede2025aebadaa97bc9ef1f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sorted_app_inv l1 l2 : sort X.lt (l1++l2) -> sort X.lt l1 /\\ sort X.lt l2 /\\ forall x1 x2, InA X.eq x1 l1 -> InA X.eq x2 l2 -> X.lt x1 x2.",
            "VernacStartTheoremProof",
            "468acf13efd76439ce52583856b054263d17b91f"
        ],
        [
            "induction l1 as [|a1 l1 IHl1].",
            "VernacExtend",
            "0ee0f4d216757956efea01e70c48f3c30bf46ba6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; repeat split; auto.",
            "VernacExtend",
            "3ab577c16b2a79c246746612a387375f04af39ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite InA_nil in *.",
            "VernacExtend",
            "f59b88c4bb3d9490d3665613cfae4745c9cb4f5d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "inversion_clear 1 as [ | ? ? Hs Hhd ].",
            "VernacExtend",
            "0c6f6f5478b9c97e6c7f9eea3911bf1b07270c38"
        ],
        [
            "destruct (IHl1 Hs) as (H1 & H2 & H3).",
            "VernacExtend",
            "6e06a1b3ceade85bd41412f75795add61a71670f"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "destruct l1; simpl in *; auto; inversion_clear Hhd; auto.",
            "VernacExtend",
            "5e40b84fa4afda77198e2b273bc389f720853766"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros x1 x2 Hx1 Hx2.",
            "VernacExtend",
            "d04bbcc6d9584349d9dcfb372731276a46d59132"
        ],
        [
            "rewrite InA_cons in Hx1.",
            "VernacExtend",
            "6bc04213a122f040a03ffa94a2153ff92d31011c"
        ],
        [
            "destruct Hx1.",
            "VernacExtend",
            "19d247114efca06324b6233adb69563b4a56447f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply SortA_InfA_InA with (eqA:=X.eq)(l:=l1++l2); auto_tc.",
            "VernacExtend",
            "ac5512a03d7d39dab12be1af572999e29f2da151"
        ],
        [
            "rewrite InA_app_iff; auto_tc.",
            "VernacExtend",
            "e23b367ce6bc3d7bb6f9171e0436dcb53fcca813"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_sort_ok s : sort X.lt (elements s) -> Ok s.",
            "VernacStartTheoremProof",
            "3da046631a71673ec7682b9d3452b4fe32a37ebd"
        ],
        [
            "induction s as [|c l IHl x r IHr].",
            "VernacExtend",
            "4e71ce4797bef75d1e98e0d0edc36d3268a01932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite elements_node.",
            "VernacExtend",
            "b1529e5e4ce7335e07b623a08ae5a2024d94d98e"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "destruct (sorted_app_inv _ _ H) as (H1 & H2 & H3).",
            "VernacExtend",
            "a5b7aaa9e89bae0a9e9619bfd18ff0c8ca63c206"
        ],
        [
            "inversion_clear H2.",
            "VernacExtend",
            "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
        ],
        [
            "constructor; ok.",
            "VernacExtend",
            "179ce06c339b01dc00100d7c924a53b546fdc87b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros y Hy.",
            "VernacExtend",
            "d610d987f827782ed7ad408419c9743f4107dcdc"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now rewrite elements_spec1.",
            "VernacExtend",
            "2d6d84c0eefb9163907260c56cd8e6a2b0c42a67"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite InA_cons.",
            "VernacExtend",
            "a0b009472a1bc7e0a4f2a7c276744fe9882cd0af"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros y Hy.",
            "VernacExtend",
            "d610d987f827782ed7ad408419c9743f4107dcdc"
        ],
        [
            "apply SortA_InfA_InA with (eqA:=X.eq)(l:=elements r); auto_tc.",
            "VernacExtend",
            "e08827003ff9a1bf319c412d3a9c9d90cd899a9b"
        ],
        [
            "now rewrite elements_spec1.",
            "VernacExtend",
            "2d6d84c0eefb9163907260c56cd8e6a2b0c42a67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma for_all_spec s f : Proper (X.eq==>eq) f -> (for_all f s = true <-> For_all (fun x => f x = true) s).",
            "VernacStartTheoremProof",
            "809bda424516829a1d913234fcbc5edc676d4fc9"
        ],
        [
            "intros Hf; unfold For_all.",
            "VernacExtend",
            "ca68ab3b32fcc3ae305454c007a5f20631b0ba7f"
        ],
        [
            "induction s as [|i l IHl x r IHr]; simpl; auto.",
            "VernacExtend",
            "40caa660580e59b210326e68f57d343adb037fe8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; intros; inv; auto.",
            "VernacExtend",
            "73c678fa7c10a77bc15ddf1c36f0ea78eb9cd97b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- !andb_lazy_alt, !andb_true_iff, IHl, IHr.",
            "VernacExtend",
            "cd04270c4f2a1e105462989eaee74fbbf7c0a4d0"
        ],
        [
            "clear IHl IHr.",
            "VernacExtend",
            "5a7a9973ce90f18b5dcd497acbfdb02ae1bb70fb"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_spec s f : Proper (X.eq==>eq) f -> (exists_ f s = true <-> Exists (fun x => f x = true) s).",
            "VernacStartTheoremProof",
            "a8e50b01beb02f12c79646fa5ff844499749b60f"
        ],
        [
            "intros Hf; unfold Exists.",
            "VernacExtend",
            "5f5a96a678c0dd0a89b9794f688995dbbd9f19b5"
        ],
        [
            "induction s as [|i l IHl x r IHr]; simpl; auto.",
            "VernacExtend",
            "40caa660580e59b210326e68f57d343adb037fe8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros (y,(H,_)); inv.",
            "VernacExtend",
            "d67f82d0d406b95918a2e42c66affab9b30dbbd2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- !orb_lazy_alt, !orb_true_iff, IHl, IHr.",
            "VernacExtend",
            "2d913819480f26ea102b085f094ae519c583a500"
        ],
        [
            "clear IHl IHr.",
            "VernacExtend",
            "5a7a9973ce90f18b5dcd497acbfdb02ae1bb70fb"
        ],
        [
            "split; [intros [[H|(y,(H,H'))]|(y,(H,H'))]|intros (y,(H,H'))].",
            "VernacExtend",
            "3b991af2add52b358c5be27a97ca7126578c8456"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exists x; auto.",
            "VernacExtend",
            "d8b3edd09d34953d83a4fbc6350c30f804073b09"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exists y; auto.",
            "VernacExtend",
            "2a5ece7ebb3072d93dd214864e7ff9b009d438fd"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exists y; auto.",
            "VernacExtend",
            "2a5ece7ebb3072d93dd214864e7ff9b009d438fd"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inv; [left;left|left;right|right]; try (exists y); eauto.",
            "VernacExtend",
            "c883d79b2e91991eb5adc528ecc7c863b342bc68"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_spec' {A} (f : elt -> A -> A) (s : tree) (i : A) (acc : list elt) : fold_left (flip f) (elements_aux acc s) i = fold_left (flip f) acc (fold f s i).",
            "VernacStartTheoremProof",
            "f11342c85752e9ac1c75d9fe3ce96375d9df499e"
        ],
        [
            "revert i acc.",
            "VernacExtend",
            "bfcfc3412fcc70ec5fb3d256bd154e24a6314c59"
        ],
        [
            "induction s as [|c l IHl x r IHr]; simpl; intros; auto.",
            "VernacExtend",
            "74b8d56c1f807315c7ec49f8437f47c9c7f6f6b0"
        ],
        [
            "rewrite IHl.",
            "VernacExtend",
            "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold flip at 2.",
            "VernacExtend",
            "245d48066d0691505704ed2823af2731ac060f84"
        ],
        [
            "apply IHr.",
            "VernacExtend",
            "a0cca3bb49aa1514c3159d9c0330c9591fdba0ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_spec (s:tree) {A} (i : A) (f : elt -> A -> A) : fold f s i = fold_left (flip f) (elements s) i.",
            "VernacStartTheoremProof",
            "3ecdb159ae9f223b02468fadbaf269b852643b9c"
        ],
        [
            "revert i.",
            "VernacExtend",
            "12a69b3d317edc383939fa75e3d3138a28d80c39"
        ],
        [
            "unfold elements.",
            "VernacExtend",
            "093b6a2c5ab0f35c698ece9baa542c2b9b260d09"
        ],
        [
            "induction s as [|c l IHl x r IHr]; simpl; intros; auto.",
            "VernacExtend",
            "74b8d56c1f807315c7ec49f8437f47c9c7f6f6b0"
        ],
        [
            "rewrite fold_spec'.",
            "VernacExtend",
            "ba8ebfdd83a5e7ec628ee14d3b9ce10cb4b2ed49"
        ],
        [
            "rewrite IHr.",
            "VernacExtend",
            "76d9ad6af9b6951b0510dda9e634d5066c6507b1"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subsetl_spec : forall subset_l1 l1 x1 c1 s2 `{Ok (Node c1 l1 x1 Leaf), Ok s2}, (forall s `{Ok s}, (subset_l1 s = true <-> Subset l1 s)) -> (subsetl subset_l1 x1 s2 = true <-> Subset (Node c1 l1 x1 Leaf) s2 ).",
            "VernacStartTheoremProof",
            "3e6cf96e143244988d43b69b00ec421aadd64f6b"
        ],
        [
            "induction s2 as [|c2 l2 IHl2 x2 r2 IHr2]; simpl; intros.",
            "VernacExtend",
            "408f9b3a9b07fbf01607d82e073781cf9ad39395"
        ],
        [
            "unfold Subset; intuition; try discriminate.",
            "VernacExtend",
            "9ea711f77e084a6494f496edf0f99baec100ee28"
        ],
        [
            "assert (H': InT x1 Leaf) by auto; inversion H'.",
            "VernacExtend",
            "fe0cbd5244001aa2672efa01f9e726f4c8810b53"
        ],
        [
            "specialize (IHl2 H).",
            "VernacExtend",
            "00890a67f48a33d1800ca2618f010754bd9d68e2"
        ],
        [
            "specialize (IHr2 H).",
            "VernacExtend",
            "439dc944f17a7b304e9a69d54774af3128391099"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "elim_compare x1 x2.",
            "VernacExtend",
            "9019bff7f620100af8979acda72366df067790fd"
        ],
        [
            "rewrite H1 by auto; clear H1 IHl2 IHr2.",
            "VernacExtend",
            "51733dec677e8636379e5972719ca28de72231b5"
        ],
        [
            "unfold Subset.",
            "VernacExtend",
            "a4bf683ddd36d56259359cf224252c445a5325d5"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "assert (X.eq a x2) by order; intuition_in.",
            "VernacExtend",
            "de72504d9611071bf290ccb26abe1f4e612516fa"
        ],
        [
            "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
            "VernacExtend",
            "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
        ],
        [
            "rewrite IHl2 by auto; clear H1 IHl2 IHr2.",
            "VernacExtend",
            "ea5a5ef1ed5aa4874c5f88c56a1ed9ed70c9740a"
        ],
        [
            "unfold Subset.",
            "VernacExtend",
            "a4bf683ddd36d56259359cf224252c445a5325d5"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
            "VernacExtend",
            "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
        ],
        [
            "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
            "VernacExtend",
            "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
        ],
        [
            "rewrite <-andb_lazy_alt, andb_true_iff, H1 by auto; clear H1 IHl2 IHr2.",
            "VernacExtend",
            "6c02820f0fea777c9d34ec53b3d230d56f5ea7c0"
        ],
        [
            "unfold Subset.",
            "VernacExtend",
            "a4bf683ddd36d56259359cf224252c445a5325d5"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "constructor 3.",
            "VernacExtend",
            "fc203c31040684912422f2b19644a4136ee46779"
        ],
        [
            "setoid_replace a with x1; auto.",
            "VernacExtend",
            "ae3c441d339235661db98cad84bdb7ac746a0939"
        ],
        [
            "rewrite <- mem_spec; auto.",
            "VernacExtend",
            "8084d3e3ae245fb9e1d1583bd360f695aec35f9c"
        ],
        [
            "rewrite mem_spec; auto.",
            "VernacExtend",
            "387a78ef2a1259be9a20e3ba050a2823c04bc814"
        ],
        [
            "assert (InT x1 (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
            "VernacExtend",
            "f0be5dc8ed03328822c8f11e1875e4822f516bac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subsetr_spec : forall subset_r1 r1 x1 c1 s2, bst (Node c1 Leaf x1 r1) -> bst s2 -> (forall s, bst s -> (subset_r1 s = true <-> Subset r1 s)) -> (subsetr subset_r1 x1 s2 = true <-> Subset (Node c1 Leaf x1 r1) s2).",
            "VernacStartTheoremProof",
            "eed1df1b726e0867c050d6076e935195340deea6"
        ],
        [
            "induction s2 as [|c2 l2 IHl2 x2 r2 IHr2]; simpl; intros.",
            "VernacExtend",
            "408f9b3a9b07fbf01607d82e073781cf9ad39395"
        ],
        [
            "unfold Subset; intuition; try discriminate.",
            "VernacExtend",
            "9ea711f77e084a6494f496edf0f99baec100ee28"
        ],
        [
            "assert (H': InT x1 Leaf) by auto; inversion H'.",
            "VernacExtend",
            "fe0cbd5244001aa2672efa01f9e726f4c8810b53"
        ],
        [
            "specialize (IHl2 H).",
            "VernacExtend",
            "00890a67f48a33d1800ca2618f010754bd9d68e2"
        ],
        [
            "specialize (IHr2 H).",
            "VernacExtend",
            "439dc944f17a7b304e9a69d54774af3128391099"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "elim_compare x1 x2.",
            "VernacExtend",
            "9019bff7f620100af8979acda72366df067790fd"
        ],
        [
            "rewrite H1 by auto; clear H1 IHl2 IHr2.",
            "VernacExtend",
            "51733dec677e8636379e5972719ca28de72231b5"
        ],
        [
            "unfold Subset.",
            "VernacExtend",
            "a4bf683ddd36d56259359cf224252c445a5325d5"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "assert (X.eq a x2) by order; intuition_in.",
            "VernacExtend",
            "de72504d9611071bf290ccb26abe1f4e612516fa"
        ],
        [
            "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
            "VernacExtend",
            "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
        ],
        [
            "rewrite <-andb_lazy_alt, andb_true_iff, H1 by auto; clear H1 IHl2 IHr2.",
            "VernacExtend",
            "6c02820f0fea777c9d34ec53b3d230d56f5ea7c0"
        ],
        [
            "unfold Subset.",
            "VernacExtend",
            "a4bf683ddd36d56259359cf224252c445a5325d5"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "constructor 2.",
            "VernacExtend",
            "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
        ],
        [
            "setoid_replace a with x1; auto.",
            "VernacExtend",
            "ae3c441d339235661db98cad84bdb7ac746a0939"
        ],
        [
            "rewrite <- mem_spec; auto.",
            "VernacExtend",
            "8084d3e3ae245fb9e1d1583bd360f695aec35f9c"
        ],
        [
            "rewrite mem_spec; auto.",
            "VernacExtend",
            "387a78ef2a1259be9a20e3ba050a2823c04bc814"
        ],
        [
            "assert (InT x1 (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
            "VernacExtend",
            "f0be5dc8ed03328822c8f11e1875e4822f516bac"
        ],
        [
            "rewrite IHr2 by auto; clear H1 IHl2 IHr2.",
            "VernacExtend",
            "2550d6c3bf1e392bb7269da4c74725c4c40be840"
        ],
        [
            "unfold Subset.",
            "VernacExtend",
            "a4bf683ddd36d56259359cf224252c445a5325d5"
        ],
        [
            "intuition_in.",
            "VernacExtend",
            "d8943b758f8da03177723f43853aa754dd563cb6"
        ],
        [
            "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
            "VernacExtend",
            "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
        ],
        [
            "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
            "VernacExtend",
            "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_spec : forall s1 s2 `{Ok s1, Ok s2}, (subset s1 s2 = true <-> Subset s1 s2).",
            "VernacStartTheoremProof",
            "2a3d46bd672d7fafbf8c33e03c4849950b34e486"
        ],
        [
            "induction s1 as [|c1 l1 IHl1 x1 r1 IHr1]; simpl; intros.",
            "VernacExtend",
            "7faaeae6f14d5a0c469e95620de7ebf471e96bec"
        ],
        [
            "unfold Subset; intuition_in.",
            "VernacExtend",
            "cb015423acb549009294eeea534aa326beacf401"
        ],
        [
            "destruct s2 as [|c2 l2 x2 r2]; simpl; intros.",
            "VernacExtend",
            "bfee461d01fb4568a9358c1e356a348b4c40fe8f"
        ],
        [
            "unfold Subset; intuition_in; try discriminate.",
            "VernacExtend",
            "248949f2d21c4d88dc01878adfe1ea67e66c66f8"
        ],
        [
            "assert (H': InT x1 Leaf) by auto; inversion H'.",
            "VernacExtend",
            "fe0cbd5244001aa2672efa01f9e726f4c8810b53"
        ],
        [
            "inv.",
            "VernacExtend",
            "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
        ],
        [
            "elim_compare x1 x2.",
            "VernacExtend",
            "9019bff7f620100af8979acda72366df067790fd"
        ],
        [
            "rewrite <-andb_lazy_alt, andb_true_iff, IHl1, IHr1 by auto.",
            "VernacExtend",
            "a14df83cbc7622aa91b0256096c8e978aa017438"
        ],
        [
            "clear IHl1 IHr1.",
            "VernacExtend",
            "b8580009f12a4d1c0bbdbe813ee73ccdc81c9478"
        ],
        [
            "unfold Subset; intuition_in.",
            "VernacExtend",
            "cb015423acb549009294eeea534aa326beacf401"
        ],
        [
            "assert (X.eq a x2) by order; intuition_in.",
            "VernacExtend",
            "de72504d9611071bf290ccb26abe1f4e612516fa"
        ],
        [
            "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
            "VernacExtend",
            "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
        ],
        [
            "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
            "VernacExtend",
            "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
        ],
        [
            "rewrite <-andb_lazy_alt, andb_true_iff, IHr1 by auto.",
            "VernacExtend",
            "9b39685b702ac8f8cc96612d695a4479444f397e"
        ],
        [
            "rewrite (@subsetl_spec (subset l1) l1 x1 c1) by auto.",
            "VernacExtend",
            "fbf7b7bad1dfe95cd8f2f89b6962c2d6efbbb0f5"
        ],
        [
            "clear IHl1 IHr1.",
            "VernacExtend",
            "b8580009f12a4d1c0bbdbe813ee73ccdc81c9478"
        ],
        [
            "unfold Subset; intuition_in.",
            "VernacExtend",
            "cb015423acb549009294eeea534aa326beacf401"
        ],
        [
            "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
            "VernacExtend",
            "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
        ],
        [
            "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
            "VernacExtend",
            "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
        ],
        [
            "rewrite <-andb_lazy_alt, andb_true_iff, IHl1 by auto.",
            "VernacExtend",
            "33ef51bb56d089872bff5981b09ca821a1050509"
        ],
        [
            "rewrite (@subsetr_spec (subset r1) r1 x1 c1) by auto.",
            "VernacExtend",
            "fb246fa421b57395938c898acf87de6d4c844ed2"
        ],
        [
            "clear IHl1 IHr1.",
            "VernacExtend",
            "b8580009f12a4d1c0bbdbe813ee73ccdc81c9478"
        ],
        [
            "unfold Subset; intuition_in.",
            "VernacExtend",
            "cb015423acb549009294eeea534aa326beacf401"
        ],
        [
            "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
            "VernacExtend",
            "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
        ],
        [
            "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
            "VernacExtend",
            "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Module L := MSetInterface.MakeListOrdering X.",
            "VernacDefineModule",
            "40e4291b4a474552807ee2b7d3cdfc0b5f1ab905"
        ],
        [
            "Definition eq := Equal.",
            "VernacDefinition",
            "c5a98812a71ff074452a9b20100debd2359418d4"
        ],
        [
            "Instance eq_equiv : Equivalence eq.",
            "VernacInstance",
            "deeaf33dc54ae03b7448861f860d5bb8daaca18c"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_Leq : forall s s', eq s s' <-> L.eq (elements s) (elements s').",
            "VernacStartTheoremProof",
            "4347e51397dbd5a44502c17017d23809fdb0b50f"
        ],
        [
            "unfold eq, Equal, L.eq; intros.",
            "VernacExtend",
            "54a66104943fb870b1664dc6434bd5310ab8a59e"
        ],
        [
            "setoid_rewrite elements_spec1.",
            "VernacExtend",
            "7a178fbc736e55a196f7315928f6d20efb9e36fa"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lt (s1 s2 : tree) : Prop := exists s1' s2', Ok s1' /\\ Ok s2' /\\ eq s1 s1' /\\ eq s2 s2' /\\ L.lt (elements s1') (elements s2').",
            "VernacDefinition",
            "b2a407829fee845a1c76a4c23477c1f48337da97"
        ],
        [
            "Declare Equivalent Keys L.eq equivlistA.",
            "VernacExtend",
            "1fce69e30363068fa1029adbd6d848dc4a0c1df6"
        ],
        [
            "Instance lt_strorder : StrictOrder lt.",
            "VernacInstance",
            "fa189ac61b1474957ad71f3e51fbb244abde9f22"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros s (s1 & s2 & B1 & B2 & E1 & E2 & L).",
            "VernacExtend",
            "4a228519706bb6ce472ad5233e0048a77263e4ec"
        ],
        [
            "assert (eqlistA X.eq (elements s1) (elements s2)).",
            "VernacExtend",
            "c47c098a4f98ea315da45a9c08791341f2aa58a3"
        ],
        [
            "apply SortA_equivlistA_eqlistA with (ltA:=X.lt); auto with *.",
            "VernacExtend",
            "754b3985b03b25ad0761e6ef61b19581c0d476ea"
        ],
        [
            "rewrite <- eq_Leq.",
            "VernacExtend",
            "e85f27e978c0cc092d4a6a792a5bbabb23564edc"
        ],
        [
            "transitivity s; auto.",
            "VernacExtend",
            "6ebf414dce7764edd4b133af8589d25f7a3dc6a2"
        ],
        [
            "symmetry; auto.",
            "VernacExtend",
            "72331728cf41281b1b06fee3e3b5ef380ea044a9"
        ],
        [
            "rewrite H in L.",
            "VernacExtend",
            "262ee5cbccd2e64d5bb7d7fd876a4e766948f0b1"
        ],
        [
            "apply (StrictOrder_Irreflexive (elements s2)); auto.",
            "VernacExtend",
            "b0ff2972bb9c1347eee14e12db154124b9adc270"
        ],
        [
            "intros s1 s2 s3 (s1' & s2' & B1 & B2 & E1 & E2 & L12) (s2'' & s3' & B2' & B3 & E2' & E3 & L23).",
            "VernacExtend",
            "9078959d340d7de0d2dc0b5803d9946e95b9c6f6"
        ],
        [
            "exists s1', s3'; do 4 (split; trivial).",
            "VernacExtend",
            "34d1662cfd2874e2fe94e5b3beb7b7fb0c30f449"
        ],
        [
            "assert (eqlistA X.eq (elements s2') (elements s2'')).",
            "VernacExtend",
            "e882f2760fe70f6c41992305d4ee36e3802d6cd8"
        ],
        [
            "apply SortA_equivlistA_eqlistA with (ltA:=X.lt); auto with *.",
            "VernacExtend",
            "754b3985b03b25ad0761e6ef61b19581c0d476ea"
        ],
        [
            "rewrite <- eq_Leq.",
            "VernacExtend",
            "e85f27e978c0cc092d4a6a792a5bbabb23564edc"
        ],
        [
            "transitivity s2; auto.",
            "VernacExtend",
            "394405d9c6e8e96932fb748642fc1718477cfe54"
        ],
        [
            "symmetry; auto.",
            "VernacExtend",
            "72331728cf41281b1b06fee3e3b5ef380ea044a9"
        ],
        [
            "transitivity (elements s2'); auto.",
            "VernacExtend",
            "aea8dcc8bc113a94dcb7555ce1d9755d24657708"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance lt_compat : Proper (eq==>eq==>iff) lt.",
            "VernacInstance",
            "04e2deec4194fc51245d368b9c1ad29da27fd761"
        ],
        [
            "intros s1 s2 E12 s3 s4 E34.",
            "VernacExtend",
            "600f01bebd3a5b34f52d26bd5b6057fb2fc5f0b3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros (s1' & s3' & B1 & B3 & E1 & E3 & LT).",
            "VernacExtend",
            "23d9f553dd8b5aec9df80d7332341c1a710e657b"
        ],
        [
            "exists s1', s3'; do 2 (split; trivial).",
            "VernacExtend",
            "360c4e7b254a4961b9793209c6b011f9bb13e8db"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "transitivity s1; auto.",
            "VernacExtend",
            "bb740eda98792dc760bb29909ddd523033cca08d"
        ],
        [
            "symmetry; auto.",
            "VernacExtend",
            "72331728cf41281b1b06fee3e3b5ef380ea044a9"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "transitivity s3; auto.",
            "VernacExtend",
            "d363df512363d965e2116b9f2b5606ff46eae514"
        ],
        [
            "symmetry; auto.",
            "VernacExtend",
            "72331728cf41281b1b06fee3e3b5ef380ea044a9"
        ],
        [
            "intros (s1' & s3' & B1 & B3 & E1 & E3 & LT).",
            "VernacExtend",
            "23d9f553dd8b5aec9df80d7332341c1a710e657b"
        ],
        [
            "exists s1', s3'; do 2 (split; trivial).",
            "VernacExtend",
            "360c4e7b254a4961b9793209c6b011f9bb13e8db"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "transitivity s2; auto.",
            "VernacExtend",
            "394405d9c6e8e96932fb748642fc1718477cfe54"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "transitivity s4; auto.",
            "VernacExtend",
            "6e16546cc8fcbc8023cda0b4e0c44e133ce51f73"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint flatten_e (e : enumeration) : list elt := match e with | End => nil | More x t r => x :: elements t ++ flatten_e r end.",
            "VernacFixpoint",
            "a8bce3930247a87db6e98decd79be05cb2fad63f"
        ],
        [
            "Lemma flatten_e_elements : forall l x r c e, elements l ++ flatten_e (More x r e) = elements (Node c l x r) ++ flatten_e e.",
            "VernacStartTheoremProof",
            "0514eab105d66636351d629d389b6fcadf07b84d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite elements_node, app_ass.",
            "VernacExtend",
            "7cfd6c2578e1d20fa6c23edad26a482960aebe27"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cons_1 : forall s e, flatten_e (cons s e) = elements s ++ flatten_e e.",
            "VernacStartTheoremProof",
            "c849526ba145587f16c526d3e61922d45601c308"
        ],
        [
            "induction s; simpl; auto; intros.",
            "VernacExtend",
            "8cc60e2fb53dbfe93182ec51277e6b76519afa7a"
        ],
        [
            "rewrite IHs1; apply flatten_e_elements.",
            "VernacExtend",
            "d908195c3254f73e7acebf91bf4b8a54f2d86ce0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Cmp c x y := CompSpec L.eq L.lt x y c.",
            "VernacDefinition",
            "ab7eba01825f9dfad16c6dfb7e5aaa9b96300a3d"
        ],
        [
            "Local Hint Unfold Cmp flip.",
            "VernacHints",
            "da348689844ffa049c7f0095aea13388dcb787a9"
        ],
        [
            "Lemma compare_end_Cmp : forall e2, Cmp (compare_end e2) nil (flatten_e e2).",
            "VernacStartTheoremProof",
            "3a286802f04b6e8c1b006cc378d5ab89d72090ab"
        ],
        [
            "destruct e2; simpl; constructor; auto.",
            "VernacExtend",
            "81bc16d182651d38374195836f9bf83d6cecc2a9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_more_Cmp : forall x1 cont x2 r2 e2 l, Cmp (cont (cons r2 e2)) l (elements r2 ++ flatten_e e2) -> Cmp (compare_more x1 cont (More x2 r2 e2)) (x1::l) (flatten_e (More x2 r2 e2)).",
            "VernacStartTheoremProof",
            "ad39707d8ea8ea7344b515cb9eccb4ad79745be5"
        ],
        [
            "simpl; intros; elim_compare x1 x2; simpl; red; auto.",
            "VernacExtend",
            "2425f30ecd60a574e37352f2831e68449332f7de"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_cont_Cmp : forall s1 cont e2 l, (forall e, Cmp (cont e) l (flatten_e e)) -> Cmp (compare_cont s1 cont e2) (elements s1 ++ l) (flatten_e e2).",
            "VernacStartTheoremProof",
            "9474968a83eeb0e86a3f221fd92c921011d6ed92"
        ],
        [
            "induction s1 as [|c1 l1 Hl1 x1 r1 Hr1]; intros; auto.",
            "VernacExtend",
            "3d6fd7a9e80d697156d7142689214ff0ded60a6d"
        ],
        [
            "rewrite elements_node, app_ass; simpl.",
            "VernacExtend",
            "b515d04dcf32399027794ef9246ac8dcfef82877"
        ],
        [
            "apply Hl1; auto.",
            "VernacExtend",
            "247b19b1a76df71264ab7b1b51ad1eda98cffa03"
        ],
        [
            "clear e2.",
            "VernacExtend",
            "3939743f01c0d90dfd875e763b8437a8e7072be0"
        ],
        [
            "intros [|x2 r2 e2].",
            "VernacExtend",
            "22275c06dfb02f283e95471ff3ef63b53bd18307"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "apply compare_more_Cmp.",
            "VernacExtend",
            "61488033014635f609ff9d822949e23a240cfb72"
        ],
        [
            "rewrite <- cons_1; auto.",
            "VernacExtend",
            "023e9b6f744de2cce6cbb7b277e4c9fa570707ab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_Cmp : forall s1 s2, Cmp (compare s1 s2) (elements s1) (elements s2).",
            "VernacStartTheoremProof",
            "325e8cdb58029ba361fb8c33d1075adeb245fec6"
        ],
        [
            "intros; unfold compare.",
            "VernacExtend",
            "40c1cc8a760bf1c0999a99de14229f6a2f1ca44c"
        ],
        [
            "rewrite <- (app_nil_r (elements s1)).",
            "VernacExtend",
            "356fa61d947438e668d1e7f9f0b0ce88b3c1713e"
        ],
        [
            "replace (elements s2) with (flatten_e (cons s2 End)) by (rewrite cons_1; simpl; rewrite app_nil_r; auto).",
            "VernacExtend",
            "537c62d12b02561a9ab342eaa4ae2617180e6bcc"
        ],
        [
            "apply compare_cont_Cmp; auto.",
            "VernacExtend",
            "521bcd5c675912c6267e70b1405f7096643fc8d6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply compare_end_Cmp; auto.",
            "VernacExtend",
            "523f256ae6499c3465f8fb2b63b28a6949381ec5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_spec : forall s1 s2 `{Ok s1, Ok s2}, CompSpec eq lt s1 s2 (compare s1 s2).",
            "VernacStartTheoremProof",
            "008fb06b631b38c1152ca68eb8612604ceb4e000"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (compare_Cmp s1 s2); constructor.",
            "VernacExtend",
            "9858262dc9bcddb1406c824c3838ea7f2d5094a2"
        ],
        [
            "rewrite eq_Leq; auto.",
            "VernacExtend",
            "d770e393e42135ad468f39d01bf0106f429945f5"
        ],
        [
            "intros; exists s1, s2; repeat split; auto.",
            "VernacExtend",
            "f1ff9ecafe1592e6ebdda92888d4997ee63007a4"
        ],
        [
            "intros; exists s2, s1; repeat split; auto.",
            "VernacExtend",
            "9196d7e5f48769638bfa69f38cac289a97621bf4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_spec : forall s1 s2 `{Ok s1, Ok s2}, equal s1 s2 = true <-> eq s1 s2.",
            "VernacStartTheoremProof",
            "d2aa61b44aa38f914699b6e4645671afc0553402"
        ],
        [
            "unfold equal; intros s1 s2 B1 B2.",
            "VernacExtend",
            "08a274c8465d16d363ca4cdecfaea05ae2722fad"
        ],
        [
            "destruct (@compare_spec s1 s2 B1 B2) as [H|H|H]; split; intros H'; auto; try discriminate.",
            "VernacExtend",
            "5bc068ec841a627dd7b098759af22bfca059f682"
        ],
        [
            "rewrite H' in H.",
            "VernacExtend",
            "15b945a781d83326e1b7ae2f3071e5a9299b1807"
        ],
        [
            "elim (StrictOrder_Irreflexive s2); auto.",
            "VernacExtend",
            "762c589c5db9aeb329dd48babb8aa78ecc50df9e"
        ],
        [
            "rewrite H' in H.",
            "VernacExtend",
            "15b945a781d83326e1b7ae2f3071e5a9299b1807"
        ],
        [
            "elim (StrictOrder_Irreflexive s2); auto.",
            "VernacExtend",
            "762c589c5db9aeb329dd48babb8aa78ecc50df9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mindepth_maxdepth s : mindepth s <= maxdepth s.",
            "VernacStartTheoremProof",
            "f30222918f2e74f2449b2af375d4fc782f9ad4a0"
        ],
        [
            "induction s; simpl; auto.",
            "VernacExtend",
            "59ccd0e20737d99a61d3198e34181ad04d55732b"
        ],
        [
            "rewrite <- Nat.succ_le_mono.",
            "VernacExtend",
            "99fc6af2a61c5c479f5320a14a8c6a4547b68d0b"
        ],
        [
            "transitivity (mindepth s1).",
            "VernacExtend",
            "cbda977d008c3eebc670d62e879292292b22ea5e"
        ],
        [
            "apply Nat.le_min_l.",
            "VernacExtend",
            "924201d918a491402281df6c1e914d9ac8bd5593"
        ],
        [
            "transitivity (maxdepth s1).",
            "VernacExtend",
            "671a0df16c7c021b47e7310acee709c4e8309a10"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply Nat.le_max_l.",
            "VernacExtend",
            "9c2c9f115d23b4704773103b68b0773ae7d66520"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxdepth_cardinal s : cardinal s < 2^(maxdepth s).",
            "VernacStartTheoremProof",
            "ba4481076110879b1c125708c882604ea307894c"
        ],
        [
            "unfold Peano.lt.",
            "VernacExtend",
            "c51b63d4704ea1bbe7974c8a658490bf301c70b4"
        ],
        [
            "induction s as [|c l IHl x r IHr].",
            "VernacExtend",
            "4e71ce4797bef75d1e98e0d0edc36d3268a01932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- Nat.add_succ_r, <- Nat.add_succ_l, Nat.add_0_r.",
            "VernacExtend",
            "c6dcc6507848abded4668de4ff0324f3dcc6eccf"
        ],
        [
            "apply Nat.add_le_mono; etransitivity; try apply IHl; try apply IHr; apply Nat.pow_le_mono; auto.",
            "VernacExtend",
            "41457bb5b4b2795e9aefcdc33e72cb79e1109cd8"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply Nat.le_max_l.",
            "VernacExtend",
            "9c2c9f115d23b4704773103b68b0773ae7d66520"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply Nat.le_max_r.",
            "VernacExtend",
            "89e1813c7b063bd7e2ec597609bc2e51776817f2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mindepth_cardinal s : 2^(mindepth s) <= S (cardinal s).",
            "VernacStartTheoremProof",
            "0394447aac6c532c3b046adeb96e66893e728012"
        ],
        [
            "unfold Peano.lt.",
            "VernacExtend",
            "c51b63d4704ea1bbe7974c8a658490bf301c70b4"
        ],
        [
            "induction s as [|c l IHl x r IHr].",
            "VernacExtend",
            "4e71ce4797bef75d1e98e0d0edc36d3268a01932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- Nat.add_succ_r, <- Nat.add_succ_l, Nat.add_0_r.",
            "VernacExtend",
            "c6dcc6507848abded4668de4ff0324f3dcc6eccf"
        ],
        [
            "apply Nat.add_le_mono; etransitivity; try apply IHl; try apply IHr; apply Nat.pow_le_mono; auto.",
            "VernacExtend",
            "41457bb5b4b2795e9aefcdc33e72cb79e1109cd8"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply Nat.le_min_l.",
            "VernacExtend",
            "924201d918a491402281df6c1e914d9ac8bd5593"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply Nat.le_min_r.",
            "VernacExtend",
            "8eaa8bdc1f83aa61dcd5a9c15f1694c6b4889d11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma maxdepth_log_cardinal s : s <> Leaf -> Nat.log2 (cardinal s) < maxdepth s.",
            "VernacStartTheoremProof",
            "4fe7afb3cab51ae55a58857ac1bef8f839496c35"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply Nat.log2_lt_pow2.",
            "VernacExtend",
            "3aaf6827c4d5843bbfd132acac9cda08a2117a37"
        ],
        [
            "destruct s; simpl; intuition.",
            "VernacExtend",
            "32a2bcf8bf52b3637f1f172c151bd9ccf8c86df2"
        ],
        [
            "apply maxdepth_cardinal.",
            "VernacExtend",
            "71a4a1b32590e7388926e770b7dc013c54c05b85"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mindepth_log_cardinal s : mindepth s <= Nat.log2 (S (cardinal s)).",
            "VernacStartTheoremProof",
            "4bd7a7cd96e3a5a657dd05d3b76003fa09ee5601"
        ],
        [
            "apply Nat.log2_le_pow2.",
            "VernacExtend",
            "92817f90980d48aa67887747ca94ded7c56c33ec"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "apply mindepth_cardinal.",
            "VernacExtend",
            "6ff9e4e292f4068d27e16e8fb7200a72d10d8596"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Props.",
            "VernacEndSegment",
            "259a0002c8ad4c6cbbbee771e2379f7213ffbee4"
        ]
    ],
    "proofs": [
        {
            "name": "ltb_tree_iff",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "induction s as [|c l IHl y r IHr]; simpl.",
                        "VernacExtend",
                        "8eb8bae15d3b43ae08908730414f304dab5d046b"
                    ]
                },
                {
                    "command": [
                        "unfold lt_tree; intuition_in.",
                        "VernacExtend",
                        "a6f2eea21ea8a90abb0b7c5b15925decc75e5374"
                    ]
                },
                {
                    "command": [
                        "elim_compare x y.",
                        "VernacExtend",
                        "805b4c081c4333d037a6dfe92aceb9d0d17ae720"
                    ]
                },
                {
                    "command": [
                        "split; intros; try discriminate.",
                        "VernacExtend",
                        "9af7c0a319462b411e6e1e007f1e4df7b4bc57a7"
                    ]
                },
                {
                    "command": [
                        "assert (X.lt y x) by auto.",
                        "VernacExtend",
                        "2fcd4f0a9fee4f633a9d2595ce882626fef03603"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "split; intros; try discriminate.",
                        "VernacExtend",
                        "9af7c0a319462b411e6e1e007f1e4df7b4bc57a7"
                    ]
                },
                {
                    "command": [
                        "assert (X.lt y x) by auto.",
                        "VernacExtend",
                        "2fcd4f0a9fee4f633a9d2595ce882626fef03603"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "rewrite !andb_true_iff, <-IHl, <-IHr.",
                        "VernacExtend",
                        "671921e6505bdc09172e99ad449666737db71137"
                    ]
                },
                {
                    "command": [
                        "unfold lt_tree; intuition_in; order.",
                        "VernacExtend",
                        "31062ba8706bcec783f52140ab7a0de170e6fdd2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtb_tree_iff",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "induction s as [|c l IHl y r IHr]; simpl.",
                        "VernacExtend",
                        "8eb8bae15d3b43ae08908730414f304dab5d046b"
                    ]
                },
                {
                    "command": [
                        "unfold gt_tree; intuition_in.",
                        "VernacExtend",
                        "43d3579ae36dad8ba83e63e30a5f2e3a121431a1"
                    ]
                },
                {
                    "command": [
                        "elim_compare x y.",
                        "VernacExtend",
                        "805b4c081c4333d037a6dfe92aceb9d0d17ae720"
                    ]
                },
                {
                    "command": [
                        "split; intros; try discriminate.",
                        "VernacExtend",
                        "9af7c0a319462b411e6e1e007f1e4df7b4bc57a7"
                    ]
                },
                {
                    "command": [
                        "assert (X.lt x y) by auto.",
                        "VernacExtend",
                        "8f34292191191d816d050cfb0acc1c20e26f2189"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "rewrite !andb_true_iff, <-IHl, <-IHr.",
                        "VernacExtend",
                        "671921e6505bdc09172e99ad449666737db71137"
                    ]
                },
                {
                    "command": [
                        "unfold gt_tree; intuition_in; order.",
                        "VernacExtend",
                        "d8f7d66c5ab381c88c2dab12f9d3b0cf5a2cd143"
                    ]
                },
                {
                    "command": [
                        "split; intros; try discriminate.",
                        "VernacExtend",
                        "9af7c0a319462b411e6e1e007f1e4df7b4bc57a7"
                    ]
                },
                {
                    "command": [
                        "assert (X.lt x y) by auto.",
                        "VernacExtend",
                        "8f34292191191d816d050cfb0acc1c20e26f2189"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isok_iff",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "induction s as [|c l IHl y r IHr]; simpl.",
                        "VernacExtend",
                        "8eb8bae15d3b43ae08908730414f304dab5d046b"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "rewrite !andb_true_iff, <- IHl, <-IHr, <- ltb_tree_iff, <- gtb_tree_iff.",
                        "VernacExtend",
                        "50f98a6ea00e015557625411969ee92a2171892e"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "isok_Ok",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "intros; apply <- isok_iff; auto.",
                        "VernacExtend",
                        "d8d1fd103ca15f33675f4824222300447c070f59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_1",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "induction s; simpl; intuition_in; eauto.",
                        "VernacExtend",
                        "3371e85cca7cb8d1f61a6ea6463fa3b3ee544d20"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_compat",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "apply proper_sym_impl_iff_2; auto with *.",
                        "VernacExtend",
                        "eee994524435b39e51e978935650dd48d24678a0"
                    ]
                },
                {
                    "command": [
                        "repeat red; intros; subst.",
                        "VernacExtend",
                        "b0b5eda6eee5c9a2bda70138af8f7ee77f02a561"
                    ]
                },
                {
                    "command": [
                        "apply In_1 with x; auto.",
                        "VernacExtend",
                        "402590a78da6b45b9141619a6a4e9b4f81260919"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_node_iff",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_leaf_iff",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_leaf",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "red; inversion 1.",
                        "VernacExtend",
                        "1448138ad9c9a257a6bd7c02ce1576e92ee8afa8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt_leaf",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "red; inversion 1.",
                        "VernacExtend",
                        "1448138ad9c9a257a6bd7c02ce1576e92ee8afa8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_tree_node",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "unfold lt_tree; intuition_in; order.",
                        "VernacExtend",
                        "31062ba8706bcec783f52140ab7a0de170e6fdd2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt_tree_node",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "unfold gt_tree; intuition_in; order.",
                        "VernacExtend",
                        "d8f7d66c5ab381c88c2dab12f9d3b0cf5a2cd143"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_tree_not_in",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "intros; intro; order.",
                        "VernacExtend",
                        "8b573b6f98159f25a43e4c9a720249d96788a463"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_tree_trans",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt_tree_not_in",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "intros; intro; order.",
                        "VernacExtend",
                        "8b573b6f98159f25a43e4c9a720249d96788a463"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt_tree_trans",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_tree_compat",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "apply proper_sym_impl_iff_2; auto.",
                        "VernacExtend",
                        "40a841d0493791a82ccf0cdb0ae07e074b1172e5"
                    ]
                },
                {
                    "command": [
                        "intros x x' Hx s s' Hs H y Hy.",
                        "VernacExtend",
                        "9568d184d29866e14a0031e92e7a77b64ad79665"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite <- Hx; auto.",
                        "VernacExtend",
                        "91cb510cb15e7ad2ad666b8a25915bdc50cf5ef7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt_tree_compat",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "apply proper_sym_impl_iff_2; auto.",
                        "VernacExtend",
                        "40a841d0493791a82ccf0cdb0ae07e074b1172e5"
                    ]
                },
                {
                    "command": [
                        "intros x x' Hx s s' Hs H y Hy.",
                        "VernacExtend",
                        "9568d184d29866e14a0031e92e7a77b64ad79665"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite <- Hx; auto.",
                        "VernacExtend",
                        "91cb510cb15e7ad2ad666b8a25915bdc50cf5ef7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_spec",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "intros x H.",
                        "VernacExtend",
                        "a0cd74b85812810ce5a78a540bad98f664bd4842"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_ok",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_empty_spec",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "destruct s as [|c r x l]; simpl; auto.",
                        "VernacExtend",
                        "fefc30d6b67b13edf3806979c065fba8ad85d890"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "intros _ x H.",
                        "VernacExtend",
                        "e14d7147a69a993c05f8498dee3df428f7af9b69"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "try discriminate.",
                        "VernacExtend",
                        "de2bc7a3bfd97e6b5378596411010f23f6c9ff06"
                    ]
                },
                {
                    "command": [
                        "intro H; elim (H x); auto.",
                        "VernacExtend",
                        "f91de508a9445e0731b43bfb3936d898ee1cf36d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_spec",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "induct s x; now auto.",
                        "VernacExtend",
                        "6f91e1e3b624a94343e801f569c7d0c7308ede70"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "induct s x; intuition_in; order.",
                        "VernacExtend",
                        "541478be34515fe06b7b45ec0d11197b279fe5ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_elt_spec1",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "functional induction (min_elt s); auto; inversion 1; auto.",
                        "VernacExtend",
                        "863ff9b92e776ed34bf1d98403361515a723f404"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_elt_spec2",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "revert y.",
                        "VernacExtend",
                        "5484f0bbfb13c7c22a5bdc05a6e87355be4a9cff"
                    ]
                },
                {
                    "command": [
                        "functional induction (min_elt s); try rename _x0 into r; try rename _x2 into l1, _x3 into x1, _x4 into r1.",
                        "VernacExtend",
                        "e5dc6adf6bc08408fdf6479c571789c3a714e5d0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros y V W.",
                        "VernacExtend",
                        "0711ef487b3e7b79e108f7f82598993691f52932"
                    ]
                },
                {
                    "command": [
                        "inversion V; clear V; subst.",
                        "VernacExtend",
                        "f5130d5aca98edbbe80b05dc693f1ed00a626462"
                    ]
                },
                {
                    "command": [
                        "inv; order.",
                        "VernacExtend",
                        "4f42bfb0abc30600b382a6c1992d076678737bdf"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros; inv; auto.",
                        "VernacExtend",
                        "1e912157e0cfa8bdc19a9dc0688cb9193477dda4"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "assert (X.lt x x0) by (apply H8; apply min_elt_spec1; auto).",
                        "VernacExtend",
                        "e038699f737a83a41fa6cf307d94b092329bf085"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "assert (X.lt x1 x0) by auto.",
                        "VernacExtend",
                        "21bbb1c6d329b3dc0f0b91b621a33ac18b2b1dc2"
                    ]
                },
                {
                    "command": [
                        "assert (~X.lt x1 x) by auto.",
                        "VernacExtend",
                        "1e9d2ee52b9abc3821abd68beca4b9a6b24b0bea"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_elt_spec3",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "functional induction (min_elt s).",
                        "VernacExtend",
                        "399a5f6e6d0def2aeee797a32799d5278b792c42"
                    ]
                },
                {
                    "command": [
                        "red; red; inversion 2.",
                        "VernacExtend",
                        "1edc5142e6e7aa262223d1bf1b6c92a7b846147e"
                    ]
                },
                {
                    "command": [
                        "inversion 1.",
                        "VernacExtend",
                        "9152817da0dc28ba4701e3ff01c293af28a1059f"
                    ]
                },
                {
                    "command": [
                        "intro H0.",
                        "VernacExtend",
                        "33135fa360f1c5b700715c0dfac0804c96d2fa77"
                    ]
                },
                {
                    "command": [
                        "destruct (IHo H0 _x3); auto.",
                        "VernacExtend",
                        "25bd6a33def5ccfad18e9592e8895cac9841579b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_elt_spec1",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "functional induction (max_elt s); auto; inversion 1; auto.",
                        "VernacExtend",
                        "848bac94f4542ab5927450d8669541cc1ad57f2e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_elt_spec2",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "revert y.",
                        "VernacExtend",
                        "5484f0bbfb13c7c22a5bdc05a6e87355be4a9cff"
                    ]
                },
                {
                    "command": [
                        "functional induction (max_elt s); try rename _x0 into r; try rename _x2 into l1, _x3 into x1, _x4 into r1.",
                        "VernacExtend",
                        "b41bb02d7da74de77b4233161d2c8ec8f83349df"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros y V W.",
                        "VernacExtend",
                        "0711ef487b3e7b79e108f7f82598993691f52932"
                    ]
                },
                {
                    "command": [
                        "inversion V; clear V; subst.",
                        "VernacExtend",
                        "f5130d5aca98edbbe80b05dc693f1ed00a626462"
                    ]
                },
                {
                    "command": [
                        "inv; order.",
                        "VernacExtend",
                        "4f42bfb0abc30600b382a6c1992d076678737bdf"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros; inv; auto.",
                        "VernacExtend",
                        "1e912157e0cfa8bdc19a9dc0688cb9193477dda4"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "assert (X.lt x0 x) by (apply H9; apply max_elt_spec1; auto).",
                        "VernacExtend",
                        "6f6f88c51a8a8786575ae5e536df6b7fcf4239e6"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "assert (X.lt x0 x1) by auto.",
                        "VernacExtend",
                        "dd1e2eabc9bc2d02b6d4fe6ff3e966db8b783b43"
                    ]
                },
                {
                    "command": [
                        "assert (~X.lt x x1) by auto.",
                        "VernacExtend",
                        "42b5f4f021e70b26e5a1dc6ab3160df3069c0a43"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_elt_spec3",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "functional induction (max_elt s).",
                        "VernacExtend",
                        "8105e2be820050c7be06f28e73743e8b4fda7679"
                    ]
                },
                {
                    "command": [
                        "red; red; inversion 2.",
                        "VernacExtend",
                        "1edc5142e6e7aa262223d1bf1b6c92a7b846147e"
                    ]
                },
                {
                    "command": [
                        "inversion 1.",
                        "VernacExtend",
                        "9152817da0dc28ba4701e3ff01c293af28a1059f"
                    ]
                },
                {
                    "command": [
                        "intro H0.",
                        "VernacExtend",
                        "33135fa360f1c5b700715c0dfac0804c96d2fa77"
                    ]
                },
                {
                    "command": [
                        "destruct (IHo H0 _x3); auto.",
                        "VernacExtend",
                        "25bd6a33def5ccfad18e9592e8895cac9841579b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "choose_spec1",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "exact min_elt_spec1.",
                        "VernacExtend",
                        "c75b3a6ee3e4e7a00349a5c2c530f10b3a3ab976"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "choose_spec2",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "exact min_elt_spec3.",
                        "VernacExtend",
                        "0e7648a2bd84e2a10c2f33a11d481fbba12b3bb8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "choose_spec3",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "unfold choose, Equal; intros s s' x x' Hb Hb' Hx Hx' H.",
                        "VernacExtend",
                        "847ca0f24d42d9e408092e07727454dc66c99a3c"
                    ]
                },
                {
                    "command": [
                        "assert (~X.lt x x').",
                        "VernacExtend",
                        "c2a74b7e5e3f98c1382bb63f8d6def36f1d38866"
                    ]
                },
                {
                    "command": [
                        "apply min_elt_spec2 with s'; auto.",
                        "VernacExtend",
                        "3940e91715bb20bc73465f9772e6583ba6fa2c48"
                    ]
                },
                {
                    "command": [
                        "rewrite <-H; auto using min_elt_spec1.",
                        "VernacExtend",
                        "31c2734daa91f402372d556cd3e109d9c9a90477"
                    ]
                },
                {
                    "command": [
                        "assert (~X.lt x' x).",
                        "VernacExtend",
                        "0136b268cb8797d5245a09fe48ece6ce357dd3e2"
                    ]
                },
                {
                    "command": [
                        "apply min_elt_spec2 with s; auto.",
                        "VernacExtend",
                        "38c55a4a2b826b4539ceddb3af9678c8460624a2"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto using min_elt_spec1.",
                        "VernacExtend",
                        "d25afb4d27790f65e1db828c2249c8b071066179"
                    ]
                },
                {
                    "command": [
                        "elim_compare x x'; intuition.",
                        "VernacExtend",
                        "5621ae4e55c9f315ffaefee9a109f6449fbcd4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_spec1'",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "induction s as [ | c l Hl x r Hr ]; simpl; auto.",
                        "VernacExtend",
                        "8ec1c10f058d0ace0b67de6e3e0b9a6e708cebbd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Hl.",
                        "VernacExtend",
                        "bcb5a79f143a574cb4193cb68e496aca9c8a7cc3"
                    ]
                },
                {
                    "command": [
                        "destruct (Hr acc x0); clear Hl Hr.",
                        "VernacExtend",
                        "06e9e372a4f68bb87961902a48b14e14e4499d5e"
                    ]
                },
                {
                    "command": [
                        "intuition; inversion_clear H3; intuition.",
                        "VernacExtend",
                        "852ca57661d7dd48d9f5a1d2060e7383228abe07"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_spec1",
            "line_nb": 271,
            "steps": [
                {
                    "command": [
                        "intros; generalize (elements_spec1' s nil x); intuition.",
                        "VernacExtend",
                        "f96588303cb4ac08803311c2e274375bdd40c236"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H0.",
                        "VernacExtend",
                        "e21f851b9423020c7f22dae666bca7829c9b1967"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_spec2'",
            "line_nb": 275,
            "steps": [
                {
                    "command": [
                        "induction s as [ | c l Hl y r Hr]; simpl; intuition.",
                        "VernacExtend",
                        "20296e1bad9a9009b8b42bd049522cedf001538b"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "apply Hl; auto.",
                        "VernacExtend",
                        "affd29bfb905b3e9f612f7867f266fb57716c53e"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply Hr; auto.",
                        "VernacExtend",
                        "7f069426286efbaa26cf6f325f8445cf5691dc93"
                    ]
                },
                {
                    "command": [
                        "eapply InA_InfA; eauto with *.",
                        "VernacExtend",
                        "adf29b0b57686df8a6dda7d04f75a3adef974a80"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (elements_spec1' r acc y0); intuition.",
                        "VernacExtend",
                        "128593761afcaa7116c12032dde0131dba6f9395"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "destruct (elements_spec1' r acc x); intuition eauto.",
                        "VernacExtend",
                        "bbf3c7c5df61d0c3f868d80f72a59fc59e1a8fd0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_spec2",
            "line_nb": 289,
            "steps": [
                {
                    "command": [
                        "intros; unfold elements; apply elements_spec2'; auto.",
                        "VernacExtend",
                        "494d4ad2b4659a8b5e6acac49d9afbb5a834ce59"
                    ]
                },
                {
                    "command": [
                        "intros; inversion H0.",
                        "VernacExtend",
                        "5b5bb256fd3a25af10fe5269009c9c424ffef90a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_spec2w",
            "line_nb": 294,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply SortA_NoDupA; eauto with *.",
                        "VernacExtend",
                        "c2e9e97506f1ac7febb51954f9215d2859c7f9c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_aux_cardinal",
            "line_nb": 298,
            "steps": [
                {
                    "command": [
                        "simple induction s; simpl; intuition.",
                        "VernacExtend",
                        "157c376ac8375c75e89c379ede3be8e36b5b0dcf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "rewrite (Nat.add_comm (cardinal t0)).",
                        "VernacExtend",
                        "3682da63f3ca0cd455380a01401262e365efb25a"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Nat.add_succ_r, Nat.add_assoc.",
                        "VernacExtend",
                        "db8cd27f7eb7d9d537791381d9d00e17abd85480"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_cardinal",
            "line_nb": 306,
            "steps": [
                {
                    "command": [
                        "exact (fun s => elements_aux_cardinal s nil).",
                        "VernacExtend",
                        "12b5cbf1c1c02ff99b3a821278d45dd84efb4bc2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_app",
            "line_nb": 310,
            "steps": [
                {
                    "command": [
                        "induction s; simpl; intros; auto.",
                        "VernacExtend",
                        "959f715c7053f7a7d894450f1f31103c87459625"
                    ]
                },
                {
                    "command": [
                        "rewrite IHs1, IHs2.",
                        "VernacExtend",
                        "3365e3c5023d8e463d7af7048e4ff019f8cc1937"
                    ]
                },
                {
                    "command": [
                        "unfold elements; simpl.",
                        "VernacExtend",
                        "3a5ede3fc95cc2d937dc2e580411df13d3f8a30c"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 IHs1, IHs2, !app_nil_r, !app_ass; auto.",
                        "VernacExtend",
                        "2db4dc49d2fb68c3949c26765b74f253d379ac66"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_node",
            "line_nb": 316,
            "steps": [
                {
                    "command": [
                        "unfold elements; simpl.",
                        "VernacExtend",
                        "3a5ede3fc95cc2d937dc2e580411df13d3f8a30c"
                    ]
                },
                {
                    "command": [
                        "now rewrite !elements_app, !app_nil_r.",
                        "VernacExtend",
                        "868f3a5428e4ca350975f51c1b9de19fa12bd995"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rev_elements_app",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "induction s; simpl; intros; auto.",
                        "VernacExtend",
                        "959f715c7053f7a7d894450f1f31103c87459625"
                    ]
                },
                {
                    "command": [
                        "rewrite IHs1, IHs2.",
                        "VernacExtend",
                        "3365e3c5023d8e463d7af7048e4ff019f8cc1937"
                    ]
                },
                {
                    "command": [
                        "unfold rev_elements; simpl.",
                        "VernacExtend",
                        "0c21d95112716a416f065530a1da18c0557760d3"
                    ]
                },
                {
                    "command": [
                        "rewrite IHs1, 2 IHs2, !app_nil_r, !app_ass; auto.",
                        "VernacExtend",
                        "db9097d6c5eb15ffaa0ea30c04811702a18171e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rev_elements_node",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "unfold rev_elements; simpl.",
                        "VernacExtend",
                        "0c21d95112716a416f065530a1da18c0557760d3"
                    ]
                },
                {
                    "command": [
                        "now rewrite !rev_elements_app, !app_nil_r.",
                        "VernacExtend",
                        "32cba55e61355599a8c18f1b69ff86720f94e385"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rev_elements_rev",
            "line_nb": 330,
            "steps": [
                {
                    "command": [
                        "induction s as [|c l IHl x r IHr]; trivial.",
                        "VernacExtend",
                        "d5a630541321f932708c64054a8bed191a4cc19a"
                    ]
                },
                {
                    "command": [
                        "rewrite elements_node, rev_elements_node, IHl, IHr, rev_app_distr.",
                        "VernacExtend",
                        "875b8f358e3c2abae11f04d35dba928c08a8248c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite !app_ass.",
                        "VernacExtend",
                        "986d0363693b17bcede2025aebadaa97bc9ef1f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sorted_app_inv",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "induction l1 as [|a1 l1 IHl1].",
                        "VernacExtend",
                        "0ee0f4d216757956efea01e70c48f3c30bf46ba6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; repeat split; auto.",
                        "VernacExtend",
                        "3ab577c16b2a79c246746612a387375f04af39ea"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite InA_nil in *.",
                        "VernacExtend",
                        "f59b88c4bb3d9490d3665613cfae4745c9cb4f5d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 1 as [ | ? ? Hs Hhd ].",
                        "VernacExtend",
                        "0c6f6f5478b9c97e6c7f9eea3911bf1b07270c38"
                    ]
                },
                {
                    "command": [
                        "destruct (IHl1 Hs) as (H1 & H2 & H3).",
                        "VernacExtend",
                        "6e06a1b3ceade85bd41412f75795add61a71670f"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "destruct l1; simpl in *; auto; inversion_clear Hhd; auto.",
                        "VernacExtend",
                        "5e40b84fa4afda77198e2b273bc389f720853766"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros x1 x2 Hx1 Hx2.",
                        "VernacExtend",
                        "d04bbcc6d9584349d9dcfb372731276a46d59132"
                    ]
                },
                {
                    "command": [
                        "rewrite InA_cons in Hx1.",
                        "VernacExtend",
                        "6bc04213a122f040a03ffa94a2153ff92d31011c"
                    ]
                },
                {
                    "command": [
                        "destruct Hx1.",
                        "VernacExtend",
                        "19d247114efca06324b6233adb69563b4a56447f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply SortA_InfA_InA with (eqA:=X.eq)(l:=l1++l2); auto_tc.",
                        "VernacExtend",
                        "ac5512a03d7d39dab12be1af572999e29f2da151"
                    ]
                },
                {
                    "command": [
                        "rewrite InA_app_iff; auto_tc.",
                        "VernacExtend",
                        "e23b367ce6bc3d7bb6f9171e0436dcb53fcca813"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_sort_ok",
            "line_nb": 363,
            "steps": [
                {
                    "command": [
                        "induction s as [|c l IHl x r IHr].",
                        "VernacExtend",
                        "4e71ce4797bef75d1e98e0d0edc36d3268a01932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite elements_node.",
                        "VernacExtend",
                        "b1529e5e4ce7335e07b623a08ae5a2024d94d98e"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "destruct (sorted_app_inv _ _ H) as (H1 & H2 & H3).",
                        "VernacExtend",
                        "a5b7aaa9e89bae0a9e9619bfd18ff0c8ca63c206"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H2.",
                        "VernacExtend",
                        "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
                    ]
                },
                {
                    "command": [
                        "constructor; ok.",
                        "VernacExtend",
                        "179ce06c339b01dc00100d7c924a53b546fdc87b"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros y Hy.",
                        "VernacExtend",
                        "d610d987f827782ed7ad408419c9743f4107dcdc"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now rewrite elements_spec1.",
                        "VernacExtend",
                        "2d6d84c0eefb9163907260c56cd8e6a2b0c42a67"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite InA_cons.",
                        "VernacExtend",
                        "a0b009472a1bc7e0a4f2a7c276744fe9882cd0af"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros y Hy.",
                        "VernacExtend",
                        "d610d987f827782ed7ad408419c9743f4107dcdc"
                    ]
                },
                {
                    "command": [
                        "apply SortA_InfA_InA with (eqA:=X.eq)(l:=elements r); auto_tc.",
                        "VernacExtend",
                        "e08827003ff9a1bf319c412d3a9c9d90cd899a9b"
                    ]
                },
                {
                    "command": [
                        "now rewrite elements_spec1.",
                        "VernacExtend",
                        "2d6d84c0eefb9163907260c56cd8e6a2b0c42a67"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "for_all_spec",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "intros Hf; unfold For_all.",
                        "VernacExtend",
                        "ca68ab3b32fcc3ae305454c007a5f20631b0ba7f"
                    ]
                },
                {
                    "command": [
                        "induction s as [|i l IHl x r IHr]; simpl; auto.",
                        "VernacExtend",
                        "40caa660580e59b210326e68f57d343adb037fe8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; intros; inv; auto.",
                        "VernacExtend",
                        "73c678fa7c10a77bc15ddf1c36f0ea78eb9cd97b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !andb_lazy_alt, !andb_true_iff, IHl, IHr.",
                        "VernacExtend",
                        "cd04270c4f2a1e105462989eaee74fbbf7c0a4d0"
                    ]
                },
                {
                    "command": [
                        "clear IHl IHr.",
                        "VernacExtend",
                        "5a7a9973ce90f18b5dcd497acbfdb02ae1bb70fb"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_spec",
            "line_nb": 397,
            "steps": [
                {
                    "command": [
                        "intros Hf; unfold Exists.",
                        "VernacExtend",
                        "5f5a96a678c0dd0a89b9794f688995dbbd9f19b5"
                    ]
                },
                {
                    "command": [
                        "induction s as [|i l IHl x r IHr]; simpl; auto.",
                        "VernacExtend",
                        "40caa660580e59b210326e68f57d343adb037fe8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros (y,(H,_)); inv.",
                        "VernacExtend",
                        "d67f82d0d406b95918a2e42c66affab9b30dbbd2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !orb_lazy_alt, !orb_true_iff, IHl, IHr.",
                        "VernacExtend",
                        "2d913819480f26ea102b085f094ae519c583a500"
                    ]
                },
                {
                    "command": [
                        "clear IHl IHr.",
                        "VernacExtend",
                        "5a7a9973ce90f18b5dcd497acbfdb02ae1bb70fb"
                    ]
                },
                {
                    "command": [
                        "split; [intros [[H|(y,(H,H'))]|(y,(H,H'))]|intros (y,(H,H'))].",
                        "VernacExtend",
                        "3b991af2add52b358c5be27a97ca7126578c8456"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "exists x; auto.",
                        "VernacExtend",
                        "d8b3edd09d34953d83a4fbc6350c30f804073b09"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "exists y; auto.",
                        "VernacExtend",
                        "2a5ece7ebb3072d93dd214864e7ff9b009d438fd"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "exists y; auto.",
                        "VernacExtend",
                        "2a5ece7ebb3072d93dd214864e7ff9b009d438fd"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "inv; [left;left|left;right|right]; try (exists y); eauto.",
                        "VernacExtend",
                        "c883d79b2e91991eb5adc528ecc7c863b342bc68"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_spec'",
            "line_nb": 419,
            "steps": [
                {
                    "command": [
                        "revert i acc.",
                        "VernacExtend",
                        "bfcfc3412fcc70ec5fb3d256bd154e24a6314c59"
                    ]
                },
                {
                    "command": [
                        "induction s as [|c l IHl x r IHr]; simpl; intros; auto.",
                        "VernacExtend",
                        "74b8d56c1f807315c7ec49f8437f47c9c7f6f6b0"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl.",
                        "VernacExtend",
                        "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold flip at 2.",
                        "VernacExtend",
                        "245d48066d0691505704ed2823af2731ac060f84"
                    ]
                },
                {
                    "command": [
                        "apply IHr.",
                        "VernacExtend",
                        "a0cca3bb49aa1514c3159d9c0330c9591fdba0ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_spec",
            "line_nb": 427,
            "steps": [
                {
                    "command": [
                        "revert i.",
                        "VernacExtend",
                        "12a69b3d317edc383939fa75e3d3138a28d80c39"
                    ]
                },
                {
                    "command": [
                        "unfold elements.",
                        "VernacExtend",
                        "093b6a2c5ab0f35c698ece9baa542c2b9b260d09"
                    ]
                },
                {
                    "command": [
                        "induction s as [|c l IHl x r IHr]; simpl; intros; auto.",
                        "VernacExtend",
                        "74b8d56c1f807315c7ec49f8437f47c9c7f6f6b0"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_spec'.",
                        "VernacExtend",
                        "ba8ebfdd83a5e7ec628ee14d3b9ce10cb4b2ed49"
                    ]
                },
                {
                    "command": [
                        "rewrite IHr.",
                        "VernacExtend",
                        "76d9ad6af9b6951b0510dda9e634d5066c6507b1"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subsetl_spec",
            "line_nb": 435,
            "steps": [
                {
                    "command": [
                        "induction s2 as [|c2 l2 IHl2 x2 r2 IHr2]; simpl; intros.",
                        "VernacExtend",
                        "408f9b3a9b07fbf01607d82e073781cf9ad39395"
                    ]
                },
                {
                    "command": [
                        "unfold Subset; intuition; try discriminate.",
                        "VernacExtend",
                        "9ea711f77e084a6494f496edf0f99baec100ee28"
                    ]
                },
                {
                    "command": [
                        "assert (H': InT x1 Leaf) by auto; inversion H'.",
                        "VernacExtend",
                        "fe0cbd5244001aa2672efa01f9e726f4c8810b53"
                    ]
                },
                {
                    "command": [
                        "specialize (IHl2 H).",
                        "VernacExtend",
                        "00890a67f48a33d1800ca2618f010754bd9d68e2"
                    ]
                },
                {
                    "command": [
                        "specialize (IHr2 H).",
                        "VernacExtend",
                        "439dc944f17a7b304e9a69d54774af3128391099"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "elim_compare x1 x2.",
                        "VernacExtend",
                        "9019bff7f620100af8979acda72366df067790fd"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 by auto; clear H1 IHl2 IHr2.",
                        "VernacExtend",
                        "51733dec677e8636379e5972719ca28de72231b5"
                    ]
                },
                {
                    "command": [
                        "unfold Subset.",
                        "VernacExtend",
                        "a4bf683ddd36d56259359cf224252c445a5325d5"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "assert (X.eq a x2) by order; intuition_in.",
                        "VernacExtend",
                        "de72504d9611071bf290ccb26abe1f4e612516fa"
                    ]
                },
                {
                    "command": [
                        "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
                        "VernacExtend",
                        "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl2 by auto; clear H1 IHl2 IHr2.",
                        "VernacExtend",
                        "ea5a5ef1ed5aa4874c5f88c56a1ed9ed70c9740a"
                    ]
                },
                {
                    "command": [
                        "unfold Subset.",
                        "VernacExtend",
                        "a4bf683ddd36d56259359cf224252c445a5325d5"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
                        "VernacExtend",
                        "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
                    ]
                },
                {
                    "command": [
                        "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
                        "VernacExtend",
                        "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
                    ]
                },
                {
                    "command": [
                        "rewrite <-andb_lazy_alt, andb_true_iff, H1 by auto; clear H1 IHl2 IHr2.",
                        "VernacExtend",
                        "6c02820f0fea777c9d34ec53b3d230d56f5ea7c0"
                    ]
                },
                {
                    "command": [
                        "unfold Subset.",
                        "VernacExtend",
                        "a4bf683ddd36d56259359cf224252c445a5325d5"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "constructor 3.",
                        "VernacExtend",
                        "fc203c31040684912422f2b19644a4136ee46779"
                    ]
                },
                {
                    "command": [
                        "setoid_replace a with x1; auto.",
                        "VernacExtend",
                        "ae3c441d339235661db98cad84bdb7ac746a0939"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mem_spec; auto.",
                        "VernacExtend",
                        "8084d3e3ae245fb9e1d1583bd360f695aec35f9c"
                    ]
                },
                {
                    "command": [
                        "rewrite mem_spec; auto.",
                        "VernacExtend",
                        "387a78ef2a1259be9a20e3ba050a2823c04bc814"
                    ]
                },
                {
                    "command": [
                        "assert (InT x1 (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
                        "VernacExtend",
                        "f0be5dc8ed03328822c8f11e1875e4822f516bac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subsetr_spec",
            "line_nb": 462,
            "steps": [
                {
                    "command": [
                        "induction s2 as [|c2 l2 IHl2 x2 r2 IHr2]; simpl; intros.",
                        "VernacExtend",
                        "408f9b3a9b07fbf01607d82e073781cf9ad39395"
                    ]
                },
                {
                    "command": [
                        "unfold Subset; intuition; try discriminate.",
                        "VernacExtend",
                        "9ea711f77e084a6494f496edf0f99baec100ee28"
                    ]
                },
                {
                    "command": [
                        "assert (H': InT x1 Leaf) by auto; inversion H'.",
                        "VernacExtend",
                        "fe0cbd5244001aa2672efa01f9e726f4c8810b53"
                    ]
                },
                {
                    "command": [
                        "specialize (IHl2 H).",
                        "VernacExtend",
                        "00890a67f48a33d1800ca2618f010754bd9d68e2"
                    ]
                },
                {
                    "command": [
                        "specialize (IHr2 H).",
                        "VernacExtend",
                        "439dc944f17a7b304e9a69d54774af3128391099"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "elim_compare x1 x2.",
                        "VernacExtend",
                        "9019bff7f620100af8979acda72366df067790fd"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 by auto; clear H1 IHl2 IHr2.",
                        "VernacExtend",
                        "51733dec677e8636379e5972719ca28de72231b5"
                    ]
                },
                {
                    "command": [
                        "unfold Subset.",
                        "VernacExtend",
                        "a4bf683ddd36d56259359cf224252c445a5325d5"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "assert (X.eq a x2) by order; intuition_in.",
                        "VernacExtend",
                        "de72504d9611071bf290ccb26abe1f4e612516fa"
                    ]
                },
                {
                    "command": [
                        "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
                        "VernacExtend",
                        "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
                    ]
                },
                {
                    "command": [
                        "rewrite <-andb_lazy_alt, andb_true_iff, H1 by auto; clear H1 IHl2 IHr2.",
                        "VernacExtend",
                        "6c02820f0fea777c9d34ec53b3d230d56f5ea7c0"
                    ]
                },
                {
                    "command": [
                        "unfold Subset.",
                        "VernacExtend",
                        "a4bf683ddd36d56259359cf224252c445a5325d5"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "constructor 2.",
                        "VernacExtend",
                        "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
                    ]
                },
                {
                    "command": [
                        "setoid_replace a with x1; auto.",
                        "VernacExtend",
                        "ae3c441d339235661db98cad84bdb7ac746a0939"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mem_spec; auto.",
                        "VernacExtend",
                        "8084d3e3ae245fb9e1d1583bd360f695aec35f9c"
                    ]
                },
                {
                    "command": [
                        "rewrite mem_spec; auto.",
                        "VernacExtend",
                        "387a78ef2a1259be9a20e3ba050a2823c04bc814"
                    ]
                },
                {
                    "command": [
                        "assert (InT x1 (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
                        "VernacExtend",
                        "f0be5dc8ed03328822c8f11e1875e4822f516bac"
                    ]
                },
                {
                    "command": [
                        "rewrite IHr2 by auto; clear H1 IHl2 IHr2.",
                        "VernacExtend",
                        "2550d6c3bf1e392bb7269da4c74725c4c40be840"
                    ]
                },
                {
                    "command": [
                        "unfold Subset.",
                        "VernacExtend",
                        "a4bf683ddd36d56259359cf224252c445a5325d5"
                    ]
                },
                {
                    "command": [
                        "intuition_in.",
                        "VernacExtend",
                        "d8943b758f8da03177723f43853aa754dd563cb6"
                    ]
                },
                {
                    "command": [
                        "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
                        "VernacExtend",
                        "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
                    ]
                },
                {
                    "command": [
                        "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
                        "VernacExtend",
                        "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_spec",
            "line_nb": 489,
            "steps": [
                {
                    "command": [
                        "induction s1 as [|c1 l1 IHl1 x1 r1 IHr1]; simpl; intros.",
                        "VernacExtend",
                        "7faaeae6f14d5a0c469e95620de7ebf471e96bec"
                    ]
                },
                {
                    "command": [
                        "unfold Subset; intuition_in.",
                        "VernacExtend",
                        "cb015423acb549009294eeea534aa326beacf401"
                    ]
                },
                {
                    "command": [
                        "destruct s2 as [|c2 l2 x2 r2]; simpl; intros.",
                        "VernacExtend",
                        "bfee461d01fb4568a9358c1e356a348b4c40fe8f"
                    ]
                },
                {
                    "command": [
                        "unfold Subset; intuition_in; try discriminate.",
                        "VernacExtend",
                        "248949f2d21c4d88dc01878adfe1ea67e66c66f8"
                    ]
                },
                {
                    "command": [
                        "assert (H': InT x1 Leaf) by auto; inversion H'.",
                        "VernacExtend",
                        "fe0cbd5244001aa2672efa01f9e726f4c8810b53"
                    ]
                },
                {
                    "command": [
                        "inv.",
                        "VernacExtend",
                        "e01a4a12d3f51e424b10a83ee61df826d656fd1d"
                    ]
                },
                {
                    "command": [
                        "elim_compare x1 x2.",
                        "VernacExtend",
                        "9019bff7f620100af8979acda72366df067790fd"
                    ]
                },
                {
                    "command": [
                        "rewrite <-andb_lazy_alt, andb_true_iff, IHl1, IHr1 by auto.",
                        "VernacExtend",
                        "a14df83cbc7622aa91b0256096c8e978aa017438"
                    ]
                },
                {
                    "command": [
                        "clear IHl1 IHr1.",
                        "VernacExtend",
                        "b8580009f12a4d1c0bbdbe813ee73ccdc81c9478"
                    ]
                },
                {
                    "command": [
                        "unfold Subset; intuition_in.",
                        "VernacExtend",
                        "cb015423acb549009294eeea534aa326beacf401"
                    ]
                },
                {
                    "command": [
                        "assert (X.eq a x2) by order; intuition_in.",
                        "VernacExtend",
                        "de72504d9611071bf290ccb26abe1f4e612516fa"
                    ]
                },
                {
                    "command": [
                        "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
                        "VernacExtend",
                        "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
                    ]
                },
                {
                    "command": [
                        "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
                        "VernacExtend",
                        "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
                    ]
                },
                {
                    "command": [
                        "rewrite <-andb_lazy_alt, andb_true_iff, IHr1 by auto.",
                        "VernacExtend",
                        "9b39685b702ac8f8cc96612d695a4479444f397e"
                    ]
                },
                {
                    "command": [
                        "rewrite (@subsetl_spec (subset l1) l1 x1 c1) by auto.",
                        "VernacExtend",
                        "fbf7b7bad1dfe95cd8f2f89b6962c2d6efbbb0f5"
                    ]
                },
                {
                    "command": [
                        "clear IHl1 IHr1.",
                        "VernacExtend",
                        "b8580009f12a4d1c0bbdbe813ee73ccdc81c9478"
                    ]
                },
                {
                    "command": [
                        "unfold Subset; intuition_in.",
                        "VernacExtend",
                        "cb015423acb549009294eeea534aa326beacf401"
                    ]
                },
                {
                    "command": [
                        "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
                        "VernacExtend",
                        "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
                    ]
                },
                {
                    "command": [
                        "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
                        "VernacExtend",
                        "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
                    ]
                },
                {
                    "command": [
                        "rewrite <-andb_lazy_alt, andb_true_iff, IHl1 by auto.",
                        "VernacExtend",
                        "33ef51bb56d089872bff5981b09ca821a1050509"
                    ]
                },
                {
                    "command": [
                        "rewrite (@subsetr_spec (subset r1) r1 x1 c1) by auto.",
                        "VernacExtend",
                        "fb246fa421b57395938c898acf87de6d4c844ed2"
                    ]
                },
                {
                    "command": [
                        "clear IHl1 IHr1.",
                        "VernacExtend",
                        "b8580009f12a4d1c0bbdbe813ee73ccdc81c9478"
                    ]
                },
                {
                    "command": [
                        "unfold Subset; intuition_in.",
                        "VernacExtend",
                        "cb015423acb549009294eeea534aa326beacf401"
                    ]
                },
                {
                    "command": [
                        "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
                        "VernacExtend",
                        "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
                    ]
                },
                {
                    "command": [
                        "assert (InT a (Node c2 l2 x2 r2)) by auto; intuition_in; order.",
                        "VernacExtend",
                        "e8363bd6f41aa0745eb822ddc954f99c68f63bb1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_equiv",
            "line_nb": 518,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_Leq",
            "line_nb": 521,
            "steps": [
                {
                    "command": [
                        "unfold eq, Equal, L.eq; intros.",
                        "VernacExtend",
                        "54a66104943fb870b1664dc6434bd5310ab8a59e"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite elements_spec1.",
                        "VernacExtend",
                        "7a178fbc736e55a196f7315928f6d20efb9e36fa"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_strorder",
            "line_nb": 528,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros s (s1 & s2 & B1 & B2 & E1 & E2 & L).",
                        "VernacExtend",
                        "4a228519706bb6ce472ad5233e0048a77263e4ec"
                    ]
                },
                {
                    "command": [
                        "assert (eqlistA X.eq (elements s1) (elements s2)).",
                        "VernacExtend",
                        "c47c098a4f98ea315da45a9c08791341f2aa58a3"
                    ]
                },
                {
                    "command": [
                        "apply SortA_equivlistA_eqlistA with (ltA:=X.lt); auto with *.",
                        "VernacExtend",
                        "754b3985b03b25ad0761e6ef61b19581c0d476ea"
                    ]
                },
                {
                    "command": [
                        "rewrite <- eq_Leq.",
                        "VernacExtend",
                        "e85f27e978c0cc092d4a6a792a5bbabb23564edc"
                    ]
                },
                {
                    "command": [
                        "transitivity s; auto.",
                        "VernacExtend",
                        "6ebf414dce7764edd4b133af8589d25f7a3dc6a2"
                    ]
                },
                {
                    "command": [
                        "symmetry; auto.",
                        "VernacExtend",
                        "72331728cf41281b1b06fee3e3b5ef380ea044a9"
                    ]
                },
                {
                    "command": [
                        "rewrite H in L.",
                        "VernacExtend",
                        "262ee5cbccd2e64d5bb7d7fd876a4e766948f0b1"
                    ]
                },
                {
                    "command": [
                        "apply (StrictOrder_Irreflexive (elements s2)); auto.",
                        "VernacExtend",
                        "b0ff2972bb9c1347eee14e12db154124b9adc270"
                    ]
                },
                {
                    "command": [
                        "intros s1 s2 s3 (s1' & s2' & B1 & B2 & E1 & E2 & L12) (s2'' & s3' & B2' & B3 & E2' & E3 & L23).",
                        "VernacExtend",
                        "9078959d340d7de0d2dc0b5803d9946e95b9c6f6"
                    ]
                },
                {
                    "command": [
                        "exists s1', s3'; do 4 (split; trivial).",
                        "VernacExtend",
                        "34d1662cfd2874e2fe94e5b3beb7b7fb0c30f449"
                    ]
                },
                {
                    "command": [
                        "assert (eqlistA X.eq (elements s2') (elements s2'')).",
                        "VernacExtend",
                        "e882f2760fe70f6c41992305d4ee36e3802d6cd8"
                    ]
                },
                {
                    "command": [
                        "apply SortA_equivlistA_eqlistA with (ltA:=X.lt); auto with *.",
                        "VernacExtend",
                        "754b3985b03b25ad0761e6ef61b19581c0d476ea"
                    ]
                },
                {
                    "command": [
                        "rewrite <- eq_Leq.",
                        "VernacExtend",
                        "e85f27e978c0cc092d4a6a792a5bbabb23564edc"
                    ]
                },
                {
                    "command": [
                        "transitivity s2; auto.",
                        "VernacExtend",
                        "394405d9c6e8e96932fb748642fc1718477cfe54"
                    ]
                },
                {
                    "command": [
                        "symmetry; auto.",
                        "VernacExtend",
                        "72331728cf41281b1b06fee3e3b5ef380ea044a9"
                    ]
                },
                {
                    "command": [
                        "transitivity (elements s2'); auto.",
                        "VernacExtend",
                        "aea8dcc8bc113a94dcb7555ce1d9755d24657708"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_compat",
            "line_nb": 548,
            "steps": [
                {
                    "command": [
                        "intros s1 s2 E12 s3 s4 E34.",
                        "VernacExtend",
                        "600f01bebd3a5b34f52d26bd5b6057fb2fc5f0b3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros (s1' & s3' & B1 & B3 & E1 & E3 & LT).",
                        "VernacExtend",
                        "23d9f553dd8b5aec9df80d7332341c1a710e657b"
                    ]
                },
                {
                    "command": [
                        "exists s1', s3'; do 2 (split; trivial).",
                        "VernacExtend",
                        "360c4e7b254a4961b9793209c6b011f9bb13e8db"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "transitivity s1; auto.",
                        "VernacExtend",
                        "bb740eda98792dc760bb29909ddd523033cca08d"
                    ]
                },
                {
                    "command": [
                        "symmetry; auto.",
                        "VernacExtend",
                        "72331728cf41281b1b06fee3e3b5ef380ea044a9"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "transitivity s3; auto.",
                        "VernacExtend",
                        "d363df512363d965e2116b9f2b5606ff46eae514"
                    ]
                },
                {
                    "command": [
                        "symmetry; auto.",
                        "VernacExtend",
                        "72331728cf41281b1b06fee3e3b5ef380ea044a9"
                    ]
                },
                {
                    "command": [
                        "intros (s1' & s3' & B1 & B3 & E1 & E3 & LT).",
                        "VernacExtend",
                        "23d9f553dd8b5aec9df80d7332341c1a710e657b"
                    ]
                },
                {
                    "command": [
                        "exists s1', s3'; do 2 (split; trivial).",
                        "VernacExtend",
                        "360c4e7b254a4961b9793209c6b011f9bb13e8db"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "transitivity s2; auto.",
                        "VernacExtend",
                        "394405d9c6e8e96932fb748642fc1718477cfe54"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "transitivity s4; auto.",
                        "VernacExtend",
                        "6e16546cc8fcbc8023cda0b4e0c44e133ce51f73"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flatten_e_elements",
            "line_nb": 567,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite elements_node, app_ass.",
                        "VernacExtend",
                        "7cfd6c2578e1d20fa6c23edad26a482960aebe27"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cons_1",
            "line_nb": 571,
            "steps": [
                {
                    "command": [
                        "induction s; simpl; auto; intros.",
                        "VernacExtend",
                        "8cc60e2fb53dbfe93182ec51277e6b76519afa7a"
                    ]
                },
                {
                    "command": [
                        "rewrite IHs1; apply flatten_e_elements.",
                        "VernacExtend",
                        "d908195c3254f73e7acebf91bf4b8a54f2d86ce0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_end_Cmp",
            "line_nb": 577,
            "steps": [
                {
                    "command": [
                        "destruct e2; simpl; constructor; auto.",
                        "VernacExtend",
                        "81bc16d182651d38374195836f9bf83d6cecc2a9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_more_Cmp",
            "line_nb": 581,
            "steps": [
                {
                    "command": [
                        "simpl; intros; elim_compare x1 x2; simpl; red; auto.",
                        "VernacExtend",
                        "2425f30ecd60a574e37352f2831e68449332f7de"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_cont_Cmp",
            "line_nb": 584,
            "steps": [
                {
                    "command": [
                        "induction s1 as [|c1 l1 Hl1 x1 r1 Hr1]; intros; auto.",
                        "VernacExtend",
                        "3d6fd7a9e80d697156d7142689214ff0ded60a6d"
                    ]
                },
                {
                    "command": [
                        "rewrite elements_node, app_ass; simpl.",
                        "VernacExtend",
                        "b515d04dcf32399027794ef9246ac8dcfef82877"
                    ]
                },
                {
                    "command": [
                        "apply Hl1; auto.",
                        "VernacExtend",
                        "247b19b1a76df71264ab7b1b51ad1eda98cffa03"
                    ]
                },
                {
                    "command": [
                        "clear e2.",
                        "VernacExtend",
                        "3939743f01c0d90dfd875e763b8437a8e7072be0"
                    ]
                },
                {
                    "command": [
                        "intros [|x2 r2 e2].",
                        "VernacExtend",
                        "22275c06dfb02f283e95471ff3ef63b53bd18307"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "apply compare_more_Cmp.",
                        "VernacExtend",
                        "61488033014635f609ff9d822949e23a240cfb72"
                    ]
                },
                {
                    "command": [
                        "rewrite <- cons_1; auto.",
                        "VernacExtend",
                        "023e9b6f744de2cce6cbb7b277e4c9fa570707ab"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_Cmp",
            "line_nb": 594,
            "steps": [
                {
                    "command": [
                        "intros; unfold compare.",
                        "VernacExtend",
                        "40c1cc8a760bf1c0999a99de14229f6a2f1ca44c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (app_nil_r (elements s1)).",
                        "VernacExtend",
                        "356fa61d947438e668d1e7f9f0b0ce88b3c1713e"
                    ]
                },
                {
                    "command": [
                        "replace (elements s2) with (flatten_e (cons s2 End)) by (rewrite cons_1; simpl; rewrite app_nil_r; auto).",
                        "VernacExtend",
                        "537c62d12b02561a9ab342eaa4ae2617180e6bcc"
                    ]
                },
                {
                    "command": [
                        "apply compare_cont_Cmp; auto.",
                        "VernacExtend",
                        "521bcd5c675912c6267e70b1405f7096643fc8d6"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply compare_end_Cmp; auto.",
                        "VernacExtend",
                        "523f256ae6499c3465f8fb2b63b28a6949381ec5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_spec",
            "line_nb": 602,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (compare_Cmp s1 s2); constructor.",
                        "VernacExtend",
                        "9858262dc9bcddb1406c824c3838ea7f2d5094a2"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_Leq; auto.",
                        "VernacExtend",
                        "d770e393e42135ad468f39d01bf0106f429945f5"
                    ]
                },
                {
                    "command": [
                        "intros; exists s1, s2; repeat split; auto.",
                        "VernacExtend",
                        "f1ff9ecafe1592e6ebdda92888d4997ee63007a4"
                    ]
                },
                {
                    "command": [
                        "intros; exists s2, s1; repeat split; auto.",
                        "VernacExtend",
                        "9196d7e5f48769638bfa69f38cac289a97621bf4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_spec",
            "line_nb": 609,
            "steps": [
                {
                    "command": [
                        "unfold equal; intros s1 s2 B1 B2.",
                        "VernacExtend",
                        "08a274c8465d16d363ca4cdecfaea05ae2722fad"
                    ]
                },
                {
                    "command": [
                        "destruct (@compare_spec s1 s2 B1 B2) as [H|H|H]; split; intros H'; auto; try discriminate.",
                        "VernacExtend",
                        "5bc068ec841a627dd7b098759af22bfca059f682"
                    ]
                },
                {
                    "command": [
                        "rewrite H' in H.",
                        "VernacExtend",
                        "15b945a781d83326e1b7ae2f3071e5a9299b1807"
                    ]
                },
                {
                    "command": [
                        "elim (StrictOrder_Irreflexive s2); auto.",
                        "VernacExtend",
                        "762c589c5db9aeb329dd48babb8aa78ecc50df9e"
                    ]
                },
                {
                    "command": [
                        "rewrite H' in H.",
                        "VernacExtend",
                        "15b945a781d83326e1b7ae2f3071e5a9299b1807"
                    ]
                },
                {
                    "command": [
                        "elim (StrictOrder_Irreflexive s2); auto.",
                        "VernacExtend",
                        "762c589c5db9aeb329dd48babb8aa78ecc50df9e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mindepth_maxdepth",
            "line_nb": 617,
            "steps": [
                {
                    "command": [
                        "induction s; simpl; auto.",
                        "VernacExtend",
                        "59ccd0e20737d99a61d3198e34181ad04d55732b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nat.succ_le_mono.",
                        "VernacExtend",
                        "99fc6af2a61c5c479f5320a14a8c6a4547b68d0b"
                    ]
                },
                {
                    "command": [
                        "transitivity (mindepth s1).",
                        "VernacExtend",
                        "cbda977d008c3eebc670d62e879292292b22ea5e"
                    ]
                },
                {
                    "command": [
                        "apply Nat.le_min_l.",
                        "VernacExtend",
                        "924201d918a491402281df6c1e914d9ac8bd5593"
                    ]
                },
                {
                    "command": [
                        "transitivity (maxdepth s1).",
                        "VernacExtend",
                        "671a0df16c7c021b47e7310acee709c4e8309a10"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply Nat.le_max_l.",
                        "VernacExtend",
                        "9c2c9f115d23b4704773103b68b0773ae7d66520"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxdepth_cardinal",
            "line_nb": 626,
            "steps": [
                {
                    "command": [
                        "unfold Peano.lt.",
                        "VernacExtend",
                        "c51b63d4704ea1bbe7974c8a658490bf301c70b4"
                    ]
                },
                {
                    "command": [
                        "induction s as [|c l IHl x r IHr].",
                        "VernacExtend",
                        "4e71ce4797bef75d1e98e0d0edc36d3268a01932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nat.add_succ_r, <- Nat.add_succ_l, Nat.add_0_r.",
                        "VernacExtend",
                        "c6dcc6507848abded4668de4ff0324f3dcc6eccf"
                    ]
                },
                {
                    "command": [
                        "apply Nat.add_le_mono; etransitivity; try apply IHl; try apply IHr; apply Nat.pow_le_mono; auto.",
                        "VernacExtend",
                        "41457bb5b4b2795e9aefcdc33e72cb79e1109cd8"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply Nat.le_max_l.",
                        "VernacExtend",
                        "9c2c9f115d23b4704773103b68b0773ae7d66520"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply Nat.le_max_r.",
                        "VernacExtend",
                        "89e1813c7b063bd7e2ec597609bc2e51776817f2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mindepth_cardinal",
            "line_nb": 640,
            "steps": [
                {
                    "command": [
                        "unfold Peano.lt.",
                        "VernacExtend",
                        "c51b63d4704ea1bbe7974c8a658490bf301c70b4"
                    ]
                },
                {
                    "command": [
                        "induction s as [|c l IHl x r IHr].",
                        "VernacExtend",
                        "4e71ce4797bef75d1e98e0d0edc36d3268a01932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Nat.add_succ_r, <- Nat.add_succ_l, Nat.add_0_r.",
                        "VernacExtend",
                        "c6dcc6507848abded4668de4ff0324f3dcc6eccf"
                    ]
                },
                {
                    "command": [
                        "apply Nat.add_le_mono; etransitivity; try apply IHl; try apply IHr; apply Nat.pow_le_mono; auto.",
                        "VernacExtend",
                        "41457bb5b4b2795e9aefcdc33e72cb79e1109cd8"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply Nat.le_min_l.",
                        "VernacExtend",
                        "924201d918a491402281df6c1e914d9ac8bd5593"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply Nat.le_min_r.",
                        "VernacExtend",
                        "8eaa8bdc1f83aa61dcd5a9c15f1694c6b4889d11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "maxdepth_log_cardinal",
            "line_nb": 654,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply Nat.log2_lt_pow2.",
                        "VernacExtend",
                        "3aaf6827c4d5843bbfd132acac9cda08a2117a37"
                    ]
                },
                {
                    "command": [
                        "destruct s; simpl; intuition.",
                        "VernacExtend",
                        "32a2bcf8bf52b3637f1f172c151bd9ccf8c86df2"
                    ]
                },
                {
                    "command": [
                        "apply maxdepth_cardinal.",
                        "VernacExtend",
                        "71a4a1b32590e7388926e770b7dc013c54c05b85"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mindepth_log_cardinal",
            "line_nb": 660,
            "steps": [
                {
                    "command": [
                        "apply Nat.log2_le_pow2.",
                        "VernacExtend",
                        "92817f90980d48aa67887747ca94ded7c56c33ec"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "apply mindepth_cardinal.",
                        "VernacExtend",
                        "6ff9e4e292f4068d27e16e8fb7200a72d10d8596"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}