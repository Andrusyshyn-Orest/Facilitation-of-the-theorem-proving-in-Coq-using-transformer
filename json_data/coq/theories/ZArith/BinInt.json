{
    "filename": "theories/ZArith/BinInt.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export BinNums BinPos Pnat.",
            "VernacRequire",
            "5bc0ca47d9997ea4e4e7761f403231c8579159e8"
        ],
        [
            "Require Import BinNat Bool Equalities GenericMinMax OrdersFacts ZAxioms ZProperties.",
            "VernacRequire",
            "6707ef032db7ea1f455f3e1bceff7c402af35ebb"
        ],
        [
            "Require BinIntDef.",
            "VernacRequire",
            "ac5e48cf6dc14637106f1aa3dfd4d67cdc058b5f"
        ],
        [
            "Local Open Scope Z_scope.",
            "VernacOpenCloseScope",
            "5313930c0cd5fa63810c1c79463485ebf0638bad"
        ],
        [
            "Module Z <: ZAxiomsSig <: UsualOrderedTypeFull <: UsualDecidableTypeFull <: TotalOrder.",
            "VernacDefineModule",
            "2b97c9bdad7bcbd34734814f81889e0fce315f50"
        ],
        [
            "Include BinIntDef.Z.",
            "VernacInclude",
            "4e6a1a4d59ca8a64bdee29d6b162bd629572fdf9"
        ],
        [
            "Set Inline Level 30.",
            "VernacSetOption",
            "758384c1399d1d65834d1d64537d4e818c7d8f20"
        ],
        [
            "Definition eq := @Logic.eq Z.",
            "VernacDefinition",
            "036eeb1246d4e773faec61b2b975d2a127500ad6"
        ],
        [
            "Definition eq_equiv := @eq_equivalence Z.",
            "VernacDefinition",
            "2ffe7cbc3e1d9f1d4e1bf1e2c774ad2fb899e5bb"
        ],
        [
            "Definition lt x y := (x ?= y) = Lt.",
            "VernacDefinition",
            "d5bd792422a260c8d304b7674e4cca6328037d4c"
        ],
        [
            "Definition gt x y := (x ?= y) = Gt.",
            "VernacDefinition",
            "93863703b9eb50fca629646299f0f7101375b6e6"
        ],
        [
            "Definition le x y := (x ?= y) <> Gt.",
            "VernacDefinition",
            "0f197bbfdbe501c3569989ce9a26bcdd596a84b7"
        ],
        [
            "Definition ge x y := (x ?= y) <> Lt.",
            "VernacDefinition",
            "def92fc772c0b095b894f223c74b63e03d48768c"
        ],
        [
            "Infix \"<=\" := le : Z_scope.",
            "VernacInfix",
            "13a036ae4f0dc9568d8a0ac0aaf7d131fed3baaa"
        ],
        [
            "Infix \"<\" := lt : Z_scope.",
            "VernacInfix",
            "6eeae9223678320e45719583c2789048e35ed5b4"
        ],
        [
            "Infix \">=\" := ge : Z_scope.",
            "VernacInfix",
            "27c7918df35b591d743baca884d6b907f458a7b0"
        ],
        [
            "Infix \">\" := gt : Z_scope.",
            "VernacInfix",
            "b2cf8f4cbb3e698506d6bf003275e9a7e0700821"
        ],
        [
            "Notation \"x <= y <= z\" := (x <= y /\\ y <= z) : Z_scope.",
            "VernacNotation",
            "17c7e342e663c49d2318fe4e5819c22ec90aaf99"
        ],
        [
            "Notation \"x <= y < z\" := (x <= y /\\ y < z) : Z_scope.",
            "VernacNotation",
            "fbf791173aee395ac10334610d03ccfba69b1683"
        ],
        [
            "Notation \"x < y < z\" := (x < y /\\ y < z) : Z_scope.",
            "VernacNotation",
            "a3829fdb27c086240a66b2cb91f1180019a795d4"
        ],
        [
            "Notation \"x < y <= z\" := (x < y /\\ y <= z) : Z_scope.",
            "VernacNotation",
            "f36d0037e48b63f94bd8a58752517d6f9659155b"
        ],
        [
            "Definition divide x y := exists z, y = z*x.",
            "VernacDefinition",
            "c5993f95c650e7d01bdedaad216a537a534d44eb"
        ],
        [
            "Notation \"( x | y )\" := (divide x y) (at level 0).",
            "VernacNotation",
            "47b4ed918da66b3b56fb9fb84452b509d1940857"
        ],
        [
            "Definition Even a := exists b, a = 2*b.",
            "VernacDefinition",
            "ca9d711d3af0e43ad0d3511b1e8faee8489204ab"
        ],
        [
            "Definition Odd a := exists b, a = 2*b+1.",
            "VernacDefinition",
            "ea44b3d3f249b41a525b232126bf136d7e0a37ce"
        ],
        [
            "Definition eq_dec (x y : Z) : {x = y} + {x <> y}.",
            "VernacDefinition",
            "e4839280d43ffa9e3c0aae184bb27e63d8ce6a30"
        ],
        [
            "decide equality; apply Pos.eq_dec.",
            "VernacExtend",
            "1c35153f9630743a404edcab7b01de6c57c68717"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Local Obligation Tactic := simpl_relation.",
            "VernacExtend",
            "6b4f1d97ceebbbe22852551526c14b7ecb1b2179"
        ],
        [
            "Program Definition succ_wd : Proper (eq==>eq) succ := _.",
            "VernacDefinition",
            "b23966f275e221506af35810fad29ff0302e6638"
        ],
        [
            "Program Definition pred_wd : Proper (eq==>eq) pred := _.",
            "VernacDefinition",
            "f254fec8c310777bee648917caa1ec5a05fbca9d"
        ],
        [
            "Program Definition opp_wd : Proper (eq==>eq) opp := _.",
            "VernacDefinition",
            "c17ac643cf804d0bfca667872194166fdc825d8f"
        ],
        [
            "Program Definition add_wd : Proper (eq==>eq==>eq) add := _.",
            "VernacDefinition",
            "ebeb3a9dc9cd1b8a902443cbd82b4765c547bd81"
        ],
        [
            "Program Definition sub_wd : Proper (eq==>eq==>eq) sub := _.",
            "VernacDefinition",
            "0909707facda79906d9540b028625f35c228f6e4"
        ],
        [
            "Program Definition mul_wd : Proper (eq==>eq==>eq) mul := _.",
            "VernacDefinition",
            "bdc1be41b14baaa9d58fb9279c0f898290cca158"
        ],
        [
            "Program Definition lt_wd : Proper (eq==>eq==>iff) lt := _.",
            "VernacDefinition",
            "452dd5d96fdb97e1210f329a427ad0583bf90fc1"
        ],
        [
            "Program Definition div_wd : Proper (eq==>eq==>eq) div := _.",
            "VernacDefinition",
            "5af9d861ca9b883df9b22c1211852a27671e7811"
        ],
        [
            "Program Definition mod_wd : Proper (eq==>eq==>eq) modulo := _.",
            "VernacDefinition",
            "03fea711248b6fad56d4e10d953f26054ee5008e"
        ],
        [
            "Program Definition quot_wd : Proper (eq==>eq==>eq) quot := _.",
            "VernacDefinition",
            "f252239cdc7d735ad7aadfc90b98642e1cbc727e"
        ],
        [
            "Program Definition rem_wd : Proper (eq==>eq==>eq) rem := _.",
            "VernacDefinition",
            "cd26bba3797154a28d8ec867be20b4b35081c9e2"
        ],
        [
            "Program Definition pow_wd : Proper (eq==>eq==>eq) pow := _.",
            "VernacDefinition",
            "336dffb4204a09c9e26e6327958a09e4f0655c69"
        ],
        [
            "Program Definition testbit_wd : Proper (eq==>eq==>Logic.eq) testbit := _.",
            "VernacDefinition",
            "b6227401b129869908e518d9bd32d4639b3195fa"
        ],
        [
            "Lemma pos_sub_spec p q : pos_sub p q = match (p ?= q)%positive with | Eq => 0 | Lt => neg (q - p) | Gt => pos (p - q) end.",
            "VernacStartTheoremProof",
            "d78894c8a56a3907eaf00061fe1739e324652c79"
        ],
        [
            "revert q.",
            "VernacExtend",
            "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
        ],
        [
            "induction p; destruct q; simpl; trivial; rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; simpl; case Pos.compare_spec; intros; simpl; trivial; (now rewrite Pos.sub_xI_xI) || (now rewrite Pos.sub_xO_xO) || (now rewrite Pos.sub_xO_xI) || (now rewrite Pos.sub_xI_xO) || subst; unfold Pos.sub; simpl; now rewrite Pos.sub_mask_diag.",
            "VernacExtend",
            "894c09554bd57271853fe580c0d4c88a42fe76a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_sub_discr p q : match pos_sub p q with | Z0 => p = q | pos k => p = q + k | neg k => q = p + k end%positive.",
            "VernacStartTheoremProof",
            "027e4d207d4f157325127d09bf231be87c567f1d"
        ],
        [
            "rewrite pos_sub_spec.",
            "VernacExtend",
            "20096a1d75d20c18ab3e44d516bd00054d12ee1d"
        ],
        [
            "case Pos.compare_spec; auto; intros; now rewrite Pos.add_comm, Pos.sub_add.",
            "VernacExtend",
            "d4e203ac250599ed30fdff900c4ceeb3fedd05d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_sub_diag p : pos_sub p p = 0.",
            "VernacStartTheoremProof",
            "9b111280deaa355e4c75dc8b40a2d43f1e15f7af"
        ],
        [
            "now rewrite pos_sub_spec, Pos.compare_refl.",
            "VernacExtend",
            "2d3df7b500548c956206b679f24075e94a9ed71a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_sub_lt p q : (p < q)%positive -> pos_sub p q = neg (q - p).",
            "VernacStartTheoremProof",
            "8002466e2ce140267cfd362fcc1df47c2be1e129"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "now rewrite pos_sub_spec, H.",
            "VernacExtend",
            "4fb8accc67f793acb0d2918f690e3600ed016907"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_sub_gt p q : (q < p)%positive -> pos_sub p q = pos (p - q).",
            "VernacStartTheoremProof",
            "31d0c4b1fc9e41cc9e10ddf096acc74574a413ed"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "now rewrite pos_sub_spec, Pos.compare_antisym, H.",
            "VernacExtend",
            "699e85519f0db89f087d70326d0e5ec631db2786"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_sub_opp p q : - pos_sub p q = pos_sub q p.",
            "VernacStartTheoremProof",
            "5d4d364fe839fcdd95382b4f0e99872e2ef7ac74"
        ],
        [
            "revert q; induction p; destruct q; simpl; trivial; rewrite <- IHp; now destruct pos_sub.",
            "VernacExtend",
            "152b22bc32b9a2dbc0d5729f4112789e651bc1b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Module Import Private_BootStrap.",
            "VernacDefineModule",
            "24873a245d990f40ee289643a1c44ac13b39a5da"
        ],
        [
            "Lemma add_0_r n : n + 0 = n.",
            "VernacStartTheoremProof",
            "d730eb13b15d97fcc4e5be1539cc1fb4ff7714e4"
        ],
        [
            "now destruct n.",
            "VernacExtend",
            "6e836d168cd359f41ad4e992ef54068680a38db2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_0_r n : n * 0 = 0.",
            "VernacStartTheoremProof",
            "3d2ce62ec6cd0aa275bcd9b67e9f252299fb78c3"
        ],
        [
            "now destruct n.",
            "VernacExtend",
            "6e836d168cd359f41ad4e992ef54068680a38db2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_1_l n : 1 * n = n.",
            "VernacStartTheoremProof",
            "9909572897b08fba1debbb9cc9476164f7b7d672"
        ],
        [
            "now destruct n.",
            "VernacExtend",
            "6e836d168cd359f41ad4e992ef54068680a38db2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_comm n m : n + m = m + n.",
            "VernacStartTheoremProof",
            "c4274b6256f101cb833a327af1b6b7295daae496"
        ],
        [
            "destruct n, m; simpl; trivial; now rewrite Pos.add_comm.",
            "VernacExtend",
            "674dc56a78b1bafcfc1b607829c8235125f25f0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_add_distr n m : - (n + m) = - n + - m.",
            "VernacStartTheoremProof",
            "acb1bb783db7f770fcce11b2305a67e187c3bf25"
        ],
        [
            "destruct n, m; simpl; trivial using pos_sub_opp.",
            "VernacExtend",
            "3ed518cb1cdca2f0a85dba8ca259034440cf762d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_inj n m : -n = -m -> n = m.",
            "VernacStartTheoremProof",
            "606e7996d71733a750c98e9526831bc180af5572"
        ],
        [
            "destruct n, m; simpl; intros H; destr_eq H; now f_equal.",
            "VernacExtend",
            "f30236312ade542e6153658b3abbb28f8dad87e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_sub_add p q r : pos_sub (p + q) r = pos p + pos_sub q r.",
            "VernacStartTheoremProof",
            "bbe56e1cdf73ff78772bab3f4356c7b51d2383ed"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite !pos_sub_spec.",
            "VernacExtend",
            "979147f4279af1267505b6d2b22de8f47b5d7c0c"
        ],
        [
            "case (Pos.compare_spec q r); intros E0.",
            "VernacExtend",
            "807ede93e347c31661ff5bf4688a8b110b17c88d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "assert (H := Pos.lt_add_r r p).",
            "VernacExtend",
            "d5e6f7b6b01abea1fe5bd418c0b689d25e7ffaff"
        ],
        [
            "rewrite Pos.add_comm in H.",
            "VernacExtend",
            "f5dda2bb36dc00db799cd8d9cee02dc520f8a898"
        ],
        [
            "apply Pos.lt_gt in H.",
            "VernacExtend",
            "ef5d0633001161dbf235e09f7999a250098136c4"
        ],
        [
            "now rewrite H, Pos.add_sub.",
            "VernacExtend",
            "f1be79f77d9c60107b1370adda0156acb86e212b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite pos_sub_spec.",
            "VernacExtend",
            "20096a1d75d20c18ab3e44d516bd00054d12ee1d"
        ],
        [
            "assert (Hr : (r = (r-q)+q)%positive) by (now rewrite Pos.sub_add).",
            "VernacExtend",
            "63b19494ea538654d2b10c4b0555b7349120e927"
        ],
        [
            "rewrite Hr at 1.",
            "VernacExtend",
            "530297dd737c0822e98f1a2efbd0a7dbbcf7b184"
        ],
        [
            "rewrite Pos.add_compare_mono_r.",
            "VernacExtend",
            "a39bf84cd9c3fd182ae07d2ee90575560f00a37b"
        ],
        [
            "case Pos.compare_spec; intros E1; trivial; f_equal.",
            "VernacExtend",
            "a49447f52161aaf325821d39d46c02a81bb7d56e"
        ],
        [
            "rewrite Pos.add_comm.",
            "VernacExtend",
            "4f794b32aa99f040ef36918dd1a14806df118107"
        ],
        [
            "apply Pos.sub_add_distr.",
            "VernacExtend",
            "cedc33a70051945cf109f5384ea82086c3996b73"
        ],
        [
            "rewrite Hr, Pos.add_comm.",
            "VernacExtend",
            "18c53fc50336f48afaa3ef44b874a792bb9ecb86"
        ],
        [
            "now apply Pos.add_lt_mono_r.",
            "VernacExtend",
            "7b90588a37d29cd9a60cdea27a5e93bcecb498cf"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Pos.sub_sub_distr; trivial.",
            "VernacExtend",
            "5f693a8ff7c1486f23777acbbde7fd4d401ae249"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (LT : (r < p + q)%positive).",
            "VernacExtend",
            "0120c25a56d1f5e2b982bc63639cf1f2fed98957"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Pos.lt_trans with q; trivial.",
            "VernacExtend",
            "f7861884a803b5f850c61af65538c0c8ea5176f2"
        ],
        [
            "rewrite Pos.add_comm.",
            "VernacExtend",
            "4f794b32aa99f040ef36918dd1a14806df118107"
        ],
        [
            "apply Pos.lt_add_r.",
            "VernacExtend",
            "aa67129d81748e0ba998a2baefa6f8b35af5b4bf"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply Pos.lt_gt in LT.",
            "VernacExtend",
            "69cb8a60b08aa2dc5880b9de5104d429f33422e1"
        ],
        [
            "rewrite LT.",
            "VernacExtend",
            "1e9bb7c54ac6112eec5bd8295fa65d6138e23da6"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "now apply Pos.add_sub_assoc.",
            "VernacExtend",
            "f27fc9c48e7fb8fa3d05387602bde8dc14bd54a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Arguments add !x !y.",
            "VernacArguments",
            "f774c00aa9677a50039ede2fb5ad3083dcc609b5"
        ],
        [
            "Lemma add_assoc_pos p n m : pos p + (n + m) = pos p + n + m.",
            "VernacStartTheoremProof",
            "01b497f50a18a0d21ddaf1d19b345b9dca041c1c"
        ],
        [
            "destruct n as [|n|n], m as [|m|m]; simpl; trivial.",
            "VernacExtend",
            "d674b8c339a4bcd4ccc53342456c2106084756d2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite Pos.add_assoc.",
            "VernacExtend",
            "345827af541c94d0f615cdb2bea893dd9f6e1dc6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply pos_sub_add.",
            "VernacExtend",
            "bf654a4eb9e64e7340daebe5d898b340dc7fc359"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply add_0_r.",
            "VernacExtend",
            "63230604730b5822b5d3bddf769d188a5a547393"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite <- pos_sub_add, add_comm, <- pos_sub_add, Pos.add_comm.",
            "VernacExtend",
            "6735da12a2610d1b93d754343d990d7e83b03e86"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply opp_inj.",
            "VernacExtend",
            "d0438731c868fda82f59a5e64e65cc606eedec69"
        ],
        [
            "rewrite !opp_add_distr, !pos_sub_opp.",
            "VernacExtend",
            "4cbf518dcab0fadf431d6afd3b84ba9eec8d46e8"
        ],
        [
            "rewrite add_comm, Pos.add_comm.",
            "VernacExtend",
            "d3360730d163c6f923dc608be3f2962701c16590"
        ],
        [
            "apply pos_sub_add.",
            "VernacExtend",
            "bf654a4eb9e64e7340daebe5d898b340dc7fc359"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_assoc n m p : n + (m + p) = n + m + p.",
            "VernacStartTheoremProof",
            "f54e15c4f6ea98da117eb035b585a55a69a67257"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply add_assoc_pos.",
            "VernacExtend",
            "c8555a4a664873385d6b05327ab9fa11b9c91453"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply opp_inj.",
            "VernacExtend",
            "d0438731c868fda82f59a5e64e65cc606eedec69"
        ],
        [
            "rewrite !opp_add_distr.",
            "VernacExtend",
            "939536d3c0266c61838c9481e591052b85ee24d1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply add_assoc_pos.",
            "VernacExtend",
            "c8555a4a664873385d6b05327ab9fa11b9c91453"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_opp_diag_r n : n + - n = 0.",
            "VernacStartTheoremProof",
            "8e6cfdbf318eede1a29ef539f579e80d6f233d19"
        ],
        [
            "destruct n; simpl; trivial; now rewrite pos_sub_diag.",
            "VernacExtend",
            "98c4c2ec471b4b2a39a3efd7b75a918fad2f8905"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_opp_r n m : n * - m = - (n * m).",
            "VernacStartTheoremProof",
            "b644f9bc287fb275b8c38b8609cd8f9309f7c277"
        ],
        [
            "now destruct n, m.",
            "VernacExtend",
            "6ac2678c514a0e2c81a4ad011fc3e315a2da5682"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_add_distr_pos (p:positive) n m : (n + m) * pos p = n * pos p + m * pos p.",
            "VernacStartTheoremProof",
            "13de0240b1520d44961caefc04b57e9ec4076f1b"
        ],
        [
            "destruct n as [|n|n], m as [|m|m]; simpl; trivial.",
            "VernacExtend",
            "d674b8c339a4bcd4ccc53342456c2106084756d2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite Pos.mul_add_distr_r.",
            "VernacExtend",
            "820141900622799b809e4b62956cc7ee1302c8f3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite ?pos_sub_spec, ?Pos.mul_compare_mono_r; case Pos.compare_spec; simpl; trivial; intros; now rewrite Pos.mul_sub_distr_r.",
            "VernacExtend",
            "8c0cdc080f88a78d8a7eed05dc464d29caaa0c81"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite ?pos_sub_spec, ?Pos.mul_compare_mono_r; case Pos.compare_spec; simpl; trivial; intros; now rewrite Pos.mul_sub_distr_r.",
            "VernacExtend",
            "8c0cdc080f88a78d8a7eed05dc464d29caaa0c81"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite Pos.mul_add_distr_r.",
            "VernacExtend",
            "820141900622799b809e4b62956cc7ee1302c8f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_add_distr_r n m p : (n + m) * p = n * p + m * p.",
            "VernacStartTheoremProof",
            "9a2ee3c37e59dbf5f9a273f376e54b05f3d3990a"
        ],
        [
            "destruct p as [|p|p].",
            "VernacExtend",
            "6bc855890b6517e32987d0b5ba55fca726352075"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite !mul_0_r.",
            "VernacExtend",
            "62c411783ab207a150093f17b453afd4dba39815"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply mul_add_distr_pos.",
            "VernacExtend",
            "3b0236df72b9065e4a00430ab6241e0c76f70f3c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply opp_inj.",
            "VernacExtend",
            "d0438731c868fda82f59a5e64e65cc606eedec69"
        ],
        [
            "rewrite opp_add_distr, <- !mul_opp_r.",
            "VernacExtend",
            "94b3d18a29cc3ba5f0d3b4493717c0899a24e4cc"
        ],
        [
            "apply mul_add_distr_pos.",
            "VernacExtend",
            "3b0236df72b9065e4a00430ab6241e0c76f70f3c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Private_BootStrap.",
            "VernacEndSegment",
            "0ef8f800e6376c2c3e2868ca2967637e23ec0d5d"
        ],
        [
            "Lemma one_succ : 1 = succ 0.",
            "VernacStartTheoremProof",
            "aa7c92227c30a428bcf4fd9428ffe7c73881ef0b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma two_succ : 2 = succ 1.",
            "VernacStartTheoremProof",
            "8d1249de39804ae12f7e36d1f75e5797b7b921d4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_0_l n : 0 + n = n.",
            "VernacStartTheoremProof",
            "a2ebfb5af08646da2cb40462c6cfe2cbf2e3297d"
        ],
        [
            "now destruct n.",
            "VernacExtend",
            "6e836d168cd359f41ad4e992ef54068680a38db2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_succ_l n m : succ n + m = succ (n + m).",
            "VernacStartTheoremProof",
            "1f6ca2ccebe77fdbbd5e92b50a2d15fbf21d8611"
        ],
        [
            "unfold succ.",
            "VernacExtend",
            "8d37bbdf17f277d3b9e0a1bfcd91c6eb3f09e939"
        ],
        [
            "now rewrite 2 (add_comm _ 1), add_assoc.",
            "VernacExtend",
            "50610e0fd0ff7d1a95ababf81dedc662462f7a1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_0 : -0 = 0.",
            "VernacStartTheoremProof",
            "b24582fd181302fa30ee505cd1f87ef6ceeaa926"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_succ n : -(succ n) = pred (-n).",
            "VernacStartTheoremProof",
            "e359d5af5bb8a817b5a0329e30e8a4841c44abe8"
        ],
        [
            "unfold succ, pred.",
            "VernacExtend",
            "11629b2621ebd106379f8e19a678325a67c5fb41"
        ],
        [
            "apply opp_add_distr.",
            "VernacExtend",
            "ce8217cdfe19e7ab7780aaafbc3a1f2ee8b796de"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Arguments pos_sub : simpl nomatch.",
            "VernacArguments",
            "8c8dc5664378b1f6e202f040f4b63b9b6869eb30"
        ],
        [
            "Lemma succ_pred n : succ (pred n) = n.",
            "VernacStartTheoremProof",
            "27794154c10b4023301896fa214b22447066437e"
        ],
        [
            "unfold succ, pred.",
            "VernacExtend",
            "11629b2621ebd106379f8e19a678325a67c5fb41"
        ],
        [
            "now rewrite <- add_assoc, add_opp_diag_r, add_0_r.",
            "VernacExtend",
            "14ed05a000e6cc3ab5eedeea681e19a6f5f35671"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_succ n : pred (succ n) = n.",
            "VernacStartTheoremProof",
            "124a91468f40041282d91a171631992a10249586"
        ],
        [
            "unfold succ, pred.",
            "VernacExtend",
            "11629b2621ebd106379f8e19a678325a67c5fb41"
        ],
        [
            "now rewrite <- add_assoc, add_opp_diag_r, add_0_r.",
            "VernacExtend",
            "14ed05a000e6cc3ab5eedeea681e19a6f5f35671"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_0_r n : n - 0 = n.",
            "VernacStartTheoremProof",
            "a04a7feecc14d683db1f1c9f660f47c64c9e0fbf"
        ],
        [
            "apply add_0_r.",
            "VernacExtend",
            "63230604730b5822b5d3bddf769d188a5a547393"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_succ_r n m : n - succ m = pred (n - m).",
            "VernacStartTheoremProof",
            "b16760e76d8bb6b6727ae945d91ba57c854f5bc5"
        ],
        [
            "unfold sub, succ, pred.",
            "VernacExtend",
            "499833c1d144c55dca5d16ec85e432958ae21f8f"
        ],
        [
            "now rewrite opp_add_distr, add_assoc.",
            "VernacExtend",
            "1d7cb7a515b5a50bcfa923c19901c3e81879bcbf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_0_l n : 0 * n = 0.",
            "VernacStartTheoremProof",
            "a67794d97affa0b91ca2e0382a2510676f00caae"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_succ_l n m : succ n * m = n * m + m.",
            "VernacStartTheoremProof",
            "49f488de880e9a6fdc8741fc84e35feb958e797b"
        ],
        [
            "unfold succ.",
            "VernacExtend",
            "8d37bbdf17f277d3b9e0a1bfcd91c6eb3f09e939"
        ],
        [
            "now rewrite mul_add_distr_r, mul_1_l.",
            "VernacExtend",
            "248404c6a18494fc65fc6c27b22f6509c4efacbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqb_eq n m : (n =? m) = true <-> n = m.",
            "VernacStartTheoremProof",
            "3b31e012314166eca3fc6d72784519841dfd47b3"
        ],
        [
            "destruct n, m; simpl; try (now split); rewrite Pos.eqb_eq; split; (now injection 1) || (intros; now f_equal).",
            "VernacExtend",
            "8758b3af267252dddef85aee71372ffa47e24849"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltb_lt n m : (n <? m) = true <-> n < m.",
            "VernacStartTheoremProof",
            "e6667b03729b125aa428f4391c57dda49f309d20"
        ],
        [
            "unfold ltb, lt.",
            "VernacExtend",
            "5c43f5b40fe682aacd161431c57dc1d7e63820e5"
        ],
        [
            "destruct compare; easy'.",
            "VernacExtend",
            "9c58ca66031ca52e7ded2a67e5812d35fe76b30c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leb_le n m : (n <=? m) = true <-> n <= m.",
            "VernacStartTheoremProof",
            "2c615dc0342ab947929d363b089f3d64d9bcc9c8"
        ],
        [
            "unfold leb, le.",
            "VernacExtend",
            "691c599dca3e1dc8df9a04f30af6f52e19a455ff"
        ],
        [
            "destruct compare; easy'.",
            "VernacExtend",
            "9c58ca66031ca52e7ded2a67e5812d35fe76b30c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_eq_iff n m : (n ?= m) = Eq <-> n = m.",
            "VernacStartTheoremProof",
            "a5ebc005bf87e2caba2f997d430b4b676b4d8675"
        ],
        [
            "destruct n, m; simpl; rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; split; congruence.",
            "VernacExtend",
            "c31211b3641bbe3a642a5c12dbc0ea8ac8be8748"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_sub n m : (n ?= m) = (n - m ?= 0).",
            "VernacStartTheoremProof",
            "c766d59499d4523c578cffbcf048c1d4627d7a76"
        ],
        [
            "destruct n as [|n|n], m as [|m|m]; simpl; trivial; rewrite <- ? Pos.compare_antisym, ?pos_sub_spec; case Pos.compare_spec; trivial.",
            "VernacExtend",
            "a3a33b65bd6d3a4ed0435a01a11f39a1bc3a95ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_antisym n m : (m ?= n) = CompOpp (n ?= m).",
            "VernacStartTheoremProof",
            "6412dd4af59e60252c7b44223f1419c767ff53b8"
        ],
        [
            "destruct n, m; simpl; trivial; now rewrite <- ?Pos.compare_antisym.",
            "VernacExtend",
            "46039212a3c003c0840bbc425633cf33b731dcf7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_lt_iff n m : (n ?= m) = Lt <-> n < m.",
            "VernacStartTheoremProof",
            "5457ffa7bb63465be4c17c74c15ec72bcb96109b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_le_iff n m : (n ?= m) <> Gt <-> n <= m.",
            "VernacStartTheoremProof",
            "d1dbc4ee38eb5d929cd69335fbc75b2baddb93fd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Include BoolOrderFacts.",
            "VernacInclude",
            "519e384a7bf9b986f7c52ee3d7beb61721d9a8ea"
        ],
        [
            "Lemma lt_succ_r n m : n < succ m <-> n<=m.",
            "VernacStartTheoremProof",
            "afdb71ad3ee1f3cf55b7bf20c5046b69d580ea6c"
        ],
        [
            "unfold lt, le.",
            "VernacExtend",
            "f599fabfc187f3f20300529b934c5737cd55a245"
        ],
        [
            "rewrite compare_sub, sub_succ_r.",
            "VernacExtend",
            "1ddada47699833a4fc36a5b022f41ed5840b5169"
        ],
        [
            "rewrite (compare_sub n m).",
            "VernacExtend",
            "4ff28122ff6bd351c87542199d531ce7d83be5db"
        ],
        [
            "destruct (n-m) as [|[ | | ]|]; easy'.",
            "VernacExtend",
            "fd59a1d7194da42cf6679f5922666bc10284e1db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_l n m : m<=n -> max n m = n.",
            "VernacStartTheoremProof",
            "a09a7c69292fd79e5852bbea96356c46cfa5a8c8"
        ],
        [
            "unfold le, max.",
            "VernacExtend",
            "eceaaee01291732e1b36a2f2016a8ae8974ef88e"
        ],
        [
            "rewrite (compare_antisym n m).",
            "VernacExtend",
            "c989418e577744a618cc859473080a16d0efc2ad"
        ],
        [
            "case compare; intuition.",
            "VernacExtend",
            "42c4b62ffca386494d0d76921940ddc80de5b6f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_r n m : n<=m -> max n m = m.",
            "VernacStartTheoremProof",
            "23c430c2ae65a88eb2ad09fa93582b8c148d6f09"
        ],
        [
            "unfold le, max.",
            "VernacExtend",
            "eceaaee01291732e1b36a2f2016a8ae8974ef88e"
        ],
        [
            "case compare_spec; intuition.",
            "VernacExtend",
            "585d6b45f0ad4a887ee7ae08bdb00cf4f5af7318"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_l n m : n<=m -> min n m = n.",
            "VernacStartTheoremProof",
            "743b91158bf093969e3dcd0df3ce84f55f1bcf29"
        ],
        [
            "unfold le, min.",
            "VernacExtend",
            "4a32463b97d6de13a2947e315ac7915d1f1c294d"
        ],
        [
            "case compare_spec; intuition.",
            "VernacExtend",
            "585d6b45f0ad4a887ee7ae08bdb00cf4f5af7318"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_r n m : m<=n -> min n m = m.",
            "VernacStartTheoremProof",
            "71c9f398c52ae932aa4bbfc6afac6d7485196e99"
        ],
        [
            "unfold le, min.",
            "VernacExtend",
            "4a32463b97d6de13a2947e315ac7915d1f1c294d"
        ],
        [
            "rewrite (compare_antisym n m).",
            "VernacExtend",
            "c989418e577744a618cc859473080a16d0efc2ad"
        ],
        [
            "case compare_spec; intuition.",
            "VernacExtend",
            "585d6b45f0ad4a887ee7ae08bdb00cf4f5af7318"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma peano_ind (P : Z -> Prop) : P 0 -> (forall x, P x -> P (succ x)) -> (forall x, P x -> P (pred x)) -> forall z, P z.",
            "VernacStartTheoremProof",
            "86dac350519cefcf1c692708b8be4a69dde2f258"
        ],
        [
            "intros H0 Hs Hp z; destruct z.",
            "VernacExtend",
            "b298d8305903f65e3cce461f348a5ab936b8c636"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "induction p using Pos.peano_ind.",
            "VernacExtend",
            "73c49fbd432adb07f14ae63b2c315ed4cf2ca757"
        ],
        [
            "now apply (Hs 0).",
            "VernacExtend",
            "9baa2ae295e5517a8d95fce17ea0da91e1253865"
        ],
        [
            "rewrite <- Pos.add_1_r.",
            "VernacExtend",
            "451e2b23b2fd1da0238c3eaeaa36c27a56c2b53f"
        ],
        [
            "now apply (Hs (pos p)).",
            "VernacExtend",
            "c220a04e03f0e84e959d80c70ebda284b650c22f"
        ],
        [
            "induction p using Pos.peano_ind.",
            "VernacExtend",
            "73c49fbd432adb07f14ae63b2c315ed4cf2ca757"
        ],
        [
            "now apply (Hp 0).",
            "VernacExtend",
            "14f91da1cff55079864bc554f1ff4ab31de3e753"
        ],
        [
            "rewrite <- Pos.add_1_r.",
            "VernacExtend",
            "451e2b23b2fd1da0238c3eaeaa36c27a56c2b53f"
        ],
        [
            "now apply (Hp (neg p)).",
            "VernacExtend",
            "cf6ede4d340f9cb15b0671f83c3af819fca47bf7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bi_induction (P : Z -> Prop) : Proper (eq ==> iff) P -> P 0 -> (forall x, P x <-> P (succ x)) -> forall z, P z.",
            "VernacStartTheoremProof",
            "a43057966bdb81b373c9183c50a38b9e4deb7734"
        ],
        [
            "intros _ H0 Hs.",
            "VernacExtend",
            "247acfc57f8f755f600bde1a0141621fc821e1f2"
        ],
        [
            "induction z using peano_ind.",
            "VernacExtend",
            "140f73268ff80d800d85e70bf22c2f8a4f30533e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "now apply -> Hs.",
            "VernacExtend",
            "cbfb9bd1b63d4b56dc724437ba8a241a50d7c23c"
        ],
        [
            "apply Hs.",
            "VernacExtend",
            "26038359dfe6b0cb344439243c160e8be398bca9"
        ],
        [
            "now rewrite succ_pred.",
            "VernacExtend",
            "08bd893d4e8646c910ce5b3a5a43c1226e45bb1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Include ZBasicProp <+ UsualMinMaxLogicalProperties <+ UsualMinMaxDecProperties.",
            "VernacInclude",
            "5db22918e61dbee6a2fdaf2cb194006c1be83744"
        ],
        [
            "Lemma abs_eq n : 0 <= n -> abs n = n.",
            "VernacStartTheoremProof",
            "5ad91e562c647c3cf5271b0feaa6f9168da8d9ed"
        ],
        [
            "destruct n; trivial.",
            "VernacExtend",
            "075df2df6f50c3b92752b2e357bd92e8caf75e9c"
        ],
        [
            "now destruct 1.",
            "VernacExtend",
            "599cf8488dce43cedbb3491ca78a34441bf2a1bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abs_neq n : n <= 0 -> abs n = - n.",
            "VernacStartTheoremProof",
            "45dd54818ad1b9b307e0b0bc3876604924ce32ca"
        ],
        [
            "destruct n; trivial.",
            "VernacExtend",
            "075df2df6f50c3b92752b2e357bd92e8caf75e9c"
        ],
        [
            "now destruct 1.",
            "VernacExtend",
            "599cf8488dce43cedbb3491ca78a34441bf2a1bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgn_null n : n = 0 -> sgn n = 0.",
            "VernacStartTheoremProof",
            "09c07eaf8b51bf59985848c30bc8811a8dd0ecd9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now subst.",
            "VernacExtend",
            "89cc250d34dafb32c3653b2706abafd433151f2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgn_pos n : 0 < n -> sgn n = 1.",
            "VernacStartTheoremProof",
            "da773663ea3b98362856ccac2c7c39f9bc26a4c4"
        ],
        [
            "now destruct n.",
            "VernacExtend",
            "6e836d168cd359f41ad4e992ef54068680a38db2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sgn_neg n : n < 0 -> sgn n = -1.",
            "VernacStartTheoremProof",
            "e82dbaa3472451c9abdde58d90ea4e0637af6b89"
        ],
        [
            "now destruct n.",
            "VernacExtend",
            "6e836d168cd359f41ad4e992ef54068680a38db2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_0_r n : n^0 = 1.",
            "VernacStartTheoremProof",
            "04bcde8e6d8a8a74c524b716140c026fab471419"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_succ_r n m : 0<=m -> n^(succ m) = n * n^m.",
            "VernacStartTheoremProof",
            "6949917d0418b0074697b2b6bc8552da45a36493"
        ],
        [
            "destruct m as [|m|m]; (now destruct 1) || (intros _); simpl; trivial.",
            "VernacExtend",
            "68603c2162557db2bef53c517b532678b87559dc"
        ],
        [
            "unfold pow_pos.",
            "VernacExtend",
            "c98cc6897b7f24758d34f1bccf73e81371b99293"
        ],
        [
            "now rewrite Pos.add_comm, Pos.iter_add.",
            "VernacExtend",
            "6a1ae2df3a82907ca0c71dd2dd5fc826dde156dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_neg_r n m : m<0 -> n^m = 0.",
            "VernacStartTheoremProof",
            "d0cba5d6711dcfbb83b570d50cffa6adca18efed"
        ],
        [
            "now destruct m.",
            "VernacExtend",
            "8eb99d252d0c586d6342e58a659c3b7b773e9af1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_pos_fold n p : pow_pos n p = n ^ (pos p).",
            "VernacStartTheoremProof",
            "9e31ae6ece5038b9cba6341a80977a7036fd2062"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma square_spec n : square n = n * n.",
            "VernacStartTheoremProof",
            "722f4e7f4fd2ff00b1f75250a38d50767e4abc09"
        ],
        [
            "destruct n; trivial; simpl; f_equal; apply Pos.square_spec.",
            "VernacExtend",
            "84338f273d1abd2261e08202b23a1aa440a230f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtrem_spec n : 0<=n -> let (s,r) := sqrtrem n in n = s*s + r /\\ 0 <= r <= 2*s.",
            "VernacStartTheoremProof",
            "15eecaa39c224e2e6eeb302edb472a98b8858eb6"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "now repeat split.",
            "VernacExtend",
            "c72cd3622e1d20acc435e373d27c5276d1d324dc"
        ],
        [
            "generalize (Pos.sqrtrem_spec p).",
            "VernacExtend",
            "31fe5cf2685c45379566ba25ef6ec179c9212544"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct 1; simpl; subst; now repeat split.",
            "VernacExtend",
            "4d17767aee94af2a890eee745ee77830839a703e"
        ],
        [
            "now destruct 1.",
            "VernacExtend",
            "599cf8488dce43cedbb3491ca78a34441bf2a1bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_spec n : 0<=n -> let s := sqrt n in s*s <= n < (succ s)*(succ s).",
            "VernacStartTheoremProof",
            "9d8f28fb098cdc0c1a121d3f13bf12d19c88b226"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "now repeat split.",
            "VernacExtend",
            "c72cd3622e1d20acc435e373d27c5276d1d324dc"
        ],
        [
            "unfold sqrt.",
            "VernacExtend",
            "71ef64092f0003bcdade22760b25585d0190003b"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "simpl succ.",
            "VernacExtend",
            "45b3c0a8ed09673034d21f0462d59d72cbe3b362"
        ],
        [
            "rewrite Pos.add_1_r.",
            "VernacExtend",
            "55a2bed981075a8e459b652bca988f7e054bee2e"
        ],
        [
            "apply (Pos.sqrt_spec p).",
            "VernacExtend",
            "fd422f013872dafb0f78b6293d7c546264973403"
        ],
        [
            "now destruct 1.",
            "VernacExtend",
            "599cf8488dce43cedbb3491ca78a34441bf2a1bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_neg n : n<0 -> sqrt n = 0.",
            "VernacStartTheoremProof",
            "6377f53143a2f89bd71f72d95b70be4aa64a5788"
        ],
        [
            "now destruct n.",
            "VernacExtend",
            "6e836d168cd359f41ad4e992ef54068680a38db2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtrem_sqrt n : fst (sqrtrem n) = sqrt n.",
            "VernacStartTheoremProof",
            "655922f9676aa805324c88dc4d783c62c466e50c"
        ],
        [
            "destruct n; try reflexivity.",
            "VernacExtend",
            "1a04264fdd355bcc55faa8364949dfecda544027"
        ],
        [
            "unfold sqrtrem, sqrt, Pos.sqrt.",
            "VernacExtend",
            "ce8382892108523789726c43c4bc8f21fc4ef5ad"
        ],
        [
            "destruct (Pos.sqrtrem p) as (s,r).",
            "VernacExtend",
            "0060a832636e7fe3f614d149f897fe80cae120c3"
        ],
        [
            "now destruct r.",
            "VernacExtend",
            "4b07c9af4d642cd5dcd819158be0afcc17200721"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma log2_spec n : 0 < n -> 2^(log2 n) <= n < 2^(succ (log2 n)).",
            "VernacStartTheoremProof",
            "85f12d9177964b56f9f37e935f563447d68c8ffe"
        ],
        [
            "assert (Pow : forall p q, pos (p^q) = (pos p)^(pos q)).",
            "VernacExtend",
            "9fec89f0396b0421bd33d2ba70757fcc5e9343bd"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now apply Pos.iter_swap_gen.",
            "VernacExtend",
            "e65a942f0735f2a56724cf83d5ee925c620aaa5e"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct n as [|[p|p|]|]; intros Hn; split; try easy; unfold log2; simpl succ; rewrite ?Pos.add_1_r, <- Pow.",
            "VernacExtend",
            "7fcbdbf93b2178b36e76ab498b8b4c70296c360e"
        ],
        [
            "change (2^Pos.size p <= Pos.succ (p~0))%positive.",
            "VernacExtend",
            "98756d36e1095c71e45887ba7f2a969fd03aef32"
        ],
        [
            "apply Pos.lt_le_incl, Pos.lt_succ_r, Pos.size_le.",
            "VernacExtend",
            "73020ea874916a409b28a5dd31596612c493b803"
        ],
        [
            "apply Pos.size_gt.",
            "VernacExtend",
            "b97f5b72a00f99fd89400be2a2faa0e622574450"
        ],
        [
            "apply Pos.size_le.",
            "VernacExtend",
            "b1bdf0218ddbdee821da4c457a354487bc44b131"
        ],
        [
            "apply Pos.size_gt.",
            "VernacExtend",
            "b97f5b72a00f99fd89400be2a2faa0e622574450"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma log2_nonpos n : n<=0 -> log2 n = 0.",
            "VernacStartTheoremProof",
            "31f3c571dae29fab08f5e3da5154f3a79731aebb"
        ],
        [
            "destruct n as [|p|p]; trivial; now destruct 1.",
            "VernacExtend",
            "d884fc2d7d4ff72c9d64695e7e57c0bef799fe88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_spec n : even n = true <-> Even n.",
            "VernacStartTheoremProof",
            "b8250c45101ab706012d394e99ae1161f1b9dec8"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exists (div2 n).",
            "VernacExtend",
            "b5cfec5307a526f6887fdf23863d29bbd444e16e"
        ],
        [
            "now destruct n as [|[ | | ]|[ | | ]].",
            "VernacExtend",
            "d13622cd0a46d4f5f3ef1d6f899a0442b63d2287"
        ],
        [
            "intros (m,->).",
            "VernacExtend",
            "49b63a0039385f515054a1a36a4b53c59a492c42"
        ],
        [
            "now destruct m.",
            "VernacExtend",
            "8eb99d252d0c586d6342e58a659c3b7b773e9af1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_spec n : odd n = true <-> Odd n.",
            "VernacStartTheoremProof",
            "9628edfadde3f967cbf539fb4102c7bdf329c06b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exists (div2 n).",
            "VernacExtend",
            "b5cfec5307a526f6887fdf23863d29bbd444e16e"
        ],
        [
            "destruct n as [|[ | | ]|[ | | ]]; simpl; try easy.",
            "VernacExtend",
            "9ba03d381b9409c8aec7e9fb8439a5e9888ac588"
        ],
        [
            "now rewrite Pos.pred_double_succ.",
            "VernacExtend",
            "f78894b760c657d69e9c080b99477a14193a6f4e"
        ],
        [
            "intros (m,->).",
            "VernacExtend",
            "49b63a0039385f515054a1a36a4b53c59a492c42"
        ],
        [
            "now destruct m as [|[ | | ]|[ | | ]].",
            "VernacExtend",
            "2672cbdc44bc6dbab941b6c8eb2c52023d50287f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma double_spec n : double n = 2*n.",
            "VernacStartTheoremProof",
            "d30bcc8593936ec38f265ca1d79234f4ea2143ea"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succ_double_spec n : succ_double n = 2*n + 1.",
            "VernacStartTheoremProof",
            "f9ab0957e0e55db2ff5769a4a4f265bc9b72798f"
        ],
        [
            "now destruct n.",
            "VernacExtend",
            "6e836d168cd359f41ad4e992ef54068680a38db2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_double_spec n : pred_double n = 2*n - 1.",
            "VernacStartTheoremProof",
            "0b466755166c45bb0768718f339e5bf77ced3597"
        ],
        [
            "now destruct n.",
            "VernacExtend",
            "6e836d168cd359f41ad4e992ef54068680a38db2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_div_eucl_eq a b : 0 < b -> let (q, r) := pos_div_eucl a b in pos a = q * b + r.",
            "VernacStartTheoremProof",
            "358df40a99c1cbd1b316e7799b29ad54c9f9ed90"
        ],
        [
            "intros Hb.",
            "VernacExtend",
            "bf28ce675f0c35f7a6ee80ebcc4714ae6cf11f4b"
        ],
        [
            "induction a; unfold pos_div_eucl; fold pos_div_eucl.",
            "VernacExtend",
            "7500db1c556f9989ffd5ebd4734e66736ec18c26"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct pos_div_eucl as (q,r).",
            "VernacExtend",
            "2464332679655b30ccaa9ca70a11827cf2052ade"
        ],
        [
            "change (pos a~1) with (2*(pos a)+1).",
            "VernacExtend",
            "57bb6e33a556af3cd12250bc385d1be60d8296d4"
        ],
        [
            "rewrite IHa, mul_add_distr_l, mul_assoc.",
            "VernacExtend",
            "9643f7505fa867a3d05fa983bd95284862db29cc"
        ],
        [
            "destruct ltb.",
            "VernacExtend",
            "35f88487bcaf32621a0e86c80d8771070b5da4f3"
        ],
        [
            "now rewrite add_assoc.",
            "VernacExtend",
            "7cd8e68167a5197c8a6d5ec3756a05b1af6664b6"
        ],
        [
            "rewrite mul_add_distr_r, mul_1_l, <- !add_assoc.",
            "VernacExtend",
            "1012800af09ef86d7732f16669f54fd7fcadd1f6"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "now rewrite (add_comm _ (-b)), add_assoc, add_opp_diag_r.",
            "VernacExtend",
            "24742ed3e703d84823b057503f5ef7607e19729c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct pos_div_eucl as (q,r).",
            "VernacExtend",
            "2464332679655b30ccaa9ca70a11827cf2052ade"
        ],
        [
            "change (pos a~0) with (2*pos a).",
            "VernacExtend",
            "cd51610cd874b90ce23d2b9809d95a37918d90f6"
        ],
        [
            "rewrite IHa, mul_add_distr_l, mul_assoc.",
            "VernacExtend",
            "9643f7505fa867a3d05fa983bd95284862db29cc"
        ],
        [
            "destruct ltb.",
            "VernacExtend",
            "35f88487bcaf32621a0e86c80d8771070b5da4f3"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite mul_add_distr_r, mul_1_l, <- !add_assoc.",
            "VernacExtend",
            "1012800af09ef86d7732f16669f54fd7fcadd1f6"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "now rewrite (add_comm _ (-b)), add_assoc, add_opp_diag_r.",
            "VernacExtend",
            "24742ed3e703d84823b057503f5ef7607e19729c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case leb_spec; trivial.",
            "VernacExtend",
            "4c96fd99efe640e857c9405c946dbae67513cfb5"
        ],
        [
            "intros Hb'.",
            "VernacExtend",
            "7a0c3689b6e1b8cc3db065fb1e7a6033856c65ed"
        ],
        [
            "destruct b as [|b|b]; try easy; clear Hb.",
            "VernacExtend",
            "b371f7a9a88992129f11b274dc7e38d7b87e0f7c"
        ],
        [
            "replace b with 1%positive; trivial.",
            "VernacExtend",
            "70b4808a64fecada71d8aca9efbd34d550695c5f"
        ],
        [
            "apply Pos.le_antisym.",
            "VernacExtend",
            "99674f32cb4614151eaa8d95d2053b4eb532775f"
        ],
        [
            "apply Pos.le_1_l.",
            "VernacExtend",
            "e1d889c81d14ec2e523a8aa152b24ebfdce38ca7"
        ],
        [
            "now apply Pos.lt_succ_r.",
            "VernacExtend",
            "da0aa6b6cdadc9c49985a7195f29ec1508b5b2c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma div_eucl_eq a b : b<>0 -> let (q, r) := div_eucl a b in a = b * q + r.",
            "VernacStartTheoremProof",
            "83b8054b1caec1a3468a1e143468c3439937e330"
        ],
        [
            "destruct a as [ |a|a], b as [ |b|b]; unfold div_eucl; trivial; (now destruct 1) || intros _; generalize (pos_div_eucl_eq a (pos b) Logic.eq_refl); destruct pos_div_eucl as (q,r); rewrite mul_comm.",
            "VernacExtend",
            "3bc80dce0b43dfd3008166ed6faaaefbff340994"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros ->.",
            "VernacExtend",
            "e8af3665779d92274caf81949b4a0e6232d89ea7"
        ],
        [
            "destruct r as [ |r|r]; rewrite <- !mul_opp_comm; trivial; rewrite mul_add_distr_l, mul_1_r, <- add_assoc; f_equal; now rewrite add_assoc, add_opp_diag_r.",
            "VernacExtend",
            "b892527cc76c5a8ac7ff7e6b845d644beae7f546"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (neg a) with (- pos a).",
            "VernacExtend",
            "5cc94a2073e509b2ed8a65a26fc970e9dbfd3ee3"
        ],
        [
            "intros ->.",
            "VernacExtend",
            "e8af3665779d92274caf81949b4a0e6232d89ea7"
        ],
        [
            "rewrite (opp_add_distr _ r), <- mul_opp_r.",
            "VernacExtend",
            "8afd8a50e0ef5ccd0a074d918cdfbca8907816f0"
        ],
        [
            "destruct r as [ |r|r]; trivial; rewrite opp_add_distr, mul_add_distr_l, <- add_assoc; f_equal; unfold sub; now rewrite add_assoc, mul_opp_r, mul_1_r, add_opp_diag_l.",
            "VernacExtend",
            "eaba3f0af9bdf340738b35be9a04c2179820c6fd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (neg a) with (- pos a).",
            "VernacExtend",
            "5cc94a2073e509b2ed8a65a26fc970e9dbfd3ee3"
        ],
        [
            "intros ->.",
            "VernacExtend",
            "e8af3665779d92274caf81949b4a0e6232d89ea7"
        ],
        [
            "now rewrite opp_add_distr, <- mul_opp_l.",
            "VernacExtend",
            "2d6ce5c11b5c1a1cba08e515b7e8950fe16c22b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma div_mod a b : b<>0 -> a = b*(a/b) + (a mod b).",
            "VernacStartTheoremProof",
            "4c7477d10a8b340be7e9974cf2ff43d7f2c6cc91"
        ],
        [
            "intros Hb.",
            "VernacExtend",
            "bf28ce675f0c35f7a6ee80ebcc4714ae6cf11f4b"
        ],
        [
            "generalize (div_eucl_eq a b Hb).",
            "VernacExtend",
            "79b2d0b940219cf37a1c9b02c771f5bc588b989c"
        ],
        [
            "unfold div, modulo.",
            "VernacExtend",
            "1ac46ef173dccff0c5c730852b97570f6afc4532"
        ],
        [
            "now destruct div_eucl.",
            "VernacExtend",
            "847b3c5d35a895ad0db02a7419c01bd3ed2c3567"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_div_eucl_bound a b : 0<b -> 0 <= snd (pos_div_eucl a b) < b.",
            "VernacStartTheoremProof",
            "34f36ae51a1882144c4ee888534788c3204fe263"
        ],
        [
            "assert (AUX : forall m p, m < pos (p~0) -> m - pos p < pos p).",
            "VernacExtend",
            "92c22c14f9907c012fb3be27d0dca5d603a13479"
        ],
        [
            "intros m p.",
            "VernacExtend",
            "df8b8fbb91e426b6d468d9756f62f40b695992ac"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "rewrite (compare_sub m), (compare_sub _ (pos _)).",
            "VernacExtend",
            "ef70af28163055e6ced4fd593c4bffc9e624bcff"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "rewrite <- add_assoc.",
            "VernacExtend",
            "c34a88538a6a595366810d8d189307fbbf983edd"
        ],
        [
            "simpl opp; simpl (neg _ + _).",
            "VernacExtend",
            "d6e65ff53c0b7d9e7c4a5f00d3059be39355f8a0"
        ],
        [
            "now rewrite Pos.add_diag.",
            "VernacExtend",
            "19255c27f11a9d054fdb1f8fd3a45195549f1ec1"
        ],
        [
            "intros Hb.",
            "VernacExtend",
            "bf28ce675f0c35f7a6ee80ebcc4714ae6cf11f4b"
        ],
        [
            "destruct b as [|b|b]; discriminate Hb || clear Hb.",
            "VernacExtend",
            "aa2c9e5b8f83d4483e230b54061c6a85cf26c0cc"
        ],
        [
            "induction a; unfold pos_div_eucl; fold pos_div_eucl.",
            "VernacExtend",
            "7500db1c556f9989ffd5ebd4734e66736ec18c26"
        ],
        [
            "destruct pos_div_eucl as (q,r).",
            "VernacExtend",
            "2464332679655b30ccaa9ca70a11827cf2052ade"
        ],
        [
            "simpl in IHa; destruct IHa as (Hr,Hr').",
            "VernacExtend",
            "714379db5e620b204d82cc1f7cb18eaa1cb6e2c1"
        ],
        [
            "case ltb_spec; intros H; unfold snd.",
            "VernacExtend",
            "b150b02ce056632322964db70d1d2b6e825e9127"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "now destruct r.",
            "VernacExtend",
            "4b07c9af4d642cd5dcd819158be0afcc17200721"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "now rewrite compare_antisym, <- compare_sub, <- compare_antisym.",
            "VernacExtend",
            "bb85441c26469a66b2d6812a1900c246e7194938"
        ],
        [
            "apply AUX.",
            "VernacExtend",
            "acd0f751560d138992e4fed69eee798546717221"
        ],
        [
            "rewrite <- succ_double_spec.",
            "VernacExtend",
            "28d9261bc34194b01b6ffc0ed420157348177e74"
        ],
        [
            "destruct r; try easy.",
            "VernacExtend",
            "d8ebba3b57728a02b938f188a316e574846c558d"
        ],
        [
            "unfold lt in *; simpl in *.",
            "VernacExtend",
            "2f6272d406049963a09966da95bf0d424553afcd"
        ],
        [
            "now rewrite Pos.compare_xI_xO, Hr'.",
            "VernacExtend",
            "6e9924167ac6dc8fba0d19b46dde977356cd5f8d"
        ],
        [
            "destruct pos_div_eucl as (q,r).",
            "VernacExtend",
            "2464332679655b30ccaa9ca70a11827cf2052ade"
        ],
        [
            "simpl in IHa; destruct IHa as (Hr,Hr').",
            "VernacExtend",
            "714379db5e620b204d82cc1f7cb18eaa1cb6e2c1"
        ],
        [
            "case ltb_spec; intros H; unfold snd.",
            "VernacExtend",
            "b150b02ce056632322964db70d1d2b6e825e9127"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "now destruct r.",
            "VernacExtend",
            "4b07c9af4d642cd5dcd819158be0afcc17200721"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "now rewrite compare_antisym, <- compare_sub, <- compare_antisym.",
            "VernacExtend",
            "bb85441c26469a66b2d6812a1900c246e7194938"
        ],
        [
            "apply AUX.",
            "VernacExtend",
            "acd0f751560d138992e4fed69eee798546717221"
        ],
        [
            "destruct r; try easy.",
            "VernacExtend",
            "d8ebba3b57728a02b938f188a316e574846c558d"
        ],
        [
            "case leb_spec; intros H; simpl; split; try easy.",
            "VernacExtend",
            "61761f16ec5b79dfb0717a0e0e60fe9385646cd2"
        ],
        [
            "red; simpl.",
            "VernacExtend",
            "713f75622b4bcaa4944fbc549f338fab2a7169b4"
        ],
        [
            "now apply Pos.le_succ_l.",
            "VernacExtend",
            "9ee1b26580a36c9aa8df088f297fd0b7d405a02f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mod_pos_bound a b : 0 < b -> 0 <= a mod b < b.",
            "VernacStartTheoremProof",
            "ec2ef38abad894c0d5e0e469a09ffe58e65d2ea5"
        ],
        [
            "destruct b as [|b|b]; try easy; intros _.",
            "VernacExtend",
            "4e096c1180609be1654b52e7f32dca40ceaf326e"
        ],
        [
            "destruct a as [|a|a]; unfold modulo, div_eucl.",
            "VernacExtend",
            "65c25c90c7bcb49bb4b89dc2587b817e10ce9ba1"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "now apply pos_div_eucl_bound.",
            "VernacExtend",
            "ddf166582abcba7cc1977797988bc56988bc5c89"
        ],
        [
            "generalize (pos_div_eucl_bound a (pos b) Logic.eq_refl).",
            "VernacExtend",
            "db40bff3b18ac4db9d2b32a785a0832f4e4d3c4e"
        ],
        [
            "destruct pos_div_eucl as (q,r); unfold snd; intros (Hr,Hr').",
            "VernacExtend",
            "097c1f50afd26f5c804da26f394d03e4979e1385"
        ],
        [
            "destruct r as [|r|r]; (now destruct Hr) || clear Hr.",
            "VernacExtend",
            "1443919d78e2a4fda3137a509beed5f7e5fd9384"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "now rewrite compare_antisym, <- compare_sub, <- compare_antisym, Hr'.",
            "VernacExtend",
            "826e596702f8346a55c1384071fd7c1298c18a97"
        ],
        [
            "unfold lt in *; simpl in *.",
            "VernacExtend",
            "2f6272d406049963a09966da95bf0d424553afcd"
        ],
        [
            "rewrite pos_sub_gt by trivial.",
            "VernacExtend",
            "a5d83e6a459051bb7f721457326a8ec485ba87ac"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now apply Pos.sub_decr.",
            "VernacExtend",
            "c79ba01d22d99adab9a27d0b65617757ec3cbc3a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mod_bound_pos a b (_:0<=a) := mod_pos_bound a b.",
            "VernacDefinition",
            "44b67d9548f1d7f78fbab02cdc3a31afa0e3be35"
        ],
        [
            "Lemma mod_neg_bound a b : b < 0 -> b < a mod b <= 0.",
            "VernacStartTheoremProof",
            "c06fe68c7ae76943c29f699f87c811a906befb37"
        ],
        [
            "destruct b as [|b|b]; try easy; intros _.",
            "VernacExtend",
            "4e096c1180609be1654b52e7f32dca40ceaf326e"
        ],
        [
            "destruct a as [|a|a]; unfold modulo, div_eucl.",
            "VernacExtend",
            "65c25c90c7bcb49bb4b89dc2587b817e10ce9ba1"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "generalize (pos_div_eucl_bound a (pos b) Logic.eq_refl).",
            "VernacExtend",
            "db40bff3b18ac4db9d2b32a785a0832f4e4d3c4e"
        ],
        [
            "destruct pos_div_eucl as (q,r); unfold snd; intros (Hr,Hr').",
            "VernacExtend",
            "097c1f50afd26f5c804da26f394d03e4979e1385"
        ],
        [
            "destruct r as [|r|r]; (now destruct Hr) || clear Hr.",
            "VernacExtend",
            "1443919d78e2a4fda3137a509beed5f7e5fd9384"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold lt in *; simpl in *.",
            "VernacExtend",
            "2f6272d406049963a09966da95bf0d424553afcd"
        ],
        [
            "rewrite pos_sub_lt by trivial.",
            "VernacExtend",
            "8b545710d8fbe2df8334f01e7e8c9eed4084e3de"
        ],
        [
            "rewrite <- Pos.compare_antisym.",
            "VernacExtend",
            "9d0b5eeda82e531b98deef3567cce79c721a34c6"
        ],
        [
            "now apply Pos.sub_decr.",
            "VernacExtend",
            "c79ba01d22d99adab9a27d0b65617757ec3cbc3a"
        ],
        [
            "change (neg b - neg r <= 0).",
            "VernacExtend",
            "495d887eb5fd5b98a67d749f60a6cc37a6687d5a"
        ],
        [
            "unfold le, lt in *.",
            "VernacExtend",
            "74cb214af30dc24f248801a3ff0bd5a016f4871c"
        ],
        [
            "rewrite <- compare_sub.",
            "VernacExtend",
            "83378e307136f634840e7fc5ed845da3b032e70e"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "now rewrite <- Pos.compare_antisym, Hr'.",
            "VernacExtend",
            "181e50bd65b82f6778c276fdf2cfcbf0b49f5bfa"
        ],
        [
            "generalize (pos_div_eucl_bound a (pos b) Logic.eq_refl).",
            "VernacExtend",
            "db40bff3b18ac4db9d2b32a785a0832f4e4d3c4e"
        ],
        [
            "destruct pos_div_eucl as (q,r); unfold snd; intros (Hr,Hr').",
            "VernacExtend",
            "097c1f50afd26f5c804da26f394d03e4979e1385"
        ],
        [
            "split; destruct r; try easy.",
            "VernacExtend",
            "1610a1cf1edfe20072a5821a223b5b732ab736a2"
        ],
        [
            "red; simpl; now rewrite <- Pos.compare_antisym.",
            "VernacExtend",
            "0fa8ba7e3dcc08d612d8336a13740a03c1c12572"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem quotrem_eq a b : let (q,r) := quotrem a b in a = q * b + r.",
            "VernacStartTheoremProof",
            "21f161f256cf12b791e355445c25373a882d29bf"
        ],
        [
            "destruct a as [|a|a], b as [|b|b]; simpl; trivial; generalize (N.pos_div_eucl_spec a (N.pos b)); case N.pos_div_eucl; trivial; intros q r; try change (neg a) with (-pos a); change (pos a) with (of_N (N.pos a)); intros ->; now destruct q, r.",
            "VernacExtend",
            "dc6b4b677fce73864b0417398be3199bcdd5ca4e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quot_rem' a b : a = b*(a\u00f7b) + rem a b.",
            "VernacStartTheoremProof",
            "5999d84f160622f48d4e32d333113f84fb9e1a2e"
        ],
        [
            "rewrite mul_comm.",
            "VernacExtend",
            "5f0fb0765ec04101790f2b78062bf5490bbe5e03"
        ],
        [
            "generalize (quotrem_eq a b).",
            "VernacExtend",
            "255c4163bb60d3c1ef17cb0465162a7b182002ab"
        ],
        [
            "unfold quot, rem.",
            "VernacExtend",
            "052597c5302629dee8b9126b48728cd4b6a7a024"
        ],
        [
            "now destruct quotrem.",
            "VernacExtend",
            "e7a6aa953025a93e5010fa847c28267747d0658c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quot_rem a b : b<>0 -> a = b*(a\u00f7b) + rem a b.",
            "VernacStartTheoremProof",
            "4f3bb13735425f0900d0594669826fabe79f65da"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "apply quot_rem'.",
            "VernacExtend",
            "7692ed441e75c952593d39cbb423cc58d85715ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rem_bound_pos a b : 0<=a -> 0<b -> 0 <= rem a b < b.",
            "VernacStartTheoremProof",
            "3b42d7fe990e36dd3b60bd7c94ddce49a92661fd"
        ],
        [
            "intros Ha Hb.",
            "VernacExtend",
            "0c4ce3bbd15ba18416ad16c4ce047ec9c705752c"
        ],
        [
            "destruct b as [|b|b]; (now discriminate Hb) || clear Hb; destruct a as [|a|a]; (now destruct Ha) || clear Ha.",
            "VernacExtend",
            "8fb25e23a198d36b7d61bdf809cc2ec8d1edf40c"
        ],
        [
            "compute.",
            "VernacExtend",
            "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "unfold rem, quotrem.",
            "VernacExtend",
            "df928d66da79dc5087b7ec93be3a316e8b43638b"
        ],
        [
            "assert (H := N.pos_div_eucl_remainder a (N.pos b)).",
            "VernacExtend",
            "29b3065ddb2683ce66a8f5ab569fbdd71738b337"
        ],
        [
            "destruct N.pos_div_eucl as (q,[|r]); simpl; split; try easy.",
            "VernacExtend",
            "dcc74d9561cd0d69cca65139a41b5dd89dc36d92"
        ],
        [
            "now apply H.",
            "VernacExtend",
            "e28edffe226486c29d50d204164561fb199b8c97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rem_opp_l' a b : rem (-a) b = - (rem a b).",
            "VernacStartTheoremProof",
            "ab867983f5d73def8a005a83366613ab7b9e24d7"
        ],
        [
            "destruct a, b; trivial; unfold rem; simpl; now destruct N.pos_div_eucl as (q,[|r]).",
            "VernacExtend",
            "4f6c3b24853a739910499192374a098849888bd3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rem_opp_r' a b : rem a (-b) = rem a b.",
            "VernacStartTheoremProof",
            "fafe554887c42c6af00d4334cd1a4ab4f79ccf67"
        ],
        [
            "destruct a, b; trivial; unfold rem; simpl; now destruct N.pos_div_eucl as (q,[|r]).",
            "VernacExtend",
            "4f6c3b24853a739910499192374a098849888bd3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rem_opp_l a b : b<>0 -> rem (-a) b = - (rem a b).",
            "VernacStartTheoremProof",
            "8f9301fdd29a584f0f7143c99364a9d597036229"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "apply rem_opp_l'.",
            "VernacExtend",
            "b51328a6cef22714a91c3905d20a8d6f6b2fe88e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rem_opp_r a b : b<>0 -> rem a (-b) = rem a b.",
            "VernacStartTheoremProof",
            "4b2d466200a5bf374ea2a80bad540f1513a31b35"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "apply rem_opp_r'.",
            "VernacExtend",
            "2a0a01f801fba8b9783446f7813c9deb69c2d713"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_Zpos p q : (pos p|pos q) <-> (p|q)%positive.",
            "VernacStartTheoremProof",
            "e7b5af3d031f11b18c73a3d9ffe0dd8f74dd2090"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros ([ |r|r],H); simpl in *; destr_eq H.",
            "VernacExtend",
            "339d2d6b431c9d64e1a8e5a0059398dd736cd3c9"
        ],
        [
            "exists r; auto.",
            "VernacExtend",
            "6c115d61b7b2a121c5d8ff8967a21754335dd08a"
        ],
        [
            "intros (r,H).",
            "VernacExtend",
            "9cab41f864caac52ceeff2e24e3643b6f4713d21"
        ],
        [
            "exists (pos r); simpl; now f_equal.",
            "VernacExtend",
            "ee416191ab32a96911a6324679c3c131d30530e7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_Zpos_Zneg_r n p : (n|pos p) <-> (n|neg p).",
            "VernacStartTheoremProof",
            "1ed993b03e4dfad730e24ea00a74d147ae665f35"
        ],
        [
            "split; intros (m,H); exists (-m); now rewrite mul_opp_l, <- H.",
            "VernacExtend",
            "9996b5a3017be1d2fe6222b779473d0b3d4904ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_Zpos_Zneg_l n p : (pos p|n) <-> (neg p|n).",
            "VernacStartTheoremProof",
            "1738d871baeabab4d57208e718d64f6792b94009"
        ],
        [
            "split; intros (m,H); exists (-m); now rewrite mul_opp_l, <- mul_opp_r.",
            "VernacExtend",
            "93a587fa3a35529235b5eace2d7e5507e2bdc511"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ggcd_gcd a b : fst (ggcd a b) = gcd a b.",
            "VernacStartTheoremProof",
            "d7c9d8c845fd600482d6cf1a17c64dcddb9116b2"
        ],
        [
            "destruct a as [ |p|p], b as [ |q|q]; simpl; auto; generalize (Pos.ggcd_gcd p q); destruct Pos.ggcd as (g,(aa,bb)); simpl; congruence.",
            "VernacExtend",
            "206d654286e53eaf6f39d13ef27e0980eb203d92"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ggcd_correct_divisors a b : let '(g,(aa,bb)) := ggcd a b in a = g*aa /\\ b = g*bb.",
            "VernacStartTheoremProof",
            "37cf1fde59708983c272517fa38fabdc24c43f03"
        ],
        [
            "destruct a as [ |p|p], b as [ |q|q]; simpl; rewrite ?Pos.mul_1_r; auto; generalize (Pos.ggcd_correct_divisors p q); destruct Pos.ggcd as (g,(aa,bb)); simpl; destruct 1; now subst.",
            "VernacExtend",
            "819be880d0466d6b99fc0e6dfcf8b8efc72c2783"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_divide_l a b : (gcd a b | a).",
            "VernacStartTheoremProof",
            "a265fb233a0fba485d7d9debb00cbb9374e8ad88"
        ],
        [
            "rewrite <- ggcd_gcd.",
            "VernacExtend",
            "af8fe3aa4e3b8cec9dff021772fb4d255806993f"
        ],
        [
            "generalize (ggcd_correct_divisors a b).",
            "VernacExtend",
            "596110c31b3f951d5323976537ebf9bf70a545d6"
        ],
        [
            "destruct ggcd as (g,(aa,bb)); simpl.",
            "VernacExtend",
            "d7905ef92137f67e94c97b87557d36066c22301a"
        ],
        [
            "intros (H,_).",
            "VernacExtend",
            "5d7f528c0a50c9774977a893ac2a2ce4be26b8cc"
        ],
        [
            "exists aa.",
            "VernacExtend",
            "a88576544a563e6630825c1a0fed1d6dd0fa2990"
        ],
        [
            "now rewrite mul_comm.",
            "VernacExtend",
            "e381ca9335c310c57051601bf6f800b499d27dfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_divide_r a b : (gcd a b | b).",
            "VernacStartTheoremProof",
            "94e63adcd793772a73c559391f602d0d5152ba4e"
        ],
        [
            "rewrite <- ggcd_gcd.",
            "VernacExtend",
            "af8fe3aa4e3b8cec9dff021772fb4d255806993f"
        ],
        [
            "generalize (ggcd_correct_divisors a b).",
            "VernacExtend",
            "596110c31b3f951d5323976537ebf9bf70a545d6"
        ],
        [
            "destruct ggcd as (g,(aa,bb)); simpl.",
            "VernacExtend",
            "d7905ef92137f67e94c97b87557d36066c22301a"
        ],
        [
            "intros (_,H).",
            "VernacExtend",
            "25f6a2cd1cb0bd6a2f0d7abf0ed531ec59abb9ee"
        ],
        [
            "exists bb.",
            "VernacExtend",
            "87320a0804a94fddefae4762bc46aafc3efc88f8"
        ],
        [
            "now rewrite mul_comm.",
            "VernacExtend",
            "e381ca9335c310c57051601bf6f800b499d27dfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_greatest a b c : (c|a) -> (c|b) -> (c | gcd a b).",
            "VernacStartTheoremProof",
            "a786eb340ee6908eb2b03d714d2fff5f4c36db21"
        ],
        [
            "assert (H : forall p q r, (r|pos p) -> (r|pos q) -> (r|pos (Pos.gcd p q))).",
            "VernacExtend",
            "aa10ad2a6153eb3f12b4db83c45780462a21f5d2"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros p q [|r|r] H H'.",
            "VernacExtend",
            "dbd3a2c898b17ba77c238339a4dbbb7916c73d26"
        ],
        [
            "destruct H; now rewrite mul_comm in *.",
            "VernacExtend",
            "4561fc717c2c8f08d7339781d6ffca0b2cba4652"
        ],
        [
            "apply divide_Zpos, Pos.gcd_greatest; now apply divide_Zpos.",
            "VernacExtend",
            "ee55dcda7f8b631fcc6fe797d537487f445f1159"
        ],
        [
            "apply divide_Zpos_Zneg_l, divide_Zpos, Pos.gcd_greatest; now apply divide_Zpos, divide_Zpos_Zneg_l.",
            "VernacExtend",
            "41597bba737c9d6e2330c2d4ed4ae8ff701fb3a7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct a, b; simpl; auto; intros; try apply H; trivial; now apply divide_Zpos_Zneg_r.",
            "VernacExtend",
            "a9f0503a2ab8482bae7db814ddce6613f810666c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_nonneg a b : 0 <= gcd a b.",
            "VernacStartTheoremProof",
            "f1824ee904a0e57acbdcd17098580e5e14bf46b7"
        ],
        [
            "now destruct a, b.",
            "VernacExtend",
            "7dbd2221c3119230880fcb5558e1bc5e570ef0ae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ggcd_opp a b : ggcd (-a) b = (let '(g,(aa,bb)) := ggcd a b in (g,(-aa,bb))).",
            "VernacStartTheoremProof",
            "82756b3a8f2d948854c2677aa8f6afe7631bfdeb"
        ],
        [
            "destruct a as [|a|a], b as [|b|b]; unfold ggcd, opp; auto; destruct (Pos.ggcd a b) as (g,(aa,bb)); auto.",
            "VernacExtend",
            "cd300d2c3889164d8b69a25360dcbdfa36190248"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma testbit_of_N a n : testbit (of_N a) (of_N n) = N.testbit a n.",
            "VernacStartTheoremProof",
            "b0439ecb86bb51e0086b92c5f2f41660e3487a08"
        ],
        [
            "destruct a as [|a], n; simpl; trivial.",
            "VernacExtend",
            "bc45cdb5358cdfc0141644625a14ad3897dbe984"
        ],
        [
            "now destruct a.",
            "VernacExtend",
            "24051356fff328c7208562817960b0c83ed3bf6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma testbit_of_N' a n : 0<=n -> testbit (of_N a) n = N.testbit a (to_N n).",
            "VernacStartTheoremProof",
            "7a37a7f4eae0d5b2edf899f5b825757bcdcc4e3d"
        ],
        [
            "intro Hn.",
            "VernacExtend",
            "81b3c1b7c56bc3b13f16050d6d157b1546f130f4"
        ],
        [
            "rewrite <- testbit_of_N.",
            "VernacExtend",
            "e2d66469c0cbf0e62e1d563602c1832763c79f28"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "destruct n; trivial; now destruct Hn.",
            "VernacExtend",
            "5571a3370c149bc434def9e18cbeef0b890b1b81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma testbit_Zpos a n : 0<=n -> testbit (pos a) n = N.testbit (N.pos a) (to_N n).",
            "VernacStartTheoremProof",
            "cc009863d57e3f0eb949ef7f3beff7ac12ca8990"
        ],
        [
            "intro Hn.",
            "VernacExtend",
            "81b3c1b7c56bc3b13f16050d6d157b1546f130f4"
        ],
        [
            "now rewrite <- testbit_of_N'.",
            "VernacExtend",
            "2b770f1319cd2a6267fd9404c80463ca1776f433"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma testbit_Zneg a n : 0<=n -> testbit (neg a) n = negb (N.testbit (Pos.pred_N a) (to_N n)).",
            "VernacStartTheoremProof",
            "0914b95f3546929a165d316f833de3d705f05f42"
        ],
        [
            "intro Hn.",
            "VernacExtend",
            "81b3c1b7c56bc3b13f16050d6d157b1546f130f4"
        ],
        [
            "rewrite <- testbit_of_N' by trivial.",
            "VernacExtend",
            "0c82ad9685e4c4adee4855b59bd1d8389050e1e7"
        ],
        [
            "destruct n as [ |n|n]; [ | simpl; now destruct (Pos.pred_N a) | now destruct Hn].",
            "VernacExtend",
            "4b186dfeae4e668d63f6511b33b530200e95222b"
        ],
        [
            "unfold testbit.",
            "VernacExtend",
            "14f68f27aaaec42f64d3a8f3009fc6eaa35592a6"
        ],
        [
            "now destruct a as [|[ | | ]| ].",
            "VernacExtend",
            "6d8e5339707d89796364a1e7cb7a3293aeb8ac23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma div2_spec a : div2 a = shiftr a 1.",
            "VernacStartTheoremProof",
            "8b61fdf3ed436c9613f893d3a9b96e61df52022e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma testbit_0_l n : testbit 0 n = false.",
            "VernacStartTheoremProof",
            "c59670a0b81f03efa3f70d4d87888ae01d5a642f"
        ],
        [
            "now destruct n.",
            "VernacExtend",
            "6e836d168cd359f41ad4e992ef54068680a38db2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma testbit_neg_r a n : n<0 -> testbit a n = false.",
            "VernacStartTheoremProof",
            "017491e541c387b99f0420eed6f1413e0802d6fe"
        ],
        [
            "now destruct n.",
            "VernacExtend",
            "6e836d168cd359f41ad4e992ef54068680a38db2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma testbit_odd_0 a : testbit (2*a+1) 0 = true.",
            "VernacStartTheoremProof",
            "e7f8fe1f0d02faea6af8893ccc57aeae733f0052"
        ],
        [
            "now destruct a as [|a|[a|a|]].",
            "VernacExtend",
            "261ce4af4ffb3926d1c06ec7d52e5fb3c7d24c44"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma testbit_even_0 a : testbit (2*a) 0 = false.",
            "VernacStartTheoremProof",
            "7e56d9861445826e6dcb89f925171a8afe9c4b8f"
        ],
        [
            "now destruct a.",
            "VernacExtend",
            "24051356fff328c7208562817960b0c83ed3bf6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma testbit_odd_succ a n : 0<=n -> testbit (2*a+1) (succ n) = testbit a n.",
            "VernacStartTheoremProof",
            "2b7c99b36dc3e5f97f119ed106e9eece48c8db76"
        ],
        [
            "destruct n as [|n|n]; (now destruct 1) || intros _.",
            "VernacExtend",
            "701fe4142866b62abe9d10e6999b22d4d78aea32"
        ],
        [
            "destruct a as [|[a|a|]|[a|a|]]; simpl; trivial.",
            "VernacExtend",
            "721c014773df2a2842a74ed608330859612c5266"
        ],
        [
            "now destruct a.",
            "VernacExtend",
            "24051356fff328c7208562817960b0c83ed3bf6c"
        ],
        [
            "unfold testbit; simpl.",
            "VernacExtend",
            "e57403650e6113c613f19f44ad27de806bba6b66"
        ],
        [
            "destruct a as [|a|[a|a|]]; simpl; trivial; rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; now destruct n.",
            "VernacExtend",
            "b4467045daa183bfe64763beed9266c5b3f1b817"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma testbit_even_succ a n : 0<=n -> testbit (2*a) (succ n) = testbit a n.",
            "VernacStartTheoremProof",
            "9ef5b872cbc5545a5edf1b6c0816c39c05d514f7"
        ],
        [
            "destruct n as [|n|n]; (now destruct 1) || intros _.",
            "VernacExtend",
            "701fe4142866b62abe9d10e6999b22d4d78aea32"
        ],
        [
            "destruct a as [|[a|a|]|[a|a|]]; simpl; trivial.",
            "VernacExtend",
            "721c014773df2a2842a74ed608330859612c5266"
        ],
        [
            "now destruct a.",
            "VernacExtend",
            "24051356fff328c7208562817960b0c83ed3bf6c"
        ],
        [
            "unfold testbit; simpl.",
            "VernacExtend",
            "e57403650e6113c613f19f44ad27de806bba6b66"
        ],
        [
            "destruct a as [|a|[a|a|]]; simpl; trivial; rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; now destruct n.",
            "VernacExtend",
            "b4467045daa183bfe64763beed9266c5b3f1b817"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma shiftr_spec_aux a n m : 0<=n -> 0<=m -> testbit (shiftr a n) m = testbit a (m+n).",
            "VernacStartTheoremProof",
            "f1b2a294a365c0d6efb2ac5bf6017ffff5d232ad"
        ],
        [
            "intros Hn Hm.",
            "VernacExtend",
            "894dbd76b539d7b7ba33294b0ce836f16c37201a"
        ],
        [
            "unfold shiftr.",
            "VernacExtend",
            "eed577ff940b182e51d6447cafec97bd06ac40ab"
        ],
        [
            "destruct n as [ |n|n]; (now destruct Hn) || clear Hn; simpl.",
            "VernacExtend",
            "09f1c19d96b43999372163a64e8820a195a10127"
        ],
        [
            "now rewrite add_0_r.",
            "VernacExtend",
            "5f4b7be19ee701d8de4f4c7a990ecd727d061129"
        ],
        [
            "assert (forall p, to_N (m + pos p) = (to_N m + N.pos p)%N).",
            "VernacExtend",
            "bfe49840d31bdcdbebd7c621a6d3ff91f9603d61"
        ],
        [
            "destruct m; trivial; now destruct Hm.",
            "VernacExtend",
            "44ff32bc8c0d70ebb321b33af2fcd1eb1b71eeb2"
        ],
        [
            "assert (forall p, 0 <= m + pos p).",
            "VernacExtend",
            "7c773f13fc75ff4f5ae15d65e6e8acf201cac0ce"
        ],
        [
            "destruct m; easy || now destruct Hm.",
            "VernacExtend",
            "520346ae52e5e9cef9b191bf01ce2cf5a95ac98f"
        ],
        [
            "destruct a as [ |a|a].",
            "VernacExtend",
            "4379d89b0fd1819a45764688206c28d2b443b80d"
        ],
        [
            "replace (Pos.iter div2 0 n) with 0 by (apply Pos.iter_invariant; intros; subst; trivial).",
            "VernacExtend",
            "97caeca3a4b4c8b1f9d8946b0d84e61e8a2d0b2b"
        ],
        [
            "now rewrite 2 testbit_0_l.",
            "VernacExtend",
            "186779a1fae2a9b934daadd98cf3789127ccfeb5"
        ],
        [
            "change (pos a) with (of_N (N.pos a)) at 1.",
            "VernacExtend",
            "d7334bc21bdb1caa8a5493db66de83f0ece822b8"
        ],
        [
            "rewrite <- (Pos.iter_swap_gen _ _ _ N.div2) by now intros [|[ | | ]].",
            "VernacExtend",
            "5022d73a8e7ee6c0668112e8287ffcaf88be9b3c"
        ],
        [
            "rewrite testbit_Zpos, testbit_of_N', H; trivial.",
            "VernacExtend",
            "8c63c4638f1c3e92401139f67b76369a2285dea3"
        ],
        [
            "exact (N.shiftr_spec' (N.pos a) (N.pos n) (to_N m)).",
            "VernacExtend",
            "9dced4560aaa83e17c85bcb6f9cd8302c5bf81c6"
        ],
        [
            "rewrite <- (Pos.iter_swap_gen _ _ _ Pos.div2_up) by trivial.",
            "VernacExtend",
            "f1aed73e54fe5662bfbb8cffee0eab9043bc279e"
        ],
        [
            "rewrite 2 testbit_Zneg, H; trivial.",
            "VernacExtend",
            "0f4438d9361fb3aa1fbf1aeb50f740628926ff36"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite (Pos.iter_swap_gen _ _ _ _ N.div2) by exact N.pred_div2_up.",
            "VernacExtend",
            "fc207fa7c8f920151218bcc27b07ed9eee00b646"
        ],
        [
            "exact (N.shiftr_spec' (Pos.pred_N a) (N.pos n) (to_N m)).",
            "VernacExtend",
            "e067701c6745126dd72c699d16a75d2a9ea79a55"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma shiftl_spec_low a n m : m<n -> testbit (shiftl a n) m = false.",
            "VernacStartTheoremProof",
            "a2ee4f7e7dbecbab9c7b672ed6b899be7ef711f3"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "destruct n as [|n|n], m as [|m|m]; try easy; simpl shiftl.",
            "VernacExtend",
            "b45eeacc49db50374e45975e7113906cfaf7a82d"
        ],
        [
            "destruct (Pos.succ_pred_or n) as [-> | <-]; rewrite ?Pos.iter_succ; apply testbit_even_0.",
            "VernacExtend",
            "1ae42c02d44649034b29eeed55ae0450ab83931b"
        ],
        [
            "destruct a as [ |a|a].",
            "VernacExtend",
            "4379d89b0fd1819a45764688206c28d2b443b80d"
        ],
        [
            "replace (Pos.iter (mul 2) 0 n) with 0 by (apply Pos.iter_invariant; intros; subst; trivial).",
            "VernacExtend",
            "97a5e64db3b1c12681eeab65ebb546d8a09fe26c"
        ],
        [
            "apply testbit_0_l.",
            "VernacExtend",
            "c6067b79c47600d2d90bcef49fac118c40a29e6a"
        ],
        [
            "rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial.",
            "VernacExtend",
            "8128fb69f3b8150b21be7faca3f382f2b0a760b7"
        ],
        [
            "rewrite testbit_Zpos by easy.",
            "VernacExtend",
            "b8b2d4341e6a42297ac8480e0c0aa567a9bc702b"
        ],
        [
            "exact (N.shiftl_spec_low (N.pos a) (N.pos n) (N.pos m) H).",
            "VernacExtend",
            "d8136752ed2188adb23a50492ab9e57721d70698"
        ],
        [
            "rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial.",
            "VernacExtend",
            "8128fb69f3b8150b21be7faca3f382f2b0a760b7"
        ],
        [
            "rewrite testbit_Zneg by easy.",
            "VernacExtend",
            "6523eb0d4daba6f54edb0c50fdcaf50cdbdc16f6"
        ],
        [
            "now rewrite (N.pos_pred_shiftl_low a (N.pos n)).",
            "VernacExtend",
            "9c65bbad8c4af62800d7cf581331aaa4eaa4ef7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma shiftl_spec_high a n m : 0<=m -> n<=m -> testbit (shiftl a n) m = testbit a (m-n).",
            "VernacStartTheoremProof",
            "444cbe91fe4a4798e04d3f3d0d2167ee38f0214c"
        ],
        [
            "intros Hm H.",
            "VernacExtend",
            "7d3f21228edd2ee2a52219be8a657128d1b691c3"
        ],
        [
            "destruct n as [ |n|n].",
            "VernacExtend",
            "a9e9765d82901f37b313f4718036aa49039475fc"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite sub_0_r.",
            "VernacExtend",
            "dc540e3c3cc5873b08ae20debcb561bd3ca88efb"
        ],
        [
            "destruct m as [ |m|m]; try (now destruct H).",
            "VernacExtend",
            "325f5aac6375c3aeff4d4c00507552aa2a3f47f4"
        ],
        [
            "assert (0 <= pos m - pos n).",
            "VernacExtend",
            "7f551a2844e9765e95eaa897b06e33e74156d66e"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "now rewrite compare_antisym, <- compare_sub, <- compare_antisym.",
            "VernacExtend",
            "bb85441c26469a66b2d6812a1900c246e7194938"
        ],
        [
            "assert (EQ : to_N (pos m - pos n) = (N.pos m - N.pos n)%N).",
            "VernacExtend",
            "3be563a61f0570cd06d3cb2c999c9eb9a496588b"
        ],
        [
            "red in H.",
            "VernacExtend",
            "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "simpl to_N.",
            "VernacExtend",
            "ed6c31b7f34e52e5e794537e653ec9dd0d0a3a6d"
        ],
        [
            "rewrite pos_sub_spec, Pos.compare_antisym.",
            "VernacExtend",
            "1282477ea0ff1512eaeecb5fd8a49905dbefa33a"
        ],
        [
            "destruct (Pos.compare_spec n m) as [H'|H'|H']; try (now destruct H).",
            "VernacExtend",
            "320bb21f33161bc9b102b414ca35fc091e0a7253"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "now rewrite N.sub_diag.",
            "VernacExtend",
            "1cd186fd4f929c54cc27b072b10fb2820f3b95e1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (Pos.sub_mask_pos' m n H') as (p & -> & <-).",
            "VernacExtend",
            "f033b77e7961d43708b21905454eca9ea957499f"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "now rewrite Pos.add_comm, Pos.add_sub.",
            "VernacExtend",
            "46734c6065b7b29ac75cc59cacf1ff8d28bfd905"
        ],
        [
            "destruct a; unfold shiftl.",
            "VernacExtend",
            "a24806384b1d845f725e69fe2ed42f2a64c24c91"
        ],
        [
            "replace (Pos.iter (mul 2) 0 n) with 0 by (apply Pos.iter_invariant; intros; subst; trivial).",
            "VernacExtend",
            "97a5e64db3b1c12681eeab65ebb546d8a09fe26c"
        ],
        [
            "now rewrite 2 testbit_0_l.",
            "VernacExtend",
            "186779a1fae2a9b934daadd98cf3789127ccfeb5"
        ],
        [
            "rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial.",
            "VernacExtend",
            "8128fb69f3b8150b21be7faca3f382f2b0a760b7"
        ],
        [
            "rewrite 2 testbit_Zpos, EQ by easy.",
            "VernacExtend",
            "a7df610cb61e07c352a17703c24d3317978ec60d"
        ],
        [
            "exact (N.shiftl_spec_high' (N.pos p) (N.pos n) (N.pos m) H).",
            "VernacExtend",
            "6741c3876fe8e0781bc1f68e9a7465135312151e"
        ],
        [
            "rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial.",
            "VernacExtend",
            "8128fb69f3b8150b21be7faca3f382f2b0a760b7"
        ],
        [
            "rewrite 2 testbit_Zneg, EQ by easy.",
            "VernacExtend",
            "225cdcf09e33c0c48e6f3ed223988fc5c05b0aab"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "simpl to_N.",
            "VernacExtend",
            "ed6c31b7f34e52e5e794537e653ec9dd0d0a3a6d"
        ],
        [
            "rewrite <- N.shiftl_spec_high by easy.",
            "VernacExtend",
            "8eb4b63bd6fa1f0112a231a8ffde009f37f43d4e"
        ],
        [
            "now apply (N.pos_pred_shiftl_high p (N.pos n)).",
            "VernacExtend",
            "5678babaeff576901152499d2d9876f22d732788"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now apply (shiftr_spec_aux a (pos n) m).",
            "VernacExtend",
            "c3a9e1995117675bd19a7c437b05115856e56f8f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma shiftr_spec a n m : 0<=m -> testbit (shiftr a n) m = testbit a (m+n).",
            "VernacStartTheoremProof",
            "102173b536d37cc32714af7b5355060929c98baf"
        ],
        [
            "intros Hm.",
            "VernacExtend",
            "76990ca140a9355e8012e89d27e48eb51607f2b7"
        ],
        [
            "destruct (leb_spec 0 n).",
            "VernacExtend",
            "18d1b1b00d85c66b214622c1b1ac40389a223cb5"
        ],
        [
            "now apply shiftr_spec_aux.",
            "VernacExtend",
            "f74d82f44478ca23783c1dac5249bfa7310af962"
        ],
        [
            "destruct (leb_spec (-n) m) as [LE|GT].",
            "VernacExtend",
            "919b63248dee91a929adc6cdf2cd20b12a1b6ce5"
        ],
        [
            "unfold shiftr.",
            "VernacExtend",
            "eed577ff940b182e51d6447cafec97bd06ac40ab"
        ],
        [
            "rewrite (shiftl_spec_high a (-n) m); trivial.",
            "VernacExtend",
            "2022c384bc872742271f55130c2662132cd1260e"
        ],
        [
            "now destruct n.",
            "VernacExtend",
            "6e836d168cd359f41ad4e992ef54068680a38db2"
        ],
        [
            "unfold shiftr.",
            "VernacExtend",
            "eed577ff940b182e51d6447cafec97bd06ac40ab"
        ],
        [
            "rewrite (shiftl_spec_low a (-n) m); trivial.",
            "VernacExtend",
            "8c4b6b163992b5bfa4c27b47277ff54e4a2f68ff"
        ],
        [
            "rewrite testbit_neg_r; trivial.",
            "VernacExtend",
            "ee05b9a2ca5b0e6fdeba9b8e19df620e40730b1f"
        ],
        [
            "red in GT.",
            "VernacExtend",
            "a77b7f3cc375a5f0a1c9b40dec3168342a37075f"
        ],
        [
            "rewrite compare_sub in GT.",
            "VernacExtend",
            "6cd12de0fe2eb6b953a6b17bb2bc6dd3c0c13498"
        ],
        [
            "now destruct n.",
            "VernacExtend",
            "6e836d168cd359f41ad4e992ef54068680a38db2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lor_spec a b n : testbit (lor a b) n = testbit a n || testbit b n.",
            "VernacStartTheoremProof",
            "8cd2ba9126d554be0a07105e123a76d83064f82c"
        ],
        [
            "destruct (leb_spec 0 n) as [Hn|Hn]; [|now rewrite !testbit_neg_r].",
            "VernacExtend",
            "bc19fb8e6ffcf0ace80447c58c7a363166d2442a"
        ],
        [
            "destruct a as [ |a|a], b as [ |b|b]; rewrite ?testbit_0_l, ?orb_false_r; trivial; unfold lor; rewrite ?testbit_Zpos, ?testbit_Zneg, ?N.pos_pred_succ by trivial.",
            "VernacExtend",
            "327aebb99415474bee600d2d89572e26ba7b7f7e"
        ],
        [
            "now rewrite <- N.lor_spec.",
            "VernacExtend",
            "7832e8e7759a0547259b6323cf6af7a2c4c6342f"
        ],
        [
            "now rewrite N.ldiff_spec, negb_andb, negb_involutive, orb_comm.",
            "VernacExtend",
            "e0694c94dde99f43f7bb81f52a64f322af41c87a"
        ],
        [
            "now rewrite N.ldiff_spec, negb_andb, negb_involutive.",
            "VernacExtend",
            "7d8418074bf10b0ec9502fc91202992fe26f21de"
        ],
        [
            "now rewrite N.land_spec, negb_andb.",
            "VernacExtend",
            "ede4bd8320441efa64800f7c3a5a7211ec22fe7e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma land_spec a b n : testbit (land a b) n = testbit a n && testbit b n.",
            "VernacStartTheoremProof",
            "db38c7ed990a02d6d94e93166d3c396f2da98fb6"
        ],
        [
            "destruct (leb_spec 0 n) as [Hn|Hn]; [|now rewrite !testbit_neg_r].",
            "VernacExtend",
            "bc19fb8e6ffcf0ace80447c58c7a363166d2442a"
        ],
        [
            "destruct a as [ |a|a], b as [ |b|b]; rewrite ?testbit_0_l, ?andb_false_r; trivial; unfold land; rewrite ?testbit_Zpos, ?testbit_Zneg, ?testbit_of_N', ?N.pos_pred_succ by trivial.",
            "VernacExtend",
            "7db738a3026e8e9165cd25ecdfdf4fb3ff5024e1"
        ],
        [
            "now rewrite <- N.land_spec.",
            "VernacExtend",
            "6864a57bf34be79a4311f638970c516d13076d66"
        ],
        [
            "now rewrite N.ldiff_spec.",
            "VernacExtend",
            "2ef66efe0d7e47a9b02c17a7a5bdef3c1b44e5ca"
        ],
        [
            "now rewrite N.ldiff_spec, andb_comm.",
            "VernacExtend",
            "2ad5ee5974dfab271cb37dca836a953bf47a10dd"
        ],
        [
            "now rewrite N.lor_spec, negb_orb.",
            "VernacExtend",
            "c0004ac7c3e1666cfb28e80d76768d716ddbb327"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ldiff_spec a b n : testbit (ldiff a b) n = testbit a n && negb (testbit b n).",
            "VernacStartTheoremProof",
            "8f8e3cc95f0858d61146c72fe07ef9ea79b70f02"
        ],
        [
            "destruct (leb_spec 0 n) as [Hn|Hn]; [|now rewrite !testbit_neg_r].",
            "VernacExtend",
            "bc19fb8e6ffcf0ace80447c58c7a363166d2442a"
        ],
        [
            "destruct a as [ |a|a], b as [ |b|b]; rewrite ?testbit_0_l, ?andb_true_r; trivial; unfold ldiff; rewrite ?testbit_Zpos, ?testbit_Zneg, ?testbit_of_N', ?N.pos_pred_succ by trivial.",
            "VernacExtend",
            "e3dab2fcc1541292fab08128308dbf304ffcdac6"
        ],
        [
            "now rewrite <- N.ldiff_spec.",
            "VernacExtend",
            "7279d2789107f4e6c4f57739dfab4f476e28229d"
        ],
        [
            "now rewrite N.land_spec, negb_involutive.",
            "VernacExtend",
            "8a510adece2ab7a41dd76620b88cfb8ade2e3446"
        ],
        [
            "now rewrite N.lor_spec, negb_orb.",
            "VernacExtend",
            "c0004ac7c3e1666cfb28e80d76768d716ddbb327"
        ],
        [
            "now rewrite N.ldiff_spec, negb_involutive, andb_comm.",
            "VernacExtend",
            "2bbfa7f116de6395665d6df0ead6072e9cc5cdf1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lxor_spec a b n : testbit (lxor a b) n = xorb (testbit a n) (testbit b n).",
            "VernacStartTheoremProof",
            "004bd465082ad5f966cd58651283325377e64329"
        ],
        [
            "destruct (leb_spec 0 n) as [Hn|Hn]; [|now rewrite !testbit_neg_r].",
            "VernacExtend",
            "bc19fb8e6ffcf0ace80447c58c7a363166d2442a"
        ],
        [
            "destruct a as [ |a|a], b as [ |b|b]; rewrite ?testbit_0_l, ?xorb_false_l, ?xorb_false_r; trivial; unfold lxor; rewrite ?testbit_Zpos, ?testbit_Zneg, ?testbit_of_N', ?N.pos_pred_succ by trivial.",
            "VernacExtend",
            "7095084e370f45625fee9adadaf7ebe15be35afa"
        ],
        [
            "now rewrite <- N.lxor_spec.",
            "VernacExtend",
            "be6606e28af958258d06879cf2a511620d212a0a"
        ],
        [
            "now rewrite N.lxor_spec, negb_xorb_r.",
            "VernacExtend",
            "5c43d17732941b9ce7891451b942e70861afc496"
        ],
        [
            "now rewrite N.lxor_spec, negb_xorb_l.",
            "VernacExtend",
            "23378135de3ac6885dafb63974c59097ea877ce6"
        ],
        [
            "now rewrite N.lxor_spec, xorb_negb_negb.",
            "VernacExtend",
            "cdda51e6c6a53c88daa109bd328b570b7cd127ce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Include ZExtraProp.",
            "VernacInclude",
            "5fd8da485997eec852b76cfdd61cccb3b72b6774"
        ],
        [
            "Lemma gt_lt_iff n m : n > m <-> m < n.",
            "VernacStartTheoremProof",
            "b042fb7da0815b0439a9c6694f314a9615db5be1"
        ],
        [
            "unfold lt, gt.",
            "VernacExtend",
            "8cc15ec47569f34eb3b35be0e4a59a64cd138877"
        ],
        [
            "now rewrite compare_antisym, CompOpp_iff.",
            "VernacExtend",
            "3872098e9b9c5487d518b55127e4b1376337872a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gt_lt n m : n > m -> m < n.",
            "VernacStartTheoremProof",
            "46de766bfe35e2f90a0f6993aa1dafa6d4344f58"
        ],
        [
            "apply gt_lt_iff.",
            "VernacExtend",
            "4620efeab5a40036b9a55501443fc8dbfb7fc6d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_gt n m : n < m -> m > n.",
            "VernacStartTheoremProof",
            "a3a671a1261012f42bb87a1244e9c36915e928ef"
        ],
        [
            "apply gt_lt_iff.",
            "VernacExtend",
            "4620efeab5a40036b9a55501443fc8dbfb7fc6d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_le_iff n m : n >= m <-> m <= n.",
            "VernacStartTheoremProof",
            "3b852b21899cf19a5f6bc2303bf9f569625a8a53"
        ],
        [
            "unfold le, ge.",
            "VernacExtend",
            "49ff096655be717232bfbbc31cf77140d8c09c79"
        ],
        [
            "now rewrite compare_antisym, CompOpp_iff.",
            "VernacExtend",
            "3872098e9b9c5487d518b55127e4b1376337872a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_le n m : n >= m -> m <= n.",
            "VernacStartTheoremProof",
            "9845cf0bb6ac5e2f7ffe053ec84a48e863be3d57"
        ],
        [
            "apply ge_le_iff.",
            "VernacExtend",
            "0473d285db861d6caf8a2f4ce58491d5fe906cdb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_ge n m : n <= m -> m >= n.",
            "VernacStartTheoremProof",
            "3673404a29b0b35fb0028cdeaa20039e7b712128"
        ],
        [
            "apply ge_le_iff.",
            "VernacExtend",
            "0473d285db861d6caf8a2f4ce58491d5fe906cdb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac swap_greater := rewrite ?gt_lt_iff in *; rewrite ?ge_le_iff in *.",
            "VernacExtend",
            "0bc06d51fee3ca8c4a50259be98b51a09e89d38c"
        ],
        [
            "Lemma gtb_ltb n m : (n >? m) = (m <? n).",
            "VernacStartTheoremProof",
            "1fb0816314ef545a3ac926f1702fc4a56b957acd"
        ],
        [
            "unfold gtb, ltb.",
            "VernacExtend",
            "c59396551e25ec56a2bb6cd935ef89abf7a64f95"
        ],
        [
            "rewrite compare_antisym.",
            "VernacExtend",
            "79a52ead430e61efd31081179fc8e3db332e367d"
        ],
        [
            "now case compare.",
            "VernacExtend",
            "74c02af69296d7bd4194ae66bb084df198e7dac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma geb_leb n m : (n >=? m) = (m <=? n).",
            "VernacStartTheoremProof",
            "ca1542c644b2bc1ba091da92cc96abebde0e7cbb"
        ],
        [
            "unfold geb, leb.",
            "VernacExtend",
            "59dca22fc673639a146e38300aed207ae95a1064"
        ],
        [
            "rewrite compare_antisym.",
            "VernacExtend",
            "79a52ead430e61efd31081179fc8e3db332e367d"
        ],
        [
            "now case compare.",
            "VernacExtend",
            "74c02af69296d7bd4194ae66bb084df198e7dac5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtb_lt n m : (n >? m) = true <-> m < n.",
            "VernacStartTheoremProof",
            "d2833defd64f4f63d3ef06e1bd0aee7bb694f2a3"
        ],
        [
            "rewrite gtb_ltb.",
            "VernacExtend",
            "2f0f38547906875e7deac10f9ec27c937ce6c18a"
        ],
        [
            "apply ltb_lt.",
            "VernacExtend",
            "4a1e8a85ff39540c773486df1a736d17424cc5b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma geb_le n m : (n >=? m) = true <-> m <= n.",
            "VernacStartTheoremProof",
            "b80fe926f6fda9aaf0498680bf53b53d1e3fb51b"
        ],
        [
            "rewrite geb_leb.",
            "VernacExtend",
            "080d7e452e6300bd360ad3288a564a2093fa764f"
        ],
        [
            "apply leb_le.",
            "VernacExtend",
            "a0c69bbcff8b82ea56ff0f95f104f594a8a76174"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtb_spec n m : BoolSpec (m<n) (n<=m) (n >? m).",
            "VernacStartTheoremProof",
            "635a4352a4de723ec1c3e865b8aa1d5e12a6b1f2"
        ],
        [
            "rewrite gtb_ltb.",
            "VernacExtend",
            "2f0f38547906875e7deac10f9ec27c937ce6c18a"
        ],
        [
            "apply ltb_spec.",
            "VernacExtend",
            "eebb0eac485fd95982f16afd82c98e5fa2f04f09"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma geb_spec n m : BoolSpec (m<=n) (n<m) (n >=? m).",
            "VernacStartTheoremProof",
            "66e54d8b1412f89275c029c6488a5de61433ec7d"
        ],
        [
            "rewrite geb_leb.",
            "VernacExtend",
            "080d7e452e6300bd360ad3288a564a2093fa764f"
        ],
        [
            "apply leb_spec.",
            "VernacExtend",
            "818115ee7741d425cdd7a4be42130057d4832d97"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_reg_l n m p : n + m = n + p -> m = p.",
            "VernacStartTheoremProof",
            "dad1e8db84ef22fb6c1c7fc18f3ea5500ce3ff77"
        ],
        [
            "exact (proj1 (add_cancel_l m p n)).",
            "VernacExtend",
            "9d94c28736192a71cf01fa65a56f00b54b63e038"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_reg_l n m p : p <> 0 -> p * n = p * m -> n = m.",
            "VernacStartTheoremProof",
            "9701343cf13f79045705b8c2900916837e6d08b7"
        ],
        [
            "exact (fun Hp => proj1 (mul_cancel_l n m p Hp)).",
            "VernacExtend",
            "fa210d20c46661b7510cdb8455aa81ca05f656d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_reg_r n m p : p <> 0 -> n * p = m * p -> n = m.",
            "VernacStartTheoremProof",
            "69c10c6683771390f9c7bce411fad1b88011c592"
        ],
        [
            "exact (fun Hp => proj1 (mul_cancel_r n m p Hp)).",
            "VernacExtend",
            "3511417c59de4813cb41ccec16d63d0eab309699"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_eq_mul_m1 n : - n = n * -1.",
            "VernacStartTheoremProof",
            "b1608470ca09310543b3fb3b36fc8259b4d6189f"
        ],
        [
            "rewrite mul_comm.",
            "VernacExtend",
            "5f0fb0765ec04101790f2b78062bf5490bbe5e03"
        ],
        [
            "now destruct n.",
            "VernacExtend",
            "6e836d168cd359f41ad4e992ef54068680a38db2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_diag n : n + n = 2 * n.",
            "VernacStartTheoremProof",
            "b7fb1267ebcdddf8cae8ab709ccfbd1f469da470"
        ],
        [
            "change 2 with (1+1).",
            "VernacExtend",
            "18309220599ebb8f04f47f929c05632cd568a412"
        ],
        [
            "now rewrite mul_add_distr_r, !mul_1_l.",
            "VernacExtend",
            "4d53b4bb05a105740d1e1516d6c6d0d213176ba3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_opp n m : (- n ?= - m) = (m ?= n).",
            "VernacStartTheoremProof",
            "3903861987f32ba4a352649b162ebcba7133450b"
        ],
        [
            "destruct n, m; simpl; trivial; intros; now rewrite <- Pos.compare_antisym.",
            "VernacExtend",
            "e7c757964e7eb8667dacfad9dd6c6a19bdf1058d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_compare_mono_l n m p : (n + m ?= n + p) = (m ?= p).",
            "VernacStartTheoremProof",
            "22c70a3bdebcfbb89eb123822aa589efa8b3247d"
        ],
        [
            "rewrite (compare_sub m p), compare_sub.",
            "VernacExtend",
            "41b3b2ed9817dd3b043503bfebe335ac5ac837ba"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "rewrite opp_add_distr, (add_comm n m), add_assoc.",
            "VernacExtend",
            "2af963bcf1f9747d94bf1165f2779ddca7c188f4"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "now rewrite <- add_assoc, add_opp_diag_r, add_0_r.",
            "VernacExtend",
            "14ed05a000e6cc3ab5eedeea681e19a6f5f35671"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Z.",
            "VernacEndSegment",
            "17823143a690d1674801e6893efb2936cec5d32d"
        ],
        [
            "Bind Scope Z_scope with Z.t Z.",
            "VernacBindScope",
            "3c1f3304486223ce26956ddff03faf3934d4cd99"
        ],
        [
            "Numeral Notation Z Z.of_int Z.to_int : Z_scope.",
            "VernacExtend",
            "7ceb662e02401af01a480ebcca6ea34efe45cc20"
        ],
        [
            "Infix \"+\" := Z.add : Z_scope.",
            "VernacInfix",
            "146b21225549bb0d6b90c3eaf29205e00638c097"
        ],
        [
            "Notation \"- x\" := (Z.opp x) : Z_scope.",
            "VernacNotation",
            "60fe321c83b1f25d47774c177f2a8638a7821a63"
        ],
        [
            "Infix \"-\" := Z.sub : Z_scope.",
            "VernacInfix",
            "f841fd95d48d9e75197d1a9115950e22fd44647e"
        ],
        [
            "Infix \"*\" := Z.mul : Z_scope.",
            "VernacInfix",
            "d4449ad61df4ae3c5722633ea21ae8561f91d4cc"
        ],
        [
            "Infix \"^\" := Z.pow : Z_scope.",
            "VernacInfix",
            "e8b30f93c1ef3c69b8a3688136f345e09277cf33"
        ],
        [
            "Infix \"/\" := Z.div : Z_scope.",
            "VernacInfix",
            "5e467abf1529a8fe412af0a01c26a17f402717a2"
        ],
        [
            "Infix \"mod\" := Z.modulo (at level 40, no associativity) : Z_scope.",
            "VernacInfix",
            "0820712bb6bddcc4f702de4642a589d0e8582bb5"
        ],
        [
            "Infix \"\u00f7\" := Z.quot (at level 40, left associativity) : Z_scope.",
            "VernacInfix",
            "dab7de414b362f61dfd5646e9978f50fef9b0b65"
        ],
        [
            "Infix \"?=\" := Z.compare (at level 70, no associativity) : Z_scope.",
            "VernacInfix",
            "0f53a8bf9995d636ade63a62b342d0f1a8bbfe2a"
        ],
        [
            "Infix \"=?\" := Z.eqb (at level 70, no associativity) : Z_scope.",
            "VernacInfix",
            "c76782f308c139058aba1563c0b480fb37ef5cfa"
        ],
        [
            "Infix \"<=?\" := Z.leb (at level 70, no associativity) : Z_scope.",
            "VernacInfix",
            "b1f6735766167f0594ba91cf33d7a9606bb567fb"
        ],
        [
            "Infix \"<?\" := Z.ltb (at level 70, no associativity) : Z_scope.",
            "VernacInfix",
            "b5dc8a2d965b1a9d692208bcca98f94158233fe1"
        ],
        [
            "Infix \">=?\" := Z.geb (at level 70, no associativity) : Z_scope.",
            "VernacInfix",
            "c506b41993c6bdaa36716994bb63f10a04f247c2"
        ],
        [
            "Infix \">?\" := Z.gtb (at level 70, no associativity) : Z_scope.",
            "VernacInfix",
            "08a4904eb50d62fdcd4864017f3971e96937623e"
        ],
        [
            "Notation \"( x | y )\" := (Z.divide x y) (at level 0) : Z_scope.",
            "VernacNotation",
            "1938071a8486b91223da114e3fe1345decb1ea1c"
        ],
        [
            "Infix \"<=\" := Z.le : Z_scope.",
            "VernacInfix",
            "70024a9abf08490708291795f5c8f9b66155d5ac"
        ],
        [
            "Infix \"<\" := Z.lt : Z_scope.",
            "VernacInfix",
            "81e587377de4f4fd4899083ee284be1081411837"
        ],
        [
            "Infix \">=\" := Z.ge : Z_scope.",
            "VernacInfix",
            "270e78e317e65ce6383bc329f11d15e109e6cc57"
        ],
        [
            "Infix \">\" := Z.gt : Z_scope.",
            "VernacInfix",
            "1538528a8e285d689b716bde460ea791f829bf74"
        ],
        [
            "Notation \"x <= y <= z\" := (x <= y /\\ y <= z) : Z_scope.",
            "VernacNotation",
            "17c7e342e663c49d2318fe4e5819c22ec90aaf99"
        ],
        [
            "Notation \"x <= y < z\" := (x <= y /\\ y < z) : Z_scope.",
            "VernacNotation",
            "fbf791173aee395ac10334610d03ccfba69b1683"
        ],
        [
            "Notation \"x < y < z\" := (x < y /\\ y < z) : Z_scope.",
            "VernacNotation",
            "a3829fdb27c086240a66b2cb91f1180019a795d4"
        ],
        [
            "Notation \"x < y <= z\" := (x < y /\\ y <= z) : Z_scope.",
            "VernacNotation",
            "f36d0037e48b63f94bd8a58752517d6f9659155b"
        ],
        [
            "Module Pos2Z.",
            "VernacDefineModule",
            "8441293221e18b1eb354cdd2c35236636624dfc9"
        ],
        [
            "Lemma id p : Z.to_pos (Z.pos p) = p.",
            "VernacStartTheoremProof",
            "8fde7ec0d4e59ddf97594ad2759304c34fecaa1e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj p q : Z.pos p = Z.pos q -> p = q.",
            "VernacStartTheoremProof",
            "19abdaae1cb6d32de945ea953356ad9cb5f8ff42"
        ],
        [
            "now injection 1.",
            "VernacExtend",
            "3613f22935e1d9491aedb1db367e0f8bcf1c6c82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_iff p q : Z.pos p = Z.pos q <-> p = q.",
            "VernacStartTheoremProof",
            "cdf831c3fe50ed0317b36c252168a4f305120f6f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply inj.",
            "VernacExtend",
            "9104df39dd59389afc0216d8320240bf8dbf78d5"
        ],
        [
            "intros; now f_equal.",
            "VernacExtend",
            "5b326aae0a79a34d850ac45bcf8aa8756caea1a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_pos p : 0 < Z.pos p.",
            "VernacStartTheoremProof",
            "9f2816a2ec6dad5d55a0d4fa1df27c41f846b9f6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_nonneg p : 0 <= Z.pos p.",
            "VernacStartTheoremProof",
            "fca73184a5d8657241c4f6cab77e615a50b8755c"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_1 : Z.pos 1 = 1.",
            "VernacStartTheoremProof",
            "95899fbfa01a0b942e4a9f4a13b697b6d0b503ba"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_xO p : Z.pos p~0 = 2 * Z.pos p.",
            "VernacStartTheoremProof",
            "7d7ef2e50c0ea453c2673b68b9aca0d15303910a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_xI p : Z.pos p~1 = 2 * Z.pos p + 1.",
            "VernacStartTheoremProof",
            "9b1ca56cd6c9cd2e4f729e0994f36d58c034e9a5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_succ p : Z.pos (Pos.succ p) = Z.succ (Z.pos p).",
            "VernacStartTheoremProof",
            "881dc89a1ecce9e8e1d12056fc34377bfc712e43"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite Pos.add_1_r.",
            "VernacExtend",
            "6effcf97b68463ca7ed326f49098b6160d29b1eb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_add p q : Z.pos (p+q) = Z.pos p + Z.pos q.",
            "VernacStartTheoremProof",
            "d5031f5a87a52aaf4e6af112ccf4f9ed31943bfe"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_sub p q : (p < q)%positive -> Z.pos (q-p) = Z.pos q - Z.pos p.",
            "VernacStartTheoremProof",
            "2fa331cbe7b5b6a78943a15371d20f90714ae83b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite Z.pos_sub_gt.",
            "VernacExtend",
            "3a076165f626c4cdfead3065c786f34033c9f7e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_sub_max p q : Z.pos (p - q) = Z.max 1 (Z.pos p - Z.pos q).",
            "VernacStartTheoremProof",
            "a255f84cae51b04f8a0589982c4fdd30e6bc428b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Z.pos_sub_spec.",
            "VernacExtend",
            "ad39ea5e69a6135dd31841448750ef09af08dff9"
        ],
        [
            "case Pos.compare_spec; intros.",
            "VernacExtend",
            "b79b38ab25539b5e1778e53d4ae6d5f006ccfaf1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; now rewrite Pos.sub_diag.",
            "VernacExtend",
            "5f1f4cb6c96e027a78a0b71772429e3c45b3c947"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite Pos.sub_lt.",
            "VernacExtend",
            "98be495e9875235521728fa56ac82b0c2ec190c9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now destruct (p-q)%positive.",
            "VernacExtend",
            "22d1a51c9948f37becb4c1bae4d2b637d11d513b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_pred p : p <> 1%positive -> Z.pos (Pos.pred p) = Z.pred (Z.pos p).",
            "VernacStartTheoremProof",
            "65b772c0343c7f99f60186e8835ea3cb7f5b7447"
        ],
        [
            "destruct p; easy || now destruct 1.",
            "VernacExtend",
            "b19a0661d2f18a26056609d784c3c39dbdf66c99"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_mul p q : Z.pos (p*q) = Z.pos p * Z.pos q.",
            "VernacStartTheoremProof",
            "466c97f4c023ffd36669029664b07838ab084074"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_pow_pos p q : Z.pos (p^q) = Z.pow_pos (Z.pos p) q.",
            "VernacStartTheoremProof",
            "64ed8659d3997974f5b2b28148ce06f893c6cd26"
        ],
        [
            "now apply Pos.iter_swap_gen.",
            "VernacExtend",
            "e65a942f0735f2a56724cf83d5ee925c620aaa5e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_pow p q : Z.pos (p^q) = (Z.pos p)^(Z.pos q).",
            "VernacStartTheoremProof",
            "7da9fd29bcb1c85d3d9d31915cb2379bbebc9530"
        ],
        [
            "apply inj_pow_pos.",
            "VernacExtend",
            "14041e504e217446797e76c5c3df606d9522cd85"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_square p : Z.pos (Pos.square p) = Z.square (Z.pos p).",
            "VernacStartTheoremProof",
            "3941fa85892515f19a278dad3250e48af3f6db2f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_compare p q : (p ?= q)%positive = (Z.pos p ?= Z.pos q).",
            "VernacStartTheoremProof",
            "6ce9ea5180c3afa86f24c64b9f3902c582770283"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_leb p q : (p <=? q)%positive = (Z.pos p <=? Z.pos q).",
            "VernacStartTheoremProof",
            "0c7971dc30d720955def9f90e3012402d2d861f6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_ltb p q : (p <? q)%positive = (Z.pos p <? Z.pos q).",
            "VernacStartTheoremProof",
            "467317b8ea81fb8fc3273abc7bbe2c90b32e0304"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_eqb p q : (p =? q)%positive = (Z.pos p =? Z.pos q).",
            "VernacStartTheoremProof",
            "d0c489dae62edf35c4a00fb851af9df884cf234a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_max p q : Z.pos (Pos.max p q) = Z.max (Z.pos p) (Z.pos q).",
            "VernacStartTheoremProof",
            "ce85730e6cfff42f1c99961cff74ff21ce3a6177"
        ],
        [
            "unfold Z.max, Pos.max.",
            "VernacExtend",
            "94ea4520387e4696ba6d6c33352c26b61e2a0623"
        ],
        [
            "rewrite inj_compare.",
            "VernacExtend",
            "4ab508caf2e1a434b2148d8ceb91d401efffeb77"
        ],
        [
            "now case Z.compare_spec.",
            "VernacExtend",
            "8ac43197c7e0b1bfa612602c2a6dc8cece8e95a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_min p q : Z.pos (Pos.min p q) = Z.min (Z.pos p) (Z.pos q).",
            "VernacStartTheoremProof",
            "3894151074344a1c742e9b671a07c2aee5a1f2f1"
        ],
        [
            "unfold Z.min, Pos.min.",
            "VernacExtend",
            "cdb8c22455878a00241453a2a94219df6f6a2981"
        ],
        [
            "rewrite inj_compare.",
            "VernacExtend",
            "4ab508caf2e1a434b2148d8ceb91d401efffeb77"
        ],
        [
            "now case Z.compare_spec.",
            "VernacExtend",
            "8ac43197c7e0b1bfa612602c2a6dc8cece8e95a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_sqrt p : Z.pos (Pos.sqrt p) = Z.sqrt (Z.pos p).",
            "VernacStartTheoremProof",
            "db2f7d93af10f2851d4a6d2054f3436ec4c80b5f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_gcd p q : Z.pos (Pos.gcd p q) = Z.gcd (Z.pos p) (Z.pos q).",
            "VernacStartTheoremProof",
            "89e60ac02811900b8e888d0f21961dbf3996248c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition inj_divide p q : (Z.pos p|Z.pos q) <-> (p|q)%positive.",
            "VernacDefinition",
            "f8294adab62ae4db4a6ab14afffc67ba89f746fc"
        ],
        [
            "apply Z.divide_Zpos.",
            "VernacExtend",
            "4ac5b8794eb04e4a71a6b06827aaf784c80e8ce1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_testbit a n : 0<=n -> Z.testbit (Z.pos a) n = N.testbit (N.pos a) (Z.to_N n).",
            "VernacStartTheoremProof",
            "7c69c49ad3db6074bdda31de8513ef5ff83749c7"
        ],
        [
            "apply Z.testbit_Zpos.",
            "VernacExtend",
            "b3be27531f57e7c3c366a137f94e5242c19abe1f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_neg p q : Z.neg p = Z.neg q -> p = q.",
            "VernacStartTheoremProof",
            "00310232ab141bbf050a9fa71c260749a7ee6c12"
        ],
        [
            "now injection 1.",
            "VernacExtend",
            "3613f22935e1d9491aedb1db367e0f8bcf1c6c82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_neg_iff p q : Z.neg p = Z.neg q <-> p = q.",
            "VernacStartTheoremProof",
            "062011e3d48d9195cd73c98ebb858110c5217412"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply inj_neg.",
            "VernacExtend",
            "bd1a0b3e757ef1e7f21543adfd4fa05683f3a35c"
        ],
        [
            "intros; now f_equal.",
            "VernacExtend",
            "5b326aae0a79a34d850ac45bcf8aa8756caea1a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_pos p q : Z.pos p = Z.pos q -> p = q.",
            "VernacStartTheoremProof",
            "33c12fe280fffce5839dfd0c60138db8d774a1a2"
        ],
        [
            "now injection 1.",
            "VernacExtend",
            "3613f22935e1d9491aedb1db367e0f8bcf1c6c82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_pos_iff p q : Z.pos p = Z.pos q <-> p = q.",
            "VernacStartTheoremProof",
            "e632e89931f09c602657458023f0e1302e5559b4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply inj_pos.",
            "VernacExtend",
            "6908c1d6c365cf82d2900695c5fcbbda5872ec9f"
        ],
        [
            "intros; now f_equal.",
            "VernacExtend",
            "5b326aae0a79a34d850ac45bcf8aa8756caea1a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neg_is_neg p : Z.neg p < 0.",
            "VernacStartTheoremProof",
            "3b30efed3dbad9b9a3b4517d0b180e336f6589a4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neg_is_nonpos p : Z.neg p <= 0.",
            "VernacStartTheoremProof",
            "4628b63a7b9d558713f0f00fd432228942b5d1a9"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_is_pos p : 0 < Z.pos p.",
            "VernacStartTheoremProof",
            "45953855994656b867a4c21a9ca0276370f29959"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_is_nonneg p : 0 <= Z.pos p.",
            "VernacStartTheoremProof",
            "581197e46e1746c9d97a0ab6fceb0708912ef4ec"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neg_le_pos p q : Zneg p <= Zpos q.",
            "VernacStartTheoremProof",
            "1cf40526809fe7b05256a5d9eeff14c63417a6b5"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neg_lt_pos p q : Zneg p < Zpos q.",
            "VernacStartTheoremProof",
            "71a412328d0f901799f7d5c875495e9cc23a3218"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neg_le_neg p q : (q <= p)%positive -> Zneg p <= Zneg q.",
            "VernacStartTheoremProof",
            "84e3011dfc529e54c53b27c1fa9882d3003e1372"
        ],
        [
            "intros; unfold Z.le; simpl.",
            "VernacExtend",
            "f5bfaa1a4df6f2ac296f8af108bb60e4723b6e4f"
        ],
        [
            "now rewrite <- Pos.compare_antisym.",
            "VernacExtend",
            "e7018e33e171134870ec4a27cfae829a41b7f149"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neg_lt_neg p q : (q < p)%positive -> Zneg p < Zneg q.",
            "VernacStartTheoremProof",
            "85c99738c9dbdfd7ecb2c42e791e034c5a0f2380"
        ],
        [
            "intros; unfold Z.lt; simpl.",
            "VernacExtend",
            "a1bbbdbadc6f0652df18dab26377472ce84e9c12"
        ],
        [
            "now rewrite <- Pos.compare_antisym.",
            "VernacExtend",
            "e7018e33e171134870ec4a27cfae829a41b7f149"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_le_pos p q : (p <= q)%positive -> Zpos p <= Zpos q.",
            "VernacStartTheoremProof",
            "ad086a1348111b2347243f51a2521800728fb84a"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_lt_pos p q : (p < q)%positive -> Zpos p < Zpos q.",
            "VernacStartTheoremProof",
            "533536181e6306d6bd5ba1b1b6fef99b16200316"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neg_xO p : Z.neg p~0 = 2 * Z.neg p.",
            "VernacStartTheoremProof",
            "aa2eb300f6e27f1d3d1c47d7eb4928780a41c35a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma neg_xI p : Z.neg p~1 = 2 * Z.neg p - 1.",
            "VernacStartTheoremProof",
            "cb9d9d53b062297621d9fd231e1dbb0e62990dfb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_xO p : Z.pos p~0 = 2 * Z.pos p.",
            "VernacStartTheoremProof",
            "c7bee7d07c9ef64535b6d46c810cfffd51bf4af7"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pos_xI p : Z.pos p~1 = 2 * Z.pos p + 1.",
            "VernacStartTheoremProof",
            "c0a5604c57316595b4ece9647223e737cae44ace"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_neg p : - Z.neg p = Z.pos p.",
            "VernacStartTheoremProof",
            "605f1adea9201f01542d7c715c97769a5a1bb4ef"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma opp_pos p : - Z.pos p = Z.neg p.",
            "VernacStartTheoremProof",
            "22976adb7638393a57d8084896460e4278ced684"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_neg_neg p q : Z.neg p + Z.neg q = Z.neg (p+q).",
            "VernacStartTheoremProof",
            "fe1d9bf97c16e96943fd25a3ceb7545a0c249ed2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_pos_neg p q : Z.pos p + Z.neg q = Z.pos_sub p q.",
            "VernacStartTheoremProof",
            "5157bb1596c152916387daf9da1ef635f9b32059"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_neg_pos p q : Z.neg p + Z.pos q = Z.pos_sub q p.",
            "VernacStartTheoremProof",
            "8dc2cb9bcec063355141dd0b0cc01f2e16293d2e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_pos_pos p q : Z.pos p + Z.pos q = Z.pos (p+q).",
            "VernacStartTheoremProof",
            "7fdb85af09691b15658c5ad51a3dfda34532d42f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_pos_neg_r n p : (n|Z.pos p) <-> (n|Z.neg p).",
            "VernacStartTheoremProof",
            "1e5f15cf4c8428f518da08e02fbac74873a71541"
        ],
        [
            "apply Z.divide_Zpos_Zneg_r.",
            "VernacExtend",
            "3ca66b959d24fada0d9e82b1451877afd22eeaa8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_pos_neg_l n p : (Z.pos p|n) <-> (Z.neg p|n).",
            "VernacStartTheoremProof",
            "43c6c69a5a38c3c06d83c65b9949d8731e3a141e"
        ],
        [
            "apply Z.divide_Zpos_Zneg_l.",
            "VernacExtend",
            "5e10935e1f76818e1ff7558e0d951361f1c82b3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma testbit_neg a n : 0<=n -> Z.testbit (Z.neg a) n = negb (N.testbit (Pos.pred_N a) (Z.to_N n)).",
            "VernacStartTheoremProof",
            "e3fda068d0b4a8d354713e43c8644a32bf1e87a7"
        ],
        [
            "apply Z.testbit_Zneg.",
            "VernacExtend",
            "e1ed648dc90566812c54f646ca15574449b9b483"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma testbit_pos a n : 0<=n -> Z.testbit (Z.pos a) n = N.testbit (N.pos a) (Z.to_N n).",
            "VernacStartTheoremProof",
            "be965084a11de4fcf2cc4dd5f19867212a3e50bd"
        ],
        [
            "apply Z.testbit_Zpos.",
            "VernacExtend",
            "b3be27531f57e7c3c366a137f94e5242c19abe1f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Pos2Z.",
            "VernacEndSegment",
            "3eec2922f210eb73eaa2213560f410092141b5bc"
        ],
        [
            "Module Z2Pos.",
            "VernacDefineModule",
            "8dfd74084d85c567f908d28359e6e97b28eb1bad"
        ],
        [
            "Lemma id x : 0 < x -> Z.pos (Z.to_pos x) = x.",
            "VernacStartTheoremProof",
            "91caa73f8d3103280c8a466cc29bef13deb2f123"
        ],
        [
            "now destruct x.",
            "VernacExtend",
            "11df7cc1073429d0a2b21c005404123169558cf0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj x y : 0 < x -> 0 < y -> Z.to_pos x = Z.to_pos y -> x = y.",
            "VernacStartTheoremProof",
            "1e72e9b6ef1de57069d47235e2453fe39a004a4b"
        ],
        [
            "destruct x; simpl; try easy.",
            "VernacExtend",
            "8ca4cec382bdbca11b16a15d671de69e25098d3a"
        ],
        [
            "intros _ H ->.",
            "VernacExtend",
            "9ecd67b19460725454b0bb2d13697c44f4bb74c1"
        ],
        [
            "now apply id.",
            "VernacExtend",
            "33c9d098230f507b24325a1604599995802b0f21"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_iff x y : 0 < x -> 0 < y -> (Z.to_pos x = Z.to_pos y <-> x = y).",
            "VernacStartTheoremProof",
            "ecca4ce3e379a8b19a45a06d439077a6d95150f6"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now apply inj.",
            "VernacExtend",
            "b07e33792bdd5b07d5a3e956364a39b1fdf8a576"
        ],
        [
            "intros; now f_equal.",
            "VernacExtend",
            "5b326aae0a79a34d850ac45bcf8aa8756caea1a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma to_pos_nonpos x : x <= 0 -> Z.to_pos x = 1%positive.",
            "VernacStartTheoremProof",
            "8996e60d36c8ce82d1cba0b98b4668e77a35ee7a"
        ],
        [
            "destruct x; trivial.",
            "VernacExtend",
            "bbff326ec32235fabdefaa17829f382a345b7d0f"
        ],
        [
            "now destruct 1.",
            "VernacExtend",
            "599cf8488dce43cedbb3491ca78a34441bf2a1bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_1 : Z.to_pos 1 = 1%positive.",
            "VernacStartTheoremProof",
            "45c49848e47363c542055a8b1399bad734584463"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_double x : 0 < x -> Z.to_pos (Z.double x) = (Z.to_pos x)~0%positive.",
            "VernacStartTheoremProof",
            "96873b6c6dddb4985933ce1f31bdf7ce1b55f230"
        ],
        [
            "now destruct x.",
            "VernacExtend",
            "11df7cc1073429d0a2b21c005404123169558cf0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_succ_double x : 0 < x -> Z.to_pos (Z.succ_double x) = (Z.to_pos x)~1%positive.",
            "VernacStartTheoremProof",
            "cdc6e87697e607715b8c395641def986de0fb857"
        ],
        [
            "now destruct x.",
            "VernacExtend",
            "11df7cc1073429d0a2b21c005404123169558cf0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_succ x : 0 < x -> Z.to_pos (Z.succ x) = Pos.succ (Z.to_pos x).",
            "VernacStartTheoremProof",
            "0c333f20123791cb0ffce28d3dbdce6bcc2c73fd"
        ],
        [
            "destruct x; try easy.",
            "VernacExtend",
            "c594906b3d1fbd830d480bee05341154d799f4ea"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite Pos.add_1_r.",
            "VernacExtend",
            "6effcf97b68463ca7ed326f49098b6160d29b1eb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_add x y : 0 < x -> 0 < y -> Z.to_pos (x+y) = (Z.to_pos x + Z.to_pos y)%positive.",
            "VernacStartTheoremProof",
            "fed0cd6f10c6e58bd14704b2a22afc1049235d7e"
        ],
        [
            "destruct x; easy || now destruct y.",
            "VernacExtend",
            "7809fee90bc484fc4bb5322bdc67d8012f6e0668"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_sub x y : 0 < x < y -> Z.to_pos (y-x) = (Z.to_pos y - Z.to_pos x)%positive.",
            "VernacStartTheoremProof",
            "ea565e8c8259099e22530aea33fab77ba6e68f77"
        ],
        [
            "destruct x; try easy.",
            "VernacExtend",
            "c594906b3d1fbd830d480bee05341154d799f4ea"
        ],
        [
            "destruct y; try easy.",
            "VernacExtend",
            "eae46f5fc397e9e09c6f59281721bea45d730094"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite Z.pos_sub_gt.",
            "VernacExtend",
            "3a076165f626c4cdfead3065c786f34033c9f7e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_pred x : 1 < x -> Z.to_pos (Z.pred x) = Pos.pred (Z.to_pos x).",
            "VernacStartTheoremProof",
            "3664aced25ce277061a18af4ae0131b1cd37584d"
        ],
        [
            "now destruct x as [|[x|x|]|].",
            "VernacExtend",
            "c3bb92fb045aa6cdccaca71043bfee5afbcaf3ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_mul x y : 0 < x -> 0 < y -> Z.to_pos (x*y) = (Z.to_pos x * Z.to_pos y)%positive.",
            "VernacStartTheoremProof",
            "ed31ab7505f934e2f58ee6a1e075052c13ba9daf"
        ],
        [
            "destruct x; easy || now destruct y.",
            "VernacExtend",
            "7809fee90bc484fc4bb5322bdc67d8012f6e0668"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_pow x y : 0 < x -> 0 < y -> Z.to_pos (x^y) = (Z.to_pos x ^ Z.to_pos y)%positive.",
            "VernacStartTheoremProof",
            "c6a8891e67cc2763db694450d2283d9eaaa3ee89"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Pos2Z.inj.",
            "VernacExtend",
            "52d9749f3f7e381016a58bc245eb81998292f7b0"
        ],
        [
            "rewrite Pos2Z.inj_pow, !id; trivial.",
            "VernacExtend",
            "c17323f805ed5ac992df291a4de0c34f9f5479d5"
        ],
        [
            "apply Z.pow_pos_nonneg.",
            "VernacExtend",
            "454fd8dbb0bf2a025799cd99faf29fffdbfad883"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "now apply Z.lt_le_incl.",
            "VernacExtend",
            "d084f1f5f68542e577b78f198ad474c7cb31019e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_pow_pos x p : 0 < x -> Z.to_pos (Z.pow_pos x p) = ((Z.to_pos x)^p)%positive.",
            "VernacStartTheoremProof",
            "4e37cef385ca1ffadc2377489548464eb1bf8764"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now apply (inj_pow x (Z.pos p)).",
            "VernacExtend",
            "a275e41cfabe722c84f1edadcf57f5b57a197122"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_compare x y : 0 < x -> 0 < y -> (x ?= y) = (Z.to_pos x ?= Z.to_pos y)%positive.",
            "VernacStartTheoremProof",
            "870bee133284e29e231d0ba1549c214f4205ee3c"
        ],
        [
            "destruct x; easy || now destruct y.",
            "VernacExtend",
            "7809fee90bc484fc4bb5322bdc67d8012f6e0668"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_leb x y : 0 < x -> 0 < y -> (x <=? y) = (Z.to_pos x <=? Z.to_pos y)%positive.",
            "VernacStartTheoremProof",
            "5afa337d5b96177ff085f9b26da3921c99b328f7"
        ],
        [
            "destruct x; easy || now destruct y.",
            "VernacExtend",
            "7809fee90bc484fc4bb5322bdc67d8012f6e0668"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_ltb x y : 0 < x -> 0 < y -> (x <? y) = (Z.to_pos x <? Z.to_pos y)%positive.",
            "VernacStartTheoremProof",
            "4cc566dc46bf8aa2284cda08a1e53a17c55eadfc"
        ],
        [
            "destruct x; easy || now destruct y.",
            "VernacExtend",
            "7809fee90bc484fc4bb5322bdc67d8012f6e0668"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_eqb x y : 0 < x -> 0 < y -> (x =? y) = (Z.to_pos x =? Z.to_pos y)%positive.",
            "VernacStartTheoremProof",
            "48da91649d883b1ad852c6a5dc7687263eb88daf"
        ],
        [
            "destruct x; easy || now destruct y.",
            "VernacExtend",
            "7809fee90bc484fc4bb5322bdc67d8012f6e0668"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_max x y : Z.to_pos (Z.max x y) = Pos.max (Z.to_pos x) (Z.to_pos y).",
            "VernacStartTheoremProof",
            "54a6756d78a858b98dc71b5c0c565c19e1b6bc92"
        ],
        [
            "destruct x; simpl; try rewrite Pos.max_1_l.",
            "VernacExtend",
            "712f2847657d235ee9cd7e4fb6706c38bc50b23e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now destruct y.",
            "VernacExtend",
            "19c4739e4ba9fcc2e3ab305570f094116988d335"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct y; simpl; now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max.",
            "VernacExtend",
            "e698eeeb9aab96e170b23d14c83f036ce930f5eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct y; simpl; rewrite ?Pos.max_1_r; trivial.",
            "VernacExtend",
            "68c77d77a6c45105a0fb8f87fcb720b872eda6ed"
        ],
        [
            "apply to_pos_nonpos.",
            "VernacExtend",
            "185d093582714d21d5351a4fb2840c40dab9ff9f"
        ],
        [
            "now apply Z.max_lub.",
            "VernacExtend",
            "c798bda01dc59c6a388b83f8f6759c733b3526d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_min x y : Z.to_pos (Z.min x y) = Pos.min (Z.to_pos x) (Z.to_pos y).",
            "VernacStartTheoremProof",
            "dd57cfde645f20a90e09479ab30c6e5c91237419"
        ],
        [
            "destruct x; simpl; try rewrite Pos.min_1_l.",
            "VernacExtend",
            "10adc8206f0e26dba29783570dc9ed25182f170b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now destruct y.",
            "VernacExtend",
            "19c4739e4ba9fcc2e3ab305570f094116988d335"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct y; simpl; now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min.",
            "VernacExtend",
            "42f27e8a1786313a9746e728a532bd81e2e2dda4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct y; simpl; rewrite ?Pos.min_1_r; trivial.",
            "VernacExtend",
            "68c162739ea30314aee6459f770a3bc852687042"
        ],
        [
            "apply to_pos_nonpos.",
            "VernacExtend",
            "185d093582714d21d5351a4fb2840c40dab9ff9f"
        ],
        [
            "apply Z.min_le_iff.",
            "VernacExtend",
            "5e5997cc5a96b060ff6d7135d545279c5f5c9ebe"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_sqrt x : Z.to_pos (Z.sqrt x) = Pos.sqrt (Z.to_pos x).",
            "VernacStartTheoremProof",
            "c0f02b4a969ad88e0a2f105f1c7deaa4f596a225"
        ],
        [
            "now destruct x.",
            "VernacExtend",
            "11df7cc1073429d0a2b21c005404123169558cf0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_gcd x y : 0 < x -> 0 < y -> Z.to_pos (Z.gcd x y) = Pos.gcd (Z.to_pos x) (Z.to_pos y).",
            "VernacStartTheoremProof",
            "bdd359d2c82faf7cfd1036abc06690442431924b"
        ],
        [
            "destruct x; easy || now destruct y.",
            "VernacExtend",
            "7809fee90bc484fc4bb5322bdc67d8012f6e0668"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Z2Pos.",
            "VernacEndSegment",
            "6e446c7845c13831c4ebed1013a3fe7d82d692c7"
        ],
        [
            "Notation Zdouble_plus_one := Z.succ_double (only parsing).",
            "VernacSyntacticDefinition",
            "b6e5ccf66bd3890eb54c83e1530e732fe84a2f92"
        ],
        [
            "Notation Zdouble_minus_one := Z.pred_double (only parsing).",
            "VernacSyntacticDefinition",
            "a8e2f55cd740ce6536b3f2039b274dfc296278ab"
        ],
        [
            "Notation Zdouble := Z.double (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "c5c63ecd1692cd847214282afb494b2e99570a15"
        ],
        [
            "Notation ZPminus := Z.pos_sub (only parsing).",
            "VernacSyntacticDefinition",
            "47859a6b6d76350bafe9361ddd4bf5fa28dd09db"
        ],
        [
            "Notation Zsucc' := Z.succ (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "092e9e5e65836a95d8bed7fbe4c52a63e9d52971"
        ],
        [
            "Notation Zpred' := Z.pred (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "eeb5562ea1a39175ab7b6c84491f0b7367ee9a92"
        ],
        [
            "Notation Zplus' := Z.add (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "129da54bafdcf70c7af207296ebcecbf36fecefb"
        ],
        [
            "Notation Zplus := Z.add (only parsing).",
            "VernacSyntacticDefinition",
            "7a40876cd6d2c0162959a6f41ce792b8336e326e"
        ],
        [
            "Notation Zopp := Z.opp (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "b5e958901554964ff89c86c91dc2a5fcdca82fda"
        ],
        [
            "Notation Zsucc := Z.succ (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "5a9756d1fc69989ea533fd383c9d960c2873c20a"
        ],
        [
            "Notation Zpred := Z.pred (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "c8f2621913bbf1cef51737206efe0eeaa5e5ad34"
        ],
        [
            "Notation Zminus := Z.sub (only parsing).",
            "VernacSyntacticDefinition",
            "3eb3131cd3839dd7e5e40f93e028f6bee8faf1d6"
        ],
        [
            "Notation Zmult := Z.mul (only parsing).",
            "VernacSyntacticDefinition",
            "95fb02cd61c1b1922ea556a44e53d5e95523bcb3"
        ],
        [
            "Notation Zcompare := Z.compare (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "e617648c359052d49a1273d2508e2d5a37fb874c"
        ],
        [
            "Notation Zsgn := Z.sgn (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "b1cd1136fecb7adb0915036651f42b173d9e2e68"
        ],
        [
            "Notation Zle := Z.le (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "b5867246ecf9058631b89df063241bb19c5e1029"
        ],
        [
            "Notation Zge := Z.ge (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "67033c72a1f97d5b76dc2e483b552999cb3679ef"
        ],
        [
            "Notation Zlt := Z.lt (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "fda189d1a0e2a9a6f3975a417c20bae20ab6d39e"
        ],
        [
            "Notation Zgt := Z.gt (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "4134942c7118d62b0bc8df1c5008b74c4d8eb5bd"
        ],
        [
            "Notation Zmax := Z.max (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "182c2a50b49404be9f8b7dab400ef431e6275539"
        ],
        [
            "Notation Zmin := Z.min (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "a9dafcf6162e7465bf67f220ad10400e2b8414c7"
        ],
        [
            "Notation Zabs := Z.abs (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "8325e4dba8ec53b2303e406fd831e03cc7c9f77f"
        ],
        [
            "Notation Zabs_nat := Z.abs_nat (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "fd46a84bebe2110a77a8c29233b8d39e3610b80a"
        ],
        [
            "Notation Zabs_N := Z.abs_N (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "c64c19e1bb003e280ae179278bf8640be9730d3d"
        ],
        [
            "Notation Z_of_nat := Z.of_nat (only parsing).",
            "VernacSyntacticDefinition",
            "230c41c62437db0aec6bb10fb0ee6a46dc88e7c4"
        ],
        [
            "Notation Z_of_N := Z.of_N (only parsing).",
            "VernacSyntacticDefinition",
            "6547d122c44dba5501fa97162ffd6277a3db2c51"
        ],
        [
            "Notation Zind := Z.peano_ind (only parsing).",
            "VernacSyntacticDefinition",
            "e06056460fdafe144b0bb1f708a56a9e0fecc937"
        ],
        [
            "Notation Zopp_0 := Z.opp_0 (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "a9aea5b362b7d2f7cd5f74349e73c03058d9358c"
        ],
        [
            "Notation Zopp_involutive := Z.opp_involutive (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "6ed5eb5b69ef49e7e80ca3706aad59bd85abfb59"
        ],
        [
            "Notation Zopp_inj := Z.opp_inj (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "0157e5c8477967133d688f8f0f25a8056f8cf186"
        ],
        [
            "Notation Zplus_0_l := Z.add_0_l (only parsing).",
            "VernacSyntacticDefinition",
            "ea13f90cefc237213af3a148a203382248d5f834"
        ],
        [
            "Notation Zplus_0_r := Z.add_0_r (only parsing).",
            "VernacSyntacticDefinition",
            "c3acb96cd4e8a08ac53282d5bcb68268a4c3f160"
        ],
        [
            "Notation Zplus_comm := Z.add_comm (only parsing).",
            "VernacSyntacticDefinition",
            "daba2c1a979f76378d61ff04403dca80591f56f2"
        ],
        [
            "Notation Zopp_plus_distr := Z.opp_add_distr (only parsing).",
            "VernacSyntacticDefinition",
            "af6df126b356dba7f13c5d1238b52927a03867e9"
        ],
        [
            "Notation Zopp_succ := Z.opp_succ (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "e14d53c1d1eba4c8f7c3ad30fa39090156e9b093"
        ],
        [
            "Notation Zplus_opp_r := Z.add_opp_diag_r (only parsing).",
            "VernacSyntacticDefinition",
            "380d3a22dec2f408a99a62c5f731e26d6808037d"
        ],
        [
            "Notation Zplus_opp_l := Z.add_opp_diag_l (only parsing).",
            "VernacSyntacticDefinition",
            "c5a4e4493f2de0dec7ca036f7a2595fa7cc41841"
        ],
        [
            "Notation Zplus_assoc := Z.add_assoc (only parsing).",
            "VernacSyntacticDefinition",
            "26ced5be7389d4553a8c4e31d778beb42ed39f16"
        ],
        [
            "Notation Zplus_permute := Z.add_shuffle3 (only parsing).",
            "VernacSyntacticDefinition",
            "23712434c295a42b804b3aca322aa9227259d52a"
        ],
        [
            "Notation Zplus_reg_l := Z.add_reg_l (only parsing).",
            "VernacSyntacticDefinition",
            "50345ca36633f41564061486ea4d1db5fdfe8066"
        ],
        [
            "Notation Zplus_succ_l := Z.add_succ_l (only parsing).",
            "VernacSyntacticDefinition",
            "635c6a09f68ce0c6a6bf4707c9fcfe0c383a84c6"
        ],
        [
            "Notation Zplus_succ_comm := Z.add_succ_comm (only parsing).",
            "VernacSyntacticDefinition",
            "e8a9505ca81b7f3392e0e6b343af81960e1a47eb"
        ],
        [
            "Notation Zsucc_discr := Z.neq_succ_diag_r (only parsing).",
            "VernacSyntacticDefinition",
            "5ca73cbd6f1145fb84c8f4db8e0dd6838cbff30d"
        ],
        [
            "Notation Zsucc_inj := Z.succ_inj (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "fbbebf116d2dc50b8fc1e4e051580662dc4e13bc"
        ],
        [
            "Notation Zsucc'_inj := Z.succ_inj (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "c40c6073fc1bad94d6787f27ad5d6541dfe11121"
        ],
        [
            "Notation Zsucc'_pred' := Z.succ_pred (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "27b4c9748bb7f03caa9d7b7ede80a85229462054"
        ],
        [
            "Notation Zpred'_succ' := Z.pred_succ (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "f4af71c2c61051f1810ade2cdb289f6859d70145"
        ],
        [
            "Notation Zpred'_inj := Z.pred_inj (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "2c86c80eb86681b985a1a064e8bc2fdaaf9f9aaf"
        ],
        [
            "Notation Zsucc'_discr := Z.neq_succ_diag_r (only parsing).",
            "VernacSyntacticDefinition",
            "277f3084ce19d3d7eacb613d924d4b7f6610ac87"
        ],
        [
            "Notation Zminus_0_r := Z.sub_0_r (only parsing).",
            "VernacSyntacticDefinition",
            "96e504c1f5d81def84703732fbf7f68b2ccd3ef1"
        ],
        [
            "Notation Zminus_diag := Z.sub_diag (only parsing).",
            "VernacSyntacticDefinition",
            "fdcc89b0dcc6995bad3a2b53ea08f3e3e1e6c093"
        ],
        [
            "Notation Zminus_plus_distr := Z.sub_add_distr (only parsing).",
            "VernacSyntacticDefinition",
            "55931119b12c207ddad7d3ffba862b28b8222eff"
        ],
        [
            "Notation Zminus_succ_r := Z.sub_succ_r (only parsing).",
            "VernacSyntacticDefinition",
            "191721d991baf4f7e91b497a331643a26abb29c1"
        ],
        [
            "Notation Zminus_plus := Z.add_simpl_l (only parsing).",
            "VernacSyntacticDefinition",
            "e1a5f7dfd4f8d0302785b115711a6a42a57f6fb6"
        ],
        [
            "Notation Zmult_0_l := Z.mul_0_l (only parsing).",
            "VernacSyntacticDefinition",
            "19e416c268d17a7f3aaf3bbabf8a44fdfab706f5"
        ],
        [
            "Notation Zmult_0_r := Z.mul_0_r (only parsing).",
            "VernacSyntacticDefinition",
            "c28e4f78926f31ca889760061ffc276753cb9554"
        ],
        [
            "Notation Zmult_1_l := Z.mul_1_l (only parsing).",
            "VernacSyntacticDefinition",
            "d18e1508cc9b2a3772b2c32c50a0fa4f70b74e38"
        ],
        [
            "Notation Zmult_1_r := Z.mul_1_r (only parsing).",
            "VernacSyntacticDefinition",
            "bfff6d58d32fdbc179160d3ed2394800f9e97420"
        ],
        [
            "Notation Zmult_comm := Z.mul_comm (only parsing).",
            "VernacSyntacticDefinition",
            "3b9b0de8e522a64d69fefedf2b80f7e6625ba733"
        ],
        [
            "Notation Zmult_assoc := Z.mul_assoc (only parsing).",
            "VernacSyntacticDefinition",
            "542cb696892b46b9332ac12c7661a798fcf83cbf"
        ],
        [
            "Notation Zmult_permute := Z.mul_shuffle3 (only parsing).",
            "VernacSyntacticDefinition",
            "dca03dff3d8bf3f594394b174cc6eb9ed3cae667"
        ],
        [
            "Notation Zmult_1_inversion_l := Z.mul_eq_1 (only parsing).",
            "VernacSyntacticDefinition",
            "bdd44177b781f41a939c37b8432d5647d2165f22"
        ],
        [
            "Notation Zdouble_mult := Z.double_spec (only parsing).",
            "VernacSyntacticDefinition",
            "0047ee08687211e738f3447f2094b4eb5bf6555e"
        ],
        [
            "Notation Zdouble_plus_one_mult := Z.succ_double_spec (only parsing).",
            "VernacSyntacticDefinition",
            "67d856bd6be53bffe2be2c1f892ea473eb65822f"
        ],
        [
            "Notation Zopp_mult_distr_l_reverse := Z.mul_opp_l (only parsing).",
            "VernacSyntacticDefinition",
            "8ad9dafe316783f03c5866bd2a7f54f5a355eb84"
        ],
        [
            "Notation Zmult_opp_opp := Z.mul_opp_opp (only parsing).",
            "VernacSyntacticDefinition",
            "76e944310783868412722b2e2bb66be4a811145b"
        ],
        [
            "Notation Zmult_opp_comm := Z.mul_opp_comm (only parsing).",
            "VernacSyntacticDefinition",
            "682e4b8fdf7618d9928d4861cf7eaf433b8258c3"
        ],
        [
            "Notation Zopp_eq_mult_neg_1 := Z.opp_eq_mul_m1 (only parsing).",
            "VernacSyntacticDefinition",
            "47ba90c8dd97cba85f338d3e96e858a4db6aa187"
        ],
        [
            "Notation Zmult_plus_distr_r := Z.mul_add_distr_l (only parsing).",
            "VernacSyntacticDefinition",
            "b7b26327fb60041091b539ad458b3008f07b5c5f"
        ],
        [
            "Notation Zmult_plus_distr_l := Z.mul_add_distr_r (only parsing).",
            "VernacSyntacticDefinition",
            "34e49e8b17ac0fe3481a810490ffcbb19148df95"
        ],
        [
            "Notation Zmult_minus_distr_r := Z.mul_sub_distr_r (only parsing).",
            "VernacSyntacticDefinition",
            "0d9342b44342627e4e1c721c5acde2704c229fff"
        ],
        [
            "Notation Zmult_reg_l := Z.mul_reg_l (only parsing).",
            "VernacSyntacticDefinition",
            "38a12afbf4f37e7ad03291ba76424a441fe7ea01"
        ],
        [
            "Notation Zmult_reg_r := Z.mul_reg_r (only parsing).",
            "VernacSyntacticDefinition",
            "79ad80d4eadb9cf69dff1d269cf0c69a71427c10"
        ],
        [
            "Notation Zmult_succ_l := Z.mul_succ_l (only parsing).",
            "VernacSyntacticDefinition",
            "542b7398353f8461fef08c414a06be320932b1a2"
        ],
        [
            "Notation Zmult_succ_r := Z.mul_succ_r (only parsing).",
            "VernacSyntacticDefinition",
            "dd27386eb1c41561d9e179df934e4d1424154ccb"
        ],
        [
            "Notation Zpos_xI := Pos2Z.inj_xI (only parsing).",
            "VernacSyntacticDefinition",
            "86459002245a6d578da84dff32e3f184c3ef1053"
        ],
        [
            "Notation Zpos_xO := Pos2Z.inj_xO (only parsing).",
            "VernacSyntacticDefinition",
            "49945694ba66df4f298ef42688d6aadba8dac5ca"
        ],
        [
            "Notation Zneg_xI := Pos2Z.neg_xI (only parsing).",
            "VernacSyntacticDefinition",
            "c0c76a4cdb14d7a49d983a38cf904dbe23dc63e0"
        ],
        [
            "Notation Zneg_xO := Pos2Z.neg_xO (only parsing).",
            "VernacSyntacticDefinition",
            "6b91f57e466a49abe667d265856c03fe92f3b56e"
        ],
        [
            "Notation Zopp_neg := Pos2Z.opp_neg (only parsing).",
            "VernacSyntacticDefinition",
            "da90224520218fa3ea287573ea5854852e215866"
        ],
        [
            "Notation Zpos_succ_morphism := Pos2Z.inj_succ (only parsing).",
            "VernacSyntacticDefinition",
            "a34f9faa40efe37f9a19794080151b5894a050f0"
        ],
        [
            "Notation Zpos_mult_morphism := Pos2Z.inj_mul (only parsing).",
            "VernacSyntacticDefinition",
            "cfe40e25e7229b4af2620288302af423afaa2d0d"
        ],
        [
            "Notation Zpos_minus_morphism := Pos2Z.inj_sub (only parsing).",
            "VernacSyntacticDefinition",
            "05ba275d31137924b5bc84314985a6c96ffc0f3d"
        ],
        [
            "Notation Zpos_eq_rev := Pos2Z.inj (only parsing).",
            "VernacSyntacticDefinition",
            "147f2b95c8c883ac46488400e19b8699c830ce78"
        ],
        [
            "Notation Zpos_plus_distr := Pos2Z.inj_add (only parsing).",
            "VernacSyntacticDefinition",
            "ebe36be9fb5d5d96bd152b247bb6b5f761d6263a"
        ],
        [
            "Notation Zneg_plus_distr := Pos2Z.add_neg_neg (only parsing).",
            "VernacSyntacticDefinition",
            "728eb92aba250d422d896ac93855e9efbbb1bcaf"
        ],
        [
            "Notation Z := Z (only parsing).",
            "VernacSyntacticDefinition",
            "5d8fced8cac244d9b70860225da0ad024821b706"
        ],
        [
            "Notation Z_rect := Z_rect (only parsing).",
            "VernacSyntacticDefinition",
            "4b96b522032064347c0988aca3635ab78c6b2493"
        ],
        [
            "Notation Z_rec := Z_rec (only parsing).",
            "VernacSyntacticDefinition",
            "34f3211e920bda1bcba61a8047132063bfe358de"
        ],
        [
            "Notation Z_ind := Z_ind (only parsing).",
            "VernacSyntacticDefinition",
            "8912715cc2aaed1322e9745d8185782e4970ee52"
        ],
        [
            "Notation Z0 := Z0 (only parsing).",
            "VernacSyntacticDefinition",
            "1ba15ac1a0a7df02e357c8853701da920bf47ff6"
        ],
        [
            "Notation Zpos := Zpos (only parsing).",
            "VernacSyntacticDefinition",
            "cc7a8c41bc302bbe8f6d745f60303f971f11a626"
        ],
        [
            "Notation Zneg := Zneg (only parsing).",
            "VernacSyntacticDefinition",
            "dacd2f9fa0bb55f91739d4bd87712b4ebd83dbba"
        ],
        [
            "Notation SYM1 lem := (fun n => eq_sym (lem n)).",
            "VernacSyntacticDefinition",
            "bb0dafb02d730c089d676c2f3f8d840228f1b1b2"
        ],
        [
            "Notation SYM2 lem := (fun n m => eq_sym (lem n m)).",
            "VernacSyntacticDefinition",
            "bb8aeacb7295c7dd6ace0c1888a1b9c3af01fd66"
        ],
        [
            "Notation SYM3 lem := (fun n m p => eq_sym (lem n m p)).",
            "VernacSyntacticDefinition",
            "93304214c17835ed983ea685b4a703e99ccf9d5f"
        ],
        [
            "Lemma Zplus_assoc_reverse : forall n m p, n+m+p = n+(m+p).",
            "VernacStartTheoremProof",
            "01bffcc78dea5274037537a97ba05cc6e8a25bb1"
        ],
        [
            "Proof (SYM3 Z.add_assoc).",
            "VernacExactProof",
            "38a67198b664b18212cbe7c2a4bdd67790b4a7a2"
        ],
        [
            "Lemma Zplus_succ_r_reverse : forall n m, Z.succ (n+m) = n+Z.succ m.",
            "VernacStartTheoremProof",
            "c901dbceaaf852be7e99e99e819d61996b33d512"
        ],
        [
            "Proof (SYM2 Z.add_succ_r).",
            "VernacExactProof",
            "0db22110bc86fece28610db8cfbc04fb4537ed86"
        ],
        [
            "Notation Zplus_succ_r := Zplus_succ_r_reverse (only parsing).",
            "VernacSyntacticDefinition",
            "874364e3a7082e1156b100ed44fa1d78026b47dc"
        ],
        [
            "Lemma Zplus_0_r_reverse : forall n, n = n + 0.",
            "VernacStartTheoremProof",
            "adb8d53b3bf4a820f66a13895f1c1c76b2042578"
        ],
        [
            "Proof (SYM1 Z.add_0_r).",
            "VernacExactProof",
            "d7fe6b86da1d42ff4e7c7d92d56c8dc0b1c9ebc6"
        ],
        [
            "Lemma Zplus_eq_compat : forall n m p q, n=m -> p=q -> n+p=m+q.",
            "VernacStartTheoremProof",
            "7b9a9c6534c693bfe22159b2c108333c71d6caf1"
        ],
        [
            "Proof (f_equal2 Z.add).",
            "VernacExactProof",
            "aa4354a4967fff3f13f6844594621edc3f8c6824"
        ],
        [
            "Lemma Zsucc_pred : forall n, n = Z.succ (Z.pred n).",
            "VernacStartTheoremProof",
            "f15f1d4185f4d454e34641dcd7cdbd5eba399c7c"
        ],
        [
            "Proof (SYM1 Z.succ_pred).",
            "VernacExactProof",
            "5a8fac57c316b931205b7ab061e7614913731f04"
        ],
        [
            "Lemma Zpred_succ : forall n, n = Z.pred (Z.succ n).",
            "VernacStartTheoremProof",
            "0fd1520a157284a73134bd345812e8a57a5a310b"
        ],
        [
            "Proof (SYM1 Z.pred_succ).",
            "VernacExactProof",
            "3af94ed98234e0bc0a36a26caa85e6f465f23741"
        ],
        [
            "Lemma Zsucc_eq_compat : forall n m, n = m -> Z.succ n = Z.succ m.",
            "VernacStartTheoremProof",
            "ce36408fe384cb5e86302aa9db8eca797e21b8e6"
        ],
        [
            "Proof (f_equal Z.succ).",
            "VernacExactProof",
            "dce4d6eabc445223adf3a891285a99144a942712"
        ],
        [
            "Lemma Zminus_0_l_reverse : forall n, n = n - 0.",
            "VernacStartTheoremProof",
            "b4bdfa79eed89acde99ace49360c8320a9dfe5c0"
        ],
        [
            "Proof (SYM1 Z.sub_0_r).",
            "VernacExactProof",
            "a5c8e15f7c3c37d0b6dfedbb4e17fde357c643b5"
        ],
        [
            "Lemma Zminus_diag_reverse : forall n, 0 = n-n.",
            "VernacStartTheoremProof",
            "4be64c2c0169471a725dc3e2ceb2932904c5bdd9"
        ],
        [
            "Proof (SYM1 Z.sub_diag).",
            "VernacExactProof",
            "bf903eee7e646d578ab8c0b17f4fdb6e49d869f7"
        ],
        [
            "Lemma Zminus_succ_l : forall n m, Z.succ (n - m) = Z.succ n - m.",
            "VernacStartTheoremProof",
            "63c9f4c07327c3988646f0512d6f4fc93942e6a1"
        ],
        [
            "Proof (SYM2 Z.sub_succ_l).",
            "VernacExactProof",
            "af599bfd27af8a050c48562b5be69ce08997c90e"
        ],
        [
            "Lemma Zplus_minus_eq : forall n m p, n = m + p -> p = n - m.",
            "VernacStartTheoremProof",
            "fd711b210aa7c71d8622ef91df880bec6b806c55"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now apply Z.add_move_l.",
            "VernacExtend",
            "b25b1a9478ffa54eec25a2d87c275a9f6e232264"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zplus_minus : forall n m, n + (m - n) = m.",
            "VernacStartTheoremProof",
            "6e488475bbe468fc93ac4aef8368dc293e9100ad"
        ],
        [
            "Proof (fun n m => eq_trans (Z.add_comm n (m-n)) (Z.sub_add n m)).",
            "VernacExactProof",
            "2eeca8b85f4bc5ce3ffb45984a474f5abb94bfd6"
        ],
        [
            "Lemma Zminus_plus_simpl_l : forall n m p, p + n - (p + m) = n - m.",
            "VernacStartTheoremProof",
            "af71e7fd24fc1c2f3f363dcd1007d1fa2aa4543c"
        ],
        [
            "Proof (fun n m p => Z.add_add_simpl_l_l p n m).",
            "VernacExactProof",
            "f9f5ad032af794539e1be5b60a77d00eb089e9e3"
        ],
        [
            "Lemma Zminus_plus_simpl_l_reverse : forall n m p, n - m = p + n - (p + m).",
            "VernacStartTheoremProof",
            "231e6dfefce8d3b1662303c303bd93aa441f6208"
        ],
        [
            "Proof (SYM3 Zminus_plus_simpl_l).",
            "VernacExactProof",
            "5a6d5761437e44ecc256a1a8a6aff3ea2e22509d"
        ],
        [
            "Lemma Zminus_plus_simpl_r : forall n m p, n + p - (m + p) = n - m.",
            "VernacStartTheoremProof",
            "f2df170d714755017855e73eacddd9a802573cab"
        ],
        [
            "Proof (fun n m p => Z.add_add_simpl_r_r n p m).",
            "VernacExactProof",
            "d15e8237194e19409fcfd464b96213fda45874d1"
        ],
        [
            "Lemma Zeq_minus : forall n m, n = m -> n - m = 0.",
            "VernacStartTheoremProof",
            "341643e41ba27ecb5990cc3bb3f79bfc92cb5ca5"
        ],
        [
            "Proof (fun n m => proj2 (Z.sub_move_0_r n m)).",
            "VernacExactProof",
            "9f0e012dc8d448667b26e3545574d29f49615ead"
        ],
        [
            "Lemma Zminus_eq : forall n m, n - m = 0 -> n = m.",
            "VernacStartTheoremProof",
            "eedc732e937ac5cf589f0cc453c103c292521073"
        ],
        [
            "Proof (fun n m => proj1 (Z.sub_move_0_r n m)).",
            "VernacExactProof",
            "13c59ff43bc8cabe401e0d979a504c09f1c8873e"
        ],
        [
            "Lemma Zmult_0_r_reverse : forall n, 0 = n * 0.",
            "VernacStartTheoremProof",
            "6f73a5fd5fae71899f92d8a5787437095645fadd"
        ],
        [
            "Proof (SYM1 Z.mul_0_r).",
            "VernacExactProof",
            "22176d3a552e57bed31e30a47c883959bf55bb9b"
        ],
        [
            "Lemma Zmult_assoc_reverse : forall n m p, n * m * p = n * (m * p).",
            "VernacStartTheoremProof",
            "8973c0b596a2f71ea5eb9033a19fdff85a8e68fc"
        ],
        [
            "Proof (SYM3 Z.mul_assoc).",
            "VernacExactProof",
            "23c02101b97af8381941be5244e90d2ec4c4b3a1"
        ],
        [
            "Lemma Zmult_integral : forall n m, n * m = 0 -> n = 0 \\/ m = 0.",
            "VernacStartTheoremProof",
            "05d9a302aa7a37fe7033d1466adf94e8fc98c88b"
        ],
        [
            "Proof (fun n m => proj1 (Z.mul_eq_0 n m)).",
            "VernacExactProof",
            "655e47ea6fb1b45e98d0deb7f68bf1bdf4bafe79"
        ],
        [
            "Lemma Zmult_integral_l : forall n m, n <> 0 -> m * n = 0 -> m = 0.",
            "VernacStartTheoremProof",
            "266e95659bf91ca35e91bfae084dad3c137f6ab8"
        ],
        [
            "Proof (fun n m H H' => Z.mul_eq_0_l m n H' H).",
            "VernacExactProof",
            "70cc2dfec54da1ce7b276bcdea4d1e3d2289a33b"
        ],
        [
            "Lemma Zopp_mult_distr_l : forall n m, - (n * m) = - n * m.",
            "VernacStartTheoremProof",
            "aa5934ea63fe2f1038539cbf409255087d05f7d6"
        ],
        [
            "Proof (SYM2 Z.mul_opp_l).",
            "VernacExactProof",
            "b149be45d0ebfe3aa67ddefed4b5d3fc2acebeaa"
        ],
        [
            "Lemma Zopp_mult_distr_r : forall n m, - (n * m) = n * - m.",
            "VernacStartTheoremProof",
            "6f050b96fb0233824f01b67cda2973be8479673a"
        ],
        [
            "Proof (SYM2 Z.mul_opp_r).",
            "VernacExactProof",
            "8e85b4c27364bf8aa2f26f8da3e87f8f26b0d4ae"
        ],
        [
            "Lemma Zmult_minus_distr_l : forall n m p, p * (n - m) = p * n - p * m.",
            "VernacStartTheoremProof",
            "b795ca2dd7ae334ffc8a017d2d17ea21bbe67d7b"
        ],
        [
            "Proof (fun n m p => Z.mul_sub_distr_l p n m).",
            "VernacExactProof",
            "1c47f79056ef62f378577850a5cc0728ad5c7586"
        ],
        [
            "Lemma Zmult_succ_r_reverse : forall n m, n * m + n = n * Z.succ m.",
            "VernacStartTheoremProof",
            "08ec51251b396a888a158add3869ccc1022ebdf6"
        ],
        [
            "Proof (SYM2 Z.mul_succ_r).",
            "VernacExactProof",
            "20bd66f344f4dfee66395d28f5f24d49d7a0f794"
        ],
        [
            "Lemma Zmult_succ_l_reverse : forall n m, n * m + m = Z.succ n * m.",
            "VernacStartTheoremProof",
            "65cb6dcb84edb674090223feb147c1f40f60a1f2"
        ],
        [
            "Proof (SYM2 Z.mul_succ_l).",
            "VernacExactProof",
            "7d80a6d062d124e7945bec97884e0bc7af1dfd0e"
        ],
        [
            "Lemma Zpos_eq : forall p q, p = q -> Z.pos p = Z.pos q.",
            "VernacStartTheoremProof",
            "ff1c85f8e7c993d26e54b81d8e0046f6f6073766"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zpos_eq_iff : forall p q, p = q <-> Z.pos p = Z.pos q.",
            "VernacStartTheoremProof",
            "c2f31e42b0b69be05ad50e581de9e6715223647f"
        ],
        [
            "Proof (fun p q => iff_sym (Pos2Z.inj_iff p q)).",
            "VernacExactProof",
            "9804b96bd7753c5f5964d20cd4f7e2e2f1da370b"
        ],
        [
            "Hint Immediate Zsucc_pred: zarith.",
            "VernacHints",
            "45d73d27c17858f908513f67f8ef49a701fba116"
        ],
        [
            "Definition Zne (x y:Z) := x <> y.",
            "VernacDefinition",
            "888c456b18d804c71bc37e3f3db8eb8042883c10"
        ],
        [
            "Ltac elim_compare com1 com2 := case (Dcompare (com1 ?= com2)%Z); [ idtac | let x := fresh \"H\" in (intro x; case x; clear x) ].",
            "VernacExtend",
            "2f95c4b9f2df6edbd524cd9da02faceaf26fa397"
        ],
        [
            "Lemma ZL0 : 2%nat = (1 + 1)%nat.",
            "VernacStartTheoremProof",
            "c87808bee147718aa507d93878465d563f72d2f5"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zplus_diag_eq_mult_2 n : n + n = n * 2.",
            "VernacStartTheoremProof",
            "5d1165b20b4c746174471d8f5a86183af8bfce55"
        ],
        [
            "rewrite Z.mul_comm.",
            "VernacExtend",
            "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
        ],
        [
            "apply Z.add_diag.",
            "VernacExtend",
            "e7920623909944b2d9ec6a0398d4c3434f18f405"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_eq_mult n m : m = 0 -> m * n = 0.",
            "VernacStartTheoremProof",
            "dc92c046fb579594b375e59132ab3cbadabf7d1c"
        ],
        [
            "intros; now subst.",
            "VernacExtend",
            "f75b5a2d518b7b1521370155178b4b62db2fad48"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "eq_dec",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "decide equality; apply Pos.eq_dec.",
                        "VernacExtend",
                        "1c35153f9630743a404edcab7b01de6c57c68717"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "pos_sub_spec",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "revert q.",
                        "VernacExtend",
                        "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
                    ]
                },
                {
                    "command": [
                        "induction p; destruct q; simpl; trivial; rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; simpl; case Pos.compare_spec; intros; simpl; trivial; (now rewrite Pos.sub_xI_xI) || (now rewrite Pos.sub_xO_xO) || (now rewrite Pos.sub_xO_xI) || (now rewrite Pos.sub_xI_xO) || subst; unfold Pos.sub; simpl; now rewrite Pos.sub_mask_diag.",
                        "VernacExtend",
                        "894c09554bd57271853fe580c0d4c88a42fe76a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_sub_discr",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "rewrite pos_sub_spec.",
                        "VernacExtend",
                        "20096a1d75d20c18ab3e44d516bd00054d12ee1d"
                    ]
                },
                {
                    "command": [
                        "case Pos.compare_spec; auto; intros; now rewrite Pos.add_comm, Pos.sub_add.",
                        "VernacExtend",
                        "d4e203ac250599ed30fdff900c4ceeb3fedd05d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_sub_diag",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "now rewrite pos_sub_spec, Pos.compare_refl.",
                        "VernacExtend",
                        "2d3df7b500548c956206b679f24075e94a9ed71a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_sub_lt",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "now rewrite pos_sub_spec, H.",
                        "VernacExtend",
                        "4fb8accc67f793acb0d2918f690e3600ed016907"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_sub_gt",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "now rewrite pos_sub_spec, Pos.compare_antisym, H.",
                        "VernacExtend",
                        "699e85519f0db89f087d70326d0e5ec631db2786"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_sub_opp",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "revert q; induction p; destruct q; simpl; trivial; rewrite <- IHp; now destruct pos_sub.",
                        "VernacExtend",
                        "152b22bc32b9a2dbc0d5729f4112789e651bc1b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_0_r",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "now destruct n.",
                        "VernacExtend",
                        "6e836d168cd359f41ad4e992ef54068680a38db2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_0_r",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "now destruct n.",
                        "VernacExtend",
                        "6e836d168cd359f41ad4e992ef54068680a38db2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_1_l",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "now destruct n.",
                        "VernacExtend",
                        "6e836d168cd359f41ad4e992ef54068680a38db2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_comm",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "destruct n, m; simpl; trivial; now rewrite Pos.add_comm.",
                        "VernacExtend",
                        "674dc56a78b1bafcfc1b607829c8235125f25f0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_add_distr",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "destruct n, m; simpl; trivial using pos_sub_opp.",
                        "VernacExtend",
                        "3ed518cb1cdca2f0a85dba8ca259034440cf762d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_inj",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "destruct n, m; simpl; intros H; destr_eq H; now f_equal.",
                        "VernacExtend",
                        "f30236312ade542e6153658b3abbb28f8dad87e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_sub_add",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite !pos_sub_spec.",
                        "VernacExtend",
                        "979147f4279af1267505b6d2b22de8f47b5d7c0c"
                    ]
                },
                {
                    "command": [
                        "case (Pos.compare_spec q r); intros E0.",
                        "VernacExtend",
                        "807ede93e347c31661ff5bf4688a8b110b17c88d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "assert (H := Pos.lt_add_r r p).",
                        "VernacExtend",
                        "d5e6f7b6b01abea1fe5bd418c0b689d25e7ffaff"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.add_comm in H.",
                        "VernacExtend",
                        "f5dda2bb36dc00db799cd8d9cee02dc520f8a898"
                    ]
                },
                {
                    "command": [
                        "apply Pos.lt_gt in H.",
                        "VernacExtend",
                        "ef5d0633001161dbf235e09f7999a250098136c4"
                    ]
                },
                {
                    "command": [
                        "now rewrite H, Pos.add_sub.",
                        "VernacExtend",
                        "f1be79f77d9c60107b1370adda0156acb86e212b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite pos_sub_spec.",
                        "VernacExtend",
                        "20096a1d75d20c18ab3e44d516bd00054d12ee1d"
                    ]
                },
                {
                    "command": [
                        "assert (Hr : (r = (r-q)+q)%positive) by (now rewrite Pos.sub_add).",
                        "VernacExtend",
                        "63b19494ea538654d2b10c4b0555b7349120e927"
                    ]
                },
                {
                    "command": [
                        "rewrite Hr at 1.",
                        "VernacExtend",
                        "530297dd737c0822e98f1a2efbd0a7dbbcf7b184"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.add_compare_mono_r.",
                        "VernacExtend",
                        "a39bf84cd9c3fd182ae07d2ee90575560f00a37b"
                    ]
                },
                {
                    "command": [
                        "case Pos.compare_spec; intros E1; trivial; f_equal.",
                        "VernacExtend",
                        "a49447f52161aaf325821d39d46c02a81bb7d56e"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.add_comm.",
                        "VernacExtend",
                        "4f794b32aa99f040ef36918dd1a14806df118107"
                    ]
                },
                {
                    "command": [
                        "apply Pos.sub_add_distr.",
                        "VernacExtend",
                        "cedc33a70051945cf109f5384ea82086c3996b73"
                    ]
                },
                {
                    "command": [
                        "rewrite Hr, Pos.add_comm.",
                        "VernacExtend",
                        "18c53fc50336f48afaa3ef44b874a792bb9ecb86"
                    ]
                },
                {
                    "command": [
                        "now apply Pos.add_lt_mono_r.",
                        "VernacExtend",
                        "7b90588a37d29cd9a60cdea27a5e93bcecb498cf"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Pos.sub_sub_distr; trivial.",
                        "VernacExtend",
                        "5f693a8ff7c1486f23777acbbde7fd4d401ae249"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (LT : (r < p + q)%positive).",
                        "VernacExtend",
                        "0120c25a56d1f5e2b982bc63639cf1f2fed98957"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Pos.lt_trans with q; trivial.",
                        "VernacExtend",
                        "f7861884a803b5f850c61af65538c0c8ea5176f2"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.add_comm.",
                        "VernacExtend",
                        "4f794b32aa99f040ef36918dd1a14806df118107"
                    ]
                },
                {
                    "command": [
                        "apply Pos.lt_add_r.",
                        "VernacExtend",
                        "aa67129d81748e0ba998a2baefa6f8b35af5b4bf"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply Pos.lt_gt in LT.",
                        "VernacExtend",
                        "69cb8a60b08aa2dc5880b9de5104d429f33422e1"
                    ]
                },
                {
                    "command": [
                        "rewrite LT.",
                        "VernacExtend",
                        "1e9bb7c54ac6112eec5bd8295fa65d6138e23da6"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "now apply Pos.add_sub_assoc.",
                        "VernacExtend",
                        "f27fc9c48e7fb8fa3d05387602bde8dc14bd54a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_assoc_pos",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "destruct n as [|n|n], m as [|m|m]; simpl; trivial.",
                        "VernacExtend",
                        "d674b8c339a4bcd4ccc53342456c2106084756d2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite Pos.add_assoc.",
                        "VernacExtend",
                        "345827af541c94d0f615cdb2bea893dd9f6e1dc6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply pos_sub_add.",
                        "VernacExtend",
                        "bf654a4eb9e64e7340daebe5d898b340dc7fc359"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply add_0_r.",
                        "VernacExtend",
                        "63230604730b5822b5d3bddf769d188a5a547393"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- pos_sub_add, add_comm, <- pos_sub_add, Pos.add_comm.",
                        "VernacExtend",
                        "6735da12a2610d1b93d754343d990d7e83b03e86"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply opp_inj.",
                        "VernacExtend",
                        "d0438731c868fda82f59a5e64e65cc606eedec69"
                    ]
                },
                {
                    "command": [
                        "rewrite !opp_add_distr, !pos_sub_opp.",
                        "VernacExtend",
                        "4cbf518dcab0fadf431d6afd3b84ba9eec8d46e8"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm, Pos.add_comm.",
                        "VernacExtend",
                        "d3360730d163c6f923dc608be3f2962701c16590"
                    ]
                },
                {
                    "command": [
                        "apply pos_sub_add.",
                        "VernacExtend",
                        "bf654a4eb9e64e7340daebe5d898b340dc7fc359"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_assoc",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply add_assoc_pos.",
                        "VernacExtend",
                        "c8555a4a664873385d6b05327ab9fa11b9c91453"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply opp_inj.",
                        "VernacExtend",
                        "d0438731c868fda82f59a5e64e65cc606eedec69"
                    ]
                },
                {
                    "command": [
                        "rewrite !opp_add_distr.",
                        "VernacExtend",
                        "939536d3c0266c61838c9481e591052b85ee24d1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply add_assoc_pos.",
                        "VernacExtend",
                        "c8555a4a664873385d6b05327ab9fa11b9c91453"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_opp_diag_r",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "destruct n; simpl; trivial; now rewrite pos_sub_diag.",
                        "VernacExtend",
                        "98c4c2ec471b4b2a39a3efd7b75a918fad2f8905"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_opp_r",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "now destruct n, m.",
                        "VernacExtend",
                        "6ac2678c514a0e2c81a4ad011fc3e315a2da5682"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_add_distr_pos",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "destruct n as [|n|n], m as [|m|m]; simpl; trivial.",
                        "VernacExtend",
                        "d674b8c339a4bcd4ccc53342456c2106084756d2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite Pos.mul_add_distr_r.",
                        "VernacExtend",
                        "820141900622799b809e4b62956cc7ee1302c8f3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite ?pos_sub_spec, ?Pos.mul_compare_mono_r; case Pos.compare_spec; simpl; trivial; intros; now rewrite Pos.mul_sub_distr_r.",
                        "VernacExtend",
                        "8c0cdc080f88a78d8a7eed05dc464d29caaa0c81"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite ?pos_sub_spec, ?Pos.mul_compare_mono_r; case Pos.compare_spec; simpl; trivial; intros; now rewrite Pos.mul_sub_distr_r.",
                        "VernacExtend",
                        "8c0cdc080f88a78d8a7eed05dc464d29caaa0c81"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite Pos.mul_add_distr_r.",
                        "VernacExtend",
                        "820141900622799b809e4b62956cc7ee1302c8f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_add_distr_r",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "destruct p as [|p|p].",
                        "VernacExtend",
                        "6bc855890b6517e32987d0b5ba55fca726352075"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite !mul_0_r.",
                        "VernacExtend",
                        "62c411783ab207a150093f17b453afd4dba39815"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply mul_add_distr_pos.",
                        "VernacExtend",
                        "3b0236df72b9065e4a00430ab6241e0c76f70f3c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply opp_inj.",
                        "VernacExtend",
                        "d0438731c868fda82f59a5e64e65cc606eedec69"
                    ]
                },
                {
                    "command": [
                        "rewrite opp_add_distr, <- !mul_opp_r.",
                        "VernacExtend",
                        "94b3d18a29cc3ba5f0d3b4493717c0899a24e4cc"
                    ]
                },
                {
                    "command": [
                        "apply mul_add_distr_pos.",
                        "VernacExtend",
                        "3b0236df72b9065e4a00430ab6241e0c76f70f3c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "one_succ",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "two_succ",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_0_l",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "now destruct n.",
                        "VernacExtend",
                        "6e836d168cd359f41ad4e992ef54068680a38db2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_succ_l",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "unfold succ.",
                        "VernacExtend",
                        "8d37bbdf17f277d3b9e0a1bfcd91c6eb3f09e939"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2 (add_comm _ 1), add_assoc.",
                        "VernacExtend",
                        "50610e0fd0ff7d1a95ababf81dedc662462f7a1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_0",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_succ",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "unfold succ, pred.",
                        "VernacExtend",
                        "11629b2621ebd106379f8e19a678325a67c5fb41"
                    ]
                },
                {
                    "command": [
                        "apply opp_add_distr.",
                        "VernacExtend",
                        "ce8217cdfe19e7ab7780aaafbc3a1f2ee8b796de"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_pred",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "unfold succ, pred.",
                        "VernacExtend",
                        "11629b2621ebd106379f8e19a678325a67c5fb41"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- add_assoc, add_opp_diag_r, add_0_r.",
                        "VernacExtend",
                        "14ed05a000e6cc3ab5eedeea681e19a6f5f35671"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_succ",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "unfold succ, pred.",
                        "VernacExtend",
                        "11629b2621ebd106379f8e19a678325a67c5fb41"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- add_assoc, add_opp_diag_r, add_0_r.",
                        "VernacExtend",
                        "14ed05a000e6cc3ab5eedeea681e19a6f5f35671"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_0_r",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "apply add_0_r.",
                        "VernacExtend",
                        "63230604730b5822b5d3bddf769d188a5a547393"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_succ_r",
            "line_nb": 210,
            "steps": [
                {
                    "command": [
                        "unfold sub, succ, pred.",
                        "VernacExtend",
                        "499833c1d144c55dca5d16ec85e432958ae21f8f"
                    ]
                },
                {
                    "command": [
                        "now rewrite opp_add_distr, add_assoc.",
                        "VernacExtend",
                        "1d7cb7a515b5a50bcfa923c19901c3e81879bcbf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_0_l",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_succ_l",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "unfold succ.",
                        "VernacExtend",
                        "8d37bbdf17f277d3b9e0a1bfcd91c6eb3f09e939"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_add_distr_r, mul_1_l.",
                        "VernacExtend",
                        "248404c6a18494fc65fc6c27b22f6509c4efacbd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqb_eq",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "destruct n, m; simpl; try (now split); rewrite Pos.eqb_eq; split; (now injection 1) || (intros; now f_equal).",
                        "VernacExtend",
                        "8758b3af267252dddef85aee71372ffa47e24849"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltb_lt",
            "line_nb": 224,
            "steps": [
                {
                    "command": [
                        "unfold ltb, lt.",
                        "VernacExtend",
                        "5c43f5b40fe682aacd161431c57dc1d7e63820e5"
                    ]
                },
                {
                    "command": [
                        "destruct compare; easy'.",
                        "VernacExtend",
                        "9c58ca66031ca52e7ded2a67e5812d35fe76b30c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leb_le",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "unfold leb, le.",
                        "VernacExtend",
                        "691c599dca3e1dc8df9a04f30af6f52e19a455ff"
                    ]
                },
                {
                    "command": [
                        "destruct compare; easy'.",
                        "VernacExtend",
                        "9c58ca66031ca52e7ded2a67e5812d35fe76b30c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_eq_iff",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "destruct n, m; simpl; rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; split; congruence.",
                        "VernacExtend",
                        "c31211b3641bbe3a642a5c12dbc0ea8ac8be8748"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_sub",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "destruct n as [|n|n], m as [|m|m]; simpl; trivial; rewrite <- ? Pos.compare_antisym, ?pos_sub_spec; case Pos.compare_spec; trivial.",
                        "VernacExtend",
                        "a3a33b65bd6d3a4ed0435a01a11f39a1bc3a95ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_antisym",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "destruct n, m; simpl; trivial; now rewrite <- ?Pos.compare_antisym.",
                        "VernacExtend",
                        "46039212a3c003c0840bbc425633cf33b731dcf7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_lt_iff",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_le_iff",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_succ_r",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "unfold lt, le.",
                        "VernacExtend",
                        "f599fabfc187f3f20300529b934c5737cd55a245"
                    ]
                },
                {
                    "command": [
                        "rewrite compare_sub, sub_succ_r.",
                        "VernacExtend",
                        "1ddada47699833a4fc36a5b022f41ed5840b5169"
                    ]
                },
                {
                    "command": [
                        "rewrite (compare_sub n m).",
                        "VernacExtend",
                        "4ff28122ff6bd351c87542199d531ce7d83be5db"
                    ]
                },
                {
                    "command": [
                        "destruct (n-m) as [|[ | | ]|]; easy'.",
                        "VernacExtend",
                        "fd59a1d7194da42cf6679f5922666bc10284e1db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_l",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "unfold le, max.",
                        "VernacExtend",
                        "eceaaee01291732e1b36a2f2016a8ae8974ef88e"
                    ]
                },
                {
                    "command": [
                        "rewrite (compare_antisym n m).",
                        "VernacExtend",
                        "c989418e577744a618cc859473080a16d0efc2ad"
                    ]
                },
                {
                    "command": [
                        "case compare; intuition.",
                        "VernacExtend",
                        "42c4b62ffca386494d0d76921940ddc80de5b6f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_r",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "unfold le, max.",
                        "VernacExtend",
                        "eceaaee01291732e1b36a2f2016a8ae8974ef88e"
                    ]
                },
                {
                    "command": [
                        "case compare_spec; intuition.",
                        "VernacExtend",
                        "585d6b45f0ad4a887ee7ae08bdb00cf4f5af7318"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_l",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "unfold le, min.",
                        "VernacExtend",
                        "4a32463b97d6de13a2947e315ac7915d1f1c294d"
                    ]
                },
                {
                    "command": [
                        "case compare_spec; intuition.",
                        "VernacExtend",
                        "585d6b45f0ad4a887ee7ae08bdb00cf4f5af7318"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_r",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "unfold le, min.",
                        "VernacExtend",
                        "4a32463b97d6de13a2947e315ac7915d1f1c294d"
                    ]
                },
                {
                    "command": [
                        "rewrite (compare_antisym n m).",
                        "VernacExtend",
                        "c989418e577744a618cc859473080a16d0efc2ad"
                    ]
                },
                {
                    "command": [
                        "case compare_spec; intuition.",
                        "VernacExtend",
                        "585d6b45f0ad4a887ee7ae08bdb00cf4f5af7318"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "peano_ind",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "intros H0 Hs Hp z; destruct z.",
                        "VernacExtend",
                        "b298d8305903f65e3cce461f348a5ab936b8c636"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "induction p using Pos.peano_ind.",
                        "VernacExtend",
                        "73c49fbd432adb07f14ae63b2c315ed4cf2ca757"
                    ]
                },
                {
                    "command": [
                        "now apply (Hs 0).",
                        "VernacExtend",
                        "9baa2ae295e5517a8d95fce17ea0da91e1253865"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos.add_1_r.",
                        "VernacExtend",
                        "451e2b23b2fd1da0238c3eaeaa36c27a56c2b53f"
                    ]
                },
                {
                    "command": [
                        "now apply (Hs (pos p)).",
                        "VernacExtend",
                        "c220a04e03f0e84e959d80c70ebda284b650c22f"
                    ]
                },
                {
                    "command": [
                        "induction p using Pos.peano_ind.",
                        "VernacExtend",
                        "73c49fbd432adb07f14ae63b2c315ed4cf2ca757"
                    ]
                },
                {
                    "command": [
                        "now apply (Hp 0).",
                        "VernacExtend",
                        "14f91da1cff55079864bc554f1ff4ab31de3e753"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos.add_1_r.",
                        "VernacExtend",
                        "451e2b23b2fd1da0238c3eaeaa36c27a56c2b53f"
                    ]
                },
                {
                    "command": [
                        "now apply (Hp (neg p)).",
                        "VernacExtend",
                        "cf6ede4d340f9cb15b0671f83c3af819fca47bf7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bi_induction",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "intros _ H0 Hs.",
                        "VernacExtend",
                        "247acfc57f8f755f600bde1a0141621fc821e1f2"
                    ]
                },
                {
                    "command": [
                        "induction z using peano_ind.",
                        "VernacExtend",
                        "140f73268ff80d800d85e70bf22c2f8a4f30533e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "now apply -> Hs.",
                        "VernacExtend",
                        "cbfb9bd1b63d4b56dc724437ba8a241a50d7c23c"
                    ]
                },
                {
                    "command": [
                        "apply Hs.",
                        "VernacExtend",
                        "26038359dfe6b0cb344439243c160e8be398bca9"
                    ]
                },
                {
                    "command": [
                        "now rewrite succ_pred.",
                        "VernacExtend",
                        "08bd893d4e8646c910ce5b3a5a43c1226e45bb1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abs_eq",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "destruct n; trivial.",
                        "VernacExtend",
                        "075df2df6f50c3b92752b2e357bd92e8caf75e9c"
                    ]
                },
                {
                    "command": [
                        "now destruct 1.",
                        "VernacExtend",
                        "599cf8488dce43cedbb3491ca78a34441bf2a1bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abs_neq",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "destruct n; trivial.",
                        "VernacExtend",
                        "075df2df6f50c3b92752b2e357bd92e8caf75e9c"
                    ]
                },
                {
                    "command": [
                        "now destruct 1.",
                        "VernacExtend",
                        "599cf8488dce43cedbb3491ca78a34441bf2a1bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgn_null",
            "line_nb": 301,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now subst.",
                        "VernacExtend",
                        "89cc250d34dafb32c3653b2706abafd433151f2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgn_pos",
            "line_nb": 305,
            "steps": [
                {
                    "command": [
                        "now destruct n.",
                        "VernacExtend",
                        "6e836d168cd359f41ad4e992ef54068680a38db2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sgn_neg",
            "line_nb": 308,
            "steps": [
                {
                    "command": [
                        "now destruct n.",
                        "VernacExtend",
                        "6e836d168cd359f41ad4e992ef54068680a38db2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_0_r",
            "line_nb": 311,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_succ_r",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "destruct m as [|m|m]; (now destruct 1) || (intros _); simpl; trivial.",
                        "VernacExtend",
                        "68603c2162557db2bef53c517b532678b87559dc"
                    ]
                },
                {
                    "command": [
                        "unfold pow_pos.",
                        "VernacExtend",
                        "c98cc6897b7f24758d34f1bccf73e81371b99293"
                    ]
                },
                {
                    "command": [
                        "now rewrite Pos.add_comm, Pos.iter_add.",
                        "VernacExtend",
                        "6a1ae2df3a82907ca0c71dd2dd5fc826dde156dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_neg_r",
            "line_nb": 319,
            "steps": [
                {
                    "command": [
                        "now destruct m.",
                        "VernacExtend",
                        "8eb99d252d0c586d6342e58a659c3b7b773e9af1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_pos_fold",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_spec",
            "line_nb": 325,
            "steps": [
                {
                    "command": [
                        "destruct n; trivial; simpl; f_equal; apply Pos.square_spec.",
                        "VernacExtend",
                        "84338f273d1abd2261e08202b23a1aa440a230f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtrem_spec",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "now repeat split.",
                        "VernacExtend",
                        "c72cd3622e1d20acc435e373d27c5276d1d324dc"
                    ]
                },
                {
                    "command": [
                        "generalize (Pos.sqrtrem_spec p).",
                        "VernacExtend",
                        "31fe5cf2685c45379566ba25ef6ec179c9212544"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct 1; simpl; subst; now repeat split.",
                        "VernacExtend",
                        "4d17767aee94af2a890eee745ee77830839a703e"
                    ]
                },
                {
                    "command": [
                        "now destruct 1.",
                        "VernacExtend",
                        "599cf8488dce43cedbb3491ca78a34441bf2a1bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_spec",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "now repeat split.",
                        "VernacExtend",
                        "c72cd3622e1d20acc435e373d27c5276d1d324dc"
                    ]
                },
                {
                    "command": [
                        "unfold sqrt.",
                        "VernacExtend",
                        "71ef64092f0003bcdade22760b25585d0190003b"
                    ]
                },
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "simpl succ.",
                        "VernacExtend",
                        "45b3c0a8ed09673034d21f0462d59d72cbe3b362"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.add_1_r.",
                        "VernacExtend",
                        "55a2bed981075a8e459b652bca988f7e054bee2e"
                    ]
                },
                {
                    "command": [
                        "apply (Pos.sqrt_spec p).",
                        "VernacExtend",
                        "fd422f013872dafb0f78b6293d7c546264973403"
                    ]
                },
                {
                    "command": [
                        "now destruct 1.",
                        "VernacExtend",
                        "599cf8488dce43cedbb3491ca78a34441bf2a1bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_neg",
            "line_nb": 346,
            "steps": [
                {
                    "command": [
                        "now destruct n.",
                        "VernacExtend",
                        "6e836d168cd359f41ad4e992ef54068680a38db2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtrem_sqrt",
            "line_nb": 349,
            "steps": [
                {
                    "command": [
                        "destruct n; try reflexivity.",
                        "VernacExtend",
                        "1a04264fdd355bcc55faa8364949dfecda544027"
                    ]
                },
                {
                    "command": [
                        "unfold sqrtrem, sqrt, Pos.sqrt.",
                        "VernacExtend",
                        "ce8382892108523789726c43c4bc8f21fc4ef5ad"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.sqrtrem p) as (s,r).",
                        "VernacExtend",
                        "0060a832636e7fe3f614d149f897fe80cae120c3"
                    ]
                },
                {
                    "command": [
                        "now destruct r.",
                        "VernacExtend",
                        "4b07c9af4d642cd5dcd819158be0afcc17200721"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "log2_spec",
            "line_nb": 355,
            "steps": [
                {
                    "command": [
                        "assert (Pow : forall p q, pos (p^q) = (pos p)^(pos q)).",
                        "VernacExtend",
                        "9fec89f0396b0421bd33d2ba70757fcc5e9343bd"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now apply Pos.iter_swap_gen.",
                        "VernacExtend",
                        "e65a942f0735f2a56724cf83d5ee925c620aaa5e"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct n as [|[p|p|]|]; intros Hn; split; try easy; unfold log2; simpl succ; rewrite ?Pos.add_1_r, <- Pow.",
                        "VernacExtend",
                        "7fcbdbf93b2178b36e76ab498b8b4c70296c360e"
                    ]
                },
                {
                    "command": [
                        "change (2^Pos.size p <= Pos.succ (p~0))%positive.",
                        "VernacExtend",
                        "98756d36e1095c71e45887ba7f2a969fd03aef32"
                    ]
                },
                {
                    "command": [
                        "apply Pos.lt_le_incl, Pos.lt_succ_r, Pos.size_le.",
                        "VernacExtend",
                        "73020ea874916a409b28a5dd31596612c493b803"
                    ]
                },
                {
                    "command": [
                        "apply Pos.size_gt.",
                        "VernacExtend",
                        "b97f5b72a00f99fd89400be2a2faa0e622574450"
                    ]
                },
                {
                    "command": [
                        "apply Pos.size_le.",
                        "VernacExtend",
                        "b1bdf0218ddbdee821da4c457a354487bc44b131"
                    ]
                },
                {
                    "command": [
                        "apply Pos.size_gt.",
                        "VernacExtend",
                        "b97f5b72a00f99fd89400be2a2faa0e622574450"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "log2_nonpos",
            "line_nb": 368,
            "steps": [
                {
                    "command": [
                        "destruct n as [|p|p]; trivial; now destruct 1.",
                        "VernacExtend",
                        "d884fc2d7d4ff72c9d64695e7e57c0bef799fe88"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_spec",
            "line_nb": 371,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exists (div2 n).",
                        "VernacExtend",
                        "b5cfec5307a526f6887fdf23863d29bbd444e16e"
                    ]
                },
                {
                    "command": [
                        "now destruct n as [|[ | | ]|[ | | ]].",
                        "VernacExtend",
                        "d13622cd0a46d4f5f3ef1d6f899a0442b63d2287"
                    ]
                },
                {
                    "command": [
                        "intros (m,->).",
                        "VernacExtend",
                        "49b63a0039385f515054a1a36a4b53c59a492c42"
                    ]
                },
                {
                    "command": [
                        "now destruct m.",
                        "VernacExtend",
                        "8eb99d252d0c586d6342e58a659c3b7b773e9af1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_spec",
            "line_nb": 378,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exists (div2 n).",
                        "VernacExtend",
                        "b5cfec5307a526f6887fdf23863d29bbd444e16e"
                    ]
                },
                {
                    "command": [
                        "destruct n as [|[ | | ]|[ | | ]]; simpl; try easy.",
                        "VernacExtend",
                        "9ba03d381b9409c8aec7e9fb8439a5e9888ac588"
                    ]
                },
                {
                    "command": [
                        "now rewrite Pos.pred_double_succ.",
                        "VernacExtend",
                        "f78894b760c657d69e9c080b99477a14193a6f4e"
                    ]
                },
                {
                    "command": [
                        "intros (m,->).",
                        "VernacExtend",
                        "49b63a0039385f515054a1a36a4b53c59a492c42"
                    ]
                },
                {
                    "command": [
                        "now destruct m as [|[ | | ]|[ | | ]].",
                        "VernacExtend",
                        "2672cbdc44bc6dbab941b6c8eb2c52023d50287f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "double_spec",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_double_spec",
            "line_nb": 389,
            "steps": [
                {
                    "command": [
                        "now destruct n.",
                        "VernacExtend",
                        "6e836d168cd359f41ad4e992ef54068680a38db2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_double_spec",
            "line_nb": 392,
            "steps": [
                {
                    "command": [
                        "now destruct n.",
                        "VernacExtend",
                        "6e836d168cd359f41ad4e992ef54068680a38db2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_div_eucl_eq",
            "line_nb": 395,
            "steps": [
                {
                    "command": [
                        "intros Hb.",
                        "VernacExtend",
                        "bf28ce675f0c35f7a6ee80ebcc4714ae6cf11f4b"
                    ]
                },
                {
                    "command": [
                        "induction a; unfold pos_div_eucl; fold pos_div_eucl.",
                        "VernacExtend",
                        "7500db1c556f9989ffd5ebd4734e66736ec18c26"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct pos_div_eucl as (q,r).",
                        "VernacExtend",
                        "2464332679655b30ccaa9ca70a11827cf2052ade"
                    ]
                },
                {
                    "command": [
                        "change (pos a~1) with (2*(pos a)+1).",
                        "VernacExtend",
                        "57bb6e33a556af3cd12250bc385d1be60d8296d4"
                    ]
                },
                {
                    "command": [
                        "rewrite IHa, mul_add_distr_l, mul_assoc.",
                        "VernacExtend",
                        "9643f7505fa867a3d05fa983bd95284862db29cc"
                    ]
                },
                {
                    "command": [
                        "destruct ltb.",
                        "VernacExtend",
                        "35f88487bcaf32621a0e86c80d8771070b5da4f3"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_assoc.",
                        "VernacExtend",
                        "7cd8e68167a5197c8a6d5ec3756a05b1af6664b6"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_add_distr_r, mul_1_l, <- !add_assoc.",
                        "VernacExtend",
                        "1012800af09ef86d7732f16669f54fd7fcadd1f6"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "now rewrite (add_comm _ (-b)), add_assoc, add_opp_diag_r.",
                        "VernacExtend",
                        "24742ed3e703d84823b057503f5ef7607e19729c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct pos_div_eucl as (q,r).",
                        "VernacExtend",
                        "2464332679655b30ccaa9ca70a11827cf2052ade"
                    ]
                },
                {
                    "command": [
                        "change (pos a~0) with (2*pos a).",
                        "VernacExtend",
                        "cd51610cd874b90ce23d2b9809d95a37918d90f6"
                    ]
                },
                {
                    "command": [
                        "rewrite IHa, mul_add_distr_l, mul_assoc.",
                        "VernacExtend",
                        "9643f7505fa867a3d05fa983bd95284862db29cc"
                    ]
                },
                {
                    "command": [
                        "destruct ltb.",
                        "VernacExtend",
                        "35f88487bcaf32621a0e86c80d8771070b5da4f3"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_add_distr_r, mul_1_l, <- !add_assoc.",
                        "VernacExtend",
                        "1012800af09ef86d7732f16669f54fd7fcadd1f6"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "now rewrite (add_comm _ (-b)), add_assoc, add_opp_diag_r.",
                        "VernacExtend",
                        "24742ed3e703d84823b057503f5ef7607e19729c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case leb_spec; trivial.",
                        "VernacExtend",
                        "4c96fd99efe640e857c9405c946dbae67513cfb5"
                    ]
                },
                {
                    "command": [
                        "intros Hb'.",
                        "VernacExtend",
                        "7a0c3689b6e1b8cc3db065fb1e7a6033856c65ed"
                    ]
                },
                {
                    "command": [
                        "destruct b as [|b|b]; try easy; clear Hb.",
                        "VernacExtend",
                        "b371f7a9a88992129f11b274dc7e38d7b87e0f7c"
                    ]
                },
                {
                    "command": [
                        "replace b with 1%positive; trivial.",
                        "VernacExtend",
                        "70b4808a64fecada71d8aca9efbd34d550695c5f"
                    ]
                },
                {
                    "command": [
                        "apply Pos.le_antisym.",
                        "VernacExtend",
                        "99674f32cb4614151eaa8d95d2053b4eb532775f"
                    ]
                },
                {
                    "command": [
                        "apply Pos.le_1_l.",
                        "VernacExtend",
                        "e1d889c81d14ec2e523a8aa152b24ebfdce38ca7"
                    ]
                },
                {
                    "command": [
                        "now apply Pos.lt_succ_r.",
                        "VernacExtend",
                        "da0aa6b6cdadc9c49985a7195f29ec1508b5b2c4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div_eucl_eq",
            "line_nb": 427,
            "steps": [
                {
                    "command": [
                        "destruct a as [ |a|a], b as [ |b|b]; unfold div_eucl; trivial; (now destruct 1) || intros _; generalize (pos_div_eucl_eq a (pos b) Logic.eq_refl); destruct pos_div_eucl as (q,r); rewrite mul_comm.",
                        "VernacExtend",
                        "3bc80dce0b43dfd3008166ed6faaaefbff340994"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros ->.",
                        "VernacExtend",
                        "e8af3665779d92274caf81949b4a0e6232d89ea7"
                    ]
                },
                {
                    "command": [
                        "destruct r as [ |r|r]; rewrite <- !mul_opp_comm; trivial; rewrite mul_add_distr_l, mul_1_r, <- add_assoc; f_equal; now rewrite add_assoc, add_opp_diag_r.",
                        "VernacExtend",
                        "b892527cc76c5a8ac7ff7e6b845d644beae7f546"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (neg a) with (- pos a).",
                        "VernacExtend",
                        "5cc94a2073e509b2ed8a65a26fc970e9dbfd3ee3"
                    ]
                },
                {
                    "command": [
                        "intros ->.",
                        "VernacExtend",
                        "e8af3665779d92274caf81949b4a0e6232d89ea7"
                    ]
                },
                {
                    "command": [
                        "rewrite (opp_add_distr _ r), <- mul_opp_r.",
                        "VernacExtend",
                        "8afd8a50e0ef5ccd0a074d918cdfbca8907816f0"
                    ]
                },
                {
                    "command": [
                        "destruct r as [ |r|r]; trivial; rewrite opp_add_distr, mul_add_distr_l, <- add_assoc; f_equal; unfold sub; now rewrite add_assoc, mul_opp_r, mul_1_r, add_opp_diag_l.",
                        "VernacExtend",
                        "eaba3f0af9bdf340738b35be9a04c2179820c6fd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (neg a) with (- pos a).",
                        "VernacExtend",
                        "5cc94a2073e509b2ed8a65a26fc970e9dbfd3ee3"
                    ]
                },
                {
                    "command": [
                        "intros ->.",
                        "VernacExtend",
                        "e8af3665779d92274caf81949b4a0e6232d89ea7"
                    ]
                },
                {
                    "command": [
                        "now rewrite opp_add_distr, <- mul_opp_l.",
                        "VernacExtend",
                        "2d6ce5c11b5c1a1cba08e515b7e8950fe16c22b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div_mod",
            "line_nb": 444,
            "steps": [
                {
                    "command": [
                        "intros Hb.",
                        "VernacExtend",
                        "bf28ce675f0c35f7a6ee80ebcc4714ae6cf11f4b"
                    ]
                },
                {
                    "command": [
                        "generalize (div_eucl_eq a b Hb).",
                        "VernacExtend",
                        "79b2d0b940219cf37a1c9b02c771f5bc588b989c"
                    ]
                },
                {
                    "command": [
                        "unfold div, modulo.",
                        "VernacExtend",
                        "1ac46ef173dccff0c5c730852b97570f6afc4532"
                    ]
                },
                {
                    "command": [
                        "now destruct div_eucl.",
                        "VernacExtend",
                        "847b3c5d35a895ad0db02a7419c01bd3ed2c3567"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_div_eucl_bound",
            "line_nb": 450,
            "steps": [
                {
                    "command": [
                        "assert (AUX : forall m p, m < pos (p~0) -> m - pos p < pos p).",
                        "VernacExtend",
                        "92c22c14f9907c012fb3be27d0dca5d603a13479"
                    ]
                },
                {
                    "command": [
                        "intros m p.",
                        "VernacExtend",
                        "df8b8fbb91e426b6d468d9756f62f40b695992ac"
                    ]
                },
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "rewrite (compare_sub m), (compare_sub _ (pos _)).",
                        "VernacExtend",
                        "ef70af28163055e6ced4fd593c4bffc9e624bcff"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_assoc.",
                        "VernacExtend",
                        "c34a88538a6a595366810d8d189307fbbf983edd"
                    ]
                },
                {
                    "command": [
                        "simpl opp; simpl (neg _ + _).",
                        "VernacExtend",
                        "d6e65ff53c0b7d9e7c4a5f00d3059be39355f8a0"
                    ]
                },
                {
                    "command": [
                        "now rewrite Pos.add_diag.",
                        "VernacExtend",
                        "19255c27f11a9d054fdb1f8fd3a45195549f1ec1"
                    ]
                },
                {
                    "command": [
                        "intros Hb.",
                        "VernacExtend",
                        "bf28ce675f0c35f7a6ee80ebcc4714ae6cf11f4b"
                    ]
                },
                {
                    "command": [
                        "destruct b as [|b|b]; discriminate Hb || clear Hb.",
                        "VernacExtend",
                        "aa2c9e5b8f83d4483e230b54061c6a85cf26c0cc"
                    ]
                },
                {
                    "command": [
                        "induction a; unfold pos_div_eucl; fold pos_div_eucl.",
                        "VernacExtend",
                        "7500db1c556f9989ffd5ebd4734e66736ec18c26"
                    ]
                },
                {
                    "command": [
                        "destruct pos_div_eucl as (q,r).",
                        "VernacExtend",
                        "2464332679655b30ccaa9ca70a11827cf2052ade"
                    ]
                },
                {
                    "command": [
                        "simpl in IHa; destruct IHa as (Hr,Hr').",
                        "VernacExtend",
                        "714379db5e620b204d82cc1f7cb18eaa1cb6e2c1"
                    ]
                },
                {
                    "command": [
                        "case ltb_spec; intros H; unfold snd.",
                        "VernacExtend",
                        "b150b02ce056632322964db70d1d2b6e825e9127"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "now destruct r.",
                        "VernacExtend",
                        "4b07c9af4d642cd5dcd819158be0afcc17200721"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold le.",
                        "VernacExtend",
                        "4dbc0b49762d44208e0577d0877ddec914c49a1a"
                    ]
                },
                {
                    "command": [
                        "now rewrite compare_antisym, <- compare_sub, <- compare_antisym.",
                        "VernacExtend",
                        "bb85441c26469a66b2d6812a1900c246e7194938"
                    ]
                },
                {
                    "command": [
                        "apply AUX.",
                        "VernacExtend",
                        "acd0f751560d138992e4fed69eee798546717221"
                    ]
                },
                {
                    "command": [
                        "rewrite <- succ_double_spec.",
                        "VernacExtend",
                        "28d9261bc34194b01b6ffc0ed420157348177e74"
                    ]
                },
                {
                    "command": [
                        "destruct r; try easy.",
                        "VernacExtend",
                        "d8ebba3b57728a02b938f188a316e574846c558d"
                    ]
                },
                {
                    "command": [
                        "unfold lt in *; simpl in *.",
                        "VernacExtend",
                        "2f6272d406049963a09966da95bf0d424553afcd"
                    ]
                },
                {
                    "command": [
                        "now rewrite Pos.compare_xI_xO, Hr'.",
                        "VernacExtend",
                        "6e9924167ac6dc8fba0d19b46dde977356cd5f8d"
                    ]
                },
                {
                    "command": [
                        "destruct pos_div_eucl as (q,r).",
                        "VernacExtend",
                        "2464332679655b30ccaa9ca70a11827cf2052ade"
                    ]
                },
                {
                    "command": [
                        "simpl in IHa; destruct IHa as (Hr,Hr').",
                        "VernacExtend",
                        "714379db5e620b204d82cc1f7cb18eaa1cb6e2c1"
                    ]
                },
                {
                    "command": [
                        "case ltb_spec; intros H; unfold snd.",
                        "VernacExtend",
                        "b150b02ce056632322964db70d1d2b6e825e9127"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "now destruct r.",
                        "VernacExtend",
                        "4b07c9af4d642cd5dcd819158be0afcc17200721"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold le.",
                        "VernacExtend",
                        "4dbc0b49762d44208e0577d0877ddec914c49a1a"
                    ]
                },
                {
                    "command": [
                        "now rewrite compare_antisym, <- compare_sub, <- compare_antisym.",
                        "VernacExtend",
                        "bb85441c26469a66b2d6812a1900c246e7194938"
                    ]
                },
                {
                    "command": [
                        "apply AUX.",
                        "VernacExtend",
                        "acd0f751560d138992e4fed69eee798546717221"
                    ]
                },
                {
                    "command": [
                        "destruct r; try easy.",
                        "VernacExtend",
                        "d8ebba3b57728a02b938f188a316e574846c558d"
                    ]
                },
                {
                    "command": [
                        "case leb_spec; intros H; simpl; split; try easy.",
                        "VernacExtend",
                        "61761f16ec5b79dfb0717a0e0e60fe9385646cd2"
                    ]
                },
                {
                    "command": [
                        "red; simpl.",
                        "VernacExtend",
                        "713f75622b4bcaa4944fbc549f338fab2a7169b4"
                    ]
                },
                {
                    "command": [
                        "now apply Pos.le_succ_l.",
                        "VernacExtend",
                        "9ee1b26580a36c9aa8df088f297fd0b7d405a02f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod_pos_bound",
            "line_nb": 489,
            "steps": [
                {
                    "command": [
                        "destruct b as [|b|b]; try easy; intros _.",
                        "VernacExtend",
                        "4e096c1180609be1654b52e7f32dca40ceaf326e"
                    ]
                },
                {
                    "command": [
                        "destruct a as [|a|a]; unfold modulo, div_eucl.",
                        "VernacExtend",
                        "65c25c90c7bcb49bb4b89dc2587b817e10ce9ba1"
                    ]
                },
                {
                    "command": [
                        "now split.",
                        "VernacExtend",
                        "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
                    ]
                },
                {
                    "command": [
                        "now apply pos_div_eucl_bound.",
                        "VernacExtend",
                        "ddf166582abcba7cc1977797988bc56988bc5c89"
                    ]
                },
                {
                    "command": [
                        "generalize (pos_div_eucl_bound a (pos b) Logic.eq_refl).",
                        "VernacExtend",
                        "db40bff3b18ac4db9d2b32a785a0832f4e4d3c4e"
                    ]
                },
                {
                    "command": [
                        "destruct pos_div_eucl as (q,r); unfold snd; intros (Hr,Hr').",
                        "VernacExtend",
                        "097c1f50afd26f5c804da26f394d03e4979e1385"
                    ]
                },
                {
                    "command": [
                        "destruct r as [|r|r]; (now destruct Hr) || clear Hr.",
                        "VernacExtend",
                        "1443919d78e2a4fda3137a509beed5f7e5fd9384"
                    ]
                },
                {
                    "command": [
                        "now split.",
                        "VernacExtend",
                        "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold le.",
                        "VernacExtend",
                        "4dbc0b49762d44208e0577d0877ddec914c49a1a"
                    ]
                },
                {
                    "command": [
                        "now rewrite compare_antisym, <- compare_sub, <- compare_antisym, Hr'.",
                        "VernacExtend",
                        "826e596702f8346a55c1384071fd7c1298c18a97"
                    ]
                },
                {
                    "command": [
                        "unfold lt in *; simpl in *.",
                        "VernacExtend",
                        "2f6272d406049963a09966da95bf0d424553afcd"
                    ]
                },
                {
                    "command": [
                        "rewrite pos_sub_gt by trivial.",
                        "VernacExtend",
                        "a5d83e6a459051bb7f721457326a8ec485ba87ac"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now apply Pos.sub_decr.",
                        "VernacExtend",
                        "c79ba01d22d99adab9a27d0b65617757ec3cbc3a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mod_neg_bound",
            "line_nb": 507,
            "steps": [
                {
                    "command": [
                        "destruct b as [|b|b]; try easy; intros _.",
                        "VernacExtend",
                        "4e096c1180609be1654b52e7f32dca40ceaf326e"
                    ]
                },
                {
                    "command": [
                        "destruct a as [|a|a]; unfold modulo, div_eucl.",
                        "VernacExtend",
                        "65c25c90c7bcb49bb4b89dc2587b817e10ce9ba1"
                    ]
                },
                {
                    "command": [
                        "now split.",
                        "VernacExtend",
                        "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
                    ]
                },
                {
                    "command": [
                        "generalize (pos_div_eucl_bound a (pos b) Logic.eq_refl).",
                        "VernacExtend",
                        "db40bff3b18ac4db9d2b32a785a0832f4e4d3c4e"
                    ]
                },
                {
                    "command": [
                        "destruct pos_div_eucl as (q,r); unfold snd; intros (Hr,Hr').",
                        "VernacExtend",
                        "097c1f50afd26f5c804da26f394d03e4979e1385"
                    ]
                },
                {
                    "command": [
                        "destruct r as [|r|r]; (now destruct Hr) || clear Hr.",
                        "VernacExtend",
                        "1443919d78e2a4fda3137a509beed5f7e5fd9384"
                    ]
                },
                {
                    "command": [
                        "now split.",
                        "VernacExtend",
                        "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold lt in *; simpl in *.",
                        "VernacExtend",
                        "2f6272d406049963a09966da95bf0d424553afcd"
                    ]
                },
                {
                    "command": [
                        "rewrite pos_sub_lt by trivial.",
                        "VernacExtend",
                        "8b545710d8fbe2df8334f01e7e8c9eed4084e3de"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Pos.compare_antisym.",
                        "VernacExtend",
                        "9d0b5eeda82e531b98deef3567cce79c721a34c6"
                    ]
                },
                {
                    "command": [
                        "now apply Pos.sub_decr.",
                        "VernacExtend",
                        "c79ba01d22d99adab9a27d0b65617757ec3cbc3a"
                    ]
                },
                {
                    "command": [
                        "change (neg b - neg r <= 0).",
                        "VernacExtend",
                        "495d887eb5fd5b98a67d749f60a6cc37a6687d5a"
                    ]
                },
                {
                    "command": [
                        "unfold le, lt in *.",
                        "VernacExtend",
                        "74cb214af30dc24f248801a3ff0bd5a016f4871c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- compare_sub.",
                        "VernacExtend",
                        "83378e307136f634840e7fc5ed845da3b032e70e"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Pos.compare_antisym, Hr'.",
                        "VernacExtend",
                        "181e50bd65b82f6778c276fdf2cfcbf0b49f5bfa"
                    ]
                },
                {
                    "command": [
                        "generalize (pos_div_eucl_bound a (pos b) Logic.eq_refl).",
                        "VernacExtend",
                        "db40bff3b18ac4db9d2b32a785a0832f4e4d3c4e"
                    ]
                },
                {
                    "command": [
                        "destruct pos_div_eucl as (q,r); unfold snd; intros (Hr,Hr').",
                        "VernacExtend",
                        "097c1f50afd26f5c804da26f394d03e4979e1385"
                    ]
                },
                {
                    "command": [
                        "split; destruct r; try easy.",
                        "VernacExtend",
                        "1610a1cf1edfe20072a5821a223b5b732ab736a2"
                    ]
                },
                {
                    "command": [
                        "red; simpl; now rewrite <- Pos.compare_antisym.",
                        "VernacExtend",
                        "0fa8ba7e3dcc08d612d8336a13740a03c1c12572"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quotrem_eq",
            "line_nb": 530,
            "steps": [
                {
                    "command": [
                        "destruct a as [|a|a], b as [|b|b]; simpl; trivial; generalize (N.pos_div_eucl_spec a (N.pos b)); case N.pos_div_eucl; trivial; intros q r; try change (neg a) with (-pos a); change (pos a) with (of_N (N.pos a)); intros ->; now destruct q, r.",
                        "VernacExtend",
                        "dc6b4b677fce73864b0417398be3199bcdd5ca4e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quot_rem'",
            "line_nb": 533,
            "steps": [
                {
                    "command": [
                        "rewrite mul_comm.",
                        "VernacExtend",
                        "5f0fb0765ec04101790f2b78062bf5490bbe5e03"
                    ]
                },
                {
                    "command": [
                        "generalize (quotrem_eq a b).",
                        "VernacExtend",
                        "255c4163bb60d3c1ef17cb0465162a7b182002ab"
                    ]
                },
                {
                    "command": [
                        "unfold quot, rem.",
                        "VernacExtend",
                        "052597c5302629dee8b9126b48728cd4b6a7a024"
                    ]
                },
                {
                    "command": [
                        "now destruct quotrem.",
                        "VernacExtend",
                        "e7a6aa953025a93e5010fa847c28267747d0658c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quot_rem",
            "line_nb": 539,
            "steps": [
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "apply quot_rem'.",
                        "VernacExtend",
                        "7692ed441e75c952593d39cbb423cc58d85715ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rem_bound_pos",
            "line_nb": 543,
            "steps": [
                {
                    "command": [
                        "intros Ha Hb.",
                        "VernacExtend",
                        "0c4ce3bbd15ba18416ad16c4ce047ec9c705752c"
                    ]
                },
                {
                    "command": [
                        "destruct b as [|b|b]; (now discriminate Hb) || clear Hb; destruct a as [|a|a]; (now destruct Ha) || clear Ha.",
                        "VernacExtend",
                        "8fb25e23a198d36b7d61bdf809cc2ec8d1edf40c"
                    ]
                },
                {
                    "command": [
                        "compute.",
                        "VernacExtend",
                        "7a532ab38e33f38a5daf661f4883cc26dfdfdef7"
                    ]
                },
                {
                    "command": [
                        "now split.",
                        "VernacExtend",
                        "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
                    ]
                },
                {
                    "command": [
                        "unfold rem, quotrem.",
                        "VernacExtend",
                        "df928d66da79dc5087b7ec93be3a316e8b43638b"
                    ]
                },
                {
                    "command": [
                        "assert (H := N.pos_div_eucl_remainder a (N.pos b)).",
                        "VernacExtend",
                        "29b3065ddb2683ce66a8f5ab569fbdd71738b337"
                    ]
                },
                {
                    "command": [
                        "destruct N.pos_div_eucl as (q,[|r]); simpl; split; try easy.",
                        "VernacExtend",
                        "dcc74d9561cd0d69cca65139a41b5dd89dc36d92"
                    ]
                },
                {
                    "command": [
                        "now apply H.",
                        "VernacExtend",
                        "e28edffe226486c29d50d204164561fb199b8c97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rem_opp_l'",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "destruct a, b; trivial; unfold rem; simpl; now destruct N.pos_div_eucl as (q,[|r]).",
                        "VernacExtend",
                        "4f6c3b24853a739910499192374a098849888bd3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rem_opp_r'",
            "line_nb": 556,
            "steps": [
                {
                    "command": [
                        "destruct a, b; trivial; unfold rem; simpl; now destruct N.pos_div_eucl as (q,[|r]).",
                        "VernacExtend",
                        "4f6c3b24853a739910499192374a098849888bd3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rem_opp_l",
            "line_nb": 559,
            "steps": [
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "apply rem_opp_l'.",
                        "VernacExtend",
                        "b51328a6cef22714a91c3905d20a8d6f6b2fe88e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rem_opp_r",
            "line_nb": 563,
            "steps": [
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "apply rem_opp_r'.",
                        "VernacExtend",
                        "2a0a01f801fba8b9783446f7813c9deb69c2d713"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_Zpos",
            "line_nb": 567,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros ([ |r|r],H); simpl in *; destr_eq H.",
                        "VernacExtend",
                        "339d2d6b431c9d64e1a8e5a0059398dd736cd3c9"
                    ]
                },
                {
                    "command": [
                        "exists r; auto.",
                        "VernacExtend",
                        "6c115d61b7b2a121c5d8ff8967a21754335dd08a"
                    ]
                },
                {
                    "command": [
                        "intros (r,H).",
                        "VernacExtend",
                        "9cab41f864caac52ceeff2e24e3643b6f4713d21"
                    ]
                },
                {
                    "command": [
                        "exists (pos r); simpl; now f_equal.",
                        "VernacExtend",
                        "ee416191ab32a96911a6324679c3c131d30530e7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_Zpos_Zneg_r",
            "line_nb": 574,
            "steps": [
                {
                    "command": [
                        "split; intros (m,H); exists (-m); now rewrite mul_opp_l, <- H.",
                        "VernacExtend",
                        "9996b5a3017be1d2fe6222b779473d0b3d4904ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_Zpos_Zneg_l",
            "line_nb": 577,
            "steps": [
                {
                    "command": [
                        "split; intros (m,H); exists (-m); now rewrite mul_opp_l, <- mul_opp_r.",
                        "VernacExtend",
                        "93a587fa3a35529235b5eace2d7e5507e2bdc511"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ggcd_gcd",
            "line_nb": 580,
            "steps": [
                {
                    "command": [
                        "destruct a as [ |p|p], b as [ |q|q]; simpl; auto; generalize (Pos.ggcd_gcd p q); destruct Pos.ggcd as (g,(aa,bb)); simpl; congruence.",
                        "VernacExtend",
                        "206d654286e53eaf6f39d13ef27e0980eb203d92"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ggcd_correct_divisors",
            "line_nb": 583,
            "steps": [
                {
                    "command": [
                        "destruct a as [ |p|p], b as [ |q|q]; simpl; rewrite ?Pos.mul_1_r; auto; generalize (Pos.ggcd_correct_divisors p q); destruct Pos.ggcd as (g,(aa,bb)); simpl; destruct 1; now subst.",
                        "VernacExtend",
                        "819be880d0466d6b99fc0e6dfcf8b8efc72c2783"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_divide_l",
            "line_nb": 586,
            "steps": [
                {
                    "command": [
                        "rewrite <- ggcd_gcd.",
                        "VernacExtend",
                        "af8fe3aa4e3b8cec9dff021772fb4d255806993f"
                    ]
                },
                {
                    "command": [
                        "generalize (ggcd_correct_divisors a b).",
                        "VernacExtend",
                        "596110c31b3f951d5323976537ebf9bf70a545d6"
                    ]
                },
                {
                    "command": [
                        "destruct ggcd as (g,(aa,bb)); simpl.",
                        "VernacExtend",
                        "d7905ef92137f67e94c97b87557d36066c22301a"
                    ]
                },
                {
                    "command": [
                        "intros (H,_).",
                        "VernacExtend",
                        "5d7f528c0a50c9774977a893ac2a2ce4be26b8cc"
                    ]
                },
                {
                    "command": [
                        "exists aa.",
                        "VernacExtend",
                        "a88576544a563e6630825c1a0fed1d6dd0fa2990"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_comm.",
                        "VernacExtend",
                        "e381ca9335c310c57051601bf6f800b499d27dfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_divide_r",
            "line_nb": 594,
            "steps": [
                {
                    "command": [
                        "rewrite <- ggcd_gcd.",
                        "VernacExtend",
                        "af8fe3aa4e3b8cec9dff021772fb4d255806993f"
                    ]
                },
                {
                    "command": [
                        "generalize (ggcd_correct_divisors a b).",
                        "VernacExtend",
                        "596110c31b3f951d5323976537ebf9bf70a545d6"
                    ]
                },
                {
                    "command": [
                        "destruct ggcd as (g,(aa,bb)); simpl.",
                        "VernacExtend",
                        "d7905ef92137f67e94c97b87557d36066c22301a"
                    ]
                },
                {
                    "command": [
                        "intros (_,H).",
                        "VernacExtend",
                        "25f6a2cd1cb0bd6a2f0d7abf0ed531ec59abb9ee"
                    ]
                },
                {
                    "command": [
                        "exists bb.",
                        "VernacExtend",
                        "87320a0804a94fddefae4762bc46aafc3efc88f8"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_comm.",
                        "VernacExtend",
                        "e381ca9335c310c57051601bf6f800b499d27dfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_greatest",
            "line_nb": 602,
            "steps": [
                {
                    "command": [
                        "assert (H : forall p q r, (r|pos p) -> (r|pos q) -> (r|pos (Pos.gcd p q))).",
                        "VernacExtend",
                        "aa10ad2a6153eb3f12b4db83c45780462a21f5d2"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros p q [|r|r] H H'.",
                        "VernacExtend",
                        "dbd3a2c898b17ba77c238339a4dbbb7916c73d26"
                    ]
                },
                {
                    "command": [
                        "destruct H; now rewrite mul_comm in *.",
                        "VernacExtend",
                        "4561fc717c2c8f08d7339781d6ffca0b2cba4652"
                    ]
                },
                {
                    "command": [
                        "apply divide_Zpos, Pos.gcd_greatest; now apply divide_Zpos.",
                        "VernacExtend",
                        "ee55dcda7f8b631fcc6fe797d537487f445f1159"
                    ]
                },
                {
                    "command": [
                        "apply divide_Zpos_Zneg_l, divide_Zpos, Pos.gcd_greatest; now apply divide_Zpos, divide_Zpos_Zneg_l.",
                        "VernacExtend",
                        "41597bba737c9d6e2330c2d4ed4ae8ff701fb3a7"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct a, b; simpl; auto; intros; try apply H; trivial; now apply divide_Zpos_Zneg_r.",
                        "VernacExtend",
                        "a9f0503a2ab8482bae7db814ddce6613f810666c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_nonneg",
            "line_nb": 612,
            "steps": [
                {
                    "command": [
                        "now destruct a, b.",
                        "VernacExtend",
                        "7dbd2221c3119230880fcb5558e1bc5e570ef0ae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ggcd_opp",
            "line_nb": 615,
            "steps": [
                {
                    "command": [
                        "destruct a as [|a|a], b as [|b|b]; unfold ggcd, opp; auto; destruct (Pos.ggcd a b) as (g,(aa,bb)); auto.",
                        "VernacExtend",
                        "cd300d2c3889164d8b69a25360dcbdfa36190248"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "testbit_of_N",
            "line_nb": 618,
            "steps": [
                {
                    "command": [
                        "destruct a as [|a], n; simpl; trivial.",
                        "VernacExtend",
                        "bc45cdb5358cdfc0141644625a14ad3897dbe984"
                    ]
                },
                {
                    "command": [
                        "now destruct a.",
                        "VernacExtend",
                        "24051356fff328c7208562817960b0c83ed3bf6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "testbit_of_N'",
            "line_nb": 622,
            "steps": [
                {
                    "command": [
                        "intro Hn.",
                        "VernacExtend",
                        "81b3c1b7c56bc3b13f16050d6d157b1546f130f4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- testbit_of_N.",
                        "VernacExtend",
                        "e2d66469c0cbf0e62e1d563602c1832763c79f28"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "destruct n; trivial; now destruct Hn.",
                        "VernacExtend",
                        "5571a3370c149bc434def9e18cbeef0b890b1b81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "testbit_Zpos",
            "line_nb": 628,
            "steps": [
                {
                    "command": [
                        "intro Hn.",
                        "VernacExtend",
                        "81b3c1b7c56bc3b13f16050d6d157b1546f130f4"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- testbit_of_N'.",
                        "VernacExtend",
                        "2b770f1319cd2a6267fd9404c80463ca1776f433"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "testbit_Zneg",
            "line_nb": 632,
            "steps": [
                {
                    "command": [
                        "intro Hn.",
                        "VernacExtend",
                        "81b3c1b7c56bc3b13f16050d6d157b1546f130f4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- testbit_of_N' by trivial.",
                        "VernacExtend",
                        "0c82ad9685e4c4adee4855b59bd1d8389050e1e7"
                    ]
                },
                {
                    "command": [
                        "destruct n as [ |n|n]; [ | simpl; now destruct (Pos.pred_N a) | now destruct Hn].",
                        "VernacExtend",
                        "4b186dfeae4e668d63f6511b33b530200e95222b"
                    ]
                },
                {
                    "command": [
                        "unfold testbit.",
                        "VernacExtend",
                        "14f68f27aaaec42f64d3a8f3009fc6eaa35592a6"
                    ]
                },
                {
                    "command": [
                        "now destruct a as [|[ | | ]| ].",
                        "VernacExtend",
                        "6d8e5339707d89796364a1e7cb7a3293aeb8ac23"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div2_spec",
            "line_nb": 639,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "testbit_0_l",
            "line_nb": 642,
            "steps": [
                {
                    "command": [
                        "now destruct n.",
                        "VernacExtend",
                        "6e836d168cd359f41ad4e992ef54068680a38db2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "testbit_neg_r",
            "line_nb": 645,
            "steps": [
                {
                    "command": [
                        "now destruct n.",
                        "VernacExtend",
                        "6e836d168cd359f41ad4e992ef54068680a38db2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "testbit_odd_0",
            "line_nb": 648,
            "steps": [
                {
                    "command": [
                        "now destruct a as [|a|[a|a|]].",
                        "VernacExtend",
                        "261ce4af4ffb3926d1c06ec7d52e5fb3c7d24c44"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "testbit_even_0",
            "line_nb": 651,
            "steps": [
                {
                    "command": [
                        "now destruct a.",
                        "VernacExtend",
                        "24051356fff328c7208562817960b0c83ed3bf6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "testbit_odd_succ",
            "line_nb": 654,
            "steps": [
                {
                    "command": [
                        "destruct n as [|n|n]; (now destruct 1) || intros _.",
                        "VernacExtend",
                        "701fe4142866b62abe9d10e6999b22d4d78aea32"
                    ]
                },
                {
                    "command": [
                        "destruct a as [|[a|a|]|[a|a|]]; simpl; trivial.",
                        "VernacExtend",
                        "721c014773df2a2842a74ed608330859612c5266"
                    ]
                },
                {
                    "command": [
                        "now destruct a.",
                        "VernacExtend",
                        "24051356fff328c7208562817960b0c83ed3bf6c"
                    ]
                },
                {
                    "command": [
                        "unfold testbit; simpl.",
                        "VernacExtend",
                        "e57403650e6113c613f19f44ad27de806bba6b66"
                    ]
                },
                {
                    "command": [
                        "destruct a as [|a|[a|a|]]; simpl; trivial; rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; now destruct n.",
                        "VernacExtend",
                        "b4467045daa183bfe64763beed9266c5b3f1b817"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "testbit_even_succ",
            "line_nb": 661,
            "steps": [
                {
                    "command": [
                        "destruct n as [|n|n]; (now destruct 1) || intros _.",
                        "VernacExtend",
                        "701fe4142866b62abe9d10e6999b22d4d78aea32"
                    ]
                },
                {
                    "command": [
                        "destruct a as [|[a|a|]|[a|a|]]; simpl; trivial.",
                        "VernacExtend",
                        "721c014773df2a2842a74ed608330859612c5266"
                    ]
                },
                {
                    "command": [
                        "now destruct a.",
                        "VernacExtend",
                        "24051356fff328c7208562817960b0c83ed3bf6c"
                    ]
                },
                {
                    "command": [
                        "unfold testbit; simpl.",
                        "VernacExtend",
                        "e57403650e6113c613f19f44ad27de806bba6b66"
                    ]
                },
                {
                    "command": [
                        "destruct a as [|a|[a|a|]]; simpl; trivial; rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; now destruct n.",
                        "VernacExtend",
                        "b4467045daa183bfe64763beed9266c5b3f1b817"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shiftr_spec_aux",
            "line_nb": 668,
            "steps": [
                {
                    "command": [
                        "intros Hn Hm.",
                        "VernacExtend",
                        "894dbd76b539d7b7ba33294b0ce836f16c37201a"
                    ]
                },
                {
                    "command": [
                        "unfold shiftr.",
                        "VernacExtend",
                        "eed577ff940b182e51d6447cafec97bd06ac40ab"
                    ]
                },
                {
                    "command": [
                        "destruct n as [ |n|n]; (now destruct Hn) || clear Hn; simpl.",
                        "VernacExtend",
                        "09f1c19d96b43999372163a64e8820a195a10127"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_0_r.",
                        "VernacExtend",
                        "5f4b7be19ee701d8de4f4c7a990ecd727d061129"
                    ]
                },
                {
                    "command": [
                        "assert (forall p, to_N (m + pos p) = (to_N m + N.pos p)%N).",
                        "VernacExtend",
                        "bfe49840d31bdcdbebd7c621a6d3ff91f9603d61"
                    ]
                },
                {
                    "command": [
                        "destruct m; trivial; now destruct Hm.",
                        "VernacExtend",
                        "44ff32bc8c0d70ebb321b33af2fcd1eb1b71eeb2"
                    ]
                },
                {
                    "command": [
                        "assert (forall p, 0 <= m + pos p).",
                        "VernacExtend",
                        "7c773f13fc75ff4f5ae15d65e6e8acf201cac0ce"
                    ]
                },
                {
                    "command": [
                        "destruct m; easy || now destruct Hm.",
                        "VernacExtend",
                        "520346ae52e5e9cef9b191bf01ce2cf5a95ac98f"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ |a|a].",
                        "VernacExtend",
                        "4379d89b0fd1819a45764688206c28d2b443b80d"
                    ]
                },
                {
                    "command": [
                        "replace (Pos.iter div2 0 n) with 0 by (apply Pos.iter_invariant; intros; subst; trivial).",
                        "VernacExtend",
                        "97caeca3a4b4c8b1f9d8946b0d84e61e8a2d0b2b"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2 testbit_0_l.",
                        "VernacExtend",
                        "186779a1fae2a9b934daadd98cf3789127ccfeb5"
                    ]
                },
                {
                    "command": [
                        "change (pos a) with (of_N (N.pos a)) at 1.",
                        "VernacExtend",
                        "d7334bc21bdb1caa8a5493db66de83f0ece822b8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Pos.iter_swap_gen _ _ _ N.div2) by now intros [|[ | | ]].",
                        "VernacExtend",
                        "5022d73a8e7ee6c0668112e8287ffcaf88be9b3c"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_Zpos, testbit_of_N', H; trivial.",
                        "VernacExtend",
                        "8c63c4638f1c3e92401139f67b76369a2285dea3"
                    ]
                },
                {
                    "command": [
                        "exact (N.shiftr_spec' (N.pos a) (N.pos n) (to_N m)).",
                        "VernacExtend",
                        "9dced4560aaa83e17c85bcb6f9cd8302c5bf81c6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Pos.iter_swap_gen _ _ _ Pos.div2_up) by trivial.",
                        "VernacExtend",
                        "f1aed73e54fe5662bfbb8cffee0eab9043bc279e"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 testbit_Zneg, H; trivial.",
                        "VernacExtend",
                        "0f4438d9361fb3aa1fbf1aeb50f740628926ff36"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite (Pos.iter_swap_gen _ _ _ _ N.div2) by exact N.pred_div2_up.",
                        "VernacExtend",
                        "fc207fa7c8f920151218bcc27b07ed9eee00b646"
                    ]
                },
                {
                    "command": [
                        "exact (N.shiftr_spec' (Pos.pred_N a) (N.pos n) (to_N m)).",
                        "VernacExtend",
                        "e067701c6745126dd72c699d16a75d2a9ea79a55"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shiftl_spec_low",
            "line_nb": 690,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "destruct n as [|n|n], m as [|m|m]; try easy; simpl shiftl.",
                        "VernacExtend",
                        "b45eeacc49db50374e45975e7113906cfaf7a82d"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.succ_pred_or n) as [-> | <-]; rewrite ?Pos.iter_succ; apply testbit_even_0.",
                        "VernacExtend",
                        "1ae42c02d44649034b29eeed55ae0450ab83931b"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ |a|a].",
                        "VernacExtend",
                        "4379d89b0fd1819a45764688206c28d2b443b80d"
                    ]
                },
                {
                    "command": [
                        "replace (Pos.iter (mul 2) 0 n) with 0 by (apply Pos.iter_invariant; intros; subst; trivial).",
                        "VernacExtend",
                        "97a5e64db3b1c12681eeab65ebb546d8a09fe26c"
                    ]
                },
                {
                    "command": [
                        "apply testbit_0_l.",
                        "VernacExtend",
                        "c6067b79c47600d2d90bcef49fac118c40a29e6a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial.",
                        "VernacExtend",
                        "8128fb69f3b8150b21be7faca3f382f2b0a760b7"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_Zpos by easy.",
                        "VernacExtend",
                        "b8b2d4341e6a42297ac8480e0c0aa567a9bc702b"
                    ]
                },
                {
                    "command": [
                        "exact (N.shiftl_spec_low (N.pos a) (N.pos n) (N.pos m) H).",
                        "VernacExtend",
                        "d8136752ed2188adb23a50492ab9e57721d70698"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial.",
                        "VernacExtend",
                        "8128fb69f3b8150b21be7faca3f382f2b0a760b7"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_Zneg by easy.",
                        "VernacExtend",
                        "6523eb0d4daba6f54edb0c50fdcaf50cdbdc16f6"
                    ]
                },
                {
                    "command": [
                        "now rewrite (N.pos_pred_shiftl_low a (N.pos n)).",
                        "VernacExtend",
                        "9c65bbad8c4af62800d7cf581331aaa4eaa4ef7c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shiftl_spec_high",
            "line_nb": 704,
            "steps": [
                {
                    "command": [
                        "intros Hm H.",
                        "VernacExtend",
                        "7d3f21228edd2ee2a52219be8a657128d1b691c3"
                    ]
                },
                {
                    "command": [
                        "destruct n as [ |n|n].",
                        "VernacExtend",
                        "a9e9765d82901f37b313f4718036aa49039475fc"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite sub_0_r.",
                        "VernacExtend",
                        "dc540e3c3cc5873b08ae20debcb561bd3ca88efb"
                    ]
                },
                {
                    "command": [
                        "destruct m as [ |m|m]; try (now destruct H).",
                        "VernacExtend",
                        "325f5aac6375c3aeff4d4c00507552aa2a3f47f4"
                    ]
                },
                {
                    "command": [
                        "assert (0 <= pos m - pos n).",
                        "VernacExtend",
                        "7f551a2844e9765e95eaa897b06e33e74156d66e"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "now rewrite compare_antisym, <- compare_sub, <- compare_antisym.",
                        "VernacExtend",
                        "bb85441c26469a66b2d6812a1900c246e7194938"
                    ]
                },
                {
                    "command": [
                        "assert (EQ : to_N (pos m - pos n) = (N.pos m - N.pos n)%N).",
                        "VernacExtend",
                        "3be563a61f0570cd06d3cb2c999c9eb9a496588b"
                    ]
                },
                {
                    "command": [
                        "red in H.",
                        "VernacExtend",
                        "a4b4bf9e03eb87c8fa06c84cfda5cac7b43f2be8"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "simpl to_N.",
                        "VernacExtend",
                        "ed6c31b7f34e52e5e794537e653ec9dd0d0a3a6d"
                    ]
                },
                {
                    "command": [
                        "rewrite pos_sub_spec, Pos.compare_antisym.",
                        "VernacExtend",
                        "1282477ea0ff1512eaeecb5fd8a49905dbefa33a"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.compare_spec n m) as [H'|H'|H']; try (now destruct H).",
                        "VernacExtend",
                        "320bb21f33161bc9b102b414ca35fc091e0a7253"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "now rewrite N.sub_diag.",
                        "VernacExtend",
                        "1cd186fd4f929c54cc27b072b10fb2820f3b95e1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.sub_mask_pos' m n H') as (p & -> & <-).",
                        "VernacExtend",
                        "f033b77e7961d43708b21905454eca9ea957499f"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "now rewrite Pos.add_comm, Pos.add_sub.",
                        "VernacExtend",
                        "46734c6065b7b29ac75cc59cacf1ff8d28bfd905"
                    ]
                },
                {
                    "command": [
                        "destruct a; unfold shiftl.",
                        "VernacExtend",
                        "a24806384b1d845f725e69fe2ed42f2a64c24c91"
                    ]
                },
                {
                    "command": [
                        "replace (Pos.iter (mul 2) 0 n) with 0 by (apply Pos.iter_invariant; intros; subst; trivial).",
                        "VernacExtend",
                        "97a5e64db3b1c12681eeab65ebb546d8a09fe26c"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2 testbit_0_l.",
                        "VernacExtend",
                        "186779a1fae2a9b934daadd98cf3789127ccfeb5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial.",
                        "VernacExtend",
                        "8128fb69f3b8150b21be7faca3f382f2b0a760b7"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 testbit_Zpos, EQ by easy.",
                        "VernacExtend",
                        "a7df610cb61e07c352a17703c24d3317978ec60d"
                    ]
                },
                {
                    "command": [
                        "exact (N.shiftl_spec_high' (N.pos p) (N.pos n) (N.pos m) H).",
                        "VernacExtend",
                        "6741c3876fe8e0781bc1f68e9a7465135312151e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial.",
                        "VernacExtend",
                        "8128fb69f3b8150b21be7faca3f382f2b0a760b7"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 testbit_Zneg, EQ by easy.",
                        "VernacExtend",
                        "225cdcf09e33c0c48e6f3ed223988fc5c05b0aab"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "simpl to_N.",
                        "VernacExtend",
                        "ed6c31b7f34e52e5e794537e653ec9dd0d0a3a6d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- N.shiftl_spec_high by easy.",
                        "VernacExtend",
                        "8eb4b63bd6fa1f0112a231a8ffde009f37f43d4e"
                    ]
                },
                {
                    "command": [
                        "now apply (N.pos_pred_shiftl_high p (N.pos n)).",
                        "VernacExtend",
                        "5678babaeff576901152499d2d9876f22d732788"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now apply (shiftr_spec_aux a (pos n) m).",
                        "VernacExtend",
                        "c3a9e1995117675bd19a7c437b05115856e56f8f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "shiftr_spec",
            "line_nb": 741,
            "steps": [
                {
                    "command": [
                        "intros Hm.",
                        "VernacExtend",
                        "76990ca140a9355e8012e89d27e48eb51607f2b7"
                    ]
                },
                {
                    "command": [
                        "destruct (leb_spec 0 n).",
                        "VernacExtend",
                        "18d1b1b00d85c66b214622c1b1ac40389a223cb5"
                    ]
                },
                {
                    "command": [
                        "now apply shiftr_spec_aux.",
                        "VernacExtend",
                        "f74d82f44478ca23783c1dac5249bfa7310af962"
                    ]
                },
                {
                    "command": [
                        "destruct (leb_spec (-n) m) as [LE|GT].",
                        "VernacExtend",
                        "919b63248dee91a929adc6cdf2cd20b12a1b6ce5"
                    ]
                },
                {
                    "command": [
                        "unfold shiftr.",
                        "VernacExtend",
                        "eed577ff940b182e51d6447cafec97bd06ac40ab"
                    ]
                },
                {
                    "command": [
                        "rewrite (shiftl_spec_high a (-n) m); trivial.",
                        "VernacExtend",
                        "2022c384bc872742271f55130c2662132cd1260e"
                    ]
                },
                {
                    "command": [
                        "now destruct n.",
                        "VernacExtend",
                        "6e836d168cd359f41ad4e992ef54068680a38db2"
                    ]
                },
                {
                    "command": [
                        "unfold shiftr.",
                        "VernacExtend",
                        "eed577ff940b182e51d6447cafec97bd06ac40ab"
                    ]
                },
                {
                    "command": [
                        "rewrite (shiftl_spec_low a (-n) m); trivial.",
                        "VernacExtend",
                        "8c4b6b163992b5bfa4c27b47277ff54e4a2f68ff"
                    ]
                },
                {
                    "command": [
                        "rewrite testbit_neg_r; trivial.",
                        "VernacExtend",
                        "ee05b9a2ca5b0e6fdeba9b8e19df620e40730b1f"
                    ]
                },
                {
                    "command": [
                        "red in GT.",
                        "VernacExtend",
                        "a77b7f3cc375a5f0a1c9b40dec3168342a37075f"
                    ]
                },
                {
                    "command": [
                        "rewrite compare_sub in GT.",
                        "VernacExtend",
                        "6cd12de0fe2eb6b953a6b17bb2bc6dd3c0c13498"
                    ]
                },
                {
                    "command": [
                        "now destruct n.",
                        "VernacExtend",
                        "6e836d168cd359f41ad4e992ef54068680a38db2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lor_spec",
            "line_nb": 756,
            "steps": [
                {
                    "command": [
                        "destruct (leb_spec 0 n) as [Hn|Hn]; [|now rewrite !testbit_neg_r].",
                        "VernacExtend",
                        "bc19fb8e6ffcf0ace80447c58c7a363166d2442a"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ |a|a], b as [ |b|b]; rewrite ?testbit_0_l, ?orb_false_r; trivial; unfold lor; rewrite ?testbit_Zpos, ?testbit_Zneg, ?N.pos_pred_succ by trivial.",
                        "VernacExtend",
                        "327aebb99415474bee600d2d89572e26ba7b7f7e"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- N.lor_spec.",
                        "VernacExtend",
                        "7832e8e7759a0547259b6323cf6af7a2c4c6342f"
                    ]
                },
                {
                    "command": [
                        "now rewrite N.ldiff_spec, negb_andb, negb_involutive, orb_comm.",
                        "VernacExtend",
                        "e0694c94dde99f43f7bb81f52a64f322af41c87a"
                    ]
                },
                {
                    "command": [
                        "now rewrite N.ldiff_spec, negb_andb, negb_involutive.",
                        "VernacExtend",
                        "7d8418074bf10b0ec9502fc91202992fe26f21de"
                    ]
                },
                {
                    "command": [
                        "now rewrite N.land_spec, negb_andb.",
                        "VernacExtend",
                        "ede4bd8320441efa64800f7c3a5a7211ec22fe7e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "land_spec",
            "line_nb": 764,
            "steps": [
                {
                    "command": [
                        "destruct (leb_spec 0 n) as [Hn|Hn]; [|now rewrite !testbit_neg_r].",
                        "VernacExtend",
                        "bc19fb8e6ffcf0ace80447c58c7a363166d2442a"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ |a|a], b as [ |b|b]; rewrite ?testbit_0_l, ?andb_false_r; trivial; unfold land; rewrite ?testbit_Zpos, ?testbit_Zneg, ?testbit_of_N', ?N.pos_pred_succ by trivial.",
                        "VernacExtend",
                        "7db738a3026e8e9165cd25ecdfdf4fb3ff5024e1"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- N.land_spec.",
                        "VernacExtend",
                        "6864a57bf34be79a4311f638970c516d13076d66"
                    ]
                },
                {
                    "command": [
                        "now rewrite N.ldiff_spec.",
                        "VernacExtend",
                        "2ef66efe0d7e47a9b02c17a7a5bdef3c1b44e5ca"
                    ]
                },
                {
                    "command": [
                        "now rewrite N.ldiff_spec, andb_comm.",
                        "VernacExtend",
                        "2ad5ee5974dfab271cb37dca836a953bf47a10dd"
                    ]
                },
                {
                    "command": [
                        "now rewrite N.lor_spec, negb_orb.",
                        "VernacExtend",
                        "c0004ac7c3e1666cfb28e80d76768d716ddbb327"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ldiff_spec",
            "line_nb": 772,
            "steps": [
                {
                    "command": [
                        "destruct (leb_spec 0 n) as [Hn|Hn]; [|now rewrite !testbit_neg_r].",
                        "VernacExtend",
                        "bc19fb8e6ffcf0ace80447c58c7a363166d2442a"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ |a|a], b as [ |b|b]; rewrite ?testbit_0_l, ?andb_true_r; trivial; unfold ldiff; rewrite ?testbit_Zpos, ?testbit_Zneg, ?testbit_of_N', ?N.pos_pred_succ by trivial.",
                        "VernacExtend",
                        "e3dab2fcc1541292fab08128308dbf304ffcdac6"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- N.ldiff_spec.",
                        "VernacExtend",
                        "7279d2789107f4e6c4f57739dfab4f476e28229d"
                    ]
                },
                {
                    "command": [
                        "now rewrite N.land_spec, negb_involutive.",
                        "VernacExtend",
                        "8a510adece2ab7a41dd76620b88cfb8ade2e3446"
                    ]
                },
                {
                    "command": [
                        "now rewrite N.lor_spec, negb_orb.",
                        "VernacExtend",
                        "c0004ac7c3e1666cfb28e80d76768d716ddbb327"
                    ]
                },
                {
                    "command": [
                        "now rewrite N.ldiff_spec, negb_involutive, andb_comm.",
                        "VernacExtend",
                        "2bbfa7f116de6395665d6df0ead6072e9cc5cdf1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lxor_spec",
            "line_nb": 780,
            "steps": [
                {
                    "command": [
                        "destruct (leb_spec 0 n) as [Hn|Hn]; [|now rewrite !testbit_neg_r].",
                        "VernacExtend",
                        "bc19fb8e6ffcf0ace80447c58c7a363166d2442a"
                    ]
                },
                {
                    "command": [
                        "destruct a as [ |a|a], b as [ |b|b]; rewrite ?testbit_0_l, ?xorb_false_l, ?xorb_false_r; trivial; unfold lxor; rewrite ?testbit_Zpos, ?testbit_Zneg, ?testbit_of_N', ?N.pos_pred_succ by trivial.",
                        "VernacExtend",
                        "7095084e370f45625fee9adadaf7ebe15be35afa"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- N.lxor_spec.",
                        "VernacExtend",
                        "be6606e28af958258d06879cf2a511620d212a0a"
                    ]
                },
                {
                    "command": [
                        "now rewrite N.lxor_spec, negb_xorb_r.",
                        "VernacExtend",
                        "5c43d17732941b9ce7891451b942e70861afc496"
                    ]
                },
                {
                    "command": [
                        "now rewrite N.lxor_spec, negb_xorb_l.",
                        "VernacExtend",
                        "23378135de3ac6885dafb63974c59097ea877ce6"
                    ]
                },
                {
                    "command": [
                        "now rewrite N.lxor_spec, xorb_negb_negb.",
                        "VernacExtend",
                        "cdda51e6c6a53c88daa109bd328b570b7cd127ce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt_lt_iff",
            "line_nb": 789,
            "steps": [
                {
                    "command": [
                        "unfold lt, gt.",
                        "VernacExtend",
                        "8cc15ec47569f34eb3b35be0e4a59a64cd138877"
                    ]
                },
                {
                    "command": [
                        "now rewrite compare_antisym, CompOpp_iff.",
                        "VernacExtend",
                        "3872098e9b9c5487d518b55127e4b1376337872a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt_lt",
            "line_nb": 793,
            "steps": [
                {
                    "command": [
                        "apply gt_lt_iff.",
                        "VernacExtend",
                        "4620efeab5a40036b9a55501443fc8dbfb7fc6d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_gt",
            "line_nb": 796,
            "steps": [
                {
                    "command": [
                        "apply gt_lt_iff.",
                        "VernacExtend",
                        "4620efeab5a40036b9a55501443fc8dbfb7fc6d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ge_le_iff",
            "line_nb": 799,
            "steps": [
                {
                    "command": [
                        "unfold le, ge.",
                        "VernacExtend",
                        "49ff096655be717232bfbbc31cf77140d8c09c79"
                    ]
                },
                {
                    "command": [
                        "now rewrite compare_antisym, CompOpp_iff.",
                        "VernacExtend",
                        "3872098e9b9c5487d518b55127e4b1376337872a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ge_le",
            "line_nb": 803,
            "steps": [
                {
                    "command": [
                        "apply ge_le_iff.",
                        "VernacExtend",
                        "0473d285db861d6caf8a2f4ce58491d5fe906cdb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_ge",
            "line_nb": 806,
            "steps": [
                {
                    "command": [
                        "apply ge_le_iff.",
                        "VernacExtend",
                        "0473d285db861d6caf8a2f4ce58491d5fe906cdb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtb_ltb",
            "line_nb": 810,
            "steps": [
                {
                    "command": [
                        "unfold gtb, ltb.",
                        "VernacExtend",
                        "c59396551e25ec56a2bb6cd935ef89abf7a64f95"
                    ]
                },
                {
                    "command": [
                        "rewrite compare_antisym.",
                        "VernacExtend",
                        "79a52ead430e61efd31081179fc8e3db332e367d"
                    ]
                },
                {
                    "command": [
                        "now case compare.",
                        "VernacExtend",
                        "74c02af69296d7bd4194ae66bb084df198e7dac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "geb_leb",
            "line_nb": 815,
            "steps": [
                {
                    "command": [
                        "unfold geb, leb.",
                        "VernacExtend",
                        "59dca22fc673639a146e38300aed207ae95a1064"
                    ]
                },
                {
                    "command": [
                        "rewrite compare_antisym.",
                        "VernacExtend",
                        "79a52ead430e61efd31081179fc8e3db332e367d"
                    ]
                },
                {
                    "command": [
                        "now case compare.",
                        "VernacExtend",
                        "74c02af69296d7bd4194ae66bb084df198e7dac5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtb_lt",
            "line_nb": 820,
            "steps": [
                {
                    "command": [
                        "rewrite gtb_ltb.",
                        "VernacExtend",
                        "2f0f38547906875e7deac10f9ec27c937ce6c18a"
                    ]
                },
                {
                    "command": [
                        "apply ltb_lt.",
                        "VernacExtend",
                        "4a1e8a85ff39540c773486df1a736d17424cc5b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "geb_le",
            "line_nb": 824,
            "steps": [
                {
                    "command": [
                        "rewrite geb_leb.",
                        "VernacExtend",
                        "080d7e452e6300bd360ad3288a564a2093fa764f"
                    ]
                },
                {
                    "command": [
                        "apply leb_le.",
                        "VernacExtend",
                        "a0c69bbcff8b82ea56ff0f95f104f594a8a76174"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtb_spec",
            "line_nb": 828,
            "steps": [
                {
                    "command": [
                        "rewrite gtb_ltb.",
                        "VernacExtend",
                        "2f0f38547906875e7deac10f9ec27c937ce6c18a"
                    ]
                },
                {
                    "command": [
                        "apply ltb_spec.",
                        "VernacExtend",
                        "eebb0eac485fd95982f16afd82c98e5fa2f04f09"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "geb_spec",
            "line_nb": 832,
            "steps": [
                {
                    "command": [
                        "rewrite geb_leb.",
                        "VernacExtend",
                        "080d7e452e6300bd360ad3288a564a2093fa764f"
                    ]
                },
                {
                    "command": [
                        "apply leb_spec.",
                        "VernacExtend",
                        "818115ee7741d425cdd7a4be42130057d4832d97"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_reg_l",
            "line_nb": 836,
            "steps": [
                {
                    "command": [
                        "exact (proj1 (add_cancel_l m p n)).",
                        "VernacExtend",
                        "9d94c28736192a71cf01fa65a56f00b54b63e038"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_reg_l",
            "line_nb": 839,
            "steps": [
                {
                    "command": [
                        "exact (fun Hp => proj1 (mul_cancel_l n m p Hp)).",
                        "VernacExtend",
                        "fa210d20c46661b7510cdb8455aa81ca05f656d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_reg_r",
            "line_nb": 842,
            "steps": [
                {
                    "command": [
                        "exact (fun Hp => proj1 (mul_cancel_r n m p Hp)).",
                        "VernacExtend",
                        "3511417c59de4813cb41ccec16d63d0eab309699"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_eq_mul_m1",
            "line_nb": 845,
            "steps": [
                {
                    "command": [
                        "rewrite mul_comm.",
                        "VernacExtend",
                        "5f0fb0765ec04101790f2b78062bf5490bbe5e03"
                    ]
                },
                {
                    "command": [
                        "now destruct n.",
                        "VernacExtend",
                        "6e836d168cd359f41ad4e992ef54068680a38db2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_diag",
            "line_nb": 849,
            "steps": [
                {
                    "command": [
                        "change 2 with (1+1).",
                        "VernacExtend",
                        "18309220599ebb8f04f47f929c05632cd568a412"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_add_distr_r, !mul_1_l.",
                        "VernacExtend",
                        "4d53b4bb05a105740d1e1516d6c6d0d213176ba3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_opp",
            "line_nb": 853,
            "steps": [
                {
                    "command": [
                        "destruct n, m; simpl; trivial; intros; now rewrite <- Pos.compare_antisym.",
                        "VernacExtend",
                        "e7c757964e7eb8667dacfad9dd6c6a19bdf1058d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_compare_mono_l",
            "line_nb": 856,
            "steps": [
                {
                    "command": [
                        "rewrite (compare_sub m p), compare_sub.",
                        "VernacExtend",
                        "41b3b2ed9817dd3b043503bfebe335ac5ac837ba"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "rewrite opp_add_distr, (add_comm n m), add_assoc.",
                        "VernacExtend",
                        "2af963bcf1f9747d94bf1165f2779ddca7c188f4"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- add_assoc, add_opp_diag_r, add_0_r.",
                        "VernacExtend",
                        "14ed05a000e6cc3ab5eedeea681e19a6f5f35671"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "id",
            "line_nb": 891,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj",
            "line_nb": 894,
            "steps": [
                {
                    "command": [
                        "now injection 1.",
                        "VernacExtend",
                        "3613f22935e1d9491aedb1db367e0f8bcf1c6c82"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_iff",
            "line_nb": 897,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply inj.",
                        "VernacExtend",
                        "9104df39dd59389afc0216d8320240bf8dbf78d5"
                    ]
                },
                {
                    "command": [
                        "intros; now f_equal.",
                        "VernacExtend",
                        "5b326aae0a79a34d850ac45bcf8aa8756caea1a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_pos",
            "line_nb": 902,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_nonneg",
            "line_nb": 905,
            "steps": [
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_1",
            "line_nb": 908,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_xO",
            "line_nb": 911,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_xI",
            "line_nb": 914,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_succ",
            "line_nb": 917,
            "steps": [
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite Pos.add_1_r.",
                        "VernacExtend",
                        "6effcf97b68463ca7ed326f49098b6160d29b1eb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_add",
            "line_nb": 921,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_sub",
            "line_nb": 924,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite Z.pos_sub_gt.",
                        "VernacExtend",
                        "3a076165f626c4cdfead3065c786f34033c9f7e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_sub_max",
            "line_nb": 929,
            "steps": [
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.pos_sub_spec.",
                        "VernacExtend",
                        "ad39ea5e69a6135dd31841448750ef09af08dff9"
                    ]
                },
                {
                    "command": [
                        "case Pos.compare_spec; intros.",
                        "VernacExtend",
                        "b79b38ab25539b5e1778e53d4ae6d5f006ccfaf1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst; now rewrite Pos.sub_diag.",
                        "VernacExtend",
                        "5f1f4cb6c96e027a78a0b71772429e3c45b3c947"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite Pos.sub_lt.",
                        "VernacExtend",
                        "98be495e9875235521728fa56ac82b0c2ec190c9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now destruct (p-q)%positive.",
                        "VernacExtend",
                        "22d1a51c9948f37becb4c1bae4d2b637d11d513b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_pred",
            "line_nb": 940,
            "steps": [
                {
                    "command": [
                        "destruct p; easy || now destruct 1.",
                        "VernacExtend",
                        "b19a0661d2f18a26056609d784c3c39dbdf66c99"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_mul",
            "line_nb": 943,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_pow_pos",
            "line_nb": 946,
            "steps": [
                {
                    "command": [
                        "now apply Pos.iter_swap_gen.",
                        "VernacExtend",
                        "e65a942f0735f2a56724cf83d5ee925c620aaa5e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_pow",
            "line_nb": 949,
            "steps": [
                {
                    "command": [
                        "apply inj_pow_pos.",
                        "VernacExtend",
                        "14041e504e217446797e76c5c3df606d9522cd85"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_square",
            "line_nb": 952,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_compare",
            "line_nb": 955,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_leb",
            "line_nb": 958,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_ltb",
            "line_nb": 961,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_eqb",
            "line_nb": 964,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_max",
            "line_nb": 967,
            "steps": [
                {
                    "command": [
                        "unfold Z.max, Pos.max.",
                        "VernacExtend",
                        "94ea4520387e4696ba6d6c33352c26b61e2a0623"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_compare.",
                        "VernacExtend",
                        "4ab508caf2e1a434b2148d8ceb91d401efffeb77"
                    ]
                },
                {
                    "command": [
                        "now case Z.compare_spec.",
                        "VernacExtend",
                        "8ac43197c7e0b1bfa612602c2a6dc8cece8e95a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_min",
            "line_nb": 972,
            "steps": [
                {
                    "command": [
                        "unfold Z.min, Pos.min.",
                        "VernacExtend",
                        "cdb8c22455878a00241453a2a94219df6f6a2981"
                    ]
                },
                {
                    "command": [
                        "rewrite inj_compare.",
                        "VernacExtend",
                        "4ab508caf2e1a434b2148d8ceb91d401efffeb77"
                    ]
                },
                {
                    "command": [
                        "now case Z.compare_spec.",
                        "VernacExtend",
                        "8ac43197c7e0b1bfa612602c2a6dc8cece8e95a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_sqrt",
            "line_nb": 977,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_gcd",
            "line_nb": 980,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_divide",
            "line_nb": 983,
            "steps": [
                {
                    "command": [
                        "apply Z.divide_Zpos.",
                        "VernacExtend",
                        "4ac5b8794eb04e4a71a6b06827aaf784c80e8ce1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_testbit",
            "line_nb": 986,
            "steps": [
                {
                    "command": [
                        "apply Z.testbit_Zpos.",
                        "VernacExtend",
                        "b3be27531f57e7c3c366a137f94e5242c19abe1f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_neg",
            "line_nb": 989,
            "steps": [
                {
                    "command": [
                        "now injection 1.",
                        "VernacExtend",
                        "3613f22935e1d9491aedb1db367e0f8bcf1c6c82"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_neg_iff",
            "line_nb": 992,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply inj_neg.",
                        "VernacExtend",
                        "bd1a0b3e757ef1e7f21543adfd4fa05683f3a35c"
                    ]
                },
                {
                    "command": [
                        "intros; now f_equal.",
                        "VernacExtend",
                        "5b326aae0a79a34d850ac45bcf8aa8756caea1a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_pos",
            "line_nb": 997,
            "steps": [
                {
                    "command": [
                        "now injection 1.",
                        "VernacExtend",
                        "3613f22935e1d9491aedb1db367e0f8bcf1c6c82"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_pos_iff",
            "line_nb": 1000,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply inj_pos.",
                        "VernacExtend",
                        "6908c1d6c365cf82d2900695c5fcbbda5872ec9f"
                    ]
                },
                {
                    "command": [
                        "intros; now f_equal.",
                        "VernacExtend",
                        "5b326aae0a79a34d850ac45bcf8aa8756caea1a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_is_neg",
            "line_nb": 1005,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_is_nonpos",
            "line_nb": 1008,
            "steps": [
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_is_pos",
            "line_nb": 1011,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_is_nonneg",
            "line_nb": 1014,
            "steps": [
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_le_pos",
            "line_nb": 1017,
            "steps": [
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_lt_pos",
            "line_nb": 1020,
            "steps": [
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_le_neg",
            "line_nb": 1023,
            "steps": [
                {
                    "command": [
                        "intros; unfold Z.le; simpl.",
                        "VernacExtend",
                        "f5bfaa1a4df6f2ac296f8af108bb60e4723b6e4f"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Pos.compare_antisym.",
                        "VernacExtend",
                        "e7018e33e171134870ec4a27cfae829a41b7f149"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_lt_neg",
            "line_nb": 1027,
            "steps": [
                {
                    "command": [
                        "intros; unfold Z.lt; simpl.",
                        "VernacExtend",
                        "a1bbbdbadc6f0652df18dab26377472ce84e9c12"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Pos.compare_antisym.",
                        "VernacExtend",
                        "e7018e33e171134870ec4a27cfae829a41b7f149"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_le_pos",
            "line_nb": 1031,
            "steps": [
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_lt_pos",
            "line_nb": 1034,
            "steps": [
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_xO",
            "line_nb": 1037,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neg_xI",
            "line_nb": 1040,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_xO",
            "line_nb": 1043,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pos_xI",
            "line_nb": 1046,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_neg",
            "line_nb": 1049,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "opp_pos",
            "line_nb": 1052,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_neg_neg",
            "line_nb": 1055,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_pos_neg",
            "line_nb": 1058,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_neg_pos",
            "line_nb": 1061,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_pos_pos",
            "line_nb": 1064,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_pos_neg_r",
            "line_nb": 1067,
            "steps": [
                {
                    "command": [
                        "apply Z.divide_Zpos_Zneg_r.",
                        "VernacExtend",
                        "3ca66b959d24fada0d9e82b1451877afd22eeaa8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_pos_neg_l",
            "line_nb": 1070,
            "steps": [
                {
                    "command": [
                        "apply Z.divide_Zpos_Zneg_l.",
                        "VernacExtend",
                        "5e10935e1f76818e1ff7558e0d951361f1c82b3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "testbit_neg",
            "line_nb": 1073,
            "steps": [
                {
                    "command": [
                        "apply Z.testbit_Zneg.",
                        "VernacExtend",
                        "e1ed648dc90566812c54f646ca15574449b9b483"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "testbit_pos",
            "line_nb": 1076,
            "steps": [
                {
                    "command": [
                        "apply Z.testbit_Zpos.",
                        "VernacExtend",
                        "b3be27531f57e7c3c366a137f94e5242c19abe1f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_pos_nonpos",
            "line_nb": 1094,
            "steps": [
                {
                    "command": [
                        "destruct x; trivial.",
                        "VernacExtend",
                        "bbff326ec32235fabdefaa17829f382a345b7d0f"
                    ]
                },
                {
                    "command": [
                        "now destruct 1.",
                        "VernacExtend",
                        "599cf8488dce43cedbb3491ca78a34441bf2a1bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_double",
            "line_nb": 1101,
            "steps": [
                {
                    "command": [
                        "now destruct x.",
                        "VernacExtend",
                        "11df7cc1073429d0a2b21c005404123169558cf0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_succ_double",
            "line_nb": 1104,
            "steps": [
                {
                    "command": [
                        "now destruct x.",
                        "VernacExtend",
                        "11df7cc1073429d0a2b21c005404123169558cf0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zplus_minus_eq",
            "line_nb": 1299,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now apply Z.add_move_l.",
                        "VernacExtend",
                        "b25b1a9478ffa54eec25a2d87c275a9f6e232264"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zpos_eq",
            "line_nb": 1333,
            "steps": [
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ZL0",
            "line_nb": 1341,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zplus_diag_eq_mult_2",
            "line_nb": 1344,
            "steps": [
                {
                    "command": [
                        "rewrite Z.mul_comm.",
                        "VernacExtend",
                        "088699fe7f894ededd3c93ab3a27f9d105f1ab84"
                    ]
                },
                {
                    "command": [
                        "apply Z.add_diag.",
                        "VernacExtend",
                        "e7920623909944b2d9ec6a0398d4c3434f18f405"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_eq_mult",
            "line_nb": 1348,
            "steps": [
                {
                    "command": [
                        "intros; now subst.",
                        "VernacExtend",
                        "f75b5a2d518b7b1521370155178b4b62db2fad48"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}