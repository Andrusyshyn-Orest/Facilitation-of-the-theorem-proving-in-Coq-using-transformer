{
    "filename": "theories/ZArith/Zwf.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import ZArith_base.",
            "VernacRequire",
            "3869e2745ea23533899856ceac38bbbfdda9266e"
        ],
        [
            "Require Export Wf_nat.",
            "VernacRequire",
            "287253697823c346b4d8375b73e4c5bcf429af23"
        ],
        [
            "Require Import Omega.",
            "VernacRequire",
            "72dd903de5f3320ef9d302d79812066579ed9cdb"
        ],
        [
            "Local Open Scope Z_scope.",
            "VernacOpenCloseScope",
            "5313930c0cd5fa63810c1c79463485ebf0638bad"
        ],
        [
            "Definition Zwf (c x y:Z) := c <= y /\\ x < y.",
            "VernacDefinition",
            "3e4fd527bec6e77e6770f5831f081202bb839dc0"
        ],
        [
            "Section wf_proof.",
            "VernacBeginSection",
            "1256aed63d14b5d644a0e38be3da39c7eb74fda4"
        ],
        [
            "Variable c : Z.",
            "VernacAssumption",
            "42d24e2bde5f7be46927b8b8fa9550becaf021e2"
        ],
        [
            "Let f (z:Z) := Z.abs_nat (z - c).",
            "VernacDefinition",
            "5c48a581a87b767e8e3528011f8b3a57e5910dca"
        ],
        [
            "Lemma Zwf_well_founded : well_founded (Zwf c).",
            "VernacStartTheoremProof",
            "ebc0bcd87b19c21deca968b09ee160a59edc0668"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "assert (forall (n:nat) (a:Z), (f a < n)%nat \\/ a < c -> Acc (Zwf c) a).",
            "VernacExtend",
            "a118f544228c5a0a0ee1916e360f1c66dd377c6b"
        ],
        [
            "clear a; simple induction n; intros.",
            "VernacExtend",
            "a845a5171d97adb17e005060afd81f09873d536d"
        ],
        [
            "case H; intros.",
            "VernacExtend",
            "5c1fb684f521eaf2dc536a242d9fcc76d93c85b6"
        ],
        [
            "case (lt_n_O (f a)); auto.",
            "VernacExtend",
            "fad9e6b0822697371367aa1ee3f605c17cdf4a9f"
        ],
        [
            "apply Acc_intro; unfold Zwf; intros.",
            "VernacExtend",
            "c12a7fa19db0a8d094965f66d8de9fb1db755e5e"
        ],
        [
            "assert False; omega || contradiction.",
            "VernacExtend",
            "95c62f3b16e92b51889d4a2514fe398669171d83"
        ],
        [
            "case H0; clear H0; intro; auto.",
            "VernacExtend",
            "0248e7788a9b29033d8dab6989ee0dfeebbeb226"
        ],
        [
            "apply Acc_intro; intros.",
            "VernacExtend",
            "8fba32424572b3e59fae31cf5b031e0ce3967014"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "unfold Zwf in H1.",
            "VernacExtend",
            "defae4a8a3818e848997e92faadcd7816d7b8a76"
        ],
        [
            "case (Z.le_gt_cases c y); intro; auto with zarith.",
            "VernacExtend",
            "7eae12b1a6c3e825bb56ac15b56ba027a2f868ce"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "red in H0.",
            "VernacExtend",
            "3e33e4fdada8386783e8311d1d4116d148279cb2"
        ],
        [
            "apply lt_le_trans with (f a); auto with arith.",
            "VernacExtend",
            "6fa487c2fe178a736f2a08bf5c231c69f37fd657"
        ],
        [
            "unfold f.",
            "VernacExtend",
            "54a386f4161710b69df4a2025df24a14e842ecf2"
        ],
        [
            "apply Zabs2Nat.inj_lt; omega.",
            "VernacExtend",
            "455735fe8e7da008c5a059f09c2549ff29e5007f"
        ],
        [
            "apply (H (S (f a))); auto.",
            "VernacExtend",
            "8b8d9a0655d0ee91a2c51d48a66ff3ba89b80249"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End wf_proof.",
            "VernacEndSegment",
            "6e9f747bbd69c8639177923edf6eb41b0ead16c8"
        ],
        [
            "Hint Resolve Zwf_well_founded: datatypes.",
            "VernacHints",
            "6fdb384f144a4ea7e4712045e37b61ce8f780d0f"
        ],
        [
            "Definition Zwf_up (c x y:Z) := y < x <= c.",
            "VernacDefinition",
            "7f120083d403b7a4a6a8a67c6dd639b77cb0656f"
        ],
        [
            "Section wf_proof_up.",
            "VernacBeginSection",
            "9566bd97540e16fab7b9c2717be1a7f779b6c69b"
        ],
        [
            "Variable c : Z.",
            "VernacAssumption",
            "42d24e2bde5f7be46927b8b8fa9550becaf021e2"
        ],
        [
            "Let f (z:Z) := Z.abs_nat (c - z).",
            "VernacDefinition",
            "3afe11fa455218b2ae10f9d03213e749ade932a1"
        ],
        [
            "Lemma Zwf_up_well_founded : well_founded (Zwf_up c).",
            "VernacStartTheoremProof",
            "e6d3c657cc75697bf27b52a335149ed2188c496e"
        ],
        [
            "apply well_founded_lt_compat with (f := f).",
            "VernacExtend",
            "f6d282a90e6628633ad73a94d07775cbe520bb36"
        ],
        [
            "unfold Zwf_up, f.",
            "VernacExtend",
            "8e0569508923644b1e21e61c88e1e8331d67b794"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Zabs2Nat.inj_lt; try (apply Z.le_0_sub; intuition).",
            "VernacExtend",
            "33247969cad009c1a113dfbeefb1efa7c4bac1c6"
        ],
        [
            "now apply Z.sub_lt_mono_l.",
            "VernacExtend",
            "a91c9ea0c2853922084d099f0d43ccd52046ed00"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End wf_proof_up.",
            "VernacEndSegment",
            "7a62755389c43c5007d92faac750a8fa06bf7857"
        ],
        [
            "Hint Resolve Zwf_up_well_founded: datatypes.",
            "VernacHints",
            "868114b47841d9cd5e32d605325cad122c01dab6"
        ]
    ],
    "proofs": [
        {
            "name": "Zwf_well_founded",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "assert (forall (n:nat) (a:Z), (f a < n)%nat \\/ a < c -> Acc (Zwf c) a).",
                        "VernacExtend",
                        "a118f544228c5a0a0ee1916e360f1c66dd377c6b"
                    ]
                },
                {
                    "command": [
                        "clear a; simple induction n; intros.",
                        "VernacExtend",
                        "a845a5171d97adb17e005060afd81f09873d536d"
                    ]
                },
                {
                    "command": [
                        "case H; intros.",
                        "VernacExtend",
                        "5c1fb684f521eaf2dc536a242d9fcc76d93c85b6"
                    ]
                },
                {
                    "command": [
                        "case (lt_n_O (f a)); auto.",
                        "VernacExtend",
                        "fad9e6b0822697371367aa1ee3f605c17cdf4a9f"
                    ]
                },
                {
                    "command": [
                        "apply Acc_intro; unfold Zwf; intros.",
                        "VernacExtend",
                        "c12a7fa19db0a8d094965f66d8de9fb1db755e5e"
                    ]
                },
                {
                    "command": [
                        "assert False; omega || contradiction.",
                        "VernacExtend",
                        "95c62f3b16e92b51889d4a2514fe398669171d83"
                    ]
                },
                {
                    "command": [
                        "case H0; clear H0; intro; auto.",
                        "VernacExtend",
                        "0248e7788a9b29033d8dab6989ee0dfeebbeb226"
                    ]
                },
                {
                    "command": [
                        "apply Acc_intro; intros.",
                        "VernacExtend",
                        "8fba32424572b3e59fae31cf5b031e0ce3967014"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "unfold Zwf in H1.",
                        "VernacExtend",
                        "defae4a8a3818e848997e92faadcd7816d7b8a76"
                    ]
                },
                {
                    "command": [
                        "case (Z.le_gt_cases c y); intro; auto with zarith.",
                        "VernacExtend",
                        "7eae12b1a6c3e825bb56ac15b56ba027a2f868ce"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "red in H0.",
                        "VernacExtend",
                        "3e33e4fdada8386783e8311d1d4116d148279cb2"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (f a); auto with arith.",
                        "VernacExtend",
                        "6fa487c2fe178a736f2a08bf5c231c69f37fd657"
                    ]
                },
                {
                    "command": [
                        "unfold f.",
                        "VernacExtend",
                        "54a386f4161710b69df4a2025df24a14e842ecf2"
                    ]
                },
                {
                    "command": [
                        "apply Zabs2Nat.inj_lt; omega.",
                        "VernacExtend",
                        "455735fe8e7da008c5a059f09c2549ff29e5007f"
                    ]
                },
                {
                    "command": [
                        "apply (H (S (f a))); auto.",
                        "VernacExtend",
                        "8b8d9a0655d0ee91a2c51d48a66ff3ba89b80249"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zwf_up_well_founded",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "apply well_founded_lt_compat with (f := f).",
                        "VernacExtend",
                        "f6d282a90e6628633ad73a94d07775cbe520bb36"
                    ]
                },
                {
                    "command": [
                        "unfold Zwf_up, f.",
                        "VernacExtend",
                        "8e0569508923644b1e21e61c88e1e8331d67b794"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Zabs2Nat.inj_lt; try (apply Z.le_0_sub; intuition).",
                        "VernacExtend",
                        "33247969cad009c1a113dfbeefb1efa7c4bac1c6"
                    ]
                },
                {
                    "command": [
                        "now apply Z.sub_lt_mono_l.",
                        "VernacExtend",
                        "a91c9ea0c2853922084d099f0d43ccd52046ed00"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}