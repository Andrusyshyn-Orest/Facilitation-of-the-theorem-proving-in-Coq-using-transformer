{
    "filename": "theories/ZArith/Int.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import BinInt.",
            "VernacRequire",
            "d922a191d1694566100a4f0ec574bf4dd034bf1f"
        ],
        [
            "Delimit Scope Int_scope with I.",
            "VernacDelimiters",
            "9c797d69dc24ed7253778fa881a104015640a06d"
        ],
        [
            "Local Open Scope Int_scope.",
            "VernacOpenCloseScope",
            "7ceb4e893c3620e71cc3f8f031adbda11a943f86"
        ],
        [
            "Module Type Int.",
            "VernacDeclareModuleType",
            "40535536e7a381ffe342d46f6c647753dfa8ceea"
        ],
        [
            "Parameter t : Set.",
            "VernacAssumption",
            "76f59c256867a995da6d0a99f0a6e736749fbc7b"
        ],
        [
            "Bind Scope Int_scope with t.",
            "VernacBindScope",
            "9d32a92a3f1798f57bc737614ce715c6a3d21581"
        ],
        [
            "Parameter i2z : t -> Z.",
            "VernacAssumption",
            "811ed71d1417b9521f8b885f73be0db93d25df02"
        ],
        [
            "Parameter _0 : t.",
            "VernacAssumption",
            "09210b8ef97261a9fcfb75b9b8ca6f2bd8f45d8f"
        ],
        [
            "Parameter _1 : t.",
            "VernacAssumption",
            "1fb97819fbc2fbc6a01f4bc1d13b428588f69730"
        ],
        [
            "Parameter _2 : t.",
            "VernacAssumption",
            "8a1a522a5578564eaf53471c9d5a5cd7c11c7082"
        ],
        [
            "Parameter _3 : t.",
            "VernacAssumption",
            "4c873c7593c6526c2fb5d4fe0c9dcc6d71b303fe"
        ],
        [
            "Parameter add : t -> t -> t.",
            "VernacAssumption",
            "e14057b48ea15d1d53285aa50226ff4c0d8c8dd0"
        ],
        [
            "Parameter opp : t -> t.",
            "VernacAssumption",
            "c55ba4a98183de7c87eada9ef254d814ff0538a0"
        ],
        [
            "Parameter sub : t -> t -> t.",
            "VernacAssumption",
            "fa9df00ee3e0e966106a80c32e581e14d8be93a6"
        ],
        [
            "Parameter mul : t -> t -> t.",
            "VernacAssumption",
            "d979da97eb08626ad4c49d4b9f8ee00e74b4a2fe"
        ],
        [
            "Parameter max : t -> t -> t.",
            "VernacAssumption",
            "4394a8f04ac2b1d85599cf23d765e4dc52d23540"
        ],
        [
            "Notation \"0\" := _0 : Int_scope.",
            "VernacNotation",
            "1ee5ccd861ac773ba3cc5edc0bddd7191e1f029d"
        ],
        [
            "Notation \"1\" := _1 : Int_scope.",
            "VernacNotation",
            "60a7cc4fd49d6b19424df90e75bc1c100668c4f8"
        ],
        [
            "Notation \"2\" := _2 : Int_scope.",
            "VernacNotation",
            "ddeb4c0de253fb133fee3dcb6dbfef1a2e4b7c9e"
        ],
        [
            "Notation \"3\" := _3 : Int_scope.",
            "VernacNotation",
            "8985df67b0038814c6108b0e2451190dc7ded4c9"
        ],
        [
            "Infix \"+\" := add : Int_scope.",
            "VernacInfix",
            "747eb533d261deb4958692511e31b78a95b98d99"
        ],
        [
            "Infix \"-\" := sub : Int_scope.",
            "VernacInfix",
            "c82bc02df0ac6b3a5a3946743e393f543fdf956e"
        ],
        [
            "Infix \"*\" := mul : Int_scope.",
            "VernacInfix",
            "97a7107f4d88e6e57fa9c463a7052a811df25c89"
        ],
        [
            "Notation \"- x\" := (opp x) : Int_scope.",
            "VernacNotation",
            "db3dc0fad47aa1bfac6da2654cfe1d76c4eee77f"
        ],
        [
            "Notation \"x == y\" := (i2z x = i2z y) (at level 70, y at next level, no associativity) : Int_scope.",
            "VernacNotation",
            "4f9584aca619b39f3c66a41fd5be0c084c5d0277"
        ],
        [
            "Notation \"x <= y\" := (i2z x <= i2z y)%Z : Int_scope.",
            "VernacNotation",
            "1c0fffb0b4cd69180a94acbe9ef1ca772260df5f"
        ],
        [
            "Notation \"x < y\" := (i2z x < i2z y)%Z : Int_scope.",
            "VernacNotation",
            "46d5e2e7d7a2c89492128829595e61aaa188e2f5"
        ],
        [
            "Notation \"x >= y\" := (i2z x >= i2z y)%Z : Int_scope.",
            "VernacNotation",
            "73b2184cb1b14861c628965a98bc955fe2036f0e"
        ],
        [
            "Notation \"x > y\" := (i2z x > i2z y)%Z : Int_scope.",
            "VernacNotation",
            "2a179b40c54086798292bd5b547713e8def5f4fa"
        ],
        [
            "Notation \"x <= y <= z\" := (x <= y /\\ y <= z) : Int_scope.",
            "VernacNotation",
            "76b4dacc79b9a8cb056b6b64ed3865bf79436d82"
        ],
        [
            "Notation \"x <= y < z\" := (x <= y /\\ y < z) : Int_scope.",
            "VernacNotation",
            "be946ad2d86ddb09e9b9b48804c46c32ab52d273"
        ],
        [
            "Notation \"x < y < z\" := (x < y /\\ y < z) : Int_scope.",
            "VernacNotation",
            "84a360543a91607f05b73f7530cd224f08f0b77c"
        ],
        [
            "Notation \"x < y <= z\" := (x < y /\\ y <= z) : Int_scope.",
            "VernacNotation",
            "2521c603638a9f54d364996d50571b0249b892c8"
        ],
        [
            "Axiom eqb : t -> t -> bool.",
            "VernacAssumption",
            "e50b874be0ab92bba968658a8f00a920c05b4ee7"
        ],
        [
            "Axiom ltb : t -> t -> bool.",
            "VernacAssumption",
            "eaf7d76542ba93cd18ded75df2f7f21a7f8247a5"
        ],
        [
            "Axiom leb : t -> t -> bool.",
            "VernacAssumption",
            "637f96e8390b7be5c821698d871468fb6b103a91"
        ],
        [
            "Infix \"=?\" := eqb.",
            "VernacInfix",
            "17367266d5fcc75485194a7f895fac6cd5e73cd1"
        ],
        [
            "Infix \"<?\" := ltb.",
            "VernacInfix",
            "19680ccc32f0e22f2d3e03cc7526cf6e62e16678"
        ],
        [
            "Infix \"<=?\" := leb.",
            "VernacInfix",
            "1301e4b0cbc340e8786e01be0ee0a1d82ecbe072"
        ],
        [
            "Axiom gt_le_dec : forall x y : t, {x > y} + {x <= y}.",
            "VernacAssumption",
            "8d6c5d4fd8ffa4962ccd26a2adb8c960887384ac"
        ],
        [
            "Axiom ge_lt_dec : forall x y : t, {x >= y} + {x < y}.",
            "VernacAssumption",
            "96ec4c1e22fd2e1371b16ce0ad7eed8f9e7d9b69"
        ],
        [
            "Axiom eq_dec : forall x y : t, { x == y } + {~ x==y }.",
            "VernacAssumption",
            "c6f95da8eadd2092a8ee62619fad0de9c2b85539"
        ],
        [
            "Axiom i2z_eq : forall n p : t, n == p -> n = p.",
            "VernacAssumption",
            "af20f8b188a674be581adcbccad5d685577ba67d"
        ],
        [
            "Axiom i2z_0 : i2z _0 = 0%Z.",
            "VernacAssumption",
            "c41374c48cec3f491614cea8327b63bfdffbc6b2"
        ],
        [
            "Axiom i2z_1 : i2z _1 = 1%Z.",
            "VernacAssumption",
            "3c579b0e57d217c881cfa5b24c9a62e1e1419309"
        ],
        [
            "Axiom i2z_2 : i2z _2 = 2%Z.",
            "VernacAssumption",
            "3f3c64ba42ff1a85b67e57a92c7435023ad250ec"
        ],
        [
            "Axiom i2z_3 : i2z _3 = 3%Z.",
            "VernacAssumption",
            "7d45a8b302b23e253c48764cd04722ccb52106f8"
        ],
        [
            "Axiom i2z_add : forall n p, i2z (n + p) = (i2z n + i2z p)%Z.",
            "VernacAssumption",
            "83d36dd4242a242e5f70a7fcee2a66981fa9e660"
        ],
        [
            "Axiom i2z_opp : forall n, i2z (-n) = (-i2z n)%Z.",
            "VernacAssumption",
            "27b57c66e05c719675bdd778f0d4e4a76aa964cd"
        ],
        [
            "Axiom i2z_sub : forall n p, i2z (n - p) = (i2z n - i2z p)%Z.",
            "VernacAssumption",
            "cbeec12a13b51ba8cf4177739f5dffadba5abcac"
        ],
        [
            "Axiom i2z_mul : forall n p, i2z (n * p) = (i2z n * i2z p)%Z.",
            "VernacAssumption",
            "7d323ef53f07200e006799fe92ebbecfbd5f3cfb"
        ],
        [
            "Axiom i2z_max : forall n p, i2z (max n p) = Z.max (i2z n) (i2z p).",
            "VernacAssumption",
            "5e8f4db6cfae6595282da5e28c84b186eb5e8131"
        ],
        [
            "Axiom i2z_eqb : forall n p, eqb n p = Z.eqb (i2z n) (i2z p).",
            "VernacAssumption",
            "1e8bdbd88dc86ca50e6f84370de27563c22045a4"
        ],
        [
            "Axiom i2z_ltb : forall n p, ltb n p = Z.ltb (i2z n) (i2z p).",
            "VernacAssumption",
            "b62954672d1fecfdf3a5a0654bf0a4c2aa1fb07e"
        ],
        [
            "Axiom i2z_leb : forall n p, leb n p = Z.leb (i2z n) (i2z p).",
            "VernacAssumption",
            "dc8c9dcac72dd396ddc0eba44a8da4209424ca3f"
        ],
        [
            "End Int.",
            "VernacEndSegment",
            "b60005fd5875cfb2aba46a0ab5058049e77a5deb"
        ],
        [
            "Module MoreInt (Import I:Int).",
            "VernacDefineModule",
            "56e82cb3abb182d49a496e80a07aefe5e824925b"
        ],
        [
            "Local Notation int := I.t.",
            "VernacSyntacticDefinition",
            "9e0664327a1f0963deed0dedf5650ea2ed18c469"
        ],
        [
            "Lemma eqb_eq n p : (n =? p) = true <-> n == p.",
            "VernacStartTheoremProof",
            "2782cf0ff308c767455ee4687cde42c16b1ad7df"
        ],
        [
            "now rewrite i2z_eqb, Z.eqb_eq.",
            "VernacExtend",
            "5094ce8906006de5392c574ec91ba3cd2a0c48f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqb_neq n p : (n =? p) = false <-> ~(n == p).",
            "VernacStartTheoremProof",
            "622596405aeb55586c4938884bf86e1c8e09b1bc"
        ],
        [
            "rewrite <- eqb_eq.",
            "VernacExtend",
            "20c29b97a5248ed52de92e8a23c7bbc3fe8c5387"
        ],
        [
            "destruct (n =? p); intuition.",
            "VernacExtend",
            "087be6dd27d81cc7c916101cf29eab3d2a8589db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltb_lt n p : (n <? p) = true <-> n < p.",
            "VernacStartTheoremProof",
            "066293dd80be24031e61ea570072fc1db02634d3"
        ],
        [
            "now rewrite i2z_ltb, Z.ltb_lt.",
            "VernacExtend",
            "cbaebb980a8f3832897f9ae10bf6f3399c7dfda9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ltb_nlt n p : (n <? p) = false <-> ~(n < p).",
            "VernacStartTheoremProof",
            "09f26274e4a3db139ce64e9badb348a9904c92d9"
        ],
        [
            "rewrite <- ltb_lt.",
            "VernacExtend",
            "ed482e4e4f2cf03d138624544221ee99beb8a286"
        ],
        [
            "destruct (n <? p); intuition.",
            "VernacExtend",
            "b42a9815565e8d1bf16403d6ac34ecb0647041e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leb_le n p : (n <=? p) = true <-> n <= p.",
            "VernacStartTheoremProof",
            "d786478dabe6a3ec04c84a85f1bb1cf16efa8168"
        ],
        [
            "now rewrite i2z_leb, Z.leb_le.",
            "VernacExtend",
            "8c7b6a0fbccd8fcbfb7ab66e15d15271fd14d67c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leb_nle n p : (n <=? p) = false <-> ~(n <= p).",
            "VernacStartTheoremProof",
            "b7345b78f71646e613bfbd4bf30ac26693b0767a"
        ],
        [
            "rewrite <- leb_le.",
            "VernacExtend",
            "07b8de82880f944c45d9e664c7e125478a6696b8"
        ],
        [
            "destruct (n <=? p); intuition.",
            "VernacExtend",
            "1c2994cef921391be121ea1adea5818303fffdcd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite -> i2z_0 i2z_1 i2z_2 i2z_3 i2z_add i2z_opp i2z_sub i2z_mul i2z_max i2z_eqb i2z_ltb i2z_leb : i2z.",
            "VernacExtend",
            "89d05b43e75f8af04e9117b4ba1e426129614a13"
        ],
        [
            "Ltac i2z := match goal with | H : ?a = ?b |- _ => generalize (f_equal i2z H); try autorewrite with i2z; clear H; intro H; i2z | |- ?a = ?b => apply (i2z_eq a b); try autorewrite with i2z; i2z | H : _ |- _ => progress autorewrite with i2z in H; i2z | _ => try autorewrite with i2z end.",
            "VernacExtend",
            "3b7d6d7bae719f5b0f688c8c726124e5821726bb"
        ],
        [
            "Ltac i2z_gen := match goal with | |- ?a = ?b => apply (i2z_eq a b); i2z_gen | H : ?a = ?b |- _ => generalize (f_equal i2z H); clear H; i2z_gen | H : eq (A:=Z) ?a ?b |- _ => revert H; i2z_gen | H : Z.lt ?a ?b |- _ => revert H; i2z_gen | H : Z.le ?a ?b |- _ => revert H; i2z_gen | H : Z.gt ?a ?b |- _ => revert H; i2z_gen | H : Z.ge ?a ?b |- _ => revert H; i2z_gen | H : _ -> ?X |- _ => match type of X with | Type => clear H; i2z_gen | Prop => revert H; i2z_gen end | H : _ <-> _ |- _ => revert H; i2z_gen | H : _ /\\ _ |- _ => revert H; i2z_gen | H : _ \\/ _ |- _ => revert H; i2z_gen | H : ~ _ |- _ => revert H; i2z_gen | _ => idtac end.",
            "VernacExtend",
            "c48c924be2337d5bef376785cf08abf175e48ae7"
        ],
        [
            "Inductive ExprI : Set := | EI0 : ExprI | EI1 : ExprI | EI2 : ExprI | EI3 : ExprI | EIadd : ExprI -> ExprI -> ExprI | EIopp : ExprI -> ExprI | EIsub : ExprI -> ExprI -> ExprI | EImul : ExprI -> ExprI -> ExprI | EImax : ExprI -> ExprI -> ExprI | EIraw : int -> ExprI.",
            "VernacInductive",
            "c94ec3c6f19af9f13338b96a95441ed539779d2a"
        ],
        [
            "Inductive ExprZ : Set := | EZadd : ExprZ -> ExprZ -> ExprZ | EZopp : ExprZ -> ExprZ | EZsub : ExprZ -> ExprZ -> ExprZ | EZmul : ExprZ -> ExprZ -> ExprZ | EZmax : ExprZ -> ExprZ -> ExprZ | EZofI : ExprI -> ExprZ | EZraw : Z -> ExprZ.",
            "VernacInductive",
            "106d25ba588a3c19524900189cf0aeaccf3c33dd"
        ],
        [
            "Inductive ExprP : Type := | EPeq : ExprZ -> ExprZ -> ExprP | EPlt : ExprZ -> ExprZ -> ExprP | EPle : ExprZ -> ExprZ -> ExprP | EPgt : ExprZ -> ExprZ -> ExprP | EPge : ExprZ -> ExprZ -> ExprP | EPimpl : ExprP -> ExprP -> ExprP | EPequiv : ExprP -> ExprP -> ExprP | EPand : ExprP -> ExprP -> ExprP | EPor : ExprP -> ExprP -> ExprP | EPneg : ExprP -> ExprP | EPraw : Prop -> ExprP.",
            "VernacInductive",
            "f43ffab610b23d3695eb6dffc14e5cbbd3ed08c9"
        ],
        [
            "Ltac i2ei trm := match constr:(trm) with | 0 => constr:(EI0) | 1 => constr:(EI1) | 2 => constr:(EI2) | 3 => constr:(EI3) | ?x + ?y => let ex := i2ei x with ey := i2ei y in constr:(EIadd ex ey) | ?x - ?y => let ex := i2ei x with ey := i2ei y in constr:(EIsub ex ey) | ?x * ?y => let ex := i2ei x with ey := i2ei y in constr:(EImul ex ey) | max ?x ?y => let ex := i2ei x with ey := i2ei y in constr:(EImax ex ey) | - ?x => let ex := i2ei x in constr:(EIopp ex) | ?x => constr:(EIraw x) end with z2ez trm := match constr:(trm) with | (?x + ?y)%Z => let ex := z2ez x with ey := z2ez y in constr:(EZadd ex ey) | (?x - ?y)%Z => let ex := z2ez x with ey := z2ez y in constr:(EZsub ex ey) | (?x * ?y)%Z => let ex := z2ez x with ey := z2ez y in constr:(EZmul ex ey) | (Z.max ?x ?y) => let ex := z2ez x with ey := z2ez y in constr:(EZmax ex ey) | (- ?x)%Z => let ex := z2ez x in constr:(EZopp ex) | i2z ?x => let ex := i2ei x in constr:(EZofI ex) | ?x => constr:(EZraw x) end.",
            "VernacExtend",
            "d330883c7ed155f5e9323a3fbeccbd30eb95ddbe"
        ],
        [
            "Ltac p2ep trm := match constr:(trm) with | (?x <-> ?y) => let ex := p2ep x with ey := p2ep y in constr:(EPequiv ex ey) | (?x -> ?y) => let ex := p2ep x with ey := p2ep y in constr:(EPimpl ex ey) | (?x /\\ ?y) => let ex := p2ep x with ey := p2ep y in constr:(EPand ex ey) | (?x \\/ ?y) => let ex := p2ep x with ey := p2ep y in constr:(EPor ex ey) | (~ ?x) => let ex := p2ep x in constr:(EPneg ex) | (eq (A:=Z) ?x ?y) => let ex := z2ez x with ey := z2ez y in constr:(EPeq ex ey) | (?x < ?y)%Z => let ex := z2ez x with ey := z2ez y in constr:(EPlt ex ey) | (?x <= ?y)%Z => let ex := z2ez x with ey := z2ez y in constr:(EPle ex ey) | (?x > ?y)%Z => let ex := z2ez x with ey := z2ez y in constr:(EPgt ex ey) | (?x >= ?y)%Z => let ex := z2ez x with ey := z2ez y in constr:(EPge ex ey) | ?x => constr:(EPraw x) end.",
            "VernacExtend",
            "335db5970e9d74a658b5c60c1d15a52b1d18415f"
        ],
        [
            "Fixpoint ei2i (e:ExprI) : int := match e with | EI0 => 0 | EI1 => 1 | EI2 => 2 | EI3 => 3 | EIadd e1 e2 => (ei2i e1)+(ei2i e2) | EIsub e1 e2 => (ei2i e1)-(ei2i e2) | EImul e1 e2 => (ei2i e1)*(ei2i e2) | EImax e1 e2 => max (ei2i e1) (ei2i e2) | EIopp e => -(ei2i e) | EIraw i => i end.",
            "VernacFixpoint",
            "e48ba9d6d744969ae3a1e928350623d188721682"
        ],
        [
            "Fixpoint ez2z (e:ExprZ) : Z := match e with | EZadd e1 e2 => ((ez2z e1)+(ez2z e2))%Z | EZsub e1 e2 => ((ez2z e1)-(ez2z e2))%Z | EZmul e1 e2 => ((ez2z e1)*(ez2z e2))%Z | EZmax e1 e2 => Z.max (ez2z e1) (ez2z e2) | EZopp e => (-(ez2z e))%Z | EZofI e => i2z (ei2i e) | EZraw z => z end.",
            "VernacFixpoint",
            "04151d73ce82853e28e722418ae98c974f025ed9"
        ],
        [
            "Fixpoint ep2p (e:ExprP) : Prop := match e with | EPeq e1 e2 => (ez2z e1) = (ez2z e2) | EPlt e1 e2 => ((ez2z e1)<(ez2z e2))%Z | EPle e1 e2 => ((ez2z e1)<=(ez2z e2))%Z | EPgt e1 e2 => ((ez2z e1)>(ez2z e2))%Z | EPge e1 e2 => ((ez2z e1)>=(ez2z e2))%Z | EPimpl e1 e2 => (ep2p e1) -> (ep2p e2) | EPequiv e1 e2 => (ep2p e1) <-> (ep2p e2) | EPand e1 e2 => (ep2p e1) /\\ (ep2p e2) | EPor e1 e2 => (ep2p e1) \\/ (ep2p e2) | EPneg e => ~ (ep2p e) | EPraw p => p end.",
            "VernacFixpoint",
            "f8f63b4f1396899ea5c4f05b7558a3758b960cc8"
        ],
        [
            "Fixpoint norm_ei (e:ExprI) : ExprZ := match e with | EI0 => EZraw (0%Z) | EI1 => EZraw (1%Z) | EI2 => EZraw (2%Z) | EI3 => EZraw (3%Z) | EIadd e1 e2 => EZadd (norm_ei e1) (norm_ei e2) | EIsub e1 e2 => EZsub (norm_ei e1) (norm_ei e2) | EImul e1 e2 => EZmul (norm_ei e1) (norm_ei e2) | EImax e1 e2 => EZmax (norm_ei e1) (norm_ei e2) | EIopp e => EZopp (norm_ei e) | EIraw i => EZofI (EIraw i) end.",
            "VernacFixpoint",
            "d2f6557b07edbba21ce5fd50d05c57bb58c10ecf"
        ],
        [
            "Fixpoint norm_ez (e:ExprZ) : ExprZ := match e with | EZadd e1 e2 => EZadd (norm_ez e1) (norm_ez e2) | EZsub e1 e2 => EZsub (norm_ez e1) (norm_ez e2) | EZmul e1 e2 => EZmul (norm_ez e1) (norm_ez e2) | EZmax e1 e2 => EZmax (norm_ez e1) (norm_ez e2) | EZopp e => EZopp (norm_ez e) | EZofI e => norm_ei e | EZraw z => EZraw z end.",
            "VernacFixpoint",
            "7b1911fa18d9a974829e10f75b08d0ea4cf10c70"
        ],
        [
            "Fixpoint norm_ep (e:ExprP) : ExprP := match e with | EPeq e1 e2 => EPeq (norm_ez e1) (norm_ez e2) | EPlt e1 e2 => EPlt (norm_ez e1) (norm_ez e2) | EPle e1 e2 => EPle (norm_ez e1) (norm_ez e2) | EPgt e1 e2 => EPgt (norm_ez e1) (norm_ez e2) | EPge e1 e2 => EPge (norm_ez e1) (norm_ez e2) | EPimpl e1 e2 => EPimpl (norm_ep e1) (norm_ep e2) | EPequiv e1 e2 => EPequiv (norm_ep e1) (norm_ep e2) | EPand e1 e2 => EPand (norm_ep e1) (norm_ep e2) | EPor e1 e2 => EPor (norm_ep e1) (norm_ep e2) | EPneg e => EPneg (norm_ep e) | EPraw p => EPraw p end.",
            "VernacFixpoint",
            "baf7121dd5f04718cae4e3410159855fd517abba"
        ],
        [
            "Lemma norm_ei_correct (e:ExprI) : ez2z (norm_ei e) = i2z (ei2i e).",
            "VernacStartTheoremProof",
            "2a16eedc2dca6c986417c2e3c2ec1310f29b2f7b"
        ],
        [
            "induction e; simpl; i2z; auto; try congruence.",
            "VernacExtend",
            "3c0110decbd556f17a14961739c15210c8303536"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_ez_correct (e:ExprZ) : ez2z (norm_ez e) = ez2z e.",
            "VernacStartTheoremProof",
            "9be0dfb4253fdd77b971f5c34d8692a0844de3e1"
        ],
        [
            "induction e; simpl; i2z; auto; try congruence; apply norm_ei_correct.",
            "VernacExtend",
            "33c37e0b03c0948246ad93f2abbb620a38462a20"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_ep_correct (e:ExprP) : ep2p (norm_ep e) <-> ep2p e.",
            "VernacStartTheoremProof",
            "f1e7bf8727f038d32ad8659bc847e74eafc6f049"
        ],
        [
            "induction e; simpl; rewrite ?norm_ez_correct; intuition.",
            "VernacExtend",
            "cc3fd75f250ecc6e132f4aec258469a5cb9d7678"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma norm_ep_correct2 (e:ExprP) : ep2p (norm_ep e) -> ep2p e.",
            "VernacStartTheoremProof",
            "486782033757f1e513e1721ebd7222ad4f0c62e5"
        ],
        [
            "intros; destruct (norm_ep_correct e); auto.",
            "VernacExtend",
            "c545d12c0cc4b9b1290fcaa22b743336cc26a754"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac i2z_refl := i2z_gen; match goal with |- ?t => let e := p2ep t in change (ep2p e); apply norm_ep_correct2; simpl end.",
            "VernacExtend",
            "8d129195e23230199011043fe0e11ae730cadd25"
        ],
        [
            "End MoreInt.",
            "VernacEndSegment",
            "ad0eb3dcc2abed0839227b39428d645cbcfd917c"
        ],
        [
            "Module Z_as_Int <: Int.",
            "VernacDefineModule",
            "67e71801246ee08451e9e13117dfda5143604f86"
        ],
        [
            "Local Open Scope Z_scope.",
            "VernacOpenCloseScope",
            "5313930c0cd5fa63810c1c79463485ebf0638bad"
        ],
        [
            "Definition t := Z.",
            "VernacDefinition",
            "5dfdc482bb70d7c3bc7339c3ad45a8a268cb7633"
        ],
        [
            "Definition _0 := 0.",
            "VernacDefinition",
            "1b5725f6c5e1047e4780c08fd7c25f3f2f42571a"
        ],
        [
            "Definition _1 := 1.",
            "VernacDefinition",
            "d0082d978faac0ed3458b126259f8050b49e7ae5"
        ],
        [
            "Definition _2 := 2.",
            "VernacDefinition",
            "901cc8e5d544c86c4882f3b3fdd54c23bc991a88"
        ],
        [
            "Definition _3 := 3.",
            "VernacDefinition",
            "eea9222dba8d2617eaf56eaf5a2973f0d4628d0e"
        ],
        [
            "Definition add := Z.add.",
            "VernacDefinition",
            "4167b9b157e230329e35479c8b96ec6f067bb649"
        ],
        [
            "Definition opp := Z.opp.",
            "VernacDefinition",
            "41caee95af9cab75f0d48d5fed319b2589f64d29"
        ],
        [
            "Definition sub := Z.sub.",
            "VernacDefinition",
            "1a4a4eee0ff90347bce8f7317cb61318a8ce217c"
        ],
        [
            "Definition mul := Z.mul.",
            "VernacDefinition",
            "fb2d0f231e4f3c33b6f0fb7ef8ed12f85f981e44"
        ],
        [
            "Definition max := Z.max.",
            "VernacDefinition",
            "35b58c842e03e9d0d6aac20b05708b697e2fb9b1"
        ],
        [
            "Definition eqb := Z.eqb.",
            "VernacDefinition",
            "b680ec2e64e56215f50a7dae0a523840ce2cb199"
        ],
        [
            "Definition ltb := Z.ltb.",
            "VernacDefinition",
            "f1d5751b1304690aa89e600c74231f4530533ce5"
        ],
        [
            "Definition leb := Z.leb.",
            "VernacDefinition",
            "033f7ba21db84dc6d1037bd610d2c6c36167f5a6"
        ],
        [
            "Definition eq_dec := Z.eq_dec.",
            "VernacDefinition",
            "5c3406e7b4cd889c82a3a807faa0b4cf71ab4f90"
        ],
        [
            "Definition gt_le_dec i j : {i > j} + { i <= j }.",
            "VernacDefinition",
            "738eaa703422fef4435a7fe5283f98924c09e1b8"
        ],
        [
            "generalize (Z.ltb_spec j i).",
            "VernacExtend",
            "51fa8cbbdd32bba844ebecda79dd7d0d007bc1a2"
        ],
        [
            "destruct (j <? i); [left|right]; inversion H; trivial.",
            "VernacExtend",
            "2981ee1e4dbe0e3ec34a3e79d169a9f8130693b8"
        ],
        [
            "now apply Z.lt_gt.",
            "VernacExtend",
            "a12b3f7120c8bf221dcdfecb79d18cbf5c2e2b35"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition ge_lt_dec i j : {i >= j} + { i < j }.",
            "VernacDefinition",
            "37121ce4655f13a782ba4546e6b1345ca7ff1d20"
        ],
        [
            "generalize (Z.ltb_spec i j).",
            "VernacExtend",
            "be95c11d9765c23c3f58323e8920c0dcb2e76b91"
        ],
        [
            "destruct (i <? j); [right|left]; inversion H; trivial.",
            "VernacExtend",
            "d8e3f9bf389e01b81118ef0d94a584855dee6609"
        ],
        [
            "now apply Z.le_ge.",
            "VernacExtend",
            "2525c19e07402009d50169d702f301ea18b2dfd9"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition i2z : t -> Z := fun n => n.",
            "VernacDefinition",
            "c3c4b78869a13daedc6d8d8b0471099a2dcd4b89"
        ],
        [
            "Lemma i2z_eq n p : i2z n = i2z p -> n = p.",
            "VernacStartTheoremProof",
            "bdb92ca65510392cf798aface916c96dd3f8126a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma i2z_0 : i2z _0 = 0.",
            "VernacStartTheoremProof",
            "94c5915c37a7a443727b2d79053b047888365614"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma i2z_1 : i2z _1 = 1.",
            "VernacStartTheoremProof",
            "6c6e10fb7a76d1c31984297a5fb5be136005ccec"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma i2z_2 : i2z _2 = 2.",
            "VernacStartTheoremProof",
            "d6374394ef23e4222343bf591b2e507b9cf74544"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma i2z_3 : i2z _3 = 3.",
            "VernacStartTheoremProof",
            "d594d9f6803818a3adb82835e5b28a3f12851d26"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma i2z_add n p : i2z (n + p) = i2z n + i2z p.",
            "VernacStartTheoremProof",
            "5e5d35525b839c8538d8416ca77c486f3d5e6dba"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma i2z_opp n : i2z (- n) = - i2z n.",
            "VernacStartTheoremProof",
            "acbd3d5d0befa5c262c49606e29f4bbb471e9ff1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma i2z_sub n p : i2z (n - p) = i2z n - i2z p.",
            "VernacStartTheoremProof",
            "2a322368fe5720a857fc66fcfaf6a98301d89386"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma i2z_mul n p : i2z (n * p) = i2z n * i2z p.",
            "VernacStartTheoremProof",
            "e3092028bc72bb0636e57abcd29ed8d23549eb2e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma i2z_max n p : i2z (max n p) = Z.max (i2z n) (i2z p).",
            "VernacStartTheoremProof",
            "e17274abfed52709a28f684c3a881d2b3d4f682d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma i2z_eqb n p : eqb n p = Z.eqb (i2z n) (i2z p).",
            "VernacStartTheoremProof",
            "5f1d6b343d4a2181aed12a1806aebcb82641da4b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma i2z_leb n p : leb n p = Z.leb (i2z n) (i2z p).",
            "VernacStartTheoremProof",
            "1f9e83231e77c43853f51596c31673072e2ae176"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma i2z_ltb n p : ltb n p = Z.ltb (i2z n) (i2z p).",
            "VernacStartTheoremProof",
            "78ad8d9b1851df830420100e089a614c769d5fa1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation plus := add (only parsing).",
            "VernacSyntacticDefinition",
            "760f290473dc4d5857096622e6fd29f3bd208511"
        ],
        [
            "Notation minus := sub (only parsing).",
            "VernacSyntacticDefinition",
            "78a2f696b1645d3a5d0ddbc80d7575a6947f1e27"
        ],
        [
            "Notation mult := mul (only parsing).",
            "VernacSyntacticDefinition",
            "0cd86d15f6e6efca00c406d17fac94dadd2df466"
        ],
        [
            "End Z_as_Int.",
            "VernacEndSegment",
            "caf4edebfe4af46778fda3f28c76d520fb0a9214"
        ]
    ],
    "proofs": [
        {
            "name": "eqb_eq",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "now rewrite i2z_eqb, Z.eqb_eq.",
                        "VernacExtend",
                        "5094ce8906006de5392c574ec91ba3cd2a0c48f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqb_neq",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "rewrite <- eqb_eq.",
                        "VernacExtend",
                        "20c29b97a5248ed52de92e8a23c7bbc3fe8c5387"
                    ]
                },
                {
                    "command": [
                        "destruct (n =? p); intuition.",
                        "VernacExtend",
                        "087be6dd27d81cc7c916101cf29eab3d2a8589db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltb_lt",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "now rewrite i2z_ltb, Z.ltb_lt.",
                        "VernacExtend",
                        "cbaebb980a8f3832897f9ae10bf6f3399c7dfda9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltb_nlt",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "rewrite <- ltb_lt.",
                        "VernacExtend",
                        "ed482e4e4f2cf03d138624544221ee99beb8a286"
                    ]
                },
                {
                    "command": [
                        "destruct (n <? p); intuition.",
                        "VernacExtend",
                        "b42a9815565e8d1bf16403d6ac34ecb0647041e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leb_le",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "now rewrite i2z_leb, Z.leb_le.",
                        "VernacExtend",
                        "8c7b6a0fbccd8fcbfb7ab66e15d15271fd14d67c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leb_nle",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "rewrite <- leb_le.",
                        "VernacExtend",
                        "07b8de82880f944c45d9e664c7e125478a6696b8"
                    ]
                },
                {
                    "command": [
                        "destruct (n <=? p); intuition.",
                        "VernacExtend",
                        "1c2994cef921391be121ea1adea5818303fffdcd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_ei_correct",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "induction e; simpl; i2z; auto; try congruence.",
                        "VernacExtend",
                        "3c0110decbd556f17a14961739c15210c8303536"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_ez_correct",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "induction e; simpl; i2z; auto; try congruence; apply norm_ei_correct.",
                        "VernacExtend",
                        "33c37e0b03c0948246ad93f2abbb620a38462a20"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_ep_correct",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "induction e; simpl; rewrite ?norm_ez_correct; intuition.",
                        "VernacExtend",
                        "cc3fd75f250ecc6e132f4aec258469a5cb9d7678"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "norm_ep_correct2",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "intros; destruct (norm_ep_correct e); auto.",
                        "VernacExtend",
                        "c545d12c0cc4b9b1290fcaa22b743336cc26a754"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt_le_dec",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "generalize (Z.ltb_spec j i).",
                        "VernacExtend",
                        "51fa8cbbdd32bba844ebecda79dd7d0d007bc1a2"
                    ]
                },
                {
                    "command": [
                        "destruct (j <? i); [left|right]; inversion H; trivial.",
                        "VernacExtend",
                        "2981ee1e4dbe0e3ec34a3e79d169a9f8130693b8"
                    ]
                },
                {
                    "command": [
                        "now apply Z.lt_gt.",
                        "VernacExtend",
                        "a12b3f7120c8bf221dcdfecb79d18cbf5c2e2b35"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "ge_lt_dec",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "generalize (Z.ltb_spec i j).",
                        "VernacExtend",
                        "be95c11d9765c23c3f58323e8920c0dcb2e76b91"
                    ]
                },
                {
                    "command": [
                        "destruct (i <? j); [right|left]; inversion H; trivial.",
                        "VernacExtend",
                        "d8e3f9bf389e01b81118ef0d94a584855dee6609"
                    ]
                },
                {
                    "command": [
                        "now apply Z.le_ge.",
                        "VernacExtend",
                        "2525c19e07402009d50169d702f301ea18b2dfd9"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "i2z_eq",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "i2z_0",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "i2z_1",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "i2z_2",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "i2z_3",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "i2z_add",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "i2z_opp",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "i2z_sub",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "i2z_mul",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "i2z_max",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "i2z_eqb",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "i2z_leb",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "i2z_ltb",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}