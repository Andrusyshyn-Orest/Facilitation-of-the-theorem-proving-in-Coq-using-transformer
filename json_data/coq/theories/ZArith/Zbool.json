{
    "filename": "theories/ZArith/Zbool.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import BinInt.",
            "VernacRequire",
            "d922a191d1694566100a4f0ec574bf4dd034bf1f"
        ],
        [
            "Require Import Zeven.",
            "VernacRequire",
            "7809b077cc91d3e5b6626bc9e2c2a9ed80aaa161"
        ],
        [
            "Require Import Zorder.",
            "VernacRequire",
            "32848ffa453f0c44ffca117169827440cf54cd30"
        ],
        [
            "Require Import Zcompare.",
            "VernacRequire",
            "6cb4d1ecc827465c3efa43829f9f6c0079f918b4"
        ],
        [
            "Require Import ZArith_dec.",
            "VernacRequire",
            "d0c691fbdb31f12271dbb3e9416eb44657c02ac9"
        ],
        [
            "Require Import Sumbool.",
            "VernacRequire",
            "555a25fa361ace801dc7927d5872def951dfbee5"
        ],
        [
            "Local Open Scope Z_scope.",
            "VernacOpenCloseScope",
            "5313930c0cd5fa63810c1c79463485ebf0638bad"
        ],
        [
            "Definition Z_lt_ge_bool (x y:Z) := bool_of_sumbool (Z_lt_ge_dec x y).",
            "VernacDefinition",
            "305e621d0cd03dab07bc500ae2e70b187d19345d"
        ],
        [
            "Definition Z_ge_lt_bool (x y:Z) := bool_of_sumbool (Z_ge_lt_dec x y).",
            "VernacDefinition",
            "9758e6853cffa5491fc6bb813f292ae3581bbeb1"
        ],
        [
            "Definition Z_le_gt_bool (x y:Z) := bool_of_sumbool (Z_le_gt_dec x y).",
            "VernacDefinition",
            "224229e0d52a57079ef924240f10d99030fc56de"
        ],
        [
            "Definition Z_gt_le_bool (x y:Z) := bool_of_sumbool (Z_gt_le_dec x y).",
            "VernacDefinition",
            "4e2fbf67a307ca7b4e2ac01e00f720222a864039"
        ],
        [
            "Definition Z_eq_bool (x y:Z) := bool_of_sumbool (Z.eq_dec x y).",
            "VernacDefinition",
            "d2d9879923f2f4d15480f541ca6508286d663f62"
        ],
        [
            "Definition Z_noteq_bool (x y:Z) := bool_of_sumbool (Z_noteq_dec x y).",
            "VernacDefinition",
            "a26d776ec68e037b0635e55e5d8a9422e3e55a15"
        ],
        [
            "Definition Zeven_odd_bool (x:Z) := bool_of_sumbool (Zeven_odd_dec x).",
            "VernacDefinition",
            "c0a250478a6f90cd59d01874c10d059f85916e15"
        ],
        [
            "Notation Zle_bool := Z.leb (only parsing).",
            "VernacSyntacticDefinition",
            "f21955f5f9b0ede171047d333beb61452952e1e9"
        ],
        [
            "Notation Zge_bool := Z.geb (only parsing).",
            "VernacSyntacticDefinition",
            "b21c7d9c65dc23a699bf55ea518080c5ad7a19c5"
        ],
        [
            "Notation Zlt_bool := Z.ltb (only parsing).",
            "VernacSyntacticDefinition",
            "3f36bb207403f9fb230f316e64d8fe44339315c8"
        ],
        [
            "Notation Zgt_bool := Z.gtb (only parsing).",
            "VernacSyntacticDefinition",
            "ff0c1c875355277055341fb41684d19411fb7d1d"
        ],
        [
            "Definition Zeq_bool (x y:Z) := match x ?= y with | Eq => true | _ => false end.",
            "VernacDefinition",
            "20bc75b4cd7baa4d7c609c7d6b9c075c7363b081"
        ],
        [
            "Definition Zneq_bool (x y:Z) := match x ?= y with | Eq => false | _ => true end.",
            "VernacDefinition",
            "fb35b23449e1cf7cbfb42a76da11a19baaf9991d"
        ],
        [
            "Lemma Zle_cases n m : if n <=? m then n <= m else n > m.",
            "VernacStartTheoremProof",
            "13b87feede6b7eaa9cb28547e7a350084f8bd379"
        ],
        [
            "case Z.leb_spec; now Z.swap_greater.",
            "VernacExtend",
            "a18d0e976e6ef63fac9d0b2993767ccf61edb7d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlt_cases n m : if n <? m then n < m else n >= m.",
            "VernacStartTheoremProof",
            "73916f99a5c297a12fca98af124c1735fb6f2384"
        ],
        [
            "case Z.ltb_spec; now Z.swap_greater.",
            "VernacExtend",
            "8cf293f2f9ebd331d059e008e0b9d04153df19f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zge_cases n m : if n >=? m then n >= m else n < m.",
            "VernacStartTheoremProof",
            "9e79dc5db8d172572e21a8aba677ac691319c068"
        ],
        [
            "rewrite Z.geb_leb.",
            "VernacExtend",
            "bfca6b6684d26834e353a7ecfe9175daea479abf"
        ],
        [
            "case Z.leb_spec; now Z.swap_greater.",
            "VernacExtend",
            "a18d0e976e6ef63fac9d0b2993767ccf61edb7d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zgt_cases n m : if n >? m then n > m else n <= m.",
            "VernacStartTheoremProof",
            "91bfcb09363c2922c7b3d90de1b429f95aca92ff"
        ],
        [
            "rewrite Z.gtb_ltb.",
            "VernacExtend",
            "565c60386d146d38f33dcf92a8ca58dbffa9e25f"
        ],
        [
            "case Z.ltb_spec; now Z.swap_greater.",
            "VernacExtend",
            "8cf293f2f9ebd331d059e008e0b9d04153df19f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zle_bool_imp_le n m : (n <=? m) = true -> (n <= m).",
            "VernacStartTheoremProof",
            "f383a2fc758598321143710211acdd0e3629392f"
        ],
        [
            "apply Z.leb_le.",
            "VernacExtend",
            "33989f3d9b0dedbf1aff8f48ca9f38790441bd5e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zle_imp_le_bool n m : (n <= m) -> (n <=? m) = true.",
            "VernacStartTheoremProof",
            "9a964154dfec85632e109eb67227b6a4329a6e21"
        ],
        [
            "apply Z.leb_le.",
            "VernacExtend",
            "33989f3d9b0dedbf1aff8f48ca9f38790441bd5e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation Zle_bool_refl := Z.leb_refl (only parsing).",
            "VernacSyntacticDefinition",
            "31126d5e151b949044d988ae38a1ca1838535241"
        ],
        [
            "Lemma Zle_bool_antisym n m : (n <=? m) = true -> (m <=? n) = true -> n = m.",
            "VernacStartTheoremProof",
            "4e095824372dc9cedd1268b3c9e5c3eeb08fb267"
        ],
        [
            "rewrite !Z.leb_le.",
            "VernacExtend",
            "4dd7cb154c77ac42763c1e301a991ba0507db688"
        ],
        [
            "apply Z.le_antisymm.",
            "VernacExtend",
            "187d563edab8a2dfdc97a38fb07b06b9b4ad7002"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zle_bool_trans n m p : (n <=? m) = true -> (m <=? p) = true -> (n <=? p) = true.",
            "VernacStartTheoremProof",
            "c5986a198e95cad49fd33895d9d3204e52e2cf0f"
        ],
        [
            "rewrite !Z.leb_le.",
            "VernacExtend",
            "4dd7cb154c77ac42763c1e301a991ba0507db688"
        ],
        [
            "apply Z.le_trans.",
            "VernacExtend",
            "41d7305283af59600f813ddf5b143cacb0c734da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Zle_bool_total x y : { x <=? y = true } + { y <=? x = true }.",
            "VernacDefinition",
            "2daf6410525891bfcbc3b231d64b839d16e146c7"
        ],
        [
            "case_eq (x <=? y); intros H.",
            "VernacExtend",
            "34fce55038865127d8a75cc1b6279b922e056f29"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left; trivial.",
            "VernacExtend",
            "2f1efd67ff23560c270a9589d0d1b100a9c80732"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "apply Z.leb_gt in H.",
            "VernacExtend",
            "a4738b066abf181e68964cb6ea16a1bb2967386f"
        ],
        [
            "now apply Z.leb_le, Z.lt_le_incl.",
            "VernacExtend",
            "fa8c74e9659a9467d0e389116d28d739ba0880c4"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma Zle_bool_plus_mono n m p q : (n <=? m) = true -> (p <=? q) = true -> (n + p <=? m + q) = true.",
            "VernacStartTheoremProof",
            "d15da2c4ed4eb5e717a314605664e3b612bf6b77"
        ],
        [
            "rewrite !Z.leb_le.",
            "VernacExtend",
            "4dd7cb154c77ac42763c1e301a991ba0507db688"
        ],
        [
            "apply Z.add_le_mono.",
            "VernacExtend",
            "f890c079b670eb73d8fed3c0ce92f2d36e7a46a1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zone_pos : 1 <=? 0 = false.",
            "VernacStartTheoremProof",
            "717893e6023323595cde61183ed35316cfec8d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zone_min_pos n : (n <=? 0) = false -> (1 <=? n) = true.",
            "VernacStartTheoremProof",
            "0c8ba14fe535447ed92339dd00552c47129b701d"
        ],
        [
            "rewrite Z.leb_le, Z.leb_gt.",
            "VernacExtend",
            "7fc5e595584d87e63677ab3ee4c70201a90b50e8"
        ],
        [
            "apply Z.le_succ_l.",
            "VernacExtend",
            "831514d6ebda3fd5951c3d1b55dc52282df141d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zle_is_le_bool n m : (n <= m) <-> (n <=? m) = true.",
            "VernacStartTheoremProof",
            "69f0b4259e0c7059e571cb3f5b69605c5f614e97"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Z.leb_le.",
            "VernacExtend",
            "33989f3d9b0dedbf1aff8f48ca9f38790441bd5e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zge_is_le_bool n m : (n >= m) <-> (m <=? n) = true.",
            "VernacStartTheoremProof",
            "e088748d093d26e72000f916096267e066b1e770"
        ],
        [
            "Z.swap_greater.",
            "VernacExtend",
            "06530b44f9910a8fa914fb0bacdff3a61c4b80fa"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Z.leb_le.",
            "VernacExtend",
            "33989f3d9b0dedbf1aff8f48ca9f38790441bd5e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlt_is_lt_bool n m : (n < m) <-> (n <? m) = true.",
            "VernacStartTheoremProof",
            "b4488bdcafe6532cbc49abd548332daa4f2c8c9c"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Z.ltb_lt.",
            "VernacExtend",
            "7804ddfd5e97f395d471c31efbb20955a444b267"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zgt_is_gt_bool n m : (n > m) <-> (n >? m) = true.",
            "VernacStartTheoremProof",
            "a157a6aeda8ad39de181c5069500e184006dcbda"
        ],
        [
            "Z.swap_greater.",
            "VernacExtend",
            "06530b44f9910a8fa914fb0bacdff3a61c4b80fa"
        ],
        [
            "rewrite Z.gtb_ltb.",
            "VernacExtend",
            "565c60386d146d38f33dcf92a8ca58dbffa9e25f"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Z.ltb_lt.",
            "VernacExtend",
            "7804ddfd5e97f395d471c31efbb20955a444b267"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zlt_is_le_bool n m : (n < m) <-> (n <=? m - 1) = true.",
            "VernacStartTheoremProof",
            "60a76f8ccd289106096eaa6d033bb168e6350ef6"
        ],
        [
            "rewrite Z.leb_le.",
            "VernacExtend",
            "506e4540fef9c9555d850d154d71e8ed28978e0c"
        ],
        [
            "apply Z.lt_le_pred.",
            "VernacExtend",
            "e707715d40192d07d20f3b4bc6f20b64076e6ade"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zgt_is_le_bool n m : (n > m) <-> (m <=? n - 1) = true.",
            "VernacStartTheoremProof",
            "5c4bdfcbf1bc53745e1f3260575be653ffffe4ad"
        ],
        [
            "Z.swap_greater.",
            "VernacExtend",
            "06530b44f9910a8fa914fb0bacdff3a61c4b80fa"
        ],
        [
            "rewrite Z.leb_le.",
            "VernacExtend",
            "506e4540fef9c9555d850d154d71e8ed28978e0c"
        ],
        [
            "apply Z.lt_le_pred.",
            "VernacExtend",
            "e707715d40192d07d20f3b4bc6f20b64076e6ade"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zeq_is_eq_bool x y : x = y <-> Zeq_bool x y = true.",
            "VernacStartTheoremProof",
            "de0ec7e0d1a0c6e3ff85f3068987145990fc485a"
        ],
        [
            "unfold Zeq_bool.",
            "VernacExtend",
            "40bef210a7fd69e0c5fe5aab4d0cc4a8d98b18bb"
        ],
        [
            "rewrite <- Z.compare_eq_iff.",
            "VernacExtend",
            "c74dbb0287456f3ad4842c64d7a4b3cc90441f36"
        ],
        [
            "destruct Z.compare; now split.",
            "VernacExtend",
            "52b74dbd11c960abef0149b2aa952012f5426ea3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zeq_bool_eq x y : Zeq_bool x y = true -> x = y.",
            "VernacStartTheoremProof",
            "f27ef9d9819099fa8ac080c41d180e2562d0a5dd"
        ],
        [
            "apply Zeq_is_eq_bool.",
            "VernacExtend",
            "f163cefdadae332e5278ffdc7cf9fe651d8fb3d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zeq_bool_neq x y : Zeq_bool x y = false -> x <> y.",
            "VernacStartTheoremProof",
            "844f2f113e4085d9dfd00479ddb47ab2ea9994aa"
        ],
        [
            "rewrite Zeq_is_eq_bool; now destruct Zeq_bool.",
            "VernacExtend",
            "b54c13014429319bea8489659fb347f5c837570c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zeq_bool_if x y : if Zeq_bool x y then x=y else x<>y.",
            "VernacStartTheoremProof",
            "75dd37d8d7a8eb8aae0bac810a560d4605367a9c"
        ],
        [
            "generalize (Zeq_bool_eq x y) (Zeq_bool_neq x y).",
            "VernacExtend",
            "91d55c75c2e98b626e6d206ce2b0753967708df7"
        ],
        [
            "destruct Zeq_bool; auto.",
            "VernacExtend",
            "318fad22ea0978c4994af0a9cb8b9434af0c84c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "Zle_cases",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "case Z.leb_spec; now Z.swap_greater.",
                        "VernacExtend",
                        "a18d0e976e6ef63fac9d0b2993767ccf61edb7d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_cases",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "case Z.ltb_spec; now Z.swap_greater.",
                        "VernacExtend",
                        "8cf293f2f9ebd331d059e008e0b9d04153df19f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zge_cases",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "rewrite Z.geb_leb.",
                        "VernacExtend",
                        "bfca6b6684d26834e353a7ecfe9175daea479abf"
                    ]
                },
                {
                    "command": [
                        "case Z.leb_spec; now Z.swap_greater.",
                        "VernacExtend",
                        "a18d0e976e6ef63fac9d0b2993767ccf61edb7d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zgt_cases",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "rewrite Z.gtb_ltb.",
                        "VernacExtend",
                        "565c60386d146d38f33dcf92a8ca58dbffa9e25f"
                    ]
                },
                {
                    "command": [
                        "case Z.ltb_spec; now Z.swap_greater.",
                        "VernacExtend",
                        "8cf293f2f9ebd331d059e008e0b9d04153df19f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_bool_imp_le",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "apply Z.leb_le.",
                        "VernacExtend",
                        "33989f3d9b0dedbf1aff8f48ca9f38790441bd5e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_imp_le_bool",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "apply Z.leb_le.",
                        "VernacExtend",
                        "33989f3d9b0dedbf1aff8f48ca9f38790441bd5e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_bool_antisym",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "rewrite !Z.leb_le.",
                        "VernacExtend",
                        "4dd7cb154c77ac42763c1e301a991ba0507db688"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_antisymm.",
                        "VernacExtend",
                        "187d563edab8a2dfdc97a38fb07b06b9b4ad7002"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_bool_trans",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "rewrite !Z.leb_le.",
                        "VernacExtend",
                        "4dd7cb154c77ac42763c1e301a991ba0507db688"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_trans.",
                        "VernacExtend",
                        "41d7305283af59600f813ddf5b143cacb0c734da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_bool_total",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "case_eq (x <=? y); intros H.",
                        "VernacExtend",
                        "34fce55038865127d8a75cc1b6279b922e056f29"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "left; trivial.",
                        "VernacExtend",
                        "2f1efd67ff23560c270a9589d0d1b100a9c80732"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "apply Z.leb_gt in H.",
                        "VernacExtend",
                        "a4738b066abf181e68964cb6ea16a1bb2967386f"
                    ]
                },
                {
                    "command": [
                        "now apply Z.leb_le, Z.lt_le_incl.",
                        "VernacExtend",
                        "fa8c74e9659a9467d0e389116d28d739ba0880c4"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Zle_bool_plus_mono",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "rewrite !Z.leb_le.",
                        "VernacExtend",
                        "4dd7cb154c77ac42763c1e301a991ba0507db688"
                    ]
                },
                {
                    "command": [
                        "apply Z.add_le_mono.",
                        "VernacExtend",
                        "f890c079b670eb73d8fed3c0ce92f2d36e7a46a1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zone_pos",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zone_min_pos",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "rewrite Z.leb_le, Z.leb_gt.",
                        "VernacExtend",
                        "7fc5e595584d87e63677ab3ee4c70201a90b50e8"
                    ]
                },
                {
                    "command": [
                        "apply Z.le_succ_l.",
                        "VernacExtend",
                        "831514d6ebda3fd5951c3d1b55dc52282df141d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zle_is_le_bool",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Z.leb_le.",
                        "VernacExtend",
                        "33989f3d9b0dedbf1aff8f48ca9f38790441bd5e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zge_is_le_bool",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "Z.swap_greater.",
                        "VernacExtend",
                        "06530b44f9910a8fa914fb0bacdff3a61c4b80fa"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Z.leb_le.",
                        "VernacExtend",
                        "33989f3d9b0dedbf1aff8f48ca9f38790441bd5e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_is_lt_bool",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Z.ltb_lt.",
                        "VernacExtend",
                        "7804ddfd5e97f395d471c31efbb20955a444b267"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zgt_is_gt_bool",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "Z.swap_greater.",
                        "VernacExtend",
                        "06530b44f9910a8fa914fb0bacdff3a61c4b80fa"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.gtb_ltb.",
                        "VernacExtend",
                        "565c60386d146d38f33dcf92a8ca58dbffa9e25f"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Z.ltb_lt.",
                        "VernacExtend",
                        "7804ddfd5e97f395d471c31efbb20955a444b267"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zlt_is_le_bool",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "rewrite Z.leb_le.",
                        "VernacExtend",
                        "506e4540fef9c9555d850d154d71e8ed28978e0c"
                    ]
                },
                {
                    "command": [
                        "apply Z.lt_le_pred.",
                        "VernacExtend",
                        "e707715d40192d07d20f3b4bc6f20b64076e6ade"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zgt_is_le_bool",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "Z.swap_greater.",
                        "VernacExtend",
                        "06530b44f9910a8fa914fb0bacdff3a61c4b80fa"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.leb_le.",
                        "VernacExtend",
                        "506e4540fef9c9555d850d154d71e8ed28978e0c"
                    ]
                },
                {
                    "command": [
                        "apply Z.lt_le_pred.",
                        "VernacExtend",
                        "e707715d40192d07d20f3b4bc6f20b64076e6ade"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zeq_is_eq_bool",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "unfold Zeq_bool.",
                        "VernacExtend",
                        "40bef210a7fd69e0c5fe5aab4d0cc4a8d98b18bb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Z.compare_eq_iff.",
                        "VernacExtend",
                        "c74dbb0287456f3ad4842c64d7a4b3cc90441f36"
                    ]
                },
                {
                    "command": [
                        "destruct Z.compare; now split.",
                        "VernacExtend",
                        "52b74dbd11c960abef0149b2aa952012f5426ea3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zeq_bool_eq",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "apply Zeq_is_eq_bool.",
                        "VernacExtend",
                        "f163cefdadae332e5278ffdc7cf9fe651d8fb3d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zeq_bool_neq",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "rewrite Zeq_is_eq_bool; now destruct Zeq_bool.",
                        "VernacExtend",
                        "b54c13014429319bea8489659fb347f5c837570c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zeq_bool_if",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "generalize (Zeq_bool_eq x y) (Zeq_bool_neq x y).",
                        "VernacExtend",
                        "91d55c75c2e98b626e6d206ce2b0753967708df7"
                    ]
                },
                {
                    "command": [
                        "destruct Zeq_bool; auto.",
                        "VernacExtend",
                        "318fad22ea0978c4994af0a9cb8b9434af0c84c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}