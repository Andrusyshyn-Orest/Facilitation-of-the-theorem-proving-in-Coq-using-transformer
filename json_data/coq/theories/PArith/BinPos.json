{
    "filename": "theories/PArith/BinPos.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export BinNums.",
            "VernacRequire",
            "6044313e4c766ac9cc0940ad86fd8c0b71f68f70"
        ],
        [
            "Require Import Eqdep_dec EqdepFacts RelationClasses Morphisms Setoid Equalities Orders OrdersFacts GenericMinMax Le Plus.",
            "VernacRequire",
            "9ab0ce01a21723aa57b8a9fa2ad00718111eb070"
        ],
        [
            "Require Export BinPosDef.",
            "VernacRequire",
            "f2c348b94a57fe34b276d70190f3c373d2f98ca5"
        ],
        [
            "Local Open Scope positive_scope.",
            "VernacOpenCloseScope",
            "373b6149b002bb2947d7edec759c86b4538856cb"
        ],
        [
            "Module Pos <: UsualOrderedTypeFull <: UsualDecidableTypeFull <: TotalOrder.",
            "VernacDefineModule",
            "73a214f2ff548de5f5bf9f5a58989501645de3ea"
        ],
        [
            "Include BinPosDef.Pos.",
            "VernacInclude",
            "1b4b572d38428ef75a04f5496c9a6a330e834e22"
        ],
        [
            "Set Inline Level 30.",
            "VernacSetOption",
            "758384c1399d1d65834d1d64537d4e818c7d8f20"
        ],
        [
            "Definition eq := @Logic.eq positive.",
            "VernacDefinition",
            "8b6153dfef77c4c81242d097e775e09df54c8a89"
        ],
        [
            "Definition eq_equiv := @eq_equivalence positive.",
            "VernacDefinition",
            "6995b6904e7ff32de81635c6d0a5a07ea7d71e47"
        ],
        [
            "Include BackportEq.",
            "VernacInclude",
            "c90ac73c4cde05a68ff9c95ebecdade3e4293e88"
        ],
        [
            "Definition lt x y := (x ?= y) = Lt.",
            "VernacDefinition",
            "d5bd792422a260c8d304b7674e4cca6328037d4c"
        ],
        [
            "Definition gt x y := (x ?= y) = Gt.",
            "VernacDefinition",
            "93863703b9eb50fca629646299f0f7101375b6e6"
        ],
        [
            "Definition le x y := (x ?= y) <> Gt.",
            "VernacDefinition",
            "0f197bbfdbe501c3569989ce9a26bcdd596a84b7"
        ],
        [
            "Definition ge x y := (x ?= y) <> Lt.",
            "VernacDefinition",
            "def92fc772c0b095b894f223c74b63e03d48768c"
        ],
        [
            "Infix \"<=\" := le : positive_scope.",
            "VernacInfix",
            "0bff1e368d1b2d7115304403e2f994eeec228540"
        ],
        [
            "Infix \"<\" := lt : positive_scope.",
            "VernacInfix",
            "5ebc9b5f780e24b340fa518e882f5052f9fb50e4"
        ],
        [
            "Infix \">=\" := ge : positive_scope.",
            "VernacInfix",
            "fda3805811036bc77912bd832444163d22f5322e"
        ],
        [
            "Infix \">\" := gt : positive_scope.",
            "VernacInfix",
            "b50f3093eb64bda466aae104492ea7f6c00bd9f8"
        ],
        [
            "Notation \"x <= y <= z\" := (x <= y /\\ y <= z) : positive_scope.",
            "VernacNotation",
            "839564c22d3cf82639d0a9404f899aa9d044c99e"
        ],
        [
            "Notation \"x <= y < z\" := (x <= y /\\ y < z) : positive_scope.",
            "VernacNotation",
            "da8763e11ce66a25bd087968f8d48cd87df803c9"
        ],
        [
            "Notation \"x < y < z\" := (x < y /\\ y < z) : positive_scope.",
            "VernacNotation",
            "1e2edd36f3462619bd4d41484601f082af0991db"
        ],
        [
            "Notation \"x < y <= z\" := (x < y /\\ y <= z) : positive_scope.",
            "VernacNotation",
            "4b648f9df8d49b3f46576aeca16b6adfdbb34648"
        ],
        [
            "Lemma eq_dec : forall x y:positive, {x = y} + {x <> y}.",
            "VernacStartTheoremProof",
            "2d4039326ba5b7fac1aca47c84b748b9f93f1d26"
        ],
        [
            "decide equality.",
            "VernacExtend",
            "10aba07d521545accbb51a4c2e0695a9ddce3199"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma xI_succ_xO p : p~1 = succ p~0.",
            "VernacStartTheoremProof",
            "1243de83a1ddf09ef98ba20ff487c7b21813ca68"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succ_discr p : p <> succ p.",
            "VernacStartTheoremProof",
            "374e612257a087432e9e7270c47eea2f75c769e4"
        ],
        [
            "now destruct p.",
            "VernacExtend",
            "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_double_spec p : pred_double p = pred (p~0).",
            "VernacStartTheoremProof",
            "d4b1baa5747c35bc809bdfb48c55e0e9e26513eb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succ_pred_double p : succ (pred_double p) = p~0.",
            "VernacStartTheoremProof",
            "60ce2debf8ee3222b4f4ee14c40fd6a871f62c4f"
        ],
        [
            "induction p; simpl; now f_equal.",
            "VernacExtend",
            "d2f00fea8a2f15feb5cff27ab27d24a9fd59b881"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_double_succ p : pred_double (succ p) = p~1.",
            "VernacStartTheoremProof",
            "fcb1ec4e329a44d4753fc40ec3e45242597b2f91"
        ],
        [
            "induction p; simpl; now f_equal.",
            "VernacExtend",
            "d2f00fea8a2f15feb5cff27ab27d24a9fd59b881"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma double_succ p : (succ p)~0 = succ (succ p~0).",
            "VernacStartTheoremProof",
            "9cc6518b1ef0ac698375b9b35d5e08852057e97a"
        ],
        [
            "now destruct p.",
            "VernacExtend",
            "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_double_xO_discr p : pred_double p <> p~0.",
            "VernacStartTheoremProof",
            "9a84840773143b6928dc56cc4a7d82f3a10f8421"
        ],
        [
            "now destruct p.",
            "VernacExtend",
            "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succ_not_1 p : succ p <> 1.",
            "VernacStartTheoremProof",
            "7ce3a37968260642485a40deef2f2664727131ff"
        ],
        [
            "now destruct p.",
            "VernacExtend",
            "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_succ p : pred (succ p) = p.",
            "VernacStartTheoremProof",
            "e047d4e92595b49640f2270331c1ffdb100b61f7"
        ],
        [
            "destruct p; simpl; trivial.",
            "VernacExtend",
            "d8fb693fd9c6141a0299e943aee34379e6ea247d"
        ],
        [
            "apply pred_double_succ.",
            "VernacExtend",
            "4da76692529ea8c0ebc741b79f4ffcffedc5d6c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succ_pred_or p : p = 1 \\/ succ (pred p) = p.",
            "VernacStartTheoremProof",
            "422e04d7f27671139c0118af1ad3966d1159c529"
        ],
        [
            "destruct p; simpl; auto.",
            "VernacExtend",
            "62b7f0d95969e1da92986f886a38340b3ce984b7"
        ],
        [
            "right; apply succ_pred_double.",
            "VernacExtend",
            "bda080c4548e39b8f589fe7c9de7576c5e68cc73"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succ_pred p : p <> 1 -> succ (pred p) = p.",
            "VernacStartTheoremProof",
            "43afe8b428ca5f1f153e3c83a046428135d703c5"
        ],
        [
            "destruct p; intros H; simpl; trivial.",
            "VernacExtend",
            "81e0914134f587c8a1562f53a05e32717851c0c7"
        ],
        [
            "apply succ_pred_double.",
            "VernacExtend",
            "8c93f7cb5b547580676a25980207210647879b6b"
        ],
        [
            "now destruct H.",
            "VernacExtend",
            "a40b27d595b9124dbd626abd9d57401846190d93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succ_inj p q : succ p = succ q -> p = q.",
            "VernacStartTheoremProof",
            "f88cdc843322567d6409d8cd41e0be02d173c5ba"
        ],
        [
            "revert q.",
            "VernacExtend",
            "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
        ],
        [
            "induction p; intros [q|q| ] H; simpl in H; destr_eq H; f_equal; auto.",
            "VernacExtend",
            "9dea7332141eebe1a62fb0029deb10c9f038d0d3"
        ],
        [
            "elim (succ_not_1 p); auto.",
            "VernacExtend",
            "cad61c2379e9d1a3c0b4100f49c1309ec6f9165d"
        ],
        [
            "elim (succ_not_1 q); auto.",
            "VernacExtend",
            "7a3936f94ed81980f02c9d19ea8fea71368c9d0b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_N_succ p : pred_N (succ p) = Npos p.",
            "VernacStartTheoremProof",
            "ca65c7f91d2f632e46b8bb5769220fd97915d32c"
        ],
        [
            "destruct p; simpl; trivial.",
            "VernacExtend",
            "d8fb693fd9c6141a0299e943aee34379e6ea247d"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply pred_double_succ.",
            "VernacExtend",
            "4da76692529ea8c0ebc741b79f4ffcffedc5d6c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_1_r p : p + 1 = succ p.",
            "VernacStartTheoremProof",
            "2fe9f792185fbc28cd2b055c112f2c9999eea051"
        ],
        [
            "now destruct p.",
            "VernacExtend",
            "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_1_l p : 1 + p = succ p.",
            "VernacStartTheoremProof",
            "073d4c56c18be0bd2716c18e605fab353ac07309"
        ],
        [
            "now destruct p.",
            "VernacExtend",
            "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_carry_spec p q : add_carry p q = succ (p + q).",
            "VernacStartTheoremProof",
            "771603cfe3bd5cc56fde59de300b3c9f79315810"
        ],
        [
            "revert q.",
            "VernacExtend",
            "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
        ],
        [
            "induction p; destruct q; simpl; now f_equal.",
            "VernacExtend",
            "0f86792072a213d4682f5c12a537ef26c0688a80"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_comm p q : p + q = q + p.",
            "VernacStartTheoremProof",
            "206688c3c3c12a32e969262b0c25b89b69b661fd"
        ],
        [
            "revert q.",
            "VernacExtend",
            "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
        ],
        [
            "induction p; destruct q; simpl; f_equal; trivial.",
            "VernacExtend",
            "11d48254590c156e2d52e094335b40bffa1a7355"
        ],
        [
            "rewrite 2 add_carry_spec; now f_equal.",
            "VernacExtend",
            "764e454cfd17e8014e0aaf842c71ed573454a6e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_succ_r p q : p + succ q = succ (p + q).",
            "VernacStartTheoremProof",
            "73e389ab43cb46a30e9e5259d408b5675990ed5a"
        ],
        [
            "revert q.",
            "VernacExtend",
            "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
        ],
        [
            "induction p; destruct q; simpl; f_equal; auto using add_1_r; rewrite add_carry_spec; auto.",
            "VernacExtend",
            "36de407d85fcfe9fcc0c7b48747522965cef80f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_succ_l p q : succ p + q = succ (p + q).",
            "VernacStartTheoremProof",
            "10529b76000437a1ca8d9ef5fb82c9296878e160"
        ],
        [
            "rewrite add_comm, (add_comm p).",
            "VernacExtend",
            "e9878e53e9adc9459e69eab894678f7d36fc9ec3"
        ],
        [
            "apply add_succ_r.",
            "VernacExtend",
            "5dc58e87742766502b5cb6961eab51e6fe6cd0bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_no_neutral p q : q + p <> p.",
            "VernacStartTheoremProof",
            "53cba293f9c9c0f404a46e6b65db1771c925cba0"
        ],
        [
            "revert q.",
            "VernacExtend",
            "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
        ],
        [
            "induction p as [p IHp|p IHp| ]; intros [q|q| ] H; destr_eq H; apply (IHp q H).",
            "VernacExtend",
            "19290edbf5fdef0f95153168be6f6db5ae725c02"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_carry_add p q r s : add_carry p r = add_carry q s -> p + r = q + s.",
            "VernacStartTheoremProof",
            "7225fce7b59f15e33421a0fde92436c614543a08"
        ],
        [
            "intros H; apply succ_inj; now rewrite <- 2 add_carry_spec.",
            "VernacExtend",
            "1064bc66d399aee97f6a124c3551c4b27a1b13d1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_reg_r p q r : p + r = q + r -> p = q.",
            "VernacStartTheoremProof",
            "891199f80f67fb6859a18b654198e92c395c6ff1"
        ],
        [
            "revert p q.",
            "VernacExtend",
            "d73bb7430417aef7df8b830be9bb7c0ca93f5ba7"
        ],
        [
            "induction r.",
            "VernacExtend",
            "999f2bb03aa1252fae0e3f57952a36d7753745d8"
        ],
        [
            "intros [p|p| ] [q|q| ] H; simpl; destr_eq H; f_equal; auto using add_carry_add; contradict H; rewrite add_carry_spec, <- add_succ_r; auto using add_no_neutral.",
            "VernacExtend",
            "93db5c62bccf129b86f15fd7211af3091c11516a"
        ],
        [
            "intros [p|p| ] [q|q| ] H; simpl; destr_eq H; f_equal; auto; contradict H; auto using add_no_neutral.",
            "VernacExtend",
            "f0f47e8bc71b1ffcac8c09f55bf3936de0f81e11"
        ],
        [
            "intros p q H.",
            "VernacExtend",
            "e410718f3760c866150564a1b5c04ca5f3e6251a"
        ],
        [
            "apply succ_inj.",
            "VernacExtend",
            "20bea47dc9639cb7f51951bae01ee9c028f3992f"
        ],
        [
            "now rewrite <- 2 add_1_r.",
            "VernacExtend",
            "95a64995dbb0d915e1ea3118b1f6a2b02dcd41f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_reg_l p q r : p + q = p + r -> q = r.",
            "VernacStartTheoremProof",
            "5da542711e842a76e108934e8d96c9ee3dcc48c2"
        ],
        [
            "rewrite 2 (add_comm p).",
            "VernacExtend",
            "36e2af870394c94912ac542800197ea5615cd031"
        ],
        [
            "now apply add_reg_r.",
            "VernacExtend",
            "ca29e8dec46ba9aef8849ebc2b2fdc2c7321bf22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_cancel_r p q r : p + r = q + r <-> p = q.",
            "VernacStartTheoremProof",
            "eb96127b6342275bed5eae83fed5b6e69f8bc5ba"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply add_reg_r.",
            "VernacExtend",
            "0e6f3e83886726d23882ced0b81b9eb6c8d0ff18"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_cancel_l p q r : r + p = r + q <-> p = q.",
            "VernacStartTheoremProof",
            "ec6b7cac564a42227b05c662597b58a93140b773"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply add_reg_l.",
            "VernacExtend",
            "d741b039c53829054e66f753474d7d44d031d15d"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_carry_reg_r p q r : add_carry p r = add_carry q r -> p = q.",
            "VernacStartTheoremProof",
            "01b0c544878d0f2e495aad444382742b2d054478"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply add_reg_r with (r:=r); now apply add_carry_add.",
            "VernacExtend",
            "7a66a52f81a90ccf28fed23c4ba73cafe5e4e5d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_carry_reg_l p q r : add_carry p q = add_carry p r -> q = r.",
            "VernacStartTheoremProof",
            "76d57cf061271cde1c51b9e5c61ba848462f8a68"
        ],
        [
            "intros H; apply add_reg_r with (r:=p); rewrite (add_comm r), (add_comm q); now apply add_carry_add.",
            "VernacExtend",
            "faf163c194d114327b8270834361b2262fd1a88d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_assoc p q r : p + (q + r) = p + q + r.",
            "VernacStartTheoremProof",
            "230723225f9c1ade7e3df666b32a52a0adbbd3c1"
        ],
        [
            "revert q r.",
            "VernacExtend",
            "65c8747858e115a11b033f8bfe1b98b454d12381"
        ],
        [
            "induction p.",
            "VernacExtend",
            "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
        ],
        [
            "intros [q|q| ] [r|r| ]; simpl; f_equal; trivial; rewrite ?add_carry_spec, ?add_succ_r, ?add_succ_l, ?add_1_r; f_equal; trivial.",
            "VernacExtend",
            "5e3650f914c33ec25d9516ca19cc6e23285f7192"
        ],
        [
            "intros [q|q| ] [r|r| ]; simpl; f_equal; trivial; rewrite ?add_carry_spec, ?add_succ_r, ?add_succ_l, ?add_1_r; f_equal; trivial.",
            "VernacExtend",
            "5e3650f914c33ec25d9516ca19cc6e23285f7192"
        ],
        [
            "intros q r; rewrite 2 add_1_l, add_succ_l; auto.",
            "VernacExtend",
            "81388b2086fd4a056184361ef3b0cbfac34ffbf9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_xO p q : (p + q)~0 = p~0 + q~0.",
            "VernacStartTheoremProof",
            "5635dbd271db12a1d74fbf8af51b95b8b3b72370"
        ],
        [
            "now destruct p, q.",
            "VernacExtend",
            "2d29edbff69df181c4c7dd9ce128aedeaa75ea15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_xI_pred_double p q : (p + q)~0 = p~1 + pred_double q.",
            "VernacStartTheoremProof",
            "797d24761f90e6a7fd53860c606a27cc632d6865"
        ],
        [
            "change (p~1) with (p~0 + 1).",
            "VernacExtend",
            "eaf9a450391b6e06d8bcbfaf5e1364808fe1aff0"
        ],
        [
            "now rewrite <- add_assoc, add_1_l, succ_pred_double.",
            "VernacExtend",
            "72bc8a4cc4c6a96c1ca3c72527a6427330178dd3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_xO_pred_double p q : pred_double (p + q) = p~0 + pred_double q.",
            "VernacStartTheoremProof",
            "8c2f4c55587877238e7ee19ce9f766d6d06c9f9e"
        ],
        [
            "revert q.",
            "VernacExtend",
            "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
        ],
        [
            "induction p as [p IHp| p IHp| ]; destruct q; simpl; rewrite ?add_carry_spec, ?pred_double_succ, ?add_xI_pred_double; try reflexivity.",
            "VernacExtend",
            "9060198b1f0b994750e3064da572878a47453be4"
        ],
        [
            "rewrite IHp; auto.",
            "VernacExtend",
            "8174fca7b085b237aac922c5a3aa5e8a6be3e646"
        ],
        [
            "rewrite <- succ_pred_double, <- add_1_l.",
            "VernacExtend",
            "9f98e155a4130d1aa0a83d3eb3b174b127390cfa"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_diag p : p + p = p~0.",
            "VernacStartTheoremProof",
            "ced47fee9e250061bef85719750aac447f666ffd"
        ],
        [
            "induction p as [p IHp| p IHp| ]; simpl; now rewrite ?add_carry_spec, ?IHp.",
            "VernacExtend",
            "8b46e171200b195af5754af5fc08839ac19343d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint peano_rect (P:positive->Type) (a:P 1) (f: forall p:positive, P p -> P (succ p)) (p:positive) : P p := let f2 := peano_rect (fun p:positive => P (p~0)) (f _ a) (fun (p:positive) (x:P (p~0)) => f _ (f _ x)) in match p with | q~1 => f _ (f2 q) | q~0 => f2 q | 1 => a end.",
            "VernacFixpoint",
            "d1e7f29146a73fb87aa7314471c9e782899c6cd7"
        ],
        [
            "Theorem peano_rect_succ (P:positive->Type) (a:P 1) (f:forall p, P p -> P (succ p)) (p:positive) : peano_rect P a f (succ p) = f _ (peano_rect P a f p).",
            "VernacStartTheoremProof",
            "203fec598b73d86139c8f99910be59430d312a6c"
        ],
        [
            "revert P a f.",
            "VernacExtend",
            "6efc210936a47e5f93a607056a1c4aab98285e5a"
        ],
        [
            "induction p; trivial.",
            "VernacExtend",
            "009ca74c5cc1ac51f2921f2598a1ee4a240a802c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite IHp.",
            "VernacExtend",
            "731b248d3767f25dc6e90c81442bd4c6245831c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem peano_rect_base (P:positive->Type) (a:P 1) (f:forall p, P p -> P (succ p)) : peano_rect P a f 1 = a.",
            "VernacStartTheoremProof",
            "e3b3a81bac8ff7059b5ce1d6d63a0945cb57f618"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition peano_rec (P:positive->Set) := peano_rect P.",
            "VernacDefinition",
            "fca3ec2b44907e2b5f6133907bb307812df3c2ef"
        ],
        [
            "Definition peano_ind (P:positive->Prop) := peano_rect P.",
            "VernacDefinition",
            "d85c83162caacb3a13faac88b7afcde30fe0bbc9"
        ],
        [
            "Theorem peano_case : forall P:positive -> Prop, P 1 -> (forall n:positive, P (succ n)) -> forall p:positive, P p.",
            "VernacStartTheoremProof",
            "03fd8d31dacf81987800e119108b370b3379291c"
        ],
        [
            "intros; apply peano_ind; auto.",
            "VernacExtend",
            "99793320c8f784994b5943936b5ba8249009c141"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive PeanoView : positive -> Type := | PeanoOne : PeanoView 1 | PeanoSucc : forall p, PeanoView p -> PeanoView (succ p).",
            "VernacInductive",
            "b1494361acb170859a1058e00c37e19538a540e2"
        ],
        [
            "Fixpoint peanoView_xO p (q:PeanoView p) : PeanoView (p~0) := match q in PeanoView x return PeanoView (x~0) with | PeanoOne => PeanoSucc _ PeanoOne | PeanoSucc _ q => PeanoSucc _ (PeanoSucc _ (peanoView_xO _ q)) end.",
            "VernacFixpoint",
            "9f1f164ba6454320763935b1e8518163927eaeb0"
        ],
        [
            "Fixpoint peanoView_xI p (q:PeanoView p) : PeanoView (p~1) := match q in PeanoView x return PeanoView (x~1) with | PeanoOne => PeanoSucc _ (PeanoSucc _ PeanoOne) | PeanoSucc _ q => PeanoSucc _ (PeanoSucc _ (peanoView_xI _ q)) end.",
            "VernacFixpoint",
            "bcae4eb215bd6bf6d8613d881c53d295ad78cfcf"
        ],
        [
            "Fixpoint peanoView p : PeanoView p := match p return PeanoView p with | 1 => PeanoOne | p~0 => peanoView_xO p (peanoView p) | p~1 => peanoView_xI p (peanoView p) end.",
            "VernacFixpoint",
            "1cbe5811f818df1aed4343dafbbe8b990e8721a6"
        ],
        [
            "Definition PeanoView_iter (P:positive->Type) (a:P 1) (f:forall p, P p -> P (succ p)) := (fix iter p (q:PeanoView p) : P p := match q in PeanoView p return P p with | PeanoOne => a | PeanoSucc _ q => f _ (iter _ q) end).",
            "VernacDefinition",
            "d8d6187e5bcd0db9a67d6ceac486d685c421104b"
        ],
        [
            "Theorem eq_dep_eq_positive : forall (P:positive->Type) (p:positive) (x y:P p), eq_dep positive P p x p y -> x = y.",
            "VernacStartTheoremProof",
            "74acee29d67074205607834eb9cfc4e0cb1e39d5"
        ],
        [
            "apply eq_dep_eq_dec.",
            "VernacExtend",
            "c775b8a97a911d494c174df964e9addc07eaef85"
        ],
        [
            "decide equality.",
            "VernacExtend",
            "10aba07d521545accbb51a4c2e0695a9ddce3199"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem PeanoViewUnique : forall p (q q':PeanoView p), q = q'.",
            "VernacStartTheoremProof",
            "a928626a035d85f30fa7ae94a7a51f428e83ab47"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction q as [ | p q IHq ].",
            "VernacExtend",
            "6781e4e648b360ee7b2fb87e37df28d7b58facd5"
        ],
        [
            "apply eq_dep_eq_positive.",
            "VernacExtend",
            "81f1139862251dba699cdc46f6f8a11bc6a4c0b5"
        ],
        [
            "cut (1=1).",
            "VernacExtend",
            "5715bf6469455e2291e4fb78cfd1b42572bbf6fa"
        ],
        [
            "pattern 1 at 1 2 5, q'.",
            "VernacExtend",
            "970bd619765238f25b30d69ad941f836270635da"
        ],
        [
            "destruct q'.",
            "VernacExtend",
            "9032c2353cfb2eef0422a325355d21f250288227"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "destruct p; intros; discriminate.",
            "VernacExtend",
            "0fd2dd5a96a617a77ec25d06672ba014ab119bcd"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply eq_dep_eq_positive.",
            "VernacExtend",
            "81f1139862251dba699cdc46f6f8a11bc6a4c0b5"
        ],
        [
            "cut (succ p=succ p).",
            "VernacExtend",
            "cc145d31f9e65e3f3baaedb4abe802498e3bbe22"
        ],
        [
            "pattern (succ p) at 1 2 5, q'.",
            "VernacExtend",
            "4fc59be344fb10392092e6baac7c83c04776d708"
        ],
        [
            "destruct q'.",
            "VernacExtend",
            "9032c2353cfb2eef0422a325355d21f250288227"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "destruct p; discriminate.",
            "VernacExtend",
            "2c3044e334354cfea49f3e05172475eb1f2d566f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply succ_inj in H.",
            "VernacExtend",
            "96387f39028962a1b17e39f3a600fa80f641e470"
        ],
        [
            "generalize q'.",
            "VernacExtend",
            "9b95c62675e324ec3748e32dde60ab4a9e467abb"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite (IHq q'0).",
            "VernacExtend",
            "81ba25e07d18c4f1f2d8daa6cc6e90602758b01b"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma peano_equiv (P:positive->Type) (a:P 1) (f:forall p, P p -> P (succ p)) p : PeanoView_iter P a f p (peanoView p) = peano_rect P a f p.",
            "VernacStartTheoremProof",
            "994c8ed39ff96150036ab33362cd20fc85901d4f"
        ],
        [
            "revert P a f.",
            "VernacExtend",
            "6efc210936a47e5f93a607056a1c4aab98285e5a"
        ],
        [
            "induction p using peano_rect.",
            "VernacExtend",
            "c1e9393d9ffc457ced8c0f1366f251ca756b4087"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros; simpl.",
            "VernacExtend",
            "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
        ],
        [
            "rewrite peano_rect_succ.",
            "VernacExtend",
            "ede078d490a31cb6feaa0bdaa509c9dfc0639252"
        ],
        [
            "rewrite (PeanoViewUnique _ (peanoView (succ p)) (PeanoSucc _ (peanoView p))).",
            "VernacExtend",
            "eb50e58144b5fdf0e73d3089291ddcd88a6d0a79"
        ],
        [
            "simpl; now f_equal.",
            "VernacExtend",
            "771ebb1ffeef4bd7afd3d52921cd096ac81e04cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_1_l p : 1 * p = p.",
            "VernacStartTheoremProof",
            "fc524a69e43a6b8349864ed1e34d068b6fd097fb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_1_r p : p * 1 = p.",
            "VernacStartTheoremProof",
            "c7807a40d1518dffdfa5921928068078f88d53ec"
        ],
        [
            "induction p; simpl; now f_equal.",
            "VernacExtend",
            "d2f00fea8a2f15feb5cff27ab27d24a9fd59b881"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_xO_r p q : p * q~0 = (p * q)~0.",
            "VernacStartTheoremProof",
            "2770d0d1d0b47dce19da5178ef00fc53400ba472"
        ],
        [
            "induction p; simpl; f_equal; f_equal; trivial.",
            "VernacExtend",
            "06aeef9b6f48970bf86d04984ad17f70b861986b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_xI_r p q : p * q~1 = p + (p * q)~0.",
            "VernacStartTheoremProof",
            "c9cd65e37fc4d1f248e29afb401e0ce4b867027f"
        ],
        [
            "induction p as [p IHp|p IHp| ]; simpl; f_equal; trivial.",
            "VernacExtend",
            "7232cb8f01b92462c9029513c6a8409f4cd8636a"
        ],
        [
            "now rewrite IHp, 2 add_assoc, (add_comm p).",
            "VernacExtend",
            "2d4beed12b23bd7a660aecb84197386c3111ada9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_comm p q : p * q = q * p.",
            "VernacStartTheoremProof",
            "ec8a81453d100b47bffc6b6b23c422eedf1b2d17"
        ],
        [
            "induction q as [q IHq|q IHq| ]; simpl; rewrite <- ? IHq; auto using mul_xI_r, mul_xO_r, mul_1_r.",
            "VernacExtend",
            "47aeb1f9f34f6f0e72c63f437246a9c374a15e40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_add_distr_l p q r : p * (q + r) = p * q + p * r.",
            "VernacStartTheoremProof",
            "97658405765967612e3fa9782b2450c7b04f7246"
        ],
        [
            "induction p as [p IHp|p IHp| ]; simpl.",
            "VernacExtend",
            "99295848a30b01ba78ee513fad460768aada7e46"
        ],
        [
            "rewrite IHp.",
            "VernacExtend",
            "fb06481bd21fede7b3fab82db01424a7b32d3fc0"
        ],
        [
            "set (m:=(p*q)~0).",
            "VernacExtend",
            "d5335ab81c136bb2199beaded4a77cc180c8ecff"
        ],
        [
            "set (n:=(p*r)~0).",
            "VernacExtend",
            "1ca2753ad7c63a2e8bb13dfbbf50dc9cec09cc75"
        ],
        [
            "change ((p*q+p*r)~0) with (m+n).",
            "VernacExtend",
            "3ae01e51ee6c1fc39a39ee2341997aabff5f1ded"
        ],
        [
            "rewrite 2 add_assoc; f_equal.",
            "VernacExtend",
            "9264b72d0e55f6c670d56c809f38d3f6fcc386e3"
        ],
        [
            "rewrite <- 2 add_assoc; f_equal.",
            "VernacExtend",
            "c6ec9d94a5601a3875d03f8585237c3a3e4191e9"
        ],
        [
            "apply add_comm.",
            "VernacExtend",
            "432c5d4cf69fbe3dde2979438ab90d88539f0993"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_add_distr_r p q r : (p + q) * r = p * r + q * r.",
            "VernacStartTheoremProof",
            "3e0c027b91886bd520cfdecfa54b19c58ffd7e39"
        ],
        [
            "rewrite 3 (mul_comm _ r); apply mul_add_distr_l.",
            "VernacExtend",
            "0362502e26f0e46c7792c900c15afeab36265efb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_assoc p q r : p * (q * r) = p * q * r.",
            "VernacStartTheoremProof",
            "8d9ffde4e6bf8477d335e464fd4b61d56e27774a"
        ],
        [
            "induction p as [p IHp| p IHp | ]; simpl; rewrite ?IHp; trivial.",
            "VernacExtend",
            "cf2cfd91e5895f68593ee883425bde79a64c2de8"
        ],
        [
            "now rewrite mul_add_distr_r.",
            "VernacExtend",
            "65b5fbd8578c71a3425a855ef065e377a830769c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_succ_l p q : (succ p) * q = q + p * q.",
            "VernacStartTheoremProof",
            "f43f1de341a859cc9d36996332a9261de54d74ac"
        ],
        [
            "induction p as [p IHp | p IHp | ]; simpl; trivial.",
            "VernacExtend",
            "19410f929860a42aed0065fd698ba65ad724e1c6"
        ],
        [
            "now rewrite IHp, add_assoc, add_diag, <-add_xO.",
            "VernacExtend",
            "619f06c42ee83b2ee5f2781134dbfb5584c1b702"
        ],
        [
            "symmetry; apply add_diag.",
            "VernacExtend",
            "ff81e99bd53771297e18be3fe7af6a61e198f469"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_succ_r p q : p * (succ q) = p + p * q.",
            "VernacStartTheoremProof",
            "064a24ade5086d6226f5ca7ea4359d9ff182f7ad"
        ],
        [
            "rewrite mul_comm, mul_succ_l.",
            "VernacExtend",
            "1fef2df4fb8400b2f0b02c7826f1891ed9b71eec"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply mul_comm.",
            "VernacExtend",
            "b1bd9c3b62342e0e6654e1b4a5d2cda9775cb738"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_xI_mul_xO_discr p q r : p~1 * r <> q~0 * r.",
            "VernacStartTheoremProof",
            "548570c35fca6ed57b74f8a80a1411339061d828"
        ],
        [
            "induction r; try discriminate.",
            "VernacExtend",
            "3de55c75d5b9258f9c95d63992dd67d8ce5b27ab"
        ],
        [
            "rewrite 2 mul_xO_r; intro H; destr_eq H; auto.",
            "VernacExtend",
            "70fc060ae336f550171d64e73e91f6e6e4504a5e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_xO_discr p q : p~0 * q <> q.",
            "VernacStartTheoremProof",
            "6dde39dc4c8c0c2bc4d12b7ec1cb4046105a973d"
        ],
        [
            "induction q; try discriminate.",
            "VernacExtend",
            "2f650d00fb0332f7bfdd46f852957eaf7e520f5d"
        ],
        [
            "rewrite mul_xO_r; injection; auto.",
            "VernacExtend",
            "0f21acb16d6f3c7b30fe9106a8ce7c6fa92796b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_reg_r p q r : p * r = q * r -> p = q.",
            "VernacStartTheoremProof",
            "7cef65841600f2638df5ddbc76f06926b018ec9a"
        ],
        [
            "revert q r.",
            "VernacExtend",
            "65c8747858e115a11b033f8bfe1b98b454d12381"
        ],
        [
            "induction p as [p IHp| p IHp| ]; intros [q|q| ] r H; reflexivity || apply f_equal || exfalso.",
            "VernacExtend",
            "5204054077c818492d696eef655ef09e56f6cdb0"
        ],
        [
            "apply IHp with (r~0).",
            "VernacExtend",
            "7cc5eedf64f1b77d9a17786a14649b02f54bf6d5"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "rewrite 2 mul_xO_r.",
            "VernacExtend",
            "024375759c739552b48bbbce8ed9e32d61b029e5"
        ],
        [
            "apply add_reg_l with (1:=H).",
            "VernacExtend",
            "d3d5e7860ab62deeedfe837ad3bb9c483bfb84da"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply mul_xI_mul_xO_discr.",
            "VernacExtend",
            "6bddb8afe7a9da4cf43d651efcc060be5058ed2b"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite add_comm.",
            "VernacExtend",
            "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
        ],
        [
            "apply add_no_neutral.",
            "VernacExtend",
            "99c3bed1c34cc259208b3c6e7a66e402b0f7a838"
        ],
        [
            "symmetry in H.",
            "VernacExtend",
            "5ef7cf40d6f1a8a9f9fae5220b667eef42ea5534"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply mul_xI_mul_xO_discr.",
            "VernacExtend",
            "6bddb8afe7a9da4cf43d651efcc060be5058ed2b"
        ],
        [
            "apply IHp with (r~0).",
            "VernacExtend",
            "7cc5eedf64f1b77d9a17786a14649b02f54bf6d5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite 2 mul_xO_r.",
            "VernacExtend",
            "6b2593eec080240d8d3e00082006b8813d925754"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply mul_xO_discr.",
            "VernacExtend",
            "6cc1eb56a5218d8bb270b60eaa79ef7546d0b28d"
        ],
        [
            "symmetry in H.",
            "VernacExtend",
            "5ef7cf40d6f1a8a9f9fae5220b667eef42ea5534"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite add_comm.",
            "VernacExtend",
            "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
        ],
        [
            "apply add_no_neutral.",
            "VernacExtend",
            "99c3bed1c34cc259208b3c6e7a66e402b0f7a838"
        ],
        [
            "symmetry in H.",
            "VernacExtend",
            "5ef7cf40d6f1a8a9f9fae5220b667eef42ea5534"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply mul_xO_discr.",
            "VernacExtend",
            "6cc1eb56a5218d8bb270b60eaa79ef7546d0b28d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_reg_l p q r : r * p = r * q -> p = q.",
            "VernacStartTheoremProof",
            "dae7ac3157547e6dfaec2b3952250c9dca76ae07"
        ],
        [
            "rewrite 2 (mul_comm r).",
            "VernacExtend",
            "f38b77803ef0b4dc17d02496c705e281fe90043e"
        ],
        [
            "apply mul_reg_r.",
            "VernacExtend",
            "19b14efec2fb825b6ac7a0a6509b3fa36082ea25"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_cancel_r p q r : p * r = q * r <-> p = q.",
            "VernacStartTheoremProof",
            "5c05d9623b494e468e6435703524323e17842865"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply mul_reg_r.",
            "VernacExtend",
            "19b14efec2fb825b6ac7a0a6509b3fa36082ea25"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_cancel_l p q r : r * p = r * q <-> p = q.",
            "VernacStartTheoremProof",
            "47f9495c6c0e449ec3f81505fa9000391eecf22d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply mul_reg_l.",
            "VernacExtend",
            "051a5dbe48872ea27ec3fb258211e050edac17f0"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_eq_1_l p q : p * q = 1 -> p = 1.",
            "VernacStartTheoremProof",
            "6fea24f97d53bcbb57e42edf679563cdf977016d"
        ],
        [
            "now destruct p, q.",
            "VernacExtend",
            "2d29edbff69df181c4c7dd9ce128aedeaa75ea15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_eq_1_r p q : p * q = 1 -> q = 1.",
            "VernacStartTheoremProof",
            "bde06731e3b130c0ccad33c122ba800e6cfb22ac"
        ],
        [
            "now destruct p, q.",
            "VernacExtend",
            "2d29edbff69df181c4c7dd9ce128aedeaa75ea15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation mul_eq_1 := mul_eq_1_l.",
            "VernacSyntacticDefinition",
            "d8e61d99ae3c24e83920c768a1a7fbb7b88a8fae"
        ],
        [
            "Lemma square_xO p : p~0 * p~0 = (p*p)~0~0.",
            "VernacStartTheoremProof",
            "a449f292296705f0791d125ca9e6a09db3a3ba73"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite mul_comm.",
            "VernacExtend",
            "e381ca9335c310c57051601bf6f800b499d27dfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma square_xI p : p~1 * p~1 = (p*p+p)~0~1.",
            "VernacStartTheoremProof",
            "e2c795011154cf5fb0f2d7a64f0c60f4a41c928d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite mul_comm.",
            "VernacExtend",
            "5f0fb0765ec04101790f2b78062bf5490bbe5e03"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite add_assoc, add_diag.",
            "VernacExtend",
            "82ab3c259b3d1effbbaff1250ba91c31e36242a2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite add_comm.",
            "VernacExtend",
            "49059393716b66357ecc6aee8e8a4481895a2fa1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iter_swap_gen : forall A B (f:A->B)(g:A->A)(h:B->B), (forall a, f (g a) = h (f a)) -> forall p a, f (iter g a p) = iter h (f a) p.",
            "VernacStartTheoremProof",
            "388dd367c0454c61c13c005927b50946b22b9f88"
        ],
        [
            "induction p; simpl; intros; now rewrite ?H, ?IHp.",
            "VernacExtend",
            "4ad77721978d57c8cf23985cf9d90b4157a9ad9b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem iter_swap : forall p (A:Type) (f:A -> A) (x:A), iter f (f x) p = f (iter f x p).",
            "VernacStartTheoremProof",
            "b8e359f21f06bfd28b72117364ef7e37c7346f10"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "now apply iter_swap_gen.",
            "VernacExtend",
            "e3a0820aa705724b8de772404275e005e4519700"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem iter_succ : forall p (A:Type) (f:A -> A) (x:A), iter f x (succ p) = f (iter f x p).",
            "VernacStartTheoremProof",
            "fd9b9035c6b4dfed78a1a45da9cac2ae469ac06f"
        ],
        [
            "induction p as [p IHp|p IHp|]; intros; simpl; trivial.",
            "VernacExtend",
            "5b10ba8b5ed67cdac6e784350994c0945d0f2d49"
        ],
        [
            "now rewrite !IHp, iter_swap.",
            "VernacExtend",
            "23b5d600882d67523b8ca1e2f829ce8f8376e349"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem iter_add : forall p q (A:Type) (f:A -> A) (x:A), iter f x (p+q) = iter f (iter f x q) p.",
            "VernacStartTheoremProof",
            "a14136993f20f6f2913e18a0cf1087e2a6487bec"
        ],
        [
            "induction p using peano_ind; intros.",
            "VernacExtend",
            "2921c21061d9d84ca95e4607c4d25f1b4fb09148"
        ],
        [
            "now rewrite add_1_l, iter_succ.",
            "VernacExtend",
            "9e36ff920be4aae8a32f960912889315be3ec068"
        ],
        [
            "now rewrite add_succ_l, !iter_succ, IHp.",
            "VernacExtend",
            "852efd4ec134eead33d4d72bf4ac70863a0afc87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem iter_invariant : forall (p:positive) (A:Type) (f:A -> A) (Inv:A -> Prop), (forall x:A, Inv x -> Inv (f x)) -> forall x:A, Inv x -> Inv (iter f x p).",
            "VernacStartTheoremProof",
            "07a289e93a5aa798fd5e455b35986db1e4d33acd"
        ],
        [
            "induction p as [p IHp|p IHp|]; simpl; trivial.",
            "VernacExtend",
            "19410f929860a42aed0065fd698ba65ad724e1c6"
        ],
        [
            "intros A f Inv H x H0.",
            "VernacExtend",
            "b472c230c4f016bfe82375abce4c4ce7835c7b6d"
        ],
        [
            "apply H, IHp, IHp; trivial.",
            "VernacExtend",
            "8951341417cd4ce61c7b9de754f713120ba9bab1"
        ],
        [
            "intros A f Inv H x H0.",
            "VernacExtend",
            "b472c230c4f016bfe82375abce4c4ce7835c7b6d"
        ],
        [
            "apply IHp, IHp; trivial.",
            "VernacExtend",
            "6a395cbc66d2b845cb8b1c21d687279f377f13b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_1_r p : p^1 = p.",
            "VernacStartTheoremProof",
            "74f07d2e6e392e80f4900800d06df676f0b099ad"
        ],
        [
            "unfold pow.",
            "VernacExtend",
            "f7bb7bd17f7209a79ed08610d1478093e25f454f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite mul_comm.",
            "VernacExtend",
            "e381ca9335c310c57051601bf6f800b499d27dfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_succ_r p q : p^(succ q) = p * p^q.",
            "VernacStartTheoremProof",
            "11cd9ffbd2294e6f171508024590369dd6c6c01f"
        ],
        [
            "unfold pow.",
            "VernacExtend",
            "f7bb7bd17f7209a79ed08610d1478093e25f454f"
        ],
        [
            "now rewrite iter_succ.",
            "VernacExtend",
            "82361dbff727fda623062dc0b340da70408ed0f2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma square_spec p : square p = p * p.",
            "VernacStartTheoremProof",
            "ba95eb3246905875353a79d8ff8fb2e595ca38be"
        ],
        [
            "induction p.",
            "VernacExtend",
            "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite square_xI.",
            "VernacExtend",
            "a53b455ecce5dd19b65635df2bd891ab60b23acb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite IHp.",
            "VernacExtend",
            "731b248d3767f25dc6e90c81442bd4c6245831c9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite square_xO.",
            "VernacExtend",
            "aa44a7fc7446d893f9ebde3402be4684534c935e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite IHp.",
            "VernacExtend",
            "731b248d3767f25dc6e90c81442bd4c6245831c9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_mask_succ_r p q : sub_mask p (succ q) = sub_mask_carry p q.",
            "VernacStartTheoremProof",
            "ccd0bc22ee664550ab51d46fbb057b1b7b4cf2c3"
        ],
        [
            "revert q.",
            "VernacExtend",
            "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
        ],
        [
            "induction p; destruct q; simpl; f_equal; trivial; now destruct p.",
            "VernacExtend",
            "fb86e3ee40c921650d0b253e9db6278ebf03ea33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_mask_carry_spec p q : sub_mask_carry p q = pred_mask (sub_mask p q).",
            "VernacStartTheoremProof",
            "c8614e19033f84e2cdcbfc8de8aeb46c664e2d05"
        ],
        [
            "revert q.",
            "VernacExtend",
            "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
        ],
        [
            "induction p as [p IHp|p IHp| ]; destruct q; simpl; try reflexivity; rewrite ?IHp; destruct (sub_mask p q) as [|[r|r| ]|] || destruct p; auto.",
            "VernacExtend",
            "18de13192643c729312ed7c864bc8a939559900b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive SubMaskSpec (p q : positive) : mask -> Prop := | SubIsNul : p = q -> SubMaskSpec p q IsNul | SubIsPos : forall r, q + r = p -> SubMaskSpec p q (IsPos r) | SubIsNeg : forall r, p + r = q -> SubMaskSpec p q IsNeg.",
            "VernacInductive",
            "f6c356a5136027df6ac293cc181dd9e34a4ff166"
        ],
        [
            "Theorem sub_mask_spec p q : SubMaskSpec p q (sub_mask p q).",
            "VernacStartTheoremProof",
            "d6ee1a5aee54404ef042a7e7d3d27a313899d051"
        ],
        [
            "revert q.",
            "VernacExtend",
            "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
        ],
        [
            "induction p; destruct q; simpl; try constructor; trivial.",
            "VernacExtend",
            "b41bd756d6524d56197346446f6c72303a96459e"
        ],
        [
            "destruct (IHp q); subst; try now constructor.",
            "VernacExtend",
            "aa8815da02f0b32b0f4c5fa3bdb6978b1581e2e6"
        ],
        [
            "now apply SubIsNeg with r~0.",
            "VernacExtend",
            "b48b285d340955500b9ef4d2c56f478c7ff2e9ae"
        ],
        [
            "destruct (IHp q); subst; try now constructor.",
            "VernacExtend",
            "aa8815da02f0b32b0f4c5fa3bdb6978b1581e2e6"
        ],
        [
            "apply SubIsNeg with (pred_double r).",
            "VernacExtend",
            "7f9dabb069796dac71d1829d3ec97cbc52305a59"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply add_xI_pred_double.",
            "VernacExtend",
            "bc592c3aabb6d56b3d77be86d2f87ead5b9c97f9"
        ],
        [
            "rewrite sub_mask_carry_spec.",
            "VernacExtend",
            "80066acf0482a4ed9be80071c470a93479b1ecdf"
        ],
        [
            "destruct (IHp q); subst; try constructor.",
            "VernacExtend",
            "0e7e1af90d1f1de0b6b4b1ebbf0cae957e2475a7"
        ],
        [
            "now apply SubIsNeg with 1.",
            "VernacExtend",
            "6cbe7fb6521dc51166f808a0b2cce449a192c7b1"
        ],
        [
            "destruct r; simpl; try constructor; simpl.",
            "VernacExtend",
            "59783671db3ab351bb1ea20ba8f284394652e586"
        ],
        [
            "now rewrite add_carry_spec, <- add_succ_r.",
            "VernacExtend",
            "d674a44f09e66d95d2fc8b56eb1e78aca613380f"
        ],
        [
            "now rewrite add_carry_spec, <- add_succ_r, succ_pred_double.",
            "VernacExtend",
            "ede6f2a5ff53bbeda602e8709d7439ac459aa159"
        ],
        [
            "now rewrite add_1_r.",
            "VernacExtend",
            "697f7e45a7ce5ba1606a44d55e8d4537a7073464"
        ],
        [
            "now apply SubIsNeg with r~1.",
            "VernacExtend",
            "e3b9ee9c1ab87abc9c9054e0b4fc67ac415f4e58"
        ],
        [
            "destruct (IHp q); subst; try now constructor.",
            "VernacExtend",
            "aa8815da02f0b32b0f4c5fa3bdb6978b1581e2e6"
        ],
        [
            "now apply SubIsNeg with r~0.",
            "VernacExtend",
            "b48b285d340955500b9ef4d2c56f478c7ff2e9ae"
        ],
        [
            "now rewrite add_1_l, succ_pred_double.",
            "VernacExtend",
            "18922c7a616f4d18f7a6677e80f7fe2fecc0441b"
        ],
        [
            "now apply SubIsNeg with q~0.",
            "VernacExtend",
            "aa262512cb6a5a68ce76a63663a1ade6533eece4"
        ],
        [
            "apply SubIsNeg with (pred_double q).",
            "VernacExtend",
            "79203b535582f1b93727e56061ac1e959e02eacf"
        ],
        [
            "now rewrite add_1_l, succ_pred_double.",
            "VernacExtend",
            "18922c7a616f4d18f7a6677e80f7fe2fecc0441b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_mask_nul_iff p q : sub_mask p q = IsNul <-> p = q.",
            "VernacStartTheoremProof",
            "eb5416c9cb212f4abc289043c08d9674945c16b7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now case sub_mask_spec.",
            "VernacExtend",
            "b347fd8072264e7d3c8aa771e85337a0ad19c02b"
        ],
        [
            "intros <-.",
            "VernacExtend",
            "f92abb181e804805d99c6631ed9d612184f20066"
        ],
        [
            "induction p; simpl; now rewrite ?IHp.",
            "VernacExtend",
            "a39646c7a56e0ca83299b93f59b14cc03dafbe8e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_mask_diag p : sub_mask p p = IsNul.",
            "VernacStartTheoremProof",
            "ef51112a4d0b8d39e5a87092f64044c4554b5987"
        ],
        [
            "now apply sub_mask_nul_iff.",
            "VernacExtend",
            "d2292baf9b6a1e959f7b1e45c9eea6cee2f211b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_mask_add p q r : sub_mask p q = IsPos r -> q + r = p.",
            "VernacStartTheoremProof",
            "8029e289997bd46316331e99a3d30e6b20e15db5"
        ],
        [
            "case sub_mask_spec; congruence.",
            "VernacExtend",
            "03716a95fedfa82191b11646f4f6e4cb6c533030"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_mask_add_diag_l p q : sub_mask (p+q) p = IsPos q.",
            "VernacStartTheoremProof",
            "3588c61fe9804ac3edff56101f275aff364f2c23"
        ],
        [
            "case sub_mask_spec.",
            "VernacExtend",
            "7388e16de5eb0074621c9090d3243177f5aacdd0"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "rewrite add_comm in H.",
            "VernacExtend",
            "e39fa83379dc38b5fef52a3fddc6ce749f51fc89"
        ],
        [
            "elim (add_no_neutral _ _ H).",
            "VernacExtend",
            "868e3416fab45a32e221be595621ce4f979e9fdf"
        ],
        [
            "intros r H.",
            "VernacExtend",
            "d7ad88fe18659a9c0fbe8f12609d04bca3d72a11"
        ],
        [
            "apply add_cancel_l in H.",
            "VernacExtend",
            "eb1098e1eec5ae86c1b44cec66fa58389534c7cd"
        ],
        [
            "now f_equal.",
            "VernacExtend",
            "523c8bb1ba392fd7c541cd8a77c609b310d41f22"
        ],
        [
            "intros r H.",
            "VernacExtend",
            "d7ad88fe18659a9c0fbe8f12609d04bca3d72a11"
        ],
        [
            "rewrite <- add_assoc, add_comm in H.",
            "VernacExtend",
            "5756c5e4a6c4756c304ff0929cf3a87581202f84"
        ],
        [
            "elim (add_no_neutral _ _ H).",
            "VernacExtend",
            "868e3416fab45a32e221be595621ce4f979e9fdf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_mask_pos_iff p q r : sub_mask p q = IsPos r <-> q + r = p.",
            "VernacStartTheoremProof",
            "0319afc5271d2b8b5b31ab33f81cc509ae1c8830"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply sub_mask_add.",
            "VernacExtend",
            "587789c499462060b2282e9b8151e6e955800b02"
        ],
        [
            "intros <-; apply sub_mask_add_diag_l.",
            "VernacExtend",
            "a6702da4188160a7069a7ad1fec0b4e03f0062bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_mask_add_diag_r p q : sub_mask p (p+q) = IsNeg.",
            "VernacStartTheoremProof",
            "b2ed91b27643d4146f32d2ff19b1284a1136d96b"
        ],
        [
            "case sub_mask_spec; trivial.",
            "VernacExtend",
            "c95dcf648e9642288ed62d4e6218a68dad828977"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "symmetry in H; rewrite add_comm in H.",
            "VernacExtend",
            "6433303dfed367b270ede56edb54366db74a6536"
        ],
        [
            "elim (add_no_neutral _ _ H).",
            "VernacExtend",
            "868e3416fab45a32e221be595621ce4f979e9fdf"
        ],
        [
            "intros r H.",
            "VernacExtend",
            "d7ad88fe18659a9c0fbe8f12609d04bca3d72a11"
        ],
        [
            "rewrite <- add_assoc, add_comm in H.",
            "VernacExtend",
            "5756c5e4a6c4756c304ff0929cf3a87581202f84"
        ],
        [
            "elim (add_no_neutral _ _ H).",
            "VernacExtend",
            "868e3416fab45a32e221be595621ce4f979e9fdf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_mask_neg_iff p q : sub_mask p q = IsNeg <-> exists r, p + r = q.",
            "VernacStartTheoremProof",
            "5489822bb0b5e2ad896e6335cebb4c876f01a1de"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "case sub_mask_spec; try discriminate.",
            "VernacExtend",
            "ac4f22db2294ba1466e8d4a009c3989606b2b211"
        ],
        [
            "intros r Hr _; now exists r.",
            "VernacExtend",
            "ae01a298f8d0d3d436bd71fcfd64c855c718e1be"
        ],
        [
            "intros (r,<-).",
            "VernacExtend",
            "3f5fcd9722b77eaa31b11a7978ee4a619a9f8b6f"
        ],
        [
            "apply sub_mask_add_diag_r.",
            "VernacExtend",
            "0f9f13173edc3b86c003912610b778eef9f0f3a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqb_eq p q : (p =? q) = true <-> p=q.",
            "VernacStartTheoremProof",
            "7ed01bbc2058ce051b4fbb624980465c1056037c"
        ],
        [
            "revert q.",
            "VernacExtend",
            "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
        ],
        [
            "induction p; destruct q; simpl; rewrite ?IHp; split; congruence.",
            "VernacExtend",
            "2f5bf94fe4a5bf802eb3a1edc9486d110dd50974"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ltb_lt p q : (p <? q) = true <-> p < q.",
            "VernacStartTheoremProof",
            "107cc8ffd61c98915e7aa3b15050e4c459b6e3a5"
        ],
        [
            "unfold ltb, lt.",
            "VernacExtend",
            "5c43f5b40fe682aacd161431c57dc1d7e63820e5"
        ],
        [
            "destruct compare; easy'.",
            "VernacExtend",
            "9c58ca66031ca52e7ded2a67e5812d35fe76b30c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem leb_le p q : (p <=? q) = true <-> p <= q.",
            "VernacStartTheoremProof",
            "442af2a3c75c5f62c2421f7bcb1673062c894b4b"
        ],
        [
            "unfold leb, le.",
            "VernacExtend",
            "691c599dca3e1dc8df9a04f30af6f52e19a455ff"
        ],
        [
            "destruct compare; easy'.",
            "VernacExtend",
            "9c58ca66031ca52e7ded2a67e5812d35fe76b30c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Include BoolEqualityFacts.",
            "VernacInclude",
            "98e1963b91923ac9ac24d3b602273bb43d67d2ad"
        ],
        [
            "Definition switch_Eq c c' := match c' with | Eq => c | Lt => Lt | Gt => Gt end.",
            "VernacDefinition",
            "4b1b81363469ceb01674bbebda78c2582ed68ffb"
        ],
        [
            "Lemma compare_cont_spec p q c : compare_cont c p q = switch_Eq c (p ?= q).",
            "VernacStartTheoremProof",
            "c44cdbb2ef3c4cb1ec2bf406f07a58563d0489c0"
        ],
        [
            "unfold compare.",
            "VernacExtend",
            "b5d4704dfbc3e5e9441ee8f2b7957e022b2209cb"
        ],
        [
            "revert q c.",
            "VernacExtend",
            "b4e0f152623b0660330016a93d21838c60475c9f"
        ],
        [
            "induction p; destruct q; simpl; trivial.",
            "VernacExtend",
            "ed2ae1107c97dba2d16283e81a2b55068be8473f"
        ],
        [
            "intros c.",
            "VernacExtend",
            "b22524904714a3291216c142472c7a61ff52b803"
        ],
        [
            "rewrite 2 IHp.",
            "VernacExtend",
            "cb41ce3b7f3f47e0711e939027667ef7f75727ad"
        ],
        [
            "now destruct (compare_cont Eq p q).",
            "VernacExtend",
            "6f1ac91a633b1de3a0cb2b16a186c54a63f52684"
        ],
        [
            "intros c.",
            "VernacExtend",
            "b22524904714a3291216c142472c7a61ff52b803"
        ],
        [
            "rewrite 2 IHp.",
            "VernacExtend",
            "cb41ce3b7f3f47e0711e939027667ef7f75727ad"
        ],
        [
            "now destruct (compare_cont Eq p q).",
            "VernacExtend",
            "6f1ac91a633b1de3a0cb2b16a186c54a63f52684"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem compare_cont_Eq p q c : compare_cont c p q = Eq -> c = Eq.",
            "VernacStartTheoremProof",
            "d7dcb0311f232dace0b202b2c82ff39c10138730"
        ],
        [
            "rewrite compare_cont_spec.",
            "VernacExtend",
            "2628d7f9cc29fc6a56baca9a42d33f28f982e436"
        ],
        [
            "now destruct (p ?= q).",
            "VernacExtend",
            "d8385a697864ad792655234027daa15367763757"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_cont_Lt_Gt p q : compare_cont Lt p q = Gt <-> p > q.",
            "VernacStartTheoremProof",
            "41be83a6e741b0c5afbdfb40e944edddb60a2d8c"
        ],
        [
            "rewrite compare_cont_spec.",
            "VernacExtend",
            "2628d7f9cc29fc6a56baca9a42d33f28f982e436"
        ],
        [
            "unfold gt.",
            "VernacExtend",
            "604f761600c502339ea38c0b01a472f984d4cfa6"
        ],
        [
            "destruct (p ?= q); now split.",
            "VernacExtend",
            "291f9ad71df039d7fa8902ac0bb18ce0b5e4464e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_cont_Lt_Lt p q : compare_cont Lt p q = Lt <-> p <= q.",
            "VernacStartTheoremProof",
            "85c1ace04b6915239219041cc169f8f7a4ad6f8d"
        ],
        [
            "rewrite compare_cont_spec.",
            "VernacExtend",
            "2628d7f9cc29fc6a56baca9a42d33f28f982e436"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "destruct (p ?= q); easy'.",
            "VernacExtend",
            "c74f7074977c6ec40ea910a611d475a26d502ade"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_cont_Gt_Lt p q : compare_cont Gt p q = Lt <-> p < q.",
            "VernacStartTheoremProof",
            "a6e2e07938fb3331e9a437d45533b93bd5d5801b"
        ],
        [
            "rewrite compare_cont_spec.",
            "VernacExtend",
            "2628d7f9cc29fc6a56baca9a42d33f28f982e436"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "destruct (p ?= q); now split.",
            "VernacExtend",
            "291f9ad71df039d7fa8902ac0bb18ce0b5e4464e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_cont_Gt_Gt p q : compare_cont Gt p q = Gt <-> p >= q.",
            "VernacStartTheoremProof",
            "de51f0bfa23548e3a69fb0cbcc299c91f70e700e"
        ],
        [
            "rewrite compare_cont_spec.",
            "VernacExtend",
            "2628d7f9cc29fc6a56baca9a42d33f28f982e436"
        ],
        [
            "unfold ge.",
            "VernacExtend",
            "49aee4aaf6253f31669ea83def7814227efbe0f6"
        ],
        [
            "destruct (p ?= q); easy'.",
            "VernacExtend",
            "c74f7074977c6ec40ea910a611d475a26d502ade"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_cont_Lt_not_Lt p q : compare_cont Lt p q <> Lt <-> p > q.",
            "VernacStartTheoremProof",
            "9d9292927790856fae1d4686e461d2de560fc865"
        ],
        [
            "rewrite compare_cont_Lt_Lt.",
            "VernacExtend",
            "ba3d2272202ff7c08a7640ba2a8f15c13e1ce5a3"
        ],
        [
            "unfold gt, le, compare.",
            "VernacExtend",
            "2aa1655f3d6c79d79bd610bb3e19ff0900d33ea8"
        ],
        [
            "now destruct compare_cont; split; try apply comparison_eq_stable.",
            "VernacExtend",
            "ae60d2e3b2b61d31f2a8d6c2a8fc2f53a4fdd3ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_cont_Lt_not_Gt p q : compare_cont Lt p q <> Gt <-> p <= q.",
            "VernacStartTheoremProof",
            "c845cfcd1935ebd78ce5b89ad25672ba2c08202a"
        ],
        [
            "apply not_iff_compat, compare_cont_Lt_Gt.",
            "VernacExtend",
            "3c1c996891d0f3a1b3849530bfb41b39976d2713"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_cont_Gt_not_Lt p q : compare_cont Gt p q <> Lt <-> p >= q.",
            "VernacStartTheoremProof",
            "4dde5802d28cc6ebfd9e0380158d2f630b45623a"
        ],
        [
            "apply not_iff_compat, compare_cont_Gt_Lt.",
            "VernacExtend",
            "a6fa6d2b3acc6fc9c7b14cb228be01654ed26de1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_cont_Gt_not_Gt p q : compare_cont Gt p q <> Gt <-> p < q.",
            "VernacStartTheoremProof",
            "851a230bd3ae07d8546456ec4d46eadf7570a3e9"
        ],
        [
            "rewrite compare_cont_Gt_Gt.",
            "VernacExtend",
            "761559b8d27055642f7e12836f73bfe80e7b0bee"
        ],
        [
            "unfold ge, lt, compare.",
            "VernacExtend",
            "38afe10bf5a8c3618bdca91997a6778f5d87366c"
        ],
        [
            "now destruct compare_cont; split; try apply comparison_eq_stable.",
            "VernacExtend",
            "ae60d2e3b2b61d31f2a8d6c2a8fc2f53a4fdd3ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_xO_xO p q : (p~0 ?= q~0) = (p ?= q).",
            "VernacStartTheoremProof",
            "6b63f84207c8d9942d3590f927ad7ffc1d45b75c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_xI_xI p q : (p~1 ?= q~1) = (p ?= q).",
            "VernacStartTheoremProof",
            "41c9aa694dd01196f86294c0e879f13b754323e4"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_xI_xO p q : (p~1 ?= q~0) = switch_Eq Gt (p ?= q).",
            "VernacStartTheoremProof",
            "168c6e913082c1e1f8a0b8a0f46624bdfa96444b"
        ],
        [
            "exact (compare_cont_spec p q Gt).",
            "VernacExtend",
            "13467756042609d0d2a18ccc472d0dfd1005424e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_xO_xI p q : (p~0 ?= q~1) = switch_Eq Lt (p ?= q).",
            "VernacStartTheoremProof",
            "9f9344804e5c7a5e37297a7289858e15a3372a21"
        ],
        [
            "exact (compare_cont_spec p q Lt).",
            "VernacExtend",
            "a412701d6c5730c8ec19403f136a205580ebd2e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite compare_xO_xO compare_xI_xI compare_xI_xO compare_xO_xI : compare.",
            "VernacExtend",
            "acd9cd6dc0d4501e4528078dd84af4124d8fb756"
        ],
        [
            "Ltac simpl_compare := autorewrite with compare.",
            "VernacExtend",
            "19baf2c53d3d5136bc533c5f969cefe2f2381da5"
        ],
        [
            "Ltac simpl_compare_in H := autorewrite with compare in H.",
            "VernacExtend",
            "f0d9f808bf5d7e9ce1ab16eb1b691aa139cad45f"
        ],
        [
            "Definition mask2cmp (p:mask) : comparison := match p with | IsNul => Eq | IsPos _ => Gt | IsNeg => Lt end.",
            "VernacDefinition",
            "c33d6941ff209d8e1e1582cfe239ca91f9a5f721"
        ],
        [
            "Lemma compare_sub_mask p q : (p ?= q) = mask2cmp (sub_mask p q).",
            "VernacStartTheoremProof",
            "f5b8e0359cb3e9c5d6b1085ba6a4198b35d2d947"
        ],
        [
            "revert q.",
            "VernacExtend",
            "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
        ],
        [
            "induction p as [p IHp| p IHp| ]; intros [q|q| ]; simpl; trivial; specialize (IHp q); rewrite ?sub_mask_carry_spec; destruct (sub_mask p q) as [|r|]; simpl in *; try clear r; try destruct r; simpl; trivial; simpl_compare; now rewrite IHp.",
            "VernacExtend",
            "c31999c22c1f304b45922da858dcf4b24c30d6b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_iff_add p q : p < q <-> exists r, p + r = q.",
            "VernacStartTheoremProof",
            "bd1d7aed13037170fe7fa26b422c7c50fc27e46c"
        ],
        [
            "unfold \"<\".",
            "VernacExtend",
            "5ca6d75f8034d41b65c8455f1980916b2bd0e6fc"
        ],
        [
            "rewrite <- sub_mask_neg_iff, compare_sub_mask.",
            "VernacExtend",
            "5bab274f15aed7858e22f2ed6cd482f094f005a5"
        ],
        [
            "destruct sub_mask; now split.",
            "VernacExtend",
            "7f361b9af0b0046c3b3c47199fa65469c4ae9201"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gt_iff_add p q : p > q <-> exists r, q + r = p.",
            "VernacStartTheoremProof",
            "f308b637758c1bbfb9c31c0d4d9827ad9da2f1d6"
        ],
        [
            "unfold \">\".",
            "VernacExtend",
            "b2e0f1bc6585653fd1df8e002b95d04ea2720ffb"
        ],
        [
            "rewrite compare_sub_mask.",
            "VernacExtend",
            "46a775fe7004fc1055e41c647e00c9d90e6c27b8"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "case_eq (sub_mask p q); try discriminate; intros r Hr _.",
            "VernacExtend",
            "bc5a401daa011b321d2656f18ae11ffa1bc221d9"
        ],
        [
            "exists r.",
            "VernacExtend",
            "6ca63eb3bc93583233e98ef7c15aab920cd0ed23"
        ],
        [
            "now apply sub_mask_pos_iff.",
            "VernacExtend",
            "8d717183cd4b2d904ac24c85c1e8a92aa9dc6ceb"
        ],
        [
            "intros (r,Hr).",
            "VernacExtend",
            "ba92b68144cf2c7f6eb625a71f345531fa3dfb63"
        ],
        [
            "apply sub_mask_pos_iff in Hr.",
            "VernacExtend",
            "8346d1af22efac7dacb2832298ba123a07a66707"
        ],
        [
            "now rewrite Hr.",
            "VernacExtend",
            "e54328ba9133a957637a9d95f50b51833d047168"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem compare_cont_refl p c : compare_cont c p p = c.",
            "VernacStartTheoremProof",
            "b8e37a5dbeeed951978239483e64acf09aaf55c6"
        ],
        [
            "now induction p.",
            "VernacExtend",
            "a249f3698ba69f1454bd4616470af1152b100b42"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_cont_antisym p q c : CompOpp (compare_cont c p q) = compare_cont (CompOpp c) q p.",
            "VernacStartTheoremProof",
            "5a44ae594481b55ca60e72c2f5eb5b7b8e41b6e2"
        ],
        [
            "revert q c.",
            "VernacExtend",
            "b4e0f152623b0660330016a93d21838c60475c9f"
        ],
        [
            "induction p as [p IHp|p IHp| ]; intros [q|q| ] c; simpl; trivial; apply IHp.",
            "VernacExtend",
            "38fa7aae7cf7460d4cad440a6fe0c8f063545b94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_eq_iff p q : (p ?= q) = Eq <-> p = q.",
            "VernacStartTheoremProof",
            "904added116ad32cc14ade861a5a6d08508cf6d2"
        ],
        [
            "rewrite compare_sub_mask, <- sub_mask_nul_iff.",
            "VernacExtend",
            "93332db2204abe6d572702d22943bd43020c8106"
        ],
        [
            "destruct sub_mask; now split.",
            "VernacExtend",
            "7f361b9af0b0046c3b3c47199fa65469c4ae9201"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_antisym p q : (q ?= p) = CompOpp (p ?= q).",
            "VernacStartTheoremProof",
            "217fab263f3c8ad008e41fc3d35a7019e88ac426"
        ],
        [
            "unfold compare.",
            "VernacExtend",
            "b5d4704dfbc3e5e9441ee8f2b7957e022b2209cb"
        ],
        [
            "now rewrite compare_cont_antisym.",
            "VernacExtend",
            "ed960c2beb0d4d5ba935a3eedbc7a4bd70f03ba7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_lt_iff p q : (p ?= q) = Lt <-> p < q.",
            "VernacStartTheoremProof",
            "21e524da5a03284f083db2505b8c87fb4c5515d6"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_le_iff p q : (p ?= q) <> Gt <-> p <= q.",
            "VernacStartTheoremProof",
            "b2f4a30e68f92d9504d3c34d39a37417cfdcba87"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Include BoolOrderFacts.",
            "VernacInclude",
            "519e384a7bf9b986f7c52ee3d7beb61721d9a8ea"
        ],
        [
            "Definition le_lteq := lt_eq_cases.",
            "VernacDefinition",
            "322af5fed92d374df08becdea2cc8e4daec26f90"
        ],
        [
            "Lemma gt_lt_iff p q : p > q <-> q < p.",
            "VernacStartTheoremProof",
            "f597b0c310b44e6bd635f10d6db969a244fed0c8"
        ],
        [
            "unfold lt, gt.",
            "VernacExtend",
            "8cc15ec47569f34eb3b35be0e4a59a64cd138877"
        ],
        [
            "now rewrite compare_antisym, CompOpp_iff.",
            "VernacExtend",
            "3872098e9b9c5487d518b55127e4b1376337872a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gt_lt p q : p > q -> q < p.",
            "VernacStartTheoremProof",
            "19cb0d6faefd395ab1a08bdba1f2a2c8028ab32b"
        ],
        [
            "apply gt_lt_iff.",
            "VernacExtend",
            "4620efeab5a40036b9a55501443fc8dbfb7fc6d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_gt p q : p < q -> q > p.",
            "VernacStartTheoremProof",
            "9511f246b2db808646a7e50ca0fdc84af2cd2cd9"
        ],
        [
            "apply gt_lt_iff.",
            "VernacExtend",
            "4620efeab5a40036b9a55501443fc8dbfb7fc6d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_le_iff p q : p >= q <-> q <= p.",
            "VernacStartTheoremProof",
            "b8d8f257b7d4a7d4d670b7e372040ca09cfbe346"
        ],
        [
            "unfold le, ge.",
            "VernacExtend",
            "49ff096655be717232bfbbc31cf77140d8c09c79"
        ],
        [
            "now rewrite compare_antisym, CompOpp_iff.",
            "VernacExtend",
            "3872098e9b9c5487d518b55127e4b1376337872a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ge_le p q : p >= q -> q <= p.",
            "VernacStartTheoremProof",
            "823f4a1c48aaecb467a0836bd7987e4bbfeab4a8"
        ],
        [
            "apply ge_le_iff.",
            "VernacExtend",
            "0473d285db861d6caf8a2f4ce58491d5fe906cdb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_ge p q : p <= q -> q >= p.",
            "VernacStartTheoremProof",
            "cbc7b841e8f93f79e92caa062cc02d991d63f68d"
        ],
        [
            "apply ge_le_iff.",
            "VernacExtend",
            "0473d285db861d6caf8a2f4ce58491d5fe906cdb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_succ_r p q : switch_Eq Gt (p ?= succ q) = switch_Eq Lt (p ?= q).",
            "VernacStartTheoremProof",
            "89f02ba3379f4694c0c58265cc26965b8f99c40d"
        ],
        [
            "revert q.",
            "VernacExtend",
            "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
        ],
        [
            "induction p as [p IH|p IH| ]; intros [q|q| ]; simpl; simpl_compare; rewrite ?IH; trivial; (now destruct compare) || (now destruct p).",
            "VernacExtend",
            "54f035ab147852ff5f8bab024177c73450754038"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_succ_l p q : switch_Eq Lt (succ p ?= q) = switch_Eq Gt (p ?= q).",
            "VernacStartTheoremProof",
            "e6ed51b9535baae8100cd51b49e109152d7a4e84"
        ],
        [
            "rewrite 2 (compare_antisym q).",
            "VernacExtend",
            "e7180feebad7b3be387a1332b57458674cdda9a2"
        ],
        [
            "generalize (compare_succ_r q p).",
            "VernacExtend",
            "9fa9892ab60b51b5cf236a0f6ebbad7b837eea34"
        ],
        [
            "now do 2 destruct compare.",
            "VernacExtend",
            "42178b3c4c6f0fb23a8b0b658ad0a2f4d01afaa9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_succ_r p q : p < succ q <-> p <= q.",
            "VernacStartTheoremProof",
            "e22442b54fc35d92d8d34efa867ffd2b28a01320"
        ],
        [
            "unfold lt, le.",
            "VernacExtend",
            "f599fabfc187f3f20300529b934c5737cd55a245"
        ],
        [
            "generalize (compare_succ_r p q).",
            "VernacExtend",
            "641d00bfd1cb32cd287d00aaee5d335d0b2a07f0"
        ],
        [
            "do 2 destruct compare; try discriminate; now split.",
            "VernacExtend",
            "42422d917f9e388823ca6c9ebe150c20cf0c2a9a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_succ_diag_r p : p < succ p.",
            "VernacStartTheoremProof",
            "8f1f1cd7a79bd1d359ec15f186749667ca29b20f"
        ],
        [
            "rewrite lt_iff_add.",
            "VernacExtend",
            "9e297de9f5df2b8889710ab7c7e48bb6361434c1"
        ],
        [
            "exists 1.",
            "VernacExtend",
            "18eb310858be5acae7304d0d9ed33063568db310"
        ],
        [
            "apply add_1_r.",
            "VernacExtend",
            "4573128e3a4c5f8b078789d2fc06cc51ceec43a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_succ_succ p q : (succ p ?= succ q) = (p ?= q).",
            "VernacStartTheoremProof",
            "3f63d5e0dd8b7e3b5ee24afc49254e95f67769ef"
        ],
        [
            "revert q.",
            "VernacExtend",
            "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
        ],
        [
            "induction p; destruct q; simpl; simpl_compare; trivial; apply compare_succ_l || apply compare_succ_r || (now destruct p) || (now destruct q).",
            "VernacExtend",
            "d40691cb26c122b6d60961134c650dcb1ae0c2b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_1_l p : 1 <= p.",
            "VernacStartTheoremProof",
            "946ecc254c9a3e481f9bf0df88b27bf0c6298c88"
        ],
        [
            "now destruct p.",
            "VernacExtend",
            "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nlt_1_r p : ~ p < 1.",
            "VernacStartTheoremProof",
            "2f45d89e5ed22d071e8386796afe75b0c2b7a4b8"
        ],
        [
            "now destruct p.",
            "VernacExtend",
            "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_1_succ p : 1 < succ p.",
            "VernacStartTheoremProof",
            "de7334223cb146a07d1f7870ed174dd27c8bb07f"
        ],
        [
            "apply lt_succ_r, le_1_l.",
            "VernacExtend",
            "042cd5bb671d220eb525e0c93f628fbab64311d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_nlt p q : p <= q <-> ~ q < p.",
            "VernacStartTheoremProof",
            "eed7630e981e01839fbd6e24620b288dec137e35"
        ],
        [
            "now rewrite <- ge_le_iff.",
            "VernacExtend",
            "7cf350ca36758f6b98b26241116c5a5f97f217c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_nle p q : p < q <-> ~ q <= p.",
            "VernacStartTheoremProof",
            "ec3c490fe1a0d8ea632f68347470e2f4c779260f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold lt, le.",
            "VernacExtend",
            "f599fabfc187f3f20300529b934c5737cd55a245"
        ],
        [
            "rewrite compare_antisym.",
            "VernacExtend",
            "79a52ead430e61efd31081179fc8e3db332e367d"
        ],
        [
            "destruct compare; split; auto; easy'.",
            "VernacExtend",
            "4696d08e3f0e8da3c6ed77e2096058c6b59f6d50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_le_incl p q : p<q -> p<=q.",
            "VernacStartTheoremProof",
            "c02caa2eae112deeb7fb33a93b7a4356e5406ecd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply le_lteq.",
            "VernacExtend",
            "cb7bdce7e2231f7f79568e29f9a47c0324abe635"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_lt_succ n m : n < m -> n < succ m.",
            "VernacStartTheoremProof",
            "0c7fc82906c7bebe269ff61e09ad15507a9ce36e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now apply lt_succ_r, lt_le_incl.",
            "VernacExtend",
            "58e155103742710e0f5489c2206491ba49b3dafe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succ_lt_mono n m : n < m <-> succ n < succ m.",
            "VernacStartTheoremProof",
            "833aa50bfc1845305de5f13859d02d21dce05bfb"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "now rewrite compare_succ_succ.",
            "VernacExtend",
            "4e9c018588615678832920aa76a127dce9efde65"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succ_le_mono n m : n <= m <-> succ n <= succ m.",
            "VernacStartTheoremProof",
            "a6b40efddce5ad955105e9a0c24cc65291c1103d"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "now rewrite compare_succ_succ.",
            "VernacExtend",
            "4e9c018588615678832920aa76a127dce9efde65"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_trans n m p : n < m -> m < p -> n < p.",
            "VernacStartTheoremProof",
            "3860caac8f10512ab33ba55d8bd0543d45275fd7"
        ],
        [
            "rewrite 3 lt_iff_add.",
            "VernacExtend",
            "259659b844571aa5cb607c51217886be4153e32c"
        ],
        [
            "intros (r,Hr) (s,Hs).",
            "VernacExtend",
            "f6ce4467e30dff9ab680e25ae58276a5cf87b1f4"
        ],
        [
            "exists (r+s).",
            "VernacExtend",
            "865ede9feebcdc702be0cd8cf7c733e0da313bed"
        ],
        [
            "now rewrite add_assoc, Hr, Hs.",
            "VernacExtend",
            "e87aeafd9c20ed292e4ac5ffa1984c99709028df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_ind : forall (A : positive -> Prop) (n : positive), A (succ n) -> (forall m : positive, n < m -> A m -> A (succ m)) -> forall m : positive, n < m -> A m.",
            "VernacStartTheoremProof",
            "83275b5b1362da5b2c43baca90a266c2d5533ee1"
        ],
        [
            "intros A n AB AS m.",
            "VernacExtend",
            "2afb47c2041075bd44fc66c46a35261d37590899"
        ],
        [
            "induction m using peano_ind; intros H.",
            "VernacExtend",
            "6d7ac4dc154c0b26641501cbc579a59ce79a48b1"
        ],
        [
            "elim (nlt_1_r _ H).",
            "VernacExtend",
            "104e4915abe94f7726bcf0776ebca03988f219fc"
        ],
        [
            "apply lt_succ_r, le_lteq in H.",
            "VernacExtend",
            "b30fae80f2e0753596509a3a66a9412e811f2b95"
        ],
        [
            "destruct H as [H|H]; subst; auto.",
            "VernacExtend",
            "8069150b6a1fce4e6ec0864fe4a3061f2fa9f781"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance lt_strorder : StrictOrder lt.",
            "VernacInstance",
            "fa189ac61b1474957ad71f3e51fbb244abde9f22"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact lt_irrefl.",
            "VernacExtend",
            "efac63f50fa51e1cc457cadaffbd12e6b4c1cdb9"
        ],
        [
            "exact lt_trans.",
            "VernacExtend",
            "51f1712d927e4469da489827ec477e2f28c0a8f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance lt_compat : Proper (Logic.eq==>Logic.eq==>iff) lt.",
            "VernacInstance",
            "f81d9bfb9b7c6774c0c2d9098e3abf48b7a268ee"
        ],
        [
            "repeat red.",
            "VernacExtend",
            "517f28ca1856880bafd07df42d9497606ec92845"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "subst; auto.",
            "VernacExtend",
            "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_total p q : p < q \\/ p = q \\/ q < p.",
            "VernacStartTheoremProof",
            "be851d1a4e9ca8e9df106d62cd56e639912b71c8"
        ],
        [
            "case (compare_spec p q); intuition.",
            "VernacExtend",
            "e493cefa0dbae3a23e8d97a7d7a2d05ef48ef3b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_refl p : p <= p.",
            "VernacStartTheoremProof",
            "1f3e993bfc1f145c8ec86c341cd316625be146c3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "now rewrite compare_refl.",
            "VernacExtend",
            "3f5dcea3b3e048c8f7ef5490b836aab223ab2c13"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_lt_trans n m p : n <= m -> m < p -> n < p.",
            "VernacStartTheoremProof",
            "21b54c57cca382db418731ff1480b6cc04035bce"
        ],
        [
            "intros H H'.",
            "VernacExtend",
            "cdfc45f8747107ed208d8045fb3d9a7935db0014"
        ],
        [
            "apply le_lteq in H.",
            "VernacExtend",
            "1974d950a661b01b61ff5cf5027e10a5097fc9c7"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "now apply lt_trans with m.",
            "VernacExtend",
            "cf5e60732d3eeedf0057321fb866e4a987164eb6"
        ],
        [
            "now subst.",
            "VernacExtend",
            "89cc250d34dafb32c3653b2706abafd433151f2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_le_trans n m p : n < m -> m <= p -> n < p.",
            "VernacStartTheoremProof",
            "15d8bb08b6bb70bf6ed64f9c080fcdfa08e14036"
        ],
        [
            "intros H H'.",
            "VernacExtend",
            "cdfc45f8747107ed208d8045fb3d9a7935db0014"
        ],
        [
            "apply le_lteq in H'.",
            "VernacExtend",
            "8daf999babc3a7fb650dba9f2057b63d40134db6"
        ],
        [
            "destruct H'.",
            "VernacExtend",
            "6b415f99235d5d47642f9e2340679885dc667286"
        ],
        [
            "now apply lt_trans with m.",
            "VernacExtend",
            "cf5e60732d3eeedf0057321fb866e4a987164eb6"
        ],
        [
            "now subst.",
            "VernacExtend",
            "89cc250d34dafb32c3653b2706abafd433151f2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_trans n m p : n <= m -> m <= p -> n <= p.",
            "VernacStartTheoremProof",
            "a0b882984392abfcd827416d95ed9f5caffb353d"
        ],
        [
            "intros H H'.",
            "VernacExtend",
            "cdfc45f8747107ed208d8045fb3d9a7935db0014"
        ],
        [
            "apply le_lteq in H.",
            "VernacExtend",
            "1974d950a661b01b61ff5cf5027e10a5097fc9c7"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "apply le_lteq; left.",
            "VernacExtend",
            "a37dd297d828d06ad68a5dbc45e0bf571ab399a2"
        ],
        [
            "now apply lt_le_trans with m.",
            "VernacExtend",
            "66711a00b2b86250cc7b28d7ed808acdbf8111b5"
        ],
        [
            "now subst.",
            "VernacExtend",
            "89cc250d34dafb32c3653b2706abafd433151f2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_succ_l n m : succ n <= m <-> n < m.",
            "VernacStartTheoremProof",
            "e4dcf0a49a54b308a343f5070d8489ad7167666d"
        ],
        [
            "rewrite <- lt_succ_r.",
            "VernacExtend",
            "dbb8763606ec1c465f3d52d334206f7e2eb38e0a"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply succ_lt_mono.",
            "VernacExtend",
            "55afd8e289f332fb21c042111ddc7b22a9f2f5ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_antisym p q : p <= q -> q <= p -> p = q.",
            "VernacStartTheoremProof",
            "c79f8f2f85642aae13dbe25b7b13db16d7a9b1ba"
        ],
        [
            "rewrite le_lteq; destruct 1; auto.",
            "VernacExtend",
            "ea4fb3af3ddbc7b90dbaed1fc53476f24d01779a"
        ],
        [
            "rewrite le_lteq; destruct 1; auto.",
            "VernacExtend",
            "ea4fb3af3ddbc7b90dbaed1fc53476f24d01779a"
        ],
        [
            "elim (lt_irrefl p).",
            "VernacExtend",
            "42eec059830563d4c4b83e6aeb2563c20f0e1f60"
        ],
        [
            "now transitivity q.",
            "VernacExtend",
            "a7fb7aced21c0eaab85a08deb6222d869fa0c9c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance le_preorder : PreOrder le.",
            "VernacInstance",
            "9cbc7086d1bdea00a4ba3cd0150d16f044ade292"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exact le_refl.",
            "VernacExtend",
            "a73d9c78116dc2b9c2d99e2ebf0d2a9d4f788af3"
        ],
        [
            "exact le_trans.",
            "VernacExtend",
            "13a945d76187193047a580d158ad861a6a75e9d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance le_partorder : PartialOrder Logic.eq le.",
            "VernacInstance",
            "0362d12a97c5ec0b415202dbe457330fc94a28d2"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "change (x=y <-> x <= y <= x).",
            "VernacExtend",
            "c9feecb1d979afb6efde8cf0ba94a0c259a0f25a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros; now subst.",
            "VernacExtend",
            "f75b5a2d518b7b1521370155178b4b62db2fad48"
        ],
        [
            "destruct 1; now apply le_antisym.",
            "VernacExtend",
            "bc3e8b5fc96cbb9c11c184ae35201bb1999deeb7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_compare_mono_l p q r : (p+q ?= p+r) = (q ?= r).",
            "VernacStartTheoremProof",
            "ff960b32eccfa8349706b2d47925f035221016c8"
        ],
        [
            "revert p q r.",
            "VernacExtend",
            "bf89cd5d6c691b3b6902602b2ef0c6e0d9272af5"
        ],
        [
            "induction p using peano_ind; intros q r.",
            "VernacExtend",
            "94a8b0234ac8ddc6047d058ae80fbe4e0c07a63a"
        ],
        [
            "rewrite 2 add_1_l.",
            "VernacExtend",
            "596ba673e2b8881771597d04c9decb1e27cebd8d"
        ],
        [
            "apply compare_succ_succ.",
            "VernacExtend",
            "b9392939c57232a0b87d6c44f883037d0b983ec7"
        ],
        [
            "now rewrite 2 add_succ_l, compare_succ_succ.",
            "VernacExtend",
            "9bea63e0541b4501e423a5ecbdb3bb9d8c202ab0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_compare_mono_r p q r : (q+p ?= r+p) = (q ?= r).",
            "VernacStartTheoremProof",
            "b95643bd3818f6ebdd66181d4c8af866f438c19e"
        ],
        [
            "rewrite 2 (add_comm _ p).",
            "VernacExtend",
            "dba3406e8bd0a4eace55f8830dd1af3facbcca0d"
        ],
        [
            "apply add_compare_mono_l.",
            "VernacExtend",
            "583d761e4e61d9a0e0ea620afd6c04f7187936cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_add_diag_r p q : p < p + q.",
            "VernacStartTheoremProof",
            "669e8b334a6ae931894cc7dd45ad9200891ea0a8"
        ],
        [
            "rewrite lt_iff_add.",
            "VernacExtend",
            "9e297de9f5df2b8889710ab7c7e48bb6361434c1"
        ],
        [
            "now exists q.",
            "VernacExtend",
            "09397d95836be942129fc24cc71121ca96bc261f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_lt_mono_l p q r : q<r <-> p+q < p+r.",
            "VernacStartTheoremProof",
            "9116826cf70ef0d932411c2a6e279c34fdcd0a40"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "rewrite add_compare_mono_l.",
            "VernacExtend",
            "425c42f11b6563648fae36a7baa4cddb2448cd95"
        ],
        [
            "apply iff_refl.",
            "VernacExtend",
            "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_lt_mono_r p q r : q<r <-> q+p < r+p.",
            "VernacStartTheoremProof",
            "2053be438526dc4bd8221fdd74ba068bd3d494d7"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "rewrite add_compare_mono_r.",
            "VernacExtend",
            "c72b4da57b53aed217d6a14597e8aa6b6eb4d312"
        ],
        [
            "apply iff_refl.",
            "VernacExtend",
            "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_lt_mono p q r s : p<q -> r<s -> p+r<q+s.",
            "VernacStartTheoremProof",
            "4f1b4a7154e2c737b774143683bb6781b5098970"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply lt_trans with (p+s).",
            "VernacExtend",
            "c0c581fad77f169095a96931e800bdedf13a9871"
        ],
        [
            "now apply add_lt_mono_l.",
            "VernacExtend",
            "71fdc858993e7580fa54585b82c355fc51c6ba6b"
        ],
        [
            "now apply add_lt_mono_r.",
            "VernacExtend",
            "d80bc326a6c2650be2a483e4bfe336a943367a3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_le_mono_l p q r : q<=r <-> p+q<=p+r.",
            "VernacStartTheoremProof",
            "f56fe30464ce0f1104fd01afa2b1466c15a4ecb9"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "rewrite add_compare_mono_l.",
            "VernacExtend",
            "425c42f11b6563648fae36a7baa4cddb2448cd95"
        ],
        [
            "apply iff_refl.",
            "VernacExtend",
            "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_le_mono_r p q r : q<=r <-> q+p<=r+p.",
            "VernacStartTheoremProof",
            "8a4855b0b6ba4e994a368af16d2a5a75fa7f208c"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "rewrite add_compare_mono_r.",
            "VernacExtend",
            "c72b4da57b53aed217d6a14597e8aa6b6eb4d312"
        ],
        [
            "apply iff_refl.",
            "VernacExtend",
            "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_le_mono p q r s : p<=q -> r<=s -> p+r <= q+s.",
            "VernacStartTheoremProof",
            "085c145fa0f9e53cea31932ca8fec53b4dd5db68"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply le_trans with (p+s).",
            "VernacExtend",
            "eee0034c7f8c699f58e36538fa1a1d154456cf4c"
        ],
        [
            "now apply add_le_mono_l.",
            "VernacExtend",
            "0d41a77e1ecac43d6b8c8ba3730494b687f116ee"
        ],
        [
            "now apply add_le_mono_r.",
            "VernacExtend",
            "fa8c57b0015f2326cde939db58f83faf349538ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_compare_mono_l p q r : (p*q ?= p*r) = (q ?= r).",
            "VernacStartTheoremProof",
            "b657231dd5adc35c4018147ed0f6b9bf6e1bb2a8"
        ],
        [
            "revert q r.",
            "VernacExtend",
            "65c8747858e115a11b033f8bfe1b98b454d12381"
        ],
        [
            "induction p; simpl; trivial.",
            "VernacExtend",
            "191f34c188b4e3e6c840e01672216f5b8c48d646"
        ],
        [
            "intros q r.",
            "VernacExtend",
            "5223fa321bdec4486046b37f561ef1874a5acdda"
        ],
        [
            "specialize (IHp q r).",
            "VernacExtend",
            "b4d0a5267a1b3f3830bb3876274792ffcce53535"
        ],
        [
            "destruct (compare_spec q r).",
            "VernacExtend",
            "3fbdf43465d63b9d601384f51e40bdf925fd0052"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply compare_refl.",
            "VernacExtend",
            "5ecedda5f46ae499e6b31ca28202515be361c217"
        ],
        [
            "now apply add_lt_mono.",
            "VernacExtend",
            "efb6f0464993a5d877db59b67e2134bcbb9eaefa"
        ],
        [
            "now apply lt_gt, add_lt_mono, gt_lt.",
            "VernacExtend",
            "42e107104132385c47169b6a1830c99e428af846"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_compare_mono_r p q r : (q*p ?= r*p) = (q ?= r).",
            "VernacStartTheoremProof",
            "cff1f87b0bc095820f4a3bfb4f2b9c14d3655c08"
        ],
        [
            "rewrite 2 (mul_comm _ p).",
            "VernacExtend",
            "03058eacaa5809c21f8daee9a62b5b92113e6d64"
        ],
        [
            "apply mul_compare_mono_l.",
            "VernacExtend",
            "e92654fcd7db53b45355ff76f75a2ba52ffeab6a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_lt_mono_l p q r : q<r <-> p*q < p*r.",
            "VernacStartTheoremProof",
            "6b165ba7ee3953b57252eeaeb866b50a8ef7c295"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "rewrite mul_compare_mono_l.",
            "VernacExtend",
            "71b5fe03e876a602e43a420f18b96122ce7ac1ee"
        ],
        [
            "apply iff_refl.",
            "VernacExtend",
            "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_lt_mono_r p q r : q<r <-> q*p < r*p.",
            "VernacStartTheoremProof",
            "8ae4d86cf215387955751552f6dd013193cfb878"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "rewrite mul_compare_mono_r.",
            "VernacExtend",
            "8fbe09571db7f2d421c5bd08a176f1bd4b73621a"
        ],
        [
            "apply iff_refl.",
            "VernacExtend",
            "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_lt_mono p q r s : p<q -> r<s -> p*r < q*s.",
            "VernacStartTheoremProof",
            "16c5995896c89c18a742dbbbf697d682b682a944"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply lt_trans with (p*s).",
            "VernacExtend",
            "7dc04e8a683e3d7ebadbdb06179d4b202764456c"
        ],
        [
            "now apply mul_lt_mono_l.",
            "VernacExtend",
            "c55b8263ed1ea0e598827ab4500bc6fc1ab20bee"
        ],
        [
            "now apply mul_lt_mono_r.",
            "VernacExtend",
            "c7f98c6fa3953204ac1a279032026f09af3ffb4b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_le_mono_l p q r : q<=r <-> p*q<=p*r.",
            "VernacStartTheoremProof",
            "592c6dbd63a967b314c4299323350137ea7a35d1"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "rewrite mul_compare_mono_l.",
            "VernacExtend",
            "71b5fe03e876a602e43a420f18b96122ce7ac1ee"
        ],
        [
            "apply iff_refl.",
            "VernacExtend",
            "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_le_mono_r p q r : q<=r <-> q*p<=r*p.",
            "VernacStartTheoremProof",
            "01fe4701faf8768d3472df5bebbce201cf504ca1"
        ],
        [
            "unfold le.",
            "VernacExtend",
            "4dbc0b49762d44208e0577d0877ddec914c49a1a"
        ],
        [
            "rewrite mul_compare_mono_r.",
            "VernacExtend",
            "8fbe09571db7f2d421c5bd08a176f1bd4b73621a"
        ],
        [
            "apply iff_refl.",
            "VernacExtend",
            "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_le_mono p q r s : p<=q -> r<=s -> p*r <= q*s.",
            "VernacStartTheoremProof",
            "45414a3364f814e8f35caf25004377dd0827a070"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply le_trans with (p*s).",
            "VernacExtend",
            "3cd6c75d5d450eba90932952cd2eb80816c54049"
        ],
        [
            "now apply mul_le_mono_l.",
            "VernacExtend",
            "808b9f9b8f47c1212e5b1bb7b1ee4000af7eba9b"
        ],
        [
            "now apply mul_le_mono_r.",
            "VernacExtend",
            "48cde5983d97cc83e88fcfb869b5a3b385372b5e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_add_r p q : p < p+q.",
            "VernacStartTheoremProof",
            "6dbbaba5bcfc7b60b2ff3b5654648b93e418c54b"
        ],
        [
            "induction q using peano_ind.",
            "VernacExtend",
            "3e7af1b8228a698ed7f68ee2c0a53621cba7fb13"
        ],
        [
            "rewrite add_1_r.",
            "VernacExtend",
            "d1ec3ca17f17da3192e164fb41c4a163b74f7dc5"
        ],
        [
            "apply lt_succ_diag_r.",
            "VernacExtend",
            "4c9c1b29b5f87ccde25c288c18ef725e9dffbefb"
        ],
        [
            "apply lt_trans with (p+q); auto.",
            "VernacExtend",
            "28a22e8c01813c37f29a52d591c2541b9f6d86c8"
        ],
        [
            "apply add_lt_mono_l, lt_succ_diag_r.",
            "VernacExtend",
            "683230fd333a8e3ae22c7260adb7c907c4f05638"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_not_add_l p q : ~ p+q < p.",
            "VernacStartTheoremProof",
            "d80ae53aebd7cbee8bddcd46e72ddcdc08c25a41"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "elim (lt_irrefl p).",
            "VernacExtend",
            "42eec059830563d4c4b83e6aeb2563c20f0e1f60"
        ],
        [
            "apply lt_trans with (p+q); auto using lt_add_r.",
            "VernacExtend",
            "3e649264bb26c4da796bfec22f4fd3ab4a6c87ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_gt_1 n p : 1<n -> 1<n^p.",
            "VernacStartTheoremProof",
            "66dc734eaf5a1d89b2ffc1e834f79790e69cda64"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "induction p using peano_ind.",
            "VernacExtend",
            "b4d143ad64bf92648b7416efcb2c8dc51cc2d397"
        ],
        [
            "now rewrite pow_1_r.",
            "VernacExtend",
            "33bd75c1cf59330dfcca80be4aa965858ec0519d"
        ],
        [
            "rewrite pow_succ_r.",
            "VernacExtend",
            "08027ee0819435d6bca65fc861fe07532a238a46"
        ],
        [
            "apply lt_trans with (n*1).",
            "VernacExtend",
            "389c46979bfbd9a6f2e77f0b29c245fb53b19fb0"
        ],
        [
            "now rewrite mul_1_r.",
            "VernacExtend",
            "12e64d5128c998cd6c976dbc7b183718cf17ae45"
        ],
        [
            "now apply mul_lt_mono_l.",
            "VernacExtend",
            "c55b8263ed1ea0e598827ab4500bc6fc1ab20bee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_1_r p : sub p 1 = pred p.",
            "VernacStartTheoremProof",
            "82a7eb082abdce7ca54f943cd34f42cef5d5d7a2"
        ],
        [
            "now destruct p.",
            "VernacExtend",
            "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_sub p : pred p = sub p 1.",
            "VernacStartTheoremProof",
            "333616ea0dd416bf7c201837b4d27b8e9b811c20"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply sub_1_r.",
            "VernacExtend",
            "a2c8aa1bdf263411971fb3af0a43d192ec41adc8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_succ_r p q : p - (succ q) = pred (p - q).",
            "VernacStartTheoremProof",
            "cf2fa6d2a3401b250a18f4bbf52420ade2f4792d"
        ],
        [
            "unfold sub; rewrite sub_mask_succ_r, sub_mask_carry_spec.",
            "VernacExtend",
            "36e0332198b34facf78cbabc990e678a684a747a"
        ],
        [
            "destruct (sub_mask p q) as [|[r|r| ]|]; auto.",
            "VernacExtend",
            "c272b650853dd9bb039bf3390a4b5379e28b707d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_mask_pos' p q : q < p -> exists r, sub_mask p q = IsPos r /\\ q + r = p.",
            "VernacStartTheoremProof",
            "b11b1722fe63e1d68d25f379990b30c1da0340ab"
        ],
        [
            "rewrite lt_iff_add.",
            "VernacExtend",
            "9e297de9f5df2b8889710ab7c7e48bb6361434c1"
        ],
        [
            "intros (r,Hr).",
            "VernacExtend",
            "ba92b68144cf2c7f6eb625a71f345531fa3dfb63"
        ],
        [
            "exists r.",
            "VernacExtend",
            "6ca63eb3bc93583233e98ef7c15aab920cd0ed23"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "now apply sub_mask_pos_iff.",
            "VernacExtend",
            "8d717183cd4b2d904ac24c85c1e8a92aa9dc6ceb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_mask_pos p q : q < p -> exists r, sub_mask p q = IsPos r.",
            "VernacStartTheoremProof",
            "48b368b952190dacdf4a4b539a79a4d0723b9003"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "destruct (sub_mask_pos' p q H) as (r & Hr & _).",
            "VernacExtend",
            "c53bbe154d616cdb53ee2d046a4a2bf92b5a0a3e"
        ],
        [
            "now exists r.",
            "VernacExtend",
            "def9e683686351666c2c2728e608a53ca4e6093c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_add p q : q < p -> (p-q)+q = p.",
            "VernacStartTheoremProof",
            "fd3199dc97b5c2d57dc08d5a688edd59b9c4e15f"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "destruct (sub_mask_pos p q H) as (r,U).",
            "VernacExtend",
            "85a0a2e2e58c4815fed51cceefc4eddfecc2c56e"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "rewrite U.",
            "VernacExtend",
            "f4f8e08f4b6e92bbd380857e547804f1e7e70cda"
        ],
        [
            "rewrite add_comm.",
            "VernacExtend",
            "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
        ],
        [
            "now apply sub_mask_add.",
            "VernacExtend",
            "0b9578d11f34dd825b6c929f1d1e6da6cee254c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_sub p q : (p+q)-q = p.",
            "VernacStartTheoremProof",
            "b8f6ad52ab0d4e4fb6750f79812e790b8fb0b478"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply add_reg_r with q.",
            "VernacExtend",
            "346ae7ea36f1ceb43cba23b79ecd3cd76d65ef58"
        ],
        [
            "rewrite sub_add; trivial.",
            "VernacExtend",
            "7df7f8caf8dcd3aec81ce09b9d966f9f2dc8f9ac"
        ],
        [
            "rewrite add_comm.",
            "VernacExtend",
            "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
        ],
        [
            "apply lt_add_r.",
            "VernacExtend",
            "e0bb9e1915ba69a811604e481e6dd832e1686316"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_sub_distr_l p q r : r<q -> p*(q-r) = p*q-p*r.",
            "VernacStartTheoremProof",
            "88abb0df094b2ab9247ba34aa2610767e08292f0"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply add_reg_r with (p*r).",
            "VernacExtend",
            "944be4a3602f50238e0aa992983ca66869a96e96"
        ],
        [
            "rewrite <- mul_add_distr_l.",
            "VernacExtend",
            "477f9f42bfa79f479629d0d7bbcc65bacaa7c131"
        ],
        [
            "rewrite sub_add; trivial.",
            "VernacExtend",
            "7df7f8caf8dcd3aec81ce09b9d966f9f2dc8f9ac"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply sub_add; trivial.",
            "VernacExtend",
            "35a4deee5f9ce04bc285a3526bf170bc518164c1"
        ],
        [
            "now apply mul_lt_mono_l.",
            "VernacExtend",
            "c55b8263ed1ea0e598827ab4500bc6fc1ab20bee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_sub_distr_r p q r : q<p -> (p-q)*r = p*r-q*r.",
            "VernacStartTheoremProof",
            "8dddc25cf858cc3eaf87747794007bb6aa578e1c"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "rewrite 3 (mul_comm _ r).",
            "VernacExtend",
            "f182313bbe66c799b8245a3eefcad739cf4bc603"
        ],
        [
            "now apply mul_sub_distr_l.",
            "VernacExtend",
            "780680429814af2097dee903916905501dd46289"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_lt_mono_l p q r: q<p -> p<r -> r-p < r-q.",
            "VernacStartTheoremProof",
            "abde46a233612d48d2e5ee9af79fc28a6cc2d9b6"
        ],
        [
            "intros Hqp Hpr.",
            "VernacExtend",
            "1cd4d1be160f2d2859d59b15c43727f186b1e0b1"
        ],
        [
            "apply (add_lt_mono_r p).",
            "VernacExtend",
            "2d4b030f796ec0bff01e66fd0221f3c148c44c37"
        ],
        [
            "rewrite sub_add by trivial.",
            "VernacExtend",
            "91364fbeb2d738c4020f95d7934a14285e0c9962"
        ],
        [
            "apply le_lt_trans with ((r-q)+q).",
            "VernacExtend",
            "5e66cf266b7b77c1070ed95579bbc2e0549feb9d"
        ],
        [
            "rewrite sub_add by (now apply lt_trans with p).",
            "VernacExtend",
            "412d5edc31511ed8699e5ae683753e5beace9bc4"
        ],
        [
            "apply le_refl.",
            "VernacExtend",
            "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
        ],
        [
            "now apply add_lt_mono_l.",
            "VernacExtend",
            "71fdc858993e7580fa54585b82c355fc51c6ba6b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_compare_mono_l p q r : q<p -> r<p -> (p-q ?= p-r) = (r ?= q).",
            "VernacStartTheoremProof",
            "a3063bd70272e380c52e3d932657cece1e4aa741"
        ],
        [
            "intros Hqp Hrp.",
            "VernacExtend",
            "904080f02c03403747cc515ae66d8cde0fad7a47"
        ],
        [
            "case (compare_spec r q); intros H.",
            "VernacExtend",
            "0b41170233e5540eb3e13af4218b81d4b5defc7b"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "apply compare_refl.",
            "VernacExtend",
            "5ecedda5f46ae499e6b31ca28202515be361c217"
        ],
        [
            "apply sub_lt_mono_l; trivial.",
            "VernacExtend",
            "e5e17b9b3728ac93d5b963657345e98654e6bd4f"
        ],
        [
            "apply lt_gt, sub_lt_mono_l; trivial.",
            "VernacExtend",
            "2266189ba9664bcb5da1a6036322dd82407c4d6d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_compare_mono_r p q r : p<q -> p<r -> (q-p ?= r-p) = (q ?= r).",
            "VernacStartTheoremProof",
            "717780e8bd07f9e21bed9d82fa531218a7838f30"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (add_compare_mono_r p), 2 sub_add; trivial.",
            "VernacExtend",
            "f19cac06ef13fa3e5d18a755562ab846541baa9d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_lt_mono_r p q r : q<p -> r<q -> q-r < p-r.",
            "VernacStartTheoremProof",
            "26f96e99879c08927871c284b8dd95e79d163ee3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold lt.",
            "VernacExtend",
            "2e821d407c03d5f5e572c51453fdc618d9dec364"
        ],
        [
            "rewrite sub_compare_mono_r; trivial.",
            "VernacExtend",
            "c0bc7bf265c73ad0518866f3861687eb77016349"
        ],
        [
            "now apply lt_trans with q.",
            "VernacExtend",
            "59dcdc42ffc312a28086acdbdaa00e31c846ea69"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_decr n m : m<n -> n-m < n.",
            "VernacStartTheoremProof",
            "59ebfaf44660337030af50e7846c6089e4ff79a2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply add_lt_mono_r with m.",
            "VernacExtend",
            "5375c2c330e18ebf5053e2c5cdaca9af25ca97c3"
        ],
        [
            "rewrite sub_add; trivial.",
            "VernacExtend",
            "7df7f8caf8dcd3aec81ce09b9d966f9f2dc8f9ac"
        ],
        [
            "apply lt_add_r.",
            "VernacExtend",
            "e0bb9e1915ba69a811604e481e6dd832e1686316"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_sub_assoc p q r : r<q -> p+(q-r) = p+q-r.",
            "VernacStartTheoremProof",
            "dd6f7799afe3540d7841a41a4c57e70732ba9cb2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply add_reg_r with r.",
            "VernacExtend",
            "82bab721b605642b79e45b0c61b68aaa57163f2e"
        ],
        [
            "rewrite <- add_assoc, !sub_add; trivial.",
            "VernacExtend",
            "6ad61f0c181dbb49e00ba634d37af12b2ecbda48"
        ],
        [
            "rewrite add_comm.",
            "VernacExtend",
            "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
        ],
        [
            "apply lt_trans with q; trivial using lt_add_r.",
            "VernacExtend",
            "b4376d80c57fc42666e608274b8892ba5dfc56e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_add_distr p q r : q+r < p -> p-(q+r) = p-q-r.",
            "VernacStartTheoremProof",
            "f0dff745f2d71f2835d0c711313f701d8cc18282"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (q < p) by (apply lt_trans with (q+r); trivial using lt_add_r).",
            "VernacExtend",
            "c319ff9d665796d497efeb16c274e5dd3f00d0c3"
        ],
        [
            "rewrite (add_comm q r) in *.",
            "VernacExtend",
            "6f49ad0545536aac07d672e3fc590a499c1de502"
        ],
        [
            "apply add_reg_r with (r+q).",
            "VernacExtend",
            "cbb802c1437afd63729f85e68703defd43ba4605"
        ],
        [
            "rewrite sub_add by trivial.",
            "VernacExtend",
            "91364fbeb2d738c4020f95d7934a14285e0c9962"
        ],
        [
            "rewrite add_assoc, !sub_add; trivial.",
            "VernacExtend",
            "4ad291791d9bdfff6dd2355044e78eb14d4ea0d7"
        ],
        [
            "apply (add_lt_mono_r q).",
            "VernacExtend",
            "c26a90d2bf3ee32d6e656ea5efa365338f901da0"
        ],
        [
            "rewrite sub_add; trivial.",
            "VernacExtend",
            "7df7f8caf8dcd3aec81ce09b9d966f9f2dc8f9ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_sub_distr p q r : r<q -> q-r < p -> p-(q-r) = p+r-q.",
            "VernacStartTheoremProof",
            "5001d33fbade85c5f61e2a30c65ee2786c5d014b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply add_reg_r with ((q-r)+r).",
            "VernacExtend",
            "0bfc416ec819134fcb3ce175f699bf7530e039a6"
        ],
        [
            "rewrite add_assoc, !sub_add; trivial.",
            "VernacExtend",
            "4ad291791d9bdfff6dd2355044e78eb14d4ea0d7"
        ],
        [
            "rewrite <- (sub_add q r); trivial.",
            "VernacExtend",
            "14cc462217d3bc4a56202bce7f567ffb0e4814cb"
        ],
        [
            "now apply add_lt_mono_r.",
            "VernacExtend",
            "d80bc326a6c2650be2a483e4bfe336a943367a3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_xO_xO n m : m<n -> n~0 - m~0 = (n-m)~0.",
            "VernacStartTheoremProof",
            "d40d4e024b34a3e8c1d09a18f34d17505a3712f6"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now destruct (sub_mask_pos n m H) as (p, ->).",
            "VernacExtend",
            "7c050ce4d9d20052f6ba38fbac33f8caba58c3e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_xI_xI n m : m<n -> n~1 - m~1 = (n-m)~0.",
            "VernacStartTheoremProof",
            "d4077ff64dd9210e0990c1602eb9397245ddf632"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now destruct (sub_mask_pos n m H) as (p, ->).",
            "VernacExtend",
            "7c050ce4d9d20052f6ba38fbac33f8caba58c3e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_xI_xO n m : m<n -> n~1 - m~0 = (n-m)~1.",
            "VernacStartTheoremProof",
            "8077f5de612d8d28c35421e5f5919f9c1979b829"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now destruct (sub_mask_pos n m) as (p, ->).",
            "VernacExtend",
            "3474e387ee8dd147c4698e2cb1bd55f2496dea4c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_xO_xI n m : n~0 - m~1 = pred_double (n-m).",
            "VernacStartTheoremProof",
            "e914a1937b551442bf12e3eaa82daa94072af92b"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite sub_mask_carry_spec.",
            "VernacExtend",
            "80066acf0482a4ed9be80071c470a93479b1ecdf"
        ],
        [
            "now destruct (sub_mask n m) as [|[r|r|]|].",
            "VernacExtend",
            "fa38bb2383ad6e11f76a9d35eed8a75462d559e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_mask_neg_iff' p q : sub_mask p q = IsNeg <-> p < q.",
            "VernacStartTheoremProof",
            "3bfdc48bcaece67d6e46a0705983ccc0dece0de7"
        ],
        [
            "rewrite lt_iff_add.",
            "VernacExtend",
            "9e297de9f5df2b8889710ab7c7e48bb6361434c1"
        ],
        [
            "apply sub_mask_neg_iff.",
            "VernacExtend",
            "7707b1e351a8e5315e22eed026e30f47fdca052c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_mask_neg p q : p<q -> sub_mask p q = IsNeg.",
            "VernacStartTheoremProof",
            "b2afcfadd35cd9f0c2177f893304f83ab7f1b5a5"
        ],
        [
            "apply sub_mask_neg_iff'.",
            "VernacExtend",
            "2c2fa96e9d73b3b447a8542abf0c8f2a0cec3337"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_le p q : p<=q -> p-q = 1.",
            "VernacStartTheoremProof",
            "568980c735e6ce04584df3215e8187f65b38c4d1"
        ],
        [
            "unfold le, sub.",
            "VernacExtend",
            "4be07b36caa6fc95270b59d317f3c5cf157a3ef1"
        ],
        [
            "rewrite compare_sub_mask.",
            "VernacExtend",
            "46a775fe7004fc1055e41c647e00c9d90e6c27b8"
        ],
        [
            "destruct sub_mask; easy'.",
            "VernacExtend",
            "9f1826497e46c3489a40c980f77213a474330313"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_lt p q : p<q -> p-q = 1.",
            "VernacStartTheoremProof",
            "5d30b85090dc6f984e1773bd6ac077401a924c27"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now apply sub_le, lt_le_incl.",
            "VernacExtend",
            "0d4c207718ea4b6d9de8b5eef42b99e64fcac482"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_diag p : p-p = 1.",
            "VernacStartTheoremProof",
            "f9082c2b0557f319d7a7c7903b51222ab17e451d"
        ],
        [
            "unfold sub.",
            "VernacExtend",
            "09a336a2b822859bc335120602ae265ad23b7a0d"
        ],
        [
            "now rewrite sub_mask_diag.",
            "VernacExtend",
            "95c17a8554114f9f7b0e8e9c9f14df1f7f269b1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_nat_monotone p q : p<q -> (size_nat p <= size_nat q)%nat.",
            "VernacStartTheoremProof",
            "8fb19699a3165fffd43f29d2b08367706ea98785"
        ],
        [
            "assert (le0 : forall n, (0<=n)%nat) by (induction n; auto).",
            "VernacExtend",
            "54147b6a8c5ffa2b1abf987d8036ec9460f87e1e"
        ],
        [
            "assert (leS : forall n m, (n<=m -> S n <= S m)%nat) by (induction 1; auto).",
            "VernacExtend",
            "314ec8d2c52cdd0af41b048dc042c5c32fecfea3"
        ],
        [
            "revert q.",
            "VernacExtend",
            "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
        ],
        [
            "induction p; destruct q; simpl; intros; auto; easy || apply leS; red in H; simpl_compare_in H.",
            "VernacExtend",
            "7f927b9af8dabb80746971262ccc7769e9fe6556"
        ],
        [
            "apply IHp.",
            "VernacExtend",
            "246d34d2490ae6e017eeeee5e330f76082b9a564"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "now destruct (p?=q).",
            "VernacExtend",
            "d8385a697864ad792655234027daa15367763757"
        ],
        [
            "destruct (compare_spec p q); subst; now auto.",
            "VernacExtend",
            "c4a07fbf53fbb5d2132eec6b9eae4b54d5bd932b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_gt p : p < 2^(size p).",
            "VernacStartTheoremProof",
            "13ab7d91e4a8c121a13410ca78b2fe3c1769d6ed"
        ],
        [
            "induction p; simpl; try rewrite pow_succ_r; try easy.",
            "VernacExtend",
            "ea8baa5261d068dda98781f6a2c9c2e32e721b69"
        ],
        [
            "apply le_succ_l in IHp.",
            "VernacExtend",
            "0417a10397d1760718eed4cae1f437879834effa"
        ],
        [
            "now apply le_succ_l.",
            "VernacExtend",
            "244c34558e9f448524071f26943611ce00fb4ec6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma size_le p : 2^(size p) <= p~0.",
            "VernacStartTheoremProof",
            "fb33c47317d8ca308683c1d7596d134db1481d4f"
        ],
        [
            "induction p; simpl; try rewrite pow_succ_r; try easy.",
            "VernacExtend",
            "ea8baa5261d068dda98781f6a2c9c2e32e721b69"
        ],
        [
            "apply mul_le_mono_l.",
            "VernacExtend",
            "8f1089037c6f9bde5336f866ab87af0f039dfcce"
        ],
        [
            "apply le_lteq; left.",
            "VernacExtend",
            "a37dd297d828d06ad68a5dbc45e0bf571ab399a2"
        ],
        [
            "rewrite xI_succ_xO.",
            "VernacExtend",
            "66445905a24b633a3de0c69eeb6ea2e899fd98d2"
        ],
        [
            "apply lt_succ_r, IHp.",
            "VernacExtend",
            "71d3b8a15f596dbf567e7e4391504d1370a480b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_l : forall x y, y<=x -> max x y = x.",
            "VernacStartTheoremProof",
            "759492fd0a6dce48737d0d3d16cd4012ee0dcc47"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "unfold max.",
            "VernacExtend",
            "11e82fad0b1b32b2f36b11c3f85e9a49f3148cba"
        ],
        [
            "case compare_spec; auto.",
            "VernacExtend",
            "bd9464d68f0626f6813b4a4f68f55b2b5375b7fd"
        ],
        [
            "intros H'.",
            "VernacExtend",
            "d7903418c9c01fda86d2cc847b39424719d50154"
        ],
        [
            "apply le_nlt in H.",
            "VernacExtend",
            "51b4901f0751d1a344ab8ea358bc55509d5d9c03"
        ],
        [
            "now elim H.",
            "VernacExtend",
            "25b0f8af2fb84c276497977e57d3240d2a987e06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_r : forall x y, x<=y -> max x y = y.",
            "VernacStartTheoremProof",
            "405c9e0339fb38b575798585f52aa70645e2d239"
        ],
        [
            "unfold le, max.",
            "VernacExtend",
            "eceaaee01291732e1b36a2f2016a8ae8974ef88e"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "destruct compare; easy'.",
            "VernacExtend",
            "9c58ca66031ca52e7ded2a67e5812d35fe76b30c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_l : forall x y, x<=y -> min x y = x.",
            "VernacStartTheoremProof",
            "c45f9891a0e277621946e572c612a919485f2971"
        ],
        [
            "unfold le, min.",
            "VernacExtend",
            "4a32463b97d6de13a2947e315ac7915d1f1c294d"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "destruct compare; easy'.",
            "VernacExtend",
            "9c58ca66031ca52e7ded2a67e5812d35fe76b30c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_r : forall x y, y<=x -> min x y = y.",
            "VernacStartTheoremProof",
            "24b7b1c64add54057ba876523270b6550a319283"
        ],
        [
            "intros x y H.",
            "VernacExtend",
            "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
        ],
        [
            "unfold min.",
            "VernacExtend",
            "b6006e3c244fd992d89eb4e6cdbb7d3d95bb069c"
        ],
        [
            "case compare_spec; auto.",
            "VernacExtend",
            "bd9464d68f0626f6813b4a4f68f55b2b5375b7fd"
        ],
        [
            "intros H'.",
            "VernacExtend",
            "d7903418c9c01fda86d2cc847b39424719d50154"
        ],
        [
            "apply le_nlt in H.",
            "VernacExtend",
            "51b4901f0751d1a344ab8ea358bc55509d5d9c03"
        ],
        [
            "now elim H'.",
            "VernacExtend",
            "6a215a86f9bf4801c5a934be3595acd159bddbc5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Include UsualMinMaxLogicalProperties <+ UsualMinMaxDecProperties.",
            "VernacInclude",
            "725de6c7a909d29e951fa7c7dff52973fcbca848"
        ],
        [
            "Ltac order := Private_Tac.order.",
            "VernacExtend",
            "cf7a7273a06ff60aaf11d1ea089b43aff3eed085"
        ],
        [
            "Lemma max_1_l n : max 1 n = n.",
            "VernacStartTheoremProof",
            "0d4a19cbe42a0579ec6c8277e5daf02970a4bbdf"
        ],
        [
            "unfold max.",
            "VernacExtend",
            "11e82fad0b1b32b2f36b11c3f85e9a49f3148cba"
        ],
        [
            "case compare_spec; auto.",
            "VernacExtend",
            "bd9464d68f0626f6813b4a4f68f55b2b5375b7fd"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply lt_nle in H.",
            "VernacExtend",
            "73f6efc5c8adb36cbf3f173cf0aa0c83a9ddd2d6"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "apply le_1_l.",
            "VernacExtend",
            "2b845cb26e9613f4263a4694b1fbf341e7f9cfb6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_1_r n : max n 1 = n.",
            "VernacStartTheoremProof",
            "c22fe2b79dd37d2cb0a75f4bcd8b238cad5ac66a"
        ],
        [
            "rewrite max_comm.",
            "VernacExtend",
            "df34ed9771ede93bdbbfce11ddbbb04360f84148"
        ],
        [
            "apply max_1_l.",
            "VernacExtend",
            "237523964f3bb5f45bc1a62bb6ffdc137f2c64a1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_1_l n : min 1 n = 1.",
            "VernacStartTheoremProof",
            "1927afd362c48c6b4adc70992f34552e177f6d25"
        ],
        [
            "unfold min.",
            "VernacExtend",
            "b6006e3c244fd992d89eb4e6cdbb7d3d95bb069c"
        ],
        [
            "case compare_spec; auto.",
            "VernacExtend",
            "bd9464d68f0626f6813b4a4f68f55b2b5375b7fd"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply lt_nle in H.",
            "VernacExtend",
            "73f6efc5c8adb36cbf3f173cf0aa0c83a9ddd2d6"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "apply le_1_l.",
            "VernacExtend",
            "2b845cb26e9613f4263a4694b1fbf341e7f9cfb6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_1_r n : min n 1 = 1.",
            "VernacStartTheoremProof",
            "d2ff242715b72dec1bf243fc3e5fea36a01142fa"
        ],
        [
            "rewrite min_comm.",
            "VernacExtend",
            "310a22ace967a2820d6728675de6dd602bce110e"
        ],
        [
            "apply min_1_l.",
            "VernacExtend",
            "d1762491b077e50388b573ceccf5219bca4168db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succ_max_distr n m : succ (max n m) = max (succ n) (succ m).",
            "VernacStartTheoremProof",
            "dcbf1555fe08bf285df15985300192bb19680077"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply max_monotone.",
            "VernacExtend",
            "cf26ffddc2ae8c3c05a95ba65139acc513db2fa6"
        ],
        [
            "intros x x'.",
            "VernacExtend",
            "a13d4de9803d6d65cdf0530f56508f371f0c7763"
        ],
        [
            "apply succ_le_mono.",
            "VernacExtend",
            "3b926d4b8ef6721456d01cb7a17140c83cf80225"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succ_min_distr n m : succ (min n m) = min (succ n) (succ m).",
            "VernacStartTheoremProof",
            "e50566b4bb0df7baab69d5d6603ca9be2361cc54"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply min_monotone.",
            "VernacExtend",
            "ee8b01734993daa0bf9c68c37ca83207e27572e2"
        ],
        [
            "intros x x'.",
            "VernacExtend",
            "a13d4de9803d6d65cdf0530f56508f371f0c7763"
        ],
        [
            "apply succ_le_mono.",
            "VernacExtend",
            "3b926d4b8ef6721456d01cb7a17140c83cf80225"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_max_distr_l n m p : max (p + n) (p + m) = p + max n m.",
            "VernacStartTheoremProof",
            "248f397f96b559f17d0bac9c3f894def23e938ae"
        ],
        [
            "apply max_monotone.",
            "VernacExtend",
            "cf26ffddc2ae8c3c05a95ba65139acc513db2fa6"
        ],
        [
            "intros x x'.",
            "VernacExtend",
            "a13d4de9803d6d65cdf0530f56508f371f0c7763"
        ],
        [
            "apply add_le_mono_l.",
            "VernacExtend",
            "64c279615122d28dd9f063fc771b140427353b42"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_max_distr_r n m p : max (n + p) (m + p) = max n m + p.",
            "VernacStartTheoremProof",
            "f20e5323ab7c5a916a35048e1eef95d4651fc69d"
        ],
        [
            "rewrite 3 (add_comm _ p).",
            "VernacExtend",
            "3ca1956a3ed709c49c5359c080462bb047e6aaac"
        ],
        [
            "apply add_max_distr_l.",
            "VernacExtend",
            "862ca26a5cba16b695c204f68a2b06bbb05e4921"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_min_distr_l n m p : min (p + n) (p + m) = p + min n m.",
            "VernacStartTheoremProof",
            "540325bceb3ddb2324da10b7b67af78aa98dbe4b"
        ],
        [
            "apply min_monotone.",
            "VernacExtend",
            "ee8b01734993daa0bf9c68c37ca83207e27572e2"
        ],
        [
            "intros x x'.",
            "VernacExtend",
            "a13d4de9803d6d65cdf0530f56508f371f0c7763"
        ],
        [
            "apply add_le_mono_l.",
            "VernacExtend",
            "64c279615122d28dd9f063fc771b140427353b42"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_min_distr_r n m p : min (n + p) (m + p) = min n m + p.",
            "VernacStartTheoremProof",
            "7e2f24066b6abb6322115703f642fd489f49d783"
        ],
        [
            "rewrite 3 (add_comm _ p).",
            "VernacExtend",
            "3ca1956a3ed709c49c5359c080462bb047e6aaac"
        ],
        [
            "apply add_min_distr_l.",
            "VernacExtend",
            "643aefbea590922939a4aec88633bdf68654c23a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_max_distr_l n m p : max (p * n) (p * m) = p * max n m.",
            "VernacStartTheoremProof",
            "8050bfdd2d8d03bf34ada0e3bc60aa5518290cc3"
        ],
        [
            "apply max_monotone.",
            "VernacExtend",
            "cf26ffddc2ae8c3c05a95ba65139acc513db2fa6"
        ],
        [
            "intros x x'.",
            "VernacExtend",
            "a13d4de9803d6d65cdf0530f56508f371f0c7763"
        ],
        [
            "apply mul_le_mono_l.",
            "VernacExtend",
            "8f1089037c6f9bde5336f866ab87af0f039dfcce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_max_distr_r n m p : max (n * p) (m * p) = max n m * p.",
            "VernacStartTheoremProof",
            "53d721da7924d65197b0b387124b5d140cf25fe6"
        ],
        [
            "rewrite 3 (mul_comm _ p).",
            "VernacExtend",
            "8979c48200e225e21fa8ab8630456a4110b2a99d"
        ],
        [
            "apply mul_max_distr_l.",
            "VernacExtend",
            "d394c44b97ffb3be3e9da6dd99f142b07b70cbca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_min_distr_l n m p : min (p * n) (p * m) = p * min n m.",
            "VernacStartTheoremProof",
            "0a4c9ff1bbd44f2f3a54ce074a73b9d930561d45"
        ],
        [
            "apply min_monotone.",
            "VernacExtend",
            "ee8b01734993daa0bf9c68c37ca83207e27572e2"
        ],
        [
            "intros x x'.",
            "VernacExtend",
            "a13d4de9803d6d65cdf0530f56508f371f0c7763"
        ],
        [
            "apply mul_le_mono_l.",
            "VernacExtend",
            "8f1089037c6f9bde5336f866ab87af0f039dfcce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_min_distr_r n m p : min (n * p) (m * p) = min n m * p.",
            "VernacStartTheoremProof",
            "442a96e352b92413642d45c645cecc6f72d65ae3"
        ],
        [
            "rewrite 3 (mul_comm _ p).",
            "VernacExtend",
            "8979c48200e225e21fa8ab8630456a4110b2a99d"
        ],
        [
            "apply mul_min_distr_l.",
            "VernacExtend",
            "72ba2344122df91bdae2d7072565b3d669ea8fd2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iter_op_succ : forall A (op:A->A->A), (forall x y z, op x (op y z) = op (op x y) z) -> forall p a, iter_op op (succ p) a = op a (iter_op op p a).",
            "VernacStartTheoremProof",
            "bf605c9446a9360e92be0254684896ae640b013b"
        ],
        [
            "induction p; simpl; intros; trivial.",
            "VernacExtend",
            "65d9253fd0a1e598f3aa8f780fdbecd1d5db5c7c"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply IHp.",
            "VernacExtend",
            "246d34d2490ae6e017eeeee5e330f76082b9a564"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma of_nat_succ (n:nat) : of_succ_nat n = of_nat (S n).",
            "VernacStartTheoremProof",
            "a1a06803b7ed35162aee4cc23e9224ed7c677076"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "now rewrite IHn.",
            "VernacExtend",
            "69a05b29042c8d8517dcdaf6102502fc203ee4a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pred_of_succ_nat (n:nat) : pred (of_succ_nat n) = of_nat n.",
            "VernacStartTheoremProof",
            "58f4b15f9354cb7dc43e3716a308fef028c66c52"
        ],
        [
            "destruct n.",
            "VernacExtend",
            "1582bf847770c098bee882393a48b146dcc37a8c"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "simpl pred.",
            "VernacExtend",
            "d2acc4bb0f04a14294a6eba01a87bc74aed7832f"
        ],
        [
            "rewrite pred_succ.",
            "VernacExtend",
            "05abf6f61387d00a9b4dc0ffaf430b3708aef0fb"
        ],
        [
            "apply of_nat_succ.",
            "VernacExtend",
            "38a3c8f7545bffd4440d773f87aef2d24fc48fc5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma succ_of_nat (n:nat) : n<>O -> succ (of_nat n) = of_succ_nat n.",
            "VernacStartTheoremProof",
            "e31cfc40f245cdaee29037b8c9d8d647eb61d36b"
        ],
        [
            "rewrite of_nat_succ.",
            "VernacExtend",
            "ec790d45c7ae656ca2af3737ebc6475a5b9cf560"
        ],
        [
            "destruct n; trivial.",
            "VernacExtend",
            "075df2df6f50c3b92752b2e357bd92e8caf75e9c"
        ],
        [
            "now destruct 1.",
            "VernacExtend",
            "599cf8488dce43cedbb3491ca78a34441bf2a1bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive SqrtSpec : positive*mask -> positive -> Prop := | SqrtExact s x : x=s*s -> SqrtSpec (s,IsNul) x | SqrtApprox s r x : x=s*s+r -> r <= s~0 -> SqrtSpec (s,IsPos r) x.",
            "VernacInductive",
            "e536ae59a4e0fe9bf92bfd1807cd25947167099b"
        ],
        [
            "Lemma sqrtrem_step_spec f g p x : (f=xO \\/ f=xI) -> (g=xO \\/ g=xI) -> SqrtSpec p x -> SqrtSpec (sqrtrem_step f g p) (g (f x)).",
            "VernacStartTheoremProof",
            "7f37980d6e2c84fbf0d8c2a95f768311181790c3"
        ],
        [
            "intros Hf Hg [ s _ -> | s r _ -> Hr ].",
            "VernacExtend",
            "8c2d1eb48f663a0d3f9032d47d7aade77b25ef3e"
        ],
        [
            "unfold sqrtrem_step.",
            "VernacExtend",
            "12a37ea51cee5d93a64d9692a2b6a60e3f5c1fdd"
        ],
        [
            "destruct Hf,Hg; subst; simpl; constructor; now rewrite ?square_xO.",
            "VernacExtend",
            "00774e68016e68cf3835154cc934aa4e1ea09aa4"
        ],
        [
            "assert (Hfg : forall p q, g (f (p+q)) = p~0~0 + g (f q)) by (intros; destruct Hf, Hg; now subst).",
            "VernacExtend",
            "71b4a037cc09190157e0a41139d137e1869e8b7e"
        ],
        [
            "unfold sqrtrem_step, leb.",
            "VernacExtend",
            "927f601b9ddbde83ffddf596dd966d121d22531c"
        ],
        [
            "case compare_spec; [intros EQ | intros LT | intros GT].",
            "VernacExtend",
            "b7cce6666cffde149a74f3b5ff7df5cb93449b3f"
        ],
        [
            "rewrite <- EQ, sub_mask_diag.",
            "VernacExtend",
            "ed47f9bb616473129700e4a98195454f8c8fa14c"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "destruct Hg; subst g; destr_eq EQ.",
            "VernacExtend",
            "f7859b57875bc90b1da68d9bd268e1d55f0a8eed"
        ],
        [
            "destruct Hf; subst f; destr_eq EQ.",
            "VernacExtend",
            "87ffc7886766c62cf1d2766f38c0adef34870bb5"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "now rewrite square_xI.",
            "VernacExtend",
            "2a81803f76970dbf78a05d1fd1ff6b9eae29b39d"
        ],
        [
            "destruct (sub_mask_pos' _ _ LT) as (y & -> & H).",
            "VernacExtend",
            "d4e9b7d2616efee6585238dbb2371bf3be0e4607"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "rewrite Hfg, <- H.",
            "VernacExtend",
            "ec33aadc10ead9021fd3a821cd9a7aeb29e9a038"
        ],
        [
            "now rewrite square_xI, add_assoc.",
            "VernacExtend",
            "84dee4c053f41866c0b7c35fb022eb6ee1da50dd"
        ],
        [
            "clear Hfg.",
            "VernacExtend",
            "e001e5a28a7284767f506e4956713dd7c299a92d"
        ],
        [
            "rewrite <- lt_succ_r in Hr.",
            "VernacExtend",
            "99f3d3fe2405ab759022fa1b7a0a648a0bfba330"
        ],
        [
            "change (r < s~1) in Hr.",
            "VernacExtend",
            "c500ebcf58d6621d59aaf02e45934e8733e3fac3"
        ],
        [
            "rewrite <- lt_succ_r, (add_lt_mono_l (s~0~1)), H.",
            "VernacExtend",
            "2a500d6daa8b2cd59f0d2117e363ad2a8d5b994a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite add_carry_spec, add_diag.",
            "VernacExtend",
            "140a202a839101d2f129142a2a5f9f6399c9e80e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct Hf,Hg; subst; red; simpl_compare; now rewrite Hr.",
            "VernacExtend",
            "f09d3da36d037a5e26a6ca9945a435e77868f8af"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "now rewrite Hfg, square_xO.",
            "VernacExtend",
            "bb8945cad770ee9efbe07dc3dd06bdd1874d5e89"
        ],
        [
            "apply lt_succ_r, GT.",
            "VernacExtend",
            "0dd05358bdaac2f38a7858ba771a6f5faa6061df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrtrem_spec p : SqrtSpec (sqrtrem p) p.",
            "VernacStartTheoremProof",
            "04050db85d77eb8ffc51f00de90db902e6058473"
        ],
        [
            "revert p.",
            "VernacExtend",
            "99815a0b7d504dee9d5300bdf09b690871b7d2ba"
        ],
        [
            "fix sqrtrem_spec 1.",
            "VernacExtend",
            "161b723f0323a20f0c722a2310a690307b87fb06"
        ],
        [
            "destruct p; try destruct p; try (constructor; easy); apply sqrtrem_step_spec; auto.",
            "VernacExtend",
            "ffcbd77b6256bf7bd39fd7c0bd3fdcbc6f6e03fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_spec p : let s := sqrt p in s*s <= p < (succ s)*(succ s).",
            "VernacStartTheoremProof",
            "cbdbfd9eb7289df742a6d5b8f0c9c9e8c892d4b4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (H:=sqrtrem_spec p).",
            "VernacExtend",
            "c52da6a607a9785ec196dea2ff73c4e058dac892"
        ],
        [
            "unfold sqrt in *.",
            "VernacExtend",
            "189ab80408ce4de399a604f1639fb118eefe211d"
        ],
        [
            "destruct sqrtrem as (s,rm); simpl.",
            "VernacExtend",
            "8234962a7f2c73d92ae0c95ba06521eeb009934e"
        ],
        [
            "inversion_clear H; subst.",
            "VernacExtend",
            "d0c38074d654f42fdcaa6d666bd5a0d262e48f47"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply mul_lt_mono; apply lt_succ_diag_r.",
            "VernacExtend",
            "10f3f95d7d1a42b6cb7decf9ba5e4a3b8e744b93"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply lt_le_incl, lt_add_r.",
            "VernacExtend",
            "0cfb5cade2235392de45528e490a1aeef9a3166c"
        ],
        [
            "rewrite <- add_1_l, mul_add_distr_r, !mul_add_distr_l, !mul_1_r, !mul_1_l.",
            "VernacExtend",
            "b1ed240e03068913a21693b29dda80ae4245ff30"
        ],
        [
            "rewrite add_assoc, (add_comm _ r).",
            "VernacExtend",
            "7dae4aeb12f7c2487d5ad212752315b5ddff1cec"
        ],
        [
            "apply add_lt_mono_r.",
            "VernacExtend",
            "23044fb6b332f3c89ff7aee402ebd81391f75fe5"
        ],
        [
            "now rewrite <- add_assoc, add_diag, add_1_l, lt_succ_r.",
            "VernacExtend",
            "c2fe46a947158b02e1179c7a041dfad665e22f85"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_add_cancel_l p q r : (p | r) -> (p | q + r) -> (p | q).",
            "VernacStartTheoremProof",
            "b97fc4119a33f5527efd1e47b11d27591f97bf0c"
        ],
        [
            "intros (s,Hs) (t,Ht).",
            "VernacExtend",
            "1d69a61a5a17fb4685e852858d9c01dbf55e88b0"
        ],
        [
            "exists (t-s).",
            "VernacExtend",
            "e2a5368a0b651ef652fb07c0f348b10ff9571d5f"
        ],
        [
            "rewrite mul_sub_distr_r.",
            "VernacExtend",
            "d9e519c7003bd1e4c305762f83300a9c98c8ad47"
        ],
        [
            "rewrite <- Hs, <- Ht.",
            "VernacExtend",
            "0850374d5b9b0642a96a61d55be19b0d8c30f5bb"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply add_sub.",
            "VernacExtend",
            "08e2ad70532d616faa2ee66112da92e3cb1de6f2"
        ],
        [
            "apply mul_lt_mono_r with p.",
            "VernacExtend",
            "f78e4df66066043b1b0e2a50d66625a7ca7ddfe4"
        ],
        [
            "rewrite <- Hs, <- Ht, add_comm.",
            "VernacExtend",
            "c34eb0e91e82c9caedafd8a9e8751ccd4b192ce0"
        ],
        [
            "apply lt_add_r.",
            "VernacExtend",
            "e0bb9e1915ba69a811604e481e6dd832e1686316"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_xO_xI p q r : (p | q~0) -> (p | r~1) -> (p | q).",
            "VernacStartTheoremProof",
            "3d0f181f4560b068927a1c8a5db92dc5b4dc870e"
        ],
        [
            "intros (s,Hs) (t,Ht).",
            "VernacExtend",
            "1d69a61a5a17fb4685e852858d9c01dbf55e88b0"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "destruct s; try easy.",
            "VernacExtend",
            "bef7145c8cececed6b4f2b3e4567a40e1d6560e6"
        ],
        [
            "simpl in Hs.",
            "VernacExtend",
            "30c051fd79e7a27586cd46f2a6aa9cc6082f7e26"
        ],
        [
            "destr_eq Hs.",
            "VernacExtend",
            "be1e3738d5d6938e3c0b6df3817cad7b4f2bb79d"
        ],
        [
            "now exists s.",
            "VernacExtend",
            "394cfd4adb900abc221a72dcba642ddc79a76b22"
        ],
        [
            "rewrite mul_xO_r in Ht; discriminate.",
            "VernacExtend",
            "11e55e22141e7aabf6d156a13257a348a9db2ec5"
        ],
        [
            "exists q; now rewrite mul_1_r.",
            "VernacExtend",
            "d8a154f5a1ef81a83e855a9ba231e567c07f1afb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_xO_xO p q : (p~0|q~0) <-> (p|q).",
            "VernacStartTheoremProof",
            "d527594a45da90c3ee1166a2417216c8ad34ae6d"
        ],
        [
            "split; intros (r,H); simpl in *.",
            "VernacExtend",
            "e90f4c9dcabc8c50569a294b68166dcc1757acb4"
        ],
        [
            "rewrite mul_xO_r in H.",
            "VernacExtend",
            "0395c0453c6336dc664d8c46ff24193aa063275d"
        ],
        [
            "destr_eq H.",
            "VernacExtend",
            "0e67e97f47012c663fa7bc2ed1cc74f793295187"
        ],
        [
            "now exists r.",
            "VernacExtend",
            "def9e683686351666c2c2728e608a53ca4e6093c"
        ],
        [
            "exists r; simpl.",
            "VernacExtend",
            "ec7126051e46c8a2905b42d0fc07967532f39c3f"
        ],
        [
            "rewrite mul_xO_r.",
            "VernacExtend",
            "a44bbbb97094ee329106b326da216f4bea82ae54"
        ],
        [
            "f_equal; auto.",
            "VernacExtend",
            "8016959cfe83d1ba3fdad91954454045f7af1d22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_mul_l p q r : (p|q) -> (p|q*r).",
            "VernacStartTheoremProof",
            "3490a35049ff0aa92cbc6a47ec24f851e73ece94"
        ],
        [
            "intros (s,H).",
            "VernacExtend",
            "87724be53713a04f37042a8c78ee8579e236ea0f"
        ],
        [
            "exists (s*r).",
            "VernacExtend",
            "99e53bf9895b5dada5d8e423bfd3454797c8627d"
        ],
        [
            "rewrite <- mul_assoc, (mul_comm r p), mul_assoc.",
            "VernacExtend",
            "ae2bb4c9eb460935839afa2864b0825e5189e096"
        ],
        [
            "now f_equal.",
            "VernacExtend",
            "523c8bb1ba392fd7c541cd8a77c609b310d41f22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_mul_r p q r : (p|r) -> (p|q*r).",
            "VernacStartTheoremProof",
            "cee3e3e7a4d25f3b758be17f158fa76ea6779fec"
        ],
        [
            "rewrite mul_comm.",
            "VernacExtend",
            "5f0fb0765ec04101790f2b78062bf5490bbe5e03"
        ],
        [
            "apply divide_mul_l.",
            "VernacExtend",
            "774b2877d45841d045c373091477d3d536314775"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ggcdn_gcdn : forall n a b, fst (ggcdn n a b) = gcdn n a b.",
            "VernacStartTheoremProof",
            "1bcfdc6f085cba9b9e46e0d08e84749ae3f21f6e"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "destruct a, b; simpl; auto; try case compare_spec; simpl; trivial; rewrite <- IHn; destruct ggcdn as (g,(u,v)); simpl; auto.",
            "VernacExtend",
            "a56eddb034f234544854d2041c3088d41ab6b770"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ggcd_gcd : forall a b, fst (ggcd a b) = gcd a b.",
            "VernacStartTheoremProof",
            "4b5d199bed9a2ba67448ecb5fe66e55844b01349"
        ],
        [
            "unfold ggcd, gcd.",
            "VernacExtend",
            "eaa5115e567ddfc03eff3e991b756ac4dedc10cb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply ggcdn_gcdn.",
            "VernacExtend",
            "e2fcd33b107cbc5413d653a03225bec4cc5493b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac destr_pggcdn IHn := match goal with |- context [ ggcdn _ ?x ?y ] => generalize (IHn x y); destruct ggcdn as (g,(u,v)); simpl end.",
            "VernacExtend",
            "e7f607923ca020c345686f091e978f615961aacd"
        ],
        [
            "Lemma ggcdn_correct_divisors : forall n a b, let '(g,(aa,bb)) := ggcdn n a b in a = g*aa /\\ b = g*bb.",
            "VernacStartTheoremProof",
            "8eb76f793ea53505c00addd91f1f428c2a242149"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "destruct a, b; simpl; auto; try case compare_spec; try destr_pggcdn IHn.",
            "VernacExtend",
            "52a4fd1d00a45a5bb0dd7ce1857bd8e4554c963a"
        ],
        [
            "intros ->.",
            "VernacExtend",
            "e8af3665779d92274caf81949b4a0e6232d89ea7"
        ],
        [
            "now rewrite mul_comm.",
            "VernacExtend",
            "e381ca9335c310c57051601bf6f800b499d27dfd"
        ],
        [
            "intros (H',H) LT; split; auto.",
            "VernacExtend",
            "3d0fa0611a18a8084122621e34b1060c3bb636b2"
        ],
        [
            "rewrite mul_add_distr_l, mul_xO_r, <- H, <- H'.",
            "VernacExtend",
            "1cf8e406e06d100867eb017ff57731251a2b874f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite add_comm.",
            "VernacExtend",
            "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
        ],
        [
            "now apply sub_add.",
            "VernacExtend",
            "d6b90c81e21615a99fd7fde4d1cd2a9a79898ee9"
        ],
        [
            "intros (H',H) LT; split; auto.",
            "VernacExtend",
            "3d0fa0611a18a8084122621e34b1060c3bb636b2"
        ],
        [
            "rewrite mul_add_distr_l, mul_xO_r, <- H, <- H'.",
            "VernacExtend",
            "1cf8e406e06d100867eb017ff57731251a2b874f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite add_comm.",
            "VernacExtend",
            "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
        ],
        [
            "now apply sub_add.",
            "VernacExtend",
            "d6b90c81e21615a99fd7fde4d1cd2a9a79898ee9"
        ],
        [
            "intros (H,H'); split; auto.",
            "VernacExtend",
            "5b86391eb4783202f32047b9cf5de15212d96278"
        ],
        [
            "rewrite mul_xO_r, H'; auto.",
            "VernacExtend",
            "a54ccd0009cc77273e2044ed88d4a13e11791ec8"
        ],
        [
            "intros (H,H'); split; auto.",
            "VernacExtend",
            "5b86391eb4783202f32047b9cf5de15212d96278"
        ],
        [
            "rewrite mul_xO_r, H; auto.",
            "VernacExtend",
            "cb264cc9a4fba2095e22bf18148daee90cd01d75"
        ],
        [
            "intros (H,H'); split; subst; auto.",
            "VernacExtend",
            "ef235114def1b3dc30972b3f677769f4061e27d1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ggcd_correct_divisors : forall a b, let '(g,(aa,bb)) := ggcd a b in a=g*aa /\\ b=g*bb.",
            "VernacStartTheoremProof",
            "f17aa05a11d815e063faaaad62e33cd9574b4ccb"
        ],
        [
            "unfold ggcd.",
            "VernacExtend",
            "4e31d35f3ff978cb45055c2f7688cd92d7665c70"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply ggcdn_correct_divisors.",
            "VernacExtend",
            "a4c1911a53e5747d1ba876ebb2e59a73a35bf5b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_divide_l : forall a b, (gcd a b | a).",
            "VernacStartTheoremProof",
            "4ec9dcbae6002b3d733e90cd91b93c3769e96d8e"
        ],
        [
            "intros a b.",
            "VernacExtend",
            "8c4941fda9d591147c446ef6e06d248ec0e6bf7a"
        ],
        [
            "rewrite <- ggcd_gcd.",
            "VernacExtend",
            "af8fe3aa4e3b8cec9dff021772fb4d255806993f"
        ],
        [
            "generalize (ggcd_correct_divisors a b).",
            "VernacExtend",
            "596110c31b3f951d5323976537ebf9bf70a545d6"
        ],
        [
            "destruct ggcd as (g,(aa,bb)); simpl.",
            "VernacExtend",
            "d7905ef92137f67e94c97b87557d36066c22301a"
        ],
        [
            "intros (H,_).",
            "VernacExtend",
            "5d7f528c0a50c9774977a893ac2a2ce4be26b8cc"
        ],
        [
            "exists aa.",
            "VernacExtend",
            "a88576544a563e6630825c1a0fed1d6dd0fa2990"
        ],
        [
            "now rewrite mul_comm.",
            "VernacExtend",
            "e381ca9335c310c57051601bf6f800b499d27dfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_divide_r : forall a b, (gcd a b | b).",
            "VernacStartTheoremProof",
            "c3402220f4150b9b8e33e6570ea72a5d464bc44a"
        ],
        [
            "intros a b.",
            "VernacExtend",
            "8c4941fda9d591147c446ef6e06d248ec0e6bf7a"
        ],
        [
            "rewrite <- ggcd_gcd.",
            "VernacExtend",
            "af8fe3aa4e3b8cec9dff021772fb4d255806993f"
        ],
        [
            "generalize (ggcd_correct_divisors a b).",
            "VernacExtend",
            "596110c31b3f951d5323976537ebf9bf70a545d6"
        ],
        [
            "destruct ggcd as (g,(aa,bb)); simpl.",
            "VernacExtend",
            "d7905ef92137f67e94c97b87557d36066c22301a"
        ],
        [
            "intros (_,H).",
            "VernacExtend",
            "25f6a2cd1cb0bd6a2f0d7abf0ed531ec59abb9ee"
        ],
        [
            "exists bb.",
            "VernacExtend",
            "87320a0804a94fddefae4762bc46aafc3efc88f8"
        ],
        [
            "now rewrite mul_comm.",
            "VernacExtend",
            "e381ca9335c310c57051601bf6f800b499d27dfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcdn_greatest : forall n a b, (size_nat a + size_nat b <= n)%nat -> forall p, (p|a) -> (p|b) -> (p|gcdn n a b).",
            "VernacStartTheoremProof",
            "bb3286288ac588e2261889429f77737185707bab"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "destruct a, b; simpl; inversion 1.",
            "VernacExtend",
            "ef3d22a9e68df0087debfddd22955aa2219ba29c"
        ],
        [
            "destruct a, b; simpl; try case compare_spec; simpl; auto.",
            "VernacExtend",
            "eb9b5d47954f2f028e9d23343f66eb1b5d14caf6"
        ],
        [
            "intros LT LE p Hp1 Hp2.",
            "VernacExtend",
            "fe916d88767006bd963c243be0e4c4e6aa4262da"
        ],
        [
            "apply IHn; clear IHn; trivial.",
            "VernacExtend",
            "30d1a98c856408e2f4b9e804d653b098bfc9230d"
        ],
        [
            "apply le_S_n in LE.",
            "VernacExtend",
            "4d45a4e613aaca8b923f759bb22ce60e93f840b4"
        ],
        [
            "eapply Le.le_trans; [|eapply LE].",
            "VernacExtend",
            "cc0a578656d5a038f4d84bc30d746246ecb8e83c"
        ],
        [
            "rewrite plus_comm, <- plus_n_Sm, <- plus_Sn_m.",
            "VernacExtend",
            "db429b142c06d71542d124b0c4271cd61d113942"
        ],
        [
            "apply plus_le_compat; trivial.",
            "VernacExtend",
            "4d8f81e2dec8561e5caafc9b43f02dd52cf35a5f"
        ],
        [
            "apply size_nat_monotone, sub_decr, LT.",
            "VernacExtend",
            "966cdb519e0a53f184b18a3cc5e398fa94117a91"
        ],
        [
            "apply divide_xO_xI with a; trivial.",
            "VernacExtend",
            "d1b7e4bc1c7f33df7e86645e775491365e10b7af"
        ],
        [
            "apply (divide_add_cancel_l p _ a~1); trivial.",
            "VernacExtend",
            "c32cb1ccfb7ad3df009a14100ed55650021617a1"
        ],
        [
            "now rewrite <- sub_xI_xI, sub_add.",
            "VernacExtend",
            "87efa09fc676cbf3eea40e2e5b1b9aed4bbfdd2f"
        ],
        [
            "intros LT LE p Hp1 Hp2.",
            "VernacExtend",
            "fe916d88767006bd963c243be0e4c4e6aa4262da"
        ],
        [
            "apply IHn; clear IHn; trivial.",
            "VernacExtend",
            "30d1a98c856408e2f4b9e804d653b098bfc9230d"
        ],
        [
            "apply le_S_n in LE.",
            "VernacExtend",
            "4d45a4e613aaca8b923f759bb22ce60e93f840b4"
        ],
        [
            "eapply Le.le_trans; [|eapply LE].",
            "VernacExtend",
            "cc0a578656d5a038f4d84bc30d746246ecb8e83c"
        ],
        [
            "apply plus_le_compat; trivial.",
            "VernacExtend",
            "4d8f81e2dec8561e5caafc9b43f02dd52cf35a5f"
        ],
        [
            "apply size_nat_monotone, sub_decr, LT.",
            "VernacExtend",
            "966cdb519e0a53f184b18a3cc5e398fa94117a91"
        ],
        [
            "apply divide_xO_xI with b; trivial.",
            "VernacExtend",
            "5701971893b07623117f570fcc77249b55ea3614"
        ],
        [
            "apply (divide_add_cancel_l p _ b~1); trivial.",
            "VernacExtend",
            "5d5602345f5cb056df09a9db02d0952aa24a886b"
        ],
        [
            "now rewrite <- sub_xI_xI, sub_add.",
            "VernacExtend",
            "87efa09fc676cbf3eea40e2e5b1b9aed4bbfdd2f"
        ],
        [
            "intros LE p Hp1 Hp2.",
            "VernacExtend",
            "9fa8d8f2643ca7b93f777ee1c43e02436682b361"
        ],
        [
            "apply IHn; clear IHn; trivial.",
            "VernacExtend",
            "30d1a98c856408e2f4b9e804d653b098bfc9230d"
        ],
        [
            "apply le_S_n in LE.",
            "VernacExtend",
            "4d45a4e613aaca8b923f759bb22ce60e93f840b4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite plus_n_Sm.",
            "VernacExtend",
            "65bc77de7ab07daa65931fbfb577b76979859436"
        ],
        [
            "apply divide_xO_xI with a; trivial.",
            "VernacExtend",
            "d1b7e4bc1c7f33df7e86645e775491365e10b7af"
        ],
        [
            "intros LE p Hp1 Hp2.",
            "VernacExtend",
            "9fa8d8f2643ca7b93f777ee1c43e02436682b361"
        ],
        [
            "apply IHn; clear IHn; trivial.",
            "VernacExtend",
            "30d1a98c856408e2f4b9e804d653b098bfc9230d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now apply le_S_n.",
            "VernacExtend",
            "172d1d429f1fcfbbf2a7810e3e9265685ea093bc"
        ],
        [
            "apply divide_xO_xI with b; trivial.",
            "VernacExtend",
            "5701971893b07623117f570fcc77249b55ea3614"
        ],
        [
            "intros LE p Hp1 Hp2.",
            "VernacExtend",
            "9fa8d8f2643ca7b93f777ee1c43e02436682b361"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "change (gcdn n a b)~0 with (2*(gcdn n a b)).",
            "VernacExtend",
            "63b09c2623c6402b3a09309f8dcd7336d87bcf43"
        ],
        [
            "apply divide_mul_r.",
            "VernacExtend",
            "f4f93e8ecc80a6cc5ac3cf57a0ec9f56233cb013"
        ],
        [
            "apply IHn; clear IHn.",
            "VernacExtend",
            "0d3ebe9bf4537ea4007fa58beff15a86f7faa9ed"
        ],
        [
            "apply le_S_n in LE.",
            "VernacExtend",
            "4d45a4e613aaca8b923f759bb22ce60e93f840b4"
        ],
        [
            "apply le_Sn_le.",
            "VernacExtend",
            "c0f75afdbf652aa71c225aeb9c95b55224bc6b61"
        ],
        [
            "now rewrite plus_n_Sm.",
            "VernacExtend",
            "65bc77de7ab07daa65931fbfb577b76979859436"
        ],
        [
            "apply divide_xO_xI with p; trivial.",
            "VernacExtend",
            "7522c8b7011207758282cfa9bf0138761bf27813"
        ],
        [
            "now exists 1.",
            "VernacExtend",
            "d45a6c3f593137737025314063e6fb7edf2088f9"
        ],
        [
            "apply divide_xO_xI with p; trivial.",
            "VernacExtend",
            "7522c8b7011207758282cfa9bf0138761bf27813"
        ],
        [
            "now exists 1.",
            "VernacExtend",
            "d45a6c3f593137737025314063e6fb7edf2088f9"
        ],
        [
            "apply divide_xO_xO.",
            "VernacExtend",
            "0654bf3d3c41fabdf36aa7cd3688ea4f07dce10f"
        ],
        [
            "apply IHn; clear IHn.",
            "VernacExtend",
            "0d3ebe9bf4537ea4007fa58beff15a86f7faa9ed"
        ],
        [
            "apply le_S_n in LE.",
            "VernacExtend",
            "4d45a4e613aaca8b923f759bb22ce60e93f840b4"
        ],
        [
            "apply le_Sn_le.",
            "VernacExtend",
            "c0f75afdbf652aa71c225aeb9c95b55224bc6b61"
        ],
        [
            "now rewrite plus_n_Sm.",
            "VernacExtend",
            "65bc77de7ab07daa65931fbfb577b76979859436"
        ],
        [
            "now apply divide_xO_xO.",
            "VernacExtend",
            "3fbabda634728b2cd416f483c2ccd80aba4b04b1"
        ],
        [
            "now apply divide_xO_xO.",
            "VernacExtend",
            "3fbabda634728b2cd416f483c2ccd80aba4b04b1"
        ],
        [
            "exists (gcdn n a b)~0.",
            "VernacExtend",
            "65f8ccaf11af557aa15b98bf08c5283275a2a8d6"
        ],
        [
            "now rewrite mul_1_r.",
            "VernacExtend",
            "12e64d5128c998cd6c976dbc7b183718cf17ae45"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_greatest : forall a b p, (p|a) -> (p|b) -> (p|gcd a b).",
            "VernacStartTheoremProof",
            "412ae8a18f1e414ab06377e500069cd3e55f60ce"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply gcdn_greatest; auto.",
            "VernacExtend",
            "d151230ba9c4c86d079ea53eb8b4fbd382402514"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ggcd_greatest : forall a b, let (aa,bb) := snd (ggcd a b) in forall p, (p|aa) -> (p|bb) -> p=1.",
            "VernacStartTheoremProof",
            "05d92de9aad96ee7a4716b7470a88f73b2c0d006"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (gcd_greatest a b) (ggcd_correct_divisors a b).",
            "VernacExtend",
            "e0cbf1a601314420a553ce57818e95d577b0812f"
        ],
        [
            "rewrite <- ggcd_gcd.",
            "VernacExtend",
            "af8fe3aa4e3b8cec9dff021772fb4d255806993f"
        ],
        [
            "destruct ggcd as (g,(aa,bb)); simpl.",
            "VernacExtend",
            "d7905ef92137f67e94c97b87557d36066c22301a"
        ],
        [
            "intros H (EQa,EQb) p Hp1 Hp2; subst.",
            "VernacExtend",
            "5b75173968d38519349e388dc3fa6d499b18ac7d"
        ],
        [
            "assert (H' : (g*p | g)).",
            "VernacExtend",
            "9961f9e7ba9bd1eafffd7cf7053192a4ce48b3f3"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "destruct Hp1 as (r,Hr).",
            "VernacExtend",
            "3e96cf4d9258a7f9b388da85b8763af152851046"
        ],
        [
            "exists r.",
            "VernacExtend",
            "6ca63eb3bc93583233e98ef7c15aab920cd0ed23"
        ],
        [
            "now rewrite mul_assoc, (mul_comm r g), <- mul_assoc, <- Hr.",
            "VernacExtend",
            "2e35c06acd59cb0aa8bc17f7a200798c3a3e5625"
        ],
        [
            "destruct Hp2 as (r,Hr).",
            "VernacExtend",
            "c198c1e4350adf186ecca11c9de2bd9c06307ddf"
        ],
        [
            "exists r.",
            "VernacExtend",
            "6ca63eb3bc93583233e98ef7c15aab920cd0ed23"
        ],
        [
            "now rewrite mul_assoc, (mul_comm r g), <- mul_assoc, <- Hr.",
            "VernacExtend",
            "2e35c06acd59cb0aa8bc17f7a200798c3a3e5625"
        ],
        [
            "destruct H' as (q,H').",
            "VernacExtend",
            "517f63b96d7d51190f7480b9cef196af1b738117"
        ],
        [
            "rewrite (mul_comm g p), mul_assoc in H'.",
            "VernacExtend",
            "de2b872211daaa5991a2703a7b869e230984504b"
        ],
        [
            "apply mul_eq_1 with q; rewrite mul_comm.",
            "VernacExtend",
            "98ec9d81bc3436fa4c7b7d60aa650d7437510646"
        ],
        [
            "now apply mul_reg_r with g.",
            "VernacExtend",
            "1c17f6ea093198a210a1d034890abbb8d2699d71"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Pos.",
            "VernacEndSegment",
            "274716df04fcfaa59852bbc36d93c02693fa6d90"
        ],
        [
            "Bind Scope positive_scope with Pos.t positive.",
            "VernacBindScope",
            "7e273cc9c42f54285f72ce5157aa605fd7475e64"
        ],
        [
            "Numeral Notation positive Pos.of_int Pos.to_uint : positive_scope.",
            "VernacExtend",
            "8699c03c4850b79f0ed4a989583bc1276d3f142c"
        ],
        [
            "Infix \"+\" := Pos.add : positive_scope.",
            "VernacInfix",
            "8d65047854453117ae05327da1bbd09be9c9db31"
        ],
        [
            "Infix \"-\" := Pos.sub : positive_scope.",
            "VernacInfix",
            "356ca2387f72b66e3b03efcb7d43c6bed33ddb86"
        ],
        [
            "Infix \"*\" := Pos.mul : positive_scope.",
            "VernacInfix",
            "31445bb17d0b3e7631c07e82cfb810d0a7ff56a4"
        ],
        [
            "Infix \"^\" := Pos.pow : positive_scope.",
            "VernacInfix",
            "a7ed3de94b61017bb2f04bad930023e83ad51fb1"
        ],
        [
            "Infix \"?=\" := Pos.compare (at level 70, no associativity) : positive_scope.",
            "VernacInfix",
            "58f021c82eb3e16b059ca4a965462b8c7c711b76"
        ],
        [
            "Infix \"=?\" := Pos.eqb (at level 70, no associativity) : positive_scope.",
            "VernacInfix",
            "ca978b7c37a1702399963877c0b516d83504e99d"
        ],
        [
            "Infix \"<=?\" := Pos.leb (at level 70, no associativity) : positive_scope.",
            "VernacInfix",
            "11967feb5b9638e8726435ae057d6cedfa70c3c1"
        ],
        [
            "Infix \"<?\" := Pos.ltb (at level 70, no associativity) : positive_scope.",
            "VernacInfix",
            "6d9400222de095ba0e44834c8812239fb8a26d9a"
        ],
        [
            "Infix \"<=\" := Pos.le : positive_scope.",
            "VernacInfix",
            "45011aed67fff33a39a476d9946c1791b62f8213"
        ],
        [
            "Infix \"<\" := Pos.lt : positive_scope.",
            "VernacInfix",
            "ed588f55a4eda8a8ee0f436147d44c9962aaed23"
        ],
        [
            "Infix \">=\" := Pos.ge : positive_scope.",
            "VernacInfix",
            "a883eeee698f4db406610edf45102e35bd5ee227"
        ],
        [
            "Infix \">\" := Pos.gt : positive_scope.",
            "VernacInfix",
            "09eba746fb5d33ed47b33a49ece8cc7aa0a7e689"
        ],
        [
            "Notation \"x <= y <= z\" := (x <= y /\\ y <= z) : positive_scope.",
            "VernacNotation",
            "839564c22d3cf82639d0a9404f899aa9d044c99e"
        ],
        [
            "Notation \"x <= y < z\" := (x <= y /\\ y < z) : positive_scope.",
            "VernacNotation",
            "da8763e11ce66a25bd087968f8d48cd87df803c9"
        ],
        [
            "Notation \"x < y < z\" := (x < y /\\ y < z) : positive_scope.",
            "VernacNotation",
            "1e2edd36f3462619bd4d41484601f082af0991db"
        ],
        [
            "Notation \"x < y <= z\" := (x < y /\\ y <= z) : positive_scope.",
            "VernacNotation",
            "4b648f9df8d49b3f46576aeca16b6adfdbb34648"
        ],
        [
            "Notation \"( p | q )\" := (Pos.divide p q) (at level 0) : positive_scope.",
            "VernacNotation",
            "8ef97b26e02e6f17002b3ba1573e3c93fcd80d06"
        ],
        [
            "Notation positive := positive (only parsing).",
            "VernacSyntacticDefinition",
            "c6f0f55ee62af392efe39208b691bc64230572be"
        ],
        [
            "Notation positive_rect := positive_rect (only parsing).",
            "VernacSyntacticDefinition",
            "f1fc13ec93cb0b62bdddf636c2bf978b16ca7452"
        ],
        [
            "Notation positive_rec := positive_rec (only parsing).",
            "VernacSyntacticDefinition",
            "ee9a509ba8a812d76c11eba4eb28a3d298a06499"
        ],
        [
            "Notation positive_ind := positive_ind (only parsing).",
            "VernacSyntacticDefinition",
            "2072bfe980e794e839f178f47172e462b5c1d65d"
        ],
        [
            "Notation xI := xI (only parsing).",
            "VernacSyntacticDefinition",
            "061fa1356973dfa45c006238a8819a74e1ba35a2"
        ],
        [
            "Notation xO := xO (only parsing).",
            "VernacSyntacticDefinition",
            "974558b7333e95ce133650bb35e195073cf48e2c"
        ],
        [
            "Notation xH := xH (only parsing).",
            "VernacSyntacticDefinition",
            "137ef25a722f9306f21bb06687b5cd92e3e6bd80"
        ],
        [
            "Notation IsNul := Pos.IsNul (only parsing).",
            "VernacSyntacticDefinition",
            "7a9b1ae2cf5c735479e1250cd16dfa4d74613126"
        ],
        [
            "Notation IsPos := Pos.IsPos (only parsing).",
            "VernacSyntacticDefinition",
            "3dcfd68a5c44935f5e45f7858e00e0179e9c223b"
        ],
        [
            "Notation IsNeg := Pos.IsNeg (only parsing).",
            "VernacSyntacticDefinition",
            "c3881322ce0f577b1bc27a7efaa7c824727f44d8"
        ],
        [
            "Notation Psucc := Pos.succ (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "00b4f4bccb9e39595ef756d4e774d584ebaae3ff"
        ],
        [
            "Notation Pplus := Pos.add (only parsing).",
            "VernacSyntacticDefinition",
            "c5c8476dd5bef42b277606808e7a80950adbcb81"
        ],
        [
            "Notation Pplus_carry := Pos.add_carry (only parsing).",
            "VernacSyntacticDefinition",
            "a2cffd08a1513515c7ddb9972f8957afb8021d8f"
        ],
        [
            "Notation Ppred := Pos.pred (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "1d09cafb28864664cc32a7ebb8df79127664723d"
        ],
        [
            "Notation Piter_op := Pos.iter_op (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "f73b6e0a5c918cc99abb81b3781384951d41f9dd"
        ],
        [
            "Notation Piter_op_succ := Pos.iter_op_succ (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "515da27a613d9ba0fc661c6f7071d08fadd3d9a6"
        ],
        [
            "Notation Pmult_nat := (Pos.iter_op plus) (only parsing).",
            "VernacSyntacticDefinition",
            "de510013d691868d0b4c3df363d1017f3f9869e8"
        ],
        [
            "Notation nat_of_P := Pos.to_nat (only parsing).",
            "VernacSyntacticDefinition",
            "06dcfedaca37fdc90fa41dbc4cd77d31610e4409"
        ],
        [
            "Notation P_of_succ_nat := Pos.of_succ_nat (only parsing).",
            "VernacSyntacticDefinition",
            "63b95783082aeb09f310bdc503d24711ebdc6859"
        ],
        [
            "Notation Pdouble_minus_one := Pos.pred_double (only parsing).",
            "VernacSyntacticDefinition",
            "5c0dd36eb8cecbe3a45663898b425d00487b30e0"
        ],
        [
            "Notation positive_mask := Pos.mask (only parsing).",
            "VernacSyntacticDefinition",
            "15d5b0771fec8b60d75b366a473840fa74d2d645"
        ],
        [
            "Notation positive_mask_rect := Pos.mask_rect (only parsing).",
            "VernacSyntacticDefinition",
            "673fde74a8ed0d8f5c45cb5ec9e3316dcbe0a1b5"
        ],
        [
            "Notation positive_mask_ind := Pos.mask_ind (only parsing).",
            "VernacSyntacticDefinition",
            "40348819eb6c3500b1c000f042988047510c596d"
        ],
        [
            "Notation positive_mask_rec := Pos.mask_rec (only parsing).",
            "VernacSyntacticDefinition",
            "1030f2f7a7d6af8972c9dcd1f221c5145467cfb8"
        ],
        [
            "Notation Pdouble_plus_one_mask := Pos.succ_double_mask (only parsing).",
            "VernacSyntacticDefinition",
            "5734c36cb48ead7bc97a4de3399021116f5bd82f"
        ],
        [
            "Notation Pdouble_mask := Pos.double_mask (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "21244d0ed93825c8ec92479b6edbfd0fb1831b2d"
        ],
        [
            "Notation Pdouble_minus_two := Pos.double_pred_mask (only parsing).",
            "VernacSyntacticDefinition",
            "d8e3cc4c55e0384da52362af655443f8224d6c12"
        ],
        [
            "Notation Pminus_mask := Pos.sub_mask (only parsing).",
            "VernacSyntacticDefinition",
            "7f7cfd6d9b485a33e084697414d83bc658fff202"
        ],
        [
            "Notation Pminus_mask_carry := Pos.sub_mask_carry (only parsing).",
            "VernacSyntacticDefinition",
            "7740f03dcdbab2bc568a911937926137cadd8bda"
        ],
        [
            "Notation Pminus := Pos.sub (only parsing).",
            "VernacSyntacticDefinition",
            "995ef52d486e37f00f238d897c50338b1aae9f29"
        ],
        [
            "Notation Pmult := Pos.mul (only parsing).",
            "VernacSyntacticDefinition",
            "80edad1d5f7660a082bd9116664218535f4f9af9"
        ],
        [
            "Notation iter_pos := @Pos.iter (only parsing).",
            "VernacSyntacticDefinition",
            "2be8886636a416d99dafafd78c03095b2417dd42"
        ],
        [
            "Notation Ppow := Pos.pow (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "fab844fb0fdae669fa01a8ed177c0720d98d11c7"
        ],
        [
            "Notation Pdiv2 := Pos.div2 (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "0e784ad990b0206476a5591328b2a5fbaa48693d"
        ],
        [
            "Notation Pdiv2_up := Pos.div2_up (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "1042e4cd5b1659bb817ecd34d1b4215e6de6d9c3"
        ],
        [
            "Notation Psize := Pos.size_nat (only parsing).",
            "VernacSyntacticDefinition",
            "03172c82ed50becbd07e8e4724193e8f8fe86a12"
        ],
        [
            "Notation Psize_pos := Pos.size (only parsing).",
            "VernacSyntacticDefinition",
            "ac1a67288199b0a250e6f258aaaf091e9a79dc18"
        ],
        [
            "Notation Pcompare x y m := (Pos.compare_cont m x y) (only parsing).",
            "VernacSyntacticDefinition",
            "af7e525bc2cab5d3051768edaf33f1f5018caaa6"
        ],
        [
            "Notation Plt := Pos.lt (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "8f52afcec9758d74b99e180b5d8701bd92b373d8"
        ],
        [
            "Notation Pgt := Pos.gt (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "a17036982e362616d5881e308386cdeb30797644"
        ],
        [
            "Notation Ple := Pos.le (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "4d9e5bf5f8a143c72c1e1d6f986f7a0a4f208055"
        ],
        [
            "Notation Pge := Pos.ge (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "e77c3636661193c7578c1d0e4163a562e5c8b92a"
        ],
        [
            "Notation Pmin := Pos.min (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "1d3118cfef7f47e8ef6121c304fff135e7ff0cff"
        ],
        [
            "Notation Pmax := Pos.max (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "7b692cad5b0738fe968fa61f85727afc6a18c8d2"
        ],
        [
            "Notation Peqb := Pos.eqb (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "e5bcc45c17d99435b52c49e917df00129e1ca89d"
        ],
        [
            "Notation positive_eq_dec := Pos.eq_dec (only parsing).",
            "VernacSyntacticDefinition",
            "62855efac5b99bab1b0d5c95bd698065bc125770"
        ],
        [
            "Notation xI_succ_xO := Pos.xI_succ_xO (only parsing).",
            "VernacSyntacticDefinition",
            "6f2d94c668c601539ca953e8048ac698bade3f90"
        ],
        [
            "Notation Psucc_discr := Pos.succ_discr (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "8befdb82b36b82c7bfcddd996a0e375574ddca75"
        ],
        [
            "Notation Psucc_o_double_minus_one_eq_xO := Pos.succ_pred_double (only parsing).",
            "VernacSyntacticDefinition",
            "a90eddd789ec409ede12695e1714e8dc840eb120"
        ],
        [
            "Notation Pdouble_minus_one_o_succ_eq_xI := Pos.pred_double_succ (only parsing).",
            "VernacSyntacticDefinition",
            "c414b4f8cb7fd6228ba70038144098460605927d"
        ],
        [
            "Notation xO_succ_permute := Pos.double_succ (only parsing).",
            "VernacSyntacticDefinition",
            "14280d0fea29d5b1a05abb27f579a405082e135c"
        ],
        [
            "Notation double_moins_un_xO_discr := Pos.pred_double_xO_discr (only parsing).",
            "VernacSyntacticDefinition",
            "fd0afc29049da8c2be76446361e6fb6aad469c44"
        ],
        [
            "Notation Psucc_not_one := Pos.succ_not_1 (only parsing).",
            "VernacSyntacticDefinition",
            "f1022c7d8041b9a8a48c8c6ac33ae3ada438eb27"
        ],
        [
            "Notation Ppred_succ := Pos.pred_succ (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "6db8b963d1282f4e74aada44c3b92fd1b3e4a7c0"
        ],
        [
            "Notation Psucc_pred := Pos.succ_pred_or (only parsing).",
            "VernacSyntacticDefinition",
            "3f1b2a18d4c6bde866172950dd73dfb436e24122"
        ],
        [
            "Notation Psucc_inj := Pos.succ_inj (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "9e86b58d9f55405e27c994b97ca6ca2b6d75c694"
        ],
        [
            "Notation Pplus_carry_spec := Pos.add_carry_spec (only parsing).",
            "VernacSyntacticDefinition",
            "2a7d9116ad4d1bd0711405062b68068fcebc5aca"
        ],
        [
            "Notation Pplus_comm := Pos.add_comm (only parsing).",
            "VernacSyntacticDefinition",
            "4172632ff23b8bdacb7eca7b4fbdc21df9a4ec0f"
        ],
        [
            "Notation Pplus_succ_permute_r := Pos.add_succ_r (only parsing).",
            "VernacSyntacticDefinition",
            "7dc5c36b5620dbca3e8eaf62c40b5f26c9ded310"
        ],
        [
            "Notation Pplus_succ_permute_l := Pos.add_succ_l (only parsing).",
            "VernacSyntacticDefinition",
            "16482df1fdf3b4ae5dab5aaae325e6b4b740ee2e"
        ],
        [
            "Notation Pplus_no_neutral := Pos.add_no_neutral (only parsing).",
            "VernacSyntacticDefinition",
            "a1c6d972e9f5c8d383691cc7f73662fe83893c13"
        ],
        [
            "Notation Pplus_carry_plus := Pos.add_carry_add (only parsing).",
            "VernacSyntacticDefinition",
            "2df37c65019dc87519f0e555cb785d65ec293e0d"
        ],
        [
            "Notation Pplus_reg_r := Pos.add_reg_r (only parsing).",
            "VernacSyntacticDefinition",
            "cc2ffc4a72ca2f4ec11cd395898edc2ee3702a55"
        ],
        [
            "Notation Pplus_reg_l := Pos.add_reg_l (only parsing).",
            "VernacSyntacticDefinition",
            "fc749dd4490dff76ad1076b74b67bb9d5f93d3b6"
        ],
        [
            "Notation Pplus_carry_reg_r := Pos.add_carry_reg_r (only parsing).",
            "VernacSyntacticDefinition",
            "6db7be8e1b79d30b52c6321fcc9e7a6449239527"
        ],
        [
            "Notation Pplus_carry_reg_l := Pos.add_carry_reg_l (only parsing).",
            "VernacSyntacticDefinition",
            "f3d04a02f25cc8dae0d9ad0f8d060a3e3a9c1cfa"
        ],
        [
            "Notation Pplus_assoc := Pos.add_assoc (only parsing).",
            "VernacSyntacticDefinition",
            "07eeffa5d439c4959682011c107cfd041bb7692c"
        ],
        [
            "Notation Pplus_xO := Pos.add_xO (only parsing).",
            "VernacSyntacticDefinition",
            "08864439881fa50b49c483619c3bacf0c90058b3"
        ],
        [
            "Notation Pplus_xI_double_minus_one := Pos.add_xI_pred_double (only parsing).",
            "VernacSyntacticDefinition",
            "a0bdecfd4cb7e0e867a6a19e645525130b2461ed"
        ],
        [
            "Notation Pplus_xO_double_minus_one := Pos.add_xO_pred_double (only parsing).",
            "VernacSyntacticDefinition",
            "53ab64e66b1b73067cccbce84720797149d1a199"
        ],
        [
            "Notation Pplus_diag := Pos.add_diag (only parsing).",
            "VernacSyntacticDefinition",
            "1a5e643246399c8d089a7f19abbb427d67ed7cb6"
        ],
        [
            "Notation PeanoView := Pos.PeanoView (only parsing).",
            "VernacSyntacticDefinition",
            "cfdc4c7c4a286aced54fb06d997f89368a8fbe9a"
        ],
        [
            "Notation PeanoOne := Pos.PeanoOne (only parsing).",
            "VernacSyntacticDefinition",
            "eadd6eca931b091455c7a3317a883b6c289e8ab3"
        ],
        [
            "Notation PeanoSucc := Pos.PeanoSucc (only parsing).",
            "VernacSyntacticDefinition",
            "210b774f06865056e1f57756278c6dac14fa7025"
        ],
        [
            "Notation PeanoView_rect := Pos.PeanoView_rect (only parsing).",
            "VernacSyntacticDefinition",
            "96a47ed7e0884fd5dcb974a1da8584ecd2b4b8e8"
        ],
        [
            "Notation PeanoView_ind := Pos.PeanoView_ind (only parsing).",
            "VernacSyntacticDefinition",
            "007447e43d7b96b62f7e46440e0099806703f5c7"
        ],
        [
            "Notation PeanoView_rec := Pos.PeanoView_rec (only parsing).",
            "VernacSyntacticDefinition",
            "8fabdfac7bb72f1bf16907e130ca0542e7a8e85e"
        ],
        [
            "Notation peanoView_xO := Pos.peanoView_xO (only parsing).",
            "VernacSyntacticDefinition",
            "184afaf5a2d51593db3deac9b0d210ad582d87a7"
        ],
        [
            "Notation peanoView_xI := Pos.peanoView_xI (only parsing).",
            "VernacSyntacticDefinition",
            "21a6fe93e083d9a41fdcd65231a81ddac123ca31"
        ],
        [
            "Notation peanoView := Pos.peanoView (only parsing).",
            "VernacSyntacticDefinition",
            "80df1bafcfc5b4cd60ea7ed389c64bd428615ad4"
        ],
        [
            "Notation PeanoView_iter := Pos.PeanoView_iter (only parsing).",
            "VernacSyntacticDefinition",
            "adba59702a1d5752c4890374500e1cf64dd54872"
        ],
        [
            "Notation eq_dep_eq_positive := Pos.eq_dep_eq_positive (only parsing).",
            "VernacSyntacticDefinition",
            "d07e819d9d9010a757d1e81a70f9a542ad6af860"
        ],
        [
            "Notation PeanoViewUnique := Pos.PeanoViewUnique (only parsing).",
            "VernacSyntacticDefinition",
            "a20fea8d9bd236f36743550b71ab7c8fdfacae47"
        ],
        [
            "Notation Prect := Pos.peano_rect (only parsing).",
            "VernacSyntacticDefinition",
            "c0acdf89a34791f8e19dd4a8390d89f707598f41"
        ],
        [
            "Notation Prect_succ := Pos.peano_rect_succ (only parsing).",
            "VernacSyntacticDefinition",
            "c4a9ece05b8dc2d94299a1efefec9ec36bb0985e"
        ],
        [
            "Notation Prect_base := Pos.peano_rect_base (only parsing).",
            "VernacSyntacticDefinition",
            "eae813eb0c04348776df558b00169fc70b5a8f8b"
        ],
        [
            "Notation Prec := Pos.peano_rec (only parsing).",
            "VernacSyntacticDefinition",
            "9f841d82824e5d7d87276957e1d5adc3f46201af"
        ],
        [
            "Notation Pind := Pos.peano_ind (only parsing).",
            "VernacSyntacticDefinition",
            "dd270d76dc8b2e78a56784c92d53052101ee24ab"
        ],
        [
            "Notation Pcase := Pos.peano_case (only parsing).",
            "VernacSyntacticDefinition",
            "e2509ce0f7c4632a1c9de6f13cd810d1812e0fdf"
        ],
        [
            "Notation Pmult_1_r := Pos.mul_1_r (only parsing).",
            "VernacSyntacticDefinition",
            "6b4edbf630113923e9d068b7ab25430e45ab00b4"
        ],
        [
            "Notation Pmult_Sn_m := Pos.mul_succ_l (only parsing).",
            "VernacSyntacticDefinition",
            "8b96caf71b68c1e27a30744a009266e27dc420e1"
        ],
        [
            "Notation Pmult_xO_permute_r := Pos.mul_xO_r (only parsing).",
            "VernacSyntacticDefinition",
            "3ca80c658d8d3f6f612923e56f41dc5eb7195469"
        ],
        [
            "Notation Pmult_xI_permute_r := Pos.mul_xI_r (only parsing).",
            "VernacSyntacticDefinition",
            "56c82d846be05200b95840f91886f804ded5fc07"
        ],
        [
            "Notation Pmult_comm := Pos.mul_comm (only parsing).",
            "VernacSyntacticDefinition",
            "2f2fcc7c4ab570ddae1e3c838b2af6121fc69bd2"
        ],
        [
            "Notation Pmult_plus_distr_l := Pos.mul_add_distr_l (only parsing).",
            "VernacSyntacticDefinition",
            "6985bdff7b2b4b6fc18f58d3d19b674304e5d9fd"
        ],
        [
            "Notation Pmult_plus_distr_r := Pos.mul_add_distr_r (only parsing).",
            "VernacSyntacticDefinition",
            "1cbda3ed1c42ce3f608500cdcd3fedde25ef2520"
        ],
        [
            "Notation Pmult_assoc := Pos.mul_assoc (only parsing).",
            "VernacSyntacticDefinition",
            "6bd58c17736def9a0792243c07a401dda2800ec5"
        ],
        [
            "Notation Pmult_xI_mult_xO_discr := Pos.mul_xI_mul_xO_discr (only parsing).",
            "VernacSyntacticDefinition",
            "93561e8c60733ef6c6ee3341527a809a38696219"
        ],
        [
            "Notation Pmult_xO_discr := Pos.mul_xO_discr (only parsing).",
            "VernacSyntacticDefinition",
            "510dc040e22c227d3073cea27bf6fcac9dcb3fec"
        ],
        [
            "Notation Pmult_reg_r := Pos.mul_reg_r (only parsing).",
            "VernacSyntacticDefinition",
            "d55916af2e6fdc4c2798ac0ab4d5bd643d9f41d6"
        ],
        [
            "Notation Pmult_reg_l := Pos.mul_reg_l (only parsing).",
            "VernacSyntacticDefinition",
            "e22f8c66a3a551f7d4938cd8e3d4b019ba77dce8"
        ],
        [
            "Notation Pmult_1_inversion_l := Pos.mul_eq_1_l (only parsing).",
            "VernacSyntacticDefinition",
            "64a6b2fd528a6c7106a5eeab00970aec4279d8c6"
        ],
        [
            "Notation Psquare_xO := Pos.square_xO (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "e85f6b57e3f074e2dabdd5906b1029bca2ea50d9"
        ],
        [
            "Notation Psquare_xI := Pos.square_xI (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "b888b8b6e1a30b77d8bd447eb7a9f22ccb7e66dd"
        ],
        [
            "Notation iter_pos_swap_gen := Pos.iter_swap_gen (only parsing).",
            "VernacSyntacticDefinition",
            "8939bd3ad6b1b7e3240e7d0483dbdfd766c4111c"
        ],
        [
            "Notation iter_pos_swap := Pos.iter_swap (only parsing).",
            "VernacSyntacticDefinition",
            "81506aa2f580807f131364d15891970301fbf627"
        ],
        [
            "Notation iter_pos_succ := Pos.iter_succ (only parsing).",
            "VernacSyntacticDefinition",
            "e3e3dd5bcc2adf24667a75debbb329683eda3923"
        ],
        [
            "Notation iter_pos_plus := Pos.iter_add (only parsing).",
            "VernacSyntacticDefinition",
            "72a18d5440e06c07198c0d421ca38b089ded1ab1"
        ],
        [
            "Notation iter_pos_invariant := Pos.iter_invariant (only parsing).",
            "VernacSyntacticDefinition",
            "5ffd0ca7cfbb60dbd42667dd2d4f3c52cd772162"
        ],
        [
            "Notation Ppow_1_r := Pos.pow_1_r (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "6f01a51821068fcbbbad6d528af98928df24aa31"
        ],
        [
            "Notation Ppow_succ_r := Pos.pow_succ_r (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "82e92eee6edc60e7894d57bde467ee9d665b5ce8"
        ],
        [
            "Notation Peqb_refl := Pos.eqb_refl (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "39bc601f99fd3b22d4697cecf1b200fe4f41fc67"
        ],
        [
            "Notation Peqb_eq := Pos.eqb_eq (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "9ff922acde028889c32fd3203b418467283184bb"
        ],
        [
            "Notation Pcompare_refl_id := Pos.compare_cont_refl (only parsing).",
            "VernacSyntacticDefinition",
            "504be69112b559b222ec38eabd8abb311aefbd0e"
        ],
        [
            "Notation Pcompare_eq_iff := Pos.compare_eq_iff (only parsing).",
            "VernacSyntacticDefinition",
            "8f39e2668b9e83ff3d9bdd11d737cdf58c9e1e7a"
        ],
        [
            "Notation Pcompare_Gt_Lt := Pos.compare_cont_Gt_Lt (only parsing).",
            "VernacSyntacticDefinition",
            "16f1c22ac55edb9b1f0be1f8966f972bcefd9b12"
        ],
        [
            "Notation Pcompare_eq_Lt := Pos.compare_lt_iff (only parsing).",
            "VernacSyntacticDefinition",
            "4b924ddbf9e89d8ee357f15a0df10793c002f98d"
        ],
        [
            "Notation Pcompare_Lt_Gt := Pos.compare_cont_Lt_Gt (only parsing).",
            "VernacSyntacticDefinition",
            "6b9e821f7a9f7bc0565fa4bacdf842eebd0b62cf"
        ],
        [
            "Notation Pcompare_antisym := Pos.compare_cont_antisym (only parsing).",
            "VernacSyntacticDefinition",
            "d33bc67553a84419f1c5393ca2ffad2a87b01271"
        ],
        [
            "Notation ZC1 := Pos.gt_lt (only parsing).",
            "VernacSyntacticDefinition",
            "3147575efe79f1ff4ca770ca36881848930a375f"
        ],
        [
            "Notation ZC2 := Pos.lt_gt (only parsing).",
            "VernacSyntacticDefinition",
            "0be050c9ebf8277e79b4fcda377563c5e2f5d560"
        ],
        [
            "Notation Pcompare_spec := Pos.compare_spec (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "72cb8bbbb05dd25f1b1f2e1f42ea7d7c678a6865"
        ],
        [
            "Notation Pcompare_p_Sp := Pos.lt_succ_diag_r (only parsing).",
            "VernacSyntacticDefinition",
            "832c505ea955249e7f845041c9c416c83c15a387"
        ],
        [
            "Notation Pcompare_succ_succ := Pos.compare_succ_succ (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "16a97e3e5dd6f9c939264ed5e96a6a32a09b3151"
        ],
        [
            "Notation Pcompare_1 := Pos.nlt_1_r (only parsing).",
            "VernacSyntacticDefinition",
            "bbcae235b7216c215ba55e6041dd2f88a0480434"
        ],
        [
            "Notation Plt_1 := Pos.nlt_1_r (only parsing).",
            "VernacSyntacticDefinition",
            "32268b02b2b72da5856e2b153723f67e103910ea"
        ],
        [
            "Notation Plt_1_succ := Pos.lt_1_succ (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "3bbf2ddc9142022a3b63e895369163b3b675fc25"
        ],
        [
            "Notation Plt_lt_succ := Pos.lt_lt_succ (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "2034deeeacf455bec54239dd0d363fe365b1a45b"
        ],
        [
            "Notation Plt_irrefl := Pos.lt_irrefl (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "f5f713ba84e89e634dbac35eaaf35e4d3ce3ff4f"
        ],
        [
            "Notation Plt_trans := Pos.lt_trans (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "e7af3929335b2cffd62edeca169f26dbe7708f1f"
        ],
        [
            "Notation Plt_ind := Pos.lt_ind (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "4a85d76b0a50316dfc0519f191540ef8461ede10"
        ],
        [
            "Notation Ple_lteq := Pos.le_lteq (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "0c8d6a001da16cefb26d1a65d16e10fdd0d43d2f"
        ],
        [
            "Notation Ple_refl := Pos.le_refl (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "a4c0c917fe3dfd122639d290e2aa7b60867264c4"
        ],
        [
            "Notation Ple_lt_trans := Pos.le_lt_trans (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "043da85335f1c46e6eab9abd5e5588352cd7153a"
        ],
        [
            "Notation Plt_le_trans := Pos.lt_le_trans (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "e0884d77c06b91959dabcb7c859d0886f3322d6e"
        ],
        [
            "Notation Ple_trans := Pos.le_trans (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "825d5b1fbfea80b9e65e34beb4c5e80fb42e0070"
        ],
        [
            "Notation Plt_succ_r := Pos.lt_succ_r (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "e8e3f902e13caaa5706d23151346672357ee746b"
        ],
        [
            "Notation Ple_succ_l := Pos.le_succ_l (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "68320b5012b95fe68f0ba7022041d8b7167a92de"
        ],
        [
            "Notation Pplus_compare_mono_l := Pos.add_compare_mono_l (only parsing).",
            "VernacSyntacticDefinition",
            "baf0cd2201563a2d166e6ce680c522441533f153"
        ],
        [
            "Notation Pplus_compare_mono_r := Pos.add_compare_mono_r (only parsing).",
            "VernacSyntacticDefinition",
            "1e4fa55a5e3886665593b1186cd441ff62918772"
        ],
        [
            "Notation Pplus_lt_mono_l := Pos.add_lt_mono_l (only parsing).",
            "VernacSyntacticDefinition",
            "14c56cee687e3d8731e00cd711f46b04b171720d"
        ],
        [
            "Notation Pplus_lt_mono_r := Pos.add_lt_mono_r (only parsing).",
            "VernacSyntacticDefinition",
            "d14fe1a85ad66f55036a97d88d7e1255f76ac86d"
        ],
        [
            "Notation Pplus_lt_mono := Pos.add_lt_mono (only parsing).",
            "VernacSyntacticDefinition",
            "ebd75b89394f5c2cfdfd91a87b65b2480a92b5ad"
        ],
        [
            "Notation Pplus_le_mono_l := Pos.add_le_mono_l (only parsing).",
            "VernacSyntacticDefinition",
            "c1b795e3ad224f0eec54089c4b7386f2ad568deb"
        ],
        [
            "Notation Pplus_le_mono_r := Pos.add_le_mono_r (only parsing).",
            "VernacSyntacticDefinition",
            "474783e62a2403b757ac7e4997242c6c413d63cc"
        ],
        [
            "Notation Pplus_le_mono := Pos.add_le_mono (only parsing).",
            "VernacSyntacticDefinition",
            "b5bbe1114d2f979c2406a603e3bd308a366a7a23"
        ],
        [
            "Notation Pmult_compare_mono_l := Pos.mul_compare_mono_l (only parsing).",
            "VernacSyntacticDefinition",
            "2ad221ab9c9d31da42488e6478dbe0c1280573ce"
        ],
        [
            "Notation Pmult_compare_mono_r := Pos.mul_compare_mono_r (only parsing).",
            "VernacSyntacticDefinition",
            "5f2b8cbce854050b06290ec468e1f2842716e995"
        ],
        [
            "Notation Pmult_lt_mono_l := Pos.mul_lt_mono_l (only parsing).",
            "VernacSyntacticDefinition",
            "45c1c3fdfe3c31031754ca7ef86c5b5eac6a1067"
        ],
        [
            "Notation Pmult_lt_mono_r := Pos.mul_lt_mono_r (only parsing).",
            "VernacSyntacticDefinition",
            "4e7327c668625687b7e1032e3512e17e844c72e5"
        ],
        [
            "Notation Pmult_lt_mono := Pos.mul_lt_mono (only parsing).",
            "VernacSyntacticDefinition",
            "d2e9b2ebefe70552b209e490f2d1d2cd256a976d"
        ],
        [
            "Notation Pmult_le_mono_l := Pos.mul_le_mono_l (only parsing).",
            "VernacSyntacticDefinition",
            "354becefd92617f9ceddbc8e35eedcd74749f471"
        ],
        [
            "Notation Pmult_le_mono_r := Pos.mul_le_mono_r (only parsing).",
            "VernacSyntacticDefinition",
            "1bc634601a4fbcac1210acce1e4f7aff44effa81"
        ],
        [
            "Notation Pmult_le_mono := Pos.mul_le_mono (only parsing).",
            "VernacSyntacticDefinition",
            "8b5e536d71b69d55fa3409a35e30cdee69ef4696"
        ],
        [
            "Notation Plt_plus_r := Pos.lt_add_r (only parsing).",
            "VernacSyntacticDefinition",
            "84f519db09188b42781da1453d34788c5ff96000"
        ],
        [
            "Notation Plt_not_plus_l := Pos.lt_not_add_l (only parsing).",
            "VernacSyntacticDefinition",
            "dc9acf4f9c5cc9e5a4ff983fd6660f014cd11e67"
        ],
        [
            "Notation Ppow_gt_1 := Pos.pow_gt_1 (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "f5d9a5b2de742245377541171f8186b6383d8fa4"
        ],
        [
            "Notation Ppred_mask := Pos.pred_mask (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "f1de70fbeb57f78d25cd22f4068db76a18b9253e"
        ],
        [
            "Notation Pminus_mask_succ_r := Pos.sub_mask_succ_r (only parsing).",
            "VernacSyntacticDefinition",
            "5e524d8568de1cc6d9d5bc39b016f0c6d07daab4"
        ],
        [
            "Notation Pminus_mask_carry_spec := Pos.sub_mask_carry_spec (only parsing).",
            "VernacSyntacticDefinition",
            "b36e7c1d57e8c0ada2dabe6aaaed54dce296bcdb"
        ],
        [
            "Notation Pminus_succ_r := Pos.sub_succ_r (only parsing).",
            "VernacSyntacticDefinition",
            "6322fdbb2113a9ac228498b98fb6992520f0a4e1"
        ],
        [
            "Notation Pminus_mask_diag := Pos.sub_mask_diag (only parsing).",
            "VernacSyntacticDefinition",
            "64d9926f4a3496022fada6903cfe5dca02981279"
        ],
        [
            "Notation Pplus_minus_eq := Pos.add_sub (only parsing).",
            "VernacSyntacticDefinition",
            "f2592c082204d7361c0a4aa7641faa78a9013a3f"
        ],
        [
            "Notation Pmult_minus_distr_l := Pos.mul_sub_distr_l (only parsing).",
            "VernacSyntacticDefinition",
            "83ec660251fe7c42df2cbc0126ecbbd4e343786b"
        ],
        [
            "Notation Pminus_lt_mono_l := Pos.sub_lt_mono_l (only parsing).",
            "VernacSyntacticDefinition",
            "49cf5de17a8947d38c81dfac2b1d4812c6b447a8"
        ],
        [
            "Notation Pminus_compare_mono_l := Pos.sub_compare_mono_l (only parsing).",
            "VernacSyntacticDefinition",
            "e1295c2b400a7c26c566eb95941e5cc65bda2ee5"
        ],
        [
            "Notation Pminus_compare_mono_r := Pos.sub_compare_mono_r (only parsing).",
            "VernacSyntacticDefinition",
            "98e889072e54c5a1b148560c009cf66d75a05178"
        ],
        [
            "Notation Pminus_lt_mono_r := Pos.sub_lt_mono_r (only parsing).",
            "VernacSyntacticDefinition",
            "393c49f33004cf625b36d64c03d02f0876f55cff"
        ],
        [
            "Notation Pminus_decr := Pos.sub_decr (only parsing).",
            "VernacSyntacticDefinition",
            "6da08963be6ca2103d96f19c46af79353f4af7e2"
        ],
        [
            "Notation Pminus_xI_xI := Pos.sub_xI_xI (only parsing).",
            "VernacSyntacticDefinition",
            "6bc1fd6f608c31a81c4f2420656c8a6802c9b63b"
        ],
        [
            "Notation Pplus_minus_assoc := Pos.add_sub_assoc (only parsing).",
            "VernacSyntacticDefinition",
            "296726f8293831887f8faba68fcd6649001f6cd2"
        ],
        [
            "Notation Pminus_plus_distr := Pos.sub_add_distr (only parsing).",
            "VernacSyntacticDefinition",
            "d24272807039befbc644fb46128babea0a723942"
        ],
        [
            "Notation Pminus_minus_distr := Pos.sub_sub_distr (only parsing).",
            "VernacSyntacticDefinition",
            "1e333bf8ef70cf9366b9d4f91b231c025e7175ba"
        ],
        [
            "Notation Pminus_mask_Lt := Pos.sub_mask_neg (only parsing).",
            "VernacSyntacticDefinition",
            "78cd2f0d1141816ba1e71798538707ad0a883bf3"
        ],
        [
            "Notation Pminus_Lt := Pos.sub_lt (only parsing).",
            "VernacSyntacticDefinition",
            "dacb1662e2d7e65ba5b69f5caeec03851f63dbf6"
        ],
        [
            "Notation Pminus_Eq := Pos.sub_diag (only parsing).",
            "VernacSyntacticDefinition",
            "ca47a143f76c985051a369cfaeca53be993adeab"
        ],
        [
            "Notation Psize_monotone := Pos.size_nat_monotone (only parsing).",
            "VernacSyntacticDefinition",
            "822529cee52869073f3cd1be5b9f35aeea3fd2d3"
        ],
        [
            "Notation Psize_pos_gt := Pos.size_gt (only parsing).",
            "VernacSyntacticDefinition",
            "e56d690302d032c5e22dc50435cc168f77ba86ee"
        ],
        [
            "Notation Psize_pos_le := Pos.size_le (only parsing).",
            "VernacSyntacticDefinition",
            "20acbfa436fd8d69e47a9487150bbf090b8a6a0c"
        ],
        [
            "Lemma Peqb_true_eq x y : Pos.eqb x y = true -> x=y.",
            "VernacStartTheoremProof",
            "04233f664a4b58a36d85b715acf95b2b31f59794"
        ],
        [
            "apply Pos.eqb_eq.",
            "VernacExtend",
            "095fe63dd7f87e8af9997ad5c294c9443cb412ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Pcompare_eq_Gt p q : (p ?= q) = Gt <-> p > q.",
            "VernacStartTheoremProof",
            "bffbb38c9bcb1c2e2200220d8730594fdf4e86dd"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Pplus_one_succ_r p : Pos.succ p = p + 1.",
            "VernacStartTheoremProof",
            "54a9d504456b2b7a1fb9a065d65b8a56c4e3dee4"
        ],
        [
            "Proof (eq_sym (Pos.add_1_r p)).",
            "VernacExactProof",
            "12d7c23346f483e742f0534dd2c0b75ec0d0777b"
        ],
        [
            "Lemma Pplus_one_succ_l p : Pos.succ p = 1 + p.",
            "VernacStartTheoremProof",
            "ff80d7c9d3893d30afa37eca09e8e62c144f4c74"
        ],
        [
            "Proof (eq_sym (Pos.add_1_l p)).",
            "VernacExactProof",
            "58ec39424aa1eb0cec5d72c3d380c7cb3ef30dec"
        ],
        [
            "Lemma Pcompare_refl p : Pos.compare_cont Eq p p = Eq.",
            "VernacStartTheoremProof",
            "672973a83d4a52caea08777f6ed83650f187af91"
        ],
        [
            "Proof (Pos.compare_cont_refl p Eq).",
            "VernacExactProof",
            "7e22027e083dd22ac1318abbc863073fe8509b0e"
        ],
        [
            "Lemma Pcompare_Eq_eq : forall p q, Pos.compare_cont Eq p q = Eq -> p = q.",
            "VernacStartTheoremProof",
            "3659b7d31426e4354821501af5fcb6d707c53da9"
        ],
        [
            "Proof Pos.compare_eq.",
            "VernacExactProof",
            "0c156304e7f62275153ff90a89d1c2525154b12d"
        ],
        [
            "Lemma ZC4 p q : Pos.compare_cont Eq p q = CompOpp (Pos.compare_cont Eq q p).",
            "VernacStartTheoremProof",
            "e56b107c4520b941e6d3ce53d094ae35eb0fd987"
        ],
        [
            "Proof (Pos.compare_antisym q p).",
            "VernacExactProof",
            "869fc2ad7112d95ef2af9c10a896f7d642ab65d5"
        ],
        [
            "Lemma Ppred_minus p : Pos.pred p = p - 1.",
            "VernacStartTheoremProof",
            "2e28299d967d221f8d0335d968c157cf7eeb5a69"
        ],
        [
            "Proof (eq_sym (Pos.sub_1_r p)).",
            "VernacExactProof",
            "68f8e42743be1865265aceb223dc31f84e90276c"
        ],
        [
            "Lemma Pminus_mask_Gt p q : p > q -> exists h : positive, Pos.sub_mask p q = IsPos h /\\ q + h = p /\\ (h = 1 \\/ Pos.sub_mask_carry p q = IsPos (Pos.pred h)).",
            "VernacStartTheoremProof",
            "57780c99c604f128effa27eb16f28fbcceaabbfe"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply Pos.gt_lt in H.",
            "VernacExtend",
            "196a6e7b81daf2e83a66d3ba628589bd5135289c"
        ],
        [
            "destruct (Pos.sub_mask_pos p q H) as (r & U).",
            "VernacExtend",
            "d0ccca4ad8618e5c7fa9c358872e2fd6e4de6d60"
        ],
        [
            "exists r.",
            "VernacExtend",
            "6ca63eb3bc93583233e98ef7c15aab920cd0ed23"
        ],
        [
            "repeat split; trivial.",
            "VernacExtend",
            "060692b05c8d85062072ae8d30e5549bb92445ef"
        ],
        [
            "now apply Pos.sub_mask_pos_iff.",
            "VernacExtend",
            "8de572bea6649051bb9979839185534caa37edf6"
        ],
        [
            "destruct (Pos.eq_dec r 1) as [EQ|NE]; [now left|right].",
            "VernacExtend",
            "12ab8b8bad0402af7b010ac3802ecf31f6f1ffe8"
        ],
        [
            "rewrite Pos.sub_mask_carry_spec, U.",
            "VernacExtend",
            "8bb9f594263b8ad9b945cb0edacdc68af8ace391"
        ],
        [
            "destruct r; trivial.",
            "VernacExtend",
            "068219a028147b8fbb4aa44aecdc9d88d3fd0ae5"
        ],
        [
            "now elim NE.",
            "VernacExtend",
            "c223569ae611340ca95bfa1fa22df0387d58a4cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Pplus_minus : forall p q, p > q -> q+(p-q) = p.",
            "VernacStartTheoremProof",
            "d4900517ce1e13c69a11e50db0f57de9cfb1ac42"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Pos.add_comm.",
            "VernacExtend",
            "4f794b32aa99f040ef36918dd1a14806df118107"
        ],
        [
            "now apply Pos.sub_add, Pos.gt_lt.",
            "VernacExtend",
            "3d95016a46383224cd51fa1b5eb25e9e56519f22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Dcompare : forall r:comparison, r = Eq \\/ r = Lt \\/ r = Gt.",
            "VernacStartTheoremProof",
            "ad149b7fee86d6b036ef12cd63b335db3656fba5"
        ],
        [
            "destruct r; auto.",
            "VernacExtend",
            "6b0638c1f1af30a47e3dec406faad68b57c27339"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "eq_dec",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "decide equality.",
                        "VernacExtend",
                        "10aba07d521545accbb51a4c2e0695a9ddce3199"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "xI_succ_xO",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_discr",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "now destruct p.",
                        "VernacExtend",
                        "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_double_spec",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_pred_double",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "induction p; simpl; now f_equal.",
                        "VernacExtend",
                        "d2f00fea8a2f15feb5cff27ab27d24a9fd59b881"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_double_succ",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "induction p; simpl; now f_equal.",
                        "VernacExtend",
                        "d2f00fea8a2f15feb5cff27ab27d24a9fd59b881"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "double_succ",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "now destruct p.",
                        "VernacExtend",
                        "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_double_xO_discr",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "now destruct p.",
                        "VernacExtend",
                        "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_not_1",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "now destruct p.",
                        "VernacExtend",
                        "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_succ",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "destruct p; simpl; trivial.",
                        "VernacExtend",
                        "d8fb693fd9c6141a0299e943aee34379e6ea247d"
                    ]
                },
                {
                    "command": [
                        "apply pred_double_succ.",
                        "VernacExtend",
                        "4da76692529ea8c0ebc741b79f4ffcffedc5d6c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_pred_or",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "destruct p; simpl; auto.",
                        "VernacExtend",
                        "62b7f0d95969e1da92986f886a38340b3ce984b7"
                    ]
                },
                {
                    "command": [
                        "right; apply succ_pred_double.",
                        "VernacExtend",
                        "bda080c4548e39b8f589fe7c9de7576c5e68cc73"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_pred",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "destruct p; intros H; simpl; trivial.",
                        "VernacExtend",
                        "81e0914134f587c8a1562f53a05e32717851c0c7"
                    ]
                },
                {
                    "command": [
                        "apply succ_pred_double.",
                        "VernacExtend",
                        "8c93f7cb5b547580676a25980207210647879b6b"
                    ]
                },
                {
                    "command": [
                        "now destruct H.",
                        "VernacExtend",
                        "a40b27d595b9124dbd626abd9d57401846190d93"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_inj",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "revert q.",
                        "VernacExtend",
                        "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
                    ]
                },
                {
                    "command": [
                        "induction p; intros [q|q| ] H; simpl in H; destr_eq H; f_equal; auto.",
                        "VernacExtend",
                        "9dea7332141eebe1a62fb0029deb10c9f038d0d3"
                    ]
                },
                {
                    "command": [
                        "elim (succ_not_1 p); auto.",
                        "VernacExtend",
                        "cad61c2379e9d1a3c0b4100f49c1309ec6f9165d"
                    ]
                },
                {
                    "command": [
                        "elim (succ_not_1 q); auto.",
                        "VernacExtend",
                        "7a3936f94ed81980f02c9d19ea8fea71368c9d0b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_N_succ",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "destruct p; simpl; trivial.",
                        "VernacExtend",
                        "d8fb693fd9c6141a0299e943aee34379e6ea247d"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply pred_double_succ.",
                        "VernacExtend",
                        "4da76692529ea8c0ebc741b79f4ffcffedc5d6c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_1_r",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "now destruct p.",
                        "VernacExtend",
                        "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_1_l",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "now destruct p.",
                        "VernacExtend",
                        "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_carry_spec",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "revert q.",
                        "VernacExtend",
                        "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
                    ]
                },
                {
                    "command": [
                        "induction p; destruct q; simpl; now f_equal.",
                        "VernacExtend",
                        "0f86792072a213d4682f5c12a537ef26c0688a80"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_comm",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "revert q.",
                        "VernacExtend",
                        "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
                    ]
                },
                {
                    "command": [
                        "induction p; destruct q; simpl; f_equal; trivial.",
                        "VernacExtend",
                        "11d48254590c156e2d52e094335b40bffa1a7355"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 add_carry_spec; now f_equal.",
                        "VernacExtend",
                        "764e454cfd17e8014e0aaf842c71ed573454a6e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_succ_r",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "revert q.",
                        "VernacExtend",
                        "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
                    ]
                },
                {
                    "command": [
                        "induction p; destruct q; simpl; f_equal; auto using add_1_r; rewrite add_carry_spec; auto.",
                        "VernacExtend",
                        "36de407d85fcfe9fcc0c7b48747522965cef80f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_succ_l",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "rewrite add_comm, (add_comm p).",
                        "VernacExtend",
                        "e9878e53e9adc9459e69eab894678f7d36fc9ec3"
                    ]
                },
                {
                    "command": [
                        "apply add_succ_r.",
                        "VernacExtend",
                        "5dc58e87742766502b5cb6961eab51e6fe6cd0bf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_no_neutral",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "revert q.",
                        "VernacExtend",
                        "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
                    ]
                },
                {
                    "command": [
                        "induction p as [p IHp|p IHp| ]; intros [q|q| ] H; destr_eq H; apply (IHp q H).",
                        "VernacExtend",
                        "19290edbf5fdef0f95153168be6f6db5ae725c02"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_carry_add",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "intros H; apply succ_inj; now rewrite <- 2 add_carry_spec.",
                        "VernacExtend",
                        "1064bc66d399aee97f6a124c3551c4b27a1b13d1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_reg_r",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "revert p q.",
                        "VernacExtend",
                        "d73bb7430417aef7df8b830be9bb7c0ca93f5ba7"
                    ]
                },
                {
                    "command": [
                        "induction r.",
                        "VernacExtend",
                        "999f2bb03aa1252fae0e3f57952a36d7753745d8"
                    ]
                },
                {
                    "command": [
                        "intros [p|p| ] [q|q| ] H; simpl; destr_eq H; f_equal; auto using add_carry_add; contradict H; rewrite add_carry_spec, <- add_succ_r; auto using add_no_neutral.",
                        "VernacExtend",
                        "93db5c62bccf129b86f15fd7211af3091c11516a"
                    ]
                },
                {
                    "command": [
                        "intros [p|p| ] [q|q| ] H; simpl; destr_eq H; f_equal; auto; contradict H; auto using add_no_neutral.",
                        "VernacExtend",
                        "f0f47e8bc71b1ffcac8c09f55bf3936de0f81e11"
                    ]
                },
                {
                    "command": [
                        "intros p q H.",
                        "VernacExtend",
                        "e410718f3760c866150564a1b5c04ca5f3e6251a"
                    ]
                },
                {
                    "command": [
                        "apply succ_inj.",
                        "VernacExtend",
                        "20bea47dc9639cb7f51951bae01ee9c028f3992f"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- 2 add_1_r.",
                        "VernacExtend",
                        "95a64995dbb0d915e1ea3118b1f6a2b02dcd41f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_reg_l",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "rewrite 2 (add_comm p).",
                        "VernacExtend",
                        "36e2af870394c94912ac542800197ea5615cd031"
                    ]
                },
                {
                    "command": [
                        "now apply add_reg_r.",
                        "VernacExtend",
                        "ca29e8dec46ba9aef8849ebc2b2fdc2c7321bf22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_cancel_r",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply add_reg_r.",
                        "VernacExtend",
                        "0e6f3e83886726d23882ced0b81b9eb6c8d0ff18"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_cancel_l",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply add_reg_l.",
                        "VernacExtend",
                        "d741b039c53829054e66f753474d7d44d031d15d"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_carry_reg_r",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply add_reg_r with (r:=r); now apply add_carry_add.",
                        "VernacExtend",
                        "7a66a52f81a90ccf28fed23c4ba73cafe5e4e5d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_carry_reg_l",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "intros H; apply add_reg_r with (r:=p); rewrite (add_comm r), (add_comm q); now apply add_carry_add.",
                        "VernacExtend",
                        "faf163c194d114327b8270834361b2262fd1a88d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_assoc",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "revert q r.",
                        "VernacExtend",
                        "65c8747858e115a11b033f8bfe1b98b454d12381"
                    ]
                },
                {
                    "command": [
                        "induction p.",
                        "VernacExtend",
                        "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
                    ]
                },
                {
                    "command": [
                        "intros [q|q| ] [r|r| ]; simpl; f_equal; trivial; rewrite ?add_carry_spec, ?add_succ_r, ?add_succ_l, ?add_1_r; f_equal; trivial.",
                        "VernacExtend",
                        "5e3650f914c33ec25d9516ca19cc6e23285f7192"
                    ]
                },
                {
                    "command": [
                        "intros [q|q| ] [r|r| ]; simpl; f_equal; trivial; rewrite ?add_carry_spec, ?add_succ_r, ?add_succ_l, ?add_1_r; f_equal; trivial.",
                        "VernacExtend",
                        "5e3650f914c33ec25d9516ca19cc6e23285f7192"
                    ]
                },
                {
                    "command": [
                        "intros q r; rewrite 2 add_1_l, add_succ_l; auto.",
                        "VernacExtend",
                        "81388b2086fd4a056184361ef3b0cbfac34ffbf9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_xO",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "now destruct p, q.",
                        "VernacExtend",
                        "2d29edbff69df181c4c7dd9ce128aedeaa75ea15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_xI_pred_double",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "change (p~1) with (p~0 + 1).",
                        "VernacExtend",
                        "eaf9a450391b6e06d8bcbfaf5e1364808fe1aff0"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- add_assoc, add_1_l, succ_pred_double.",
                        "VernacExtend",
                        "72bc8a4cc4c6a96c1ca3c72527a6427330178dd3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_xO_pred_double",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "revert q.",
                        "VernacExtend",
                        "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
                    ]
                },
                {
                    "command": [
                        "induction p as [p IHp| p IHp| ]; destruct q; simpl; rewrite ?add_carry_spec, ?pred_double_succ, ?add_xI_pred_double; try reflexivity.",
                        "VernacExtend",
                        "9060198b1f0b994750e3064da572878a47453be4"
                    ]
                },
                {
                    "command": [
                        "rewrite IHp; auto.",
                        "VernacExtend",
                        "8174fca7b085b237aac922c5a3aa5e8a6be3e646"
                    ]
                },
                {
                    "command": [
                        "rewrite <- succ_pred_double, <- add_1_l.",
                        "VernacExtend",
                        "9f98e155a4130d1aa0a83d3eb3b174b127390cfa"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_diag",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "induction p as [p IHp| p IHp| ]; simpl; now rewrite ?add_carry_spec, ?IHp.",
                        "VernacExtend",
                        "8b46e171200b195af5754af5fc08839ac19343d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "peano_rect_succ",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "revert P a f.",
                        "VernacExtend",
                        "6efc210936a47e5f93a607056a1c4aab98285e5a"
                    ]
                },
                {
                    "command": [
                        "induction p; trivial.",
                        "VernacExtend",
                        "009ca74c5cc1ac51f2921f2598a1ee4a240a802c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHp.",
                        "VernacExtend",
                        "731b248d3767f25dc6e90c81442bd4c6245831c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "peano_rect_base",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "peano_case",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "intros; apply peano_ind; auto.",
                        "VernacExtend",
                        "99793320c8f784994b5943936b5ba8249009c141"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_dep_eq_positive",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "apply eq_dep_eq_dec.",
                        "VernacExtend",
                        "c775b8a97a911d494c174df964e9addc07eaef85"
                    ]
                },
                {
                    "command": [
                        "decide equality.",
                        "VernacExtend",
                        "10aba07d521545accbb51a4c2e0695a9ddce3199"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PeanoViewUnique",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction q as [ | p q IHq ].",
                        "VernacExtend",
                        "6781e4e648b360ee7b2fb87e37df28d7b58facd5"
                    ]
                },
                {
                    "command": [
                        "apply eq_dep_eq_positive.",
                        "VernacExtend",
                        "81f1139862251dba699cdc46f6f8a11bc6a4c0b5"
                    ]
                },
                {
                    "command": [
                        "cut (1=1).",
                        "VernacExtend",
                        "5715bf6469455e2291e4fb78cfd1b42572bbf6fa"
                    ]
                },
                {
                    "command": [
                        "pattern 1 at 1 2 5, q'.",
                        "VernacExtend",
                        "970bd619765238f25b30d69ad941f836270635da"
                    ]
                },
                {
                    "command": [
                        "destruct q'.",
                        "VernacExtend",
                        "9032c2353cfb2eef0422a325355d21f250288227"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "destruct p; intros; discriminate.",
                        "VernacExtend",
                        "0fd2dd5a96a617a77ec25d06672ba014ab119bcd"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply eq_dep_eq_positive.",
                        "VernacExtend",
                        "81f1139862251dba699cdc46f6f8a11bc6a4c0b5"
                    ]
                },
                {
                    "command": [
                        "cut (succ p=succ p).",
                        "VernacExtend",
                        "cc145d31f9e65e3f3baaedb4abe802498e3bbe22"
                    ]
                },
                {
                    "command": [
                        "pattern (succ p) at 1 2 5, q'.",
                        "VernacExtend",
                        "4fc59be344fb10392092e6baac7c83c04776d708"
                    ]
                },
                {
                    "command": [
                        "destruct q'.",
                        "VernacExtend",
                        "9032c2353cfb2eef0422a325355d21f250288227"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "destruct p; discriminate.",
                        "VernacExtend",
                        "2c3044e334354cfea49f3e05172475eb1f2d566f"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply succ_inj in H.",
                        "VernacExtend",
                        "96387f39028962a1b17e39f3a600fa80f641e470"
                    ]
                },
                {
                    "command": [
                        "generalize q'.",
                        "VernacExtend",
                        "9b95c62675e324ec3748e32dde60ab4a9e467abb"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHq q'0).",
                        "VernacExtend",
                        "81ba25e07d18c4f1f2d8daa6cc6e90602758b01b"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "peano_equiv",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "revert P a f.",
                        "VernacExtend",
                        "6efc210936a47e5f93a607056a1c4aab98285e5a"
                    ]
                },
                {
                    "command": [
                        "induction p using peano_rect.",
                        "VernacExtend",
                        "c1e9393d9ffc457ced8c0f1366f251ca756b4087"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros; simpl.",
                        "VernacExtend",
                        "3da5a0bf1c6e40c602010ee4543b1d990c82e623"
                    ]
                },
                {
                    "command": [
                        "rewrite peano_rect_succ.",
                        "VernacExtend",
                        "ede078d490a31cb6feaa0bdaa509c9dfc0639252"
                    ]
                },
                {
                    "command": [
                        "rewrite (PeanoViewUnique _ (peanoView (succ p)) (PeanoSucc _ (peanoView p))).",
                        "VernacExtend",
                        "eb50e58144b5fdf0e73d3089291ddcd88a6d0a79"
                    ]
                },
                {
                    "command": [
                        "simpl; now f_equal.",
                        "VernacExtend",
                        "771ebb1ffeef4bd7afd3d52921cd096ac81e04cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_1_l",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_1_r",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "induction p; simpl; now f_equal.",
                        "VernacExtend",
                        "d2f00fea8a2f15feb5cff27ab27d24a9fd59b881"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_xO_r",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "induction p; simpl; f_equal; f_equal; trivial.",
                        "VernacExtend",
                        "06aeef9b6f48970bf86d04984ad17f70b861986b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_xI_r",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "induction p as [p IHp|p IHp| ]; simpl; f_equal; trivial.",
                        "VernacExtend",
                        "7232cb8f01b92462c9029513c6a8409f4cd8636a"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHp, 2 add_assoc, (add_comm p).",
                        "VernacExtend",
                        "2d4beed12b23bd7a660aecb84197386c3111ada9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_comm",
            "line_nb": 229,
            "steps": [
                {
                    "command": [
                        "induction q as [q IHq|q IHq| ]; simpl; rewrite <- ? IHq; auto using mul_xI_r, mul_xO_r, mul_1_r.",
                        "VernacExtend",
                        "47aeb1f9f34f6f0e72c63f437246a9c374a15e40"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_add_distr_l",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "induction p as [p IHp|p IHp| ]; simpl.",
                        "VernacExtend",
                        "99295848a30b01ba78ee513fad460768aada7e46"
                    ]
                },
                {
                    "command": [
                        "rewrite IHp.",
                        "VernacExtend",
                        "fb06481bd21fede7b3fab82db01424a7b32d3fc0"
                    ]
                },
                {
                    "command": [
                        "set (m:=(p*q)~0).",
                        "VernacExtend",
                        "d5335ab81c136bb2199beaded4a77cc180c8ecff"
                    ]
                },
                {
                    "command": [
                        "set (n:=(p*r)~0).",
                        "VernacExtend",
                        "1ca2753ad7c63a2e8bb13dfbbf50dc9cec09cc75"
                    ]
                },
                {
                    "command": [
                        "change ((p*q+p*r)~0) with (m+n).",
                        "VernacExtend",
                        "3ae01e51ee6c1fc39a39ee2341997aabff5f1ded"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 add_assoc; f_equal.",
                        "VernacExtend",
                        "9264b72d0e55f6c670d56c809f38d3f6fcc386e3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- 2 add_assoc; f_equal.",
                        "VernacExtend",
                        "c6ec9d94a5601a3875d03f8585237c3a3e4191e9"
                    ]
                },
                {
                    "command": [
                        "apply add_comm.",
                        "VernacExtend",
                        "432c5d4cf69fbe3dde2979438ab90d88539f0993"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_add_distr_r",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "rewrite 3 (mul_comm _ r); apply mul_add_distr_l.",
                        "VernacExtend",
                        "0362502e26f0e46c7792c900c15afeab36265efb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_assoc",
            "line_nb": 247,
            "steps": [
                {
                    "command": [
                        "induction p as [p IHp| p IHp | ]; simpl; rewrite ?IHp; trivial.",
                        "VernacExtend",
                        "cf2cfd91e5895f68593ee883425bde79a64c2de8"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_add_distr_r.",
                        "VernacExtend",
                        "65b5fbd8578c71a3425a855ef065e377a830769c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_succ_l",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "induction p as [p IHp | p IHp | ]; simpl; trivial.",
                        "VernacExtend",
                        "19410f929860a42aed0065fd698ba65ad724e1c6"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHp, add_assoc, add_diag, <-add_xO.",
                        "VernacExtend",
                        "619f06c42ee83b2ee5f2781134dbfb5584c1b702"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply add_diag.",
                        "VernacExtend",
                        "ff81e99bd53771297e18be3fe7af6a61e198f469"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_succ_r",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "rewrite mul_comm, mul_succ_l.",
                        "VernacExtend",
                        "1fef2df4fb8400b2f0b02c7826f1891ed9b71eec"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply mul_comm.",
                        "VernacExtend",
                        "b1bd9c3b62342e0e6654e1b4a5d2cda9775cb738"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_xI_mul_xO_discr",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "induction r; try discriminate.",
                        "VernacExtend",
                        "3de55c75d5b9258f9c95d63992dd67d8ce5b27ab"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 mul_xO_r; intro H; destr_eq H; auto.",
                        "VernacExtend",
                        "70fc060ae336f550171d64e73e91f6e6e4504a5e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_xO_discr",
            "line_nb": 265,
            "steps": [
                {
                    "command": [
                        "induction q; try discriminate.",
                        "VernacExtend",
                        "2f650d00fb0332f7bfdd46f852957eaf7e520f5d"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_xO_r; injection; auto.",
                        "VernacExtend",
                        "0f21acb16d6f3c7b30fe9106a8ce7c6fa92796b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_reg_r",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "revert q r.",
                        "VernacExtend",
                        "65c8747858e115a11b033f8bfe1b98b454d12381"
                    ]
                },
                {
                    "command": [
                        "induction p as [p IHp| p IHp| ]; intros [q|q| ] r H; reflexivity || apply f_equal || exfalso.",
                        "VernacExtend",
                        "5204054077c818492d696eef655ef09e56f6cdb0"
                    ]
                },
                {
                    "command": [
                        "apply IHp with (r~0).",
                        "VernacExtend",
                        "7cc5eedf64f1b77d9a17786a14649b02f54bf6d5"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 mul_xO_r.",
                        "VernacExtend",
                        "024375759c739552b48bbbce8ed9e32d61b029e5"
                    ]
                },
                {
                    "command": [
                        "apply add_reg_l with (1:=H).",
                        "VernacExtend",
                        "d3d5e7860ab62deeedfe837ad3bb9c483bfb84da"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply mul_xI_mul_xO_discr.",
                        "VernacExtend",
                        "6bddb8afe7a9da4cf43d651efcc060be5058ed2b"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm.",
                        "VernacExtend",
                        "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
                    ]
                },
                {
                    "command": [
                        "apply add_no_neutral.",
                        "VernacExtend",
                        "99c3bed1c34cc259208b3c6e7a66e402b0f7a838"
                    ]
                },
                {
                    "command": [
                        "symmetry in H.",
                        "VernacExtend",
                        "5ef7cf40d6f1a8a9f9fae5220b667eef42ea5534"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply mul_xI_mul_xO_discr.",
                        "VernacExtend",
                        "6bddb8afe7a9da4cf43d651efcc060be5058ed2b"
                    ]
                },
                {
                    "command": [
                        "apply IHp with (r~0).",
                        "VernacExtend",
                        "7cc5eedf64f1b77d9a17786a14649b02f54bf6d5"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2 mul_xO_r.",
                        "VernacExtend",
                        "6b2593eec080240d8d3e00082006b8813d925754"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply mul_xO_discr.",
                        "VernacExtend",
                        "6cc1eb56a5218d8bb270b60eaa79ef7546d0b28d"
                    ]
                },
                {
                    "command": [
                        "symmetry in H.",
                        "VernacExtend",
                        "5ef7cf40d6f1a8a9f9fae5220b667eef42ea5534"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm.",
                        "VernacExtend",
                        "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
                    ]
                },
                {
                    "command": [
                        "apply add_no_neutral.",
                        "VernacExtend",
                        "99c3bed1c34cc259208b3c6e7a66e402b0f7a838"
                    ]
                },
                {
                    "command": [
                        "symmetry in H.",
                        "VernacExtend",
                        "5ef7cf40d6f1a8a9f9fae5220b667eef42ea5534"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply mul_xO_discr.",
                        "VernacExtend",
                        "6cc1eb56a5218d8bb270b60eaa79ef7546d0b28d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_reg_l",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "rewrite 2 (mul_comm r).",
                        "VernacExtend",
                        "f38b77803ef0b4dc17d02496c705e281fe90043e"
                    ]
                },
                {
                    "command": [
                        "apply mul_reg_r.",
                        "VernacExtend",
                        "19b14efec2fb825b6ac7a0a6509b3fa36082ea25"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_cancel_r",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply mul_reg_r.",
                        "VernacExtend",
                        "19b14efec2fb825b6ac7a0a6509b3fa36082ea25"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_cancel_l",
            "line_nb": 308,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply mul_reg_l.",
                        "VernacExtend",
                        "051a5dbe48872ea27ec3fb258211e050edac17f0"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_eq_1_l",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "now destruct p, q.",
                        "VernacExtend",
                        "2d29edbff69df181c4c7dd9ce128aedeaa75ea15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_eq_1_r",
            "line_nb": 316,
            "steps": [
                {
                    "command": [
                        "now destruct p, q.",
                        "VernacExtend",
                        "2d29edbff69df181c4c7dd9ce128aedeaa75ea15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_xO",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_comm.",
                        "VernacExtend",
                        "e381ca9335c310c57051601bf6f800b499d27dfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_xI",
            "line_nb": 324,
            "steps": [
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_comm.",
                        "VernacExtend",
                        "5f0fb0765ec04101790f2b78062bf5490bbe5e03"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite add_assoc, add_diag.",
                        "VernacExtend",
                        "82ab3c259b3d1effbbaff1250ba91c31e36242a2"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_comm.",
                        "VernacExtend",
                        "49059393716b66357ecc6aee8e8a4481895a2fa1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter_swap_gen",
            "line_nb": 333,
            "steps": [
                {
                    "command": [
                        "induction p; simpl; intros; now rewrite ?H, ?IHp.",
                        "VernacExtend",
                        "4ad77721978d57c8cf23985cf9d90b4157a9ad9b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter_swap",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "now apply iter_swap_gen.",
                        "VernacExtend",
                        "e3a0820aa705724b8de772404275e005e4519700"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter_succ",
            "line_nb": 341,
            "steps": [
                {
                    "command": [
                        "induction p as [p IHp|p IHp|]; intros; simpl; trivial.",
                        "VernacExtend",
                        "5b10ba8b5ed67cdac6e784350994c0945d0f2d49"
                    ]
                },
                {
                    "command": [
                        "now rewrite !IHp, iter_swap.",
                        "VernacExtend",
                        "23b5d600882d67523b8ca1e2f829ce8f8376e349"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter_add",
            "line_nb": 345,
            "steps": [
                {
                    "command": [
                        "induction p using peano_ind; intros.",
                        "VernacExtend",
                        "2921c21061d9d84ca95e4607c4d25f1b4fb09148"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_1_l, iter_succ.",
                        "VernacExtend",
                        "9e36ff920be4aae8a32f960912889315be3ec068"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_succ_l, !iter_succ, IHp.",
                        "VernacExtend",
                        "852efd4ec134eead33d4d72bf4ac70863a0afc87"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter_invariant",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "induction p as [p IHp|p IHp|]; simpl; trivial.",
                        "VernacExtend",
                        "19410f929860a42aed0065fd698ba65ad724e1c6"
                    ]
                },
                {
                    "command": [
                        "intros A f Inv H x H0.",
                        "VernacExtend",
                        "b472c230c4f016bfe82375abce4c4ce7835c7b6d"
                    ]
                },
                {
                    "command": [
                        "apply H, IHp, IHp; trivial.",
                        "VernacExtend",
                        "8951341417cd4ce61c7b9de754f713120ba9bab1"
                    ]
                },
                {
                    "command": [
                        "intros A f Inv H x H0.",
                        "VernacExtend",
                        "b472c230c4f016bfe82375abce4c4ce7835c7b6d"
                    ]
                },
                {
                    "command": [
                        "apply IHp, IHp; trivial.",
                        "VernacExtend",
                        "6a395cbc66d2b845cb8b1c21d687279f377f13b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_1_r",
            "line_nb": 357,
            "steps": [
                {
                    "command": [
                        "unfold pow.",
                        "VernacExtend",
                        "f7bb7bd17f7209a79ed08610d1478093e25f454f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_comm.",
                        "VernacExtend",
                        "e381ca9335c310c57051601bf6f800b499d27dfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_succ_r",
            "line_nb": 362,
            "steps": [
                {
                    "command": [
                        "unfold pow.",
                        "VernacExtend",
                        "f7bb7bd17f7209a79ed08610d1478093e25f454f"
                    ]
                },
                {
                    "command": [
                        "now rewrite iter_succ.",
                        "VernacExtend",
                        "82361dbff727fda623062dc0b340da70408ed0f2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_spec",
            "line_nb": 366,
            "steps": [
                {
                    "command": [
                        "induction p.",
                        "VernacExtend",
                        "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite square_xI.",
                        "VernacExtend",
                        "a53b455ecce5dd19b65635df2bd891ab60b23acb"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHp.",
                        "VernacExtend",
                        "731b248d3767f25dc6e90c81442bd4c6245831c9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite square_xO.",
                        "VernacExtend",
                        "aa44a7fc7446d893f9ebde3402be4684534c935e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHp.",
                        "VernacExtend",
                        "731b248d3767f25dc6e90c81442bd4c6245831c9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_mask_succ_r",
            "line_nb": 379,
            "steps": [
                {
                    "command": [
                        "revert q.",
                        "VernacExtend",
                        "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
                    ]
                },
                {
                    "command": [
                        "induction p; destruct q; simpl; f_equal; trivial; now destruct p.",
                        "VernacExtend",
                        "fb86e3ee40c921650d0b253e9db6278ebf03ea33"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_mask_carry_spec",
            "line_nb": 383,
            "steps": [
                {
                    "command": [
                        "revert q.",
                        "VernacExtend",
                        "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
                    ]
                },
                {
                    "command": [
                        "induction p as [p IHp|p IHp| ]; destruct q; simpl; try reflexivity; rewrite ?IHp; destruct (sub_mask p q) as [|[r|r| ]|] || destruct p; auto.",
                        "VernacExtend",
                        "18de13192643c729312ed7c864bc8a939559900b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_mask_spec",
            "line_nb": 388,
            "steps": [
                {
                    "command": [
                        "revert q.",
                        "VernacExtend",
                        "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
                    ]
                },
                {
                    "command": [
                        "induction p; destruct q; simpl; try constructor; trivial.",
                        "VernacExtend",
                        "b41bd756d6524d56197346446f6c72303a96459e"
                    ]
                },
                {
                    "command": [
                        "destruct (IHp q); subst; try now constructor.",
                        "VernacExtend",
                        "aa8815da02f0b32b0f4c5fa3bdb6978b1581e2e6"
                    ]
                },
                {
                    "command": [
                        "now apply SubIsNeg with r~0.",
                        "VernacExtend",
                        "b48b285d340955500b9ef4d2c56f478c7ff2e9ae"
                    ]
                },
                {
                    "command": [
                        "destruct (IHp q); subst; try now constructor.",
                        "VernacExtend",
                        "aa8815da02f0b32b0f4c5fa3bdb6978b1581e2e6"
                    ]
                },
                {
                    "command": [
                        "apply SubIsNeg with (pred_double r).",
                        "VernacExtend",
                        "7f9dabb069796dac71d1829d3ec97cbc52305a59"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply add_xI_pred_double.",
                        "VernacExtend",
                        "bc592c3aabb6d56b3d77be86d2f87ead5b9c97f9"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_mask_carry_spec.",
                        "VernacExtend",
                        "80066acf0482a4ed9be80071c470a93479b1ecdf"
                    ]
                },
                {
                    "command": [
                        "destruct (IHp q); subst; try constructor.",
                        "VernacExtend",
                        "0e7e1af90d1f1de0b6b4b1ebbf0cae957e2475a7"
                    ]
                },
                {
                    "command": [
                        "now apply SubIsNeg with 1.",
                        "VernacExtend",
                        "6cbe7fb6521dc51166f808a0b2cce449a192c7b1"
                    ]
                },
                {
                    "command": [
                        "destruct r; simpl; try constructor; simpl.",
                        "VernacExtend",
                        "59783671db3ab351bb1ea20ba8f284394652e586"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_carry_spec, <- add_succ_r.",
                        "VernacExtend",
                        "d674a44f09e66d95d2fc8b56eb1e78aca613380f"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_carry_spec, <- add_succ_r, succ_pred_double.",
                        "VernacExtend",
                        "ede6f2a5ff53bbeda602e8709d7439ac459aa159"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_1_r.",
                        "VernacExtend",
                        "697f7e45a7ce5ba1606a44d55e8d4537a7073464"
                    ]
                },
                {
                    "command": [
                        "now apply SubIsNeg with r~1.",
                        "VernacExtend",
                        "e3b9ee9c1ab87abc9c9054e0b4fc67ac415f4e58"
                    ]
                },
                {
                    "command": [
                        "destruct (IHp q); subst; try now constructor.",
                        "VernacExtend",
                        "aa8815da02f0b32b0f4c5fa3bdb6978b1581e2e6"
                    ]
                },
                {
                    "command": [
                        "now apply SubIsNeg with r~0.",
                        "VernacExtend",
                        "b48b285d340955500b9ef4d2c56f478c7ff2e9ae"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_1_l, succ_pred_double.",
                        "VernacExtend",
                        "18922c7a616f4d18f7a6677e80f7fe2fecc0441b"
                    ]
                },
                {
                    "command": [
                        "now apply SubIsNeg with q~0.",
                        "VernacExtend",
                        "aa262512cb6a5a68ce76a63663a1ade6533eece4"
                    ]
                },
                {
                    "command": [
                        "apply SubIsNeg with (pred_double q).",
                        "VernacExtend",
                        "79203b535582f1b93727e56061ac1e959e02eacf"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_1_l, succ_pred_double.",
                        "VernacExtend",
                        "18922c7a616f4d18f7a6677e80f7fe2fecc0441b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_mask_nul_iff",
            "line_nb": 412,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "now case sub_mask_spec.",
                        "VernacExtend",
                        "b347fd8072264e7d3c8aa771e85337a0ad19c02b"
                    ]
                },
                {
                    "command": [
                        "intros <-.",
                        "VernacExtend",
                        "f92abb181e804805d99c6631ed9d612184f20066"
                    ]
                },
                {
                    "command": [
                        "induction p; simpl; now rewrite ?IHp.",
                        "VernacExtend",
                        "a39646c7a56e0ca83299b93f59b14cc03dafbe8e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_mask_diag",
            "line_nb": 418,
            "steps": [
                {
                    "command": [
                        "now apply sub_mask_nul_iff.",
                        "VernacExtend",
                        "d2292baf9b6a1e959f7b1e45c9eea6cee2f211b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_mask_add",
            "line_nb": 421,
            "steps": [
                {
                    "command": [
                        "case sub_mask_spec; congruence.",
                        "VernacExtend",
                        "03716a95fedfa82191b11646f4f6e4cb6c533030"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_mask_add_diag_l",
            "line_nb": 424,
            "steps": [
                {
                    "command": [
                        "case sub_mask_spec.",
                        "VernacExtend",
                        "7388e16de5eb0074621c9090d3243177f5aacdd0"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm in H.",
                        "VernacExtend",
                        "e39fa83379dc38b5fef52a3fddc6ce749f51fc89"
                    ]
                },
                {
                    "command": [
                        "elim (add_no_neutral _ _ H).",
                        "VernacExtend",
                        "868e3416fab45a32e221be595621ce4f979e9fdf"
                    ]
                },
                {
                    "command": [
                        "intros r H.",
                        "VernacExtend",
                        "d7ad88fe18659a9c0fbe8f12609d04bca3d72a11"
                    ]
                },
                {
                    "command": [
                        "apply add_cancel_l in H.",
                        "VernacExtend",
                        "eb1098e1eec5ae86c1b44cec66fa58389534c7cd"
                    ]
                },
                {
                    "command": [
                        "now f_equal.",
                        "VernacExtend",
                        "523c8bb1ba392fd7c541cd8a77c609b310d41f22"
                    ]
                },
                {
                    "command": [
                        "intros r H.",
                        "VernacExtend",
                        "d7ad88fe18659a9c0fbe8f12609d04bca3d72a11"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_assoc, add_comm in H.",
                        "VernacExtend",
                        "5756c5e4a6c4756c304ff0929cf3a87581202f84"
                    ]
                },
                {
                    "command": [
                        "elim (add_no_neutral _ _ H).",
                        "VernacExtend",
                        "868e3416fab45a32e221be595621ce4f979e9fdf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_mask_pos_iff",
            "line_nb": 436,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply sub_mask_add.",
                        "VernacExtend",
                        "587789c499462060b2282e9b8151e6e955800b02"
                    ]
                },
                {
                    "command": [
                        "intros <-; apply sub_mask_add_diag_l.",
                        "VernacExtend",
                        "a6702da4188160a7069a7ad1fec0b4e03f0062bf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_mask_add_diag_r",
            "line_nb": 441,
            "steps": [
                {
                    "command": [
                        "case sub_mask_spec; trivial.",
                        "VernacExtend",
                        "c95dcf648e9642288ed62d4e6218a68dad828977"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "symmetry in H; rewrite add_comm in H.",
                        "VernacExtend",
                        "6433303dfed367b270ede56edb54366db74a6536"
                    ]
                },
                {
                    "command": [
                        "elim (add_no_neutral _ _ H).",
                        "VernacExtend",
                        "868e3416fab45a32e221be595621ce4f979e9fdf"
                    ]
                },
                {
                    "command": [
                        "intros r H.",
                        "VernacExtend",
                        "d7ad88fe18659a9c0fbe8f12609d04bca3d72a11"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_assoc, add_comm in H.",
                        "VernacExtend",
                        "5756c5e4a6c4756c304ff0929cf3a87581202f84"
                    ]
                },
                {
                    "command": [
                        "elim (add_no_neutral _ _ H).",
                        "VernacExtend",
                        "868e3416fab45a32e221be595621ce4f979e9fdf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_mask_neg_iff",
            "line_nb": 450,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "case sub_mask_spec; try discriminate.",
                        "VernacExtend",
                        "ac4f22db2294ba1466e8d4a009c3989606b2b211"
                    ]
                },
                {
                    "command": [
                        "intros r Hr _; now exists r.",
                        "VernacExtend",
                        "ae01a298f8d0d3d436bd71fcfd64c855c718e1be"
                    ]
                },
                {
                    "command": [
                        "intros (r,<-).",
                        "VernacExtend",
                        "3f5fcd9722b77eaa31b11a7978ee4a619a9f8b6f"
                    ]
                },
                {
                    "command": [
                        "apply sub_mask_add_diag_r.",
                        "VernacExtend",
                        "0f9f13173edc3b86c003912610b778eef9f0f3a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqb_eq",
            "line_nb": 457,
            "steps": [
                {
                    "command": [
                        "revert q.",
                        "VernacExtend",
                        "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
                    ]
                },
                {
                    "command": [
                        "induction p; destruct q; simpl; rewrite ?IHp; split; congruence.",
                        "VernacExtend",
                        "2f5bf94fe4a5bf802eb3a1edc9486d110dd50974"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltb_lt",
            "line_nb": 461,
            "steps": [
                {
                    "command": [
                        "unfold ltb, lt.",
                        "VernacExtend",
                        "5c43f5b40fe682aacd161431c57dc1d7e63820e5"
                    ]
                },
                {
                    "command": [
                        "destruct compare; easy'.",
                        "VernacExtend",
                        "9c58ca66031ca52e7ded2a67e5812d35fe76b30c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leb_le",
            "line_nb": 465,
            "steps": [
                {
                    "command": [
                        "unfold leb, le.",
                        "VernacExtend",
                        "691c599dca3e1dc8df9a04f30af6f52e19a455ff"
                    ]
                },
                {
                    "command": [
                        "destruct compare; easy'.",
                        "VernacExtend",
                        "9c58ca66031ca52e7ded2a67e5812d35fe76b30c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_cont_spec",
            "line_nb": 471,
            "steps": [
                {
                    "command": [
                        "unfold compare.",
                        "VernacExtend",
                        "b5d4704dfbc3e5e9441ee8f2b7957e022b2209cb"
                    ]
                },
                {
                    "command": [
                        "revert q c.",
                        "VernacExtend",
                        "b4e0f152623b0660330016a93d21838c60475c9f"
                    ]
                },
                {
                    "command": [
                        "induction p; destruct q; simpl; trivial.",
                        "VernacExtend",
                        "ed2ae1107c97dba2d16283e81a2b55068be8473f"
                    ]
                },
                {
                    "command": [
                        "intros c.",
                        "VernacExtend",
                        "b22524904714a3291216c142472c7a61ff52b803"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 IHp.",
                        "VernacExtend",
                        "cb41ce3b7f3f47e0711e939027667ef7f75727ad"
                    ]
                },
                {
                    "command": [
                        "now destruct (compare_cont Eq p q).",
                        "VernacExtend",
                        "6f1ac91a633b1de3a0cb2b16a186c54a63f52684"
                    ]
                },
                {
                    "command": [
                        "intros c.",
                        "VernacExtend",
                        "b22524904714a3291216c142472c7a61ff52b803"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 IHp.",
                        "VernacExtend",
                        "cb41ce3b7f3f47e0711e939027667ef7f75727ad"
                    ]
                },
                {
                    "command": [
                        "now destruct (compare_cont Eq p q).",
                        "VernacExtend",
                        "6f1ac91a633b1de3a0cb2b16a186c54a63f52684"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_cont_Eq",
            "line_nb": 482,
            "steps": [
                {
                    "command": [
                        "rewrite compare_cont_spec.",
                        "VernacExtend",
                        "2628d7f9cc29fc6a56baca9a42d33f28f982e436"
                    ]
                },
                {
                    "command": [
                        "now destruct (p ?= q).",
                        "VernacExtend",
                        "d8385a697864ad792655234027daa15367763757"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_cont_Lt_Gt",
            "line_nb": 486,
            "steps": [
                {
                    "command": [
                        "rewrite compare_cont_spec.",
                        "VernacExtend",
                        "2628d7f9cc29fc6a56baca9a42d33f28f982e436"
                    ]
                },
                {
                    "command": [
                        "unfold gt.",
                        "VernacExtend",
                        "604f761600c502339ea38c0b01a472f984d4cfa6"
                    ]
                },
                {
                    "command": [
                        "destruct (p ?= q); now split.",
                        "VernacExtend",
                        "291f9ad71df039d7fa8902ac0bb18ce0b5e4464e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_cont_Lt_Lt",
            "line_nb": 491,
            "steps": [
                {
                    "command": [
                        "rewrite compare_cont_spec.",
                        "VernacExtend",
                        "2628d7f9cc29fc6a56baca9a42d33f28f982e436"
                    ]
                },
                {
                    "command": [
                        "unfold le.",
                        "VernacExtend",
                        "4dbc0b49762d44208e0577d0877ddec914c49a1a"
                    ]
                },
                {
                    "command": [
                        "destruct (p ?= q); easy'.",
                        "VernacExtend",
                        "c74f7074977c6ec40ea910a611d475a26d502ade"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_cont_Gt_Lt",
            "line_nb": 496,
            "steps": [
                {
                    "command": [
                        "rewrite compare_cont_spec.",
                        "VernacExtend",
                        "2628d7f9cc29fc6a56baca9a42d33f28f982e436"
                    ]
                },
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "destruct (p ?= q); now split.",
                        "VernacExtend",
                        "291f9ad71df039d7fa8902ac0bb18ce0b5e4464e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_cont_Gt_Gt",
            "line_nb": 501,
            "steps": [
                {
                    "command": [
                        "rewrite compare_cont_spec.",
                        "VernacExtend",
                        "2628d7f9cc29fc6a56baca9a42d33f28f982e436"
                    ]
                },
                {
                    "command": [
                        "unfold ge.",
                        "VernacExtend",
                        "49aee4aaf6253f31669ea83def7814227efbe0f6"
                    ]
                },
                {
                    "command": [
                        "destruct (p ?= q); easy'.",
                        "VernacExtend",
                        "c74f7074977c6ec40ea910a611d475a26d502ade"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_cont_Lt_not_Lt",
            "line_nb": 506,
            "steps": [
                {
                    "command": [
                        "rewrite compare_cont_Lt_Lt.",
                        "VernacExtend",
                        "ba3d2272202ff7c08a7640ba2a8f15c13e1ce5a3"
                    ]
                },
                {
                    "command": [
                        "unfold gt, le, compare.",
                        "VernacExtend",
                        "2aa1655f3d6c79d79bd610bb3e19ff0900d33ea8"
                    ]
                },
                {
                    "command": [
                        "now destruct compare_cont; split; try apply comparison_eq_stable.",
                        "VernacExtend",
                        "ae60d2e3b2b61d31f2a8d6c2a8fc2f53a4fdd3ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_cont_Lt_not_Gt",
            "line_nb": 511,
            "steps": [
                {
                    "command": [
                        "apply not_iff_compat, compare_cont_Lt_Gt.",
                        "VernacExtend",
                        "3c1c996891d0f3a1b3849530bfb41b39976d2713"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_cont_Gt_not_Lt",
            "line_nb": 514,
            "steps": [
                {
                    "command": [
                        "apply not_iff_compat, compare_cont_Gt_Lt.",
                        "VernacExtend",
                        "a6fa6d2b3acc6fc9c7b14cb228be01654ed26de1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_cont_Gt_not_Gt",
            "line_nb": 517,
            "steps": [
                {
                    "command": [
                        "rewrite compare_cont_Gt_Gt.",
                        "VernacExtend",
                        "761559b8d27055642f7e12836f73bfe80e7b0bee"
                    ]
                },
                {
                    "command": [
                        "unfold ge, lt, compare.",
                        "VernacExtend",
                        "38afe10bf5a8c3618bdca91997a6778f5d87366c"
                    ]
                },
                {
                    "command": [
                        "now destruct compare_cont; split; try apply comparison_eq_stable.",
                        "VernacExtend",
                        "ae60d2e3b2b61d31f2a8d6c2a8fc2f53a4fdd3ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_xO_xO",
            "line_nb": 522,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_xI_xI",
            "line_nb": 525,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_xI_xO",
            "line_nb": 528,
            "steps": [
                {
                    "command": [
                        "exact (compare_cont_spec p q Gt).",
                        "VernacExtend",
                        "13467756042609d0d2a18ccc472d0dfd1005424e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_xO_xI",
            "line_nb": 531,
            "steps": [
                {
                    "command": [
                        "exact (compare_cont_spec p q Lt).",
                        "VernacExtend",
                        "a412701d6c5730c8ec19403f136a205580ebd2e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_sub_mask",
            "line_nb": 538,
            "steps": [
                {
                    "command": [
                        "revert q.",
                        "VernacExtend",
                        "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
                    ]
                },
                {
                    "command": [
                        "induction p as [p IHp| p IHp| ]; intros [q|q| ]; simpl; trivial; specialize (IHp q); rewrite ?sub_mask_carry_spec; destruct (sub_mask p q) as [|r|]; simpl in *; try clear r; try destruct r; simpl; trivial; simpl_compare; now rewrite IHp.",
                        "VernacExtend",
                        "c31999c22c1f304b45922da858dcf4b24c30d6b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_iff_add",
            "line_nb": 542,
            "steps": [
                {
                    "command": [
                        "unfold \"<\".",
                        "VernacExtend",
                        "5ca6d75f8034d41b65c8455f1980916b2bd0e6fc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sub_mask_neg_iff, compare_sub_mask.",
                        "VernacExtend",
                        "5bab274f15aed7858e22f2ed6cd482f094f005a5"
                    ]
                },
                {
                    "command": [
                        "destruct sub_mask; now split.",
                        "VernacExtend",
                        "7f361b9af0b0046c3b3c47199fa65469c4ae9201"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt_iff_add",
            "line_nb": 547,
            "steps": [
                {
                    "command": [
                        "unfold \">\".",
                        "VernacExtend",
                        "b2e0f1bc6585653fd1df8e002b95d04ea2720ffb"
                    ]
                },
                {
                    "command": [
                        "rewrite compare_sub_mask.",
                        "VernacExtend",
                        "46a775fe7004fc1055e41c647e00c9d90e6c27b8"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "case_eq (sub_mask p q); try discriminate; intros r Hr _.",
                        "VernacExtend",
                        "bc5a401daa011b321d2656f18ae11ffa1bc221d9"
                    ]
                },
                {
                    "command": [
                        "exists r.",
                        "VernacExtend",
                        "6ca63eb3bc93583233e98ef7c15aab920cd0ed23"
                    ]
                },
                {
                    "command": [
                        "now apply sub_mask_pos_iff.",
                        "VernacExtend",
                        "8d717183cd4b2d904ac24c85c1e8a92aa9dc6ceb"
                    ]
                },
                {
                    "command": [
                        "intros (r,Hr).",
                        "VernacExtend",
                        "ba92b68144cf2c7f6eb625a71f345531fa3dfb63"
                    ]
                },
                {
                    "command": [
                        "apply sub_mask_pos_iff in Hr.",
                        "VernacExtend",
                        "8346d1af22efac7dacb2832298ba123a07a66707"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hr.",
                        "VernacExtend",
                        "e54328ba9133a957637a9d95f50b51833d047168"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_cont_refl",
            "line_nb": 558,
            "steps": [
                {
                    "command": [
                        "now induction p.",
                        "VernacExtend",
                        "a249f3698ba69f1454bd4616470af1152b100b42"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_cont_antisym",
            "line_nb": 561,
            "steps": [
                {
                    "command": [
                        "revert q c.",
                        "VernacExtend",
                        "b4e0f152623b0660330016a93d21838c60475c9f"
                    ]
                },
                {
                    "command": [
                        "induction p as [p IHp|p IHp| ]; intros [q|q| ] c; simpl; trivial; apply IHp.",
                        "VernacExtend",
                        "38fa7aae7cf7460d4cad440a6fe0c8f063545b94"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_eq_iff",
            "line_nb": 565,
            "steps": [
                {
                    "command": [
                        "rewrite compare_sub_mask, <- sub_mask_nul_iff.",
                        "VernacExtend",
                        "93332db2204abe6d572702d22943bd43020c8106"
                    ]
                },
                {
                    "command": [
                        "destruct sub_mask; now split.",
                        "VernacExtend",
                        "7f361b9af0b0046c3b3c47199fa65469c4ae9201"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_antisym",
            "line_nb": 569,
            "steps": [
                {
                    "command": [
                        "unfold compare.",
                        "VernacExtend",
                        "b5d4704dfbc3e5e9441ee8f2b7957e022b2209cb"
                    ]
                },
                {
                    "command": [
                        "now rewrite compare_cont_antisym.",
                        "VernacExtend",
                        "ed960c2beb0d4d5ba935a3eedbc7a4bd70f03ba7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_lt_iff",
            "line_nb": 573,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_le_iff",
            "line_nb": 576,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt_lt_iff",
            "line_nb": 581,
            "steps": [
                {
                    "command": [
                        "unfold lt, gt.",
                        "VernacExtend",
                        "8cc15ec47569f34eb3b35be0e4a59a64cd138877"
                    ]
                },
                {
                    "command": [
                        "now rewrite compare_antisym, CompOpp_iff.",
                        "VernacExtend",
                        "3872098e9b9c5487d518b55127e4b1376337872a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gt_lt",
            "line_nb": 585,
            "steps": [
                {
                    "command": [
                        "apply gt_lt_iff.",
                        "VernacExtend",
                        "4620efeab5a40036b9a55501443fc8dbfb7fc6d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_gt",
            "line_nb": 588,
            "steps": [
                {
                    "command": [
                        "apply gt_lt_iff.",
                        "VernacExtend",
                        "4620efeab5a40036b9a55501443fc8dbfb7fc6d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ge_le_iff",
            "line_nb": 591,
            "steps": [
                {
                    "command": [
                        "unfold le, ge.",
                        "VernacExtend",
                        "49ff096655be717232bfbbc31cf77140d8c09c79"
                    ]
                },
                {
                    "command": [
                        "now rewrite compare_antisym, CompOpp_iff.",
                        "VernacExtend",
                        "3872098e9b9c5487d518b55127e4b1376337872a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ge_le",
            "line_nb": 595,
            "steps": [
                {
                    "command": [
                        "apply ge_le_iff.",
                        "VernacExtend",
                        "0473d285db861d6caf8a2f4ce58491d5fe906cdb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_ge",
            "line_nb": 598,
            "steps": [
                {
                    "command": [
                        "apply ge_le_iff.",
                        "VernacExtend",
                        "0473d285db861d6caf8a2f4ce58491d5fe906cdb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_succ_r",
            "line_nb": 601,
            "steps": [
                {
                    "command": [
                        "revert q.",
                        "VernacExtend",
                        "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
                    ]
                },
                {
                    "command": [
                        "induction p as [p IH|p IH| ]; intros [q|q| ]; simpl; simpl_compare; rewrite ?IH; trivial; (now destruct compare) || (now destruct p).",
                        "VernacExtend",
                        "54f035ab147852ff5f8bab024177c73450754038"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_succ_l",
            "line_nb": 605,
            "steps": [
                {
                    "command": [
                        "rewrite 2 (compare_antisym q).",
                        "VernacExtend",
                        "e7180feebad7b3be387a1332b57458674cdda9a2"
                    ]
                },
                {
                    "command": [
                        "generalize (compare_succ_r q p).",
                        "VernacExtend",
                        "9fa9892ab60b51b5cf236a0f6ebbad7b837eea34"
                    ]
                },
                {
                    "command": [
                        "now do 2 destruct compare.",
                        "VernacExtend",
                        "42178b3c4c6f0fb23a8b0b658ad0a2f4d01afaa9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_succ_r",
            "line_nb": 610,
            "steps": [
                {
                    "command": [
                        "unfold lt, le.",
                        "VernacExtend",
                        "f599fabfc187f3f20300529b934c5737cd55a245"
                    ]
                },
                {
                    "command": [
                        "generalize (compare_succ_r p q).",
                        "VernacExtend",
                        "641d00bfd1cb32cd287d00aaee5d335d0b2a07f0"
                    ]
                },
                {
                    "command": [
                        "do 2 destruct compare; try discriminate; now split.",
                        "VernacExtend",
                        "42422d917f9e388823ca6c9ebe150c20cf0c2a9a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_succ_diag_r",
            "line_nb": 615,
            "steps": [
                {
                    "command": [
                        "rewrite lt_iff_add.",
                        "VernacExtend",
                        "9e297de9f5df2b8889710ab7c7e48bb6361434c1"
                    ]
                },
                {
                    "command": [
                        "exists 1.",
                        "VernacExtend",
                        "18eb310858be5acae7304d0d9ed33063568db310"
                    ]
                },
                {
                    "command": [
                        "apply add_1_r.",
                        "VernacExtend",
                        "4573128e3a4c5f8b078789d2fc06cc51ceec43a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_succ_succ",
            "line_nb": 620,
            "steps": [
                {
                    "command": [
                        "revert q.",
                        "VernacExtend",
                        "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
                    ]
                },
                {
                    "command": [
                        "induction p; destruct q; simpl; simpl_compare; trivial; apply compare_succ_l || apply compare_succ_r || (now destruct p) || (now destruct q).",
                        "VernacExtend",
                        "d40691cb26c122b6d60961134c650dcb1ae0c2b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_1_l",
            "line_nb": 624,
            "steps": [
                {
                    "command": [
                        "now destruct p.",
                        "VernacExtend",
                        "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nlt_1_r",
            "line_nb": 627,
            "steps": [
                {
                    "command": [
                        "now destruct p.",
                        "VernacExtend",
                        "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_1_succ",
            "line_nb": 630,
            "steps": [
                {
                    "command": [
                        "apply lt_succ_r, le_1_l.",
                        "VernacExtend",
                        "042cd5bb671d220eb525e0c93f628fbab64311d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_nlt",
            "line_nb": 633,
            "steps": [
                {
                    "command": [
                        "now rewrite <- ge_le_iff.",
                        "VernacExtend",
                        "7cf350ca36758f6b98b26241116c5a5f97f217c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_nle",
            "line_nb": 636,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold lt, le.",
                        "VernacExtend",
                        "f599fabfc187f3f20300529b934c5737cd55a245"
                    ]
                },
                {
                    "command": [
                        "rewrite compare_antisym.",
                        "VernacExtend",
                        "79a52ead430e61efd31081179fc8e3db332e367d"
                    ]
                },
                {
                    "command": [
                        "destruct compare; split; auto; easy'.",
                        "VernacExtend",
                        "4696d08e3f0e8da3c6ed77e2096058c6b59f6d50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_le_incl",
            "line_nb": 642,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply le_lteq.",
                        "VernacExtend",
                        "cb7bdce7e2231f7f79568e29f9a47c0324abe635"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_lt_succ",
            "line_nb": 647,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now apply lt_succ_r, lt_le_incl.",
                        "VernacExtend",
                        "58e155103742710e0f5489c2206491ba49b3dafe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_lt_mono",
            "line_nb": 651,
            "steps": [
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "now rewrite compare_succ_succ.",
                        "VernacExtend",
                        "4e9c018588615678832920aa76a127dce9efde65"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_le_mono",
            "line_nb": 655,
            "steps": [
                {
                    "command": [
                        "unfold le.",
                        "VernacExtend",
                        "4dbc0b49762d44208e0577d0877ddec914c49a1a"
                    ]
                },
                {
                    "command": [
                        "now rewrite compare_succ_succ.",
                        "VernacExtend",
                        "4e9c018588615678832920aa76a127dce9efde65"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_trans",
            "line_nb": 659,
            "steps": [
                {
                    "command": [
                        "rewrite 3 lt_iff_add.",
                        "VernacExtend",
                        "259659b844571aa5cb607c51217886be4153e32c"
                    ]
                },
                {
                    "command": [
                        "intros (r,Hr) (s,Hs).",
                        "VernacExtend",
                        "f6ce4467e30dff9ab680e25ae58276a5cf87b1f4"
                    ]
                },
                {
                    "command": [
                        "exists (r+s).",
                        "VernacExtend",
                        "865ede9feebcdc702be0cd8cf7c733e0da313bed"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_assoc, Hr, Hs.",
                        "VernacExtend",
                        "e87aeafd9c20ed292e4ac5ffa1984c99709028df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_ind",
            "line_nb": 665,
            "steps": [
                {
                    "command": [
                        "intros A n AB AS m.",
                        "VernacExtend",
                        "2afb47c2041075bd44fc66c46a35261d37590899"
                    ]
                },
                {
                    "command": [
                        "induction m using peano_ind; intros H.",
                        "VernacExtend",
                        "6d7ac4dc154c0b26641501cbc579a59ce79a48b1"
                    ]
                },
                {
                    "command": [
                        "elim (nlt_1_r _ H).",
                        "VernacExtend",
                        "104e4915abe94f7726bcf0776ebca03988f219fc"
                    ]
                },
                {
                    "command": [
                        "apply lt_succ_r, le_lteq in H.",
                        "VernacExtend",
                        "b30fae80f2e0753596509a3a66a9412e811f2b95"
                    ]
                },
                {
                    "command": [
                        "destruct H as [H|H]; subst; auto.",
                        "VernacExtend",
                        "8069150b6a1fce4e6ec0864fe4a3061f2fa9f781"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_strorder",
            "line_nb": 672,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact lt_irrefl.",
                        "VernacExtend",
                        "efac63f50fa51e1cc457cadaffbd12e6b4c1cdb9"
                    ]
                },
                {
                    "command": [
                        "exact lt_trans.",
                        "VernacExtend",
                        "51f1712d927e4469da489827ec477e2f28c0a8f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_compat",
            "line_nb": 677,
            "steps": [
                {
                    "command": [
                        "repeat red.",
                        "VernacExtend",
                        "517f28ca1856880bafd07df42d9497606ec92845"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "subst; auto.",
                        "VernacExtend",
                        "0dfc636d3b0c9fb40074fb6c1c1b90bf77fecdc8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_total",
            "line_nb": 682,
            "steps": [
                {
                    "command": [
                        "case (compare_spec p q); intuition.",
                        "VernacExtend",
                        "e493cefa0dbae3a23e8d97a7d7a2d05ef48ef3b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_refl",
            "line_nb": 685,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold le.",
                        "VernacExtend",
                        "4dbc0b49762d44208e0577d0877ddec914c49a1a"
                    ]
                },
                {
                    "command": [
                        "now rewrite compare_refl.",
                        "VernacExtend",
                        "3f5dcea3b3e048c8f7ef5490b836aab223ab2c13"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_lt_trans",
            "line_nb": 690,
            "steps": [
                {
                    "command": [
                        "intros H H'.",
                        "VernacExtend",
                        "cdfc45f8747107ed208d8045fb3d9a7935db0014"
                    ]
                },
                {
                    "command": [
                        "apply le_lteq in H.",
                        "VernacExtend",
                        "1974d950a661b01b61ff5cf5027e10a5097fc9c7"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "now apply lt_trans with m.",
                        "VernacExtend",
                        "cf5e60732d3eeedf0057321fb866e4a987164eb6"
                    ]
                },
                {
                    "command": [
                        "now subst.",
                        "VernacExtend",
                        "89cc250d34dafb32c3653b2706abafd433151f2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_le_trans",
            "line_nb": 697,
            "steps": [
                {
                    "command": [
                        "intros H H'.",
                        "VernacExtend",
                        "cdfc45f8747107ed208d8045fb3d9a7935db0014"
                    ]
                },
                {
                    "command": [
                        "apply le_lteq in H'.",
                        "VernacExtend",
                        "8daf999babc3a7fb650dba9f2057b63d40134db6"
                    ]
                },
                {
                    "command": [
                        "destruct H'.",
                        "VernacExtend",
                        "6b415f99235d5d47642f9e2340679885dc667286"
                    ]
                },
                {
                    "command": [
                        "now apply lt_trans with m.",
                        "VernacExtend",
                        "cf5e60732d3eeedf0057321fb866e4a987164eb6"
                    ]
                },
                {
                    "command": [
                        "now subst.",
                        "VernacExtend",
                        "89cc250d34dafb32c3653b2706abafd433151f2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_trans",
            "line_nb": 704,
            "steps": [
                {
                    "command": [
                        "intros H H'.",
                        "VernacExtend",
                        "cdfc45f8747107ed208d8045fb3d9a7935db0014"
                    ]
                },
                {
                    "command": [
                        "apply le_lteq in H.",
                        "VernacExtend",
                        "1974d950a661b01b61ff5cf5027e10a5097fc9c7"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "apply le_lteq; left.",
                        "VernacExtend",
                        "a37dd297d828d06ad68a5dbc45e0bf571ab399a2"
                    ]
                },
                {
                    "command": [
                        "now apply lt_le_trans with m.",
                        "VernacExtend",
                        "66711a00b2b86250cc7b28d7ed808acdbf8111b5"
                    ]
                },
                {
                    "command": [
                        "now subst.",
                        "VernacExtend",
                        "89cc250d34dafb32c3653b2706abafd433151f2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_succ_l",
            "line_nb": 712,
            "steps": [
                {
                    "command": [
                        "rewrite <- lt_succ_r.",
                        "VernacExtend",
                        "dbb8763606ec1c465f3d52d334206f7e2eb38e0a"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply succ_lt_mono.",
                        "VernacExtend",
                        "55afd8e289f332fb21c042111ddc7b22a9f2f5ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_antisym",
            "line_nb": 717,
            "steps": [
                {
                    "command": [
                        "rewrite le_lteq; destruct 1; auto.",
                        "VernacExtend",
                        "ea4fb3af3ddbc7b90dbaed1fc53476f24d01779a"
                    ]
                },
                {
                    "command": [
                        "rewrite le_lteq; destruct 1; auto.",
                        "VernacExtend",
                        "ea4fb3af3ddbc7b90dbaed1fc53476f24d01779a"
                    ]
                },
                {
                    "command": [
                        "elim (lt_irrefl p).",
                        "VernacExtend",
                        "42eec059830563d4c4b83e6aeb2563c20f0e1f60"
                    ]
                },
                {
                    "command": [
                        "now transitivity q.",
                        "VernacExtend",
                        "a7fb7aced21c0eaab85a08deb6222d869fa0c9c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_preorder",
            "line_nb": 723,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exact le_refl.",
                        "VernacExtend",
                        "a73d9c78116dc2b9c2d99e2ebf0d2a9d4f788af3"
                    ]
                },
                {
                    "command": [
                        "exact le_trans.",
                        "VernacExtend",
                        "13a945d76187193047a580d158ad861a6a75e9d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_partorder",
            "line_nb": 728,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "change (x=y <-> x <= y <= x).",
                        "VernacExtend",
                        "c9feecb1d979afb6efde8cf0ba94a0c259a0f25a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros; now subst.",
                        "VernacExtend",
                        "f75b5a2d518b7b1521370155178b4b62db2fad48"
                    ]
                },
                {
                    "command": [
                        "destruct 1; now apply le_antisym.",
                        "VernacExtend",
                        "bc3e8b5fc96cbb9c11c184ae35201bb1999deeb7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_compare_mono_l",
            "line_nb": 735,
            "steps": [
                {
                    "command": [
                        "revert p q r.",
                        "VernacExtend",
                        "bf89cd5d6c691b3b6902602b2ef0c6e0d9272af5"
                    ]
                },
                {
                    "command": [
                        "induction p using peano_ind; intros q r.",
                        "VernacExtend",
                        "94a8b0234ac8ddc6047d058ae80fbe4e0c07a63a"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 add_1_l.",
                        "VernacExtend",
                        "596ba673e2b8881771597d04c9decb1e27cebd8d"
                    ]
                },
                {
                    "command": [
                        "apply compare_succ_succ.",
                        "VernacExtend",
                        "b9392939c57232a0b87d6c44f883037d0b983ec7"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2 add_succ_l, compare_succ_succ.",
                        "VernacExtend",
                        "9bea63e0541b4501e423a5ecbdb3bb9d8c202ab0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_compare_mono_r",
            "line_nb": 742,
            "steps": [
                {
                    "command": [
                        "rewrite 2 (add_comm _ p).",
                        "VernacExtend",
                        "dba3406e8bd0a4eace55f8830dd1af3facbcca0d"
                    ]
                },
                {
                    "command": [
                        "apply add_compare_mono_l.",
                        "VernacExtend",
                        "583d761e4e61d9a0e0ea620afd6c04f7187936cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_add_diag_r",
            "line_nb": 746,
            "steps": [
                {
                    "command": [
                        "rewrite lt_iff_add.",
                        "VernacExtend",
                        "9e297de9f5df2b8889710ab7c7e48bb6361434c1"
                    ]
                },
                {
                    "command": [
                        "now exists q.",
                        "VernacExtend",
                        "09397d95836be942129fc24cc71121ca96bc261f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_lt_mono_l",
            "line_nb": 750,
            "steps": [
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "rewrite add_compare_mono_l.",
                        "VernacExtend",
                        "425c42f11b6563648fae36a7baa4cddb2448cd95"
                    ]
                },
                {
                    "command": [
                        "apply iff_refl.",
                        "VernacExtend",
                        "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_lt_mono_r",
            "line_nb": 755,
            "steps": [
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "rewrite add_compare_mono_r.",
                        "VernacExtend",
                        "c72b4da57b53aed217d6a14597e8aa6b6eb4d312"
                    ]
                },
                {
                    "command": [
                        "apply iff_refl.",
                        "VernacExtend",
                        "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_lt_mono",
            "line_nb": 760,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans with (p+s).",
                        "VernacExtend",
                        "c0c581fad77f169095a96931e800bdedf13a9871"
                    ]
                },
                {
                    "command": [
                        "now apply add_lt_mono_l.",
                        "VernacExtend",
                        "71fdc858993e7580fa54585b82c355fc51c6ba6b"
                    ]
                },
                {
                    "command": [
                        "now apply add_lt_mono_r.",
                        "VernacExtend",
                        "d80bc326a6c2650be2a483e4bfe336a943367a3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_le_mono_l",
            "line_nb": 766,
            "steps": [
                {
                    "command": [
                        "unfold le.",
                        "VernacExtend",
                        "4dbc0b49762d44208e0577d0877ddec914c49a1a"
                    ]
                },
                {
                    "command": [
                        "rewrite add_compare_mono_l.",
                        "VernacExtend",
                        "425c42f11b6563648fae36a7baa4cddb2448cd95"
                    ]
                },
                {
                    "command": [
                        "apply iff_refl.",
                        "VernacExtend",
                        "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_le_mono_r",
            "line_nb": 771,
            "steps": [
                {
                    "command": [
                        "unfold le.",
                        "VernacExtend",
                        "4dbc0b49762d44208e0577d0877ddec914c49a1a"
                    ]
                },
                {
                    "command": [
                        "rewrite add_compare_mono_r.",
                        "VernacExtend",
                        "c72b4da57b53aed217d6a14597e8aa6b6eb4d312"
                    ]
                },
                {
                    "command": [
                        "apply iff_refl.",
                        "VernacExtend",
                        "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_le_mono",
            "line_nb": 776,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (p+s).",
                        "VernacExtend",
                        "eee0034c7f8c699f58e36538fa1a1d154456cf4c"
                    ]
                },
                {
                    "command": [
                        "now apply add_le_mono_l.",
                        "VernacExtend",
                        "0d41a77e1ecac43d6b8c8ba3730494b687f116ee"
                    ]
                },
                {
                    "command": [
                        "now apply add_le_mono_r.",
                        "VernacExtend",
                        "fa8c57b0015f2326cde939db58f83faf349538ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_compare_mono_l",
            "line_nb": 782,
            "steps": [
                {
                    "command": [
                        "revert q r.",
                        "VernacExtend",
                        "65c8747858e115a11b033f8bfe1b98b454d12381"
                    ]
                },
                {
                    "command": [
                        "induction p; simpl; trivial.",
                        "VernacExtend",
                        "191f34c188b4e3e6c840e01672216f5b8c48d646"
                    ]
                },
                {
                    "command": [
                        "intros q r.",
                        "VernacExtend",
                        "5223fa321bdec4486046b37f561ef1874a5acdda"
                    ]
                },
                {
                    "command": [
                        "specialize (IHp q r).",
                        "VernacExtend",
                        "b4d0a5267a1b3f3830bb3876274792ffcce53535"
                    ]
                },
                {
                    "command": [
                        "destruct (compare_spec q r).",
                        "VernacExtend",
                        "3fbdf43465d63b9d601384f51e40bdf925fd0052"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply compare_refl.",
                        "VernacExtend",
                        "5ecedda5f46ae499e6b31ca28202515be361c217"
                    ]
                },
                {
                    "command": [
                        "now apply add_lt_mono.",
                        "VernacExtend",
                        "efb6f0464993a5d877db59b67e2134bcbb9eaefa"
                    ]
                },
                {
                    "command": [
                        "now apply lt_gt, add_lt_mono, gt_lt.",
                        "VernacExtend",
                        "42e107104132385c47169b6a1830c99e428af846"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_compare_mono_r",
            "line_nb": 793,
            "steps": [
                {
                    "command": [
                        "rewrite 2 (mul_comm _ p).",
                        "VernacExtend",
                        "03058eacaa5809c21f8daee9a62b5b92113e6d64"
                    ]
                },
                {
                    "command": [
                        "apply mul_compare_mono_l.",
                        "VernacExtend",
                        "e92654fcd7db53b45355ff76f75a2ba52ffeab6a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_lt_mono_l",
            "line_nb": 797,
            "steps": [
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_compare_mono_l.",
                        "VernacExtend",
                        "71b5fe03e876a602e43a420f18b96122ce7ac1ee"
                    ]
                },
                {
                    "command": [
                        "apply iff_refl.",
                        "VernacExtend",
                        "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_lt_mono_r",
            "line_nb": 802,
            "steps": [
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_compare_mono_r.",
                        "VernacExtend",
                        "8fbe09571db7f2d421c5bd08a176f1bd4b73621a"
                    ]
                },
                {
                    "command": [
                        "apply iff_refl.",
                        "VernacExtend",
                        "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_lt_mono",
            "line_nb": 807,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans with (p*s).",
                        "VernacExtend",
                        "7dc04e8a683e3d7ebadbdb06179d4b202764456c"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_l.",
                        "VernacExtend",
                        "c55b8263ed1ea0e598827ab4500bc6fc1ab20bee"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_r.",
                        "VernacExtend",
                        "c7f98c6fa3953204ac1a279032026f09af3ffb4b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_le_mono_l",
            "line_nb": 813,
            "steps": [
                {
                    "command": [
                        "unfold le.",
                        "VernacExtend",
                        "4dbc0b49762d44208e0577d0877ddec914c49a1a"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_compare_mono_l.",
                        "VernacExtend",
                        "71b5fe03e876a602e43a420f18b96122ce7ac1ee"
                    ]
                },
                {
                    "command": [
                        "apply iff_refl.",
                        "VernacExtend",
                        "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_le_mono_r",
            "line_nb": 818,
            "steps": [
                {
                    "command": [
                        "unfold le.",
                        "VernacExtend",
                        "4dbc0b49762d44208e0577d0877ddec914c49a1a"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_compare_mono_r.",
                        "VernacExtend",
                        "8fbe09571db7f2d421c5bd08a176f1bd4b73621a"
                    ]
                },
                {
                    "command": [
                        "apply iff_refl.",
                        "VernacExtend",
                        "fcf74af2d4da6f3ab0123ffcbae4479429fd0429"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_le_mono",
            "line_nb": 823,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (p*s).",
                        "VernacExtend",
                        "3cd6c75d5d450eba90932952cd2eb80816c54049"
                    ]
                },
                {
                    "command": [
                        "now apply mul_le_mono_l.",
                        "VernacExtend",
                        "808b9f9b8f47c1212e5b1bb7b1ee4000af7eba9b"
                    ]
                },
                {
                    "command": [
                        "now apply mul_le_mono_r.",
                        "VernacExtend",
                        "48cde5983d97cc83e88fcfb869b5a3b385372b5e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_add_r",
            "line_nb": 829,
            "steps": [
                {
                    "command": [
                        "induction q using peano_ind.",
                        "VernacExtend",
                        "3e7af1b8228a698ed7f68ee2c0a53621cba7fb13"
                    ]
                },
                {
                    "command": [
                        "rewrite add_1_r.",
                        "VernacExtend",
                        "d1ec3ca17f17da3192e164fb41c4a163b74f7dc5"
                    ]
                },
                {
                    "command": [
                        "apply lt_succ_diag_r.",
                        "VernacExtend",
                        "4c9c1b29b5f87ccde25c288c18ef725e9dffbefb"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans with (p+q); auto.",
                        "VernacExtend",
                        "28a22e8c01813c37f29a52d591c2541b9f6d86c8"
                    ]
                },
                {
                    "command": [
                        "apply add_lt_mono_l, lt_succ_diag_r.",
                        "VernacExtend",
                        "683230fd333a8e3ae22c7260adb7c907c4f05638"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_not_add_l",
            "line_nb": 836,
            "steps": [
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "elim (lt_irrefl p).",
                        "VernacExtend",
                        "42eec059830563d4c4b83e6aeb2563c20f0e1f60"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans with (p+q); auto using lt_add_r.",
                        "VernacExtend",
                        "3e649264bb26c4da796bfec22f4fd3ab4a6c87ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_gt_1",
            "line_nb": 841,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "induction p using peano_ind.",
                        "VernacExtend",
                        "b4d143ad64bf92648b7416efcb2c8dc51cc2d397"
                    ]
                },
                {
                    "command": [
                        "now rewrite pow_1_r.",
                        "VernacExtend",
                        "33bd75c1cf59330dfcca80be4aa965858ec0519d"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_succ_r.",
                        "VernacExtend",
                        "08027ee0819435d6bca65fc861fe07532a238a46"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans with (n*1).",
                        "VernacExtend",
                        "389c46979bfbd9a6f2e77f0b29c245fb53b19fb0"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_1_r.",
                        "VernacExtend",
                        "12e64d5128c998cd6c976dbc7b183718cf17ae45"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_l.",
                        "VernacExtend",
                        "c55b8263ed1ea0e598827ab4500bc6fc1ab20bee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_1_r",
            "line_nb": 850,
            "steps": [
                {
                    "command": [
                        "now destruct p.",
                        "VernacExtend",
                        "ea72e4bfe8393c5e656b4259d5d7a71e22b2205d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_sub",
            "line_nb": 853,
            "steps": [
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply sub_1_r.",
                        "VernacExtend",
                        "a2c8aa1bdf263411971fb3af0a43d192ec41adc8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_succ_r",
            "line_nb": 857,
            "steps": [
                {
                    "command": [
                        "unfold sub; rewrite sub_mask_succ_r, sub_mask_carry_spec.",
                        "VernacExtend",
                        "36e0332198b34facf78cbabc990e678a684a747a"
                    ]
                },
                {
                    "command": [
                        "destruct (sub_mask p q) as [|[r|r| ]|]; auto.",
                        "VernacExtend",
                        "c272b650853dd9bb039bf3390a4b5379e28b707d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_mask_pos'",
            "line_nb": 861,
            "steps": [
                {
                    "command": [
                        "rewrite lt_iff_add.",
                        "VernacExtend",
                        "9e297de9f5df2b8889710ab7c7e48bb6361434c1"
                    ]
                },
                {
                    "command": [
                        "intros (r,Hr).",
                        "VernacExtend",
                        "ba92b68144cf2c7f6eb625a71f345531fa3dfb63"
                    ]
                },
                {
                    "command": [
                        "exists r.",
                        "VernacExtend",
                        "6ca63eb3bc93583233e98ef7c15aab920cd0ed23"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "now apply sub_mask_pos_iff.",
                        "VernacExtend",
                        "8d717183cd4b2d904ac24c85c1e8a92aa9dc6ceb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_mask_pos",
            "line_nb": 868,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "destruct (sub_mask_pos' p q H) as (r & Hr & _).",
                        "VernacExtend",
                        "c53bbe154d616cdb53ee2d046a4a2bf92b5a0a3e"
                    ]
                },
                {
                    "command": [
                        "now exists r.",
                        "VernacExtend",
                        "def9e683686351666c2c2728e608a53ca4e6093c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_add",
            "line_nb": 873,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "destruct (sub_mask_pos p q H) as (r,U).",
                        "VernacExtend",
                        "85a0a2e2e58c4815fed51cceefc4eddfecc2c56e"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "rewrite U.",
                        "VernacExtend",
                        "f4f8e08f4b6e92bbd380857e547804f1e7e70cda"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm.",
                        "VernacExtend",
                        "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
                    ]
                },
                {
                    "command": [
                        "now apply sub_mask_add.",
                        "VernacExtend",
                        "0b9578d11f34dd825b6c929f1d1e6da6cee254c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_sub",
            "line_nb": 881,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply add_reg_r with q.",
                        "VernacExtend",
                        "346ae7ea36f1ceb43cba23b79ecd3cd76d65ef58"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add; trivial.",
                        "VernacExtend",
                        "7df7f8caf8dcd3aec81ce09b9d966f9f2dc8f9ac"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm.",
                        "VernacExtend",
                        "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
                    ]
                },
                {
                    "command": [
                        "apply lt_add_r.",
                        "VernacExtend",
                        "e0bb9e1915ba69a811604e481e6dd832e1686316"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_sub_distr_l",
            "line_nb": 888,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply add_reg_r with (p*r).",
                        "VernacExtend",
                        "944be4a3602f50238e0aa992983ca66869a96e96"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mul_add_distr_l.",
                        "VernacExtend",
                        "477f9f42bfa79f479629d0d7bbcc65bacaa7c131"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add; trivial.",
                        "VernacExtend",
                        "7df7f8caf8dcd3aec81ce09b9d966f9f2dc8f9ac"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply sub_add; trivial.",
                        "VernacExtend",
                        "35a4deee5f9ce04bc285a3526bf170bc518164c1"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_l.",
                        "VernacExtend",
                        "c55b8263ed1ea0e598827ab4500bc6fc1ab20bee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_sub_distr_r",
            "line_nb": 897,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "rewrite 3 (mul_comm _ r).",
                        "VernacExtend",
                        "f182313bbe66c799b8245a3eefcad739cf4bc603"
                    ]
                },
                {
                    "command": [
                        "now apply mul_sub_distr_l.",
                        "VernacExtend",
                        "780680429814af2097dee903916905501dd46289"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_lt_mono_l",
            "line_nb": 902,
            "steps": [
                {
                    "command": [
                        "intros Hqp Hpr.",
                        "VernacExtend",
                        "1cd4d1be160f2d2859d59b15c43727f186b1e0b1"
                    ]
                },
                {
                    "command": [
                        "apply (add_lt_mono_r p).",
                        "VernacExtend",
                        "2d4b030f796ec0bff01e66fd0221f3c148c44c37"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add by trivial.",
                        "VernacExtend",
                        "91364fbeb2d738c4020f95d7934a14285e0c9962"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with ((r-q)+q).",
                        "VernacExtend",
                        "5e66cf266b7b77c1070ed95579bbc2e0549feb9d"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add by (now apply lt_trans with p).",
                        "VernacExtend",
                        "412d5edc31511ed8699e5ae683753e5beace9bc4"
                    ]
                },
                {
                    "command": [
                        "apply le_refl.",
                        "VernacExtend",
                        "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
                    ]
                },
                {
                    "command": [
                        "now apply add_lt_mono_l.",
                        "VernacExtend",
                        "71fdc858993e7580fa54585b82c355fc51c6ba6b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_compare_mono_l",
            "line_nb": 911,
            "steps": [
                {
                    "command": [
                        "intros Hqp Hrp.",
                        "VernacExtend",
                        "904080f02c03403747cc515ae66d8cde0fad7a47"
                    ]
                },
                {
                    "command": [
                        "case (compare_spec r q); intros H.",
                        "VernacExtend",
                        "0b41170233e5540eb3e13af4218b81d4b5defc7b"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "apply compare_refl.",
                        "VernacExtend",
                        "5ecedda5f46ae499e6b31ca28202515be361c217"
                    ]
                },
                {
                    "command": [
                        "apply sub_lt_mono_l; trivial.",
                        "VernacExtend",
                        "e5e17b9b3728ac93d5b963657345e98654e6bd4f"
                    ]
                },
                {
                    "command": [
                        "apply lt_gt, sub_lt_mono_l; trivial.",
                        "VernacExtend",
                        "2266189ba9664bcb5da1a6036322dd82407c4d6d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_compare_mono_r",
            "line_nb": 919,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (add_compare_mono_r p), 2 sub_add; trivial.",
                        "VernacExtend",
                        "f19cac06ef13fa3e5d18a755562ab846541baa9d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_lt_mono_r",
            "line_nb": 923,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold lt.",
                        "VernacExtend",
                        "2e821d407c03d5f5e572c51453fdc618d9dec364"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_compare_mono_r; trivial.",
                        "VernacExtend",
                        "c0bc7bf265c73ad0518866f3861687eb77016349"
                    ]
                },
                {
                    "command": [
                        "now apply lt_trans with q.",
                        "VernacExtend",
                        "59dcdc42ffc312a28086acdbdaa00e31c846ea69"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_decr",
            "line_nb": 929,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply add_lt_mono_r with m.",
                        "VernacExtend",
                        "5375c2c330e18ebf5053e2c5cdaca9af25ca97c3"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add; trivial.",
                        "VernacExtend",
                        "7df7f8caf8dcd3aec81ce09b9d966f9f2dc8f9ac"
                    ]
                },
                {
                    "command": [
                        "apply lt_add_r.",
                        "VernacExtend",
                        "e0bb9e1915ba69a811604e481e6dd832e1686316"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_sub_assoc",
            "line_nb": 935,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply add_reg_r with r.",
                        "VernacExtend",
                        "82bab721b605642b79e45b0c61b68aaa57163f2e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_assoc, !sub_add; trivial.",
                        "VernacExtend",
                        "6ad61f0c181dbb49e00ba634d37af12b2ecbda48"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm.",
                        "VernacExtend",
                        "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
                    ]
                },
                {
                    "command": [
                        "apply lt_trans with q; trivial using lt_add_r.",
                        "VernacExtend",
                        "b4376d80c57fc42666e608274b8892ba5dfc56e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_add_distr",
            "line_nb": 942,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (q < p) by (apply lt_trans with (q+r); trivial using lt_add_r).",
                        "VernacExtend",
                        "c319ff9d665796d497efeb16c274e5dd3f00d0c3"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_comm q r) in *.",
                        "VernacExtend",
                        "6f49ad0545536aac07d672e3fc590a499c1de502"
                    ]
                },
                {
                    "command": [
                        "apply add_reg_r with (r+q).",
                        "VernacExtend",
                        "cbb802c1437afd63729f85e68703defd43ba4605"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add by trivial.",
                        "VernacExtend",
                        "91364fbeb2d738c4020f95d7934a14285e0c9962"
                    ]
                },
                {
                    "command": [
                        "rewrite add_assoc, !sub_add; trivial.",
                        "VernacExtend",
                        "4ad291791d9bdfff6dd2355044e78eb14d4ea0d7"
                    ]
                },
                {
                    "command": [
                        "apply (add_lt_mono_r q).",
                        "VernacExtend",
                        "c26a90d2bf3ee32d6e656ea5efa365338f901da0"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add; trivial.",
                        "VernacExtend",
                        "7df7f8caf8dcd3aec81ce09b9d966f9f2dc8f9ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_sub_distr",
            "line_nb": 952,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply add_reg_r with ((q-r)+r).",
                        "VernacExtend",
                        "0bfc416ec819134fcb3ce175f699bf7530e039a6"
                    ]
                },
                {
                    "command": [
                        "rewrite add_assoc, !sub_add; trivial.",
                        "VernacExtend",
                        "4ad291791d9bdfff6dd2355044e78eb14d4ea0d7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (sub_add q r); trivial.",
                        "VernacExtend",
                        "14cc462217d3bc4a56202bce7f567ffb0e4814cb"
                    ]
                },
                {
                    "command": [
                        "now apply add_lt_mono_r.",
                        "VernacExtend",
                        "d80bc326a6c2650be2a483e4bfe336a943367a3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_xO_xO",
            "line_nb": 959,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now destruct (sub_mask_pos n m H) as (p, ->).",
                        "VernacExtend",
                        "7c050ce4d9d20052f6ba38fbac33f8caba58c3e1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_xI_xI",
            "line_nb": 965,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now destruct (sub_mask_pos n m H) as (p, ->).",
                        "VernacExtend",
                        "7c050ce4d9d20052f6ba38fbac33f8caba58c3e1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_xI_xO",
            "line_nb": 971,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now destruct (sub_mask_pos n m) as (p, ->).",
                        "VernacExtend",
                        "3474e387ee8dd147c4698e2cb1bd55f2496dea4c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_xO_xI",
            "line_nb": 977,
            "steps": [
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_mask_carry_spec.",
                        "VernacExtend",
                        "80066acf0482a4ed9be80071c470a93479b1ecdf"
                    ]
                },
                {
                    "command": [
                        "now destruct (sub_mask n m) as [|[r|r|]|].",
                        "VernacExtend",
                        "fa38bb2383ad6e11f76a9d35eed8a75462d559e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_mask_neg_iff'",
            "line_nb": 983,
            "steps": [
                {
                    "command": [
                        "rewrite lt_iff_add.",
                        "VernacExtend",
                        "9e297de9f5df2b8889710ab7c7e48bb6361434c1"
                    ]
                },
                {
                    "command": [
                        "apply sub_mask_neg_iff.",
                        "VernacExtend",
                        "7707b1e351a8e5315e22eed026e30f47fdca052c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_mask_neg",
            "line_nb": 987,
            "steps": [
                {
                    "command": [
                        "apply sub_mask_neg_iff'.",
                        "VernacExtend",
                        "2c2fa96e9d73b3b447a8542abf0c8f2a0cec3337"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_le",
            "line_nb": 990,
            "steps": [
                {
                    "command": [
                        "unfold le, sub.",
                        "VernacExtend",
                        "4be07b36caa6fc95270b59d317f3c5cf157a3ef1"
                    ]
                },
                {
                    "command": [
                        "rewrite compare_sub_mask.",
                        "VernacExtend",
                        "46a775fe7004fc1055e41c647e00c9d90e6c27b8"
                    ]
                },
                {
                    "command": [
                        "destruct sub_mask; easy'.",
                        "VernacExtend",
                        "9f1826497e46c3489a40c980f77213a474330313"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_lt",
            "line_nb": 995,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now apply sub_le, lt_le_incl.",
                        "VernacExtend",
                        "0d4c207718ea4b6d9de8b5eef42b99e64fcac482"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_diag",
            "line_nb": 999,
            "steps": [
                {
                    "command": [
                        "unfold sub.",
                        "VernacExtend",
                        "09a336a2b822859bc335120602ae265ad23b7a0d"
                    ]
                },
                {
                    "command": [
                        "now rewrite sub_mask_diag.",
                        "VernacExtend",
                        "95c17a8554114f9f7b0e8e9c9f14df1f7f269b1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_nat_monotone",
            "line_nb": 1003,
            "steps": [
                {
                    "command": [
                        "assert (le0 : forall n, (0<=n)%nat) by (induction n; auto).",
                        "VernacExtend",
                        "54147b6a8c5ffa2b1abf987d8036ec9460f87e1e"
                    ]
                },
                {
                    "command": [
                        "assert (leS : forall n m, (n<=m -> S n <= S m)%nat) by (induction 1; auto).",
                        "VernacExtend",
                        "314ec8d2c52cdd0af41b048dc042c5c32fecfea3"
                    ]
                },
                {
                    "command": [
                        "revert q.",
                        "VernacExtend",
                        "3db2f0bf0c01bc5b2fa3cbdbf369da6fffa4fb77"
                    ]
                },
                {
                    "command": [
                        "induction p; destruct q; simpl; intros; auto; easy || apply leS; red in H; simpl_compare_in H.",
                        "VernacExtend",
                        "7f927b9af8dabb80746971262ccc7769e9fe6556"
                    ]
                },
                {
                    "command": [
                        "apply IHp.",
                        "VernacExtend",
                        "246d34d2490ae6e017eeeee5e330f76082b9a564"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "now destruct (p?=q).",
                        "VernacExtend",
                        "d8385a697864ad792655234027daa15367763757"
                    ]
                },
                {
                    "command": [
                        "destruct (compare_spec p q); subst; now auto.",
                        "VernacExtend",
                        "c4a07fbf53fbb5d2132eec6b9eae4b54d5bd932b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_gt",
            "line_nb": 1013,
            "steps": [
                {
                    "command": [
                        "induction p; simpl; try rewrite pow_succ_r; try easy.",
                        "VernacExtend",
                        "ea8baa5261d068dda98781f6a2c9c2e32e721b69"
                    ]
                },
                {
                    "command": [
                        "apply le_succ_l in IHp.",
                        "VernacExtend",
                        "0417a10397d1760718eed4cae1f437879834effa"
                    ]
                },
                {
                    "command": [
                        "now apply le_succ_l.",
                        "VernacExtend",
                        "244c34558e9f448524071f26943611ce00fb4ec6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "size_le",
            "line_nb": 1018,
            "steps": [
                {
                    "command": [
                        "induction p; simpl; try rewrite pow_succ_r; try easy.",
                        "VernacExtend",
                        "ea8baa5261d068dda98781f6a2c9c2e32e721b69"
                    ]
                },
                {
                    "command": [
                        "apply mul_le_mono_l.",
                        "VernacExtend",
                        "8f1089037c6f9bde5336f866ab87af0f039dfcce"
                    ]
                },
                {
                    "command": [
                        "apply le_lteq; left.",
                        "VernacExtend",
                        "a37dd297d828d06ad68a5dbc45e0bf571ab399a2"
                    ]
                },
                {
                    "command": [
                        "rewrite xI_succ_xO.",
                        "VernacExtend",
                        "66445905a24b633a3de0c69eeb6ea2e899fd98d2"
                    ]
                },
                {
                    "command": [
                        "apply lt_succ_r, IHp.",
                        "VernacExtend",
                        "71d3b8a15f596dbf567e7e4391504d1370a480b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_l",
            "line_nb": 1025,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "unfold max.",
                        "VernacExtend",
                        "11e82fad0b1b32b2f36b11c3f85e9a49f3148cba"
                    ]
                },
                {
                    "command": [
                        "case compare_spec; auto.",
                        "VernacExtend",
                        "bd9464d68f0626f6813b4a4f68f55b2b5375b7fd"
                    ]
                },
                {
                    "command": [
                        "intros H'.",
                        "VernacExtend",
                        "d7903418c9c01fda86d2cc847b39424719d50154"
                    ]
                },
                {
                    "command": [
                        "apply le_nlt in H.",
                        "VernacExtend",
                        "51b4901f0751d1a344ab8ea358bc55509d5d9c03"
                    ]
                },
                {
                    "command": [
                        "now elim H.",
                        "VernacExtend",
                        "25b0f8af2fb84c276497977e57d3240d2a987e06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_r",
            "line_nb": 1033,
            "steps": [
                {
                    "command": [
                        "unfold le, max.",
                        "VernacExtend",
                        "eceaaee01291732e1b36a2f2016a8ae8974ef88e"
                    ]
                },
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "destruct compare; easy'.",
                        "VernacExtend",
                        "9c58ca66031ca52e7ded2a67e5812d35fe76b30c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_l",
            "line_nb": 1038,
            "steps": [
                {
                    "command": [
                        "unfold le, min.",
                        "VernacExtend",
                        "4a32463b97d6de13a2947e315ac7915d1f1c294d"
                    ]
                },
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "destruct compare; easy'.",
                        "VernacExtend",
                        "9c58ca66031ca52e7ded2a67e5812d35fe76b30c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_r",
            "line_nb": 1043,
            "steps": [
                {
                    "command": [
                        "intros x y H.",
                        "VernacExtend",
                        "c7ef450aa0313460779fba50c0edf4486e0c7fe4"
                    ]
                },
                {
                    "command": [
                        "unfold min.",
                        "VernacExtend",
                        "b6006e3c244fd992d89eb4e6cdbb7d3d95bb069c"
                    ]
                },
                {
                    "command": [
                        "case compare_spec; auto.",
                        "VernacExtend",
                        "bd9464d68f0626f6813b4a4f68f55b2b5375b7fd"
                    ]
                },
                {
                    "command": [
                        "intros H'.",
                        "VernacExtend",
                        "d7903418c9c01fda86d2cc847b39424719d50154"
                    ]
                },
                {
                    "command": [
                        "apply le_nlt in H.",
                        "VernacExtend",
                        "51b4901f0751d1a344ab8ea358bc55509d5d9c03"
                    ]
                },
                {
                    "command": [
                        "now elim H'.",
                        "VernacExtend",
                        "6a215a86f9bf4801c5a934be3595acd159bddbc5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_1_l",
            "line_nb": 1053,
            "steps": [
                {
                    "command": [
                        "unfold max.",
                        "VernacExtend",
                        "11e82fad0b1b32b2f36b11c3f85e9a49f3148cba"
                    ]
                },
                {
                    "command": [
                        "case compare_spec; auto.",
                        "VernacExtend",
                        "bd9464d68f0626f6813b4a4f68f55b2b5375b7fd"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply lt_nle in H.",
                        "VernacExtend",
                        "73f6efc5c8adb36cbf3f173cf0aa0c83a9ddd2d6"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "apply le_1_l.",
                        "VernacExtend",
                        "2b845cb26e9613f4263a4694b1fbf341e7f9cfb6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_1_r",
            "line_nb": 1061,
            "steps": [
                {
                    "command": [
                        "rewrite max_comm.",
                        "VernacExtend",
                        "df34ed9771ede93bdbbfce11ddbbb04360f84148"
                    ]
                },
                {
                    "command": [
                        "apply max_1_l.",
                        "VernacExtend",
                        "237523964f3bb5f45bc1a62bb6ffdc137f2c64a1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_1_l",
            "line_nb": 1065,
            "steps": [
                {
                    "command": [
                        "unfold min.",
                        "VernacExtend",
                        "b6006e3c244fd992d89eb4e6cdbb7d3d95bb069c"
                    ]
                },
                {
                    "command": [
                        "case compare_spec; auto.",
                        "VernacExtend",
                        "bd9464d68f0626f6813b4a4f68f55b2b5375b7fd"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply lt_nle in H.",
                        "VernacExtend",
                        "73f6efc5c8adb36cbf3f173cf0aa0c83a9ddd2d6"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "apply le_1_l.",
                        "VernacExtend",
                        "2b845cb26e9613f4263a4694b1fbf341e7f9cfb6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_1_r",
            "line_nb": 1073,
            "steps": [
                {
                    "command": [
                        "rewrite min_comm.",
                        "VernacExtend",
                        "310a22ace967a2820d6728675de6dd602bce110e"
                    ]
                },
                {
                    "command": [
                        "apply min_1_l.",
                        "VernacExtend",
                        "d1762491b077e50388b573ceccf5219bca4168db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_max_distr",
            "line_nb": 1077,
            "steps": [
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply max_monotone.",
                        "VernacExtend",
                        "cf26ffddc2ae8c3c05a95ba65139acc513db2fa6"
                    ]
                },
                {
                    "command": [
                        "intros x x'.",
                        "VernacExtend",
                        "a13d4de9803d6d65cdf0530f56508f371f0c7763"
                    ]
                },
                {
                    "command": [
                        "apply succ_le_mono.",
                        "VernacExtend",
                        "3b926d4b8ef6721456d01cb7a17140c83cf80225"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_min_distr",
            "line_nb": 1083,
            "steps": [
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply min_monotone.",
                        "VernacExtend",
                        "ee8b01734993daa0bf9c68c37ca83207e27572e2"
                    ]
                },
                {
                    "command": [
                        "intros x x'.",
                        "VernacExtend",
                        "a13d4de9803d6d65cdf0530f56508f371f0c7763"
                    ]
                },
                {
                    "command": [
                        "apply succ_le_mono.",
                        "VernacExtend",
                        "3b926d4b8ef6721456d01cb7a17140c83cf80225"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_max_distr_l",
            "line_nb": 1089,
            "steps": [
                {
                    "command": [
                        "apply max_monotone.",
                        "VernacExtend",
                        "cf26ffddc2ae8c3c05a95ba65139acc513db2fa6"
                    ]
                },
                {
                    "command": [
                        "intros x x'.",
                        "VernacExtend",
                        "a13d4de9803d6d65cdf0530f56508f371f0c7763"
                    ]
                },
                {
                    "command": [
                        "apply add_le_mono_l.",
                        "VernacExtend",
                        "64c279615122d28dd9f063fc771b140427353b42"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_max_distr_r",
            "line_nb": 1094,
            "steps": [
                {
                    "command": [
                        "rewrite 3 (add_comm _ p).",
                        "VernacExtend",
                        "3ca1956a3ed709c49c5359c080462bb047e6aaac"
                    ]
                },
                {
                    "command": [
                        "apply add_max_distr_l.",
                        "VernacExtend",
                        "862ca26a5cba16b695c204f68a2b06bbb05e4921"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_min_distr_l",
            "line_nb": 1098,
            "steps": [
                {
                    "command": [
                        "apply min_monotone.",
                        "VernacExtend",
                        "ee8b01734993daa0bf9c68c37ca83207e27572e2"
                    ]
                },
                {
                    "command": [
                        "intros x x'.",
                        "VernacExtend",
                        "a13d4de9803d6d65cdf0530f56508f371f0c7763"
                    ]
                },
                {
                    "command": [
                        "apply add_le_mono_l.",
                        "VernacExtend",
                        "64c279615122d28dd9f063fc771b140427353b42"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_min_distr_r",
            "line_nb": 1103,
            "steps": [
                {
                    "command": [
                        "rewrite 3 (add_comm _ p).",
                        "VernacExtend",
                        "3ca1956a3ed709c49c5359c080462bb047e6aaac"
                    ]
                },
                {
                    "command": [
                        "apply add_min_distr_l.",
                        "VernacExtend",
                        "643aefbea590922939a4aec88633bdf68654c23a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_max_distr_l",
            "line_nb": 1107,
            "steps": [
                {
                    "command": [
                        "apply max_monotone.",
                        "VernacExtend",
                        "cf26ffddc2ae8c3c05a95ba65139acc513db2fa6"
                    ]
                },
                {
                    "command": [
                        "intros x x'.",
                        "VernacExtend",
                        "a13d4de9803d6d65cdf0530f56508f371f0c7763"
                    ]
                },
                {
                    "command": [
                        "apply mul_le_mono_l.",
                        "VernacExtend",
                        "8f1089037c6f9bde5336f866ab87af0f039dfcce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_max_distr_r",
            "line_nb": 1112,
            "steps": [
                {
                    "command": [
                        "rewrite 3 (mul_comm _ p).",
                        "VernacExtend",
                        "8979c48200e225e21fa8ab8630456a4110b2a99d"
                    ]
                },
                {
                    "command": [
                        "apply mul_max_distr_l.",
                        "VernacExtend",
                        "d394c44b97ffb3be3e9da6dd99f142b07b70cbca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_min_distr_l",
            "line_nb": 1116,
            "steps": [
                {
                    "command": [
                        "apply min_monotone.",
                        "VernacExtend",
                        "ee8b01734993daa0bf9c68c37ca83207e27572e2"
                    ]
                },
                {
                    "command": [
                        "intros x x'.",
                        "VernacExtend",
                        "a13d4de9803d6d65cdf0530f56508f371f0c7763"
                    ]
                },
                {
                    "command": [
                        "apply mul_le_mono_l.",
                        "VernacExtend",
                        "8f1089037c6f9bde5336f866ab87af0f039dfcce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_min_distr_r",
            "line_nb": 1121,
            "steps": [
                {
                    "command": [
                        "rewrite 3 (mul_comm _ p).",
                        "VernacExtend",
                        "8979c48200e225e21fa8ab8630456a4110b2a99d"
                    ]
                },
                {
                    "command": [
                        "apply mul_min_distr_l.",
                        "VernacExtend",
                        "72ba2344122df91bdae2d7072565b3d669ea8fd2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iter_op_succ",
            "line_nb": 1125,
            "steps": [
                {
                    "command": [
                        "induction p; simpl; intros; trivial.",
                        "VernacExtend",
                        "65d9253fd0a1e598f3aa8f780fdbecd1d5db5c7c"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply IHp.",
                        "VernacExtend",
                        "246d34d2490ae6e017eeeee5e330f76082b9a564"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_nat_succ",
            "line_nb": 1130,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHn.",
                        "VernacExtend",
                        "69a05b29042c8d8517dcdaf6102502fc203ee4a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pred_of_succ_nat",
            "line_nb": 1137,
            "steps": [
                {
                    "command": [
                        "destruct n.",
                        "VernacExtend",
                        "1582bf847770c098bee882393a48b146dcc37a8c"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "simpl pred.",
                        "VernacExtend",
                        "d2acc4bb0f04a14294a6eba01a87bc74aed7832f"
                    ]
                },
                {
                    "command": [
                        "rewrite pred_succ.",
                        "VernacExtend",
                        "05abf6f61387d00a9b4dc0ffaf430b3708aef0fb"
                    ]
                },
                {
                    "command": [
                        "apply of_nat_succ.",
                        "VernacExtend",
                        "38a3c8f7545bffd4440d773f87aef2d24fc48fc5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_of_nat",
            "line_nb": 1144,
            "steps": [
                {
                    "command": [
                        "rewrite of_nat_succ.",
                        "VernacExtend",
                        "ec790d45c7ae656ca2af3737ebc6475a5b9cf560"
                    ]
                },
                {
                    "command": [
                        "destruct n; trivial.",
                        "VernacExtend",
                        "075df2df6f50c3b92752b2e357bd92e8caf75e9c"
                    ]
                },
                {
                    "command": [
                        "now destruct 1.",
                        "VernacExtend",
                        "599cf8488dce43cedbb3491ca78a34441bf2a1bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtrem_step_spec",
            "line_nb": 1150,
            "steps": [
                {
                    "command": [
                        "intros Hf Hg [ s _ -> | s r _ -> Hr ].",
                        "VernacExtend",
                        "8c2d1eb48f663a0d3f9032d47d7aade77b25ef3e"
                    ]
                },
                {
                    "command": [
                        "unfold sqrtrem_step.",
                        "VernacExtend",
                        "12a37ea51cee5d93a64d9692a2b6a60e3f5c1fdd"
                    ]
                },
                {
                    "command": [
                        "destruct Hf,Hg; subst; simpl; constructor; now rewrite ?square_xO.",
                        "VernacExtend",
                        "00774e68016e68cf3835154cc934aa4e1ea09aa4"
                    ]
                },
                {
                    "command": [
                        "assert (Hfg : forall p q, g (f (p+q)) = p~0~0 + g (f q)) by (intros; destruct Hf, Hg; now subst).",
                        "VernacExtend",
                        "71b4a037cc09190157e0a41139d137e1869e8b7e"
                    ]
                },
                {
                    "command": [
                        "unfold sqrtrem_step, leb.",
                        "VernacExtend",
                        "927f601b9ddbde83ffddf596dd966d121d22531c"
                    ]
                },
                {
                    "command": [
                        "case compare_spec; [intros EQ | intros LT | intros GT].",
                        "VernacExtend",
                        "b7cce6666cffde149a74f3b5ff7df5cb93449b3f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ, sub_mask_diag.",
                        "VernacExtend",
                        "ed47f9bb616473129700e4a98195454f8c8fa14c"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "destruct Hg; subst g; destr_eq EQ.",
                        "VernacExtend",
                        "f7859b57875bc90b1da68d9bd268e1d55f0a8eed"
                    ]
                },
                {
                    "command": [
                        "destruct Hf; subst f; destr_eq EQ.",
                        "VernacExtend",
                        "87ffc7886766c62cf1d2766f38c0adef34870bb5"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "now rewrite square_xI.",
                        "VernacExtend",
                        "2a81803f76970dbf78a05d1fd1ff6b9eae29b39d"
                    ]
                },
                {
                    "command": [
                        "destruct (sub_mask_pos' _ _ LT) as (y & -> & H).",
                        "VernacExtend",
                        "d4e9b7d2616efee6585238dbb2371bf3be0e4607"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hfg, <- H.",
                        "VernacExtend",
                        "ec33aadc10ead9021fd3a821cd9a7aeb29e9a038"
                    ]
                },
                {
                    "command": [
                        "now rewrite square_xI, add_assoc.",
                        "VernacExtend",
                        "84dee4c053f41866c0b7c35fb022eb6ee1da50dd"
                    ]
                },
                {
                    "command": [
                        "clear Hfg.",
                        "VernacExtend",
                        "e001e5a28a7284767f506e4956713dd7c299a92d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- lt_succ_r in Hr.",
                        "VernacExtend",
                        "99f3d3fe2405ab759022fa1b7a0a648a0bfba330"
                    ]
                },
                {
                    "command": [
                        "change (r < s~1) in Hr.",
                        "VernacExtend",
                        "c500ebcf58d6621d59aaf02e45934e8733e3fac3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- lt_succ_r, (add_lt_mono_l (s~0~1)), H.",
                        "VernacExtend",
                        "2a500d6daa8b2cd59f0d2117e363ad2a8d5b994a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite add_carry_spec, add_diag.",
                        "VernacExtend",
                        "140a202a839101d2f129142a2a5f9f6399c9e80e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct Hf,Hg; subst; red; simpl_compare; now rewrite Hr.",
                        "VernacExtend",
                        "f09d3da36d037a5e26a6ca9945a435e77868f8af"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hfg, square_xO.",
                        "VernacExtend",
                        "bb8945cad770ee9efbe07dc3dd06bdd1874d5e89"
                    ]
                },
                {
                    "command": [
                        "apply lt_succ_r, GT.",
                        "VernacExtend",
                        "0dd05358bdaac2f38a7858ba771a6f5faa6061df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrtrem_spec",
            "line_nb": 1179,
            "steps": [
                {
                    "command": [
                        "revert p.",
                        "VernacExtend",
                        "99815a0b7d504dee9d5300bdf09b690871b7d2ba"
                    ]
                },
                {
                    "command": [
                        "fix sqrtrem_spec 1.",
                        "VernacExtend",
                        "161b723f0323a20f0c722a2310a690307b87fb06"
                    ]
                },
                {
                    "command": [
                        "destruct p; try destruct p; try (constructor; easy); apply sqrtrem_step_spec; auto.",
                        "VernacExtend",
                        "ffcbd77b6256bf7bd39fd7c0bd3fdcbc6f6e03fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_spec",
            "line_nb": 1184,
            "steps": [
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (H:=sqrtrem_spec p).",
                        "VernacExtend",
                        "c52da6a607a9785ec196dea2ff73c4e058dac892"
                    ]
                },
                {
                    "command": [
                        "unfold sqrt in *.",
                        "VernacExtend",
                        "189ab80408ce4de399a604f1639fb118eefe211d"
                    ]
                },
                {
                    "command": [
                        "destruct sqrtrem as (s,rm); simpl.",
                        "VernacExtend",
                        "8234962a7f2c73d92ae0c95ba06521eeb009934e"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H; subst.",
                        "VernacExtend",
                        "d0c38074d654f42fdcaa6d666bd5a0d262e48f47"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply mul_lt_mono; apply lt_succ_diag_r.",
                        "VernacExtend",
                        "10f3f95d7d1a42b6cb7decf9ba5e4a3b8e744b93"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_incl, lt_add_r.",
                        "VernacExtend",
                        "0cfb5cade2235392de45528e490a1aeef9a3166c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_1_l, mul_add_distr_r, !mul_add_distr_l, !mul_1_r, !mul_1_l.",
                        "VernacExtend",
                        "b1ed240e03068913a21693b29dda80ae4245ff30"
                    ]
                },
                {
                    "command": [
                        "rewrite add_assoc, (add_comm _ r).",
                        "VernacExtend",
                        "7dae4aeb12f7c2487d5ad212752315b5ddff1cec"
                    ]
                },
                {
                    "command": [
                        "apply add_lt_mono_r.",
                        "VernacExtend",
                        "23044fb6b332f3c89ff7aee402ebd81391f75fe5"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- add_assoc, add_diag, add_1_l, lt_succ_r.",
                        "VernacExtend",
                        "c2fe46a947158b02e1179c7a041dfad665e22f85"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_add_cancel_l",
            "line_nb": 1200,
            "steps": [
                {
                    "command": [
                        "intros (s,Hs) (t,Ht).",
                        "VernacExtend",
                        "1d69a61a5a17fb4685e852858d9c01dbf55e88b0"
                    ]
                },
                {
                    "command": [
                        "exists (t-s).",
                        "VernacExtend",
                        "e2a5368a0b651ef652fb07c0f348b10ff9571d5f"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_sub_distr_r.",
                        "VernacExtend",
                        "d9e519c7003bd1e4c305762f83300a9c98c8ad47"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hs, <- Ht.",
                        "VernacExtend",
                        "0850374d5b9b0642a96a61d55be19b0d8c30f5bb"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply add_sub.",
                        "VernacExtend",
                        "08e2ad70532d616faa2ee66112da92e3cb1de6f2"
                    ]
                },
                {
                    "command": [
                        "apply mul_lt_mono_r with p.",
                        "VernacExtend",
                        "f78e4df66066043b1b0e2a50d66625a7ca7ddfe4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hs, <- Ht, add_comm.",
                        "VernacExtend",
                        "c34eb0e91e82c9caedafd8a9e8751ccd4b192ce0"
                    ]
                },
                {
                    "command": [
                        "apply lt_add_r.",
                        "VernacExtend",
                        "e0bb9e1915ba69a811604e481e6dd832e1686316"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_xO_xI",
            "line_nb": 1211,
            "steps": [
                {
                    "command": [
                        "intros (s,Hs) (t,Ht).",
                        "VernacExtend",
                        "1d69a61a5a17fb4685e852858d9c01dbf55e88b0"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "destruct s; try easy.",
                        "VernacExtend",
                        "bef7145c8cececed6b4f2b3e4567a40e1d6560e6"
                    ]
                },
                {
                    "command": [
                        "simpl in Hs.",
                        "VernacExtend",
                        "30c051fd79e7a27586cd46f2a6aa9cc6082f7e26"
                    ]
                },
                {
                    "command": [
                        "destr_eq Hs.",
                        "VernacExtend",
                        "be1e3738d5d6938e3c0b6df3817cad7b4f2bb79d"
                    ]
                },
                {
                    "command": [
                        "now exists s.",
                        "VernacExtend",
                        "394cfd4adb900abc221a72dcba642ddc79a76b22"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_xO_r in Ht; discriminate.",
                        "VernacExtend",
                        "11e55e22141e7aabf6d156a13257a348a9db2ec5"
                    ]
                },
                {
                    "command": [
                        "exists q; now rewrite mul_1_r.",
                        "VernacExtend",
                        "d8a154f5a1ef81a83e855a9ba231e567c07f1afb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_xO_xO",
            "line_nb": 1221,
            "steps": [
                {
                    "command": [
                        "split; intros (r,H); simpl in *.",
                        "VernacExtend",
                        "e90f4c9dcabc8c50569a294b68166dcc1757acb4"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_xO_r in H.",
                        "VernacExtend",
                        "0395c0453c6336dc664d8c46ff24193aa063275d"
                    ]
                },
                {
                    "command": [
                        "destr_eq H.",
                        "VernacExtend",
                        "0e67e97f47012c663fa7bc2ed1cc74f793295187"
                    ]
                },
                {
                    "command": [
                        "now exists r.",
                        "VernacExtend",
                        "def9e683686351666c2c2728e608a53ca4e6093c"
                    ]
                },
                {
                    "command": [
                        "exists r; simpl.",
                        "VernacExtend",
                        "ec7126051e46c8a2905b42d0fc07967532f39c3f"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_xO_r.",
                        "VernacExtend",
                        "a44bbbb97094ee329106b326da216f4bea82ae54"
                    ]
                },
                {
                    "command": [
                        "f_equal; auto.",
                        "VernacExtend",
                        "8016959cfe83d1ba3fdad91954454045f7af1d22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_mul_l",
            "line_nb": 1230,
            "steps": [
                {
                    "command": [
                        "intros (s,H).",
                        "VernacExtend",
                        "87724be53713a04f37042a8c78ee8579e236ea0f"
                    ]
                },
                {
                    "command": [
                        "exists (s*r).",
                        "VernacExtend",
                        "99e53bf9895b5dada5d8e423bfd3454797c8627d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mul_assoc, (mul_comm r p), mul_assoc.",
                        "VernacExtend",
                        "ae2bb4c9eb460935839afa2864b0825e5189e096"
                    ]
                },
                {
                    "command": [
                        "now f_equal.",
                        "VernacExtend",
                        "523c8bb1ba392fd7c541cd8a77c609b310d41f22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_mul_r",
            "line_nb": 1236,
            "steps": [
                {
                    "command": [
                        "rewrite mul_comm.",
                        "VernacExtend",
                        "5f0fb0765ec04101790f2b78062bf5490bbe5e03"
                    ]
                },
                {
                    "command": [
                        "apply divide_mul_l.",
                        "VernacExtend",
                        "774b2877d45841d045c373091477d3d536314775"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ggcdn_gcdn",
            "line_nb": 1240,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "destruct a, b; simpl; auto; try case compare_spec; simpl; trivial; rewrite <- IHn; destruct ggcdn as (g,(u,v)); simpl; auto.",
                        "VernacExtend",
                        "a56eddb034f234544854d2041c3088d41ab6b770"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ggcd_gcd",
            "line_nb": 1245,
            "steps": [
                {
                    "command": [
                        "unfold ggcd, gcd.",
                        "VernacExtend",
                        "eaa5115e567ddfc03eff3e991b756ac4dedc10cb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply ggcdn_gcdn.",
                        "VernacExtend",
                        "e2fcd33b107cbc5413d653a03225bec4cc5493b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ggcdn_correct_divisors",
            "line_nb": 1251,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "destruct a, b; simpl; auto; try case compare_spec; try destr_pggcdn IHn.",
                        "VernacExtend",
                        "52a4fd1d00a45a5bb0dd7ce1857bd8e4554c963a"
                    ]
                },
                {
                    "command": [
                        "intros ->.",
                        "VernacExtend",
                        "e8af3665779d92274caf81949b4a0e6232d89ea7"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_comm.",
                        "VernacExtend",
                        "e381ca9335c310c57051601bf6f800b499d27dfd"
                    ]
                },
                {
                    "command": [
                        "intros (H',H) LT; split; auto.",
                        "VernacExtend",
                        "3d0fa0611a18a8084122621e34b1060c3bb636b2"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_add_distr_l, mul_xO_r, <- H, <- H'.",
                        "VernacExtend",
                        "1cf8e406e06d100867eb017ff57731251a2b874f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm.",
                        "VernacExtend",
                        "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
                    ]
                },
                {
                    "command": [
                        "now apply sub_add.",
                        "VernacExtend",
                        "d6b90c81e21615a99fd7fde4d1cd2a9a79898ee9"
                    ]
                },
                {
                    "command": [
                        "intros (H',H) LT; split; auto.",
                        "VernacExtend",
                        "3d0fa0611a18a8084122621e34b1060c3bb636b2"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_add_distr_l, mul_xO_r, <- H, <- H'.",
                        "VernacExtend",
                        "1cf8e406e06d100867eb017ff57731251a2b874f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm.",
                        "VernacExtend",
                        "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
                    ]
                },
                {
                    "command": [
                        "now apply sub_add.",
                        "VernacExtend",
                        "d6b90c81e21615a99fd7fde4d1cd2a9a79898ee9"
                    ]
                },
                {
                    "command": [
                        "intros (H,H'); split; auto.",
                        "VernacExtend",
                        "5b86391eb4783202f32047b9cf5de15212d96278"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_xO_r, H'; auto.",
                        "VernacExtend",
                        "a54ccd0009cc77273e2044ed88d4a13e11791ec8"
                    ]
                },
                {
                    "command": [
                        "intros (H,H'); split; auto.",
                        "VernacExtend",
                        "5b86391eb4783202f32047b9cf5de15212d96278"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_xO_r, H; auto.",
                        "VernacExtend",
                        "cb264cc9a4fba2095e22bf18148daee90cd01d75"
                    ]
                },
                {
                    "command": [
                        "intros (H,H'); split; subst; auto.",
                        "VernacExtend",
                        "ef235114def1b3dc30972b3f677769f4061e27d1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ggcd_correct_divisors",
            "line_nb": 1277,
            "steps": [
                {
                    "command": [
                        "unfold ggcd.",
                        "VernacExtend",
                        "4e31d35f3ff978cb45055c2f7688cd92d7665c70"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply ggcdn_correct_divisors.",
                        "VernacExtend",
                        "a4c1911a53e5747d1ba876ebb2e59a73a35bf5b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_divide_l",
            "line_nb": 1282,
            "steps": [
                {
                    "command": [
                        "intros a b.",
                        "VernacExtend",
                        "8c4941fda9d591147c446ef6e06d248ec0e6bf7a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ggcd_gcd.",
                        "VernacExtend",
                        "af8fe3aa4e3b8cec9dff021772fb4d255806993f"
                    ]
                },
                {
                    "command": [
                        "generalize (ggcd_correct_divisors a b).",
                        "VernacExtend",
                        "596110c31b3f951d5323976537ebf9bf70a545d6"
                    ]
                },
                {
                    "command": [
                        "destruct ggcd as (g,(aa,bb)); simpl.",
                        "VernacExtend",
                        "d7905ef92137f67e94c97b87557d36066c22301a"
                    ]
                },
                {
                    "command": [
                        "intros (H,_).",
                        "VernacExtend",
                        "5d7f528c0a50c9774977a893ac2a2ce4be26b8cc"
                    ]
                },
                {
                    "command": [
                        "exists aa.",
                        "VernacExtend",
                        "a88576544a563e6630825c1a0fed1d6dd0fa2990"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_comm.",
                        "VernacExtend",
                        "e381ca9335c310c57051601bf6f800b499d27dfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_divide_r",
            "line_nb": 1291,
            "steps": [
                {
                    "command": [
                        "intros a b.",
                        "VernacExtend",
                        "8c4941fda9d591147c446ef6e06d248ec0e6bf7a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ggcd_gcd.",
                        "VernacExtend",
                        "af8fe3aa4e3b8cec9dff021772fb4d255806993f"
                    ]
                },
                {
                    "command": [
                        "generalize (ggcd_correct_divisors a b).",
                        "VernacExtend",
                        "596110c31b3f951d5323976537ebf9bf70a545d6"
                    ]
                },
                {
                    "command": [
                        "destruct ggcd as (g,(aa,bb)); simpl.",
                        "VernacExtend",
                        "d7905ef92137f67e94c97b87557d36066c22301a"
                    ]
                },
                {
                    "command": [
                        "intros (_,H).",
                        "VernacExtend",
                        "25f6a2cd1cb0bd6a2f0d7abf0ed531ec59abb9ee"
                    ]
                },
                {
                    "command": [
                        "exists bb.",
                        "VernacExtend",
                        "87320a0804a94fddefae4762bc46aafc3efc88f8"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_comm.",
                        "VernacExtend",
                        "e381ca9335c310c57051601bf6f800b499d27dfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcdn_greatest",
            "line_nb": 1300,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "destruct a, b; simpl; inversion 1.",
                        "VernacExtend",
                        "ef3d22a9e68df0087debfddd22955aa2219ba29c"
                    ]
                },
                {
                    "command": [
                        "destruct a, b; simpl; try case compare_spec; simpl; auto.",
                        "VernacExtend",
                        "eb9b5d47954f2f028e9d23343f66eb1b5d14caf6"
                    ]
                },
                {
                    "command": [
                        "intros LT LE p Hp1 Hp2.",
                        "VernacExtend",
                        "fe916d88767006bd963c243be0e4c4e6aa4262da"
                    ]
                },
                {
                    "command": [
                        "apply IHn; clear IHn; trivial.",
                        "VernacExtend",
                        "30d1a98c856408e2f4b9e804d653b098bfc9230d"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n in LE.",
                        "VernacExtend",
                        "4d45a4e613aaca8b923f759bb22ce60e93f840b4"
                    ]
                },
                {
                    "command": [
                        "eapply Le.le_trans; [|eapply LE].",
                        "VernacExtend",
                        "cc0a578656d5a038f4d84bc30d746246ecb8e83c"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm, <- plus_n_Sm, <- plus_Sn_m.",
                        "VernacExtend",
                        "db429b142c06d71542d124b0c4271cd61d113942"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat; trivial.",
                        "VernacExtend",
                        "4d8f81e2dec8561e5caafc9b43f02dd52cf35a5f"
                    ]
                },
                {
                    "command": [
                        "apply size_nat_monotone, sub_decr, LT.",
                        "VernacExtend",
                        "966cdb519e0a53f184b18a3cc5e398fa94117a91"
                    ]
                },
                {
                    "command": [
                        "apply divide_xO_xI with a; trivial.",
                        "VernacExtend",
                        "d1b7e4bc1c7f33df7e86645e775491365e10b7af"
                    ]
                },
                {
                    "command": [
                        "apply (divide_add_cancel_l p _ a~1); trivial.",
                        "VernacExtend",
                        "c32cb1ccfb7ad3df009a14100ed55650021617a1"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- sub_xI_xI, sub_add.",
                        "VernacExtend",
                        "87efa09fc676cbf3eea40e2e5b1b9aed4bbfdd2f"
                    ]
                },
                {
                    "command": [
                        "intros LT LE p Hp1 Hp2.",
                        "VernacExtend",
                        "fe916d88767006bd963c243be0e4c4e6aa4262da"
                    ]
                },
                {
                    "command": [
                        "apply IHn; clear IHn; trivial.",
                        "VernacExtend",
                        "30d1a98c856408e2f4b9e804d653b098bfc9230d"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n in LE.",
                        "VernacExtend",
                        "4d45a4e613aaca8b923f759bb22ce60e93f840b4"
                    ]
                },
                {
                    "command": [
                        "eapply Le.le_trans; [|eapply LE].",
                        "VernacExtend",
                        "cc0a578656d5a038f4d84bc30d746246ecb8e83c"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat; trivial.",
                        "VernacExtend",
                        "4d8f81e2dec8561e5caafc9b43f02dd52cf35a5f"
                    ]
                },
                {
                    "command": [
                        "apply size_nat_monotone, sub_decr, LT.",
                        "VernacExtend",
                        "966cdb519e0a53f184b18a3cc5e398fa94117a91"
                    ]
                },
                {
                    "command": [
                        "apply divide_xO_xI with b; trivial.",
                        "VernacExtend",
                        "5701971893b07623117f570fcc77249b55ea3614"
                    ]
                },
                {
                    "command": [
                        "apply (divide_add_cancel_l p _ b~1); trivial.",
                        "VernacExtend",
                        "5d5602345f5cb056df09a9db02d0952aa24a886b"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- sub_xI_xI, sub_add.",
                        "VernacExtend",
                        "87efa09fc676cbf3eea40e2e5b1b9aed4bbfdd2f"
                    ]
                },
                {
                    "command": [
                        "intros LE p Hp1 Hp2.",
                        "VernacExtend",
                        "9fa8d8f2643ca7b93f777ee1c43e02436682b361"
                    ]
                },
                {
                    "command": [
                        "apply IHn; clear IHn; trivial.",
                        "VernacExtend",
                        "30d1a98c856408e2f4b9e804d653b098bfc9230d"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n in LE.",
                        "VernacExtend",
                        "4d45a4e613aaca8b923f759bb22ce60e93f840b4"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite plus_n_Sm.",
                        "VernacExtend",
                        "65bc77de7ab07daa65931fbfb577b76979859436"
                    ]
                },
                {
                    "command": [
                        "apply divide_xO_xI with a; trivial.",
                        "VernacExtend",
                        "d1b7e4bc1c7f33df7e86645e775491365e10b7af"
                    ]
                },
                {
                    "command": [
                        "intros LE p Hp1 Hp2.",
                        "VernacExtend",
                        "9fa8d8f2643ca7b93f777ee1c43e02436682b361"
                    ]
                },
                {
                    "command": [
                        "apply IHn; clear IHn; trivial.",
                        "VernacExtend",
                        "30d1a98c856408e2f4b9e804d653b098bfc9230d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now apply le_S_n.",
                        "VernacExtend",
                        "172d1d429f1fcfbbf2a7810e3e9265685ea093bc"
                    ]
                },
                {
                    "command": [
                        "apply divide_xO_xI with b; trivial.",
                        "VernacExtend",
                        "5701971893b07623117f570fcc77249b55ea3614"
                    ]
                },
                {
                    "command": [
                        "intros LE p Hp1 Hp2.",
                        "VernacExtend",
                        "9fa8d8f2643ca7b93f777ee1c43e02436682b361"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "change (gcdn n a b)~0 with (2*(gcdn n a b)).",
                        "VernacExtend",
                        "63b09c2623c6402b3a09309f8dcd7336d87bcf43"
                    ]
                },
                {
                    "command": [
                        "apply divide_mul_r.",
                        "VernacExtend",
                        "f4f93e8ecc80a6cc5ac3cf57a0ec9f56233cb013"
                    ]
                },
                {
                    "command": [
                        "apply IHn; clear IHn.",
                        "VernacExtend",
                        "0d3ebe9bf4537ea4007fa58beff15a86f7faa9ed"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n in LE.",
                        "VernacExtend",
                        "4d45a4e613aaca8b923f759bb22ce60e93f840b4"
                    ]
                },
                {
                    "command": [
                        "apply le_Sn_le.",
                        "VernacExtend",
                        "c0f75afdbf652aa71c225aeb9c95b55224bc6b61"
                    ]
                },
                {
                    "command": [
                        "now rewrite plus_n_Sm.",
                        "VernacExtend",
                        "65bc77de7ab07daa65931fbfb577b76979859436"
                    ]
                },
                {
                    "command": [
                        "apply divide_xO_xI with p; trivial.",
                        "VernacExtend",
                        "7522c8b7011207758282cfa9bf0138761bf27813"
                    ]
                },
                {
                    "command": [
                        "now exists 1.",
                        "VernacExtend",
                        "d45a6c3f593137737025314063e6fb7edf2088f9"
                    ]
                },
                {
                    "command": [
                        "apply divide_xO_xI with p; trivial.",
                        "VernacExtend",
                        "7522c8b7011207758282cfa9bf0138761bf27813"
                    ]
                },
                {
                    "command": [
                        "now exists 1.",
                        "VernacExtend",
                        "d45a6c3f593137737025314063e6fb7edf2088f9"
                    ]
                },
                {
                    "command": [
                        "apply divide_xO_xO.",
                        "VernacExtend",
                        "0654bf3d3c41fabdf36aa7cd3688ea4f07dce10f"
                    ]
                },
                {
                    "command": [
                        "apply IHn; clear IHn.",
                        "VernacExtend",
                        "0d3ebe9bf4537ea4007fa58beff15a86f7faa9ed"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n in LE.",
                        "VernacExtend",
                        "4d45a4e613aaca8b923f759bb22ce60e93f840b4"
                    ]
                },
                {
                    "command": [
                        "apply le_Sn_le.",
                        "VernacExtend",
                        "c0f75afdbf652aa71c225aeb9c95b55224bc6b61"
                    ]
                },
                {
                    "command": [
                        "now rewrite plus_n_Sm.",
                        "VernacExtend",
                        "65bc77de7ab07daa65931fbfb577b76979859436"
                    ]
                },
                {
                    "command": [
                        "now apply divide_xO_xO.",
                        "VernacExtend",
                        "3fbabda634728b2cd416f483c2ccd80aba4b04b1"
                    ]
                },
                {
                    "command": [
                        "now apply divide_xO_xO.",
                        "VernacExtend",
                        "3fbabda634728b2cd416f483c2ccd80aba4b04b1"
                    ]
                },
                {
                    "command": [
                        "exists (gcdn n a b)~0.",
                        "VernacExtend",
                        "65f8ccaf11af557aa15b98bf08c5283275a2a8d6"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_1_r.",
                        "VernacExtend",
                        "12e64d5128c998cd6c976dbc7b183718cf17ae45"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_greatest",
            "line_nb": 1356,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply gcdn_greatest; auto.",
                        "VernacExtend",
                        "d151230ba9c4c86d079ea53eb8b4fbd382402514"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ggcd_greatest",
            "line_nb": 1360,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (gcd_greatest a b) (ggcd_correct_divisors a b).",
                        "VernacExtend",
                        "e0cbf1a601314420a553ce57818e95d577b0812f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ggcd_gcd.",
                        "VernacExtend",
                        "af8fe3aa4e3b8cec9dff021772fb4d255806993f"
                    ]
                },
                {
                    "command": [
                        "destruct ggcd as (g,(aa,bb)); simpl.",
                        "VernacExtend",
                        "d7905ef92137f67e94c97b87557d36066c22301a"
                    ]
                },
                {
                    "command": [
                        "intros H (EQa,EQb) p Hp1 Hp2; subst.",
                        "VernacExtend",
                        "5b75173968d38519349e388dc3fa6d499b18ac7d"
                    ]
                },
                {
                    "command": [
                        "assert (H' : (g*p | g)).",
                        "VernacExtend",
                        "9961f9e7ba9bd1eafffd7cf7053192a4ce48b3f3"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "destruct Hp1 as (r,Hr).",
                        "VernacExtend",
                        "3e96cf4d9258a7f9b388da85b8763af152851046"
                    ]
                },
                {
                    "command": [
                        "exists r.",
                        "VernacExtend",
                        "6ca63eb3bc93583233e98ef7c15aab920cd0ed23"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_assoc, (mul_comm r g), <- mul_assoc, <- Hr.",
                        "VernacExtend",
                        "2e35c06acd59cb0aa8bc17f7a200798c3a3e5625"
                    ]
                },
                {
                    "command": [
                        "destruct Hp2 as (r,Hr).",
                        "VernacExtend",
                        "c198c1e4350adf186ecca11c9de2bd9c06307ddf"
                    ]
                },
                {
                    "command": [
                        "exists r.",
                        "VernacExtend",
                        "6ca63eb3bc93583233e98ef7c15aab920cd0ed23"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_assoc, (mul_comm r g), <- mul_assoc, <- Hr.",
                        "VernacExtend",
                        "2e35c06acd59cb0aa8bc17f7a200798c3a3e5625"
                    ]
                },
                {
                    "command": [
                        "destruct H' as (q,H').",
                        "VernacExtend",
                        "517f63b96d7d51190f7480b9cef196af1b738117"
                    ]
                },
                {
                    "command": [
                        "rewrite (mul_comm g p), mul_assoc in H'.",
                        "VernacExtend",
                        "de2b872211daaa5991a2703a7b869e230984504b"
                    ]
                },
                {
                    "command": [
                        "apply mul_eq_1 with q; rewrite mul_comm.",
                        "VernacExtend",
                        "98ec9d81bc3436fa4c7b7d60aa650d7437510646"
                    ]
                },
                {
                    "command": [
                        "now apply mul_reg_r with g.",
                        "VernacExtend",
                        "1c17f6ea093198a210a1d034890abbb8d2699d71"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Peqb_true_eq",
            "line_nb": 1578,
            "steps": [
                {
                    "command": [
                        "apply Pos.eqb_eq.",
                        "VernacExtend",
                        "095fe63dd7f87e8af9997ad5c294c9443cb412ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pcompare_eq_Gt",
            "line_nb": 1581,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pminus_mask_Gt",
            "line_nb": 1596,
            "steps": [
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "apply Pos.gt_lt in H.",
                        "VernacExtend",
                        "196a6e7b81daf2e83a66d3ba628589bd5135289c"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.sub_mask_pos p q H) as (r & U).",
                        "VernacExtend",
                        "d0ccca4ad8618e5c7fa9c358872e2fd6e4de6d60"
                    ]
                },
                {
                    "command": [
                        "exists r.",
                        "VernacExtend",
                        "6ca63eb3bc93583233e98ef7c15aab920cd0ed23"
                    ]
                },
                {
                    "command": [
                        "repeat split; trivial.",
                        "VernacExtend",
                        "060692b05c8d85062072ae8d30e5549bb92445ef"
                    ]
                },
                {
                    "command": [
                        "now apply Pos.sub_mask_pos_iff.",
                        "VernacExtend",
                        "8de572bea6649051bb9979839185534caa37edf6"
                    ]
                },
                {
                    "command": [
                        "destruct (Pos.eq_dec r 1) as [EQ|NE]; [now left|right].",
                        "VernacExtend",
                        "12ab8b8bad0402af7b010ac3802ecf31f6f1ffe8"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.sub_mask_carry_spec, U.",
                        "VernacExtend",
                        "8bb9f594263b8ad9b945cb0edacdc68af8ace391"
                    ]
                },
                {
                    "command": [
                        "destruct r; trivial.",
                        "VernacExtend",
                        "068219a028147b8fbb4aa44aecdc9d88d3fd0ae5"
                    ]
                },
                {
                    "command": [
                        "now elim NE.",
                        "VernacExtend",
                        "c223569ae611340ca95bfa1fa22df0387d58a4cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pplus_minus",
            "line_nb": 1608,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos.add_comm.",
                        "VernacExtend",
                        "4f794b32aa99f040ef36918dd1a14806df118107"
                    ]
                },
                {
                    "command": [
                        "now apply Pos.sub_add, Pos.gt_lt.",
                        "VernacExtend",
                        "3d95016a46383224cd51fa1b5eb25e9e56519f22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Dcompare",
            "line_nb": 1613,
            "steps": [
                {
                    "command": [
                        "destruct r; auto.",
                        "VernacExtend",
                        "6b0638c1f1af30a47e3dec406faad68b57c27339"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}