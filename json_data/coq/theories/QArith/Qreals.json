{
    "filename": "theories/QArith/Qreals.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export Rbase.",
            "VernacRequire",
            "3fd8d1f1b1af24013a3cf704f0c7d9d08121ee75"
        ],
        [
            "Require Export QArith_base.",
            "VernacRequire",
            "ea4ae2bf945f96b6dabeb7c89911b250833f8e71"
        ],
        [
            "Definition Q2R (x : Q) : R := (IZR (Qnum x) * / IZR (QDen x))%R.",
            "VernacDefinition",
            "2d61f755784605781bf8c4c757ebdd724f12e476"
        ],
        [
            "Lemma IZR_nz : forall p : positive, IZR (Zpos p) <> 0%R.",
            "VernacStartTheoremProof",
            "0793adcdb177711f6b74dcd1ccf74a92c3a09d7d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now apply not_O_IZR.",
            "VernacExtend",
            "908c30a6979ce36fc9ead9a9eb63481a2b500a00"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve IZR_nz Rmult_integral_contrapositive.",
            "VernacHints",
            "7edc3da04c2c9cf8bda6f137794dfa8588a255f8"
        ],
        [
            "Lemma eqR_Qeq : forall x y : Q, Q2R x = Q2R y -> x==y.",
            "VernacStartTheoremProof",
            "75dbe85eee00b00e9cb343caa24f98cd65c727e4"
        ],
        [
            "unfold Qeq, Q2R; intros (x1, x2) (y1, y2); unfold Qnum, Qden; intros.",
            "VernacExtend",
            "81bcb15abc640fdd7d4d5270a069a915168904d1"
        ],
        [
            "apply eq_IZR.",
            "VernacExtend",
            "ee733026f3770ec7d35ae5daace776ee1795288b"
        ],
        [
            "do 2 rewrite mult_IZR.",
            "VernacExtend",
            "374cd796ddc2668180fb2917a3c9fc6478fbfdc6"
        ],
        [
            "set (X1 := IZR x1) in *; assert (X2nz := IZR_nz x2); set (X2 := IZR (Zpos x2)) in *.",
            "VernacExtend",
            "526b2b0201d08347c9e27c7bde60a3b4c59e9d1a"
        ],
        [
            "set (Y1 := IZR y1) in *; assert (Y2nz := IZR_nz y2); set (Y2 := IZR (Zpos y2)) in *.",
            "VernacExtend",
            "c747e52ae92f1b705b947de14e0701ff3af0dd79"
        ],
        [
            "assert ((X2 * X1 * / X2)%R = (X2 * (Y1 * / Y2))%R).",
            "VernacExtend",
            "e3e050368538a095ef2178d42a62c1eaafbd408d"
        ],
        [
            "rewrite <- H; field; auto.",
            "VernacExtend",
            "cf4d5dcab8951211dfd01b94f3fcfc55462c7b90"
        ],
        [
            "rewrite Rinv_r_simpl_m in H0; auto; rewrite H0; field; auto.",
            "VernacExtend",
            "e3bf5597b959e981538a38e46556bb4ab6409468"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qeq_eqR : forall x y : Q, x==y -> Q2R x = Q2R y.",
            "VernacStartTheoremProof",
            "d65c96afede05eb4dd2c741586b8db3de592e8df"
        ],
        [
            "unfold Qeq, Q2R; intros (x1, x2) (y1, y2); unfold Qnum, Qden; intros.",
            "VernacExtend",
            "81bcb15abc640fdd7d4d5270a069a915168904d1"
        ],
        [
            "set (X1 := IZR x1) in *; assert (X2nz := IZR_nz x2); set (X2 := IZR (Zpos x2)) in *.",
            "VernacExtend",
            "526b2b0201d08347c9e27c7bde60a3b4c59e9d1a"
        ],
        [
            "set (Y1 := IZR y1) in *; assert (Y2nz := IZR_nz y2); set (Y2 := IZR (Zpos y2)) in *.",
            "VernacExtend",
            "c747e52ae92f1b705b947de14e0701ff3af0dd79"
        ],
        [
            "assert ((X1 * Y2)%R = (Y1 * X2)%R).",
            "VernacExtend",
            "37f220db02df29168032cdfee59e6a3418af3fd2"
        ],
        [
            "unfold X1, X2, Y1, Y2; do 2 rewrite <- mult_IZR.",
            "VernacExtend",
            "9edfc90f110c4891237ad9f0764711a62e66a986"
        ],
        [
            "apply IZR_eq; auto.",
            "VernacExtend",
            "c8df5b200664c4243302e3def3fbb97f884d504e"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "field_simplify_eq; auto.",
            "VernacExtend",
            "79e6dd9ff40dd160491d9e93961d971615393e57"
        ],
        [
            "rewrite H0; ring.",
            "VernacExtend",
            "bb51d8b4a3313a90f5bcffcfbbbf7a2c9b031a9a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rle_Qle : forall x y : Q, (Q2R x <= Q2R y)%R -> x<=y.",
            "VernacStartTheoremProof",
            "c9263eafd1399cf05214f72a9fa48558d6482352"
        ],
        [
            "unfold Qle, Q2R; intros (x1, x2) (y1, y2); unfold Qnum, Qden; intros.",
            "VernacExtend",
            "0926ebcd933728a427019dfcbb00b11ce087ce06"
        ],
        [
            "apply le_IZR.",
            "VernacExtend",
            "b9b46c6b2f4d4157bed90857db2b9c3ba33486ad"
        ],
        [
            "do 2 rewrite mult_IZR.",
            "VernacExtend",
            "374cd796ddc2668180fb2917a3c9fc6478fbfdc6"
        ],
        [
            "set (X1 := IZR x1) in *; assert (X2nz := IZR_nz x2); set (X2 := IZR (Zpos x2)) in *.",
            "VernacExtend",
            "526b2b0201d08347c9e27c7bde60a3b4c59e9d1a"
        ],
        [
            "set (Y1 := IZR y1) in *; assert (Y2nz := IZR_nz y2); set (Y2 := IZR (Zpos y2)) in *.",
            "VernacExtend",
            "c747e52ae92f1b705b947de14e0701ff3af0dd79"
        ],
        [
            "replace (X1 * Y2)%R with (X1 * / X2 * (X2 * Y2))%R; try (field; auto).",
            "VernacExtend",
            "cb23ea9d0d39360dd8df1a0c54f3d34af62ce50b"
        ],
        [
            "replace (Y1 * X2)%R with (Y1 * / Y2 * (X2 * Y2))%R; try (field; auto).",
            "VernacExtend",
            "69b4d7cec170ef3dd1e4492191ae0dabdbbb5be8"
        ],
        [
            "apply Rmult_le_compat_r; auto.",
            "VernacExtend",
            "2808e2b8cdd6614e449e94a44d2d337ed31d7518"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "now apply IZR_le.",
            "VernacExtend",
            "e7a82916d8dccd5d8e33da934cc0388f3ecc6513"
        ],
        [
            "now apply IZR_le.",
            "VernacExtend",
            "e7a82916d8dccd5d8e33da934cc0388f3ecc6513"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qle_Rle : forall x y : Q, x<=y -> (Q2R x <= Q2R y)%R.",
            "VernacStartTheoremProof",
            "7108b88b42ca27c0c3bf4ca44c124a94a365a521"
        ],
        [
            "unfold Qle, Q2R; intros (x1, x2) (y1, y2); unfold Qnum, Qden; intros.",
            "VernacExtend",
            "0926ebcd933728a427019dfcbb00b11ce087ce06"
        ],
        [
            "set (X1 := IZR x1) in *; assert (X2nz := IZR_nz x2); set (X2 := IZR (Zpos x2)) in *.",
            "VernacExtend",
            "526b2b0201d08347c9e27c7bde60a3b4c59e9d1a"
        ],
        [
            "set (Y1 := IZR y1) in *; assert (Y2nz := IZR_nz y2); set (Y2 := IZR (Zpos y2)) in *.",
            "VernacExtend",
            "c747e52ae92f1b705b947de14e0701ff3af0dd79"
        ],
        [
            "assert (X1 * Y2 <= Y1 * X2)%R.",
            "VernacExtend",
            "9e83e4f844e7ccf2fcf93850a8f3e6a1b6bac8d4"
        ],
        [
            "unfold X1, X2, Y1, Y2; do 2 rewrite <- mult_IZR.",
            "VernacExtend",
            "9edfc90f110c4891237ad9f0764711a62e66a986"
        ],
        [
            "apply IZR_le; auto.",
            "VernacExtend",
            "efb7c654cffe1026a601987ddf447d56863884b7"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "replace (X1 * / X2)%R with (X1 * Y2 * (/ X2 * / Y2))%R; try (field; auto).",
            "VernacExtend",
            "5d93837299c12bf015007384c30eebf628d788c2"
        ],
        [
            "replace (Y1 * / Y2)%R with (Y1 * X2 * (/ X2 * / Y2))%R; try (field; auto).",
            "VernacExtend",
            "93801187e3c2ee96d99c8fb98a9175fa1eff9ceb"
        ],
        [
            "apply Rmult_le_compat_r; auto.",
            "VernacExtend",
            "2808e2b8cdd6614e449e94a44d2d337ed31d7518"
        ],
        [
            "apply Rmult_le_pos; apply Rlt_le; apply Rinv_0_lt_compat.",
            "VernacExtend",
            "42e8c884bd451bb3a5ea43ed81a263e37f760507"
        ],
        [
            "now apply IZR_lt.",
            "VernacExtend",
            "c9d47a81a39cea1152090fbef526208c9e992dbd"
        ],
        [
            "now apply IZR_lt.",
            "VernacExtend",
            "c9d47a81a39cea1152090fbef526208c9e992dbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rlt_Qlt : forall x y : Q, (Q2R x < Q2R y)%R -> x<y.",
            "VernacStartTheoremProof",
            "3495cc036cb5eb15164bcb0104ec8657ad131ee8"
        ],
        [
            "unfold Qlt, Q2R; intros (x1, x2) (y1, y2); unfold Qnum, Qden; intros.",
            "VernacExtend",
            "d48433db08d0d854d70879916732a36bf67e6534"
        ],
        [
            "apply lt_IZR.",
            "VernacExtend",
            "165b941162ea1938aa71e78f57835b8df85de779"
        ],
        [
            "do 2 rewrite mult_IZR.",
            "VernacExtend",
            "374cd796ddc2668180fb2917a3c9fc6478fbfdc6"
        ],
        [
            "set (X1 := IZR x1) in *; assert (X2nz := IZR_nz x2); set (X2 := IZR (Zpos x2)) in *.",
            "VernacExtend",
            "526b2b0201d08347c9e27c7bde60a3b4c59e9d1a"
        ],
        [
            "set (Y1 := IZR y1) in *; assert (Y2nz := IZR_nz y2); set (Y2 := IZR (Zpos y2)) in *.",
            "VernacExtend",
            "c747e52ae92f1b705b947de14e0701ff3af0dd79"
        ],
        [
            "replace (X1 * Y2)%R with (X1 * / X2 * (X2 * Y2))%R; try (field; auto).",
            "VernacExtend",
            "cb23ea9d0d39360dd8df1a0c54f3d34af62ce50b"
        ],
        [
            "replace (Y1 * X2)%R with (Y1 * / Y2 * (X2 * Y2))%R; try (field; auto).",
            "VernacExtend",
            "69b4d7cec170ef3dd1e4492191ae0dabdbbb5be8"
        ],
        [
            "apply Rmult_lt_compat_r; auto.",
            "VernacExtend",
            "01fd283ec9b964e076f6025b7309bb3355d8981f"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "now apply IZR_lt.",
            "VernacExtend",
            "c9d47a81a39cea1152090fbef526208c9e992dbd"
        ],
        [
            "now apply IZR_lt.",
            "VernacExtend",
            "c9d47a81a39cea1152090fbef526208c9e992dbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Qlt_Rlt : forall x y : Q, x<y -> (Q2R x < Q2R y)%R.",
            "VernacStartTheoremProof",
            "6e3be9c66155450f3d49542807fbd186423ad79c"
        ],
        [
            "unfold Qlt, Q2R; intros (x1, x2) (y1, y2); unfold Qnum, Qden; intros.",
            "VernacExtend",
            "d48433db08d0d854d70879916732a36bf67e6534"
        ],
        [
            "set (X1 := IZR x1) in *; assert (X2nz := IZR_nz x2); set (X2 := IZR (Zpos x2)) in *.",
            "VernacExtend",
            "526b2b0201d08347c9e27c7bde60a3b4c59e9d1a"
        ],
        [
            "set (Y1 := IZR y1) in *; assert (Y2nz := IZR_nz y2); set (Y2 := IZR (Zpos y2)) in *.",
            "VernacExtend",
            "c747e52ae92f1b705b947de14e0701ff3af0dd79"
        ],
        [
            "assert (X1 * Y2 < Y1 * X2)%R.",
            "VernacExtend",
            "0ccf2d638d60d42d8c03d5cd4ab7f990c1de2f33"
        ],
        [
            "unfold X1, X2, Y1, Y2; do 2 rewrite <- mult_IZR.",
            "VernacExtend",
            "9edfc90f110c4891237ad9f0764711a62e66a986"
        ],
        [
            "apply IZR_lt; auto.",
            "VernacExtend",
            "1c1a95a8155673574cd96d480243c088854fc431"
        ],
        [
            "clear H.",
            "VernacExtend",
            "f2c5826643b985ca1b67f3433f38ccbe2735e582"
        ],
        [
            "replace (X1 * / X2)%R with (X1 * Y2 * (/ X2 * / Y2))%R; try (field; auto).",
            "VernacExtend",
            "5d93837299c12bf015007384c30eebf628d788c2"
        ],
        [
            "replace (Y1 * / Y2)%R with (Y1 * X2 * (/ X2 * / Y2))%R; try (field; auto).",
            "VernacExtend",
            "93801187e3c2ee96d99c8fb98a9175fa1eff9ceb"
        ],
        [
            "apply Rmult_lt_compat_r; auto.",
            "VernacExtend",
            "01fd283ec9b964e076f6025b7309bb3355d8981f"
        ],
        [
            "apply Rmult_lt_0_compat; apply Rinv_0_lt_compat.",
            "VernacExtend",
            "33f788ba85a18fea96b836f8881c5f79be79d07b"
        ],
        [
            "now apply IZR_lt.",
            "VernacExtend",
            "c9d47a81a39cea1152090fbef526208c9e992dbd"
        ],
        [
            "now apply IZR_lt.",
            "VernacExtend",
            "c9d47a81a39cea1152090fbef526208c9e992dbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Q2R_plus : forall x y : Q, Q2R (x+y) = (Q2R x + Q2R y)%R.",
            "VernacStartTheoremProof",
            "5f79ab7cb3a556c6449c9c8460e6f42e556ebfc0"
        ],
        [
            "unfold Qplus, Qeq, Q2R; intros (x1, x2) (y1, y2); unfold Qden, Qnum.",
            "VernacExtend",
            "ce241dc0217ba553ecb878761aeec86f61a28690"
        ],
        [
            "simpl_mult.",
            "VernacExtend",
            "8729ced2e11f022689ae4b1bd579a0858666ef7d"
        ],
        [
            "rewrite plus_IZR.",
            "VernacExtend",
            "a71980692bd855cfdb80782b4f734eba75fada3d"
        ],
        [
            "do 3 rewrite mult_IZR.",
            "VernacExtend",
            "3ab98878358f09c63dd629fe7447df983a2c93e4"
        ],
        [
            "field; auto.",
            "VernacExtend",
            "ff16f63b15b94842f53b48da2f33a086a0f90210"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Q2R_mult : forall x y : Q, Q2R (x*y) = (Q2R x * Q2R y)%R.",
            "VernacStartTheoremProof",
            "a1a5f949c846b888d81420eb47ee6d89dcbb757f"
        ],
        [
            "unfold Qmult, Qeq, Q2R; intros (x1, x2) (y1, y2); unfold Qden, Qnum.",
            "VernacExtend",
            "33911737e2fd704aed44b747f71b681f04ed8e0e"
        ],
        [
            "simpl_mult.",
            "VernacExtend",
            "8729ced2e11f022689ae4b1bd579a0858666ef7d"
        ],
        [
            "do 2 rewrite mult_IZR.",
            "VernacExtend",
            "374cd796ddc2668180fb2917a3c9fc6478fbfdc6"
        ],
        [
            "field; auto.",
            "VernacExtend",
            "ff16f63b15b94842f53b48da2f33a086a0f90210"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Q2R_opp : forall x : Q, Q2R (- x) = (- Q2R x)%R.",
            "VernacStartTheoremProof",
            "d24963d4d213bdb7c7077b1ae94d9f37944a422f"
        ],
        [
            "unfold Qopp, Qeq, Q2R; intros (x1, x2); unfold Qden, Qnum.",
            "VernacExtend",
            "ef513975f9b4c258d389d920d3baa4df867f4861"
        ],
        [
            "rewrite Ropp_Ropp_IZR.",
            "VernacExtend",
            "95ba4cc75f2b6b788ec3f7616d9b618a0d3cd184"
        ],
        [
            "field; auto.",
            "VernacExtend",
            "ff16f63b15b94842f53b48da2f33a086a0f90210"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Q2R_minus : forall x y : Q, Q2R (x-y) = (Q2R x - Q2R y)%R.",
            "VernacStartTheoremProof",
            "b9764083c7127c8489ed91e5a64251f5155e1a9e"
        ],
        [
            "unfold Qminus; intros; rewrite Q2R_plus; rewrite Q2R_opp; auto.",
            "VernacExtend",
            "0e90f79a382b93a40f5565de04773ce397707ffe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Q2R_inv : forall x : Q, ~ x==0 -> Q2R (/x) = (/ Q2R x)%R.",
            "VernacStartTheoremProof",
            "161bb3014ef6ea4fe638d3faafe3bd39b77ecddf"
        ],
        [
            "unfold Qinv, Q2R, Qeq; intros (x1, x2).",
            "VernacExtend",
            "765373231123e57d86ec6d6d88e035dd9624699e"
        ],
        [
            "case x1; unfold Qnum, Qden.",
            "VernacExtend",
            "756e7fd9025308ad4f1d563cc86cabc792c4ce4f"
        ],
        [
            "simpl; intros; elim H; trivial.",
            "VernacExtend",
            "0ecd35cb3af5a30037fa65ef521e293e4fbe26ca"
        ],
        [
            "intros; field; auto.",
            "VernacExtend",
            "399f235a984e3b8c6d08fcf23d220a4a37d7f50c"
        ],
        [
            "intros; change (IZR (Zneg x2)) with (- IZR (Zpos x2))%R; change (IZR (Zneg p)) with (- IZR (Zpos p))%R; simpl; field; repeat split; auto; auto with real.",
            "VernacExtend",
            "d6bb392a29f207d418058b830074944a0ea7ae08"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Q2R_div : forall x y : Q, ~ y==0 -> Q2R (x/y) = (Q2R x / Q2R y)%R.",
            "VernacStartTheoremProof",
            "a4096fd6e07a262bba42b8e81f2b62a951da138d"
        ],
        [
            "unfold Qdiv, Rdiv.",
            "VernacExtend",
            "e991b0b9813d597a7f9e505542215efc895ebf39"
        ],
        [
            "intros; rewrite Q2R_mult.",
            "VernacExtend",
            "26ee4f21d8f66cee288850a3b2808a8f76ca4fa8"
        ],
        [
            "rewrite Q2R_inv; auto.",
            "VernacExtend",
            "e2632964698427fcd0de835657d3ce613074ca73"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Rewrite Q2R_plus Q2R_mult Q2R_opp Q2R_minus Q2R_inv Q2R_div : q2r_simpl.",
            "VernacExtend",
            "99848eff153b63f2c47f2898c17fe28d06db4f69"
        ]
    ],
    "proofs": [
        {
            "name": "IZR_nz",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now apply not_O_IZR.",
                        "VernacExtend",
                        "908c30a6979ce36fc9ead9a9eb63481a2b500a00"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqR_Qeq",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "unfold Qeq, Q2R; intros (x1, x2) (y1, y2); unfold Qnum, Qden; intros.",
                        "VernacExtend",
                        "81bcb15abc640fdd7d4d5270a069a915168904d1"
                    ]
                },
                {
                    "command": [
                        "apply eq_IZR.",
                        "VernacExtend",
                        "ee733026f3770ec7d35ae5daace776ee1795288b"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite mult_IZR.",
                        "VernacExtend",
                        "374cd796ddc2668180fb2917a3c9fc6478fbfdc6"
                    ]
                },
                {
                    "command": [
                        "set (X1 := IZR x1) in *; assert (X2nz := IZR_nz x2); set (X2 := IZR (Zpos x2)) in *.",
                        "VernacExtend",
                        "526b2b0201d08347c9e27c7bde60a3b4c59e9d1a"
                    ]
                },
                {
                    "command": [
                        "set (Y1 := IZR y1) in *; assert (Y2nz := IZR_nz y2); set (Y2 := IZR (Zpos y2)) in *.",
                        "VernacExtend",
                        "c747e52ae92f1b705b947de14e0701ff3af0dd79"
                    ]
                },
                {
                    "command": [
                        "assert ((X2 * X1 * / X2)%R = (X2 * (Y1 * / Y2))%R).",
                        "VernacExtend",
                        "e3e050368538a095ef2178d42a62c1eaafbd408d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; field; auto.",
                        "VernacExtend",
                        "cf4d5dcab8951211dfd01b94f3fcfc55462c7b90"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_r_simpl_m in H0; auto; rewrite H0; field; auto.",
                        "VernacExtend",
                        "e3bf5597b959e981538a38e46556bb4ab6409468"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qeq_eqR",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "unfold Qeq, Q2R; intros (x1, x2) (y1, y2); unfold Qnum, Qden; intros.",
                        "VernacExtend",
                        "81bcb15abc640fdd7d4d5270a069a915168904d1"
                    ]
                },
                {
                    "command": [
                        "set (X1 := IZR x1) in *; assert (X2nz := IZR_nz x2); set (X2 := IZR (Zpos x2)) in *.",
                        "VernacExtend",
                        "526b2b0201d08347c9e27c7bde60a3b4c59e9d1a"
                    ]
                },
                {
                    "command": [
                        "set (Y1 := IZR y1) in *; assert (Y2nz := IZR_nz y2); set (Y2 := IZR (Zpos y2)) in *.",
                        "VernacExtend",
                        "c747e52ae92f1b705b947de14e0701ff3af0dd79"
                    ]
                },
                {
                    "command": [
                        "assert ((X1 * Y2)%R = (Y1 * X2)%R).",
                        "VernacExtend",
                        "37f220db02df29168032cdfee59e6a3418af3fd2"
                    ]
                },
                {
                    "command": [
                        "unfold X1, X2, Y1, Y2; do 2 rewrite <- mult_IZR.",
                        "VernacExtend",
                        "9edfc90f110c4891237ad9f0764711a62e66a986"
                    ]
                },
                {
                    "command": [
                        "apply IZR_eq; auto.",
                        "VernacExtend",
                        "c8df5b200664c4243302e3def3fbb97f884d504e"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "field_simplify_eq; auto.",
                        "VernacExtend",
                        "79e6dd9ff40dd160491d9e93961d971615393e57"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; ring.",
                        "VernacExtend",
                        "bb51d8b4a3313a90f5bcffcfbbbf7a2c9b031a9a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_Qle",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "unfold Qle, Q2R; intros (x1, x2) (y1, y2); unfold Qnum, Qden; intros.",
                        "VernacExtend",
                        "0926ebcd933728a427019dfcbb00b11ce087ce06"
                    ]
                },
                {
                    "command": [
                        "apply le_IZR.",
                        "VernacExtend",
                        "b9b46c6b2f4d4157bed90857db2b9c3ba33486ad"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite mult_IZR.",
                        "VernacExtend",
                        "374cd796ddc2668180fb2917a3c9fc6478fbfdc6"
                    ]
                },
                {
                    "command": [
                        "set (X1 := IZR x1) in *; assert (X2nz := IZR_nz x2); set (X2 := IZR (Zpos x2)) in *.",
                        "VernacExtend",
                        "526b2b0201d08347c9e27c7bde60a3b4c59e9d1a"
                    ]
                },
                {
                    "command": [
                        "set (Y1 := IZR y1) in *; assert (Y2nz := IZR_nz y2); set (Y2 := IZR (Zpos y2)) in *.",
                        "VernacExtend",
                        "c747e52ae92f1b705b947de14e0701ff3af0dd79"
                    ]
                },
                {
                    "command": [
                        "replace (X1 * Y2)%R with (X1 * / X2 * (X2 * Y2))%R; try (field; auto).",
                        "VernacExtend",
                        "cb23ea9d0d39360dd8df1a0c54f3d34af62ce50b"
                    ]
                },
                {
                    "command": [
                        "replace (Y1 * X2)%R with (Y1 * / Y2 * (X2 * Y2))%R; try (field; auto).",
                        "VernacExtend",
                        "69b4d7cec170ef3dd1e4492191ae0dabdbbb5be8"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r; auto.",
                        "VernacExtend",
                        "2808e2b8cdd6614e449e94a44d2d337ed31d7518"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "now apply IZR_le.",
                        "VernacExtend",
                        "e7a82916d8dccd5d8e33da934cc0388f3ecc6513"
                    ]
                },
                {
                    "command": [
                        "now apply IZR_le.",
                        "VernacExtend",
                        "e7a82916d8dccd5d8e33da934cc0388f3ecc6513"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qle_Rle",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "unfold Qle, Q2R; intros (x1, x2) (y1, y2); unfold Qnum, Qden; intros.",
                        "VernacExtend",
                        "0926ebcd933728a427019dfcbb00b11ce087ce06"
                    ]
                },
                {
                    "command": [
                        "set (X1 := IZR x1) in *; assert (X2nz := IZR_nz x2); set (X2 := IZR (Zpos x2)) in *.",
                        "VernacExtend",
                        "526b2b0201d08347c9e27c7bde60a3b4c59e9d1a"
                    ]
                },
                {
                    "command": [
                        "set (Y1 := IZR y1) in *; assert (Y2nz := IZR_nz y2); set (Y2 := IZR (Zpos y2)) in *.",
                        "VernacExtend",
                        "c747e52ae92f1b705b947de14e0701ff3af0dd79"
                    ]
                },
                {
                    "command": [
                        "assert (X1 * Y2 <= Y1 * X2)%R.",
                        "VernacExtend",
                        "9e83e4f844e7ccf2fcf93850a8f3e6a1b6bac8d4"
                    ]
                },
                {
                    "command": [
                        "unfold X1, X2, Y1, Y2; do 2 rewrite <- mult_IZR.",
                        "VernacExtend",
                        "9edfc90f110c4891237ad9f0764711a62e66a986"
                    ]
                },
                {
                    "command": [
                        "apply IZR_le; auto.",
                        "VernacExtend",
                        "efb7c654cffe1026a601987ddf447d56863884b7"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "replace (X1 * / X2)%R with (X1 * Y2 * (/ X2 * / Y2))%R; try (field; auto).",
                        "VernacExtend",
                        "5d93837299c12bf015007384c30eebf628d788c2"
                    ]
                },
                {
                    "command": [
                        "replace (Y1 * / Y2)%R with (Y1 * X2 * (/ X2 * / Y2))%R; try (field; auto).",
                        "VernacExtend",
                        "93801187e3c2ee96d99c8fb98a9175fa1eff9ceb"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_r; auto.",
                        "VernacExtend",
                        "2808e2b8cdd6614e449e94a44d2d337ed31d7518"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos; apply Rlt_le; apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "42e8c884bd451bb3a5ea43ed81a263e37f760507"
                    ]
                },
                {
                    "command": [
                        "now apply IZR_lt.",
                        "VernacExtend",
                        "c9d47a81a39cea1152090fbef526208c9e992dbd"
                    ]
                },
                {
                    "command": [
                        "now apply IZR_lt.",
                        "VernacExtend",
                        "c9d47a81a39cea1152090fbef526208c9e992dbd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_Qlt",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "unfold Qlt, Q2R; intros (x1, x2) (y1, y2); unfold Qnum, Qden; intros.",
                        "VernacExtend",
                        "d48433db08d0d854d70879916732a36bf67e6534"
                    ]
                },
                {
                    "command": [
                        "apply lt_IZR.",
                        "VernacExtend",
                        "165b941162ea1938aa71e78f57835b8df85de779"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite mult_IZR.",
                        "VernacExtend",
                        "374cd796ddc2668180fb2917a3c9fc6478fbfdc6"
                    ]
                },
                {
                    "command": [
                        "set (X1 := IZR x1) in *; assert (X2nz := IZR_nz x2); set (X2 := IZR (Zpos x2)) in *.",
                        "VernacExtend",
                        "526b2b0201d08347c9e27c7bde60a3b4c59e9d1a"
                    ]
                },
                {
                    "command": [
                        "set (Y1 := IZR y1) in *; assert (Y2nz := IZR_nz y2); set (Y2 := IZR (Zpos y2)) in *.",
                        "VernacExtend",
                        "c747e52ae92f1b705b947de14e0701ff3af0dd79"
                    ]
                },
                {
                    "command": [
                        "replace (X1 * Y2)%R with (X1 * / X2 * (X2 * Y2))%R; try (field; auto).",
                        "VernacExtend",
                        "cb23ea9d0d39360dd8df1a0c54f3d34af62ce50b"
                    ]
                },
                {
                    "command": [
                        "replace (Y1 * X2)%R with (Y1 * / Y2 * (X2 * Y2))%R; try (field; auto).",
                        "VernacExtend",
                        "69b4d7cec170ef3dd1e4492191ae0dabdbbb5be8"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r; auto.",
                        "VernacExtend",
                        "01fd283ec9b964e076f6025b7309bb3355d8981f"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "now apply IZR_lt.",
                        "VernacExtend",
                        "c9d47a81a39cea1152090fbef526208c9e992dbd"
                    ]
                },
                {
                    "command": [
                        "now apply IZR_lt.",
                        "VernacExtend",
                        "c9d47a81a39cea1152090fbef526208c9e992dbd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Qlt_Rlt",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "unfold Qlt, Q2R; intros (x1, x2) (y1, y2); unfold Qnum, Qden; intros.",
                        "VernacExtend",
                        "d48433db08d0d854d70879916732a36bf67e6534"
                    ]
                },
                {
                    "command": [
                        "set (X1 := IZR x1) in *; assert (X2nz := IZR_nz x2); set (X2 := IZR (Zpos x2)) in *.",
                        "VernacExtend",
                        "526b2b0201d08347c9e27c7bde60a3b4c59e9d1a"
                    ]
                },
                {
                    "command": [
                        "set (Y1 := IZR y1) in *; assert (Y2nz := IZR_nz y2); set (Y2 := IZR (Zpos y2)) in *.",
                        "VernacExtend",
                        "c747e52ae92f1b705b947de14e0701ff3af0dd79"
                    ]
                },
                {
                    "command": [
                        "assert (X1 * Y2 < Y1 * X2)%R.",
                        "VernacExtend",
                        "0ccf2d638d60d42d8c03d5cd4ab7f990c1de2f33"
                    ]
                },
                {
                    "command": [
                        "unfold X1, X2, Y1, Y2; do 2 rewrite <- mult_IZR.",
                        "VernacExtend",
                        "9edfc90f110c4891237ad9f0764711a62e66a986"
                    ]
                },
                {
                    "command": [
                        "apply IZR_lt; auto.",
                        "VernacExtend",
                        "1c1a95a8155673574cd96d480243c088854fc431"
                    ]
                },
                {
                    "command": [
                        "clear H.",
                        "VernacExtend",
                        "f2c5826643b985ca1b67f3433f38ccbe2735e582"
                    ]
                },
                {
                    "command": [
                        "replace (X1 * / X2)%R with (X1 * Y2 * (/ X2 * / Y2))%R; try (field; auto).",
                        "VernacExtend",
                        "5d93837299c12bf015007384c30eebf628d788c2"
                    ]
                },
                {
                    "command": [
                        "replace (Y1 * / Y2)%R with (Y1 * X2 * (/ X2 * / Y2))%R; try (field; auto).",
                        "VernacExtend",
                        "93801187e3c2ee96d99c8fb98a9175fa1eff9ceb"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r; auto.",
                        "VernacExtend",
                        "01fd283ec9b964e076f6025b7309bb3355d8981f"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat; apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "33f788ba85a18fea96b836f8881c5f79be79d07b"
                    ]
                },
                {
                    "command": [
                        "now apply IZR_lt.",
                        "VernacExtend",
                        "c9d47a81a39cea1152090fbef526208c9e992dbd"
                    ]
                },
                {
                    "command": [
                        "now apply IZR_lt.",
                        "VernacExtend",
                        "c9d47a81a39cea1152090fbef526208c9e992dbd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q2R_plus",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "unfold Qplus, Qeq, Q2R; intros (x1, x2) (y1, y2); unfold Qden, Qnum.",
                        "VernacExtend",
                        "ce241dc0217ba553ecb878761aeec86f61a28690"
                    ]
                },
                {
                    "command": [
                        "simpl_mult.",
                        "VernacExtend",
                        "8729ced2e11f022689ae4b1bd579a0858666ef7d"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_IZR.",
                        "VernacExtend",
                        "a71980692bd855cfdb80782b4f734eba75fada3d"
                    ]
                },
                {
                    "command": [
                        "do 3 rewrite mult_IZR.",
                        "VernacExtend",
                        "3ab98878358f09c63dd629fe7447df983a2c93e4"
                    ]
                },
                {
                    "command": [
                        "field; auto.",
                        "VernacExtend",
                        "ff16f63b15b94842f53b48da2f33a086a0f90210"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q2R_mult",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "unfold Qmult, Qeq, Q2R; intros (x1, x2) (y1, y2); unfold Qden, Qnum.",
                        "VernacExtend",
                        "33911737e2fd704aed44b747f71b681f04ed8e0e"
                    ]
                },
                {
                    "command": [
                        "simpl_mult.",
                        "VernacExtend",
                        "8729ced2e11f022689ae4b1bd579a0858666ef7d"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite mult_IZR.",
                        "VernacExtend",
                        "374cd796ddc2668180fb2917a3c9fc6478fbfdc6"
                    ]
                },
                {
                    "command": [
                        "field; auto.",
                        "VernacExtend",
                        "ff16f63b15b94842f53b48da2f33a086a0f90210"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q2R_opp",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "unfold Qopp, Qeq, Q2R; intros (x1, x2); unfold Qden, Qnum.",
                        "VernacExtend",
                        "ef513975f9b4c258d389d920d3baa4df867f4861"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_Ropp_IZR.",
                        "VernacExtend",
                        "95ba4cc75f2b6b788ec3f7616d9b618a0d3cd184"
                    ]
                },
                {
                    "command": [
                        "field; auto.",
                        "VernacExtend",
                        "ff16f63b15b94842f53b48da2f33a086a0f90210"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q2R_minus",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "unfold Qminus; intros; rewrite Q2R_plus; rewrite Q2R_opp; auto.",
                        "VernacExtend",
                        "0e90f79a382b93a40f5565de04773ce397707ffe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q2R_inv",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "unfold Qinv, Q2R, Qeq; intros (x1, x2).",
                        "VernacExtend",
                        "765373231123e57d86ec6d6d88e035dd9624699e"
                    ]
                },
                {
                    "command": [
                        "case x1; unfold Qnum, Qden.",
                        "VernacExtend",
                        "756e7fd9025308ad4f1d563cc86cabc792c4ce4f"
                    ]
                },
                {
                    "command": [
                        "simpl; intros; elim H; trivial.",
                        "VernacExtend",
                        "0ecd35cb3af5a30037fa65ef521e293e4fbe26ca"
                    ]
                },
                {
                    "command": [
                        "intros; field; auto.",
                        "VernacExtend",
                        "399f235a984e3b8c6d08fcf23d220a4a37d7f50c"
                    ]
                },
                {
                    "command": [
                        "intros; change (IZR (Zneg x2)) with (- IZR (Zpos x2))%R; change (IZR (Zneg p)) with (- IZR (Zpos p))%R; simpl; field; repeat split; auto; auto with real.",
                        "VernacExtend",
                        "d6bb392a29f207d418058b830074944a0ea7ae08"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Q2R_div",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "unfold Qdiv, Rdiv.",
                        "VernacExtend",
                        "e991b0b9813d597a7f9e505542215efc895ebf39"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite Q2R_mult.",
                        "VernacExtend",
                        "26ee4f21d8f66cee288850a3b2808a8f76ca4fa8"
                    ]
                },
                {
                    "command": [
                        "rewrite Q2R_inv; auto.",
                        "VernacExtend",
                        "e2632964698427fcd0de835657d3ce613074ca73"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}