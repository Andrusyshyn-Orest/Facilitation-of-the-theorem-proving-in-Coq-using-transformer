{
    "filename": "theories/Vectors/Fin.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Arith_base.",
            "VernacRequire",
            "0888781332b928992259625f3d4e2c1b429752a6"
        ],
        [
            "Inductive t : nat -> Set := |F1 : forall {n}, t (S n) |FS : forall {n}, t n -> t (S n).",
            "VernacInductive",
            "519cc96cface37fbe421bcbacaf7c4487ff2bd17"
        ],
        [
            "Section SCHEMES.",
            "VernacBeginSection",
            "053297928f2faaca859bee28f441a2e399cdc1c3"
        ],
        [
            "Definition case0 P (p: t 0): P p := match p with | F1 | FS _ => fun devil => False_rect (@IDProp) devil end.",
            "VernacDefinition",
            "b6d1946e335e5ce45063759d5229d5d80ae3d543"
        ],
        [
            "Definition caseS' {n : nat} (p : t (S n)) : forall (P : t (S n) -> Type) (P1 : P F1) (PS : forall (p : t n), P (FS p)), P p := match p with | @F1 k => fun P P1 PS => P1 | FS pp => fun P P1 PS => PS pp end.",
            "VernacDefinition",
            "055d21c5856b442cdceb5b3105d15e98b648bce3"
        ],
        [
            "Definition caseS (P: forall {n}, t (S n) -> Type) (P1: forall n, @P n F1) (PS : forall {n} (p: t n), P (FS p)) {n} (p: t (S n)) : P p := caseS' p P (P1 n) PS.",
            "VernacDefinition",
            "c4254ba57d594f7ccbf2801b728ccc1b405e14c7"
        ],
        [
            "Definition rectS (P: forall {n}, t (S n) -> Type) (P1: forall n, @P n F1) (PS : forall {n} (p: t (S n)), P p -> P (FS p)): forall {n} (p: t (S n)), P p := fix rectS_fix {n} (p: t (S n)): P p:= match p with | @F1 k => P1 k | @FS 0 pp => case0 (fun f => P (FS f)) pp | @FS (S k) pp => PS pp (rectS_fix pp) end.",
            "VernacDefinition",
            "cf436866779f37d40e64f4b41c7a504c8b08354b"
        ],
        [
            "Definition rect2 (P : forall {n} (a b : t n), Type) (H0 : forall n, @P (S n) F1 F1) (H1 : forall {n} (f : t n), P F1 (FS f)) (H2 : forall {n} (f : t n), P (FS f) F1) (HS : forall {n} (f g : t n), P f g -> P (FS f) (FS g)) : forall {n} (a b : t n), P a b := fix rect2_fix {n} (a : t n) {struct a} : forall (b : t n), P a b := match a with | @F1 m => fun (b : t (S m)) => caseS' b (P F1) (H0 _) H1 | @FS m a' => fun (b : t (S m)) => caseS' b (fun b => P (@FS m a') b) (H2 a') (fun b' => HS _ _ (rect2_fix a' b')) end.",
            "VernacDefinition",
            "60556ad5ef4d1a83a775bb05492c5d7dfe666bd4"
        ],
        [
            "End SCHEMES.",
            "VernacEndSegment",
            "e2fff6ec6136c5fbaf8d397326b6e4fc05416c54"
        ],
        [
            "Definition FS_inj {n} (x y: t n) (eq: FS x = FS y): x = y := match eq in _ = a return match a as a' in t m return match m with |0 => Prop |S n' => t n' -> Prop end with F1 => fun _ => True |FS y => fun x' => x' = y end x with eq_refl => eq_refl end.",
            "VernacDefinition",
            "52bbb4fd8e652e1614745a2bac2aace9b58046ca"
        ],
        [
            "Fixpoint to_nat {m} (n : t m) : {i | i < m} := match n with |@F1 j => exist _ 0 (Lt.lt_0_Sn j) |FS p => match to_nat p with |exist _ i P => exist _ (S i) (Lt.lt_n_S _ _ P) end end.",
            "VernacFixpoint",
            "30b01cf667f4d75aff13cc22b6ec9d9c9a5df5c1"
        ],
        [
            "Fixpoint of_nat (p n : nat) : (t n) + { exists m, p = n + m } := match n with |0 => inright _ (ex_intro _ p eq_refl) |S n' => match p with |0 => inleft _ (F1) |S p' => match of_nat p' n' with |inleft f => inleft _ (FS f) |inright arg => inright _ (match arg with |ex_intro _ m e => ex_intro (fun x => S p' = S n' + x) m (f_equal S e) end) end end end.",
            "VernacFixpoint",
            "e78cea49b325751e202736f81d4484854ede64e8"
        ],
        [
            "Fixpoint of_nat_lt {p n : nat} : p < n -> t n := match n with |0 => fun H : p < 0 => False_rect _ (Lt.lt_n_O p H) |S n' => match p with |0 => fun _ => @F1 n' |S p' => fun H => FS (of_nat_lt (Lt.lt_S_n _ _ H)) end end.",
            "VernacFixpoint",
            "b296acf7140c8dabc82121370717f89b3356a57b"
        ],
        [
            "Lemma of_nat_ext {p}{n} (h h' : p < n) : of_nat_lt h = of_nat_lt h'.",
            "VernacStartTheoremProof",
            "8d04922719e09ca7cb10f07be2d7f170e7ec2913"
        ],
        [
            "now rewrite (Peano_dec.le_unique _ _ h h').",
            "VernacExtend",
            "b2e54cd6afc599abfb39ebc8acc3e51f53296809"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma of_nat_to_nat_inv {m} (p : t m) : of_nat_lt (proj2_sig (to_nat p)) = p.",
            "VernacStartTheoremProof",
            "207a3e747c37fbdea3bfd283e4b7d7c7448cbe20"
        ],
        [
            "induction p; simpl.",
            "VernacExtend",
            "40f9f5e58be7659cb22903cfdc5400cb770ac71c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (to_nat p); simpl in *.",
            "VernacExtend",
            "4c787233ad95ae1e47656ffede24dc857d5e44d3"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "subst p.",
            "VernacExtend",
            "caedf09ae2f4d633332b36c55c808e07b2752cd1"
        ],
        [
            "apply of_nat_ext.",
            "VernacExtend",
            "834441effbf0ad33070e18d6725b1ac45832a05b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma to_nat_of_nat {p}{n} (h : p < n) : to_nat (of_nat_lt h) = exist _ p h.",
            "VernacStartTheoremProof",
            "7c60a11ec54b21380192043ae907afb6018bd7c1"
        ],
        [
            "revert n h.",
            "VernacExtend",
            "652ba93fb936ee8cd95873631e8cf7d09fe4702a"
        ],
        [
            "induction p; (destruct n ; intros h; [ destruct (Lt.lt_n_O _ h) | cbn]); [ | rewrite (IHp _ (Lt.lt_S_n p n h))]; f_equal; apply Peano_dec.le_unique.",
            "VernacExtend",
            "80c66b604fb61a659bc8fd9bff53604fc84e88aa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma to_nat_inj {n} (p q : t n) : proj1_sig (to_nat p) = proj1_sig (to_nat q) -> p = q.",
            "VernacStartTheoremProof",
            "ed9f638ed3c373015a682203e314752393f70246"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "rewrite <- (of_nat_to_nat_inv p), <- (of_nat_to_nat_inv q).",
            "VernacExtend",
            "f0862e5bdc7d85b817bcbb7d24b0fc469baa604b"
        ],
        [
            "destruct (to_nat p) as (np,hp), (to_nat q) as (nq,hq); simpl in *.",
            "VernacExtend",
            "94c85835af56017227608ddba24c8d87c7ee3149"
        ],
        [
            "revert hp hq.",
            "VernacExtend",
            "39e10e0f38fe9a7f28338ff46ab0126f741bd7c6"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "apply of_nat_ext.",
            "VernacExtend",
            "834441effbf0ad33070e18d6725b1ac45832a05b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint weak {m}{n} p (f : t m -> t n) : t (p + m) -> t (p + n) := match p as p' return t (p' + m) -> t (p' + n) with |0 => f |S p' => fun x => match x with |@F1 n' => fun eq : n' = p' + m => F1 |@FS n' y => fun eq : n' = p' + m => FS (weak p' f (eq_rect _ t y _ eq)) end (eq_refl _) end.",
            "VernacFixpoint",
            "da831b499a31848c17e4c5ca40f5c1d1327f3c6c"
        ],
        [
            "Fixpoint L {m} n (p : t m) : t (m + n) := match p with |F1 => F1 |FS p' => FS (L n p') end.",
            "VernacFixpoint",
            "341c4a5680303c4155182e9d808e0a7e9f98e0d4"
        ],
        [
            "Lemma L_sanity {m} n (p : t m) : proj1_sig (to_nat (L n p)) = proj1_sig (to_nat p).",
            "VernacStartTheoremProof",
            "b7259c26a6e9444267d51d15a1d95e278b65eecf"
        ],
        [
            "induction p.",
            "VernacExtend",
            "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; destruct (to_nat (L n p)); simpl in *; rewrite IHp.",
            "VernacExtend",
            "d8e657d04747c99bb7eb132cd81235ec0ca42e28"
        ],
        [
            "now destruct (to_nat p).",
            "VernacExtend",
            "d2badb3eafede68116129e413df278b4bc88c2bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition L_R {m} n (p : t m) : t (n + m).",
            "VernacDefinition",
            "98bc54b1800250cf505facf496bdfa1e8cf05df6"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact p.",
            "VernacExtend",
            "b7c0f461e0cb1db77f2037d1297f3ab1056e59d7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact ((fix LS k (p: t k) := match p with |@F1 k' => @F1 (S k') |FS p' => FS (LS _ p') end) _ IHn).",
            "VernacExtend",
            "b0916ff3f010b5c600c9ad9bbb0a8acd2818c63c"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Fixpoint R {m} n (p : t m) : t (n + m) := match n with |0 => p |S n' => FS (R n' p) end.",
            "VernacFixpoint",
            "08ec8daef75ad6aec5f872a05afe886e5376674e"
        ],
        [
            "Lemma R_sanity {m} n (p : t m) : proj1_sig (to_nat (R n p)) = n + proj1_sig (to_nat p).",
            "VernacStartTheoremProof",
            "65584e4fb4457a1faa313b3149c9cbba24bc9957"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl; destruct (to_nat (R n p)); simpl in *; rewrite IHn.",
            "VernacExtend",
            "fae489df57a5fa5a3e7ec9901fca8ba0a489ef3c"
        ],
        [
            "now destruct (to_nat p).",
            "VernacExtend",
            "d2badb3eafede68116129e413df278b4bc88c2bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint depair {m n} (o : t m) (p : t n) : t (m * n) := match o with |@F1 m' => L (m' * n) p |FS o' => R n (depair o' p) end.",
            "VernacFixpoint",
            "d06f48d350936779f2ac9a391aad88e17d3c2f3b"
        ],
        [
            "Lemma depair_sanity {m n} (o : t m) (p : t n) : proj1_sig (to_nat (depair o p)) = n * (proj1_sig (to_nat o)) + (proj1_sig (to_nat p)).",
            "VernacStartTheoremProof",
            "c784696d93ad6f8391a10d6beebc8591520cc6d3"
        ],
        [
            "induction o ; simpl.",
            "VernacExtend",
            "bf6b31908fd049106b846c9c1829c98d65d9e2bd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite L_sanity.",
            "VernacExtend",
            "98ed4ecc2448817163e980985f6d37e0eae66553"
        ],
        [
            "now rewrite Mult.mult_0_r.",
            "VernacExtend",
            "cf4ce73d3db66c0f07df24e2a44b000558ec0d56"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite R_sanity.",
            "VernacExtend",
            "b9225fa05cc94d219d9296733a4c28100fd481db"
        ],
        [
            "rewrite IHo.",
            "VernacExtend",
            "f8c4c753656bcf86cca80418a77631a4ee33493e"
        ],
        [
            "rewrite Plus.plus_assoc.",
            "VernacExtend",
            "bd33c1e91d0c0fddea93b31fc672c736af91cb92"
        ],
        [
            "destruct (to_nat o); simpl; rewrite Mult.mult_succ_r.",
            "VernacExtend",
            "60883009393e7aa4122c8adfec55759bac60df03"
        ],
        [
            "now rewrite (Plus.plus_comm n).",
            "VernacExtend",
            "66ea448218f0d56e4cd296599686b30b5ea018e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint eqb {m n} (p : t m) (q : t n) := match p, q with | @F1 m', @F1 n' => EqNat.beq_nat m' n' | FS _, F1 => false | F1, FS _ => false | FS p', FS q' => eqb p' q' end.",
            "VernacFixpoint",
            "53fe2b3a44d0b60ac34a76d9ffca4addca537585"
        ],
        [
            "Lemma eqb_nat_eq : forall m n (p : t m) (q : t n), eqb p q = true -> m = n.",
            "VernacStartTheoremProof",
            "2b8fe290e37c0cb72ff6d63417d9b5d2837fe798"
        ],
        [
            "intros m n p; revert n; induction p; destruct q; simpl; intros; f_equal.",
            "VernacExtend",
            "ff2e7f6f3ccc5e13c047c8002b382e5bf80ed75f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now apply EqNat.beq_nat_true.",
            "VernacExtend",
            "a44c1883ae53be94700241f8836227fe95647636"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply IHp.",
            "VernacExtend",
            "d31c2358f2d57c3c13a26bae4d1fd44ffa759948"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqb_eq : forall n (p q : t n), eqb p q = true <-> p = q.",
            "VernacStartTheoremProof",
            "47310363f2e32ecf606db78022c401016fbe1f82"
        ],
        [
            "apply rect2; simpl; intros.",
            "VernacExtend",
            "4a94416fae6cec7020ab1ec54ca3ad94cd37ff74"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; intros ; [ reflexivity | now apply EqNat.beq_nat_true_iff ].",
            "VernacExtend",
            "8b139a954e392daddfd91e81246d368d662c7932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply iff_trans.",
            "VernacExtend",
            "8884ef662e7a5e201495bd49a6264ab9e6303e7f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "eassumption.",
            "VernacExtend",
            "909bfe8655bf95c07560744f733991163ce6cf7e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros; now f_equal.",
            "VernacExtend",
            "5b326aae0a79a34d850ac45bcf8aa8756caea1a5"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply FS_inj.",
            "VernacExtend",
            "0ecb0093b40650bab1b9ea6c497812ee27188a84"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_dec {n} (x y : t n): {x = y} + {x <> y}.",
            "VernacStartTheoremProof",
            "aed73fe4ed4885e99f0e106932daadcbe5d967f8"
        ],
        [
            "case_eq (eqb x y); intros.",
            "VernacExtend",
            "8c78a0aabee22787ab928670f1f338717c5b8c96"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left; now apply eqb_eq.",
            "VernacExtend",
            "9c0effb050cd6a88b223314a9e8c60b893bd0a1f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intros Heq.",
            "VernacExtend",
            "dfd01f405e65b2dca6b7aecb39fb335cd5c85dc2"
        ],
        [
            "apply <- eqb_eq in Heq.",
            "VernacExtend",
            "f7bacb76401cd484035de186fd5cec007c5f2217"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition cast: forall {m} (v: t m) {n}, m = n -> t n.",
            "VernacDefinition",
            "7f6943b53002bc45d074b1f128d16b3e11b9c7d5"
        ],
        [
            "refine (fix cast {m} (v: t m) {struct v} := match v in t m' return forall n, m' = n -> t n with |F1 => fun n => match n with | 0 => fun H => False_rect _ _ | S n' => fun H => F1 end |FS f => fun n => match n with | 0 => fun H => False_rect _ _ | S n' => fun H => FS (cast f n' (f_equal pred H)) end end); discriminate.",
            "VernacExtend",
            "a4ac20120550ea4f3021224fbee32c6991520b34"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ]
    ],
    "proofs": [
        {
            "name": "of_nat_ext",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "now rewrite (Peano_dec.le_unique _ _ h h').",
                        "VernacExtend",
                        "b2e54cd6afc599abfb39ebc8acc3e51f53296809"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_nat_to_nat_inv",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "induction p; simpl.",
                        "VernacExtend",
                        "40f9f5e58be7659cb22903cfdc5400cb770ac71c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (to_nat p); simpl in *.",
                        "VernacExtend",
                        "4c787233ad95ae1e47656ffede24dc857d5e44d3"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "subst p.",
                        "VernacExtend",
                        "caedf09ae2f4d633332b36c55c808e07b2752cd1"
                    ]
                },
                {
                    "command": [
                        "apply of_nat_ext.",
                        "VernacExtend",
                        "834441effbf0ad33070e18d6725b1ac45832a05b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_nat_of_nat",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "revert n h.",
                        "VernacExtend",
                        "652ba93fb936ee8cd95873631e8cf7d09fe4702a"
                    ]
                },
                {
                    "command": [
                        "induction p; (destruct n ; intros h; [ destruct (Lt.lt_n_O _ h) | cbn]); [ | rewrite (IHp _ (Lt.lt_S_n p n h))]; f_equal; apply Peano_dec.le_unique.",
                        "VernacExtend",
                        "80c66b604fb61a659bc8fd9bff53604fc84e88aa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_nat_inj",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (of_nat_to_nat_inv p), <- (of_nat_to_nat_inv q).",
                        "VernacExtend",
                        "f0862e5bdc7d85b817bcbb7d24b0fc469baa604b"
                    ]
                },
                {
                    "command": [
                        "destruct (to_nat p) as (np,hp), (to_nat q) as (nq,hq); simpl in *.",
                        "VernacExtend",
                        "94c85835af56017227608ddba24c8d87c7ee3149"
                    ]
                },
                {
                    "command": [
                        "revert hp hq.",
                        "VernacExtend",
                        "39e10e0f38fe9a7f28338ff46ab0126f741bd7c6"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "apply of_nat_ext.",
                        "VernacExtend",
                        "834441effbf0ad33070e18d6725b1ac45832a05b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "L_sanity",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "induction p.",
                        "VernacExtend",
                        "57241b1bf2113f288b5c35cf50cb4c85d8323deb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; destruct (to_nat (L n p)); simpl in *; rewrite IHp.",
                        "VernacExtend",
                        "d8e657d04747c99bb7eb132cd81235ec0ca42e28"
                    ]
                },
                {
                    "command": [
                        "now destruct (to_nat p).",
                        "VernacExtend",
                        "d2badb3eafede68116129e413df278b4bc88c2bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "L_R",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exact p.",
                        "VernacExtend",
                        "b7c0f461e0cb1db77f2037d1297f3ab1056e59d7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exact ((fix LS k (p: t k) := match p with |@F1 k' => @F1 (S k') |FS p' => FS (LS _ p') end) _ IHn).",
                        "VernacExtend",
                        "b0916ff3f010b5c600c9ad9bbb0a8acd2818c63c"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "R_sanity",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl; destruct (to_nat (R n p)); simpl in *; rewrite IHn.",
                        "VernacExtend",
                        "fae489df57a5fa5a3e7ec9901fca8ba0a489ef3c"
                    ]
                },
                {
                    "command": [
                        "now destruct (to_nat p).",
                        "VernacExtend",
                        "d2badb3eafede68116129e413df278b4bc88c2bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "depair_sanity",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "induction o ; simpl.",
                        "VernacExtend",
                        "bf6b31908fd049106b846c9c1829c98d65d9e2bd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite L_sanity.",
                        "VernacExtend",
                        "98ed4ecc2448817163e980985f6d37e0eae66553"
                    ]
                },
                {
                    "command": [
                        "now rewrite Mult.mult_0_r.",
                        "VernacExtend",
                        "cf4ce73d3db66c0f07df24e2a44b000558ec0d56"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite R_sanity.",
                        "VernacExtend",
                        "b9225fa05cc94d219d9296733a4c28100fd481db"
                    ]
                },
                {
                    "command": [
                        "rewrite IHo.",
                        "VernacExtend",
                        "f8c4c753656bcf86cca80418a77631a4ee33493e"
                    ]
                },
                {
                    "command": [
                        "rewrite Plus.plus_assoc.",
                        "VernacExtend",
                        "bd33c1e91d0c0fddea93b31fc672c736af91cb92"
                    ]
                },
                {
                    "command": [
                        "destruct (to_nat o); simpl; rewrite Mult.mult_succ_r.",
                        "VernacExtend",
                        "60883009393e7aa4122c8adfec55759bac60df03"
                    ]
                },
                {
                    "command": [
                        "now rewrite (Plus.plus_comm n).",
                        "VernacExtend",
                        "66ea448218f0d56e4cd296599686b30b5ea018e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_dec",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "case_eq (eqb x y); intros.",
                        "VernacExtend",
                        "8c78a0aabee22787ab928670f1f338717c5b8c96"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "left; now apply eqb_eq.",
                        "VernacExtend",
                        "9c0effb050cd6a88b223314a9e8c60b893bd0a1f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intros Heq.",
                        "VernacExtend",
                        "dfd01f405e65b2dca6b7aecb39fb335cd5c85dc2"
                    ]
                },
                {
                    "command": [
                        "apply <- eqb_eq in Heq.",
                        "VernacExtend",
                        "f7bacb76401cd484035de186fd5cec007c5f2217"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "cast",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "refine (fix cast {m} (v: t m) {struct v} := match v in t m' return forall n, m' = n -> t n with |F1 => fun n => match n with | 0 => fun H => False_rect _ _ | S n' => fun H => F1 end |FS f => fun n => match n with | 0 => fun H => False_rect _ _ | S n' => fun H => FS (cast f n' (f_equal pred H)) end end); discriminate.",
                        "VernacExtend",
                        "a4ac20120550ea4f3021224fbee32c6991520b34"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}