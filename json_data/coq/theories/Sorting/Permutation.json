{
    "filename": "theories/Sorting/Permutation.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import List Setoid Compare_dec Morphisms FinFun.",
            "VernacRequire",
            "0d0d3a68d2f6198765324d676454c3b98aba829b"
        ],
        [
            "Import ListNotations.",
            "VernacImport",
            "52647db2a3b752153a8cbd37039246f200bccdee"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Section Permutation.",
            "VernacBeginSection",
            "b64a107a4d62ee2013394d677f123738480c2aab"
        ],
        [
            "Variable A:Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Inductive Permutation : list A -> list A -> Prop := | perm_nil: Permutation [] [] | perm_skip x l l' : Permutation l l' -> Permutation (x::l) (x::l') | perm_swap x y l : Permutation (y::x::l) (x::y::l) | perm_trans l l' l'' : Permutation l l' -> Permutation l' l'' -> Permutation l l''.",
            "VernacInductive",
            "b88a6fbd087cca76c1911ead6b42c0468dfbf2b8"
        ],
        [
            "Local Hint Constructors Permutation.",
            "VernacHints",
            "503f141c56159075068da11e066200dca0d98161"
        ],
        [
            "Theorem Permutation_nil : forall (l : list A), Permutation [] l -> l = [].",
            "VernacStartTheoremProof",
            "e24003d7a215878be135fccde75fe40d427c6839"
        ],
        [
            "intros l HF.",
            "VernacExtend",
            "7f1e0b43d1260931f0e3cf390da141a2be3c5d0e"
        ],
        [
            "remember (@nil A) as m in HF.",
            "VernacExtend",
            "6335d4488bb1fab736f885184509b306e5cf6727"
        ],
        [
            "induction HF; discriminate || auto.",
            "VernacExtend",
            "6c6f8ef10e4f13b3a344c78c81b0f0c00e25a1d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permutation_nil_cons : forall (l : list A) (x : A), ~ Permutation nil (x::l).",
            "VernacStartTheoremProof",
            "d8d88235779dc8febd52f94cb72c0c4e7b6d4080"
        ],
        [
            "intros l x HF.",
            "VernacExtend",
            "5d15334a599ecd3c258adbaf551a2d75b50113f6"
        ],
        [
            "apply Permutation_nil in HF; discriminate.",
            "VernacExtend",
            "a957fe79cc1141affb23c83bc0fb91b404ddd2a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permutation_refl : forall l : list A, Permutation l l.",
            "VernacStartTheoremProof",
            "14dc6d331eca95a4b7affd45b594e2af9f949005"
        ],
        [
            "induction l; constructor.",
            "VernacExtend",
            "cfa4e4c76c754a2f046f1539500e4613fc139033"
        ],
        [
            "exact IHl.",
            "VernacExtend",
            "092ed5cd46596dc50420405f8143ea44eafb778d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permutation_sym : forall l l' : list A, Permutation l l' -> Permutation l' l.",
            "VernacStartTheoremProof",
            "ec22561c7a84025271e469cdfc246a0507b5ad04"
        ],
        [
            "intros l l' Hperm; induction Hperm; auto.",
            "VernacExtend",
            "819bd239e7ddc6f707131adca57b6838e2b01105"
        ],
        [
            "apply perm_trans with (l':=l'); assumption.",
            "VernacExtend",
            "a5f7692ce0106e90391e534a6026c9e87213e66d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permutation_trans : forall l l' l'' : list A, Permutation l l' -> Permutation l' l'' -> Permutation l l''.",
            "VernacStartTheoremProof",
            "94b3ee6e59a62d0db0aa97c3fc5550314cfeeaea"
        ],
        [
            "exact perm_trans.",
            "VernacExtend",
            "48eb25891feafb173e4bc1dbee1569107229414a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Permutation.",
            "VernacEndSegment",
            "97a82121403da853e9cb671ccf7751b3ec1f304a"
        ],
        [
            "Hint Resolve Permutation_refl perm_nil perm_skip.",
            "VernacHints",
            "0b095cce268c3a446ae028583367caab63fbaaf9"
        ],
        [
            "Local Hint Resolve perm_swap perm_trans.",
            "VernacHints",
            "8e295264490dac43a1faf05946b1749f107c8815"
        ],
        [
            "Local Hint Resolve Permutation_sym Permutation_trans.",
            "VernacHints",
            "197962ca10f5821803f46c037195a3bad77fa751"
        ],
        [
            "Instance Permutation_Equivalence A : Equivalence (@Permutation A) | 10 := { Equivalence_Reflexive := @Permutation_refl A ; Equivalence_Symmetric := @Permutation_sym A ; Equivalence_Transitive := @Permutation_trans A }.",
            "VernacInstance",
            "93fd7ebaf4173ba89eaeee53cee5d806880a35a1"
        ],
        [
            "Instance Permutation_cons A : Proper (Logic.eq ==> @Permutation A ==> @Permutation A) (@cons A) | 10.",
            "VernacInstance",
            "3902c5da90501b1b2af2677d8eb26d1a828ccb9e"
        ],
        [
            "repeat intro; subst; auto using perm_skip.",
            "VernacExtend",
            "d171da98e573f1176a73127987218751810bf524"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Permutation_properties.",
            "VernacBeginSection",
            "642f1c4c868bc0b8bb3b516923319c8aba9ba809"
        ],
        [
            "Variable A:Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Implicit Types a b : A.",
            "VernacReserve",
            "e0a2e5081a89f6e3de95dcb9bd120388ac31b963"
        ],
        [
            "Implicit Types l m : list A.",
            "VernacReserve",
            "580a2785af8fc4da29402213182743a620b76e31"
        ],
        [
            "Theorem Permutation_in : forall (l l' : list A) (x : A), Permutation l l' -> In x l -> In x l'.",
            "VernacStartTheoremProof",
            "637ba553d42f96d78fe213dc655f2635702b9fad"
        ],
        [
            "intros l l' x Hperm; induction Hperm; simpl; tauto.",
            "VernacExtend",
            "724d06e7a632c13ed43b71844144c54c02abe790"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance Permutation_in' : Proper (Logic.eq ==> @Permutation A ==> iff) (@In A) | 10.",
            "VernacInstance",
            "14c23ffe0015d2826157ab3ed73731c0a8e489c9"
        ],
        [
            "repeat red; intros; subst; eauto using Permutation_in.",
            "VernacExtend",
            "0008c0a1d59312951315f8890c38619787ff09e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_app_tail : forall (l l' tl : list A), Permutation l l' -> Permutation (l++tl) (l'++tl).",
            "VernacStartTheoremProof",
            "adc61a0706d238d6993e44a8e50f46baf885ea6f"
        ],
        [
            "intros l l' tl Hperm; induction Hperm as [|x l l'|x y l|l l' l'']; simpl; auto.",
            "VernacExtend",
            "8f9549b8ae5b28e06095c85dd1ca38ded3beb702"
        ],
        [
            "eapply Permutation_trans with (l':=l'++tl); trivial.",
            "VernacExtend",
            "f4af3034c4fe0fcc466d189434fae5b3f3871211"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_app_head : forall (l tl tl' : list A), Permutation tl tl' -> Permutation (l++tl) (l++tl').",
            "VernacStartTheoremProof",
            "cc41ba9039eebb62315a062e69ff75dc226d0884"
        ],
        [
            "intros l tl tl' Hperm; induction l; [trivial | repeat rewrite <- app_comm_cons; constructor; assumption].",
            "VernacExtend",
            "4b9720ecde88a5c5291aa111af8160bc46387518"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permutation_app : forall (l m l' m' : list A), Permutation l l' -> Permutation m m' -> Permutation (l++m) (l'++m').",
            "VernacStartTheoremProof",
            "77828e1ded9df2ddb1ae54dc5b5590f786c44d96"
        ],
        [
            "intros l m l' m' Hpermll' Hpermmm'; induction Hpermll' as [|x l l'|x y l|l l' l'']; repeat rewrite <- app_comm_cons; auto.",
            "VernacExtend",
            "ddb42ac03da60814e4199b03534f289db5365bb3"
        ],
        [
            "apply Permutation_trans with (l' := (x :: y :: l ++ m)); [idtac | repeat rewrite app_comm_cons; apply Permutation_app_head]; trivial.",
            "VernacExtend",
            "e540392782d8949ed0b5e294e4f3cb13239d9e21"
        ],
        [
            "apply Permutation_trans with (l' := (l' ++ m')); try assumption.",
            "VernacExtend",
            "d2689016f5bdc4531d91a3b63805899790894ab8"
        ],
        [
            "apply Permutation_app_tail; assumption.",
            "VernacExtend",
            "0767998cdc8bec9e90223c8dee9aa3549c712c75"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance Permutation_app' : Proper (@Permutation A ==> @Permutation A ==> @Permutation A) (@app A) | 10.",
            "VernacInstance",
            "d725ad67f2772e325af52db04e9e49601472f254"
        ],
        [
            "repeat intro; now apply Permutation_app.",
            "VernacExtend",
            "02b6c7f69d852212d4cc6d019499af8d0ea4bbb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_add_inside : forall a (l l' tl tl' : list A), Permutation l l' -> Permutation tl tl' -> Permutation (l ++ a :: tl) (l' ++ a :: tl').",
            "VernacStartTheoremProof",
            "66c412a6b6e02691a1d3cc06e8491392458fce63"
        ],
        [
            "intros; apply Permutation_app; auto.",
            "VernacExtend",
            "3a43ebe94fbab438828f6e218f9a49d485ae9e7b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_cons_append : forall (l : list A) x, Permutation (x :: l) (l ++ x :: nil).",
            "VernacStartTheoremProof",
            "54ccb9aac55e2bbef52926cce601dba8d9625d24"
        ],
        [
            "induction l; intros; auto.",
            "VernacExtend",
            "37afb2e8507f77ddaf8e1df5ca5e59f3623a57d0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- IHl; auto.",
            "VernacExtend",
            "3caf862ca6806d59542cc74bf9ce681744f7a041"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Hint Resolve Permutation_cons_append.",
            "VernacHints",
            "40d79c0b1e856cd370b5fa5754751b4d2c1a8854"
        ],
        [
            "Theorem Permutation_app_comm : forall (l l' : list A), Permutation (l ++ l') (l' ++ l).",
            "VernacStartTheoremProof",
            "98a3b7897d4902751006e02bd6fadf819491966f"
        ],
        [
            "induction l as [|x l]; simpl; intro l'.",
            "VernacExtend",
            "4b0905d094740a2604e56623df6e9cb997f05431"
        ],
        [
            "rewrite app_nil_r; trivial.",
            "VernacExtend",
            "4be655f1c51446e53bf6cbd637a7efb48b509994"
        ],
        [
            "rewrite IHl.",
            "VernacExtend",
            "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
        ],
        [
            "rewrite app_comm_cons, Permutation_cons_append.",
            "VernacExtend",
            "94a026b0f2a40d15e46dcc8cc91da01d76989ed5"
        ],
        [
            "now rewrite <- app_assoc.",
            "VernacExtend",
            "cba4b726d640f473641d7d5e62261f21ab76a238"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Hint Resolve Permutation_app_comm.",
            "VernacHints",
            "d900e74ad487c95592e1c594aae39849df49d651"
        ],
        [
            "Theorem Permutation_cons_app : forall (l l1 l2:list A) a, Permutation l (l1 ++ l2) -> Permutation (a :: l) (l1 ++ a :: l2).",
            "VernacStartTheoremProof",
            "cc8a5ef37278f4c4da6d9e35081bd59300cbb2f1"
        ],
        [
            "intros l l1 l2 a H.",
            "VernacExtend",
            "946b06981444e9d867fcdce838feb042520a76ec"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "rewrite app_comm_cons, Permutation_cons_append.",
            "VernacExtend",
            "94a026b0f2a40d15e46dcc8cc91da01d76989ed5"
        ],
        [
            "now rewrite <- app_assoc.",
            "VernacExtend",
            "cba4b726d640f473641d7d5e62261f21ab76a238"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Hint Resolve Permutation_cons_app.",
            "VernacHints",
            "23eef1cadffd5a7ccde2018dec35089b06ed0913"
        ],
        [
            "Lemma Permutation_Add a l l' : Add a l l' -> Permutation (a::l) l'.",
            "VernacStartTheoremProof",
            "079e79d1d2df34f131fb698425542e57df156cdc"
        ],
        [
            "induction 1; simpl; trivial.",
            "VernacExtend",
            "b8eeca75d108d03b0acb862089fdbdf1fa8ae526"
        ],
        [
            "rewrite perm_swap.",
            "VernacExtend",
            "ed98241ca5742f13823e25287bd4d1f8e4c65fe2"
        ],
        [
            "now apply perm_skip.",
            "VernacExtend",
            "af9afe6383b621dcc9da09bc3089faa599220763"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permutation_middle : forall (l1 l2:list A) a, Permutation (a :: l1 ++ l2) (l1 ++ a :: l2).",
            "VernacStartTheoremProof",
            "189fd695678203473c4c3ea4f6085c654e4e3bca"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Hint Resolve Permutation_middle.",
            "VernacHints",
            "5a6b51cb169f156f7ba3a9680d38d65bf1f7647b"
        ],
        [
            "Theorem Permutation_rev : forall (l : list A), Permutation l (rev l).",
            "VernacStartTheoremProof",
            "02a8f3583f6c6b8562c613c03d2899c175d36b70"
        ],
        [
            "induction l as [| x l]; simpl; trivial.",
            "VernacExtend",
            "d60d6e9bf13193722bd136fab29c25e704318201"
        ],
        [
            "now rewrite IHl at 1.",
            "VernacExtend",
            "aff0744e2631479530fbf6bf22db71bf49f9a942"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance Permutation_rev' : Proper (@Permutation A ==> @Permutation A) (@rev A) | 10.",
            "VernacInstance",
            "15bb8031c3e7c276b7c5f2d88f7e7d86693f4c88"
        ],
        [
            "repeat intro; now rewrite <- 2 Permutation_rev.",
            "VernacExtend",
            "1d81455c458d8a6932b53c3a3aca8e67ed429df3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permutation_length : forall (l l' : list A), Permutation l l' -> length l = length l'.",
            "VernacStartTheoremProof",
            "e1333882c7a8d985454a8b1acc6d2d1cc4df32aa"
        ],
        [
            "intros l l' Hperm; induction Hperm; simpl; auto.",
            "VernacExtend",
            "e67b8e25c9922e34dd68e9bf6e33d1e0b6dcb71e"
        ],
        [
            "now transitivity (length l').",
            "VernacExtend",
            "102c5a2e2a2a7a25fd096a2a4579775ba886c87b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance Permutation_length' : Proper (@Permutation A ==> Logic.eq) (@length A) | 10.",
            "VernacInstance",
            "f97f554237ffc02c87776f9988c88e052ac9c6a0"
        ],
        [
            "exact Permutation_length.",
            "VernacExtend",
            "06e63f8864cbe4a6d7950ecbe713d4c80d89184c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permutation_ind_bis : forall P : list A -> list A -> Prop, P [] [] -> (forall x l l', Permutation l l' -> P l l' -> P (x :: l) (x :: l')) -> (forall x y l l', Permutation l l' -> P l l' -> P (y :: x :: l) (x :: y :: l')) -> (forall l l' l'', Permutation l l' -> P l l' -> Permutation l' l'' -> P l' l'' -> P l l'') -> forall l l', Permutation l l' -> P l l'.",
            "VernacStartTheoremProof",
            "9b7f604cd282a13b78d1b0c3104c1c467b21ff2d"
        ],
        [
            "intros P Hnil Hskip Hswap Htrans.",
            "VernacExtend",
            "524c5bd9aecaa5b1bd2b5a89f645fcb680fd2452"
        ],
        [
            "induction 1; auto.",
            "VernacExtend",
            "1f706f8985097cf30b2449a4fda927a48fc6a84a"
        ],
        [
            "apply Htrans with (x::y::l); auto.",
            "VernacExtend",
            "e2fcb3243ba746fd8340f431ba91c7e7a283fe53"
        ],
        [
            "apply Hswap; auto.",
            "VernacExtend",
            "b2d0cffdf814523b215978e7cee53c5e5de67b26"
        ],
        [
            "induction l; auto.",
            "VernacExtend",
            "6df74a097ee826dbbeb45167e7678377d4e52265"
        ],
        [
            "apply Hskip; auto.",
            "VernacExtend",
            "2032bb916c1ab7d0c65cd4b35b98ab0aa72f0171"
        ],
        [
            "apply Hskip; auto.",
            "VernacExtend",
            "2032bb916c1ab7d0c65cd4b35b98ab0aa72f0171"
        ],
        [
            "induction l; auto.",
            "VernacExtend",
            "6df74a097ee826dbbeb45167e7678377d4e52265"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permutation_nil_app_cons : forall (l l' : list A) (x : A), ~ Permutation nil (l++x::l').",
            "VernacStartTheoremProof",
            "85c78c28cccbadfad02b36ef415cc9b6066eda4d"
        ],
        [
            "intros l l' x HF.",
            "VernacExtend",
            "f4a32268e598dcc551d9680a5ea450c1e0eb9fde"
        ],
        [
            "apply Permutation_nil in HF.",
            "VernacExtend",
            "d45ef7a9d4ca36b058d0a6f1956bd727bf1539c3"
        ],
        [
            "destruct l; discriminate.",
            "VernacExtend",
            "a095a1c2bb2291eed1d2d1b56e5ba17a77ed3f7d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac InvAdd := repeat (match goal with | H: Add ?x _ (_ :: _) |- _ => inversion H; clear H; subst end).",
            "VernacExtend",
            "478464acf93cdebd8bd73c43b37e272584231bed"
        ],
        [
            "Ltac finish_basic_perms H := try constructor; try rewrite perm_swap; try constructor; trivial; (rewrite <- H; now apply Permutation_Add) || (rewrite H; symmetry; now apply Permutation_Add).",
            "VernacExtend",
            "c556e1bcfe4a92965f16245b46728f7fa49d9cc6"
        ],
        [
            "Theorem Permutation_Add_inv a l1 l2 : Permutation l1 l2 -> forall l1' l2', Add a l1' l1 -> Add a l2' l2 -> Permutation l1' l2'.",
            "VernacStartTheoremProof",
            "5cdbffa8ff47c5ffcad4e0905089e65a01388a48"
        ],
        [
            "revert l1 l2.",
            "VernacExtend",
            "47e4e91a621534fe7dcec78c9d1bc04be09b80ab"
        ],
        [
            "refine (Permutation_ind_bis _ _ _ _ _).",
            "VernacExtend",
            "eca4e1b7c733b8dc8a365a2e05def38f424f395d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion_clear 1.",
            "VernacExtend",
            "389c04e455824abd99633abf60667aeaa306819a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros x l1 l2 PE IH.",
            "VernacExtend",
            "780dd8806954af5a154bf480bcaac61af6efdcd7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "InvAdd; try finish_basic_perms PE.",
            "VernacExtend",
            "540250d15be1bac1f06969696399cb63846d0041"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "now apply IH.",
            "VernacExtend",
            "f55d33d07a7d04fb33e00d25db71d556dde4e829"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros x y l1 l2 PE IH.",
            "VernacExtend",
            "6fd870d9eed3f14e95e2b46ebc12b9214e05b50a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "InvAdd; try finish_basic_perms PE.",
            "VernacExtend",
            "540250d15be1bac1f06969696399cb63846d0041"
        ],
        [
            "rewrite perm_swap; do 2 constructor.",
            "VernacExtend",
            "75b82495a4e2815d70aa672f064376c5e0b37951"
        ],
        [
            "now apply IH.",
            "VernacExtend",
            "f55d33d07a7d04fb33e00d25db71d556dde4e829"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros l1 l l2 PE IH PE' IH' l1' l2' AD1 AD2.",
            "VernacExtend",
            "cb95b72150fd4a082d357a54ab71b830a7c3d419"
        ],
        [
            "assert (Ha : In a l).",
            "VernacExtend",
            "f414707a99a1f68a6b683d3c0c5f8b7810563b1b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite <- PE.",
            "VernacExtend",
            "e56322a280835a52c556fc58a40e0682f871264a"
        ],
        [
            "rewrite (Add_in AD1).",
            "VernacExtend",
            "91ef1036ebaa29db4bc2d45ab57e1fa452c5b74d"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (Add_inv _ _ Ha) as (l',AD).",
            "VernacExtend",
            "c1221a5db827c8c2670c8f286cf2fbb405ac1cc5"
        ],
        [
            "transitivity l'; auto.",
            "VernacExtend",
            "5661d143dc9648d137bc97f784555059019c0078"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permutation_app_inv (l1 l2 l3 l4:list A) a : Permutation (l1++a::l2) (l3++a::l4) -> Permutation (l1++l2) (l3 ++ l4).",
            "VernacStartTheoremProof",
            "2ce452ed290874fbe79cabb4b27cb75b3b5cacd8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply Permutation_Add_inv; eauto using Add_app.",
            "VernacExtend",
            "0090fae4cc6e5dfd4282a7bf4b042ea235812dc6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permutation_cons_inv l l' a : Permutation (a::l) (a::l') -> Permutation l l'.",
            "VernacStartTheoremProof",
            "660b3eae40fe29b5c6652d589f863d1df03570cf"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "eapply Permutation_Add_inv; eauto using Add_head.",
            "VernacExtend",
            "6605f63ff85c80a504f90771ed5cc7432b0b0052"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permutation_cons_app_inv l l1 l2 a : Permutation (a :: l) (l1 ++ a :: l2) -> Permutation l (l1 ++ l2).",
            "VernacStartTheoremProof",
            "7585be6ae1ff3c8e0719336142b684328001e92f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "eapply Permutation_Add_inv; eauto using Add_head, Add_app.",
            "VernacExtend",
            "fea4ff761a6d7422a6131a759e99daca2e7cbe13"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permutation_app_inv_l : forall l l1 l2, Permutation (l ++ l1) (l ++ l2) -> Permutation l1 l2.",
            "VernacStartTheoremProof",
            "1f39a8d54b2bdc4ef02088feca77155b449be452"
        ],
        [
            "induction l; simpl; auto.",
            "VernacExtend",
            "2300dcaca2cea0b38a7d9c3b8a28bfa9feaddecf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply IHl.",
            "VernacExtend",
            "af412c6009bba78f939aa53ab07dcd1baaf5888b"
        ],
        [
            "apply Permutation_cons_inv with a; auto.",
            "VernacExtend",
            "4c64d9e48b2ec2f8740a3c75dbf25c6497536108"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permutation_app_inv_r l l1 l2 : Permutation (l1 ++ l) (l2 ++ l) -> Permutation l1 l2.",
            "VernacStartTheoremProof",
            "5c7c4580a68bd6df041167f4205c86ddf4b25eee"
        ],
        [
            "rewrite 2 (Permutation_app_comm _ l).",
            "VernacExtend",
            "3351901398c9f7371a199a5963c9ef925e2e43b8"
        ],
        [
            "apply Permutation_app_inv_l.",
            "VernacExtend",
            "dd3b6b3d8f09b676653eb205af9b586df143322e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_length_1_inv: forall a l, Permutation [a] l -> l = [a].",
            "VernacStartTheoremProof",
            "7bfe2eba9310d544d673bdb3317a8168b065fcaf"
        ],
        [
            "intros a l H; remember [a] as m in H.",
            "VernacExtend",
            "280ee2f3e00a346444c6a8c570bce106b8fc52c3"
        ],
        [
            "induction H; try (injection Heqm as -> ->); discriminate || auto.",
            "VernacExtend",
            "3ca0ebf395a93949380bcd3bfd726a5a101a2273"
        ],
        [
            "apply Permutation_nil in H as ->; trivial.",
            "VernacExtend",
            "dfdbf5c89f33355c93e0ec8ecb93dc377751553c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_length_1: forall a b, Permutation [a] [b] -> a = b.",
            "VernacStartTheoremProof",
            "70426448617440ab05f61faec5c33744e99e1e0a"
        ],
        [
            "intros a b H.",
            "VernacExtend",
            "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
        ],
        [
            "apply Permutation_length_1_inv in H; injection H as ->; trivial.",
            "VernacExtend",
            "832a0e5961d935bff06331370a71ed131c620901"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_length_2_inv : forall a1 a2 l, Permutation [a1;a2] l -> l = [a1;a2] \\/ l = [a2;a1].",
            "VernacStartTheoremProof",
            "38a9e8db9b8820881937e7209719ced1d5276064"
        ],
        [
            "intros a1 a2 l H; remember [a1;a2] as m in H.",
            "VernacExtend",
            "aedb583999877dace2b9ca15c9fa24d674cdaaac"
        ],
        [
            "revert a1 a2 Heqm.",
            "VernacExtend",
            "85ccb77bcb16fe46d2401faf25ac925e03e2a74d"
        ],
        [
            "induction H; intros; try (injection Heqm as ? ?; subst); discriminate || (try tauto).",
            "VernacExtend",
            "212b10215d45d90fefe95b78de0e81d6fab3bac5"
        ],
        [
            "apply Permutation_length_1_inv in H as ->; left; auto.",
            "VernacExtend",
            "b2648a4181662ef3bdc6ff44d8d91a22870bfa83"
        ],
        [
            "apply IHPermutation1 in Heqm as [H1|H1]; apply IHPermutation2 in H1 as []; auto.",
            "VernacExtend",
            "81b0b81ed45879fc7b9abcb81da1d1230930f24b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_length_2 : forall a1 a2 b1 b2, Permutation [a1;a2] [b1;b2] -> a1 = b1 /\\ a2 = b2 \\/ a1 = b2 /\\ a2 = b1.",
            "VernacStartTheoremProof",
            "f22654f6e248eefc93d44a376d13f4a08b472a3a"
        ],
        [
            "intros a1 b1 a2 b2 H.",
            "VernacExtend",
            "42ecb1ffd810d76b63db87c7675478c0f432fda5"
        ],
        [
            "apply Permutation_length_2_inv in H as [H|H]; injection H as -> ->; auto.",
            "VernacExtend",
            "f51ea1af1583208b2bdf876c883989422e17c038"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NoDup_Permutation l l' : NoDup l -> NoDup l' -> (forall x:A, In x l <-> In x l') -> Permutation l l'.",
            "VernacStartTheoremProof",
            "cff55fdddbe4c7c77be55e084aacd24d2a2f9855"
        ],
        [
            "intros N.",
            "VernacExtend",
            "118d8cc76afed992d416336eb00759d8eee4e0b4"
        ],
        [
            "revert l'.",
            "VernacExtend",
            "bffd93886c6e5f8c158a8a65c3c4cbbbf8e3f22f"
        ],
        [
            "induction N as [|a l Hal Hl IH].",
            "VernacExtend",
            "e76fe7cabdd3abf689e564351b63392fe0a4caa9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct l'; simpl; auto.",
            "VernacExtend",
            "95ecd937cc5954f10a1f41361218e234031d4682"
        ],
        [
            "intros Hl' H.",
            "VernacExtend",
            "503d2f4dbad5751ba01682d36d678eb89d68a273"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "rewrite (H a); auto.",
            "VernacExtend",
            "075faef06aef759f8d7f8b0ca00efdc03474569c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros l' Hl' H.",
            "VernacExtend",
            "d2b5ee71973d7502b50639c9c90f702874480db8"
        ],
        [
            "assert (Ha : In a l') by (apply H; simpl; auto).",
            "VernacExtend",
            "37d3fe300b243e6921376dd6e51915380ce27a36"
        ],
        [
            "destruct (Add_inv _ _ Ha) as (l'' & AD).",
            "VernacExtend",
            "ad2b667b501eaa093e451d05e355a2af8a5a3ad0"
        ],
        [
            "rewrite <- (Permutation_Add AD).",
            "VernacExtend",
            "0e4c333b8711b58339a0185db18da84ed3f3da9c"
        ],
        [
            "apply perm_skip.",
            "VernacExtend",
            "88d9c437306dbe4b5a3f0f8693d406682ecdb8a8"
        ],
        [
            "apply IH; clear IH.",
            "VernacExtend",
            "0e266c72c994f31c867488a78e738b29186f2831"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "now apply (NoDup_Add AD).",
            "VernacExtend",
            "e73ebf8d4e2aa939745f789350caef228818cd2d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply incl_Add_inv with a l'; trivial.",
            "VernacExtend",
            "5e92fb5ec5b11afef3b0d09a5e34d364939cfce3"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intro Hx.",
            "VernacExtend",
            "218b6ef98d0605f2e1745b1d78b2fbbb6c4b9a85"
        ],
        [
            "assert (Hx' : In x (a::l)).",
            "VernacExtend",
            "2a4fe5ad7f9d238a962f6191142925d42142fe8d"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "rewrite (Add_in AD).",
            "VernacExtend",
            "df804d918a9875378bda0207cb7009d1c8d55eb2"
        ],
        [
            "now right.",
            "VernacExtend",
            "18eb395a45fbe5648757d528efaf583b695576c7"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct Hx'; simpl; trivial.",
            "VernacExtend",
            "33ee0764c5fbafc747cb8b42236efb02f32a9027"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "rewrite (NoDup_Add AD) in Hl'.",
            "VernacExtend",
            "5507d41262420ce7acf4fb3408873e1a6281d356"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NoDup_Permutation_bis l l' : NoDup l -> NoDup l' -> length l' <= length l -> incl l l' -> Permutation l l'.",
            "VernacStartTheoremProof",
            "ba81c5f1f9773e37028ae8b6941eb3765a4b0f6a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply NoDup_Permutation; auto.",
            "VernacExtend",
            "47385b3f57acf2185f77bb307133f7c99e1a1d01"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply NoDup_length_incl; trivial.",
            "VernacExtend",
            "03c514fc17f0d2b364e89715c752871291d0ed95"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_NoDup l l' : Permutation l l' -> NoDup l -> NoDup l'.",
            "VernacStartTheoremProof",
            "16986a92d55a85ec1969b247000056ea8f07a0ff"
        ],
        [
            "induction 1; auto.",
            "VernacExtend",
            "1f706f8985097cf30b2449a4fda927a48fc6a84a"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inversion_clear 1; constructor; eauto using Permutation_in.",
            "VernacExtend",
            "e37c56739c2b73f5c29bdce2c08aef321afe2a88"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "inversion_clear 1 as [|? ? H1 H2].",
            "VernacExtend",
            "f3bd53207f0a1c0fa9979dfc154aa1d8bc6af54f"
        ],
        [
            "inversion_clear H2; simpl in *.",
            "VernacExtend",
            "028b4c2c522650ebd551f9b26e37c110baf5b09d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "simpl; intuition.",
            "VernacExtend",
            "2a8f84ed3abedbe9d9fbb80aa4215114cbdbe500"
        ],
        [
            "constructor; intuition.",
            "VernacExtend",
            "0de9fba06ed64a4a6272181ad1ebff0d6770f93e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance Permutation_NoDup' : Proper (@Permutation A ==> iff) (@NoDup A) | 10.",
            "VernacInstance",
            "fdbe86b732bd8ffb910f339ae6d183d7f12db8c5"
        ],
        [
            "repeat red; eauto using Permutation_NoDup.",
            "VernacExtend",
            "f6f7f662c0f4a0f09087f70ef2356553f0aa1b88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Permutation_properties.",
            "VernacEndSegment",
            "8c3be55c73300cf07711fbf62e4223589e1e1b99"
        ],
        [
            "Section Permutation_map.",
            "VernacBeginSection",
            "0f2a4211c618726a3bfcff1ab675dd89f85f6506"
        ],
        [
            "Variable A B : Type.",
            "VernacAssumption",
            "b4e42fd426c23cd1c77c79fc26c25f95338235a5"
        ],
        [
            "Variable f : A -> B.",
            "VernacAssumption",
            "3004efd9a4fde9fa8a2da5ba1f90ed0ede9c0963"
        ],
        [
            "Lemma Permutation_map l l' : Permutation l l' -> Permutation (map f l) (map f l').",
            "VernacStartTheoremProof",
            "28bdeea57760e4214077524bf5ab086af960fc0f"
        ],
        [
            "induction 1; simpl; eauto.",
            "VernacExtend",
            "8787a343e2b654784bd98fd42b8495addba4d4a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance Permutation_map' : Proper (@Permutation A ==> @Permutation B) (map f) | 10.",
            "VernacInstance",
            "ae17ccfdbc32a3e92c6b66cdf7e42c382d263d88"
        ],
        [
            "exact Permutation_map.",
            "VernacExtend",
            "3852562d18e7be20dddb03e7a4a87c268c77af90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Permutation_map.",
            "VernacEndSegment",
            "8846abb7a12f2d06ca5e6c9a72f05d8980a27731"
        ],
        [
            "Lemma nat_bijection_Permutation n f : bFun n f -> Injective f -> let l := seq 0 n in Permutation (map f l) l.",
            "VernacStartTheoremProof",
            "a96bef00bafaf3b645ee3e991d1b4eb047997cb9"
        ],
        [
            "intros Hf BD.",
            "VernacExtend",
            "a929c90e9fd167c0927a344624ef6e2f4da40816"
        ],
        [
            "apply NoDup_Permutation_bis; auto using Injective_map_NoDup, seq_NoDup.",
            "VernacExtend",
            "ee83a11ca7ef3268745baccb6225715c479efc3e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "now rewrite map_length.",
            "VernacExtend",
            "8c462a424001e55696f583f567ff7812cade1a9b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "rewrite in_map_iff.",
            "VernacExtend",
            "a55211f52b1485764a1a9aeded8063ea6d2e66ea"
        ],
        [
            "intros (y & <- & Hy').",
            "VernacExtend",
            "5051f14879d52a645e34c597832bd9c5da0b9e30"
        ],
        [
            "rewrite in_seq in *.",
            "VernacExtend",
            "5d3ba59ae0a255f83b177fc8eb071300349a01f0"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct Hy' as (_,Hy').",
            "VernacExtend",
            "fd1db519eb9497b9b716ed8047af537ff06f730a"
        ],
        [
            "auto with arith.",
            "VernacExtend",
            "0a06d2be3685676bb8fa998f149557e231db6506"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Permutation_alt.",
            "VernacBeginSection",
            "b573d3fec7b74ae1e674f404cdb41122bca9c2e3"
        ],
        [
            "Variable A:Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Implicit Type a : A.",
            "VernacReserve",
            "450e87ecfcc038bcc069ee70266f40590ca367b7"
        ],
        [
            "Implicit Type l : list A.",
            "VernacReserve",
            "4eeeec2072fe653c33dfb514ea20525753c76eb0"
        ],
        [
            "Let adapt f n := let m := f (S n) in if le_lt_dec m (f 0) then m else pred m.",
            "VernacDefinition",
            "85f93bea2445eff60738dc5fbfca101fdbd1bfd7"
        ],
        [
            "Let adapt_injective f : Injective f -> Injective (adapt f).",
            "VernacDefinition",
            "db6f120f5b0be01bbcb262257589e16b734f5454"
        ],
        [
            "unfold adapt.",
            "VernacExtend",
            "b30e7015ec4221e008464f08a614d303346b636c"
        ],
        [
            "intros Hf x y EQ.",
            "VernacExtend",
            "a0adb2d715ddbdf943efb0728e88cfcb78ff96a6"
        ],
        [
            "destruct le_lt_dec as [LE|LT]; destruct le_lt_dec as [LE'|LT'].",
            "VernacExtend",
            "5d539b2b606564bf254088f013b4c965b3e35653"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now apply eq_add_S, Hf.",
            "VernacExtend",
            "6aa280e47d890266008565d0096b772316ee730a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Lt.le_lt_or_eq in LE.",
            "VernacExtend",
            "46d9ca9c2361e0eee193f5f0a8e7bc4116b51d5f"
        ],
        [
            "destruct LE as [LT|EQ']; [|now apply Hf in EQ'].",
            "VernacExtend",
            "732e11d72c871fd89bbb4884d9ee5b1ebf9a1eb5"
        ],
        [
            "unfold lt in LT.",
            "VernacExtend",
            "b25358d86fd21d70157a171414b6af839561cd0e"
        ],
        [
            "rewrite EQ in LT.",
            "VernacExtend",
            "13e962c8bddcaf29641a21715a726b82b30e1bed"
        ],
        [
            "rewrite <- (Lt.S_pred _ _ LT') in LT.",
            "VernacExtend",
            "cd9875d41780bb1ea9afcccd8a866ff81f7a20d1"
        ],
        [
            "elim (Lt.lt_not_le _ _ LT' LT).",
            "VernacExtend",
            "5bcec0e18e8fc7a88b1ef7e0fa5b660b75aa98c8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Lt.le_lt_or_eq in LE'.",
            "VernacExtend",
            "7927483b1ab6d2281a02c8e2be06301933636268"
        ],
        [
            "destruct LE' as [LT'|EQ']; [|now apply Hf in EQ'].",
            "VernacExtend",
            "fbd9fc3c70ccebe89c365aaea0ab7383f84af292"
        ],
        [
            "unfold lt in LT'.",
            "VernacExtend",
            "cf1981e3c596022d6a9712039fd1018fdd0d20d4"
        ],
        [
            "rewrite <- EQ in LT'.",
            "VernacExtend",
            "222f45b9fa41945111a14a71de008bf9bea81301"
        ],
        [
            "rewrite <- (Lt.S_pred _ _ LT) in LT'.",
            "VernacExtend",
            "a76a84fb15929f27aa8d0fcb9fa390f8cf536ca7"
        ],
        [
            "elim (Lt.lt_not_le _ _ LT LT').",
            "VernacExtend",
            "01321b8a1c790aa8b788b91ea2eb6fd22ec12b41"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply eq_add_S, Hf.",
            "VernacExtend",
            "be421d1a32a660c8fdf3212869636075778f2708"
        ],
        [
            "now rewrite (Lt.S_pred _ _ LT), (Lt.S_pred _ _ LT'), EQ.",
            "VernacExtend",
            "d557328c42e3db977a2368a1463a319d5780dbae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let adapt_ok a l1 l2 f : Injective f -> length l1 = f 0 -> forall n, nth_error (l1++a::l2) (f (S n)) = nth_error (l1++l2) (adapt f n).",
            "VernacDefinition",
            "e12b88d6fe29b2d9863d620b8b7f2221ee843b5f"
        ],
        [
            "unfold adapt.",
            "VernacExtend",
            "b30e7015ec4221e008464f08a614d303346b636c"
        ],
        [
            "intros Hf E n.",
            "VernacExtend",
            "315dfabeca240df8aad0470f700945735b705e16"
        ],
        [
            "destruct le_lt_dec as [LE|LT].",
            "VernacExtend",
            "77dfe82e7b49cbdc12818b6c85611c9d5a04079d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Lt.le_lt_or_eq in LE.",
            "VernacExtend",
            "46d9ca9c2361e0eee193f5f0a8e7bc4116b51d5f"
        ],
        [
            "destruct LE as [LT|EQ]; [|now apply Hf in EQ].",
            "VernacExtend",
            "6fd57fbfcc1474436e6df32fdc62a447cd6479d2"
        ],
        [
            "rewrite <- E in LT.",
            "VernacExtend",
            "a0eb89158340a88fad3681f3ddb3380f1c921002"
        ],
        [
            "rewrite 2 nth_error_app1; auto.",
            "VernacExtend",
            "13722ec60389a0eff4ff0429d69c4a456d724ecd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (Lt.S_pred _ _ LT) at 1.",
            "VernacExtend",
            "f3e3b6022e602c880a11e61dc7f34858d15347a7"
        ],
        [
            "rewrite <- E, (Lt.S_pred _ _ LT) in LT.",
            "VernacExtend",
            "ce8a5cfbe9f304a3a4594aa86c5e44dd58ef485e"
        ],
        [
            "rewrite 2 nth_error_app2; auto with arith.",
            "VernacExtend",
            "e65478d34feb661ff445dc971898c2b7c3c4a3e5"
        ],
        [
            "rewrite <- Minus.minus_Sn_m; auto with arith.",
            "VernacExtend",
            "ba4d745d47c6b1d167b6a604615d672af623af3b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_nth_error l l' : Permutation l l' <-> (length l = length l' /\\ exists f:nat->nat, Injective f /\\ forall n, nth_error l' n = nth_error l (f n)).",
            "VernacStartTheoremProof",
            "4fa68bf5fc4c2390c528c9fd3ed696e0cb8a1b46"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros P.",
            "VernacExtend",
            "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
        ],
        [
            "split; [now apply Permutation_length|].",
            "VernacExtend",
            "2a790f63aa42d606d75b0e7ad35c623a18034dc6"
        ],
        [
            "induction P.",
            "VernacExtend",
            "1f158d23cb3dba83389c7bd7f4f1eef207f2c173"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists (fun n => n).",
            "VernacExtend",
            "5bb318f9af8b4817f1f0bca979718b42e281a540"
        ],
        [
            "split; try red; auto.",
            "VernacExtend",
            "d412fa5853e9233a46a192940c4175eb366a936c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct IHP as (f & Hf & Hf').",
            "VernacExtend",
            "e34b13c27079342a262128a826c71402a77fdbf4"
        ],
        [
            "exists (fun n => match n with O => O | S n => S (f n) end).",
            "VernacExtend",
            "128deaa7a749582fb038d6f11a522bc80fb89543"
        ],
        [
            "split; try red.",
            "VernacExtend",
            "6f7585842bc893a45441962eea0be50c6b8d3847"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros [|y] [|z]; simpl; now auto.",
            "VernacExtend",
            "a552098c203a1cdc8e13325eaeda0b5fd9b40a52"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros [|n]; simpl; auto.",
            "VernacExtend",
            "905e8058cec4d7c8537d8b98a79c8e1342067ce9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists (fun n => match n with 0 => 1 | 1 => 0 | n => n end).",
            "VernacExtend",
            "662e0be6c67f831773bf4340c33aea4f25ff0972"
        ],
        [
            "split; try red.",
            "VernacExtend",
            "6f7585842bc893a45441962eea0be50c6b8d3847"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros [|[|z]] [|[|t]]; simpl; now auto.",
            "VernacExtend",
            "53d23e497934f34dba5223b7e0d13852021ca5ec"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros [|[|n]]; simpl; auto.",
            "VernacExtend",
            "2a8ecbf518df43469fe958a2584e4c8399136b1e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct IHP1 as (f & Hf & Hf').",
            "VernacExtend",
            "95a2a543587098951f2f0625fc6ff4fdf01565d7"
        ],
        [
            "destruct IHP2 as (g & Hg & Hg').",
            "VernacExtend",
            "420595d35dde7ab6e29269b9cb070b66a2497d8c"
        ],
        [
            "exists (fun n => f (g n)).",
            "VernacExtend",
            "2dbfcaa9e519482c2238ccdcc33df5b6b5ab7e79"
        ],
        [
            "split; try red.",
            "VernacExtend",
            "6f7585842bc893a45441962eea0be50c6b8d3847"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "rewrite <- Hf'; auto.",
            "VernacExtend",
            "40067b97515432e4e789cf9196d36a2b2bdda7b0"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "revert l.",
            "VernacExtend",
            "11a722880df1bc386870f9ce37f36e8be2871e9c"
        ],
        [
            "induction l'.",
            "VernacExtend",
            "773e04ff833259851fb65b4bcd371f3996d47e26"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros [|l] (E & _); now auto.",
            "VernacExtend",
            "260f06913bc95b17cbd13d87fc0758b6b106a9d9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros l (E & f & Hf & Hf').",
            "VernacExtend",
            "ae66cf756d37658e8a8cff0889b99e46082f387a"
        ],
        [
            "simpl in E.",
            "VernacExtend",
            "f1922fc7926b9299c9e76d37c311dafc4bb74a16"
        ],
        [
            "assert (Ha : nth_error l (f 0) = Some a) by (symmetry; apply (Hf' 0)).",
            "VernacExtend",
            "b95651de7728bde921bffc415f3308477e2280fe"
        ],
        [
            "destruct (nth_error_split l (f 0) Ha) as (l1 & l2 & L12 & L1).",
            "VernacExtend",
            "4efbb78172893a43fef25fabcbf8153aaef79749"
        ],
        [
            "rewrite L12.",
            "VernacExtend",
            "de0e27c828b21e0f22b27fe0934e719032028ecc"
        ],
        [
            "rewrite <- Permutation_middle.",
            "VernacExtend",
            "adb64c99b5205db9cb814d9a6102f447b298dc50"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "apply IHl'; split; [|exists (adapt f); split].",
            "VernacExtend",
            "51f2fe0520dabe89b0997ca613396c2a57fa8f82"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "revert E.",
            "VernacExtend",
            "d662cded303c06da8a5e4209974759f5e1f58a8d"
        ],
        [
            "rewrite L12, !app_length.",
            "VernacExtend",
            "abca9a1fc838da890e1fb739559a5726a917201f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- plus_n_Sm.",
            "VernacExtend",
            "10308ef961b07f08e71cba91e06650cc774994fe"
        ],
        [
            "now injection 1.",
            "VernacExtend",
            "3613f22935e1d9491aedb1db367e0f8bcf1c6c82"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "now apply adapt_injective.",
            "VernacExtend",
            "9187346a8fa5125fcdc993a8fa70665e38666339"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intro n.",
            "VernacExtend",
            "7b184e6f13215b0f6a04b4277e277a724a645d52"
        ],
        [
            "rewrite <- (adapt_ok a), <- L12; auto.",
            "VernacExtend",
            "035b812807a9030da2f6e9b38c7c777abb19b081"
        ],
        [
            "apply (Hf' (S n)).",
            "VernacExtend",
            "3bca2a7eb1ab2cd5fc7e9cd24d96ee85bcc37e48"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_nth_error_bis l l' : Permutation l l' <-> exists f:nat->nat, Injective f /\\ bFun (length l) f /\\ (forall n, nth_error l' n = nth_error l (f n)).",
            "VernacStartTheoremProof",
            "2de0ce927f00833f8f2e02dd60592f21960ff474"
        ],
        [
            "rewrite Permutation_nth_error; split.",
            "VernacExtend",
            "d4d83f4d378c9ed5005784cab5f5675c28a2e058"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (E & f & Hf & Hf').",
            "VernacExtend",
            "d2a2ce68c2bfb492eb20c273207322d84a159d7a"
        ],
        [
            "exists f.",
            "VernacExtend",
            "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
        ],
        [
            "do 2 (split; trivial).",
            "VernacExtend",
            "d9e94d75e2a35a8176032418d8d00d8a20ae1154"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "destruct (Lt.le_or_lt (length l) (f n)) as [LE|LT]; trivial.",
            "VernacExtend",
            "d173dc4ca52fa3dc19ffd9ee046e079aa50e7977"
        ],
        [
            "rewrite <- nth_error_None, <- Hf', nth_error_None, <- E in LE.",
            "VernacExtend",
            "f7cb1e831e54f40475742fa5847032405e1e9dd6"
        ],
        [
            "elim (Lt.lt_not_le _ _ Hn LE).",
            "VernacExtend",
            "dbd51ebfacff6d24f61d061beb00edc8b1ebaffd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (f & Hf & Hf2 & Hf3); split; [|exists f; auto].",
            "VernacExtend",
            "d3ff20cae0925384d1dbc06f1077b2979db45160"
        ],
        [
            "assert (H : length l' <= length l') by auto with arith.",
            "VernacExtend",
            "3062d30c1aa7e2150397a219ddf78e02f36a9815"
        ],
        [
            "rewrite <- nth_error_None, Hf3, nth_error_None in H.",
            "VernacExtend",
            "999dd6162a46d5cd4131c5b90645247b2f9fda22"
        ],
        [
            "destruct (Lt.le_or_lt (length l) (length l')) as [LE|LT]; [|apply Hf2 in LT; elim (Lt.lt_not_le _ _ LT H)].",
            "VernacExtend",
            "bc9f8338e4738333c31ee6af309d1117ef7c8382"
        ],
        [
            "apply Lt.le_lt_or_eq in LE.",
            "VernacExtend",
            "46d9ca9c2361e0eee193f5f0a8e7bc4116b51d5f"
        ],
        [
            "destruct LE as [LT|EQ]; trivial.",
            "VernacExtend",
            "97e7155c766eeef35008beb314b6b77412d82f10"
        ],
        [
            "rewrite <- nth_error_Some, Hf3, nth_error_Some in LT.",
            "VernacExtend",
            "406925373c9b85bd06848f8215eb76ea042831c4"
        ],
        [
            "assert (Hf' : bInjective (length l) f).",
            "VernacExtend",
            "a5b75edebb36079e23c91e43ec450ac2ee940aa0"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros x y _ _ E.",
            "VernacExtend",
            "071a864f63b51b0c73062e4d0e10a620d7b539f0"
        ],
        [
            "now apply Hf.",
            "VernacExtend",
            "5c6113533709537cf9c3fcf89a2ea0f72b961953"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "rewrite (bInjective_bSurjective Hf2) in Hf'.",
            "VernacExtend",
            "1de555b79b3db666198bdc770ce2c1bf15d0044e"
        ],
        [
            "destruct (Hf' _ LT) as (y & Hy & Hy').",
            "VernacExtend",
            "8a2627f66e1caa751ad65aac2c092692439d1ca1"
        ],
        [
            "apply Hf in Hy'.",
            "VernacExtend",
            "62ffe702a2516144029c3b91ee25fd3e9c365ea9"
        ],
        [
            "subst y.",
            "VernacExtend",
            "f056a00b852bc549d1b8bb21d500c90d8ff37bf8"
        ],
        [
            "elim (Lt.lt_irrefl _ Hy).",
            "VernacExtend",
            "4ccfbadf5dbefee69b6e01e89d53a9bd4974fb3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Permutation_nth l l' d : Permutation l l' <-> (let n := length l in length l' = n /\\ exists f:nat->nat, bFun n f /\\ bInjective n f /\\ (forall x, x < n -> nth x l' d = nth (f x) l d)).",
            "VernacStartTheoremProof",
            "27cb0ad03087eba31b3f8c17c3bf08d961b49658"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "assert (E := Permutation_length H).",
            "VernacExtend",
            "5e8913fe998cf6433cb1a033ddbbe95dc7f59ed9"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply Permutation_nth_error_bis in H.",
            "VernacExtend",
            "2dfeacb739fa1ae2f361a534567eb75770cfe8df"
        ],
        [
            "destruct H as (f & Hf & Hf2 & Hf3).",
            "VernacExtend",
            "03708fd2de5cbac785e433707ddc77ccf61bf663"
        ],
        [
            "exists f.",
            "VernacExtend",
            "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
        ],
        [
            "split; [|split]; auto.",
            "VernacExtend",
            "67cc0d66fb7cc73eb9e9cd5c6654f12477784046"
        ],
        [
            "intros x y _ _ Hxy.",
            "VernacExtend",
            "3a54e38e37a8a7a5cf6ac9569b64d32bdd822db8"
        ],
        [
            "now apply Hf.",
            "VernacExtend",
            "5c6113533709537cf9c3fcf89a2ea0f72b961953"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "rewrite <- 2 nth_default_eq.",
            "VernacExtend",
            "05db293e07941df8e548167eb89036d66b69c618"
        ],
        [
            "unfold nth_default.",
            "VernacExtend",
            "281c5a0d9971d29b4aa6d4b09742097f59995c98"
        ],
        [
            "now rewrite Hf3.",
            "VernacExtend",
            "25507553e121cacee83f6c8cfd95954ef80b5bbb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (E & f & Hf1 & Hf2 & Hf3).",
            "VernacExtend",
            "e9f3720c57cba23694486a749f5519d866afa08f"
        ],
        [
            "rewrite Permutation_nth_error.",
            "VernacExtend",
            "e60594f611a62cd94d976b55441f750b8893117a"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "exists (fun n => if le_lt_dec (length l) n then n else f n).",
            "VernacExtend",
            "41fffdf51f8c90369ceea3c1bc4f8eaf72993972"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "destruct le_lt_dec as [LE|LT]; destruct le_lt_dec as [LE'|LT']; auto.",
            "VernacExtend",
            "0232317f0efcfeed77f6e48f08144f8447956b88"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Hf1 in LT'.",
            "VernacExtend",
            "f8a1fc4d24bca66c4e3da6ba34b86ba604678398"
        ],
        [
            "intros ->.",
            "VernacExtend",
            "e8af3665779d92274caf81949b4a0e6232d89ea7"
        ],
        [
            "elim (Lt.lt_irrefl (f y)).",
            "VernacExtend",
            "d15f151449aabf404d30952893558f5d32bb6954"
        ],
        [
            "eapply Lt.lt_le_trans; eauto.",
            "VernacExtend",
            "cd08baba1ff4e6391dbfa4fc6316308df4de3968"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply Hf1 in LT.",
            "VernacExtend",
            "2f92415af400e1c65643cfe9ebd6ab094c4564de"
        ],
        [
            "intros <-.",
            "VernacExtend",
            "f92abb181e804805d99c6631ed9d612184f20066"
        ],
        [
            "elim (Lt.lt_irrefl (f x)).",
            "VernacExtend",
            "bfde53389befb81b7f9d297d63fe7940f8b71c03"
        ],
        [
            "eapply Lt.lt_le_trans; eauto.",
            "VernacExtend",
            "cd08baba1ff4e6391dbfa4fc6316308df4de3968"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "destruct le_lt_dec as [LE|LT].",
            "VernacExtend",
            "77dfe82e7b49cbdc12818b6c85611c9d5a04079d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (LE' : length l' <= n) by (now rewrite E).",
            "VernacExtend",
            "20ff995123651e98e5737869c8ece7da6e7942cc"
        ],
        [
            "rewrite <- nth_error_None in LE, LE'.",
            "VernacExtend",
            "7beb03dbda12afa3ab0cf942928d1af8715ea291"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert (LT' : n < length l') by (now rewrite E).",
            "VernacExtend",
            "1e9373bb8232122d49a189546ab1e035f3ef1caa"
        ],
        [
            "specialize (Hf3 n LT).",
            "VernacExtend",
            "1af20d929f68ae456ad1367ad71069ceebeb7cb4"
        ],
        [
            "rewrite <- 2 nth_default_eq in Hf3.",
            "VernacExtend",
            "8b18f8679b96f23aa1b9b30f7ee362b633c7ec43"
        ],
        [
            "unfold nth_default in Hf3.",
            "VernacExtend",
            "3c7c28cae6b239637fe5b711d4ee1b1370de25a8"
        ],
        [
            "apply Hf1 in LT.",
            "VernacExtend",
            "2f92415af400e1c65643cfe9ebd6ab094c4564de"
        ],
        [
            "rewrite <- nth_error_Some in LT, LT'.",
            "VernacExtend",
            "1ee4368b2a57232e113bdc8d81eab43911211376"
        ],
        [
            "do 2 destruct nth_error; congruence.",
            "VernacExtend",
            "a566b437eac42935c4b976267793b480eeb3fb04"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Permutation_alt.",
            "VernacEndSegment",
            "aa9fb21c98b61830d95e689f887e132fa85e41df"
        ],
        [
            "Notation Permutation_app_swap := Permutation_app_comm (only parsing).",
            "VernacSyntacticDefinition",
            "f0b579f189c570a06953aae4244c9f99f6263efc"
        ]
    ],
    "proofs": [
        {
            "name": "Permutation_nil",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros l HF.",
                        "VernacExtend",
                        "7f1e0b43d1260931f0e3cf390da141a2be3c5d0e"
                    ]
                },
                {
                    "command": [
                        "remember (@nil A) as m in HF.",
                        "VernacExtend",
                        "6335d4488bb1fab736f885184509b306e5cf6727"
                    ]
                },
                {
                    "command": [
                        "induction HF; discriminate || auto.",
                        "VernacExtend",
                        "6c6f8ef10e4f13b3a344c78c81b0f0c00e25a1d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_nil_cons",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros l x HF.",
                        "VernacExtend",
                        "5d15334a599ecd3c258adbaf551a2d75b50113f6"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_nil in HF; discriminate.",
                        "VernacExtend",
                        "a957fe79cc1141affb23c83bc0fb91b404ddd2a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_refl",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "induction l; constructor.",
                        "VernacExtend",
                        "cfa4e4c76c754a2f046f1539500e4613fc139033"
                    ]
                },
                {
                    "command": [
                        "exact IHl.",
                        "VernacExtend",
                        "092ed5cd46596dc50420405f8143ea44eafb778d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_sym",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intros l l' Hperm; induction Hperm; auto.",
                        "VernacExtend",
                        "819bd239e7ddc6f707131adca57b6838e2b01105"
                    ]
                },
                {
                    "command": [
                        "apply perm_trans with (l':=l'); assumption.",
                        "VernacExtend",
                        "a5f7692ce0106e90391e534a6026c9e87213e66d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_trans",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "exact perm_trans.",
                        "VernacExtend",
                        "48eb25891feafb173e4bc1dbee1569107229414a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_cons",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "repeat intro; subst; auto using perm_skip.",
                        "VernacExtend",
                        "d171da98e573f1176a73127987218751810bf524"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_in",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros l l' x Hperm; induction Hperm; simpl; tauto.",
                        "VernacExtend",
                        "724d06e7a632c13ed43b71844144c54c02abe790"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_in'",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "repeat red; intros; subst; eauto using Permutation_in.",
                        "VernacExtend",
                        "0008c0a1d59312951315f8890c38619787ff09e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_app_tail",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intros l l' tl Hperm; induction Hperm as [|x l l'|x y l|l l' l'']; simpl; auto.",
                        "VernacExtend",
                        "8f9549b8ae5b28e06095c85dd1ca38ded3beb702"
                    ]
                },
                {
                    "command": [
                        "eapply Permutation_trans with (l':=l'++tl); trivial.",
                        "VernacExtend",
                        "f4af3034c4fe0fcc466d189434fae5b3f3871211"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_app_head",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros l tl tl' Hperm; induction l; [trivial | repeat rewrite <- app_comm_cons; constructor; assumption].",
                        "VernacExtend",
                        "4b9720ecde88a5c5291aa111af8160bc46387518"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_app",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intros l m l' m' Hpermll' Hpermmm'; induction Hpermll' as [|x l l'|x y l|l l' l'']; repeat rewrite <- app_comm_cons; auto.",
                        "VernacExtend",
                        "ddb42ac03da60814e4199b03534f289db5365bb3"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_trans with (l' := (x :: y :: l ++ m)); [idtac | repeat rewrite app_comm_cons; apply Permutation_app_head]; trivial.",
                        "VernacExtend",
                        "e540392782d8949ed0b5e294e4f3cb13239d9e21"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_trans with (l' := (l' ++ m')); try assumption.",
                        "VernacExtend",
                        "d2689016f5bdc4531d91a3b63805899790894ab8"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_app_tail; assumption.",
                        "VernacExtend",
                        "0767998cdc8bec9e90223c8dee9aa3549c712c75"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_app'",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "repeat intro; now apply Permutation_app.",
                        "VernacExtend",
                        "02b6c7f69d852212d4cc6d019499af8d0ea4bbb2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_add_inside",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intros; apply Permutation_app; auto.",
                        "VernacExtend",
                        "3a43ebe94fbab438828f6e218f9a49d485ae9e7b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_cons_append",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "induction l; intros; auto.",
                        "VernacExtend",
                        "37afb2e8507f77ddaf8e1df5ca5e59f3623a57d0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHl; auto.",
                        "VernacExtend",
                        "3caf862ca6806d59542cc74bf9ce681744f7a041"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_app_comm",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "induction l as [|x l]; simpl; intro l'.",
                        "VernacExtend",
                        "4b0905d094740a2604e56623df6e9cb997f05431"
                    ]
                },
                {
                    "command": [
                        "rewrite app_nil_r; trivial.",
                        "VernacExtend",
                        "4be655f1c51446e53bf6cbd637a7efb48b509994"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl.",
                        "VernacExtend",
                        "d4d0cebbb161cf1462b69fd1ed2d76db253a98c6"
                    ]
                },
                {
                    "command": [
                        "rewrite app_comm_cons, Permutation_cons_append.",
                        "VernacExtend",
                        "94a026b0f2a40d15e46dcc8cc91da01d76989ed5"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- app_assoc.",
                        "VernacExtend",
                        "cba4b726d640f473641d7d5e62261f21ab76a238"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_cons_app",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros l l1 l2 a H.",
                        "VernacExtend",
                        "946b06981444e9d867fcdce838feb042520a76ec"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "rewrite app_comm_cons, Permutation_cons_append.",
                        "VernacExtend",
                        "94a026b0f2a40d15e46dcc8cc91da01d76989ed5"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- app_assoc.",
                        "VernacExtend",
                        "cba4b726d640f473641d7d5e62261f21ab76a238"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_Add",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl; trivial.",
                        "VernacExtend",
                        "b8eeca75d108d03b0acb862089fdbdf1fa8ae526"
                    ]
                },
                {
                    "command": [
                        "rewrite perm_swap.",
                        "VernacExtend",
                        "ed98241ca5742f13823e25287bd4d1f8e4c65fe2"
                    ]
                },
                {
                    "command": [
                        "now apply perm_skip.",
                        "VernacExtend",
                        "af9afe6383b621dcc9da09bc3089faa599220763"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_middle",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_rev",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "induction l as [| x l]; simpl; trivial.",
                        "VernacExtend",
                        "d60d6e9bf13193722bd136fab29c25e704318201"
                    ]
                },
                {
                    "command": [
                        "now rewrite IHl at 1.",
                        "VernacExtend",
                        "aff0744e2631479530fbf6bf22db71bf49f9a942"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_rev'",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "repeat intro; now rewrite <- 2 Permutation_rev.",
                        "VernacExtend",
                        "1d81455c458d8a6932b53c3a3aca8e67ed429df3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_length",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intros l l' Hperm; induction Hperm; simpl; auto.",
                        "VernacExtend",
                        "e67b8e25c9922e34dd68e9bf6e33d1e0b6dcb71e"
                    ]
                },
                {
                    "command": [
                        "now transitivity (length l').",
                        "VernacExtend",
                        "102c5a2e2a2a7a25fd096a2a4579775ba886c87b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_length'",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "exact Permutation_length.",
                        "VernacExtend",
                        "06e63f8864cbe4a6d7950ecbe713d4c80d89184c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_ind_bis",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "intros P Hnil Hskip Hswap Htrans.",
                        "VernacExtend",
                        "524c5bd9aecaa5b1bd2b5a89f645fcb680fd2452"
                    ]
                },
                {
                    "command": [
                        "induction 1; auto.",
                        "VernacExtend",
                        "1f706f8985097cf30b2449a4fda927a48fc6a84a"
                    ]
                },
                {
                    "command": [
                        "apply Htrans with (x::y::l); auto.",
                        "VernacExtend",
                        "e2fcb3243ba746fd8340f431ba91c7e7a283fe53"
                    ]
                },
                {
                    "command": [
                        "apply Hswap; auto.",
                        "VernacExtend",
                        "b2d0cffdf814523b215978e7cee53c5e5de67b26"
                    ]
                },
                {
                    "command": [
                        "induction l; auto.",
                        "VernacExtend",
                        "6df74a097ee826dbbeb45167e7678377d4e52265"
                    ]
                },
                {
                    "command": [
                        "apply Hskip; auto.",
                        "VernacExtend",
                        "2032bb916c1ab7d0c65cd4b35b98ab0aa72f0171"
                    ]
                },
                {
                    "command": [
                        "apply Hskip; auto.",
                        "VernacExtend",
                        "2032bb916c1ab7d0c65cd4b35b98ab0aa72f0171"
                    ]
                },
                {
                    "command": [
                        "induction l; auto.",
                        "VernacExtend",
                        "6df74a097ee826dbbeb45167e7678377d4e52265"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_nil_app_cons",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "intros l l' x HF.",
                        "VernacExtend",
                        "f4a32268e598dcc551d9680a5ea450c1e0eb9fde"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_nil in HF.",
                        "VernacExtend",
                        "d45ef7a9d4ca36b058d0a6f1956bd727bf1539c3"
                    ]
                },
                {
                    "command": [
                        "destruct l; discriminate.",
                        "VernacExtend",
                        "a095a1c2bb2291eed1d2d1b56e5ba17a77ed3f7d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_Add_inv",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "revert l1 l2.",
                        "VernacExtend",
                        "47e4e91a621534fe7dcec78c9d1bc04be09b80ab"
                    ]
                },
                {
                    "command": [
                        "refine (Permutation_ind_bis _ _ _ _ _).",
                        "VernacExtend",
                        "eca4e1b7c733b8dc8a365a2e05def38f424f395d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 1.",
                        "VernacExtend",
                        "389c04e455824abd99633abf60667aeaa306819a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros x l1 l2 PE IH.",
                        "VernacExtend",
                        "780dd8806954af5a154bf480bcaac61af6efdcd7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "InvAdd; try finish_basic_perms PE.",
                        "VernacExtend",
                        "540250d15be1bac1f06969696399cb63846d0041"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "now apply IH.",
                        "VernacExtend",
                        "f55d33d07a7d04fb33e00d25db71d556dde4e829"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros x y l1 l2 PE IH.",
                        "VernacExtend",
                        "6fd870d9eed3f14e95e2b46ebc12b9214e05b50a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "InvAdd; try finish_basic_perms PE.",
                        "VernacExtend",
                        "540250d15be1bac1f06969696399cb63846d0041"
                    ]
                },
                {
                    "command": [
                        "rewrite perm_swap; do 2 constructor.",
                        "VernacExtend",
                        "75b82495a4e2815d70aa672f064376c5e0b37951"
                    ]
                },
                {
                    "command": [
                        "now apply IH.",
                        "VernacExtend",
                        "f55d33d07a7d04fb33e00d25db71d556dde4e829"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros l1 l l2 PE IH PE' IH' l1' l2' AD1 AD2.",
                        "VernacExtend",
                        "cb95b72150fd4a082d357a54ab71b830a7c3d419"
                    ]
                },
                {
                    "command": [
                        "assert (Ha : In a l).",
                        "VernacExtend",
                        "f414707a99a1f68a6b683d3c0c5f8b7810563b1b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite <- PE.",
                        "VernacExtend",
                        "e56322a280835a52c556fc58a40e0682f871264a"
                    ]
                },
                {
                    "command": [
                        "rewrite (Add_in AD1).",
                        "VernacExtend",
                        "91ef1036ebaa29db4bc2d45ab57e1fa452c5b74d"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (Add_inv _ _ Ha) as (l',AD).",
                        "VernacExtend",
                        "c1221a5db827c8c2670c8f286cf2fbb405ac1cc5"
                    ]
                },
                {
                    "command": [
                        "transitivity l'; auto.",
                        "VernacExtend",
                        "5661d143dc9648d137bc97f784555059019c0078"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_app_inv",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply Permutation_Add_inv; eauto using Add_app.",
                        "VernacExtend",
                        "0090fae4cc6e5dfd4282a7bf4b042ea235812dc6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_cons_inv",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "eapply Permutation_Add_inv; eauto using Add_head.",
                        "VernacExtend",
                        "6605f63ff85c80a504f90771ed5cc7432b0b0052"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_cons_app_inv",
            "line_nb": 162,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "eapply Permutation_Add_inv; eauto using Add_head, Add_app.",
                        "VernacExtend",
                        "fea4ff761a6d7422a6131a759e99daca2e7cbe13"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_app_inv_l",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; auto.",
                        "VernacExtend",
                        "2300dcaca2cea0b38a7d9c3b8a28bfa9feaddecf"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply IHl.",
                        "VernacExtend",
                        "af412c6009bba78f939aa53ab07dcd1baaf5888b"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_cons_inv with a; auto.",
                        "VernacExtend",
                        "4c64d9e48b2ec2f8740a3c75dbf25c6497536108"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_app_inv_r",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "rewrite 2 (Permutation_app_comm _ l).",
                        "VernacExtend",
                        "3351901398c9f7371a199a5963c9ef925e2e43b8"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_app_inv_l.",
                        "VernacExtend",
                        "dd3b6b3d8f09b676653eb205af9b586df143322e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_length_1_inv",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "intros a l H; remember [a] as m in H.",
                        "VernacExtend",
                        "280ee2f3e00a346444c6a8c570bce106b8fc52c3"
                    ]
                },
                {
                    "command": [
                        "induction H; try (injection Heqm as -> ->); discriminate || auto.",
                        "VernacExtend",
                        "3ca0ebf395a93949380bcd3bfd726a5a101a2273"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_nil in H as ->; trivial.",
                        "VernacExtend",
                        "dfdbf5c89f33355c93e0ec8ecb93dc377751553c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_length_1",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "intros a b H.",
                        "VernacExtend",
                        "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_length_1_inv in H; injection H as ->; trivial.",
                        "VernacExtend",
                        "832a0e5961d935bff06331370a71ed131c620901"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_length_2_inv",
            "line_nb": 185,
            "steps": [
                {
                    "command": [
                        "intros a1 a2 l H; remember [a1;a2] as m in H.",
                        "VernacExtend",
                        "aedb583999877dace2b9ca15c9fa24d674cdaaac"
                    ]
                },
                {
                    "command": [
                        "revert a1 a2 Heqm.",
                        "VernacExtend",
                        "85ccb77bcb16fe46d2401faf25ac925e03e2a74d"
                    ]
                },
                {
                    "command": [
                        "induction H; intros; try (injection Heqm as ? ?; subst); discriminate || (try tauto).",
                        "VernacExtend",
                        "212b10215d45d90fefe95b78de0e81d6fab3bac5"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_length_1_inv in H as ->; left; auto.",
                        "VernacExtend",
                        "b2648a4181662ef3bdc6ff44d8d91a22870bfa83"
                    ]
                },
                {
                    "command": [
                        "apply IHPermutation1 in Heqm as [H1|H1]; apply IHPermutation2 in H1 as []; auto.",
                        "VernacExtend",
                        "81b0b81ed45879fc7b9abcb81da1d1230930f24b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_length_2",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "intros a1 b1 a2 b2 H.",
                        "VernacExtend",
                        "42ecb1ffd810d76b63db87c7675478c0f432fda5"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_length_2_inv in H as [H|H]; injection H as -> ->; auto.",
                        "VernacExtend",
                        "f51ea1af1583208b2bdf876c883989422e17c038"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NoDup_Permutation",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "intros N.",
                        "VernacExtend",
                        "118d8cc76afed992d416336eb00759d8eee4e0b4"
                    ]
                },
                {
                    "command": [
                        "revert l'.",
                        "VernacExtend",
                        "bffd93886c6e5f8c158a8a65c3c4cbbbf8e3f22f"
                    ]
                },
                {
                    "command": [
                        "induction N as [|a l Hal Hl IH].",
                        "VernacExtend",
                        "e76fe7cabdd3abf689e564351b63392fe0a4caa9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct l'; simpl; auto.",
                        "VernacExtend",
                        "95ecd937cc5954f10a1f41361218e234031d4682"
                    ]
                },
                {
                    "command": [
                        "intros Hl' H.",
                        "VernacExtend",
                        "503d2f4dbad5751ba01682d36d678eb89d68a273"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "rewrite (H a); auto.",
                        "VernacExtend",
                        "075faef06aef759f8d7f8b0ca00efdc03474569c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros l' Hl' H.",
                        "VernacExtend",
                        "d2b5ee71973d7502b50639c9c90f702874480db8"
                    ]
                },
                {
                    "command": [
                        "assert (Ha : In a l') by (apply H; simpl; auto).",
                        "VernacExtend",
                        "37d3fe300b243e6921376dd6e51915380ce27a36"
                    ]
                },
                {
                    "command": [
                        "destruct (Add_inv _ _ Ha) as (l'' & AD).",
                        "VernacExtend",
                        "ad2b667b501eaa093e451d05e355a2af8a5a3ad0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Permutation_Add AD).",
                        "VernacExtend",
                        "0e4c333b8711b58339a0185db18da84ed3f3da9c"
                    ]
                },
                {
                    "command": [
                        "apply perm_skip.",
                        "VernacExtend",
                        "88d9c437306dbe4b5a3f0f8693d406682ecdb8a8"
                    ]
                },
                {
                    "command": [
                        "apply IH; clear IH.",
                        "VernacExtend",
                        "0e266c72c994f31c867488a78e738b29186f2831"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "now apply (NoDup_Add AD).",
                        "VernacExtend",
                        "e73ebf8d4e2aa939745f789350caef228818cd2d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply incl_Add_inv with a l'; trivial.",
                        "VernacExtend",
                        "5e92fb5ec5b11afef3b0d09a5e34d364939cfce3"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intro Hx.",
                        "VernacExtend",
                        "218b6ef98d0605f2e1745b1d78b2fbbb6c4b9a85"
                    ]
                },
                {
                    "command": [
                        "assert (Hx' : In x (a::l)).",
                        "VernacExtend",
                        "2a4fe5ad7f9d238a962f6191142925d42142fe8d"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "rewrite (Add_in AD).",
                        "VernacExtend",
                        "df804d918a9875378bda0207cb7009d1c8d55eb2"
                    ]
                },
                {
                    "command": [
                        "now right.",
                        "VernacExtend",
                        "18eb395a45fbe5648757d528efaf583b695576c7"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct Hx'; simpl; trivial.",
                        "VernacExtend",
                        "33ee0764c5fbafc747cb8b42236efb02f32a9027"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "rewrite (NoDup_Add AD) in Hl'.",
                        "VernacExtend",
                        "5507d41262420ce7acf4fb3408873e1a6281d356"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NoDup_Permutation_bis",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply NoDup_Permutation; auto.",
                        "VernacExtend",
                        "47385b3f57acf2185f77bb307133f7c99e1a1d01"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply NoDup_length_incl; trivial.",
                        "VernacExtend",
                        "03c514fc17f0d2b364e89715c752871291d0ed95"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_NoDup",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "induction 1; auto.",
                        "VernacExtend",
                        "1f706f8985097cf30b2449a4fda927a48fc6a84a"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 1; constructor; eauto using Permutation_in.",
                        "VernacExtend",
                        "e37c56739c2b73f5c29bdce2c08aef321afe2a88"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 1 as [|? ? H1 H2].",
                        "VernacExtend",
                        "f3bd53207f0a1c0fa9979dfc154aa1d8bc6af54f"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H2; simpl in *.",
                        "VernacExtend",
                        "028b4c2c522650ebd551f9b26e37c110baf5b09d"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "simpl; intuition.",
                        "VernacExtend",
                        "2a8f84ed3abedbe9d9fbb80aa4215114cbdbe500"
                    ]
                },
                {
                    "command": [
                        "constructor; intuition.",
                        "VernacExtend",
                        "0de9fba06ed64a4a6272181ad1ebff0d6770f93e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_NoDup'",
            "line_nb": 250,
            "steps": [
                {
                    "command": [
                        "repeat red; eauto using Permutation_NoDup.",
                        "VernacExtend",
                        "f6f7f662c0f4a0f09087f70ef2356553f0aa1b88"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_map",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "induction 1; simpl; eauto.",
                        "VernacExtend",
                        "8787a343e2b654784bd98fd42b8495addba4d4a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_map'",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "exact Permutation_map.",
                        "VernacExtend",
                        "3852562d18e7be20dddb03e7a4a87c268c77af90"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_bijection_Permutation",
            "line_nb": 264,
            "steps": [
                {
                    "command": [
                        "intros Hf BD.",
                        "VernacExtend",
                        "a929c90e9fd167c0927a344624ef6e2f4da40816"
                    ]
                },
                {
                    "command": [
                        "apply NoDup_Permutation_bis; auto using Injective_map_NoDup, seq_NoDup.",
                        "VernacExtend",
                        "ee83a11ca7ef3268745baccb6225715c479efc3e"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "now rewrite map_length.",
                        "VernacExtend",
                        "8c462a424001e55696f583f567ff7812cade1a9b"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff.",
                        "VernacExtend",
                        "a55211f52b1485764a1a9aeded8063ea6d2e66ea"
                    ]
                },
                {
                    "command": [
                        "intros (y & <- & Hy').",
                        "VernacExtend",
                        "5051f14879d52a645e34c597832bd9c5da0b9e30"
                    ]
                },
                {
                    "command": [
                        "rewrite in_seq in *.",
                        "VernacExtend",
                        "5d3ba59ae0a255f83b177fc8eb071300349a01f0"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "destruct Hy' as (_,Hy').",
                        "VernacExtend",
                        "fd1db519eb9497b9b716ed8047af537ff06f730a"
                    ]
                },
                {
                    "command": [
                        "auto with arith.",
                        "VernacExtend",
                        "0a06d2be3685676bb8fa998f149557e231db6506"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adapt_injective",
            "line_nb": 283,
            "steps": [
                {
                    "command": [
                        "unfold adapt.",
                        "VernacExtend",
                        "b30e7015ec4221e008464f08a614d303346b636c"
                    ]
                },
                {
                    "command": [
                        "intros Hf x y EQ.",
                        "VernacExtend",
                        "a0adb2d715ddbdf943efb0728e88cfcb78ff96a6"
                    ]
                },
                {
                    "command": [
                        "destruct le_lt_dec as [LE|LT]; destruct le_lt_dec as [LE'|LT'].",
                        "VernacExtend",
                        "5d539b2b606564bf254088f013b4c965b3e35653"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now apply eq_add_S, Hf.",
                        "VernacExtend",
                        "6aa280e47d890266008565d0096b772316ee730a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Lt.le_lt_or_eq in LE.",
                        "VernacExtend",
                        "46d9ca9c2361e0eee193f5f0a8e7bc4116b51d5f"
                    ]
                },
                {
                    "command": [
                        "destruct LE as [LT|EQ']; [|now apply Hf in EQ'].",
                        "VernacExtend",
                        "732e11d72c871fd89bbb4884d9ee5b1ebf9a1eb5"
                    ]
                },
                {
                    "command": [
                        "unfold lt in LT.",
                        "VernacExtend",
                        "b25358d86fd21d70157a171414b6af839561cd0e"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ in LT.",
                        "VernacExtend",
                        "13e962c8bddcaf29641a21715a726b82b30e1bed"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Lt.S_pred _ _ LT') in LT.",
                        "VernacExtend",
                        "cd9875d41780bb1ea9afcccd8a866ff81f7a20d1"
                    ]
                },
                {
                    "command": [
                        "elim (Lt.lt_not_le _ _ LT' LT).",
                        "VernacExtend",
                        "5bcec0e18e8fc7a88b1ef7e0fa5b660b75aa98c8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Lt.le_lt_or_eq in LE'.",
                        "VernacExtend",
                        "7927483b1ab6d2281a02c8e2be06301933636268"
                    ]
                },
                {
                    "command": [
                        "destruct LE' as [LT'|EQ']; [|now apply Hf in EQ'].",
                        "VernacExtend",
                        "fbd9fc3c70ccebe89c365aaea0ab7383f84af292"
                    ]
                },
                {
                    "command": [
                        "unfold lt in LT'.",
                        "VernacExtend",
                        "cf1981e3c596022d6a9712039fd1018fdd0d20d4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ in LT'.",
                        "VernacExtend",
                        "222f45b9fa41945111a14a71de008bf9bea81301"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Lt.S_pred _ _ LT) in LT'.",
                        "VernacExtend",
                        "a76a84fb15929f27aa8d0fcb9fa390f8cf536ca7"
                    ]
                },
                {
                    "command": [
                        "elim (Lt.lt_not_le _ _ LT LT').",
                        "VernacExtend",
                        "01321b8a1c790aa8b788b91ea2eb6fd22ec12b41"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply eq_add_S, Hf.",
                        "VernacExtend",
                        "be421d1a32a660c8fdf3212869636075778f2708"
                    ]
                },
                {
                    "command": [
                        "now rewrite (Lt.S_pred _ _ LT), (Lt.S_pred _ _ LT'), EQ.",
                        "VernacExtend",
                        "d557328c42e3db977a2368a1463a319d5780dbae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "adapt_ok",
            "line_nb": 307,
            "steps": [
                {
                    "command": [
                        "unfold adapt.",
                        "VernacExtend",
                        "b30e7015ec4221e008464f08a614d303346b636c"
                    ]
                },
                {
                    "command": [
                        "intros Hf E n.",
                        "VernacExtend",
                        "315dfabeca240df8aad0470f700945735b705e16"
                    ]
                },
                {
                    "command": [
                        "destruct le_lt_dec as [LE|LT].",
                        "VernacExtend",
                        "77dfe82e7b49cbdc12818b6c85611c9d5a04079d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Lt.le_lt_or_eq in LE.",
                        "VernacExtend",
                        "46d9ca9c2361e0eee193f5f0a8e7bc4116b51d5f"
                    ]
                },
                {
                    "command": [
                        "destruct LE as [LT|EQ]; [|now apply Hf in EQ].",
                        "VernacExtend",
                        "6fd57fbfcc1474436e6df32fdc62a447cd6479d2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- E in LT.",
                        "VernacExtend",
                        "a0eb89158340a88fad3681f3ddb3380f1c921002"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 nth_error_app1; auto.",
                        "VernacExtend",
                        "13722ec60389a0eff4ff0429d69c4a456d724ecd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (Lt.S_pred _ _ LT) at 1.",
                        "VernacExtend",
                        "f3e3b6022e602c880a11e61dc7f34858d15347a7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- E, (Lt.S_pred _ _ LT) in LT.",
                        "VernacExtend",
                        "ce8a5cfbe9f304a3a4594aa86c5e44dd58ef485e"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 nth_error_app2; auto with arith.",
                        "VernacExtend",
                        "e65478d34feb661ff445dc971898c2b7c3c4a3e5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Minus.minus_Sn_m; auto with arith.",
                        "VernacExtend",
                        "ba4d745d47c6b1d167b6a604615d672af623af3b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_nth_error",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros P.",
                        "VernacExtend",
                        "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
                    ]
                },
                {
                    "command": [
                        "split; [now apply Permutation_length|].",
                        "VernacExtend",
                        "2a790f63aa42d606d75b0e7ad35c623a18034dc6"
                    ]
                },
                {
                    "command": [
                        "induction P.",
                        "VernacExtend",
                        "1f158d23cb3dba83389c7bd7f4f1eef207f2c173"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists (fun n => n).",
                        "VernacExtend",
                        "5bb318f9af8b4817f1f0bca979718b42e281a540"
                    ]
                },
                {
                    "command": [
                        "split; try red; auto.",
                        "VernacExtend",
                        "d412fa5853e9233a46a192940c4175eb366a936c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct IHP as (f & Hf & Hf').",
                        "VernacExtend",
                        "e34b13c27079342a262128a826c71402a77fdbf4"
                    ]
                },
                {
                    "command": [
                        "exists (fun n => match n with O => O | S n => S (f n) end).",
                        "VernacExtend",
                        "128deaa7a749582fb038d6f11a522bc80fb89543"
                    ]
                },
                {
                    "command": [
                        "split; try red.",
                        "VernacExtend",
                        "6f7585842bc893a45441962eea0be50c6b8d3847"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros [|y] [|z]; simpl; now auto.",
                        "VernacExtend",
                        "a552098c203a1cdc8e13325eaeda0b5fd9b40a52"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros [|n]; simpl; auto.",
                        "VernacExtend",
                        "905e8058cec4d7c8537d8b98a79c8e1342067ce9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists (fun n => match n with 0 => 1 | 1 => 0 | n => n end).",
                        "VernacExtend",
                        "662e0be6c67f831773bf4340c33aea4f25ff0972"
                    ]
                },
                {
                    "command": [
                        "split; try red.",
                        "VernacExtend",
                        "6f7585842bc893a45441962eea0be50c6b8d3847"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros [|[|z]] [|[|t]]; simpl; now auto.",
                        "VernacExtend",
                        "53d23e497934f34dba5223b7e0d13852021ca5ec"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros [|[|n]]; simpl; auto.",
                        "VernacExtend",
                        "2a8ecbf518df43469fe958a2584e4c8399136b1e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct IHP1 as (f & Hf & Hf').",
                        "VernacExtend",
                        "95a2a543587098951f2f0625fc6ff4fdf01565d7"
                    ]
                },
                {
                    "command": [
                        "destruct IHP2 as (g & Hg & Hg').",
                        "VernacExtend",
                        "420595d35dde7ab6e29269b9cb070b66a2497d8c"
                    ]
                },
                {
                    "command": [
                        "exists (fun n => f (g n)).",
                        "VernacExtend",
                        "2dbfcaa9e519482c2238ccdcc33df5b6b5ab7e79"
                    ]
                },
                {
                    "command": [
                        "split; try red.",
                        "VernacExtend",
                        "6f7585842bc893a45441962eea0be50c6b8d3847"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hf'; auto.",
                        "VernacExtend",
                        "40067b97515432e4e789cf9196d36a2b2bdda7b0"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "revert l.",
                        "VernacExtend",
                        "11a722880df1bc386870f9ce37f36e8be2871e9c"
                    ]
                },
                {
                    "command": [
                        "induction l'.",
                        "VernacExtend",
                        "773e04ff833259851fb65b4bcd371f3996d47e26"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros [|l] (E & _); now auto.",
                        "VernacExtend",
                        "260f06913bc95b17cbd13d87fc0758b6b106a9d9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros l (E & f & Hf & Hf').",
                        "VernacExtend",
                        "ae66cf756d37658e8a8cff0889b99e46082f387a"
                    ]
                },
                {
                    "command": [
                        "simpl in E.",
                        "VernacExtend",
                        "f1922fc7926b9299c9e76d37c311dafc4bb74a16"
                    ]
                },
                {
                    "command": [
                        "assert (Ha : nth_error l (f 0) = Some a) by (symmetry; apply (Hf' 0)).",
                        "VernacExtend",
                        "b95651de7728bde921bffc415f3308477e2280fe"
                    ]
                },
                {
                    "command": [
                        "destruct (nth_error_split l (f 0) Ha) as (l1 & l2 & L12 & L1).",
                        "VernacExtend",
                        "4efbb78172893a43fef25fabcbf8153aaef79749"
                    ]
                },
                {
                    "command": [
                        "rewrite L12.",
                        "VernacExtend",
                        "de0e27c828b21e0f22b27fe0934e719032028ecc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Permutation_middle.",
                        "VernacExtend",
                        "adb64c99b5205db9cb814d9a6102f447b298dc50"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "apply IHl'; split; [|exists (adapt f); split].",
                        "VernacExtend",
                        "51f2fe0520dabe89b0997ca613396c2a57fa8f82"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "revert E.",
                        "VernacExtend",
                        "d662cded303c06da8a5e4209974759f5e1f58a8d"
                    ]
                },
                {
                    "command": [
                        "rewrite L12, !app_length.",
                        "VernacExtend",
                        "abca9a1fc838da890e1fb739559a5726a917201f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- plus_n_Sm.",
                        "VernacExtend",
                        "10308ef961b07f08e71cba91e06650cc774994fe"
                    ]
                },
                {
                    "command": [
                        "now injection 1.",
                        "VernacExtend",
                        "3613f22935e1d9491aedb1db367e0f8bcf1c6c82"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "now apply adapt_injective.",
                        "VernacExtend",
                        "9187346a8fa5125fcdc993a8fa70665e38666339"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intro n.",
                        "VernacExtend",
                        "7b184e6f13215b0f6a04b4277e277a724a645d52"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (adapt_ok a), <- L12; auto.",
                        "VernacExtend",
                        "035b812807a9030da2f6e9b38c7c777abb19b081"
                    ]
                },
                {
                    "command": [
                        "apply (Hf' (S n)).",
                        "VernacExtend",
                        "3bca2a7eb1ab2cd5fc7e9cd24d96ee85bcc37e48"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_nth_error_bis",
            "line_nb": 385,
            "steps": [
                {
                    "command": [
                        "rewrite Permutation_nth_error; split.",
                        "VernacExtend",
                        "d4d83f4d378c9ed5005784cab5f5675c28a2e058"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (E & f & Hf & Hf').",
                        "VernacExtend",
                        "d2a2ce68c2bfb492eb20c273207322d84a159d7a"
                    ]
                },
                {
                    "command": [
                        "exists f.",
                        "VernacExtend",
                        "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
                    ]
                },
                {
                    "command": [
                        "do 2 (split; trivial).",
                        "VernacExtend",
                        "d9e94d75e2a35a8176032418d8d00d8a20ae1154"
                    ]
                },
                {
                    "command": [
                        "intros n Hn.",
                        "VernacExtend",
                        "4a15d287eb245c84eabfb58cba2e377ac025029a"
                    ]
                },
                {
                    "command": [
                        "destruct (Lt.le_or_lt (length l) (f n)) as [LE|LT]; trivial.",
                        "VernacExtend",
                        "d173dc4ca52fa3dc19ffd9ee046e079aa50e7977"
                    ]
                },
                {
                    "command": [
                        "rewrite <- nth_error_None, <- Hf', nth_error_None, <- E in LE.",
                        "VernacExtend",
                        "f7cb1e831e54f40475742fa5847032405e1e9dd6"
                    ]
                },
                {
                    "command": [
                        "elim (Lt.lt_not_le _ _ Hn LE).",
                        "VernacExtend",
                        "dbd51ebfacff6d24f61d061beb00edc8b1ebaffd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (f & Hf & Hf2 & Hf3); split; [|exists f; auto].",
                        "VernacExtend",
                        "d3ff20cae0925384d1dbc06f1077b2979db45160"
                    ]
                },
                {
                    "command": [
                        "assert (H : length l' <= length l') by auto with arith.",
                        "VernacExtend",
                        "3062d30c1aa7e2150397a219ddf78e02f36a9815"
                    ]
                },
                {
                    "command": [
                        "rewrite <- nth_error_None, Hf3, nth_error_None in H.",
                        "VernacExtend",
                        "999dd6162a46d5cd4131c5b90645247b2f9fda22"
                    ]
                },
                {
                    "command": [
                        "destruct (Lt.le_or_lt (length l) (length l')) as [LE|LT]; [|apply Hf2 in LT; elim (Lt.lt_not_le _ _ LT H)].",
                        "VernacExtend",
                        "bc9f8338e4738333c31ee6af309d1117ef7c8382"
                    ]
                },
                {
                    "command": [
                        "apply Lt.le_lt_or_eq in LE.",
                        "VernacExtend",
                        "46d9ca9c2361e0eee193f5f0a8e7bc4116b51d5f"
                    ]
                },
                {
                    "command": [
                        "destruct LE as [LT|EQ]; trivial.",
                        "VernacExtend",
                        "97e7155c766eeef35008beb314b6b77412d82f10"
                    ]
                },
                {
                    "command": [
                        "rewrite <- nth_error_Some, Hf3, nth_error_Some in LT.",
                        "VernacExtend",
                        "406925373c9b85bd06848f8215eb76ea042831c4"
                    ]
                },
                {
                    "command": [
                        "assert (Hf' : bInjective (length l) f).",
                        "VernacExtend",
                        "a5b75edebb36079e23c91e43ec450ac2ee940aa0"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros x y _ _ E.",
                        "VernacExtend",
                        "071a864f63b51b0c73062e4d0e10a620d7b539f0"
                    ]
                },
                {
                    "command": [
                        "now apply Hf.",
                        "VernacExtend",
                        "5c6113533709537cf9c3fcf89a2ea0f72b961953"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "rewrite (bInjective_bSurjective Hf2) in Hf'.",
                        "VernacExtend",
                        "1de555b79b3db666198bdc770ce2c1bf15d0044e"
                    ]
                },
                {
                    "command": [
                        "destruct (Hf' _ LT) as (y & Hy & Hy').",
                        "VernacExtend",
                        "8a2627f66e1caa751ad65aac2c092692439d1ca1"
                    ]
                },
                {
                    "command": [
                        "apply Hf in Hy'.",
                        "VernacExtend",
                        "62ffe702a2516144029c3b91ee25fd3e9c365ea9"
                    ]
                },
                {
                    "command": [
                        "subst y.",
                        "VernacExtend",
                        "f056a00b852bc549d1b8bb21d500c90d8ff37bf8"
                    ]
                },
                {
                    "command": [
                        "elim (Lt.lt_irrefl _ Hy).",
                        "VernacExtend",
                        "4ccfbadf5dbefee69b6e01e89d53a9bd4974fb3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_nth",
            "line_nb": 414,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros H.",
                        "VernacExtend",
                        "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
                    ]
                },
                {
                    "command": [
                        "assert (E := Permutation_length H).",
                        "VernacExtend",
                        "5e8913fe998cf6433cb1a033ddbbe95dc7f59ed9"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_nth_error_bis in H.",
                        "VernacExtend",
                        "2dfeacb739fa1ae2f361a534567eb75770cfe8df"
                    ]
                },
                {
                    "command": [
                        "destruct H as (f & Hf & Hf2 & Hf3).",
                        "VernacExtend",
                        "03708fd2de5cbac785e433707ddc77ccf61bf663"
                    ]
                },
                {
                    "command": [
                        "exists f.",
                        "VernacExtend",
                        "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
                    ]
                },
                {
                    "command": [
                        "split; [|split]; auto.",
                        "VernacExtend",
                        "67cc0d66fb7cc73eb9e9cd5c6654f12477784046"
                    ]
                },
                {
                    "command": [
                        "intros x y _ _ Hxy.",
                        "VernacExtend",
                        "3a54e38e37a8a7a5cf6ac9569b64d32bdd822db8"
                    ]
                },
                {
                    "command": [
                        "now apply Hf.",
                        "VernacExtend",
                        "5c6113533709537cf9c3fcf89a2ea0f72b961953"
                    ]
                },
                {
                    "command": [
                        "intros n Hn.",
                        "VernacExtend",
                        "4a15d287eb245c84eabfb58cba2e377ac025029a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- 2 nth_default_eq.",
                        "VernacExtend",
                        "05db293e07941df8e548167eb89036d66b69c618"
                    ]
                },
                {
                    "command": [
                        "unfold nth_default.",
                        "VernacExtend",
                        "281c5a0d9971d29b4aa6d4b09742097f59995c98"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hf3.",
                        "VernacExtend",
                        "25507553e121cacee83f6c8cfd95954ef80b5bbb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (E & f & Hf1 & Hf2 & Hf3).",
                        "VernacExtend",
                        "e9f3720c57cba23694486a749f5519d866afa08f"
                    ]
                },
                {
                    "command": [
                        "rewrite Permutation_nth_error.",
                        "VernacExtend",
                        "e60594f611a62cd94d976b55441f750b8893117a"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "exists (fun n => if le_lt_dec (length l) n then n else f n).",
                        "VernacExtend",
                        "41fffdf51f8c90369ceea3c1bc4f8eaf72993972"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "destruct le_lt_dec as [LE|LT]; destruct le_lt_dec as [LE'|LT']; auto.",
                        "VernacExtend",
                        "0232317f0efcfeed77f6e48f08144f8447956b88"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Hf1 in LT'.",
                        "VernacExtend",
                        "f8a1fc4d24bca66c4e3da6ba34b86ba604678398"
                    ]
                },
                {
                    "command": [
                        "intros ->.",
                        "VernacExtend",
                        "e8af3665779d92274caf81949b4a0e6232d89ea7"
                    ]
                },
                {
                    "command": [
                        "elim (Lt.lt_irrefl (f y)).",
                        "VernacExtend",
                        "d15f151449aabf404d30952893558f5d32bb6954"
                    ]
                },
                {
                    "command": [
                        "eapply Lt.lt_le_trans; eauto.",
                        "VernacExtend",
                        "cd08baba1ff4e6391dbfa4fc6316308df4de3968"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply Hf1 in LT.",
                        "VernacExtend",
                        "2f92415af400e1c65643cfe9ebd6ab094c4564de"
                    ]
                },
                {
                    "command": [
                        "intros <-.",
                        "VernacExtend",
                        "f92abb181e804805d99c6631ed9d612184f20066"
                    ]
                },
                {
                    "command": [
                        "elim (Lt.lt_irrefl (f x)).",
                        "VernacExtend",
                        "bfde53389befb81b7f9d297d63fe7940f8b71c03"
                    ]
                },
                {
                    "command": [
                        "eapply Lt.lt_le_trans; eauto.",
                        "VernacExtend",
                        "cd08baba1ff4e6391dbfa4fc6316308df4de3968"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros n.",
                        "VernacExtend",
                        "9410cc86153539309ee696ae5785ea70534ece11"
                    ]
                },
                {
                    "command": [
                        "destruct le_lt_dec as [LE|LT].",
                        "VernacExtend",
                        "77dfe82e7b49cbdc12818b6c85611c9d5a04079d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (LE' : length l' <= n) by (now rewrite E).",
                        "VernacExtend",
                        "20ff995123651e98e5737869c8ece7da6e7942cc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- nth_error_None in LE, LE'.",
                        "VernacExtend",
                        "7beb03dbda12afa3ab0cf942928d1af8715ea291"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert (LT' : n < length l') by (now rewrite E).",
                        "VernacExtend",
                        "1e9373bb8232122d49a189546ab1e035f3ef1caa"
                    ]
                },
                {
                    "command": [
                        "specialize (Hf3 n LT).",
                        "VernacExtend",
                        "1af20d929f68ae456ad1367ad71069ceebeb7cb4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- 2 nth_default_eq in Hf3.",
                        "VernacExtend",
                        "8b18f8679b96f23aa1b9b30f7ee362b633c7ec43"
                    ]
                },
                {
                    "command": [
                        "unfold nth_default in Hf3.",
                        "VernacExtend",
                        "3c7c28cae6b239637fe5b711d4ee1b1370de25a8"
                    ]
                },
                {
                    "command": [
                        "apply Hf1 in LT.",
                        "VernacExtend",
                        "2f92415af400e1c65643cfe9ebd6ab094c4564de"
                    ]
                },
                {
                    "command": [
                        "rewrite <- nth_error_Some in LT, LT'.",
                        "VernacExtend",
                        "1ee4368b2a57232e113bdc8d81eab43911211376"
                    ]
                },
                {
                    "command": [
                        "do 2 destruct nth_error; congruence.",
                        "VernacExtend",
                        "a566b437eac42935c4b976267793b480eeb3fb04"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}