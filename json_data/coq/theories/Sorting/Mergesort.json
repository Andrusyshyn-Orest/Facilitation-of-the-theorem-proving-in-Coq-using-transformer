{
    "filename": "theories/Sorting/Mergesort.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import List Setoid Permutation Sorted Orders.",
            "VernacRequire",
            "d7811aca5a4925732a2681d943fcce06c90ae192"
        ],
        [
            "Local Notation \"[ ]\" := nil.",
            "VernacNotation",
            "d295b725e0b83f28e4e8ea4e8a1250c1f9500a32"
        ],
        [
            "Local Notation \"[ a ; .. ; b ]\" := (a :: .. (b :: []) ..).",
            "VernacNotation",
            "2cf847a4250c2fb9520b725a3ec1f149efeeebfe"
        ],
        [
            "Open Scope bool_scope.",
            "VernacOpenCloseScope",
            "72aa7c29d11c468bfbc0b10b8d0df17f3e901223"
        ],
        [
            "Local Coercion is_true : bool >-> Sortclass.",
            "VernacCoercion",
            "bfeea8b9a217c39aa3c15fad2fd390e702126cd2"
        ],
        [
            "Module Sort (Import X:Orders.TotalLeBool').",
            "VernacDefineModule",
            "1b26712587024fd2710831b2309890096d5dcbb0"
        ],
        [
            "Fixpoint merge l1 l2 := let fix merge_aux l2 := match l1, l2 with | [], _ => l2 | _, [] => l1 | a1::l1', a2::l2' => if a1 <=? a2 then a1 :: merge l1' l2 else a2 :: merge_aux l2' end in merge_aux l2.",
            "VernacFixpoint",
            "4e67ffc70ca86fa070447c2670ea988d098e5123"
        ],
        [
            "Fixpoint merge_list_to_stack stack l := match stack with | [] => [Some l] | None :: stack' => Some l :: stack' | Some l' :: stack' => None :: merge_list_to_stack stack' (merge l' l) end.",
            "VernacFixpoint",
            "7f7c21c763f68b7559ae7e4f3d30d2a5117c08dc"
        ],
        [
            "Fixpoint merge_stack stack := match stack with | [] => [] | None :: stack' => merge_stack stack' | Some l :: stack' => merge l (merge_stack stack') end.",
            "VernacFixpoint",
            "4c77574cf55835b5d8d7df50d698da5c155bffb9"
        ],
        [
            "Fixpoint iter_merge stack l := match l with | [] => merge_stack stack | a::l' => iter_merge (merge_list_to_stack stack [a]) l' end.",
            "VernacFixpoint",
            "bd6a1164d177c08d76e6b63557d5f14885ba84e8"
        ],
        [
            "Definition sort := iter_merge [].",
            "VernacDefinition",
            "aa32d7a851c5370d2720021d40aa582d5317fe5d"
        ],
        [
            "Local Notation Sorted := (LocallySorted leb) (only parsing).",
            "VernacSyntacticDefinition",
            "323c4f59a3aa87182ba11e555902f1e7d082112a"
        ],
        [
            "Fixpoint SortedStack stack := match stack with | [] => True | None :: stack' => SortedStack stack' | Some l :: stack' => Sorted l /\\ SortedStack stack' end.",
            "VernacFixpoint",
            "a271a410c50a62bf819c822927275ea98b4bb50b"
        ],
        [
            "Local Ltac invert H := inversion H; subst; clear H.",
            "VernacExtend",
            "3685ede7dcbd6008b3d25b98684de6e3ac796649"
        ],
        [
            "Fixpoint flatten_stack (stack : list (option (list t))) := match stack with | [] => [] | None :: stack' => flatten_stack stack' | Some l :: stack' => l ++ flatten_stack stack' end.",
            "VernacFixpoint",
            "0ed9e19348b0ba74605e1c6f91c1b53774153042"
        ],
        [
            "Theorem Sorted_merge : forall l1 l2, Sorted l1 -> Sorted l2 -> Sorted (merge l1 l2).",
            "VernacStartTheoremProof",
            "dfc94f9641ebe1c7a09209a6e3282fb029ec8e0a"
        ],
        [
            "induction l1; induction l2; intros; simpl; auto.",
            "VernacExtend",
            "71eed0d14e44855fd9359a4e976c4872305dcb70"
        ],
        [
            "destruct (a <=? a0) eqn:Heq1.",
            "VernacExtend",
            "f558325320a3740a4dee60ac647ea1ccc5f66b0c"
        ],
        [
            "invert H.",
            "VernacExtend",
            "8b65adc4c2ea56825d41b571a4e8fddf66d6dafa"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "constructor; trivial; rewrite Heq1; constructor.",
            "VernacExtend",
            "bcd5353c0bc4c22e165a6b0011e71dcf8643dcd7"
        ],
        [
            "assert (Sorted (merge (b::l) (a0::l2))) by (apply IHl1; auto).",
            "VernacExtend",
            "a00f960aa45169e5822d9dd0ef6328fbbb38ac27"
        ],
        [
            "clear H0 H3 IHl1; simpl in *.",
            "VernacExtend",
            "24287edc64a05451adcad1566f1003d2f4947cf2"
        ],
        [
            "destruct (b <=? a0); constructor; auto || rewrite Heq1; constructor.",
            "VernacExtend",
            "4ae79117028e1e5a3b2631d9f306d2cbccf303f0"
        ],
        [
            "assert (a0 <=? a) by (destruct (leb_total a0 a) as [H'|H']; trivial || (rewrite Heq1 in H'; inversion H')).",
            "VernacExtend",
            "c4881ca8b027e8f511ef03ca84f3caf92d2d55b1"
        ],
        [
            "invert H0.",
            "VernacExtend",
            "451d19641b36f6efdb6a891889c91e813703ba99"
        ],
        [
            "constructor; trivial.",
            "VernacExtend",
            "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
        ],
        [
            "assert (Sorted (merge (a::l1) (b::l))) by auto using IHl1.",
            "VernacExtend",
            "5d9f3652b8ce4ef268b0cebb282de6ea88b94d2f"
        ],
        [
            "clear IHl2; simpl in *.",
            "VernacExtend",
            "80c76bc359870c89583cf79848e366ef3a6de3c3"
        ],
        [
            "destruct (a <=? b); constructor; auto.",
            "VernacExtend",
            "2a3126375b25d95e9f2a8f56ef89f815705fd9d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permuted_merge : forall l1 l2, Permutation (l1++l2) (merge l1 l2).",
            "VernacStartTheoremProof",
            "fdf1ddcb9060262b33f5777390b2b9d7a6c9bcb4"
        ],
        [
            "induction l1; simpl merge; intro.",
            "VernacExtend",
            "943195a1c0daa8924b8e434ce84e40b38726b07d"
        ],
        [
            "assert (forall l, (fix merge_aux (l0 : list t) : list t := l0) l = l) as -> by (destruct l; trivial).",
            "VernacExtend",
            "f0db5cde4e39b752e7bbfe6d306d75d7c1013aa1"
        ],
        [
            "apply Permutation_refl.",
            "VernacExtend",
            "7d86172c1ec447099a072693514416eb00b5a015"
        ],
        [
            "induction l2.",
            "VernacExtend",
            "ff7ecc59ee4f6b0af8484905f5e8c131f6a870c4"
        ],
        [
            "rewrite app_nil_r.",
            "VernacExtend",
            "c4835e186d44991c06ea8a79f450a4e967f8f713"
        ],
        [
            "apply Permutation_refl.",
            "VernacExtend",
            "7d86172c1ec447099a072693514416eb00b5a015"
        ],
        [
            "destruct (a <=? a0).",
            "VernacExtend",
            "8231983cd47cec779c0ebfebc73c78482a39e248"
        ],
        [
            "constructor; apply IHl1.",
            "VernacExtend",
            "cb716a8b8767eef6d1244dfc3504b18645078b04"
        ],
        [
            "apply Permutation_sym, Permutation_cons_app, Permutation_sym, IHl2.",
            "VernacExtend",
            "080aab28045eafabc5136716667817abc98fcd9b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Sorted_merge_list_to_stack : forall stack l, SortedStack stack -> Sorted l -> SortedStack (merge_list_to_stack stack l).",
            "VernacStartTheoremProof",
            "984edee24ed52e3ace80b83ff00944d829e3212e"
        ],
        [
            "induction stack as [|[|]]; intros; simpl.",
            "VernacExtend",
            "56c600abc2ea622e2ba415c868356c61bd1a533f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply IHstack.",
            "VernacExtend",
            "d2bc51bf16ea8991676e321f49e9d5fc74af9429"
        ],
        [
            "destruct H as (_,H1).",
            "VernacExtend",
            "ca3eb6f850d4ef75554578b5a345c51b4059145f"
        ],
        [
            "fold SortedStack in H1.",
            "VernacExtend",
            "f4b309f168634c363d6e7e3ed6592fe30df3eb79"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply Sorted_merge; auto; destruct H; auto.",
            "VernacExtend",
            "ac02beb9437c803681f8419f038f190456c39b33"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permuted_merge_list_to_stack : forall stack l, Permutation (l ++ flatten_stack stack) (flatten_stack (merge_list_to_stack stack l)).",
            "VernacStartTheoremProof",
            "dd969796db294b6cbaa9e8ea1ef860df7a52e245"
        ],
        [
            "induction stack as [|[]]; simpl; intros.",
            "VernacExtend",
            "77099beaa508cdd5d3b050c2621248fa142241da"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite app_assoc.",
            "VernacExtend",
            "e4521d8c1eba1ffd3617036e45fc9790b2acb1f8"
        ],
        [
            "etransitivity.",
            "VernacExtend",
            "be6e37ea1161f59d4c906a2d8011256577b6109b"
        ],
        [
            "apply Permutation_app_tail.",
            "VernacExtend",
            "00ff0f324e2e18af1e07ab04a0a785b87c8d977c"
        ],
        [
            "etransitivity.",
            "VernacExtend",
            "be6e37ea1161f59d4c906a2d8011256577b6109b"
        ],
        [
            "apply Permutation_app_comm.",
            "VernacExtend",
            "8cc81e9e367d4b09f69c2fe8d104bdd2b0a73621"
        ],
        [
            "apply Permuted_merge.",
            "VernacExtend",
            "be001b5d73e9e25ec09d41a188fe6d272748454f"
        ],
        [
            "apply IHstack.",
            "VernacExtend",
            "d2bc51bf16ea8991676e321f49e9d5fc74af9429"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Sorted_merge_stack : forall stack, SortedStack stack -> Sorted (merge_stack stack).",
            "VernacStartTheoremProof",
            "bcfe6fa13382d27a0c6cdb3405651a407d954723"
        ],
        [
            "induction stack as [|[|]]; simpl; intros.",
            "VernacExtend",
            "a27a01fdda081c8708f27c3721e38046f1e45736"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "apply Sorted_merge; tauto.",
            "VernacExtend",
            "aa38a04aa8a4b5b94efa565f17bbbc0becf06a26"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permuted_merge_stack : forall stack, Permutation (flatten_stack stack) (merge_stack stack).",
            "VernacStartTheoremProof",
            "78956fad36d16e9b81c8ee46109f85fa402187c1"
        ],
        [
            "induction stack as [|[]]; simpl.",
            "VernacExtend",
            "5343eeb062d6cc9bbaf59f54d2897e8ce7aa718c"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "transitivity (l ++ merge_stack stack).",
            "VernacExtend",
            "37084763da5e09c82266eb8eb9bd69037639276c"
        ],
        [
            "apply Permutation_app_head; trivial.",
            "VernacExtend",
            "f3834cf881118951ae336734ee8c5eee28ec3304"
        ],
        [
            "apply Permuted_merge.",
            "VernacExtend",
            "be001b5d73e9e25ec09d41a188fe6d272748454f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Sorted_iter_merge : forall stack l, SortedStack stack -> Sorted (iter_merge stack l).",
            "VernacStartTheoremProof",
            "a922904ce6d25b8d411e877fb56824c98df34945"
        ],
        [
            "intros stack l H; induction l in stack, H |- *; simpl.",
            "VernacExtend",
            "24eb20f72a36824f2554e18440cbbcbe89ed224e"
        ],
        [
            "auto using Sorted_merge_stack.",
            "VernacExtend",
            "53d2500a8dfa51386da25edb9a3d55aa96b19bf1"
        ],
        [
            "assert (Sorted [a]) by constructor.",
            "VernacExtend",
            "5d9c81e64047a553eeb16cbace1eae965f241e39"
        ],
        [
            "auto using Sorted_merge_list_to_stack.",
            "VernacExtend",
            "fbd238508a964ffbaa934a4d706032588123b572"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permuted_iter_merge : forall l stack, Permutation (flatten_stack stack ++ l) (iter_merge stack l).",
            "VernacStartTheoremProof",
            "00235bce6caa9153ca3dec05f7275a9d0dd3a5f5"
        ],
        [
            "induction l; simpl; intros.",
            "VernacExtend",
            "34e9ea5965da389dfe8faf53c8ea4965d4fdcc22"
        ],
        [
            "rewrite app_nil_r.",
            "VernacExtend",
            "c4835e186d44991c06ea8a79f450a4e967f8f713"
        ],
        [
            "apply Permuted_merge_stack.",
            "VernacExtend",
            "ca40527bc29f41db136500d27a9b10416cee4c3b"
        ],
        [
            "change (a::l) with ([a]++l).",
            "VernacExtend",
            "bfd207041f36844af2563f99ae691df12cc7b430"
        ],
        [
            "rewrite app_assoc.",
            "VernacExtend",
            "e4521d8c1eba1ffd3617036e45fc9790b2acb1f8"
        ],
        [
            "etransitivity.",
            "VernacExtend",
            "be6e37ea1161f59d4c906a2d8011256577b6109b"
        ],
        [
            "apply Permutation_app_tail.",
            "VernacExtend",
            "00ff0f324e2e18af1e07ab04a0a785b87c8d977c"
        ],
        [
            "etransitivity.",
            "VernacExtend",
            "be6e37ea1161f59d4c906a2d8011256577b6109b"
        ],
        [
            "apply Permutation_app_comm.",
            "VernacExtend",
            "8cc81e9e367d4b09f69c2fe8d104bdd2b0a73621"
        ],
        [
            "apply Permuted_merge_list_to_stack.",
            "VernacExtend",
            "8f18096faa2cdfd1272798009f4068d5a7c37671"
        ],
        [
            "apply IHl.",
            "VernacExtend",
            "af412c6009bba78f939aa53ab07dcd1baaf5888b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Sorted_sort : forall l, Sorted (sort l).",
            "VernacStartTheoremProof",
            "6a9c8ace73511e28bef653b6f0fb9608774f5193"
        ],
        [
            "intro; apply Sorted_iter_merge.",
            "VernacExtend",
            "c7915fae6caf98cffa393c2a95d2c2f9abee9345"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary LocallySorted_sort : forall l, Sorted.Sorted leb (sort l).",
            "VernacStartTheoremProof",
            "6aee25fd73bbe2dbc34101d2981f989a54328bf2"
        ],
        [
            "intro; eapply Sorted_LocallySorted_iff, Sorted_sort; auto.",
            "VernacExtend",
            "8e7bc0958859d102a3e147f3f07cada43afddc22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Permuted_sort : forall l, Permutation l (sort l).",
            "VernacStartTheoremProof",
            "48421d969ccb12ed333b3e875edd8e3b1f87fcec"
        ],
        [
            "intro; apply (Permuted_iter_merge l []).",
            "VernacExtend",
            "184aa29af1993bf340bcbb3067d970c34d1fd362"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary StronglySorted_sort : forall l, Transitive leb -> StronglySorted leb (sort l).",
            "VernacStartTheoremProof",
            "69c560aa1b4dcf140d6322b35b47e39df0b933a3"
        ],
        [
            "auto using Sorted_StronglySorted, LocallySorted_sort.",
            "VernacExtend",
            "54e45725cfdd11a08db8013c2f5a54e9b34f65cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Sort.",
            "VernacEndSegment",
            "ba74b214d756a50f9112b528d770609486353a61"
        ],
        [
            "Module NatOrder <: TotalLeBool.",
            "VernacDefineModule",
            "c7f24780b67243d040e4fe4a83589653acaa8bc2"
        ],
        [
            "Definition t := nat.",
            "VernacDefinition",
            "27290704a95e55f94f09682a08eac6e1d2e82c1c"
        ],
        [
            "Fixpoint leb x y := match x, y with | 0, _ => true | _, 0 => false | S x', S y' => leb x' y' end.",
            "VernacFixpoint",
            "d3f4e82c8eb1e234eb2a4e7da049574d146860dc"
        ],
        [
            "Infix \"<=?\" := leb (at level 35).",
            "VernacInfix",
            "ecb42bc4c3a397c62d2c1b7164cb88e3a5af5fb8"
        ],
        [
            "Theorem leb_total : forall a1 a2, a1 <=? a2 \\/ a2 <=? a1.",
            "VernacStartTheoremProof",
            "32ab24d1011c069614599b30588a077b5d663810"
        ],
        [
            "induction a1; destruct a2; simpl; auto.",
            "VernacExtend",
            "60bec6534ac5fd302b785f87fed5094558d066e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NatOrder.",
            "VernacEndSegment",
            "2bb7d2c36fd5289032fe804300fe01c1a2bffac4"
        ],
        [
            "Module Import NatSort := Sort NatOrder.",
            "VernacDefineModule",
            "8f3ddc00384530135a2ed60d01a7579dfe34332f"
        ],
        [
            "Example SimpleMergeExample := Eval compute in sort [5;3;6;1;8;6;0].",
            "VernacDefinition",
            "ea135cda451aa37aec7115390784a20354f1729b"
        ]
    ],
    "proofs": [
        {
            "name": "Sorted_merge",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "induction l1; induction l2; intros; simpl; auto.",
                        "VernacExtend",
                        "71eed0d14e44855fd9359a4e976c4872305dcb70"
                    ]
                },
                {
                    "command": [
                        "destruct (a <=? a0) eqn:Heq1.",
                        "VernacExtend",
                        "f558325320a3740a4dee60ac647ea1ccc5f66b0c"
                    ]
                },
                {
                    "command": [
                        "invert H.",
                        "VernacExtend",
                        "8b65adc4c2ea56825d41b571a4e8fddf66d6dafa"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "constructor; trivial; rewrite Heq1; constructor.",
                        "VernacExtend",
                        "bcd5353c0bc4c22e165a6b0011e71dcf8643dcd7"
                    ]
                },
                {
                    "command": [
                        "assert (Sorted (merge (b::l) (a0::l2))) by (apply IHl1; auto).",
                        "VernacExtend",
                        "a00f960aa45169e5822d9dd0ef6328fbbb38ac27"
                    ]
                },
                {
                    "command": [
                        "clear H0 H3 IHl1; simpl in *.",
                        "VernacExtend",
                        "24287edc64a05451adcad1566f1003d2f4947cf2"
                    ]
                },
                {
                    "command": [
                        "destruct (b <=? a0); constructor; auto || rewrite Heq1; constructor.",
                        "VernacExtend",
                        "4ae79117028e1e5a3b2631d9f306d2cbccf303f0"
                    ]
                },
                {
                    "command": [
                        "assert (a0 <=? a) by (destruct (leb_total a0 a) as [H'|H']; trivial || (rewrite Heq1 in H'; inversion H')).",
                        "VernacExtend",
                        "c4881ca8b027e8f511ef03ca84f3caf92d2d55b1"
                    ]
                },
                {
                    "command": [
                        "invert H0.",
                        "VernacExtend",
                        "451d19641b36f6efdb6a891889c91e813703ba99"
                    ]
                },
                {
                    "command": [
                        "constructor; trivial.",
                        "VernacExtend",
                        "0a6921e5c6d19c8d1b4ad2aafac05e8c578c74fc"
                    ]
                },
                {
                    "command": [
                        "assert (Sorted (merge (a::l1) (b::l))) by auto using IHl1.",
                        "VernacExtend",
                        "5d9f3652b8ce4ef268b0cebb282de6ea88b94d2f"
                    ]
                },
                {
                    "command": [
                        "clear IHl2; simpl in *.",
                        "VernacExtend",
                        "80c76bc359870c89583cf79848e366ef3a6de3c3"
                    ]
                },
                {
                    "command": [
                        "destruct (a <=? b); constructor; auto.",
                        "VernacExtend",
                        "2a3126375b25d95e9f2a8f56ef89f815705fd9d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permuted_merge",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "induction l1; simpl merge; intro.",
                        "VernacExtend",
                        "943195a1c0daa8924b8e434ce84e40b38726b07d"
                    ]
                },
                {
                    "command": [
                        "assert (forall l, (fix merge_aux (l0 : list t) : list t := l0) l = l) as -> by (destruct l; trivial).",
                        "VernacExtend",
                        "f0db5cde4e39b752e7bbfe6d306d75d7c1013aa1"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_refl.",
                        "VernacExtend",
                        "7d86172c1ec447099a072693514416eb00b5a015"
                    ]
                },
                {
                    "command": [
                        "induction l2.",
                        "VernacExtend",
                        "ff7ecc59ee4f6b0af8484905f5e8c131f6a870c4"
                    ]
                },
                {
                    "command": [
                        "rewrite app_nil_r.",
                        "VernacExtend",
                        "c4835e186d44991c06ea8a79f450a4e967f8f713"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_refl.",
                        "VernacExtend",
                        "7d86172c1ec447099a072693514416eb00b5a015"
                    ]
                },
                {
                    "command": [
                        "destruct (a <=? a0).",
                        "VernacExtend",
                        "8231983cd47cec779c0ebfebc73c78482a39e248"
                    ]
                },
                {
                    "command": [
                        "constructor; apply IHl1.",
                        "VernacExtend",
                        "cb716a8b8767eef6d1244dfc3504b18645078b04"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_sym, Permutation_cons_app, Permutation_sym, IHl2.",
                        "VernacExtend",
                        "080aab28045eafabc5136716667817abc98fcd9b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sorted_merge_list_to_stack",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "induction stack as [|[|]]; intros; simpl.",
                        "VernacExtend",
                        "56c600abc2ea622e2ba415c868356c61bd1a533f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply IHstack.",
                        "VernacExtend",
                        "d2bc51bf16ea8991676e321f49e9d5fc74af9429"
                    ]
                },
                {
                    "command": [
                        "destruct H as (_,H1).",
                        "VernacExtend",
                        "ca3eb6f850d4ef75554578b5a345c51b4059145f"
                    ]
                },
                {
                    "command": [
                        "fold SortedStack in H1.",
                        "VernacExtend",
                        "f4b309f168634c363d6e7e3ed6592fe30df3eb79"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply Sorted_merge; auto; destruct H; auto.",
                        "VernacExtend",
                        "ac02beb9437c803681f8419f038f190456c39b33"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sorted_merge_stack",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "induction stack as [|[|]]; simpl; intros.",
                        "VernacExtend",
                        "a27a01fdda081c8708f27c3721e38046f1e45736"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "apply Sorted_merge; tauto.",
                        "VernacExtend",
                        "aa38a04aa8a4b5b94efa565f17bbbc0becf06a26"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permuted_merge_stack",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "induction stack as [|[]]; simpl.",
                        "VernacExtend",
                        "5343eeb062d6cc9bbaf59f54d2897e8ce7aa718c"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "transitivity (l ++ merge_stack stack).",
                        "VernacExtend",
                        "37084763da5e09c82266eb8eb9bd69037639276c"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_app_head; trivial.",
                        "VernacExtend",
                        "f3834cf881118951ae336734ee8c5eee28ec3304"
                    ]
                },
                {
                    "command": [
                        "apply Permuted_merge.",
                        "VernacExtend",
                        "be001b5d73e9e25ec09d41a188fe6d272748454f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sorted_iter_merge",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros stack l H; induction l in stack, H |- *; simpl.",
                        "VernacExtend",
                        "24eb20f72a36824f2554e18440cbbcbe89ed224e"
                    ]
                },
                {
                    "command": [
                        "auto using Sorted_merge_stack.",
                        "VernacExtend",
                        "53d2500a8dfa51386da25edb9a3d55aa96b19bf1"
                    ]
                },
                {
                    "command": [
                        "assert (Sorted [a]) by constructor.",
                        "VernacExtend",
                        "5d9c81e64047a553eeb16cbace1eae965f241e39"
                    ]
                },
                {
                    "command": [
                        "auto using Sorted_merge_list_to_stack.",
                        "VernacExtend",
                        "fbd238508a964ffbaa934a4d706032588123b572"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sorted_sort",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intro; apply Sorted_iter_merge.",
                        "VernacExtend",
                        "c7915fae6caf98cffa393c2a95d2c2f9abee9345"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "LocallySorted_sort",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intro; eapply Sorted_LocallySorted_iff, Sorted_sort; auto.",
                        "VernacExtend",
                        "8e7bc0958859d102a3e147f3f07cada43afddc22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permuted_sort",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intro; apply (Permuted_iter_merge l []).",
                        "VernacExtend",
                        "184aa29af1993bf340bcbb3067d970c34d1fd362"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "StronglySorted_sort",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "auto using Sorted_StronglySorted, LocallySorted_sort.",
                        "VernacExtend",
                        "54e45725cfdd11a08db8013c2f5a54e9b34f65cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leb_total",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "induction a1; destruct a2; simpl; auto.",
                        "VernacExtend",
                        "60bec6534ac5fd302b785f87fed5094558d066e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}