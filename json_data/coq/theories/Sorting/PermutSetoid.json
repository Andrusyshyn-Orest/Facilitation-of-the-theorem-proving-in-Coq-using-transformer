{
    "filename": "theories/Sorting/PermutSetoid.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Omega Relations Multiset SetoidList.",
            "VernacRequire",
            "2f1594b4fce6433d0c3eb0988dba5476aca584b0"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Local Notation \"[ ]\" := nil.",
            "VernacNotation",
            "d295b725e0b83f28e4e8ea4e8a1250c1f9500a32"
        ],
        [
            "Local Notation \"[ a ; .. ; b ]\" := (a :: .. (b :: []) ..).",
            "VernacNotation",
            "2cf847a4250c2fb9520b725a3ec1f149efeeebfe"
        ],
        [
            "Section Permut.",
            "VernacBeginSection",
            "a6adca4f0b0dcf8d215d9e9f58b8876ff757f35f"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Variable eqA : relation A.",
            "VernacAssumption",
            "da198f298e55e60b848c4c420437e9551e63866f"
        ],
        [
            "Hypothesis eqA_equiv : Equivalence eqA.",
            "VernacAssumption",
            "cef993ca26716e21119d05e42167503edca9a76a"
        ],
        [
            "Hypothesis eqA_dec : forall x y:A, {eqA x y} + {~ eqA x y}.",
            "VernacAssumption",
            "e7467197fa59c2f7f5ecd872d3e324fca8875a7e"
        ],
        [
            "Let emptyBag := EmptyBag A.",
            "VernacDefinition",
            "e22bc685861589c14bf3d6d76eb9c61b8059897e"
        ],
        [
            "Let singletonBag := SingletonBag _ eqA_dec.",
            "VernacDefinition",
            "80c6e7743da93d4bf61835a5e64c6a4cb40491c1"
        ],
        [
            "Fixpoint list_contents (l:list A) : multiset A := match l with | [] => emptyBag | a :: l => munion (singletonBag a) (list_contents l) end.",
            "VernacFixpoint",
            "5c4b09114b5173e56647c1b66f0d04b1fed3f547"
        ],
        [
            "Lemma list_contents_app : forall l m:list A, meq (list_contents (l ++ m)) (munion (list_contents l) (list_contents m)).",
            "VernacStartTheoremProof",
            "88bafbf96faf30897bf13b367efe2bb134aa414e"
        ],
        [
            "simple induction l; simpl; auto with datatypes.",
            "VernacExtend",
            "b1695c1ddefbdbd3c7ba3ae16227d0b8376b6161"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply meq_trans with (munion (singletonBag a) (munion (list_contents l0) (list_contents m))); auto with datatypes.",
            "VernacExtend",
            "a3dbaa81c276101cb295d3c2bbcc230a9577c9e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition permutation (l m:list A) := meq (list_contents l) (list_contents m).",
            "VernacDefinition",
            "8401c06bd520bf4b9f3f8552368ad293a5a469ce"
        ],
        [
            "Lemma permut_refl : forall l:list A, permutation l l.",
            "VernacStartTheoremProof",
            "1726d2599f856184a8e43d1fc465d1f0a11412f0"
        ],
        [
            "unfold permutation; auto with datatypes.",
            "VernacExtend",
            "9074f72cc35bfadcc50a19200ad6dd8102f5e4b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_sym : forall l1 l2 : list A, permutation l1 l2 -> permutation l2 l1.",
            "VernacStartTheoremProof",
            "4dc1ce5ca22c8f3dae467bb91a49c9a668e93742"
        ],
        [
            "unfold permutation, meq; intros; symmetry; trivial.",
            "VernacExtend",
            "614e29b61ea94b02e833c3b7996f480c3911acb7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_trans : forall l m n:list A, permutation l m -> permutation m n -> permutation l n.",
            "VernacStartTheoremProof",
            "ae3f4011d46ce4ccdd761caeccca5e7ce13f8299"
        ],
        [
            "unfold permutation; intros.",
            "VernacExtend",
            "3d3337d0d4501a6dc6f44ba76097115259b989fe"
        ],
        [
            "apply meq_trans with (list_contents m); auto with datatypes.",
            "VernacExtend",
            "dd8bf5c337bd644798a4b2d11e8d74dc5f0c243a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_cons_eq : forall l m:list A, permutation l m -> forall a a', eqA a a' -> permutation (a :: l) (a' :: m).",
            "VernacStartTheoremProof",
            "30a7962e828db6557105383a719ced5597d09794"
        ],
        [
            "unfold permutation; simpl; intros.",
            "VernacExtend",
            "b96aa60a6696ed09c443502871376cb1cde90d16"
        ],
        [
            "apply meq_trans with (munion (singletonBag a') (list_contents l)).",
            "VernacExtend",
            "1c03eff5ffda8f9ca239d90e17d709823fb0a161"
        ],
        [
            "apply meq_left, meq_singleton; auto.",
            "VernacExtend",
            "fb3ef78dadca75c24273a16f1788ba73e53c376a"
        ],
        [
            "auto with datatypes.",
            "VernacExtend",
            "dd2530190f30288bf22ee75c4a3569788440b03a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_cons : forall l m:list A, permutation l m -> forall a:A, permutation (a :: l) (a :: m).",
            "VernacStartTheoremProof",
            "ca16515d4a71292edca870d58966fd1510db0ac9"
        ],
        [
            "unfold permutation; simpl; auto with datatypes.",
            "VernacExtend",
            "ead5d3ee3bc7c0b67b24eb1c597ee5eb0126fbdb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_app : forall l l' m m':list A, permutation l l' -> permutation m m' -> permutation (l ++ m) (l' ++ m').",
            "VernacStartTheoremProof",
            "210127ff9a3813910681a050fcbede1c19eea441"
        ],
        [
            "unfold permutation; intros.",
            "VernacExtend",
            "3d3337d0d4501a6dc6f44ba76097115259b989fe"
        ],
        [
            "apply meq_trans with (munion (list_contents l) (list_contents m)); auto using permut_cons, list_contents_app with datatypes.",
            "VernacExtend",
            "21e05e117436c611dd2b6654563830914196e8f5"
        ],
        [
            "apply meq_trans with (munion (list_contents l') (list_contents m')); auto using permut_cons, list_contents_app with datatypes.",
            "VernacExtend",
            "0d529a0404e8c08895c5a5346cb1d1651bc93fc3"
        ],
        [
            "apply meq_trans with (munion (list_contents l') (list_contents m)); auto using permut_cons, list_contents_app with datatypes.",
            "VernacExtend",
            "439997ce3079eba3cdbe559908f7b73268f66c09"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_add_inside_eq : forall a a' l1 l2 l3 l4, eqA a a' -> permutation (l1 ++ l2) (l3 ++ l4) -> permutation (l1 ++ a :: l2) (l3 ++ a' :: l4).",
            "VernacStartTheoremProof",
            "2182c4681ad15a6fe1db503198e160fce7903b5c"
        ],
        [
            "unfold permutation, meq in *; intros.",
            "VernacExtend",
            "3884e190513b63b0f47133220aa02463ab203838"
        ],
        [
            "specialize H0 with a0.",
            "VernacExtend",
            "18ebbf10e83cb670ff03cf485fb900b00cee2e9e"
        ],
        [
            "repeat rewrite list_contents_app in *; simpl in *.",
            "VernacExtend",
            "d6f80f5f89dcbfee313fb1fbded4ee94a95876d6"
        ],
        [
            "destruct (eqA_dec a a0) as [Ha|Ha]; rewrite H in Ha; decide (eqA_dec a' a0) with Ha; simpl; auto with arith.",
            "VernacExtend",
            "dab38527a8eafddd411e5063b74f49db95d62a81"
        ],
        [
            "do 2 rewrite <- plus_n_Sm; f_equal; auto.",
            "VernacExtend",
            "c3539ee33209d2e1d8171fa08f974dad422f92e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_add_inside : forall a l1 l2 l3 l4, permutation (l1 ++ l2) (l3 ++ l4) -> permutation (l1 ++ a :: l2) (l3 ++ a :: l4).",
            "VernacStartTheoremProof",
            "798e9f0b9bc230e6166a093a17d428605e731cb1"
        ],
        [
            "unfold permutation, meq in *; intros.",
            "VernacExtend",
            "3884e190513b63b0f47133220aa02463ab203838"
        ],
        [
            "generalize (H a0); clear H.",
            "VernacExtend",
            "0a59318cc19de1b14677813aa42ce1d1bd4b7cce"
        ],
        [
            "do 4 rewrite list_contents_app.",
            "VernacExtend",
            "5de5ecc537290c5712998fa8fc6f6ba63a5a81ea"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (eqA_dec a a0); simpl; auto with arith.",
            "VernacExtend",
            "d9e64833d111e8e227e26b3034ab1de9e0a600d5"
        ],
        [
            "do 2 rewrite <- plus_n_Sm; f_equal; auto.",
            "VernacExtend",
            "c3539ee33209d2e1d8171fa08f974dad422f92e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_add_cons_inside_eq : forall a a' l l1 l2, eqA a a' -> permutation l (l1 ++ l2) -> permutation (a :: l) (l1 ++ a' :: l2).",
            "VernacStartTheoremProof",
            "af9897ad1c32fcfb10322e4bba226554bca52af9"
        ],
        [
            "intros; replace (a :: l) with ([] ++ a :: l); trivial; apply permut_add_inside_eq; trivial.",
            "VernacExtend",
            "90c9c6314b903694a3f2f87751ef8767a0ec0413"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_add_cons_inside : forall a l l1 l2, permutation l (l1 ++ l2) -> permutation (a :: l) (l1 ++ a :: l2).",
            "VernacStartTheoremProof",
            "a2bc8fdcc198e615987c5b7214bb1ae1bc273877"
        ],
        [
            "intros; replace (a :: l) with ([] ++ a :: l); trivial; apply permut_add_inside; trivial.",
            "VernacExtend",
            "1a26c163b3b045bfada7815d09a32fb2f92bbb50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_middle : forall (l m:list A) (a:A), permutation (a :: l ++ m) (l ++ a :: m).",
            "VernacStartTheoremProof",
            "7fe4c88bc59c1d6e38fa60271d68b1a763b4de21"
        ],
        [
            "intros; apply permut_add_cons_inside; auto using permut_sym, permut_refl.",
            "VernacExtend",
            "5c036ff0e3600031d6c285b592ceaeacb7140867"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_sym_app : forall l1 l2, permutation (l1 ++ l2) (l2 ++ l1).",
            "VernacStartTheoremProof",
            "5acf944ff30f4e5b6b2443ee595e6b341dd67063"
        ],
        [
            "intros l1 l2; unfold permutation, meq; intro a; do 2 rewrite list_contents_app; simpl; auto with arith.",
            "VernacExtend",
            "e6a80786a39c404ce912374bdfe55eb34346943b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_rev : forall l, permutation l (rev l).",
            "VernacStartTheoremProof",
            "7d4478f5bf81f1b6bc576df32023c53e3878e7f7"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "simpl; trivial using permut_refl.",
            "VernacExtend",
            "cd3e86e3a8f0d5b3323c4157cfd6dec6454c6225"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply permut_add_cons_inside.",
            "VernacExtend",
            "f9b2cd713d64af13340bcc1fee5446e7809332ee"
        ],
        [
            "rewrite app_nil_r.",
            "VernacExtend",
            "c4835e186d44991c06ea8a79f450a4e967f8f713"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_conv_inv : forall e l1 l2, permutation (e :: l1) (e :: l2) -> permutation l1 l2.",
            "VernacStartTheoremProof",
            "8f10d7fbecb0fed79da879b339e9103638d84252"
        ],
        [
            "intros e l1 l2; unfold permutation, meq; simpl; intros H a; generalize (H a); apply plus_reg_l.",
            "VernacExtend",
            "6dffbaf2738c7ae5d20a78f8c96a6b51e4506013"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_app_inv1 : forall l l1 l2, permutation (l1 ++ l) (l2 ++ l) -> permutation l1 l2.",
            "VernacStartTheoremProof",
            "fdfb18843e0623111d4ad9a932f9edbce0c2952d"
        ],
        [
            "intros l l1 l2; unfold permutation, meq; simpl; intros H a; generalize (H a); clear H.",
            "VernacExtend",
            "912781d1a7d40967570dbf53e8c8a16d3e9d490a"
        ],
        [
            "do 2 rewrite list_contents_app.",
            "VernacExtend",
            "d5631f8db2a76147a85d1e0e4ec0fbdacd86671f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros; apply plus_reg_l with (multiplicity (list_contents l) a).",
            "VernacExtend",
            "0d7b1e78d043e19b19142565facb77338a6da959"
        ],
        [
            "rewrite plus_comm; rewrite H; rewrite plus_comm.",
            "VernacExtend",
            "63ee32682591fed30de6c004e9e23d271f88911c"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact if_eqA_then : forall a a' (B:Type)(b b':B), eqA a a' -> (if eqA_dec a a' then b else b') = b.",
            "VernacStartTheoremProof",
            "471955efcf78edee6b7b4205e9d0cfbf8a132334"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct eqA_dec as [_|NEQ]; auto.",
            "VernacExtend",
            "d5321688507379952f65c9c5ca815d068d312a5f"
        ],
        [
            "contradict NEQ; auto.",
            "VernacExtend",
            "76a89963406e6c2e3e84c5a51dcf92343fdad35f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_app_inv2 : forall l l1 l2, permutation (l ++ l1) (l ++ l2) -> permutation l1 l2.",
            "VernacStartTheoremProof",
            "10e6db0c2467a353669a0257ab44febde44b1d2f"
        ],
        [
            "intros l l1 l2; unfold permutation, meq; simpl; intros H a; generalize (H a); clear H.",
            "VernacExtend",
            "912781d1a7d40967570dbf53e8c8a16d3e9d490a"
        ],
        [
            "do 2 rewrite list_contents_app.",
            "VernacExtend",
            "d5631f8db2a76147a85d1e0e4ec0fbdacd86671f"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros; apply plus_reg_l with (multiplicity (list_contents l) a).",
            "VernacExtend",
            "0d7b1e78d043e19b19142565facb77338a6da959"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_remove_hd_eq : forall l l1 l2 a b, eqA a b -> permutation (a :: l) (l1 ++ b :: l2) -> permutation l (l1 ++ l2).",
            "VernacStartTheoremProof",
            "ba538d7828c78221f6474d36f4757b1a82d5d7a8"
        ],
        [
            "unfold permutation, meq; simpl; intros l l1 l2 a b Heq H a0.",
            "VernacExtend",
            "ba3390ab5cd21ffcad56df91660ca7f90e5bd30a"
        ],
        [
            "specialize H with a0.",
            "VernacExtend",
            "bfe803a4929db8559dcbca32d1b16c907de0b487"
        ],
        [
            "rewrite list_contents_app in *; simpl in *.",
            "VernacExtend",
            "8f47f431fe05de50436ea8f0a4db3178c6560090"
        ],
        [
            "apply plus_reg_l with (if eqA_dec a a0 then 1 else 0).",
            "VernacExtend",
            "351053e37d2b707107d145d84d4f0d06e7740c90"
        ],
        [
            "rewrite H; clear H.",
            "VernacExtend",
            "a60de8fe6903e17bd74acece0951cbb10e6ef842"
        ],
        [
            "symmetry; rewrite plus_comm, <- ! plus_assoc; f_equal.",
            "VernacExtend",
            "3ae194b0b641b03285bc049131342930ec0e236f"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "destruct (eqA_dec a a0) as [Ha|Ha]; rewrite Heq in Ha; decide (eqA_dec b a0) with Ha; reflexivity.",
            "VernacExtend",
            "b9f6981205122d90b551221358a2637dc89640f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_remove_hd : forall l l1 l2 a, permutation (a :: l) (l1 ++ a :: l2) -> permutation l (l1 ++ l2).",
            "VernacStartTheoremProof",
            "4fe6db38a90477423d32f519f6b411e552979973"
        ],
        [
            "eauto using permut_remove_hd_eq, Equivalence_Reflexive.",
            "VernacExtend",
            "20f6639733e2d5dcd663296ca7c82ad14508b214"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact if_eqA_else : forall a a' (B:Type)(b b':B), ~eqA a a' -> (if eqA_dec a a' then b else b') = b'.",
            "VernacStartTheoremProof",
            "49cb28263297109319a1bf4aee0b797350aa8862"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "decide (eqA_dec a a') with H; auto.",
            "VernacExtend",
            "f8ef6249f3e50ff565af06718ec396898081d2b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact if_eqA_refl : forall a (B:Type)(b b':B), (if eqA_dec a a then b else b') = b.",
            "VernacStartTheoremProof",
            "f72d0a0ce5f571f7135f78d74b94b63ca561516e"
        ],
        [
            "intros; apply (decide_left (eqA_dec a a)); auto with *.",
            "VernacExtend",
            "cf29db01b1917a5a910f8e6e1738a1a85be158a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance if_eqA (B:Type)(b b':B) : Proper (eqA==>eqA==>@eq _) (fun x y => if eqA_dec x y then b else b').",
            "VernacInstance",
            "e365aa37e9d2cac900267dbb9932efb6071abf4b"
        ],
        [
            "intros x x' Hxx' y y' Hyy'.",
            "VernacExtend",
            "f52c05bae3a8245e03176d2c7a6e8a926e78bbc1"
        ],
        [
            "intros; destruct (eqA_dec x y) as [H|H]; destruct (eqA_dec x' y') as [H'|H']; auto.",
            "VernacExtend",
            "afbc94684e8b021532c862eb23c333d4fa119bda"
        ],
        [
            "contradict H'; transitivity x; auto with *; transitivity y; auto with *.",
            "VernacExtend",
            "9bd01b53448029bcda30109a848c5e6e20d121a2"
        ],
        [
            "contradict H; transitivity x'; auto with *; transitivity y'; auto with *.",
            "VernacExtend",
            "2c0d1f5423898a1986731b6aa914007c74f37c09"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact if_eqA_rewrite_l : forall a1 a1' a2 (B:Type)(b b':B), eqA a1 a1' -> (if eqA_dec a1 a2 then b else b') = (if eqA_dec a1' a2 then b else b').",
            "VernacStartTheoremProof",
            "26936bc128e1cddb95831ec996e337f150490ef6"
        ],
        [
            "intros; destruct (eqA_dec a1 a2) as [A1|A1]; destruct (eqA_dec a1' a2) as [A1'|A1']; auto.",
            "VernacExtend",
            "376b2f57cfe5d08843a76700ca056340e3ae498e"
        ],
        [
            "contradict A1'; transitivity a1; eauto with *.",
            "VernacExtend",
            "33b8bb080f1e3a8cb79e9d61aa5ba28653ae0f3d"
        ],
        [
            "contradict A1; transitivity a1'; eauto with *.",
            "VernacExtend",
            "4e5d5bb26bea70eb7a0cd1167ee5ef0f974cb874"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fact if_eqA_rewrite_r : forall a1 a2 a2' (B:Type)(b b':B), eqA a2 a2' -> (if eqA_dec a1 a2 then b else b') = (if eqA_dec a1 a2' then b else b').",
            "VernacStartTheoremProof",
            "63b649e2c2cad05a674925eb13f4e0399466ef6f"
        ],
        [
            "intros; destruct (eqA_dec a1 a2) as [A2|A2]; destruct (eqA_dec a1 a2') as [A2'|A2']; auto.",
            "VernacExtend",
            "76d7fc1f0c5328a5689cfe74a6fbd3e41f7f3879"
        ],
        [
            "contradict A2'; transitivity a2; eauto with *.",
            "VernacExtend",
            "285f273d60b378766f6bbb8fa046be4759dba74f"
        ],
        [
            "contradict A2; transitivity a2'; eauto with *.",
            "VernacExtend",
            "9074bdff6c846f3e04dbb2d2dc7f99cadd847a26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance multiplicity_eqA (l:list A) : Proper (eqA==>@eq _) (multiplicity (list_contents l)).",
            "VernacInstance",
            "4d3a59cb1bd600f952102f4f1aa50a4338ccfea4"
        ],
        [
            "intros x x' Hxx'.",
            "VernacExtend",
            "e1464fcea303d2234e2ed599fe48fe957ee1c681"
        ],
        [
            "induction l as [|y l Hl]; simpl; auto.",
            "VernacExtend",
            "9638cc439be481cc388715b9c1d80575b3a86f92"
        ],
        [
            "rewrite (@if_eqA_rewrite_r y x x'); auto.",
            "VernacExtend",
            "7c6b997dbc90b1aae54c4992906ba26aaef9eb58"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multiplicity_InA : forall l a, InA eqA a l <-> 0 < multiplicity (list_contents l) a.",
            "VernacStartTheoremProof",
            "e676dac7f0211fc97351d991eed4a3ba018e3f0e"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split; inversion 1.",
            "VernacExtend",
            "34ec1e1110f18667a6b74289a129abaaa399fef1"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros a'; split; intros H.",
            "VernacExtend",
            "97964091a63efa2301522c4b28b76bc441ad884d"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "apply (decide_left (eqA_dec a a')); auto with *.",
            "VernacExtend",
            "cf27d2ee7c4945b628c48acfd3d9de96bc5e0905"
        ],
        [
            "destruct (eqA_dec a a'); auto with *.",
            "VernacExtend",
            "c105ae2f37868e30e789c70193ec7a6d51d21605"
        ],
        [
            "simpl; rewrite <- IHl; auto.",
            "VernacExtend",
            "cde78386935ee1062da866b5ed69fe298490378b"
        ],
        [
            "destruct (eqA_dec a a'); auto with *.",
            "VernacExtend",
            "c105ae2f37868e30e789c70193ec7a6d51d21605"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "rewrite IHl; auto.",
            "VernacExtend",
            "393525b1bdb1a369fcb5ee1df369f0a6bb2ffdb4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multiplicity_InA_O : forall l a, ~ InA eqA a l -> multiplicity (list_contents l) a = 0.",
            "VernacStartTheoremProof",
            "8bf64841d36be31211227f1a977399b6cd556531"
        ],
        [
            "intros l a; rewrite multiplicity_InA; destruct (multiplicity (list_contents l) a); auto with arith.",
            "VernacExtend",
            "b5ba226615b81193da7aa6045ac2a8d196c94e74"
        ],
        [
            "destruct 1; auto with arith.",
            "VernacExtend",
            "41d1c7c553d9222a4f2a89a1b76da7564a3831b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multiplicity_InA_S : forall l a, InA eqA a l -> multiplicity (list_contents l) a >= 1.",
            "VernacStartTheoremProof",
            "0ecbac1b9fe350231347a09b59d5e9c9ddffdc31"
        ],
        [
            "intros l a; rewrite multiplicity_InA; auto with arith.",
            "VernacExtend",
            "1d586eab420af4bb88b43f66f9b80eaf1fe943be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma multiplicity_NoDupA : forall l, NoDupA eqA l <-> (forall a, multiplicity (list_contents l) a <= 1).",
            "VernacStartTheoremProof",
            "d365b32f8c703fcf82cba52066336e61f04c420f"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split; auto with arith.",
            "VernacExtend",
            "de58ad3e19a6a20a30358f295f774c59227aa343"
        ],
        [
            "split; simpl.",
            "VernacExtend",
            "007660188543279503c14efdb86878699f33588a"
        ],
        [
            "inversion_clear 1.",
            "VernacExtend",
            "389c04e455824abd99633abf60667aeaa306819a"
        ],
        [
            "rewrite IHl in H1.",
            "VernacExtend",
            "deb1ca894f526bf0a0837ade3d7c674119f2369a"
        ],
        [
            "intros; destruct (eqA_dec a a0) as [EQ|NEQ]; simpl; auto with *.",
            "VernacExtend",
            "81e9b24058b913b8dca7ccc09ad3d71f09285aa9"
        ],
        [
            "rewrite <- EQ.",
            "VernacExtend",
            "24dbb15b276d4d9b12a890733e217a4157c5a67a"
        ],
        [
            "rewrite multiplicity_InA_O; auto.",
            "VernacExtend",
            "2b04c93317eb369efdb9e857ab7a634ee15be312"
        ],
        [
            "intros; constructor.",
            "VernacExtend",
            "6060146ed8617d8b0251c9efb816acd480d86b70"
        ],
        [
            "rewrite multiplicity_InA.",
            "VernacExtend",
            "779d1341b8ff2855201beabbf3e3142b205f2ee1"
        ],
        [
            "specialize (H a).",
            "VernacExtend",
            "7a27eab3769bb3de345226d5979feb4725332b08"
        ],
        [
            "rewrite if_eqA_refl in H.",
            "VernacExtend",
            "9ef7c0c8380dd20736136a3625ae0af31f17962a"
        ],
        [
            "clear IHl; omega.",
            "VernacExtend",
            "682e28b90b585977e26ffd0b44471afea4b76f71"
        ],
        [
            "rewrite IHl; intros.",
            "VernacExtend",
            "f657b65e764fb338bf2dcd5fcc0c7848778ef8ff"
        ],
        [
            "specialize (H a0).",
            "VernacExtend",
            "029fa3ce05709a3e68fe81006c40d1463b4e8e8a"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_InA_InA : forall l1 l2 e, permutation l1 l2 -> InA eqA e l1 -> InA eqA e l2.",
            "VernacStartTheoremProof",
            "e4f2725dd45b8c44198b7f26001fad6354f25a1b"
        ],
        [
            "intros l1 l2 e.",
            "VernacExtend",
            "d9984a56df17f482c109ebadb3b957acd58ae715"
        ],
        [
            "do 2 rewrite multiplicity_InA.",
            "VernacExtend",
            "43ce4fa81d716f3b45a8e781c95bf04d4e7457f9"
        ],
        [
            "unfold permutation, meq.",
            "VernacExtend",
            "d509fa2b16d0b8bfff049c74160760ad915cc36d"
        ],
        [
            "intros H;rewrite H; auto.",
            "VernacExtend",
            "2fe06e89fcbef6bdc71989f6d8a2180ee2ee021b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_cons_InA : forall l1 l2 e, permutation (e :: l1) l2 -> InA eqA e l2.",
            "VernacStartTheoremProof",
            "76762fb4da7226f13df44010cffcb415da3a016c"
        ],
        [
            "intros; apply (permut_InA_InA (e:=e) H); auto with *.",
            "VernacExtend",
            "321ef914e5de12de85cb3724c065fa8292f48ec8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_nil : forall l, permutation l [] -> l = [].",
            "VernacStartTheoremProof",
            "88982eeee8ae29e58b98144a1490ba9a23b0e240"
        ],
        [
            "intro l; destruct l as [ | e l ]; trivial.",
            "VernacExtend",
            "e35b32e1af7288b91300e9c6f93cd99785969bc7"
        ],
        [
            "assert (InA eqA e (e::l)) by (auto with *).",
            "VernacExtend",
            "caa5a31fcc9c0e1c48f557edde3497eb90d40c25"
        ],
        [
            "intro Abs; generalize (permut_InA_InA Abs H).",
            "VernacExtend",
            "be0e389cfccc9864607f8e6178f54b3e286f3c97"
        ],
        [
            "inversion 1.",
            "VernacExtend",
            "9152817da0dc28ba4701e3ff01c293af28a1059f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_length_1: forall a b, permutation [a] [b] -> eqA a b.",
            "VernacStartTheoremProof",
            "2684de4d5555c10e02782f2fea409f05e522ad01"
        ],
        [
            "intros a b; unfold permutation, meq.",
            "VernacExtend",
            "735c6d54d3448359c625c28c64c26e9e94261830"
        ],
        [
            "intro P; specialize (P b); simpl in *.",
            "VernacExtend",
            "b9d4d787a6e189546e3107e1629a62fe6604a18a"
        ],
        [
            "rewrite if_eqA_refl in *.",
            "VernacExtend",
            "191cd696ddfbf9e31619a86a68f16a6ff59b24cd"
        ],
        [
            "destruct (eqA_dec a b); simpl; auto; discriminate.",
            "VernacExtend",
            "5e57bf900e3ddeee63f8c0baea56f50bdb5881b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_length_2 : forall a1 b1 a2 b2, permutation [a1; b1] [a2; b2] -> (eqA a1 a2) /\\ (eqA b1 b2) \\/ (eqA a1 b2) /\\ (eqA a2 b1).",
            "VernacStartTheoremProof",
            "8659e7f334975d6e44d43599c68880b49f8ebab1"
        ],
        [
            "intros a1 b1 a2 b2 P.",
            "VernacExtend",
            "d530886fe4e023a0e654e80b303a9a9842df4419"
        ],
        [
            "assert (H:=permut_cons_InA P).",
            "VernacExtend",
            "b43faef55a845f97c5e5e4aaa4a75aa23c315581"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "left; split; auto.",
            "VernacExtend",
            "839f21d27eb3d8616b1c18bc30b38cff7c9f8eb4"
        ],
        [
            "apply permut_length_1.",
            "VernacExtend",
            "efd95aea24611b82aabbbc73b3b94fea58c19bed"
        ],
        [
            "red; red; intros.",
            "VernacExtend",
            "7c4a882f5c9650b5f2bf3499dc9de0f273b74400"
        ],
        [
            "specialize (P a).",
            "VernacExtend",
            "68390770fd6090eb9313721fe8fb80f18b67c290"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "rewrite (@if_eqA_rewrite_l a1 a2 a) in P by auto.",
            "VernacExtend",
            "112b749f6540b0bea99d538ae3f1c5106ac02580"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "inversion_clear H0; [|inversion H].",
            "VernacExtend",
            "4a202160d26a48827ad33552a238a0ae3c90bc13"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply permut_length_1.",
            "VernacExtend",
            "efd95aea24611b82aabbbc73b3b94fea58c19bed"
        ],
        [
            "red; red; intros.",
            "VernacExtend",
            "7c4a882f5c9650b5f2bf3499dc9de0f273b74400"
        ],
        [
            "specialize (P a); simpl in *.",
            "VernacExtend",
            "2afe3464e215fd6d030b4ee4834565f79ec487b4"
        ],
        [
            "rewrite (@if_eqA_rewrite_l a1 b2 a) in P by auto.",
            "VernacExtend",
            "6b7c589a57c4c56ee13ad303f32eae6426bf35c2"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_length : forall l1 l2, permutation l1 l2 -> length l1 = length l2.",
            "VernacStartTheoremProof",
            "e69e4ac1367d5979de289e31fb35d598678789f2"
        ],
        [
            "induction l1; intros l2 H.",
            "VernacExtend",
            "6e4fa746dc93de2fbd75e1320729653344084978"
        ],
        [
            "rewrite (permut_nil (permut_sym H)); auto.",
            "VernacExtend",
            "d6829544e052d30a999c667730fb763796b6af2a"
        ],
        [
            "assert (H0:=permut_cons_InA H).",
            "VernacExtend",
            "7b74d0b580120dc59566d2101bb6d6cebdc1a2a6"
        ],
        [
            "destruct (InA_split H0) as (h2,(b,(t2,(H1,H2)))).",
            "VernacExtend",
            "080c4442ffa6c321c926e83d44958672f9a5bcc0"
        ],
        [
            "subst l2.",
            "VernacExtend",
            "34c8ca84c938ddc4a82d160e2e12a62f19d725a6"
        ],
        [
            "rewrite app_length.",
            "VernacExtend",
            "b9244791fd1e7d821ced2461a10375e028945296"
        ],
        [
            "simpl; rewrite <- plus_n_Sm; f_equal.",
            "VernacExtend",
            "08d804fba04103c016cfae2d6193acbe8ee882b8"
        ],
        [
            "rewrite <- app_length.",
            "VernacExtend",
            "40199fe5acd9b0830e5413873eb81dfb0709514b"
        ],
        [
            "apply IHl1.",
            "VernacExtend",
            "f345159dea97d8876c7b461fb67e1c8421ab70a7"
        ],
        [
            "apply permut_remove_hd with b.",
            "VernacExtend",
            "7dd13f88ca7207fa5cafd53b230f3ba4070e9578"
        ],
        [
            "apply permut_trans with (a::l1); auto.",
            "VernacExtend",
            "68be7bacb0931b52722b83e6749859def3b6d2c6"
        ],
        [
            "revert H1; unfold permutation, meq; simpl.",
            "VernacExtend",
            "fc4b03cb45640e8b99bfb87ecf7e34f7316cf0b1"
        ],
        [
            "intros; f_equal; auto.",
            "VernacExtend",
            "5a31003e6ba104e4a8e4fdb7d631f8976ef4ecc7"
        ],
        [
            "rewrite (@if_eqA_rewrite_l a b a0); auto.",
            "VernacExtend",
            "92ecc9c5d279be872da15d3298a65bccd74463af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NoDupA_equivlistA_permut : forall l l', NoDupA eqA l -> NoDupA eqA l' -> equivlistA eqA l l' -> permutation l l'.",
            "VernacStartTheoremProof",
            "e1701a6fc13b3fed33a9e17d1412f3bde4f494ff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red; unfold meq; intros.",
            "VernacExtend",
            "da60c14660e89220d9ca90d8255bab506b6f1bef"
        ],
        [
            "rewrite multiplicity_NoDupA in H, H0.",
            "VernacExtend",
            "a9ce97c5d1bb469d91867a6d2d0ca66b9ccdd092"
        ],
        [
            "generalize (H a) (H0 a) (H1 a); clear H H0 H1.",
            "VernacExtend",
            "913cca35c7cdc5f694b96e4f12602aa9c52e4376"
        ],
        [
            "do 2 rewrite multiplicity_InA.",
            "VernacExtend",
            "43ce4fa81d716f3b45a8e781c95bf04d4e7457f9"
        ],
        [
            "destruct 3; omega.",
            "VernacExtend",
            "cbae5e5b86b655240e4a995993035d336ec3df40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Permut.",
            "VernacEndSegment",
            "146dd26b4964b7c5af4cadfe8abfbb4e02947d6a"
        ],
        [
            "Section Permut_map.",
            "VernacBeginSection",
            "031d5493ae3009a23f0d72b14b971ea69cc517c6"
        ],
        [
            "Variables A B : Type.",
            "VernacAssumption",
            "b4e42fd426c23cd1c77c79fc26c25f95338235a5"
        ],
        [
            "Variable eqA : relation A.",
            "VernacAssumption",
            "da198f298e55e60b848c4c420437e9551e63866f"
        ],
        [
            "Hypothesis eqA_dec : forall x y:A, {eqA x y} + {~ eqA x y}.",
            "VernacAssumption",
            "e7467197fa59c2f7f5ecd872d3e324fca8875a7e"
        ],
        [
            "Hypothesis eqA_equiv : Equivalence eqA.",
            "VernacAssumption",
            "cef993ca26716e21119d05e42167503edca9a76a"
        ],
        [
            "Variable eqB : B->B->Prop.",
            "VernacAssumption",
            "000eb1bd4953966b5a69a43f6267aa79fc341e7a"
        ],
        [
            "Hypothesis eqB_dec : forall x y:B, { eqB x y }+{ ~eqB x y }.",
            "VernacAssumption",
            "e180c393b8d97c27d5cc3cc7bf2f471c523115b9"
        ],
        [
            "Hypothesis eqB_trans : Transitive eqB.",
            "VernacAssumption",
            "eb8aaed1311354091ac9afc94df6afcf435cf0d7"
        ],
        [
            "Lemma permut_map : forall f, (Proper (eqA==>eqB) f) -> forall l1 l2, permutation _ eqA_dec l1 l2 -> permutation _ eqB_dec (map f l1) (map f l2).",
            "VernacStartTheoremProof",
            "73ead9db037faf2497a0ab29bc50497a0317a0b8"
        ],
        [
            "intros f; induction l1.",
            "VernacExtend",
            "2ec89ea4da2d63c9cfe74d3bea476e37a9b82a5d"
        ],
        [
            "intros l2 P; rewrite (permut_nil eqA_equiv (permut_sym P)); apply permut_refl.",
            "VernacExtend",
            "cb8954f244dfc267b7a5fbb43e729111c183449f"
        ],
        [
            "intros l2 P.",
            "VernacExtend",
            "faae7a0075d09dd05e0425596bbcfc2bbb0f530e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (H0:=permut_cons_InA eqA_equiv P).",
            "VernacExtend",
            "c48bcdf433cb2c201f459d879f597051c16ae861"
        ],
        [
            "destruct (InA_split H0) as (h2,(b,(t2,(H1,H2)))).",
            "VernacExtend",
            "080c4442ffa6c321c926e83d44958672f9a5bcc0"
        ],
        [
            "subst l2.",
            "VernacExtend",
            "34c8ca84c938ddc4a82d160e2e12a62f19d725a6"
        ],
        [
            "rewrite map_app.",
            "VernacExtend",
            "89eca143edf6436bb079a40b9fedf852073d1711"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply permut_trans with (f b :: map f l1).",
            "VernacExtend",
            "d51975898eef0436162480cbebd87aa957238b76"
        ],
        [
            "revert H1; unfold permutation, meq; simpl.",
            "VernacExtend",
            "fc4b03cb45640e8b99bfb87ecf7e34f7316cf0b1"
        ],
        [
            "intros; f_equal; auto.",
            "VernacExtend",
            "5a31003e6ba104e4a8e4fdb7d631f8976ef4ecc7"
        ],
        [
            "destruct (eqB_dec (f b) a0) as [H2|H2]; destruct (eqB_dec (f a) a0) as [H3|H3]; auto.",
            "VernacExtend",
            "3618a4ad40840caf6104f978915c813bdc3dd98b"
        ],
        [
            "destruct H3; transitivity (f b); auto with *.",
            "VernacExtend",
            "e1c2eb082dc2174a7abaf447a10610c0ee3f0f5d"
        ],
        [
            "destruct H2; transitivity (f a); auto with *.",
            "VernacExtend",
            "b9824f2bea423bd5bf257da8313c37c64e98ba29"
        ],
        [
            "apply permut_add_cons_inside.",
            "VernacExtend",
            "f9b2cd713d64af13340bcc1fee5446e7809332ee"
        ],
        [
            "rewrite <- map_app.",
            "VernacExtend",
            "d3f9a2ab47f4ac5688b6653482faafbec82eb5fb"
        ],
        [
            "apply IHl1; auto.",
            "VernacExtend",
            "faf3c6a21d6bc708325ef9cfcef005f1721c606d"
        ],
        [
            "apply permut_remove_hd with b; trivial.",
            "VernacExtend",
            "c70c451fc57140ebbcbb866fecb01617995fe397"
        ],
        [
            "apply permut_trans with (a::l1); auto.",
            "VernacExtend",
            "68be7bacb0931b52722b83e6749859def3b6d2c6"
        ],
        [
            "revert H1; unfold permutation, meq; simpl.",
            "VernacExtend",
            "fc4b03cb45640e8b99bfb87ecf7e34f7316cf0b1"
        ],
        [
            "intros; f_equal; auto.",
            "VernacExtend",
            "5a31003e6ba104e4a8e4fdb7d631f8976ef4ecc7"
        ],
        [
            "rewrite (@if_eqA_rewrite_l _ _ eqA_equiv eqA_dec a b a0); auto.",
            "VernacExtend",
            "9e258c20a1a849fbf3b4d9c631cff331e037c448"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Permut_map.",
            "VernacEndSegment",
            "78ff2aa9b82517681ba3802aac840996669cc023"
        ],
        [
            "Require Import Permutation.",
            "VernacRequire",
            "24483a56a7bd56238bc4fd9692efc17fe0758d88"
        ],
        [
            "Section Permut_permut.",
            "VernacBeginSection",
            "9a4802c5b1bd38e949d98bd9e942ad4f3d3410fa"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Variable eqA : relation A.",
            "VernacAssumption",
            "da198f298e55e60b848c4c420437e9551e63866f"
        ],
        [
            "Hypothesis eqA_dec : forall x y:A, {eqA x y} + {~ eqA x y}.",
            "VernacAssumption",
            "e7467197fa59c2f7f5ecd872d3e324fca8875a7e"
        ],
        [
            "Hypothesis eqA_equiv : Equivalence eqA.",
            "VernacAssumption",
            "cef993ca26716e21119d05e42167503edca9a76a"
        ],
        [
            "Lemma Permutation_impl_permutation : forall l l', Permutation l l' -> permutation _ eqA_dec l l'.",
            "VernacStartTheoremProof",
            "dff5572e81016aa92b8a6159086dfb656639adf5"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "apply permut_refl.",
            "VernacExtend",
            "ea779d6f939211cb151e3094374a74bfbd47181a"
        ],
        [
            "apply permut_cons; auto using Equivalence_Reflexive.",
            "VernacExtend",
            "2c0660412ae02e5f802afbced1bea0cc58379595"
        ],
        [
            "change (x :: y :: l) with ([x] ++ y :: l); apply permut_add_cons_inside; simpl; apply permut_cons_eq; auto using Equivalence_Reflexive, permut_refl.",
            "VernacExtend",
            "736092fa1063a9201f81bd30856b54efcb6d4089"
        ],
        [
            "apply permut_trans with l'; trivial.",
            "VernacExtend",
            "05ca167b29dad2654411921c4d0bc7c8fdaed59d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permut_eqA : forall l l', Forall2 eqA l l' -> permutation _ eqA_dec l l'.",
            "VernacStartTheoremProof",
            "bdf227ab3fc74a609ad06a404d19a6600e0363f7"
        ],
        [
            "induction 1.",
            "VernacExtend",
            "dfe896305621800fcbb03b32d51d497edbdf1dc5"
        ],
        [
            "apply permut_refl.",
            "VernacExtend",
            "ea779d6f939211cb151e3094374a74bfbd47181a"
        ],
        [
            "apply permut_cons_eq; trivial.",
            "VernacExtend",
            "e4061ad2467d55929d54ef6387502d44a25be182"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma permutation_Permutation : forall l l', permutation _ eqA_dec l l' <-> exists l'', Permutation l l'' /\\ Forall2 eqA l'' l'.",
            "VernacStartTheoremProof",
            "7196eec19a42d633acc1a3d2f3d585ef2892a11b"
        ],
        [
            "split; intro H.",
            "VernacExtend",
            "496dd5fc77c723ff896bbd9bc6dee3ccc3aa9bde"
        ],
        [
            "induction l in l', H |- *.",
            "VernacExtend",
            "a38a55edd8e2ef99bc5a2531d6468c2f431db626"
        ],
        [
            "exists []; apply permut_sym, permut_nil in H as ->; auto using Forall2.",
            "VernacExtend",
            "06c40c209247b3b6f8743f6d1f3b8995e09a10df"
        ],
        [
            "pose proof H as H'.",
            "VernacExtend",
            "15c1ed350339019dd3099ce17e681f2e618fbc4a"
        ],
        [
            "apply permut_cons_InA, InA_split in H as (l1 & y & l2 & Heq & ->); trivial.",
            "VernacExtend",
            "e3f19f8a7a3cf75edaa6b1468ead9ae41adc2178"
        ],
        [
            "apply permut_remove_hd_eq, IHl in H' as (l'' & IHP & IHA); clear IHl; trivial.",
            "VernacExtend",
            "accf39729963a7105749161e6a74b6c708908795"
        ],
        [
            "apply Forall2_app_inv_r in IHA as (l1'' & l2'' & Hl1 & Hl2 & ->).",
            "VernacExtend",
            "669ec0b03ce76c29588679b68a6ce03b67a6f80e"
        ],
        [
            "exists (l1'' ++ a :: l2''); split.",
            "VernacExtend",
            "6a3b13af6e1bbb293be206762139a35494dc2095"
        ],
        [
            "apply Permutation_cons_app; trivial.",
            "VernacExtend",
            "8714a9898e2ef6a2c58d9a72ad53ef8b1177e590"
        ],
        [
            "apply Forall2_app, Forall2_cons; trivial.",
            "VernacExtend",
            "d9d903f3d3f4b053ac5e6b70d867ad45483f9263"
        ],
        [
            "destruct H as (l'' & H & Heq).",
            "VernacExtend",
            "1ce219701ad5438e0b8da18a4d45e39a8d7329ae"
        ],
        [
            "apply permut_trans with l''.",
            "VernacExtend",
            "c4a1d07dd7d22d77973e85d42d0280a02d345022"
        ],
        [
            "apply Permutation_impl_permutation; trivial.",
            "VernacExtend",
            "3d9e77a19b1831a520e85a13d7f7f0cd76d2cd3a"
        ],
        [
            "apply permut_eqA; trivial.",
            "VernacExtend",
            "23ba7822a1c1dec7badd54596907b526168b5c42"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Permut_permut.",
            "VernacEndSegment",
            "e9e802ec0cbbf784e09435f6b6afbafba27a100b"
        ],
        [
            "Notation permut_right := permut_cons (only parsing).",
            "VernacSyntacticDefinition",
            "c1fbed9bc6275c63ff970e1021e3cdfd4730ce44"
        ],
        [
            "Notation permut_tran := permut_trans (only parsing).",
            "VernacSyntacticDefinition",
            "05be0a79647fbf318e3ba14542acd9d2cbeca072"
        ]
    ],
    "proofs": [
        {
            "name": "list_contents_app",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "simple induction l; simpl; auto with datatypes.",
                        "VernacExtend",
                        "b1695c1ddefbdbd3c7ba3ae16227d0b8376b6161"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply meq_trans with (munion (singletonBag a) (munion (list_contents l0) (list_contents m))); auto with datatypes.",
                        "VernacExtend",
                        "a3dbaa81c276101cb295d3c2bbcc230a9577c9e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_refl",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "unfold permutation; auto with datatypes.",
                        "VernacExtend",
                        "9074f72cc35bfadcc50a19200ad6dd8102f5e4b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_sym",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "unfold permutation, meq; intros; symmetry; trivial.",
                        "VernacExtend",
                        "614e29b61ea94b02e833c3b7996f480c3911acb7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_trans",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "unfold permutation; intros.",
                        "VernacExtend",
                        "3d3337d0d4501a6dc6f44ba76097115259b989fe"
                    ]
                },
                {
                    "command": [
                        "apply meq_trans with (list_contents m); auto with datatypes.",
                        "VernacExtend",
                        "dd8bf5c337bd644798a4b2d11e8d74dc5f0c243a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_cons_eq",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "unfold permutation; simpl; intros.",
                        "VernacExtend",
                        "b96aa60a6696ed09c443502871376cb1cde90d16"
                    ]
                },
                {
                    "command": [
                        "apply meq_trans with (munion (singletonBag a') (list_contents l)).",
                        "VernacExtend",
                        "1c03eff5ffda8f9ca239d90e17d709823fb0a161"
                    ]
                },
                {
                    "command": [
                        "apply meq_left, meq_singleton; auto.",
                        "VernacExtend",
                        "fb3ef78dadca75c24273a16f1788ba73e53c376a"
                    ]
                },
                {
                    "command": [
                        "auto with datatypes.",
                        "VernacExtend",
                        "dd2530190f30288bf22ee75c4a3569788440b03a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_cons",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "unfold permutation; simpl; auto with datatypes.",
                        "VernacExtend",
                        "ead5d3ee3bc7c0b67b24eb1c597ee5eb0126fbdb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_app",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "unfold permutation; intros.",
                        "VernacExtend",
                        "3d3337d0d4501a6dc6f44ba76097115259b989fe"
                    ]
                },
                {
                    "command": [
                        "apply meq_trans with (munion (list_contents l) (list_contents m)); auto using permut_cons, list_contents_app with datatypes.",
                        "VernacExtend",
                        "21e05e117436c611dd2b6654563830914196e8f5"
                    ]
                },
                {
                    "command": [
                        "apply meq_trans with (munion (list_contents l') (list_contents m')); auto using permut_cons, list_contents_app with datatypes.",
                        "VernacExtend",
                        "0d529a0404e8c08895c5a5346cb1d1651bc93fc3"
                    ]
                },
                {
                    "command": [
                        "apply meq_trans with (munion (list_contents l') (list_contents m)); auto using permut_cons, list_contents_app with datatypes.",
                        "VernacExtend",
                        "439997ce3079eba3cdbe559908f7b73268f66c09"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_add_inside_eq",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "unfold permutation, meq in *; intros.",
                        "VernacExtend",
                        "3884e190513b63b0f47133220aa02463ab203838"
                    ]
                },
                {
                    "command": [
                        "specialize H0 with a0.",
                        "VernacExtend",
                        "18ebbf10e83cb670ff03cf485fb900b00cee2e9e"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite list_contents_app in *; simpl in *.",
                        "VernacExtend",
                        "d6f80f5f89dcbfee313fb1fbded4ee94a95876d6"
                    ]
                },
                {
                    "command": [
                        "destruct (eqA_dec a a0) as [Ha|Ha]; rewrite H in Ha; decide (eqA_dec a' a0) with Ha; simpl; auto with arith.",
                        "VernacExtend",
                        "dab38527a8eafddd411e5063b74f49db95d62a81"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- plus_n_Sm; f_equal; auto.",
                        "VernacExtend",
                        "c3539ee33209d2e1d8171fa08f974dad422f92e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_add_inside",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "unfold permutation, meq in *; intros.",
                        "VernacExtend",
                        "3884e190513b63b0f47133220aa02463ab203838"
                    ]
                },
                {
                    "command": [
                        "generalize (H a0); clear H.",
                        "VernacExtend",
                        "0a59318cc19de1b14677813aa42ce1d1bd4b7cce"
                    ]
                },
                {
                    "command": [
                        "do 4 rewrite list_contents_app.",
                        "VernacExtend",
                        "5de5ecc537290c5712998fa8fc6f6ba63a5a81ea"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (eqA_dec a a0); simpl; auto with arith.",
                        "VernacExtend",
                        "d9e64833d111e8e227e26b3034ab1de9e0a600d5"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- plus_n_Sm; f_equal; auto.",
                        "VernacExtend",
                        "c3539ee33209d2e1d8171fa08f974dad422f92e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_add_cons_inside_eq",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "intros; replace (a :: l) with ([] ++ a :: l); trivial; apply permut_add_inside_eq; trivial.",
                        "VernacExtend",
                        "90c9c6314b903694a3f2f87751ef8767a0ec0413"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_add_cons_inside",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intros; replace (a :: l) with ([] ++ a :: l); trivial; apply permut_add_inside; trivial.",
                        "VernacExtend",
                        "1a26c163b3b045bfada7815d09a32fb2f92bbb50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_middle",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros; apply permut_add_cons_inside; auto using permut_sym, permut_refl.",
                        "VernacExtend",
                        "5c036ff0e3600031d6c285b592ceaeacb7140867"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_sym_app",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros l1 l2; unfold permutation, meq; intro a; do 2 rewrite list_contents_app; simpl; auto with arith.",
                        "VernacExtend",
                        "e6a80786a39c404ce912374bdfe55eb34346943b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_rev",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "simpl; trivial using permut_refl.",
                        "VernacExtend",
                        "cd3e86e3a8f0d5b3323c4157cfd6dec6454c6225"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply permut_add_cons_inside.",
                        "VernacExtend",
                        "f9b2cd713d64af13340bcc1fee5446e7809332ee"
                    ]
                },
                {
                    "command": [
                        "rewrite app_nil_r.",
                        "VernacExtend",
                        "c4835e186d44991c06ea8a79f450a4e967f8f713"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_conv_inv",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros e l1 l2; unfold permutation, meq; simpl; intros H a; generalize (H a); apply plus_reg_l.",
                        "VernacExtend",
                        "6dffbaf2738c7ae5d20a78f8c96a6b51e4506013"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_app_inv1",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "intros l l1 l2; unfold permutation, meq; simpl; intros H a; generalize (H a); clear H.",
                        "VernacExtend",
                        "912781d1a7d40967570dbf53e8c8a16d3e9d490a"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite list_contents_app.",
                        "VernacExtend",
                        "d5631f8db2a76147a85d1e0e4ec0fbdacd86671f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros; apply plus_reg_l with (multiplicity (list_contents l) a).",
                        "VernacExtend",
                        "0d7b1e78d043e19b19142565facb77338a6da959"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; rewrite H; rewrite plus_comm.",
                        "VernacExtend",
                        "63ee32682591fed30de6c004e9e23d271f88911c"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "if_eqA_then",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct eqA_dec as [_|NEQ]; auto.",
                        "VernacExtend",
                        "d5321688507379952f65c9c5ca815d068d312a5f"
                    ]
                },
                {
                    "command": [
                        "contradict NEQ; auto.",
                        "VernacExtend",
                        "76a89963406e6c2e3e84c5a51dcf92343fdad35f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_app_inv2",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "intros l l1 l2; unfold permutation, meq; simpl; intros H a; generalize (H a); clear H.",
                        "VernacExtend",
                        "912781d1a7d40967570dbf53e8c8a16d3e9d490a"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite list_contents_app.",
                        "VernacExtend",
                        "d5631f8db2a76147a85d1e0e4ec0fbdacd86671f"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros; apply plus_reg_l with (multiplicity (list_contents l) a).",
                        "VernacExtend",
                        "0d7b1e78d043e19b19142565facb77338a6da959"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_remove_hd_eq",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "unfold permutation, meq; simpl; intros l l1 l2 a b Heq H a0.",
                        "VernacExtend",
                        "ba3390ab5cd21ffcad56df91660ca7f90e5bd30a"
                    ]
                },
                {
                    "command": [
                        "specialize H with a0.",
                        "VernacExtend",
                        "bfe803a4929db8559dcbca32d1b16c907de0b487"
                    ]
                },
                {
                    "command": [
                        "rewrite list_contents_app in *; simpl in *.",
                        "VernacExtend",
                        "8f47f431fe05de50436ea8f0a4db3178c6560090"
                    ]
                },
                {
                    "command": [
                        "apply plus_reg_l with (if eqA_dec a a0 then 1 else 0).",
                        "VernacExtend",
                        "351053e37d2b707107d145d84d4f0d06e7740c90"
                    ]
                },
                {
                    "command": [
                        "rewrite H; clear H.",
                        "VernacExtend",
                        "a60de8fe6903e17bd74acece0951cbb10e6ef842"
                    ]
                },
                {
                    "command": [
                        "symmetry; rewrite plus_comm, <- ! plus_assoc; f_equal.",
                        "VernacExtend",
                        "3ae194b0b641b03285bc049131342930ec0e236f"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "destruct (eqA_dec a a0) as [Ha|Ha]; rewrite Heq in Ha; decide (eqA_dec b a0) with Ha; reflexivity.",
                        "VernacExtend",
                        "b9f6981205122d90b551221358a2637dc89640f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_remove_hd",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "eauto using permut_remove_hd_eq, Equivalence_Reflexive.",
                        "VernacExtend",
                        "20f6639733e2d5dcd663296ca7c82ad14508b214"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "if_eqA_else",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "decide (eqA_dec a a') with H; auto.",
                        "VernacExtend",
                        "f8ef6249f3e50ff565af06718ec396898081d2b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "if_eqA_refl",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "intros; apply (decide_left (eqA_dec a a)); auto with *.",
                        "VernacExtend",
                        "cf29db01b1917a5a910f8e6e1738a1a85be158a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "if_eqA",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "intros x x' Hxx' y y' Hyy'.",
                        "VernacExtend",
                        "f52c05bae3a8245e03176d2c7a6e8a926e78bbc1"
                    ]
                },
                {
                    "command": [
                        "intros; destruct (eqA_dec x y) as [H|H]; destruct (eqA_dec x' y') as [H'|H']; auto.",
                        "VernacExtend",
                        "afbc94684e8b021532c862eb23c333d4fa119bda"
                    ]
                },
                {
                    "command": [
                        "contradict H'; transitivity x; auto with *; transitivity y; auto with *.",
                        "VernacExtend",
                        "9bd01b53448029bcda30109a848c5e6e20d121a2"
                    ]
                },
                {
                    "command": [
                        "contradict H; transitivity x'; auto with *; transitivity y'; auto with *.",
                        "VernacExtend",
                        "2c0d1f5423898a1986731b6aa914007c74f37c09"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "if_eqA_rewrite_l",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "intros; destruct (eqA_dec a1 a2) as [A1|A1]; destruct (eqA_dec a1' a2) as [A1'|A1']; auto.",
                        "VernacExtend",
                        "376b2f57cfe5d08843a76700ca056340e3ae498e"
                    ]
                },
                {
                    "command": [
                        "contradict A1'; transitivity a1; eauto with *.",
                        "VernacExtend",
                        "33b8bb080f1e3a8cb79e9d61aa5ba28653ae0f3d"
                    ]
                },
                {
                    "command": [
                        "contradict A1; transitivity a1'; eauto with *.",
                        "VernacExtend",
                        "4e5d5bb26bea70eb7a0cd1167ee5ef0f974cb874"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "if_eqA_rewrite_r",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "intros; destruct (eqA_dec a1 a2) as [A2|A2]; destruct (eqA_dec a1 a2') as [A2'|A2']; auto.",
                        "VernacExtend",
                        "76d7fc1f0c5328a5689cfe74a6fbd3e41f7f3879"
                    ]
                },
                {
                    "command": [
                        "contradict A2'; transitivity a2; eauto with *.",
                        "VernacExtend",
                        "285f273d60b378766f6bbb8fa046be4759dba74f"
                    ]
                },
                {
                    "command": [
                        "contradict A2; transitivity a2'; eauto with *.",
                        "VernacExtend",
                        "9074bdff6c846f3e04dbb2d2dc7f99cadd847a26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multiplicity_eqA",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros x x' Hxx'.",
                        "VernacExtend",
                        "e1464fcea303d2234e2ed599fe48fe957ee1c681"
                    ]
                },
                {
                    "command": [
                        "induction l as [|y l Hl]; simpl; auto.",
                        "VernacExtend",
                        "9638cc439be481cc388715b9c1d80575b3a86f92"
                    ]
                },
                {
                    "command": [
                        "rewrite (@if_eqA_rewrite_r y x x'); auto.",
                        "VernacExtend",
                        "7c6b997dbc90b1aae54c4992906ba26aaef9eb58"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multiplicity_InA",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split; inversion 1.",
                        "VernacExtend",
                        "34ec1e1110f18667a6b74289a129abaaa399fef1"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros a'; split; intros H.",
                        "VernacExtend",
                        "97964091a63efa2301522c4b28b76bc441ad884d"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "apply (decide_left (eqA_dec a a')); auto with *.",
                        "VernacExtend",
                        "cf27d2ee7c4945b628c48acfd3d9de96bc5e0905"
                    ]
                },
                {
                    "command": [
                        "destruct (eqA_dec a a'); auto with *.",
                        "VernacExtend",
                        "c105ae2f37868e30e789c70193ec7a6d51d21605"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite <- IHl; auto.",
                        "VernacExtend",
                        "cde78386935ee1062da866b5ed69fe298490378b"
                    ]
                },
                {
                    "command": [
                        "destruct (eqA_dec a a'); auto with *.",
                        "VernacExtend",
                        "c105ae2f37868e30e789c70193ec7a6d51d21605"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl; auto.",
                        "VernacExtend",
                        "393525b1bdb1a369fcb5ee1df369f0a6bb2ffdb4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multiplicity_InA_O",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "intros l a; rewrite multiplicity_InA; destruct (multiplicity (list_contents l) a); auto with arith.",
                        "VernacExtend",
                        "b5ba226615b81193da7aa6045ac2a8d196c94e74"
                    ]
                },
                {
                    "command": [
                        "destruct 1; auto with arith.",
                        "VernacExtend",
                        "41d1c7c553d9222a4f2a89a1b76da7564a3831b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multiplicity_InA_S",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "intros l a; rewrite multiplicity_InA; auto with arith.",
                        "VernacExtend",
                        "1d586eab420af4bb88b43f66f9b80eaf1fe943be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multiplicity_NoDupA",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split; auto with arith.",
                        "VernacExtend",
                        "de58ad3e19a6a20a30358f295f774c59227aa343"
                    ]
                },
                {
                    "command": [
                        "split; simpl.",
                        "VernacExtend",
                        "007660188543279503c14efdb86878699f33588a"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 1.",
                        "VernacExtend",
                        "389c04e455824abd99633abf60667aeaa306819a"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl in H1.",
                        "VernacExtend",
                        "deb1ca894f526bf0a0837ade3d7c674119f2369a"
                    ]
                },
                {
                    "command": [
                        "intros; destruct (eqA_dec a a0) as [EQ|NEQ]; simpl; auto with *.",
                        "VernacExtend",
                        "81e9b24058b913b8dca7ccc09ad3d71f09285aa9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ.",
                        "VernacExtend",
                        "24dbb15b276d4d9b12a890733e217a4157c5a67a"
                    ]
                },
                {
                    "command": [
                        "rewrite multiplicity_InA_O; auto.",
                        "VernacExtend",
                        "2b04c93317eb369efdb9e857ab7a634ee15be312"
                    ]
                },
                {
                    "command": [
                        "intros; constructor.",
                        "VernacExtend",
                        "6060146ed8617d8b0251c9efb816acd480d86b70"
                    ]
                },
                {
                    "command": [
                        "rewrite multiplicity_InA.",
                        "VernacExtend",
                        "779d1341b8ff2855201beabbf3e3142b205f2ee1"
                    ]
                },
                {
                    "command": [
                        "specialize (H a).",
                        "VernacExtend",
                        "7a27eab3769bb3de345226d5979feb4725332b08"
                    ]
                },
                {
                    "command": [
                        "rewrite if_eqA_refl in H.",
                        "VernacExtend",
                        "9ef7c0c8380dd20736136a3625ae0af31f17962a"
                    ]
                },
                {
                    "command": [
                        "clear IHl; omega.",
                        "VernacExtend",
                        "682e28b90b585977e26ffd0b44471afea4b76f71"
                    ]
                },
                {
                    "command": [
                        "rewrite IHl; intros.",
                        "VernacExtend",
                        "f657b65e764fb338bf2dcd5fcc0c7848778ef8ff"
                    ]
                },
                {
                    "command": [
                        "specialize (H a0).",
                        "VernacExtend",
                        "029fa3ce05709a3e68fe81006c40d1463b4e8e8a"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_InA_InA",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "intros l1 l2 e.",
                        "VernacExtend",
                        "d9984a56df17f482c109ebadb3b957acd58ae715"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite multiplicity_InA.",
                        "VernacExtend",
                        "43ce4fa81d716f3b45a8e781c95bf04d4e7457f9"
                    ]
                },
                {
                    "command": [
                        "unfold permutation, meq.",
                        "VernacExtend",
                        "d509fa2b16d0b8bfff049c74160760ad915cc36d"
                    ]
                },
                {
                    "command": [
                        "intros H;rewrite H; auto.",
                        "VernacExtend",
                        "2fe06e89fcbef6bdc71989f6d8a2180ee2ee021b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_cons_InA",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "intros; apply (permut_InA_InA (e:=e) H); auto with *.",
                        "VernacExtend",
                        "321ef914e5de12de85cb3724c065fa8292f48ec8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_nil",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "intro l; destruct l as [ | e l ]; trivial.",
                        "VernacExtend",
                        "e35b32e1af7288b91300e9c6f93cd99785969bc7"
                    ]
                },
                {
                    "command": [
                        "assert (InA eqA e (e::l)) by (auto with *).",
                        "VernacExtend",
                        "caa5a31fcc9c0e1c48f557edde3497eb90d40c25"
                    ]
                },
                {
                    "command": [
                        "intro Abs; generalize (permut_InA_InA Abs H).",
                        "VernacExtend",
                        "be0e389cfccc9864607f8e6178f54b3e286f3c97"
                    ]
                },
                {
                    "command": [
                        "inversion 1.",
                        "VernacExtend",
                        "9152817da0dc28ba4701e3ff01c293af28a1059f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_length_1",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "intros a b; unfold permutation, meq.",
                        "VernacExtend",
                        "735c6d54d3448359c625c28c64c26e9e94261830"
                    ]
                },
                {
                    "command": [
                        "intro P; specialize (P b); simpl in *.",
                        "VernacExtend",
                        "b9d4d787a6e189546e3107e1629a62fe6604a18a"
                    ]
                },
                {
                    "command": [
                        "rewrite if_eqA_refl in *.",
                        "VernacExtend",
                        "191cd696ddfbf9e31619a86a68f16a6ff59b24cd"
                    ]
                },
                {
                    "command": [
                        "destruct (eqA_dec a b); simpl; auto; discriminate.",
                        "VernacExtend",
                        "5e57bf900e3ddeee63f8c0baea56f50bdb5881b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_length_2",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "intros a1 b1 a2 b2 P.",
                        "VernacExtend",
                        "d530886fe4e023a0e654e80b303a9a9842df4419"
                    ]
                },
                {
                    "command": [
                        "assert (H:=permut_cons_InA P).",
                        "VernacExtend",
                        "b43faef55a845f97c5e5e4aaa4a75aa23c315581"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "left; split; auto.",
                        "VernacExtend",
                        "839f21d27eb3d8616b1c18bc30b38cff7c9f8eb4"
                    ]
                },
                {
                    "command": [
                        "apply permut_length_1.",
                        "VernacExtend",
                        "efd95aea24611b82aabbbc73b3b94fea58c19bed"
                    ]
                },
                {
                    "command": [
                        "red; red; intros.",
                        "VernacExtend",
                        "7c4a882f5c9650b5f2bf3499dc9de0f273b74400"
                    ]
                },
                {
                    "command": [
                        "specialize (P a).",
                        "VernacExtend",
                        "68390770fd6090eb9313721fe8fb80f18b67c290"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "rewrite (@if_eqA_rewrite_l a1 a2 a) in P by auto.",
                        "VernacExtend",
                        "112b749f6540b0bea99d538ae3f1c5106ac02580"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H0; [|inversion H].",
                        "VernacExtend",
                        "4a202160d26a48827ad33552a238a0ae3c90bc13"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply permut_length_1.",
                        "VernacExtend",
                        "efd95aea24611b82aabbbc73b3b94fea58c19bed"
                    ]
                },
                {
                    "command": [
                        "red; red; intros.",
                        "VernacExtend",
                        "7c4a882f5c9650b5f2bf3499dc9de0f273b74400"
                    ]
                },
                {
                    "command": [
                        "specialize (P a); simpl in *.",
                        "VernacExtend",
                        "2afe3464e215fd6d030b4ee4834565f79ec487b4"
                    ]
                },
                {
                    "command": [
                        "rewrite (@if_eqA_rewrite_l a1 b2 a) in P by auto.",
                        "VernacExtend",
                        "6b7c589a57c4c56ee13ad303f32eae6426bf35c2"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_length",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "induction l1; intros l2 H.",
                        "VernacExtend",
                        "6e4fa746dc93de2fbd75e1320729653344084978"
                    ]
                },
                {
                    "command": [
                        "rewrite (permut_nil (permut_sym H)); auto.",
                        "VernacExtend",
                        "d6829544e052d30a999c667730fb763796b6af2a"
                    ]
                },
                {
                    "command": [
                        "assert (H0:=permut_cons_InA H).",
                        "VernacExtend",
                        "7b74d0b580120dc59566d2101bb6d6cebdc1a2a6"
                    ]
                },
                {
                    "command": [
                        "destruct (InA_split H0) as (h2,(b,(t2,(H1,H2)))).",
                        "VernacExtend",
                        "080c4442ffa6c321c926e83d44958672f9a5bcc0"
                    ]
                },
                {
                    "command": [
                        "subst l2.",
                        "VernacExtend",
                        "34c8ca84c938ddc4a82d160e2e12a62f19d725a6"
                    ]
                },
                {
                    "command": [
                        "rewrite app_length.",
                        "VernacExtend",
                        "b9244791fd1e7d821ced2461a10375e028945296"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite <- plus_n_Sm; f_equal.",
                        "VernacExtend",
                        "08d804fba04103c016cfae2d6193acbe8ee882b8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- app_length.",
                        "VernacExtend",
                        "40199fe5acd9b0830e5413873eb81dfb0709514b"
                    ]
                },
                {
                    "command": [
                        "apply IHl1.",
                        "VernacExtend",
                        "f345159dea97d8876c7b461fb67e1c8421ab70a7"
                    ]
                },
                {
                    "command": [
                        "apply permut_remove_hd with b.",
                        "VernacExtend",
                        "7dd13f88ca7207fa5cafd53b230f3ba4070e9578"
                    ]
                },
                {
                    "command": [
                        "apply permut_trans with (a::l1); auto.",
                        "VernacExtend",
                        "68be7bacb0931b52722b83e6749859def3b6d2c6"
                    ]
                },
                {
                    "command": [
                        "revert H1; unfold permutation, meq; simpl.",
                        "VernacExtend",
                        "fc4b03cb45640e8b99bfb87ecf7e34f7316cf0b1"
                    ]
                },
                {
                    "command": [
                        "intros; f_equal; auto.",
                        "VernacExtend",
                        "5a31003e6ba104e4a8e4fdb7d631f8976ef4ecc7"
                    ]
                },
                {
                    "command": [
                        "rewrite (@if_eqA_rewrite_l a b a0); auto.",
                        "VernacExtend",
                        "92ecc9c5d279be872da15d3298a65bccd74463af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NoDupA_equivlistA_permut",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red; unfold meq; intros.",
                        "VernacExtend",
                        "da60c14660e89220d9ca90d8255bab506b6f1bef"
                    ]
                },
                {
                    "command": [
                        "rewrite multiplicity_NoDupA in H, H0.",
                        "VernacExtend",
                        "a9ce97c5d1bb469d91867a6d2d0ca66b9ccdd092"
                    ]
                },
                {
                    "command": [
                        "generalize (H a) (H0 a) (H1 a); clear H H0 H1.",
                        "VernacExtend",
                        "913cca35c7cdc5f694b96e4f12602aa9c52e4376"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite multiplicity_InA.",
                        "VernacExtend",
                        "43ce4fa81d716f3b45a8e781c95bf04d4e7457f9"
                    ]
                },
                {
                    "command": [
                        "destruct 3; omega.",
                        "VernacExtend",
                        "cbae5e5b86b655240e4a995993035d336ec3df40"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_map",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "intros f; induction l1.",
                        "VernacExtend",
                        "2ec89ea4da2d63c9cfe74d3bea476e37a9b82a5d"
                    ]
                },
                {
                    "command": [
                        "intros l2 P; rewrite (permut_nil eqA_equiv (permut_sym P)); apply permut_refl.",
                        "VernacExtend",
                        "cb8954f244dfc267b7a5fbb43e729111c183449f"
                    ]
                },
                {
                    "command": [
                        "intros l2 P.",
                        "VernacExtend",
                        "faae7a0075d09dd05e0425596bbcfc2bbb0f530e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (H0:=permut_cons_InA eqA_equiv P).",
                        "VernacExtend",
                        "c48bcdf433cb2c201f459d879f597051c16ae861"
                    ]
                },
                {
                    "command": [
                        "destruct (InA_split H0) as (h2,(b,(t2,(H1,H2)))).",
                        "VernacExtend",
                        "080c4442ffa6c321c926e83d44958672f9a5bcc0"
                    ]
                },
                {
                    "command": [
                        "subst l2.",
                        "VernacExtend",
                        "34c8ca84c938ddc4a82d160e2e12a62f19d725a6"
                    ]
                },
                {
                    "command": [
                        "rewrite map_app.",
                        "VernacExtend",
                        "89eca143edf6436bb079a40b9fedf852073d1711"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply permut_trans with (f b :: map f l1).",
                        "VernacExtend",
                        "d51975898eef0436162480cbebd87aa957238b76"
                    ]
                },
                {
                    "command": [
                        "revert H1; unfold permutation, meq; simpl.",
                        "VernacExtend",
                        "fc4b03cb45640e8b99bfb87ecf7e34f7316cf0b1"
                    ]
                },
                {
                    "command": [
                        "intros; f_equal; auto.",
                        "VernacExtend",
                        "5a31003e6ba104e4a8e4fdb7d631f8976ef4ecc7"
                    ]
                },
                {
                    "command": [
                        "destruct (eqB_dec (f b) a0) as [H2|H2]; destruct (eqB_dec (f a) a0) as [H3|H3]; auto.",
                        "VernacExtend",
                        "3618a4ad40840caf6104f978915c813bdc3dd98b"
                    ]
                },
                {
                    "command": [
                        "destruct H3; transitivity (f b); auto with *.",
                        "VernacExtend",
                        "e1c2eb082dc2174a7abaf447a10610c0ee3f0f5d"
                    ]
                },
                {
                    "command": [
                        "destruct H2; transitivity (f a); auto with *.",
                        "VernacExtend",
                        "b9824f2bea423bd5bf257da8313c37c64e98ba29"
                    ]
                },
                {
                    "command": [
                        "apply permut_add_cons_inside.",
                        "VernacExtend",
                        "f9b2cd713d64af13340bcc1fee5446e7809332ee"
                    ]
                },
                {
                    "command": [
                        "rewrite <- map_app.",
                        "VernacExtend",
                        "d3f9a2ab47f4ac5688b6653482faafbec82eb5fb"
                    ]
                },
                {
                    "command": [
                        "apply IHl1; auto.",
                        "VernacExtend",
                        "faf3c6a21d6bc708325ef9cfcef005f1721c606d"
                    ]
                },
                {
                    "command": [
                        "apply permut_remove_hd with b; trivial.",
                        "VernacExtend",
                        "c70c451fc57140ebbcbb866fecb01617995fe397"
                    ]
                },
                {
                    "command": [
                        "apply permut_trans with (a::l1); auto.",
                        "VernacExtend",
                        "68be7bacb0931b52722b83e6749859def3b6d2c6"
                    ]
                },
                {
                    "command": [
                        "revert H1; unfold permutation, meq; simpl.",
                        "VernacExtend",
                        "fc4b03cb45640e8b99bfb87ecf7e34f7316cf0b1"
                    ]
                },
                {
                    "command": [
                        "intros; f_equal; auto.",
                        "VernacExtend",
                        "5a31003e6ba104e4a8e4fdb7d631f8976ef4ecc7"
                    ]
                },
                {
                    "command": [
                        "rewrite (@if_eqA_rewrite_l _ _ eqA_equiv eqA_dec a b a0); auto.",
                        "VernacExtend",
                        "9e258c20a1a849fbf3b4d9c631cff331e037c448"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Permutation_impl_permutation",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "induction 1.",
                        "VernacExtend",
                        "dfe896305621800fcbb03b32d51d497edbdf1dc5"
                    ]
                },
                {
                    "command": [
                        "apply permut_refl.",
                        "VernacExtend",
                        "ea779d6f939211cb151e3094374a74bfbd47181a"
                    ]
                },
                {
                    "command": [
                        "apply permut_cons; auto using Equivalence_Reflexive.",
                        "VernacExtend",
                        "2c0660412ae02e5f802afbced1bea0cc58379595"
                    ]
                },
                {
                    "command": [
                        "change (x :: y :: l) with ([x] ++ y :: l); apply permut_add_cons_inside; simpl; apply permut_cons_eq; auto using Equivalence_Reflexive, permut_refl.",
                        "VernacExtend",
                        "736092fa1063a9201f81bd30856b54efcb6d4089"
                    ]
                },
                {
                    "command": [
                        "apply permut_trans with l'; trivial.",
                        "VernacExtend",
                        "05ca167b29dad2654411921c4d0bc7c8fdaed59d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permut_eqA",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "induction 1.",
                        "VernacExtend",
                        "dfe896305621800fcbb03b32d51d497edbdf1dc5"
                    ]
                },
                {
                    "command": [
                        "apply permut_refl.",
                        "VernacExtend",
                        "ea779d6f939211cb151e3094374a74bfbd47181a"
                    ]
                },
                {
                    "command": [
                        "apply permut_cons_eq; trivial.",
                        "VernacExtend",
                        "e4061ad2467d55929d54ef6387502d44a25be182"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "permutation_Permutation",
            "line_nb": 300,
            "steps": [
                {
                    "command": [
                        "split; intro H.",
                        "VernacExtend",
                        "496dd5fc77c723ff896bbd9bc6dee3ccc3aa9bde"
                    ]
                },
                {
                    "command": [
                        "induction l in l', H |- *.",
                        "VernacExtend",
                        "a38a55edd8e2ef99bc5a2531d6468c2f431db626"
                    ]
                },
                {
                    "command": [
                        "exists []; apply permut_sym, permut_nil in H as ->; auto using Forall2.",
                        "VernacExtend",
                        "06c40c209247b3b6f8743f6d1f3b8995e09a10df"
                    ]
                },
                {
                    "command": [
                        "pose proof H as H'.",
                        "VernacExtend",
                        "15c1ed350339019dd3099ce17e681f2e618fbc4a"
                    ]
                },
                {
                    "command": [
                        "apply permut_cons_InA, InA_split in H as (l1 & y & l2 & Heq & ->); trivial.",
                        "VernacExtend",
                        "e3f19f8a7a3cf75edaa6b1468ead9ae41adc2178"
                    ]
                },
                {
                    "command": [
                        "apply permut_remove_hd_eq, IHl in H' as (l'' & IHP & IHA); clear IHl; trivial.",
                        "VernacExtend",
                        "accf39729963a7105749161e6a74b6c708908795"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_app_inv_r in IHA as (l1'' & l2'' & Hl1 & Hl2 & ->).",
                        "VernacExtend",
                        "669ec0b03ce76c29588679b68a6ce03b67a6f80e"
                    ]
                },
                {
                    "command": [
                        "exists (l1'' ++ a :: l2''); split.",
                        "VernacExtend",
                        "6a3b13af6e1bbb293be206762139a35494dc2095"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_cons_app; trivial.",
                        "VernacExtend",
                        "8714a9898e2ef6a2c58d9a72ad53ef8b1177e590"
                    ]
                },
                {
                    "command": [
                        "apply Forall2_app, Forall2_cons; trivial.",
                        "VernacExtend",
                        "d9d903f3d3f4b053ac5e6b70d867ad45483f9263"
                    ]
                },
                {
                    "command": [
                        "destruct H as (l'' & H & Heq).",
                        "VernacExtend",
                        "1ce219701ad5438e0b8da18a4d45e39a8d7329ae"
                    ]
                },
                {
                    "command": [
                        "apply permut_trans with l''.",
                        "VernacExtend",
                        "c4a1d07dd7d22d77973e85d42d0280a02d345022"
                    ]
                },
                {
                    "command": [
                        "apply Permutation_impl_permutation; trivial.",
                        "VernacExtend",
                        "3d9e77a19b1831a520e85a13d7f7f0cd76d2cd3a"
                    ]
                },
                {
                    "command": [
                        "apply permut_eqA; trivial.",
                        "VernacExtend",
                        "23ba7822a1c1dec7badd54596907b526168b5c42"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}