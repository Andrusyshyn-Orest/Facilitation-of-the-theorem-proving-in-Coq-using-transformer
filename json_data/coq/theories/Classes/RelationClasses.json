{
    "filename": "theories/Classes/RelationClasses.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export Coq.Classes.Init.",
            "VernacRequire",
            "267d03ff84f3081be942378ddff01b2add7e6b04"
        ],
        [
            "Require Import Coq.Program.Basics.",
            "VernacRequire",
            "fa1ddb72b8906b348b6c372dfa02294f9092d5df"
        ],
        [
            "Require Import Coq.Program.Tactics.",
            "VernacRequire",
            "4a5faf9c06c6b8a982a49ae4608c6c7278eb982c"
        ],
        [
            "Require Import Coq.Relations.Relation_Definitions.",
            "VernacRequire",
            "e90e5840c35495258b335912cbf63f3e29ec520e"
        ],
        [
            "Generalizable Variables A B C D R S T U l eqA eqB eqC eqD.",
            "VernacGeneralizable",
            "7712ed964b847cd04454936df10c36dd85dd2619"
        ],
        [
            "Section Defs.",
            "VernacBeginSection",
            "0538f5188d53d77ea5d8ba0fff0a7cfc5485e666"
        ],
        [
            "Context {A : Type}.",
            "VernacContext",
            "c9c3c92f9391cb196430f2c558473771d9c86d28"
        ],
        [
            "Class Reflexive (R : relation A) := reflexivity : forall x : A, R x x.",
            "VernacInductive",
            "d989323c9b74ba6637ca676a49fd3cf4162ba7ac"
        ],
        [
            "Definition complement (R : relation A) : relation A := fun x y => R x y -> False.",
            "VernacDefinition",
            "978eca4890831e2e41b8ad81eed5e9593ee2e7b8"
        ],
        [
            "Typeclasses Opaque complement.",
            "VernacExtend",
            "e9bac0dda202341408ee2e6871f351223eceff49"
        ],
        [
            "Lemma complement_inverse R : complement (flip R) = flip (complement R).",
            "VernacStartTheoremProof",
            "6baa26fd4938e519d8af462dbd7117c9496a0276"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Class Irreflexive (R : relation A) := irreflexivity : Reflexive (complement R).",
            "VernacInductive",
            "8e597493dbdf0a50a2740364a7e97a65d1cba95e"
        ],
        [
            "Class Symmetric (R : relation A) := symmetry : forall {x y}, R x y -> R y x.",
            "VernacInductive",
            "cc228bef228dfeb312dd50ee9a48ed19193e63d8"
        ],
        [
            "Class Asymmetric (R : relation A) := asymmetry : forall {x y}, R x y -> R y x -> False.",
            "VernacInductive",
            "0d3e8315e749c1ab231fc48cac910f67e925e3ac"
        ],
        [
            "Class Transitive (R : relation A) := transitivity : forall {x y z}, R x y -> R y z -> R x z.",
            "VernacInductive",
            "f53f7d4726b0d33637b1e9787897730ddcb5332a"
        ],
        [
            "Class PreOrder (R : relation A) : Prop := { PreOrder_Reflexive :> Reflexive R | 2 ; PreOrder_Transitive :> Transitive R | 2 }.",
            "VernacInductive",
            "ee59bf3603618e52a4280474a592dc9fc7d61e8e"
        ],
        [
            "Class StrictOrder (R : relation A) : Prop := { StrictOrder_Irreflexive :> Irreflexive R ; StrictOrder_Transitive :> Transitive R }.",
            "VernacInductive",
            "1ddfb5a358f8a762bfe4f620c95c2f1735d865d9"
        ],
        [
            "Global Instance StrictOrder_Asymmetric `(StrictOrder R) : Asymmetric R.",
            "VernacInstance",
            "2f4c2c7ac4ac23e2e21cfee7629a1f2f3667af00"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Class PER (R : relation A) : Prop := { PER_Symmetric :> Symmetric R | 3 ; PER_Transitive :> Transitive R | 3 }.",
            "VernacInductive",
            "6bf8a273c94714ad65569731b2f95fa03f2719d5"
        ],
        [
            "Class Equivalence (R : relation A) : Prop := { Equivalence_Reflexive :> Reflexive R ; Equivalence_Symmetric :> Symmetric R ; Equivalence_Transitive :> Transitive R }.",
            "VernacInductive",
            "a78117087ab5c65ab4978a4959e0bd9bbf66ca87"
        ],
        [
            "Global Instance Equivalence_PER {R} `(E:Equivalence R) : PER R | 10 := { }.",
            "VernacInstance",
            "234cbeb39ead13f251d550c50a0bbd0276f98c1d"
        ],
        [
            "Global Instance Equivalence_PreOrder {R} `(E:Equivalence R) : PreOrder R | 10 := { }.",
            "VernacInstance",
            "b0f2b179ba5940a73b7cddb05ca850e51dda98b0"
        ],
        [
            "Class Antisymmetric eqA `{equ : Equivalence eqA} (R : relation A) := antisymmetry : forall {x y}, R x y -> R y x -> eqA x y.",
            "VernacInductive",
            "4e64e01159da224c93153194907f415333588497"
        ],
        [
            "Class subrelation (R R' : relation A) : Prop := is_subrelation : forall {x y}, R x y -> R' x y.",
            "VernacInductive",
            "8c8c94e2dab1204878059f60b3561bb847ac388b"
        ],
        [
            "Lemma subrelation_symmetric R `(Symmetric R) : subrelation (flip R) R.",
            "VernacStartTheoremProof",
            "9334b0a64396e853bab81afc70b77d246d2e792e"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red in H0.",
            "VernacExtend",
            "3e33e4fdada8386783e8311d1d4116d148279cb2"
        ],
        [
            "apply symmetry.",
            "VernacExtend",
            "290fe7341ad9c8fd589b99175998fdcaf3937cf1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section flip.",
            "VernacBeginSection",
            "247dd8810fe9b9a514648bd3ab0c3a5a9347a41a"
        ],
        [
            "Lemma flip_Reflexive `{Reflexive R} : Reflexive (flip R).",
            "VernacStartTheoremProof",
            "72ce9a53f60339cee684b93af9919dfaff79c053"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition flip_Irreflexive `(Irreflexive R) : Irreflexive (flip R) := irreflexivity (R:=R).",
            "VernacDefinition",
            "19f9b60e8e74a805f2186b6fe1192e42a0deeb20"
        ],
        [
            "Program Definition flip_Symmetric `(Symmetric R) : Symmetric (flip R) := fun x y H => symmetry (R:=R) H.",
            "VernacDefinition",
            "2ff9af00e83fd7ab433b4eb54f532134e1b888c9"
        ],
        [
            "Program Definition flip_Asymmetric `(Asymmetric R) : Asymmetric (flip R) := fun x y H H' => asymmetry (R:=R) H H'.",
            "VernacDefinition",
            "adf10b5d38677f13d27ac5ad8e13bd13a9daeb44"
        ],
        [
            "Program Definition flip_Transitive `(Transitive R) : Transitive (flip R) := fun x y z H H' => transitivity (R:=R) H' H.",
            "VernacDefinition",
            "1ef35b06fbb5b533ac0a63646e755aa9e8d9e082"
        ],
        [
            "Program Definition flip_Antisymmetric `(Antisymmetric eqA R) : Antisymmetric eqA (flip R).",
            "VernacDefinition",
            "e4811321b265c060d6c05a2fc7d0dee9262ed252"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma flip_PreOrder `(PreOrder R) : PreOrder (flip R).",
            "VernacStartTheoremProof",
            "b801f240e3f36c162f505a14b56c3ba0eddbd44d"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma flip_StrictOrder `(StrictOrder R) : StrictOrder (flip R).",
            "VernacStartTheoremProof",
            "2eb1c0dd0451ad173971b7993bf835ee1d68f3c4"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma flip_PER `(PER R) : PER (flip R).",
            "VernacStartTheoremProof",
            "7c0d91e6ff59ed6fcdd5ee34233c28151326c675"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma flip_Equivalence `(Equivalence R) : Equivalence (flip R).",
            "VernacStartTheoremProof",
            "0bb7324531423d12047a2d994edf3a737482286d"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End flip.",
            "VernacEndSegment",
            "fd558169b414235aac108eec2f1e8b138228c5bf"
        ],
        [
            "Section complement.",
            "VernacBeginSection",
            "7a5ef2839adbfed5c22d8b7ec3cd66ff0d7c953a"
        ],
        [
            "Definition complement_Irreflexive `(Reflexive R) : Irreflexive (complement R).",
            "VernacDefinition",
            "f8fa63e80c88e5be1d490dc25b0e88d465b0522c"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition complement_Symmetric `(Symmetric R) : Symmetric (complement R).",
            "VernacDefinition",
            "448c258ce8a97c1749c4d9b60ef828a67b962db9"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End complement.",
            "VernacEndSegment",
            "3f30c00755014ff0b543f7f6ab38ca931a571c6a"
        ],
        [
            "Class RewriteRelation (RA : relation A).",
            "VernacInductive",
            "1ff5db070e65e5a58b95c4fd6ddf55e60ab656b1"
        ],
        [
            "Global Instance equivalence_rewrite_relation `(Equivalence eqA) : RewriteRelation eqA.",
            "VernacInstance",
            "6aafaecdbf7866761d572318ec5039c5dde8824d"
        ],
        [
            "Section Leibniz.",
            "VernacBeginSection",
            "6e71e653f2a29b9171db7eb08211ed68ca5286e8"
        ],
        [
            "Global Instance eq_Reflexive : Reflexive (@eq A) := @eq_refl A.",
            "VernacInstance",
            "047208a6e5996734faada930e21c3a3115a62e3d"
        ],
        [
            "Global Instance eq_Symmetric : Symmetric (@eq A) := @eq_sym A.",
            "VernacInstance",
            "08e70cb7203c3e8ac4b30a88c404c16030133fb4"
        ],
        [
            "Global Instance eq_Transitive : Transitive (@eq A) := @eq_trans A.",
            "VernacInstance",
            "d9431999203d1203d05689ff40b988fa02188454"
        ],
        [
            "Global Program Instance eq_equivalence : Equivalence (@eq A) | 10.",
            "VernacInstance",
            "032da19b5cc75f11544cf74d2555bcbe480ad0fd"
        ],
        [
            "End Leibniz.",
            "VernacEndSegment",
            "5a5f22307ff5ed9a850c6cf49d8bc4395b85f75e"
        ],
        [
            "End Defs.",
            "VernacEndSegment",
            "e5c42fff3384ffa717a0ec819d3b7eaff5043179"
        ],
        [
            "Instance: RewriteRelation impl.",
            "VernacInstance",
            "14172668c01b7ce99611bf0e7415c12d0e9d3e74"
        ],
        [
            "Instance: RewriteRelation iff.",
            "VernacInstance",
            "0f0458a02b85402d24a09fb3323b31433eac616f"
        ],
        [
            "Hint Extern 1 (Reflexive (complement _)) => class_apply @irreflexivity : typeclass_instances.",
            "VernacHints",
            "0edaac84845c0b2b6c85f1a8dd5ab66b43a2da68"
        ],
        [
            "Hint Extern 3 (Symmetric (complement _)) => class_apply complement_Symmetric : typeclass_instances.",
            "VernacHints",
            "25684a4e3588f59b88ac4e23e1ecf61f8b9d6bac"
        ],
        [
            "Hint Extern 3 (Irreflexive (complement _)) => class_apply complement_Irreflexive : typeclass_instances.",
            "VernacHints",
            "31abab9c65f81dfcc4f3f1198ac55ee84890e3a3"
        ],
        [
            "Hint Extern 3 (Reflexive (flip _)) => apply flip_Reflexive : typeclass_instances.",
            "VernacHints",
            "7cac268284a045f9481a99ce6ac4d6eea8fe77dc"
        ],
        [
            "Hint Extern 3 (Irreflexive (flip _)) => class_apply flip_Irreflexive : typeclass_instances.",
            "VernacHints",
            "49beb2f24718458d55e14ea610df3caa078d9675"
        ],
        [
            "Hint Extern 3 (Symmetric (flip _)) => class_apply flip_Symmetric : typeclass_instances.",
            "VernacHints",
            "4b8fd1a798694dc0e844d6af2f93c3a0e8dc9e82"
        ],
        [
            "Hint Extern 3 (Asymmetric (flip _)) => class_apply flip_Asymmetric : typeclass_instances.",
            "VernacHints",
            "72320c2c45c020e1e9da40e568eb23de741f9ec1"
        ],
        [
            "Hint Extern 3 (Antisymmetric (flip _)) => class_apply flip_Antisymmetric : typeclass_instances.",
            "VernacHints",
            "ac4d8e359aa9879dd59763f92c0bd878aec56060"
        ],
        [
            "Hint Extern 3 (Transitive (flip _)) => class_apply flip_Transitive : typeclass_instances.",
            "VernacHints",
            "719c3bf4bb2c6cd0aef7b19c040117f8aceee596"
        ],
        [
            "Hint Extern 3 (StrictOrder (flip _)) => class_apply flip_StrictOrder : typeclass_instances.",
            "VernacHints",
            "ee5dce763946599366330e9e059b9d393059fe0d"
        ],
        [
            "Hint Extern 3 (PreOrder (flip _)) => class_apply flip_PreOrder : typeclass_instances.",
            "VernacHints",
            "6faa1942782914dcc1b77be4520ad8a622f0e3aa"
        ],
        [
            "Hint Extern 4 (subrelation (flip _) _) => class_apply @subrelation_symmetric : typeclass_instances.",
            "VernacHints",
            "bcd0493e38080bbb400dac85c29fc3d8517905cd"
        ],
        [
            "Arguments irreflexivity {A R Irreflexive} [x] _.",
            "VernacArguments",
            "8e288e8353c86ecfd2f64484d925ef196a1d21fa"
        ],
        [
            "Arguments symmetry {A} {R} {_} [x] [y] _.",
            "VernacArguments",
            "f0b2616beadf9ea19364bbbd8d4fe72643bcaccf"
        ],
        [
            "Arguments asymmetry {A} {R} {_} [x] [y] _ _.",
            "VernacArguments",
            "799fd7dd66b4b3d41c2be79a660982c8a21e5835"
        ],
        [
            "Arguments transitivity {A} {R} {_} [x] [y] [z] _ _.",
            "VernacArguments",
            "e3ca2a467653e93f6e04539ae8b25701bea6c86d"
        ],
        [
            "Arguments Antisymmetric A eqA {_} _.",
            "VernacArguments",
            "61599767aff222b5c3e4f3256a30d44cc88edfb3"
        ],
        [
            "Hint Resolve irreflexivity : ord.",
            "VernacHints",
            "a6e709b595935625365834f897e3c7e6e217e382"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Ltac solve_relation := match goal with | [ |- ?R ?x ?x ] => reflexivity | [ H : ?R ?x ?y |- ?R ?y ?x ] => symmetry ; exact H end.",
            "VernacExtend",
            "6364691153199e1a42383510d01301d960a70c47"
        ],
        [
            "Hint Extern 4 => solve_relation : relations.",
            "VernacHints",
            "60a36ba45916e48538f441c209a8b77b357cfcf2"
        ],
        [
            "Ltac reduce_hyp H := match type of H with | context [ _ <-> _ ] => fail 1 | _ => red in H ; try reduce_hyp H end.",
            "VernacExtend",
            "7e5bdb3787d5bd9336c649a04f7acef69a2738d0"
        ],
        [
            "Ltac reduce_goal := match goal with | [ |- _ <-> _ ] => fail 1 | _ => red ; intros ; try reduce_goal end.",
            "VernacExtend",
            "29f69d551ccea1217096f95c7dabad55fdecd708"
        ],
        [
            "Tactic Notation \"reduce\" \"in\" hyp(Hid) := reduce_hyp Hid.",
            "VernacExtend",
            "a6c7aca0a440dfef2c60b7e526448fa796fe02b6"
        ],
        [
            "Ltac reduce := reduce_goal.",
            "VernacExtend",
            "9e794a0b5722b2a0ada23323aeb7eee14067249a"
        ],
        [
            "Tactic Notation \"apply\" \"*\" constr(t) := first [ refine t | refine (t _) | refine (t _ _) | refine (t _ _ _) | refine (t _ _ _ _) | refine (t _ _ _ _ _) | refine (t _ _ _ _ _ _) | refine (t _ _ _ _ _ _ _) ].",
            "VernacExtend",
            "eb081e8d11a3ebe808a6f10e27063aa44cca40cf"
        ],
        [
            "Ltac simpl_relation := unfold flip, impl, arrow ; try reduce ; program_simpl ; try ( solve [ dintuition ]).",
            "VernacExtend",
            "4b229f51232d7a5fe2ac9b26a43198cdf61ca1d0"
        ],
        [
            "Local Obligation Tactic := simpl_relation.",
            "VernacExtend",
            "6b4f1d97ceebbbe22852551526c14b7ecb1b2179"
        ],
        [
            "Program Instance impl_Reflexive : Reflexive impl.",
            "VernacInstance",
            "096f369d52e8a6a22b3e74e328e6a878874fdea3"
        ],
        [
            "Program Instance impl_Transitive : Transitive impl.",
            "VernacInstance",
            "f31d5aba294b6daba27d4275bada0d57689f9be0"
        ],
        [
            "Instance iff_Reflexive : Reflexive iff := iff_refl.",
            "VernacInstance",
            "48be4e74cfdcbd4a5efd74edb9ce826bea523bbe"
        ],
        [
            "Instance iff_Symmetric : Symmetric iff := iff_sym.",
            "VernacInstance",
            "bb92a80d7246326204de24b0e2527e0ad43c22d1"
        ],
        [
            "Instance iff_Transitive : Transitive iff := iff_trans.",
            "VernacInstance",
            "462392b475e288a9842b69292cc85776160cbddf"
        ],
        [
            "Program Instance iff_equivalence : Equivalence iff.",
            "VernacInstance",
            "61df952237f64f3331eb7d5647d6b0cdb904587b"
        ],
        [
            "Local Open Scope list_scope.",
            "VernacOpenCloseScope",
            "b7ffbc8664ccf2e54673194b986563efc763189d"
        ],
        [
            "Inductive Tlist : Type := Tnil : Tlist | Tcons : Type -> Tlist -> Tlist.",
            "VernacInductive",
            "6c3c0445789805e6fc9b61a6f5123657d99cd34a"
        ],
        [
            "Local Infix \"::\" := Tcons.",
            "VernacInfix",
            "404a3fdd4d95b738b531f269dd8b7dfa6e3cd098"
        ],
        [
            "Fixpoint arrows (l : Tlist) (r : Type) : Type := match l with | Tnil => r | A :: l' => A -> arrows l' r end.",
            "VernacFixpoint",
            "f25b08b1b8388b41029ff65c55c0ceb2b9430736"
        ],
        [
            "Definition unary_operation A := arrows (A::Tnil) A.",
            "VernacDefinition",
            "463c639ed5542a03b8d84eef6f9c990584f6419f"
        ],
        [
            "Definition binary_operation A := arrows (A::A::Tnil) A.",
            "VernacDefinition",
            "c78e1c91b393e37a72a09987741bae7dd16eab80"
        ],
        [
            "Definition ternary_operation A := arrows (A::A::A::Tnil) A.",
            "VernacDefinition",
            "7e3867ac50cd81366483cb4aca58e1ee1e484033"
        ],
        [
            "Notation predicate l := (arrows l Prop).",
            "VernacSyntacticDefinition",
            "fbebc7255158e5dbc47f363ec42369c1b44e2ecb"
        ],
        [
            "Definition unary_predicate A := predicate (A::Tnil).",
            "VernacDefinition",
            "5a059d649ccac07245953ae1adccea2125333d5b"
        ],
        [
            "Definition binary_relation A := predicate (A::A::Tnil).",
            "VernacDefinition",
            "fae1f3e40f267e9903801d9af848c950c6cdde96"
        ],
        [
            "Fixpoint predicate_all (l : Tlist) : predicate l -> Prop := match l with | Tnil => fun f => f | A :: tl => fun f => forall x : A, predicate_all tl (f x) end.",
            "VernacFixpoint",
            "7dafb7576305b989b64c5df82b46bc7e5ad0ce27"
        ],
        [
            "Fixpoint predicate_exists (l : Tlist) : predicate l -> Prop := match l with | Tnil => fun f => f | A :: tl => fun f => exists x : A, predicate_exists tl (f x) end.",
            "VernacFixpoint",
            "fd5f38bdd8c3d3cc2b1465798c41de7573fb9f4b"
        ],
        [
            "Fixpoint pointwise_extension {T : Type} (op : binary_operation T) (l : Tlist) : binary_operation (arrows l T) := match l with | Tnil => fun R R' => op R R' | A :: tl => fun R R' => fun x => pointwise_extension op tl (R x) (R' x) end.",
            "VernacFixpoint",
            "6053cad4721841012c2b751da000206f859533b0"
        ],
        [
            "Fixpoint pointwise_lifting (op : binary_relation Prop) (l : Tlist) : binary_relation (predicate l) := match l with | Tnil => fun R R' => op R R' | A :: tl => fun R R' => forall x, pointwise_lifting op tl (R x) (R' x) end.",
            "VernacFixpoint",
            "d3cc06ffe929ae10ca08f50def8800fbaca6e866"
        ],
        [
            "Definition predicate_equivalence {l : Tlist} : binary_relation (predicate l) := pointwise_lifting iff l.",
            "VernacDefinition",
            "b4416e14272d897ab1a09ea70f6bbd79e79003f3"
        ],
        [
            "Definition predicate_implication {l : Tlist} := pointwise_lifting impl l.",
            "VernacDefinition",
            "a8919abde2b0023655f8d52a63e4955fa2c5403c"
        ],
        [
            "Infix \"<\u2219>\" := predicate_equivalence (at level 95, no associativity) : predicate_scope.",
            "VernacInfix",
            "6d535d093a56192574cee0c525a21d9c259cab70"
        ],
        [
            "Infix \"-\u2219>\" := predicate_implication (at level 70, right associativity) : predicate_scope.",
            "VernacInfix",
            "b997beba6d017a61295b888ad68d1f52fc668f4e"
        ],
        [
            "Local Open Scope predicate_scope.",
            "VernacOpenCloseScope",
            "5619b68cfc468032d292f2076c654f5599f7cce6"
        ],
        [
            "Definition predicate_intersection := pointwise_extension and.",
            "VernacDefinition",
            "fa52cfcbead82985cb42144790f816071d133178"
        ],
        [
            "Definition predicate_union := pointwise_extension or.",
            "VernacDefinition",
            "da1d84f9fc8d2884f0b9d217746c91c6833bcc75"
        ],
        [
            "Infix \"/\u2219\\\" := predicate_intersection (at level 80, right associativity) : predicate_scope.",
            "VernacInfix",
            "550d935708a43917d4f695f3c58e61af944b71c7"
        ],
        [
            "Infix \"\\\u2219/\" := predicate_union (at level 85, right associativity) : predicate_scope.",
            "VernacInfix",
            "8ee57f0e01f590e3d3e5189902857facd3b6a443"
        ],
        [
            "Fixpoint true_predicate {l : Tlist} : predicate l := match l with | Tnil => True | A :: tl => fun _ => @true_predicate tl end.",
            "VernacFixpoint",
            "923962041e0700d3690fa11eb10378cf70e74c1b"
        ],
        [
            "Fixpoint false_predicate {l : Tlist} : predicate l := match l with | Tnil => False | A :: tl => fun _ => @false_predicate tl end.",
            "VernacFixpoint",
            "4d3a8c881a667e8642f1712d3d46d0797ed76e64"
        ],
        [
            "Notation \"\u2219\u22a4\u2219\" := true_predicate : predicate_scope.",
            "VernacNotation",
            "050a95a92c94112923e0e6e5c7354d262eee4902"
        ],
        [
            "Notation \"\u2219\u22a5\u2219\" := false_predicate : predicate_scope.",
            "VernacNotation",
            "cb3df380b94fb9230e4e5f8f794694c1fb51d542"
        ],
        [
            "Program Instance predicate_equivalence_equivalence : Equivalence (@predicate_equivalence l).",
            "VernacInstance",
            "802d43a555b3d9c08fa5b293ff12ae3cd1200775"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "induction l ; firstorder.",
            "VernacExtend",
            "5e2a7afa3776c43af5271ec38d2e5ccf98ad1f2c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "induction l ; firstorder.",
            "VernacExtend",
            "5e2a7afa3776c43af5271ec38d2e5ccf98ad1f2c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "fold pointwise_lifting.",
            "VernacExtend",
            "b285c377bf142d56455d24123a68e655bb8d49bb"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "pose (IHl (x x0) (y x0) (z x0)).",
            "VernacExtend",
            "9672229135fb01e9c4f5fb0ca403baf71f0286df"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Instance predicate_implication_preorder : PreOrder (@predicate_implication l).",
            "VernacInstance",
            "eddb2cd4ac81fd2b01156a277ca96eaf93d9ec43"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "induction l ; firstorder.",
            "VernacExtend",
            "5e2a7afa3776c43af5271ec38d2e5ccf98ad1f2c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "unfold predicate_implication in *.",
            "VernacExtend",
            "199681620aaefd73d1631cfd3ac2d58878da1e98"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "pose (IHl (x x0) (y x0) (z x0)).",
            "VernacExtend",
            "9672229135fb01e9c4f5fb0ca403baf71f0286df"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Binary.",
            "VernacBeginSection",
            "8908223fcd57007ccd5be8ab84562ce4be8ccef9"
        ],
        [
            "Context {A : Type}.",
            "VernacContext",
            "c9c3c92f9391cb196430f2c558473771d9c86d28"
        ],
        [
            "Definition relation_equivalence : relation (relation A) := @predicate_equivalence (_::_::Tnil).",
            "VernacDefinition",
            "624c4bf475c6a4b2a8e1dd55b53478f748bed3b4"
        ],
        [
            "Global Instance: RewriteRelation relation_equivalence.",
            "VernacInstance",
            "598cc231ba9f48e8e9ef8f20a039c5ee90b4e60b"
        ],
        [
            "Definition relation_conjunction (R : relation A) (R' : relation A) : relation A := @predicate_intersection (A::A::Tnil) R R'.",
            "VernacDefinition",
            "c4e9599f439564d0974e3dedb1a36e13211d80d6"
        ],
        [
            "Definition relation_disjunction (R : relation A) (R' : relation A) : relation A := @predicate_union (A::A::Tnil) R R'.",
            "VernacDefinition",
            "3ae76f53fe6383c73502b83aeb41678aa87ec919"
        ],
        [
            "Global Instance relation_equivalence_equivalence : Equivalence relation_equivalence.",
            "VernacInstance",
            "680f0affdd9ec29ad1c657cdb957eddedda68c9b"
        ],
        [
            "exact (@predicate_equivalence_equivalence (A::A::Tnil)).",
            "VernacExtend",
            "3750365c02640f56dd0714cfb9494bc5139ebb53"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance relation_implication_preorder : PreOrder (@subrelation A).",
            "VernacInstance",
            "cb8ec8d5624cfd4dd99affcdfaaffb05f05d4369"
        ],
        [
            "exact (@predicate_implication_preorder (A::A::Tnil)).",
            "VernacExtend",
            "efb45e8ddec939225c6f638df6e64371efa99cc1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Class PartialOrder eqA `{equ : Equivalence A eqA} R `{preo : PreOrder A R} := partial_order_equivalence : relation_equivalence eqA (relation_conjunction R (flip R)).",
            "VernacInductive",
            "dfe40ddca9fde446cca0d02429925824ba411de7"
        ],
        [
            "Global Instance partial_order_antisym `(PartialOrder eqA R) : ! Antisymmetric A eqA R.",
            "VernacInstance",
            "fb7dbca43cb76bfcccc51d46f4fbef5cf6900f63"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "reduce_goal.",
            "VernacExtend",
            "ebaee9422e8b746b5e47f8433858e1e6c406c4a2"
        ],
        [
            "pose proof partial_order_equivalence as poe.",
            "VernacExtend",
            "528228561060832d77bd6ee17237d5667776df9f"
        ],
        [
            "do 3 red in poe.",
            "VernacExtend",
            "02d5338aa50c178479050e57405d81e1295e4c6c"
        ],
        [
            "apply <- poe.",
            "VernacExtend",
            "fe8153bceae1f9bef9c9fc667e0b1eb8da9a4747"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PartialOrder_inverse `(PartialOrder eqA R) : PartialOrder eqA (flip R).",
            "VernacStartTheoremProof",
            "abf67bdd1e7147af6eec8b65aaa4025f7553a600"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Binary.",
            "VernacEndSegment",
            "ad4494d99314ec118c96d237505ebf72e4b52437"
        ],
        [
            "Hint Extern 3 (PartialOrder (flip _)) => class_apply PartialOrder_inverse : typeclass_instances.",
            "VernacHints",
            "d10af4d11992f4e3355479cad875d2a6fd4f56ec"
        ],
        [
            "Program Instance subrelation_partial_order : ! PartialOrder (relation A) relation_equivalence subrelation.",
            "VernacInstance",
            "479c44cc038eb7f605876e3f9d4c96e9d7ddc1fe"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "unfold relation_equivalence in *.",
            "VernacExtend",
            "3a57da222241422895309b3b330a49023b7e25e2"
        ],
        [
            "compute; firstorder.",
            "VernacExtend",
            "e03ba3ab8582f179a0c0cc84fb02a9099338c617"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Typeclasses Opaque arrows predicate_implication predicate_equivalence relation_equivalence pointwise_lifting.",
            "VernacExtend",
            "f1a506a796fda31e21e771c07fc41b1e94f5bf19"
        ]
    ],
    "proofs": [
        {
            "name": "complement_inverse",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "StrictOrder_Asymmetric",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subrelation_symmetric",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "hnf.",
                        "VernacExtend",
                        "93c9be61208bb2956fb47b51f12123e34260e667"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red in H0.",
                        "VernacExtend",
                        "3e33e4fdada8386783e8311d1d4116d148279cb2"
                    ]
                },
                {
                    "command": [
                        "apply symmetry.",
                        "VernacExtend",
                        "290fe7341ad9c8fd589b99175998fdcaf3937cf1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flip_Reflexive",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flip_Antisymmetric",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flip_PreOrder",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flip_StrictOrder",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flip_PER",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flip_Equivalence",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "complement_Irreflexive",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "complement_Symmetric",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "predicate_equivalence_equivalence_obligation_1",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "induction l ; firstorder.",
                        "VernacExtend",
                        "5e2a7afa3776c43af5271ec38d2e5ccf98ad1f2c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "predicate_equivalence_equivalence_obligation_2",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "induction l ; firstorder.",
                        "VernacExtend",
                        "5e2a7afa3776c43af5271ec38d2e5ccf98ad1f2c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "predicate_equivalence_equivalence_obligation_3",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "fold pointwise_lifting.",
                        "VernacExtend",
                        "b285c377bf142d56455d24123a68e655bb8d49bb"
                    ]
                },
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "pose (IHl (x x0) (y x0) (z x0)).",
                        "VernacExtend",
                        "9672229135fb01e9c4f5fb0ca403baf71f0286df"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "predicate_implication_preorder_obligation_1",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "induction l ; firstorder.",
                        "VernacExtend",
                        "5e2a7afa3776c43af5271ec38d2e5ccf98ad1f2c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "predicate_implication_preorder_obligation_2",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "unfold predicate_implication in *.",
                        "VernacExtend",
                        "199681620aaefd73d1631cfd3ac2d58878da1e98"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "pose (IHl (x x0) (y x0) (z x0)).",
                        "VernacExtend",
                        "9672229135fb01e9c4f5fb0ca403baf71f0286df"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "relation_equivalence_equivalence",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "exact (@predicate_equivalence_equivalence (A::A::Tnil)).",
                        "VernacExtend",
                        "3750365c02640f56dd0714cfb9494bc5139ebb53"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "relation_implication_preorder",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "exact (@predicate_implication_preorder (A::A::Tnil)).",
                        "VernacExtend",
                        "efb45e8ddec939225c6f638df6e64371efa99cc1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PartialOrder_inverse",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subrelation_partial_order_obligation_1",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "unfold relation_equivalence in *.",
                        "VernacExtend",
                        "3a57da222241422895309b3b330a49023b7e25e2"
                    ]
                },
                {
                    "command": [
                        "compute; firstorder.",
                        "VernacExtend",
                        "e03ba3ab8582f179a0c0cc84fb02a9099338c617"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}