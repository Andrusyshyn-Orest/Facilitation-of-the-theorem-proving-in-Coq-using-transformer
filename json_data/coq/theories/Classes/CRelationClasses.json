{
    "filename": "theories/Classes/CRelationClasses.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export Coq.Classes.Init.",
            "VernacRequire",
            "267d03ff84f3081be942378ddff01b2add7e6b04"
        ],
        [
            "Require Import Coq.Program.Basics.",
            "VernacRequire",
            "fa1ddb72b8906b348b6c372dfa02294f9092d5df"
        ],
        [
            "Require Import Coq.Program.Tactics.",
            "VernacRequire",
            "4a5faf9c06c6b8a982a49ae4608c6c7278eb982c"
        ],
        [
            "Generalizable Variables A B C D R S T U l eqA eqB eqC eqD.",
            "VernacGeneralizable",
            "7712ed964b847cd04454936df10c36dd85dd2619"
        ],
        [
            "Set Universe Polymorphism.",
            "VernacSetOption",
            "d7b83ddb25e5d5951629c77539c924dab3e12260"
        ],
        [
            "Definition crelation (A : Type) := A -> A -> Type.",
            "VernacDefinition",
            "c9c5e15ce3d6935f07d004b2c92051f40bbcc5a1"
        ],
        [
            "Definition arrow (A B : Type) := A -> B.",
            "VernacDefinition",
            "8d127bb9d732c5712d59f428059a2101f6c24ad1"
        ],
        [
            "Definition flip {A B C : Type} (f : A -> B -> C) := fun x y => f y x.",
            "VernacDefinition",
            "7116d3dc6fa46bcde0dcb75b6ae174909a9e703e"
        ],
        [
            "Definition iffT (A B : Type) := ((A -> B) * (B -> A))%type.",
            "VernacDefinition",
            "b1c0e2f58f4cfca1cb78bd39f2635a01365db486"
        ],
        [
            "Section Defs.",
            "VernacBeginSection",
            "0538f5188d53d77ea5d8ba0fff0a7cfc5485e666"
        ],
        [
            "Context {A : Type}.",
            "VernacContext",
            "c9c3c92f9391cb196430f2c558473771d9c86d28"
        ],
        [
            "Class Reflexive (R : crelation A) := reflexivity : forall x : A, R x x.",
            "VernacInductive",
            "bddbdf64633824cc9b56106496579fe634062066"
        ],
        [
            "Definition complement (R : crelation A) : crelation A := fun x y => R x y -> False.",
            "VernacDefinition",
            "f6e018bf87b4a2d181159f457c9f49271227227a"
        ],
        [
            "Typeclasses Opaque complement iffT.",
            "VernacExtend",
            "3fb1aabbd0f51a500ae60bcd77874742eefc0bab"
        ],
        [
            "Lemma complement_inverse R : complement (flip R) = flip (complement R).",
            "VernacStartTheoremProof",
            "6baa26fd4938e519d8af462dbd7117c9496a0276"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Class Irreflexive (R : crelation A) := irreflexivity : Reflexive (complement R).",
            "VernacInductive",
            "56fdc79aef39489055bff92cddc8468e5ef341a3"
        ],
        [
            "Class Symmetric (R : crelation A) := symmetry : forall {x y}, R x y -> R y x.",
            "VernacInductive",
            "2d4e12b3e402e9e64391945bd529c52a6fef5866"
        ],
        [
            "Class Asymmetric (R : crelation A) := asymmetry : forall {x y}, R x y -> (complement R y x : Type).",
            "VernacInductive",
            "a096b29a575c8d0ea08eabb684d47a20918d8100"
        ],
        [
            "Class Transitive (R : crelation A) := transitivity : forall {x y z}, R x y -> R y z -> R x z.",
            "VernacInductive",
            "96b518ab29a34f4b9eb07a608e46ea24ab7fb29b"
        ],
        [
            "Class PreOrder (R : crelation A) := { PreOrder_Reflexive :> Reflexive R | 2 ; PreOrder_Transitive :> Transitive R | 2 }.",
            "VernacInductive",
            "20473e4601aab2cf5fb6f8d537b7f45eaf5fc9c4"
        ],
        [
            "Class StrictOrder (R : crelation A) := { StrictOrder_Irreflexive :> Irreflexive R ; StrictOrder_Transitive :> Transitive R }.",
            "VernacInductive",
            "24dbf746d6b7a4096db8e205b27a7a480870406c"
        ],
        [
            "Global Instance StrictOrder_Asymmetric `(StrictOrder R) : Asymmetric R.",
            "VernacInstance",
            "2f4c2c7ac4ac23e2e21cfee7629a1f2f3667af00"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Class PER (R : crelation A) := { PER_Symmetric :> Symmetric R | 3 ; PER_Transitive :> Transitive R | 3 }.",
            "VernacInductive",
            "9359010d66dd8099b189e52c1980040823107545"
        ],
        [
            "Class Equivalence (R : crelation A) := { Equivalence_Reflexive :> Reflexive R ; Equivalence_Symmetric :> Symmetric R ; Equivalence_Transitive :> Transitive R }.",
            "VernacInductive",
            "ee45d44024432842be6778b0308c4af79a8bb15d"
        ],
        [
            "Global Instance Equivalence_PER {R} `(Equivalence R) : PER R | 10 := { PER_Symmetric := Equivalence_Symmetric ; PER_Transitive := Equivalence_Transitive }.",
            "VernacInstance",
            "e27af5b5f92b44ae82a3099f51c80f8d46761a80"
        ],
        [
            "Class Antisymmetric eqA `{equ : Equivalence eqA} (R : crelation A) := antisymmetry : forall {x y}, R x y -> R y x -> eqA x y.",
            "VernacInductive",
            "aa7d087c72289e1eb92121baa629e5aa37c98c78"
        ],
        [
            "Class subrelation (R R' : crelation A) := is_subrelation : forall {x y}, R x y -> R' x y.",
            "VernacInductive",
            "7f743fde70815e9c4301e93a6f1a30975b169e2e"
        ],
        [
            "Lemma subrelation_symmetric R `(Symmetric R) : subrelation (flip R) R.",
            "VernacStartTheoremProof",
            "9334b0a64396e853bab81afc70b77d246d2e792e"
        ],
        [
            "hnf.",
            "VernacExtend",
            "93c9be61208bb2956fb47b51f12123e34260e667"
        ],
        [
            "intros x y H'.",
            "VernacExtend",
            "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
        ],
        [
            "red in H'.",
            "VernacExtend",
            "b3f39ff59e03e63f7335587cdc4b70d75813b637"
        ],
        [
            "apply symmetry.",
            "VernacExtend",
            "290fe7341ad9c8fd589b99175998fdcaf3937cf1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section flip.",
            "VernacBeginSection",
            "247dd8810fe9b9a514648bd3ab0c3a5a9347a41a"
        ],
        [
            "Lemma flip_Reflexive `{Reflexive R} : Reflexive (flip R).",
            "VernacStartTheoremProof",
            "72ce9a53f60339cee684b93af9919dfaff79c053"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition flip_Irreflexive `(Irreflexive R) : Irreflexive (flip R) := irreflexivity (R:=R).",
            "VernacDefinition",
            "19f9b60e8e74a805f2186b6fe1192e42a0deeb20"
        ],
        [
            "Program Definition flip_Symmetric `(Symmetric R) : Symmetric (flip R) := fun x y H => symmetry (R:=R) H.",
            "VernacDefinition",
            "2ff9af00e83fd7ab433b4eb54f532134e1b888c9"
        ],
        [
            "Program Definition flip_Asymmetric `(Asymmetric R) : Asymmetric (flip R) := fun x y H H' => asymmetry (R:=R) H H'.",
            "VernacDefinition",
            "adf10b5d38677f13d27ac5ad8e13bd13a9daeb44"
        ],
        [
            "Program Definition flip_Transitive `(Transitive R) : Transitive (flip R) := fun x y z H H' => transitivity (R:=R) H' H.",
            "VernacDefinition",
            "1ef35b06fbb5b533ac0a63646e755aa9e8d9e082"
        ],
        [
            "Program Definition flip_Antisymmetric `(Antisymmetric eqA R) : Antisymmetric eqA (flip R).",
            "VernacDefinition",
            "e4811321b265c060d6c05a2fc7d0dee9262ed252"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma flip_PreOrder `(PreOrder R) : PreOrder (flip R).",
            "VernacStartTheoremProof",
            "b801f240e3f36c162f505a14b56c3ba0eddbd44d"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma flip_StrictOrder `(StrictOrder R) : StrictOrder (flip R).",
            "VernacStartTheoremProof",
            "2eb1c0dd0451ad173971b7993bf835ee1d68f3c4"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma flip_PER `(PER R) : PER (flip R).",
            "VernacStartTheoremProof",
            "7c0d91e6ff59ed6fcdd5ee34233c28151326c675"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma flip_Equivalence `(Equivalence R) : Equivalence (flip R).",
            "VernacStartTheoremProof",
            "0bb7324531423d12047a2d994edf3a737482286d"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End flip.",
            "VernacEndSegment",
            "fd558169b414235aac108eec2f1e8b138228c5bf"
        ],
        [
            "Section complement.",
            "VernacBeginSection",
            "7a5ef2839adbfed5c22d8b7ec3cd66ff0d7c953a"
        ],
        [
            "Definition complement_Irreflexive `(Reflexive R) : Irreflexive (complement R).",
            "VernacDefinition",
            "f8fa63e80c88e5be1d490dc25b0e88d465b0522c"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition complement_Symmetric `(Symmetric R) : Symmetric (complement R).",
            "VernacDefinition",
            "448c258ce8a97c1749c4d9b60ef828a67b962db9"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End complement.",
            "VernacEndSegment",
            "3f30c00755014ff0b543f7f6ab38ca931a571c6a"
        ],
        [
            "Class RewriteRelation (RA : crelation A).",
            "VernacInductive",
            "107d968d1d2329df509d04f91bb3fac7091ec419"
        ],
        [
            "Global Instance equivalence_rewrite_crelation `(Equivalence eqA) : RewriteRelation eqA.",
            "VernacInstance",
            "d35e3270b81e47f11414ad545418a19cb42872ec"
        ],
        [
            "Section Leibniz.",
            "VernacBeginSection",
            "6e71e653f2a29b9171db7eb08211ed68ca5286e8"
        ],
        [
            "Global Instance eq_Reflexive : Reflexive (@eq A) := @eq_refl A.",
            "VernacInstance",
            "047208a6e5996734faada930e21c3a3115a62e3d"
        ],
        [
            "Global Instance eq_Symmetric : Symmetric (@eq A) := @eq_sym A.",
            "VernacInstance",
            "08e70cb7203c3e8ac4b30a88c404c16030133fb4"
        ],
        [
            "Global Instance eq_Transitive : Transitive (@eq A) := @eq_trans A.",
            "VernacInstance",
            "d9431999203d1203d05689ff40b988fa02188454"
        ],
        [
            "Global Program Instance eq_equivalence : Equivalence (@eq A) | 10.",
            "VernacInstance",
            "032da19b5cc75f11544cf74d2555bcbe480ad0fd"
        ],
        [
            "End Leibniz.",
            "VernacEndSegment",
            "5a5f22307ff5ed9a850c6cf49d8bc4395b85f75e"
        ],
        [
            "End Defs.",
            "VernacEndSegment",
            "e5c42fff3384ffa717a0ec819d3b7eaff5043179"
        ],
        [
            "Instance: RewriteRelation impl.",
            "VernacInstance",
            "14172668c01b7ce99611bf0e7415c12d0e9d3e74"
        ],
        [
            "Instance: RewriteRelation iff.",
            "VernacInstance",
            "0f0458a02b85402d24a09fb3323b31433eac616f"
        ],
        [
            "Hint Extern 1 (Reflexive (complement _)) => class_apply @irreflexivity : typeclass_instances.",
            "VernacHints",
            "0edaac84845c0b2b6c85f1a8dd5ab66b43a2da68"
        ],
        [
            "Hint Extern 3 (Symmetric (complement _)) => class_apply complement_Symmetric : typeclass_instances.",
            "VernacHints",
            "25684a4e3588f59b88ac4e23e1ecf61f8b9d6bac"
        ],
        [
            "Hint Extern 3 (Irreflexive (complement _)) => class_apply complement_Irreflexive : typeclass_instances.",
            "VernacHints",
            "31abab9c65f81dfcc4f3f1198ac55ee84890e3a3"
        ],
        [
            "Hint Extern 3 (Reflexive (flip _)) => apply flip_Reflexive : typeclass_instances.",
            "VernacHints",
            "7cac268284a045f9481a99ce6ac4d6eea8fe77dc"
        ],
        [
            "Hint Extern 3 (Irreflexive (flip _)) => class_apply flip_Irreflexive : typeclass_instances.",
            "VernacHints",
            "49beb2f24718458d55e14ea610df3caa078d9675"
        ],
        [
            "Hint Extern 3 (Symmetric (flip _)) => class_apply flip_Symmetric : typeclass_instances.",
            "VernacHints",
            "4b8fd1a798694dc0e844d6af2f93c3a0e8dc9e82"
        ],
        [
            "Hint Extern 3 (Asymmetric (flip _)) => class_apply flip_Asymmetric : typeclass_instances.",
            "VernacHints",
            "72320c2c45c020e1e9da40e568eb23de741f9ec1"
        ],
        [
            "Hint Extern 3 (Antisymmetric (flip _)) => class_apply flip_Antisymmetric : typeclass_instances.",
            "VernacHints",
            "ac4d8e359aa9879dd59763f92c0bd878aec56060"
        ],
        [
            "Hint Extern 3 (Transitive (flip _)) => class_apply flip_Transitive : typeclass_instances.",
            "VernacHints",
            "719c3bf4bb2c6cd0aef7b19c040117f8aceee596"
        ],
        [
            "Hint Extern 3 (StrictOrder (flip _)) => class_apply flip_StrictOrder : typeclass_instances.",
            "VernacHints",
            "ee5dce763946599366330e9e059b9d393059fe0d"
        ],
        [
            "Hint Extern 3 (PreOrder (flip _)) => class_apply flip_PreOrder : typeclass_instances.",
            "VernacHints",
            "6faa1942782914dcc1b77be4520ad8a622f0e3aa"
        ],
        [
            "Hint Extern 4 (subrelation (flip _) _) => class_apply @subrelation_symmetric : typeclass_instances.",
            "VernacHints",
            "bcd0493e38080bbb400dac85c29fc3d8517905cd"
        ],
        [
            "Hint Resolve irreflexivity : ord.",
            "VernacHints",
            "a6e709b595935625365834f897e3c7e6e217e382"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Ltac solve_crelation := match goal with | [ |- ?R ?x ?x ] => reflexivity | [ H : ?R ?x ?y |- ?R ?y ?x ] => symmetry ; exact H end.",
            "VernacExtend",
            "62533253560720fdde800082fad956a5a64f4665"
        ],
        [
            "Hint Extern 4 => solve_crelation : crelations.",
            "VernacHints",
            "d2f942908f08eb3009ce594ffdefdad7b8c0dac8"
        ],
        [
            "Ltac reduce_hyp H := match type of H with | context [ _ <-> _ ] => fail 1 | _ => red in H ; try reduce_hyp H end.",
            "VernacExtend",
            "7e5bdb3787d5bd9336c649a04f7acef69a2738d0"
        ],
        [
            "Ltac reduce_goal := match goal with | [ |- _ <-> _ ] => fail 1 | _ => red ; intros ; try reduce_goal end.",
            "VernacExtend",
            "29f69d551ccea1217096f95c7dabad55fdecd708"
        ],
        [
            "Tactic Notation \"reduce\" \"in\" hyp(Hid) := reduce_hyp Hid.",
            "VernacExtend",
            "a6c7aca0a440dfef2c60b7e526448fa796fe02b6"
        ],
        [
            "Ltac reduce := reduce_goal.",
            "VernacExtend",
            "9e794a0b5722b2a0ada23323aeb7eee14067249a"
        ],
        [
            "Tactic Notation \"apply\" \"*\" constr(t) := first [ refine t | refine (t _) | refine (t _ _) | refine (t _ _ _) | refine (t _ _ _ _) | refine (t _ _ _ _ _) | refine (t _ _ _ _ _ _) | refine (t _ _ _ _ _ _ _) ].",
            "VernacExtend",
            "eb081e8d11a3ebe808a6f10e27063aa44cca40cf"
        ],
        [
            "Ltac simpl_crelation := unfold flip, impl, arrow ; try reduce ; program_simpl ; try ( solve [ dintuition ]).",
            "VernacExtend",
            "19830a570c6180c5f3f13a337ebbf2373731ef3b"
        ],
        [
            "Local Obligation Tactic := simpl_crelation.",
            "VernacExtend",
            "8dc323f5dcbb25746b383eb09bef2e356410e9db"
        ],
        [
            "Program Instance impl_Reflexive : Reflexive impl.",
            "VernacInstance",
            "096f369d52e8a6a22b3e74e328e6a878874fdea3"
        ],
        [
            "Program Instance impl_Transitive : Transitive impl.",
            "VernacInstance",
            "f31d5aba294b6daba27d4275bada0d57689f9be0"
        ],
        [
            "Instance iff_Reflexive : Reflexive iff := iff_refl.",
            "VernacInstance",
            "48be4e74cfdcbd4a5efd74edb9ce826bea523bbe"
        ],
        [
            "Instance iff_Symmetric : Symmetric iff := iff_sym.",
            "VernacInstance",
            "bb92a80d7246326204de24b0e2527e0ad43c22d1"
        ],
        [
            "Instance iff_Transitive : Transitive iff := iff_trans.",
            "VernacInstance",
            "462392b475e288a9842b69292cc85776160cbddf"
        ],
        [
            "Program Instance iff_equivalence : Equivalence iff.",
            "VernacInstance",
            "61df952237f64f3331eb7d5647d6b0cdb904587b"
        ],
        [
            "Program Instance arrow_Reflexive : Reflexive arrow.",
            "VernacInstance",
            "20fcb49ba9f7363ae586ffa651ebbccadcfb674d"
        ],
        [
            "Program Instance arrow_Transitive : Transitive arrow.",
            "VernacInstance",
            "fd6025a7fac68e38620cc05027a3f4069f180f62"
        ],
        [
            "Instance iffT_Reflexive : Reflexive iffT.",
            "VernacInstance",
            "1b21fdd76ac0af1ac5cb87d005fbd1e097d72d45"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Instance iffT_Symmetric : Symmetric iffT.",
            "VernacInstance",
            "b08a16a351e27472a45430b4f88d30d0a0c56c7e"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Instance iffT_Transitive : Transitive iffT.",
            "VernacInstance",
            "0bd24620c0cb815e423b3103227991e230ffd13e"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Local Open Scope list_scope.",
            "VernacOpenCloseScope",
            "b7ffbc8664ccf2e54673194b986563efc763189d"
        ],
        [
            "Section Binary.",
            "VernacBeginSection",
            "8908223fcd57007ccd5be8ab84562ce4be8ccef9"
        ],
        [
            "Context {A : Type}.",
            "VernacContext",
            "c9c3c92f9391cb196430f2c558473771d9c86d28"
        ],
        [
            "Definition relation_equivalence : crelation (crelation A) := fun R R' => forall x y, iffT (R x y) (R' x y).",
            "VernacDefinition",
            "64b8db09a1af8c22bad22795fc053b836f450829"
        ],
        [
            "Global Instance: RewriteRelation relation_equivalence.",
            "VernacInstance",
            "598cc231ba9f48e8e9ef8f20a039c5ee90b4e60b"
        ],
        [
            "Definition relation_conjunction (R : crelation A) (R' : crelation A) : crelation A := fun x y => prod (R x y) (R' x y).",
            "VernacDefinition",
            "17ac8662a299260a7dc7b6b7556ec9d2e1df2b34"
        ],
        [
            "Definition relation_disjunction (R : crelation A) (R' : crelation A) : crelation A := fun x y => sum (R x y) (R' x y).",
            "VernacDefinition",
            "2504a874ac079e03fa3ca724944284980694fba3"
        ],
        [
            "Global Instance relation_equivalence_equivalence : Equivalence relation_equivalence.",
            "VernacInstance",
            "680f0affdd9ec29ad1c657cdb957eddedda68c9b"
        ],
        [
            "split; red; unfold relation_equivalence, iffT.",
            "VernacExtend",
            "6be922be5a4a7ae7991c6cdfb385006f6e1a6135"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "specialize (X x0 y0).",
            "VernacExtend",
            "0691f3293e338a4e101da3b000f8a84e80b035d3"
        ],
        [
            "specialize (X0 x0 y0).",
            "VernacExtend",
            "52c192a7198306300bb14ff1761a7c247d6cdca8"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Global Instance relation_implication_preorder : PreOrder (@subrelation A).",
            "VernacInstance",
            "cb8ec8d5624cfd4dd99affcdfaaffb05f05d4369"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Class PartialOrder eqA `{equ : Equivalence A eqA} R `{preo : PreOrder A R} := partial_order_equivalence : relation_equivalence eqA (relation_conjunction R (flip R)).",
            "VernacInductive",
            "dfe40ddca9fde446cca0d02429925824ba411de7"
        ],
        [
            "Global Instance partial_order_antisym `(PartialOrder eqA R) : ! Antisymmetric A eqA R.",
            "VernacInstance",
            "fb7dbca43cb76bfcccc51d46f4fbef5cf6900f63"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "reduce_goal.",
            "VernacExtend",
            "ebaee9422e8b746b5e47f8433858e1e6c406c4a2"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PartialOrder_inverse `(PartialOrder eqA R) : PartialOrder eqA (flip R).",
            "VernacStartTheoremProof",
            "abf67bdd1e7147af6eec8b65aaa4025f7553a600"
        ],
        [
            "unfold flip; constructor; unfold flip.",
            "VernacExtend",
            "3120ca14d0fdade05208c9313be2c22f39aeb882"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply symmetry.",
            "VernacExtend",
            "290fe7341ad9c8fd589b99175998fdcaf3937cf1"
        ],
        [
            "apply X.",
            "VernacExtend",
            "1a06263bf241d2c272a11be0f0a1522334cc2c93"
        ],
        [
            "unfold relation_conjunction.",
            "VernacExtend",
            "100a68da9e0f94d66cc0161cb9d9a08efc818455"
        ],
        [
            "intros [H1 H2].",
            "VernacExtend",
            "0ae6198f19882a3028e7ce40d84662e28da622ee"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "constructor; assumption.",
            "VernacExtend",
            "a36f2a931681c9f1611aa56f1a810ad0f6afb946"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Binary.",
            "VernacEndSegment",
            "ad4494d99314ec118c96d237505ebf72e4b52437"
        ],
        [
            "Hint Extern 3 (PartialOrder (flip _)) => class_apply PartialOrder_inverse : typeclass_instances.",
            "VernacHints",
            "d10af4d11992f4e3355479cad875d2a6fd4f56ec"
        ],
        [
            "Typeclasses Opaque relation_equivalence.",
            "VernacExtend",
            "ae2c110fc2efae4a891e773da95aede18d91e813"
        ]
    ],
    "proofs": [
        {
            "name": "complement_inverse",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "StrictOrder_Asymmetric",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subrelation_symmetric",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "hnf.",
                        "VernacExtend",
                        "93c9be61208bb2956fb47b51f12123e34260e667"
                    ]
                },
                {
                    "command": [
                        "intros x y H'.",
                        "VernacExtend",
                        "88ac6800dbe81ee0042311fe3134d6c8111dc7cf"
                    ]
                },
                {
                    "command": [
                        "red in H'.",
                        "VernacExtend",
                        "b3f39ff59e03e63f7335587cdc4b70d75813b637"
                    ]
                },
                {
                    "command": [
                        "apply symmetry.",
                        "VernacExtend",
                        "290fe7341ad9c8fd589b99175998fdcaf3937cf1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flip_Reflexive",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flip_Antisymmetric",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flip_PreOrder",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flip_StrictOrder",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flip_PER",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "flip_Equivalence",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "complement_Irreflexive",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "complement_Symmetric",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iffT_Reflexive",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "iffT_Symmetric",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "iffT_Transitive",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "relation_equivalence_equivalence",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "split; red; unfold relation_equivalence, iffT.",
                        "VernacExtend",
                        "6be922be5a4a7ae7991c6cdfb385006f6e1a6135"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "specialize (X x0 y0).",
                        "VernacExtend",
                        "0691f3293e338a4e101da3b000f8a84e80b035d3"
                    ]
                },
                {
                    "command": [
                        "specialize (X0 x0 y0).",
                        "VernacExtend",
                        "52c192a7198306300bb14ff1761a7c247d6cdca8"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "relation_implication_preorder",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PartialOrder_inverse",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "unfold flip; constructor; unfold flip.",
                        "VernacExtend",
                        "3120ca14d0fdade05208c9313be2c22f39aeb882"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply symmetry.",
                        "VernacExtend",
                        "290fe7341ad9c8fd589b99175998fdcaf3937cf1"
                    ]
                },
                {
                    "command": [
                        "apply X.",
                        "VernacExtend",
                        "1a06263bf241d2c272a11be0f0a1522334cc2c93"
                    ]
                },
                {
                    "command": [
                        "unfold relation_conjunction.",
                        "VernacExtend",
                        "100a68da9e0f94d66cc0161cb9d9a08efc818455"
                    ]
                },
                {
                    "command": [
                        "intros [H1 H2].",
                        "VernacExtend",
                        "0ae6198f19882a3028e7ce40d84662e28da622ee"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "constructor; assumption.",
                        "VernacExtend",
                        "a36f2a931681c9f1611aa56f1a810ad0f6afb946"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}