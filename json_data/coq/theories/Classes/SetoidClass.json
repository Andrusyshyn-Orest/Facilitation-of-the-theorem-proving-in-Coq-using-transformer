{
    "filename": "theories/Classes/SetoidClass.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Generalizable Variables A.",
            "VernacGeneralizable",
            "e53f7ed385c270b9e3bb1a1e1d17c44c1fd097a7"
        ],
        [
            "Require Import Coq.Program.Program.",
            "VernacRequire",
            "f0aaea5df52d8de8e090bb8f78148264c53bb6ee"
        ],
        [
            "Require Import Relation_Definitions.",
            "VernacRequire",
            "ba1086f65c0b2f6754b8273aa4aa004209b8f8b6"
        ],
        [
            "Require Export Coq.Classes.RelationClasses.",
            "VernacRequire",
            "30afc99c2d28a0c74215b2bae3a14def0b5834d0"
        ],
        [
            "Require Export Coq.Classes.Morphisms.",
            "VernacRequire",
            "eea0e98f162137e44f4b3253fec7eb627495eed6"
        ],
        [
            "Class Setoid A := { equiv : relation A ; setoid_equiv :> Equivalence equiv }.",
            "VernacInductive",
            "4c3254fcd932091c6f8cd4e9e2ee02f76604759d"
        ],
        [
            "Definition setoid_refl `(sa : Setoid A) : Reflexive equiv.",
            "VernacDefinition",
            "23f072ef6939408232d730e794e9bc647d2a5f72"
        ],
        [
            "typeclasses eauto.",
            "VernacExtend",
            "9cf181b7917b6bbd93b4381f01116ce414f5752f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition setoid_sym `(sa : Setoid A) : Symmetric equiv.",
            "VernacDefinition",
            "2f33e4127ae10b5555e7c3e38159e4ba2154adda"
        ],
        [
            "typeclasses eauto.",
            "VernacExtend",
            "9cf181b7917b6bbd93b4381f01116ce414f5752f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition setoid_trans `(sa : Setoid A) : Transitive equiv.",
            "VernacDefinition",
            "1009a7ab412cb56c04e0888d2baa11e4e1190a72"
        ],
        [
            "typeclasses eauto.",
            "VernacExtend",
            "9cf181b7917b6bbd93b4381f01116ce414f5752f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Existing Instance setoid_refl.",
            "VernacDeclareInstances",
            "fffd6833cd8cde60028ae882398c270ccf1665b5"
        ],
        [
            "Existing Instance setoid_sym.",
            "VernacDeclareInstances",
            "1c85a3ce36426c6daef3239ff26459fe7c2733de"
        ],
        [
            "Existing Instance setoid_trans.",
            "VernacDeclareInstances",
            "34558cf09a95a3f721b2930e2183f9a6f39a280f"
        ],
        [
            "Program Instance iff_setoid : Setoid Prop := { equiv := iff ; setoid_equiv := iff_equivalence }.",
            "VernacInstance",
            "e521eed144cb7ee6be69ab98d4281008c9275b0f"
        ],
        [
            "Notation \" x == y \" := (equiv x y) (at level 70, no associativity) : type_scope.",
            "VernacNotation",
            "b6f2f78760636a6b1d5e4d3118b9a0b3e553215b"
        ],
        [
            "Notation \" x =/= y \" := (complement equiv x y) (at level 70, no associativity) : type_scope.",
            "VernacNotation",
            "535efa1e70b518e96e0ddc228ee35327789096db"
        ],
        [
            "Ltac clsubst H := lazymatch type of H with ?x == ?y => substitute H ; clear H x end.",
            "VernacExtend",
            "db613e37a7254708a1e20cc4cac9c62aa6836a4b"
        ],
        [
            "Ltac clsubst_nofail := match goal with | [ H : ?x == ?y |- _ ] => clsubst H ; clsubst_nofail | _ => idtac end.",
            "VernacExtend",
            "522a92d7bb97a0f063fd441b30eb9d7fa776234d"
        ],
        [
            "Tactic Notation \"clsubst\" \"*\" := clsubst_nofail.",
            "VernacExtend",
            "fdae49ed699cb784577646d8de7f7dde8cc2a0b4"
        ],
        [
            "Lemma nequiv_equiv_trans : forall `{Setoid A} (x y z : A), x =/= y -> y == z -> x =/= z.",
            "VernacStartTheoremProof",
            "6881403217de14b5adaef26809b5706745827c7f"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "intros; intro.",
            "VernacExtend",
            "f79e4b6a43584ed24709f98205520812d59c7c82"
        ],
        [
            "assert(z == y) by (symmetry ; auto).",
            "VernacExtend",
            "e2bd7e209d4b185f958946911289900d0298374a"
        ],
        [
            "assert(x == y) by (transitivity z ; eauto).",
            "VernacExtend",
            "da8f705480d509c707a320cbf9b40510a4ed5c57"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equiv_nequiv_trans : forall `{Setoid A} (x y z : A), x == y -> y =/= z -> x =/= z.",
            "VernacStartTheoremProof",
            "401ef892a0a389fd34500b3a70b6fc245dde728d"
        ],
        [
            "intros; intro.",
            "VernacExtend",
            "f79e4b6a43584ed24709f98205520812d59c7c82"
        ],
        [
            "assert(y == x) by (symmetry ; auto).",
            "VernacExtend",
            "a36ec98a121348753f93567b0696a3972cbefd35"
        ],
        [
            "assert(y == z) by (transitivity x ; eauto).",
            "VernacExtend",
            "3f2ef7aa6738cb2235e98f1c3e7e8dce03479b2f"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac setoid_simplify_one := match goal with | [ H : (?x == ?x)%type |- _ ] => clear H | [ H : (?x == ?y)%type |- _ ] => clsubst H | [ |- (?x =/= ?y)%type ] => let name:=fresh \"Hneq\" in intro name end.",
            "VernacExtend",
            "654835c0e5a40325bb229cd0fea49b227775fc6f"
        ],
        [
            "Ltac setoid_simplify := repeat setoid_simplify_one.",
            "VernacExtend",
            "218bd53ce3edb4ef01cc65f4116052958f702960"
        ],
        [
            "Ltac setoidify_tac := match goal with | [ s : Setoid ?A, H : ?R ?x ?y |- _ ] => change R with (@equiv A R s) in H | [ s : Setoid ?A |- context C [ ?R ?x ?y ] ] => change (R x y) with (@equiv A R s x y) end.",
            "VernacExtend",
            "1050ee8361cf4d924d1a27ad1682ba6d91c5bdf6"
        ],
        [
            "Ltac setoidify := repeat setoidify_tac.",
            "VernacExtend",
            "760b98ae038443dce25fe6da4649bdae38ba69af"
        ],
        [
            "Program Instance setoid_morphism `(sa : Setoid A) : Proper (equiv ++> equiv ++> iff) equiv := proper_prf.",
            "VernacInstance",
            "b4e983e81989631ccc82ed6f82a17aabe3b02b07"
        ],
        [
            "Program Instance setoid_partial_app_morphism `(sa : Setoid A) (x : A) : Proper (equiv ++> iff) (equiv x) := proper_prf.",
            "VernacInstance",
            "1afbee1ed684bfb203efe9a1a0576c7ecf9e49ab"
        ],
        [
            "Class PartialSetoid (A : Type) := { pequiv : relation A ; pequiv_prf :> PER pequiv }.",
            "VernacInductive",
            "93c4141f356042fae183aca13e05edb0750811f6"
        ],
        [
            "Infix \"=~=\" := pequiv (at level 70, no associativity) : type_scope.",
            "VernacInfix",
            "3f4f445d67684104e0d3f9659e683d1586bc7bc3"
        ],
        [
            "Obligation Tactic := program_simpl.",
            "VernacExtend",
            "3e1d3bf828f466dd816e94f9df73edddd47e470d"
        ]
    ],
    "proofs": [
        {
            "name": "setoid_refl",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "typeclasses eauto.",
                        "VernacExtend",
                        "9cf181b7917b6bbd93b4381f01116ce414f5752f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setoid_sym",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "typeclasses eauto.",
                        "VernacExtend",
                        "9cf181b7917b6bbd93b4381f01116ce414f5752f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setoid_trans",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "typeclasses eauto.",
                        "VernacExtend",
                        "9cf181b7917b6bbd93b4381f01116ce414f5752f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equiv_nequiv_trans",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros; intro.",
                        "VernacExtend",
                        "f79e4b6a43584ed24709f98205520812d59c7c82"
                    ]
                },
                {
                    "command": [
                        "assert(y == x) by (symmetry ; auto).",
                        "VernacExtend",
                        "a36ec98a121348753f93567b0696a3972cbefd35"
                    ]
                },
                {
                    "command": [
                        "assert(y == z) by (transitivity x ; eauto).",
                        "VernacExtend",
                        "3f2ef7aa6738cb2235e98f1c3e7e8dce03479b2f"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}