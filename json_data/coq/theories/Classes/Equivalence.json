{
    "filename": "theories/Classes/Equivalence.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Coq.Program.Basics.",
            "VernacRequire",
            "fa1ddb72b8906b348b6c372dfa02294f9092d5df"
        ],
        [
            "Require Import Coq.Program.Tactics.",
            "VernacRequire",
            "4a5faf9c06c6b8a982a49ae4608c6c7278eb982c"
        ],
        [
            "Require Import Coq.Classes.Init.",
            "VernacRequire",
            "007e0b112b4ed8eb195e68bf8ed156d7b15eb1bb"
        ],
        [
            "Require Import Relation_Definitions.",
            "VernacRequire",
            "ba1086f65c0b2f6754b8273aa4aa004209b8f8b6"
        ],
        [
            "Require Export Coq.Classes.RelationClasses.",
            "VernacRequire",
            "30afc99c2d28a0c74215b2bae3a14def0b5834d0"
        ],
        [
            "Require Import Coq.Classes.Morphisms.",
            "VernacRequire",
            "d6f94fe62e68e8d5e6a6c6513b6c2e04f2b5d71a"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Generalizable Variables A R eqA B S eqB.",
            "VernacGeneralizable",
            "faa6dc74322b8438ee8a8ed55e9bd8f7910f67ef"
        ],
        [
            "Local Obligation Tactic := try solve [simpl_relation].",
            "VernacExtend",
            "f31793f852cb3e7d5d9db3ad61bd100215bc82fb"
        ],
        [
            "Local Open Scope signature_scope.",
            "VernacOpenCloseScope",
            "720b27235e989846df94cf881681252c8daed154"
        ],
        [
            "Definition equiv `{Equivalence A R} : relation A := R.",
            "VernacDefinition",
            "7c8f758075e7ad3864386e214f15e3ea9611fc29"
        ],
        [
            "Notation \" x === y \" := (equiv x y) (at level 70, no associativity) : equiv_scope.",
            "VernacNotation",
            "65d6e597bfb755adf9ae22bcfce53bcecd5f2fe2"
        ],
        [
            "Notation \" x =/= y \" := (complement equiv x y) (at level 70, no associativity) : equiv_scope.",
            "VernacNotation",
            "d0f4e2cdecaecfd5d5f93c35ebbb8e7afaff0c24"
        ],
        [
            "Local Open Scope equiv_scope.",
            "VernacOpenCloseScope",
            "e484f2e15dd89096ab3dde44752b0a223c61912a"
        ],
        [
            "Definition pequiv `{PER A R} : relation A := R.",
            "VernacDefinition",
            "cfd4eef4d66050bd6592680259a8c249a4217d6d"
        ],
        [
            "Infix \"=~=\" := pequiv (at level 70, no associativity) : equiv_scope.",
            "VernacInfix",
            "985bb19e467def35e3541b3f1ad98d56f71409e5"
        ],
        [
            "Program Instance equiv_reflexive `(sa : Equivalence A) : Reflexive equiv | 1.",
            "VernacInstance",
            "2185fdb67ad5d7f561bc4b4bc283a417f308ca62"
        ],
        [
            "Program Instance equiv_symmetric `(sa : Equivalence A) : Symmetric equiv | 1.",
            "VernacInstance",
            "45a54ac9b158d4b604bfc85d2c2652b759279fe5"
        ],
        [
            "Program Instance equiv_transitive `(sa : Equivalence A) : Transitive equiv | 1.",
            "VernacInstance",
            "6ea3b5532049bb6b499bdeb452a7114bd856d149"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intros A R sa x y z Hxy Hyz.",
            "VernacExtend",
            "ec6deb31682f92e1638fee4b46a896ddfda2fab0"
        ],
        [
            "now transitivity y.",
            "VernacExtend",
            "187ae8d8d88d0750965785853b3032e23d8a85b9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac setoid_subst H := match type of H with ?x === ?y => substitute H ; clear H x end.",
            "VernacExtend",
            "64e1b4fc13df5bd37808a4b97e9f8a52260936ba"
        ],
        [
            "Ltac setoid_subst_nofail := match goal with | [ H : ?x === ?y |- _ ] => setoid_subst H ; setoid_subst_nofail | _ => idtac end.",
            "VernacExtend",
            "382f9ff7d10f0da844b1263a8efa3dbaa480e172"
        ],
        [
            "Tactic Notation \"subst\" \"*\" := subst_no_fail ; setoid_subst_nofail.",
            "VernacExtend",
            "13c55d94466a7f9ee6688d4c5d2b4f1a70b3cfbd"
        ],
        [
            "Ltac equiv_simplify_one := match goal with | [ H : ?x === ?x |- _ ] => clear H | [ H : ?x === ?y |- _ ] => setoid_subst H | [ |- ?x =/= ?y ] => let name:=fresh \"Hneq\" in intro name | [ |- ~ ?x === ?y ] => let name:=fresh \"Hneq\" in intro name end.",
            "VernacExtend",
            "a4f79a56f93843dfbe16e9df08427b2b0f99a9ab"
        ],
        [
            "Ltac equiv_simplify := repeat equiv_simplify_one.",
            "VernacExtend",
            "21b140c7c446b62417716077461e1d2e1cf9fae1"
        ],
        [
            "Ltac equivify_tac := match goal with | [ s : Equivalence ?A ?R, H : ?R ?x ?y |- _ ] => change R with (@equiv A R s) in H | [ s : Equivalence ?A ?R |- context C [ ?R ?x ?y ] ] => change (R x y) with (@equiv A R s x y) end.",
            "VernacExtend",
            "9f0af5de0b291e47ac70800dbee926940766d5c4"
        ],
        [
            "Ltac equivify := repeat equivify_tac.",
            "VernacExtend",
            "68c7e0634e6cd2f5766d330ca6fe81099f64b9fe"
        ],
        [
            "Section Respecting.",
            "VernacBeginSection",
            "a80c0440d1bd8705ffd7e35c4cc8a11fa5ba690b"
        ],
        [
            "Definition respecting `(eqa : Equivalence A (R : relation A), eqb : Equivalence B (R' : relation B)) : Type := { morph : A -> B | respectful R R' morph morph }.",
            "VernacDefinition",
            "b759c82b57a82348232efe5c81d43525efab6b88"
        ],
        [
            "Program Instance respecting_equiv `(eqa : Equivalence A R, eqb : Equivalence B R') : Equivalence (fun (f g : respecting eqa eqb) => forall (x y : A), R x y -> R' (proj1_sig f x) (proj1_sig g y)).",
            "VernacInstance",
            "430d731b4a7e2d39caf4ae7eaf640b27e490e78e"
        ],
        [
            "Solve Obligations with unfold respecting in * ; simpl_relation ; program_simpl.",
            "VernacExtend",
            "dccfaa442add5d5a60b73f58447071f3d6dd455b"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intros f g h H H' x y Rxy.",
            "VernacExtend",
            "17e6a1bbaa98e9bf4c00272d3cb8b1f08643e00a"
        ],
        [
            "unfold respecting in *.",
            "VernacExtend",
            "9a9690f7c4c33d834c62284d1ae9d9bbfd9c052f"
        ],
        [
            "program_simpl.",
            "VernacExtend",
            "998b74f6173e08b5c19c8e47465f9392d552adff"
        ],
        [
            "transitivity (g y); auto.",
            "VernacExtend",
            "8a5e4cd23b7b90ec294be50cfcf79e3790940f38"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Respecting.",
            "VernacEndSegment",
            "d8712704f6c56790a0d7c84dcfd44bcf0ba28745"
        ],
        [
            "Instance pointwise_reflexive {A} `(reflb : Reflexive B eqB) : Reflexive (pointwise_relation A eqB) | 9.",
            "VernacInstance",
            "2d7b06e998515fc190a74b05bd8a1fe9185bd052"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance pointwise_symmetric {A} `(symb : Symmetric B eqB) : Symmetric (pointwise_relation A eqB) | 9.",
            "VernacInstance",
            "b924a93e0b6659b62dd16642615ea5ba3946f00a"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance pointwise_transitive {A} `(transb : Transitive B eqB) : Transitive (pointwise_relation A eqB) | 9.",
            "VernacInstance",
            "3cd98315d0efc5a3d354e0d4ab1a4d06bc96c07f"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance pointwise_equivalence {A} `(eqb : Equivalence B eqB) : Equivalence (pointwise_relation A eqB) | 9.",
            "VernacInstance",
            "9174a6c95392186929429bf3a95ead3b9d38aa0e"
        ],
        [
            "split; apply _.",
            "VernacExtend",
            "5f904d1c9fb78db10a7bb7ff02dcb8ac93890c59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "equiv_transitive_obligation_1",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intros A R sa x y z Hxy Hyz.",
                        "VernacExtend",
                        "ec6deb31682f92e1638fee4b46a896ddfda2fab0"
                    ]
                },
                {
                    "command": [
                        "now transitivity y.",
                        "VernacExtend",
                        "187ae8d8d88d0750965785853b3032e23d8a85b9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "respecting_equiv_obligation_3",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intros f g h H H' x y Rxy.",
                        "VernacExtend",
                        "17e6a1bbaa98e9bf4c00272d3cb8b1f08643e00a"
                    ]
                },
                {
                    "command": [
                        "unfold respecting in *.",
                        "VernacExtend",
                        "9a9690f7c4c33d834c62284d1ae9d9bbfd9c052f"
                    ]
                },
                {
                    "command": [
                        "program_simpl.",
                        "VernacExtend",
                        "998b74f6173e08b5c19c8e47465f9392d552adff"
                    ]
                },
                {
                    "command": [
                        "transitivity (g y); auto.",
                        "VernacExtend",
                        "8a5e4cd23b7b90ec294be50cfcf79e3790940f38"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pointwise_reflexive",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pointwise_symmetric",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pointwise_transitive",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pointwise_equivalence",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "split; apply _.",
                        "VernacExtend",
                        "5f904d1c9fb78db10a7bb7ff02dcb8ac93890c59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}