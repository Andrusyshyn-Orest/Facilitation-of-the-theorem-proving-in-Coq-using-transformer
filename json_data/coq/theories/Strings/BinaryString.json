{
    "filename": "theories/Strings/BinaryString.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Ascii String.",
            "VernacRequire",
            "e692811779218ba321ba408ada0f358c19af5606"
        ],
        [
            "Require Import BinNums.",
            "VernacRequire",
            "edbef0a4da1bba0656d5c4f56721a64722efc493"
        ],
        [
            "Import BinNatDef.",
            "VernacImport",
            "2ffcebb6bdab3e20028a47800f8a579bd535c72c"
        ],
        [
            "Import BinIntDef.",
            "VernacImport",
            "1c8cf25bf3b920415fe7dba780340dc9679e565f"
        ],
        [
            "Import BinPosDef.",
            "VernacImport",
            "2ded832a132dbb19830f6e101e88e4fbf3f25b91"
        ],
        [
            "Local Open Scope positive_scope.",
            "VernacOpenCloseScope",
            "373b6149b002bb2947d7edec759c86b4538856cb"
        ],
        [
            "Local Open Scope string_scope.",
            "VernacOpenCloseScope",
            "347f91aff322dccfab9c81382e495d8430d8e803"
        ],
        [
            "Definition ascii_to_digit (ch : ascii) : option N := (if ascii_dec ch \"0\" then Some 0 else if ascii_dec ch \"1\" then Some 1 else None)%N.",
            "VernacDefinition",
            "435ee05906fee2dddd8eae7bef3c32af85e9f20b"
        ],
        [
            "Fixpoint pos_bin_app (p q:positive) : positive := match q with | q~0 => (pos_bin_app p q)~0 | q~1 => (pos_bin_app p q)~1 | 1 => p~1 end.",
            "VernacFixpoint",
            "91b99af808b46887ec48a585d386015cd0c622be"
        ],
        [
            "Module Raw.",
            "VernacDefineModule",
            "d1044187bf73f07090e152616f4d5a5d245c74fd"
        ],
        [
            "Fixpoint of_pos (p : positive) (rest : string) : string := match p with | 1 => String \"1\" rest | p'~0 => of_pos p' (String \"0\" rest) | p'~1 => of_pos p' (String \"1\" rest) end.",
            "VernacFixpoint",
            "d5461fa694c2a313b3317c76177d7738fa77d7b7"
        ],
        [
            "Fixpoint to_N (s : string) (rest : N) : N := match s with | \"\" => rest | String ch s' => to_N s' match ascii_to_digit ch with | Some v => N.add v (N.double rest) | None => N0 end end.",
            "VernacFixpoint",
            "e0e7059d47fd3bef9e2599454b2b62ed2a1eddda"
        ],
        [
            "Fixpoint to_N_of_pos (p : positive) (rest : string) (base : N) : to_N (of_pos p rest) base = to_N rest match base with | N0 => N.pos p | Npos v => Npos (pos_bin_app v p) end.",
            "VernacFixpoint",
            "d3eeb95a5bd55827516c309ab5172c50adf41fef"
        ],
        [
            "destruct p as [p|p|]; destruct base; try reflexivity; cbn; rewrite to_N_of_pos; reflexivity.",
            "VernacExtend",
            "bbd1f271c0d41c192d8b8a6e1551256c794f4fbe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Raw.",
            "VernacEndSegment",
            "2fd749d80ea291efaaecadd9d1993cc21838a722"
        ],
        [
            "Definition of_pos (p : positive) : string := String \"0\" (String \"b\" (Raw.of_pos p \"\")).",
            "VernacDefinition",
            "89b1606202227e7c2c5ec4a3c0222c515c2f4b32"
        ],
        [
            "Definition of_N (n : N) : string := match n with | N0 => \"0b0\" | Npos p => of_pos p end.",
            "VernacDefinition",
            "a5dcc42221740f3ad8f9fafca4ecf39990024843"
        ],
        [
            "Definition of_Z (z : Z) : string := match z with | Zneg p => String \"-\" (of_pos p) | Z0 => \"0b0\" | Zpos p => of_pos p end.",
            "VernacDefinition",
            "6e4b794a383cf235bc2b4a2b86e0478784e928b3"
        ],
        [
            "Definition of_nat (n : nat) : string := of_N (N.of_nat n).",
            "VernacDefinition",
            "9c4e8a32a9eb0f85ba377c1dca2d4749c876b4f7"
        ],
        [
            "Definition to_N (s : string) : N := match s with | String s0 (String sb s) => if ascii_dec s0 \"0\" then if ascii_dec sb \"b\" then Raw.to_N s N0 else N0 else N0 | _ => N0 end.",
            "VernacDefinition",
            "9403a59390649ef2edc0f28a5893a5670577d0ef"
        ],
        [
            "Definition to_pos (s : string) : positive := match to_N s with | N0 => 1 | Npos p => p end.",
            "VernacDefinition",
            "adc9b1a9a8e89a5163d7fe5692ba030f0edf3e4c"
        ],
        [
            "Definition to_Z (s : string) : Z := let '(is_neg, n) := match s with | String s0 s' => if ascii_dec s0 \"-\" then (true, to_N s') else (false, to_N s) | EmptyString => (false, to_N s) end in match n with | N0 => Z0 | Npos p => if is_neg then Zneg p else Zpos p end.",
            "VernacDefinition",
            "04015e420ad8e4bab25031bda1df4b7df0a22fcc"
        ],
        [
            "Definition to_nat (s : string) : nat := N.to_nat (to_N s).",
            "VernacDefinition",
            "df453223f9b95861c4185ccb90b883cc4e264098"
        ],
        [
            "Lemma to_N_of_N (n : N) : to_N (of_N n) = n.",
            "VernacStartTheoremProof",
            "9a7f7082f2f00fccb7f5d5c8bf18cc0b57f4378a"
        ],
        [
            "destruct n; [ reflexivity | apply Raw.to_N_of_pos ].",
            "VernacExtend",
            "c323d5d31a2b96a7f55c35e4426242d415436cc0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Z_of_of_Z (z : Z) : to_Z (of_Z z) = z.",
            "VernacStartTheoremProof",
            "66b3c5cc7d8bdf400d47bced61ed7eb88859c3b4"
        ],
        [
            "cbv [of_Z to_Z]; destruct z as [|z|z]; cbn; try reflexivity; rewrite Raw.to_N_of_pos; cbn; reflexivity.",
            "VernacExtend",
            "c6bba449105f372ad3e65af21d788f2469b21c74"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma to_nat_of_nat (n : nat) : to_nat (of_nat n) = n.",
            "VernacStartTheoremProof",
            "f008e85c261d7ac97bae63ea3b8f65ffe7b7f11f"
        ],
        [
            "cbv [to_nat of_nat]; rewrite to_N_of_N, Nnat.Nat2N.id; reflexivity.",
            "VernacExtend",
            "07f3a8ccb607e2ea8da1e2d670eaf8ff32ed30b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma to_pos_of_pos (p : positive) : to_pos (of_pos p) = p.",
            "VernacStartTheoremProof",
            "fd53fc76e999e6cf74689199659c070125bd0009"
        ],
        [
            "cbv [of_pos to_pos to_N]; cbn; rewrite Raw.to_N_of_pos; cbn; reflexivity.",
            "VernacExtend",
            "64177dca65b2a04897cede5b71c1ad3313334106"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Example of_pos_1 : of_pos 1 = \"0b1\" := eq_refl.",
            "VernacDefinition",
            "9a4e422fc457e6e0175b30cc8e6812e49ff607f1"
        ],
        [
            "Example of_pos_2 : of_pos 2 = \"0b10\" := eq_refl.",
            "VernacDefinition",
            "041d02fd5875a5e744126620249fe2a36e67c3d7"
        ],
        [
            "Example of_pos_3 : of_pos 3 = \"0b11\" := eq_refl.",
            "VernacDefinition",
            "9ce6a938db7eadcdb030235efe599775a0e0fedb"
        ],
        [
            "Example of_N_0 : of_N 0 = \"0b0\" := eq_refl.",
            "VernacDefinition",
            "9f620de96cabc43fc9bddf690f1289eedb30a1bf"
        ],
        [
            "Example of_Z_0 : of_Z 0 = \"0b0\" := eq_refl.",
            "VernacDefinition",
            "1909137847accff506a524109e8ab401926fed2b"
        ],
        [
            "Example of_Z_m1 : of_Z (-1) = \"-0b1\" := eq_refl.",
            "VernacDefinition",
            "3c0b2b56a45cf0bee7436b162af86dfc24569d34"
        ],
        [
            "Example of_nat_0 : of_nat 0 = \"0b0\" := eq_refl.",
            "VernacDefinition",
            "aa046dd041249a3fd5367f3bdd25e944f1dea8e4"
        ]
    ],
    "proofs": [
        {
            "name": "to_N_of_pos",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "destruct p as [p|p|]; destruct base; try reflexivity; cbn; rewrite to_N_of_pos; reflexivity.",
                        "VernacExtend",
                        "bbd1f271c0d41c192d8b8a6e1551256c794f4fbe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_N_of_N",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "destruct n; [ reflexivity | apply Raw.to_N_of_pos ].",
                        "VernacExtend",
                        "c323d5d31a2b96a7f55c35e4426242d415436cc0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Z_of_of_Z",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "cbv [of_Z to_Z]; destruct z as [|z|z]; cbn; try reflexivity; rewrite Raw.to_N_of_pos; cbn; reflexivity.",
                        "VernacExtend",
                        "c6bba449105f372ad3e65af21d788f2469b21c74"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_nat_of_nat",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "cbv [to_nat of_nat]; rewrite to_N_of_N, Nnat.Nat2N.id; reflexivity.",
                        "VernacExtend",
                        "07f3a8ccb607e2ea8da1e2d670eaf8ff32ed30b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "to_pos_of_pos",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "cbv [of_pos to_pos to_N]; cbn; rewrite Raw.to_N_of_pos; cbn; reflexivity.",
                        "VernacExtend",
                        "64177dca65b2a04897cede5b71c1ad3313334106"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}