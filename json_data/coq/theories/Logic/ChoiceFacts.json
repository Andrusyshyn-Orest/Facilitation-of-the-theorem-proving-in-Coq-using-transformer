{
    "filename": "theories/Logic/ChoiceFacts.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import RelationClasses Logic.",
            "VernacRequire",
            "71c51e4d60df123cea999bfb748030e37d2362d3"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Local Unset Intuition Negation Unfolding.",
            "VernacUnsetOption",
            "a9bf246e3a2a70f777a8455bfb14a5adcbad30b7"
        ],
        [
            "Section ChoiceSchemes.",
            "VernacBeginSection",
            "c23b964d0bd794457cc2f4025f85a3b862943577"
        ],
        [
            "Variables A B :Type.",
            "VernacAssumption",
            "b4e42fd426c23cd1c77c79fc26c25f95338235a5"
        ],
        [
            "Variable P:A->Prop.",
            "VernacAssumption",
            "c4c1d04be97fb87f7ef5221a5c608ce908b2cefd"
        ],
        [
            "Definition RelationalChoice_on := forall R:A->B->Prop, (forall x : A, exists y : B, R x y) -> (exists R' : A->B->Prop, subrelation R' R /\\ forall x, exists! y, R' x y).",
            "VernacDefinition",
            "9f21a07a66176f15a99e58d1a695e65181c37d8d"
        ],
        [
            "Definition FunctionalChoice_on_rel (R:A->B->Prop) := (forall x:A, exists y : B, R x y) -> exists f : A -> B, (forall x:A, R x (f x)).",
            "VernacDefinition",
            "a064b8828194367222c8717fe92ec1966037827e"
        ],
        [
            "Definition FunctionalChoice_on := forall R:A->B->Prop, (forall x : A, exists y : B, R x y) -> (exists f : A->B, forall x : A, R x (f x)).",
            "VernacDefinition",
            "0f1fa24d2e46e8828f80a5eba29c1094f2b4bb01"
        ],
        [
            "Definition DependentFunctionalChoice_on (A:Type) (B:A -> Type) := forall R:forall x:A, B x -> Prop, (forall x:A, exists y : B x, R x y) -> (exists f : (forall x:A, B x), forall x:A, R x (f x)).",
            "VernacDefinition",
            "87e9186f0df35ecefce9e587e5a547a471143559"
        ],
        [
            "Definition InhabitedForallCommute_on (A : Type) (B : A -> Type) := (forall x, inhabited (B x)) -> inhabited (forall x, B x).",
            "VernacDefinition",
            "d0adbe4ee4b4e6ecf116af7cb11a6cf10f09154e"
        ],
        [
            "Definition FunctionalDependentChoice_on := forall (R:A->A->Prop), (forall x, exists y, R x y) -> forall x0, (exists f : nat -> A, f 0 = x0 /\\ forall n, R (f n) (f (S n))).",
            "VernacDefinition",
            "e288f72ee2f9f5fe7d119427001a2739e5e5ce76"
        ],
        [
            "Definition FunctionalCountableChoice_on := forall (R:nat->A->Prop), (forall n, exists y, R n y) -> (exists f : nat -> A, forall n, R n (f n)).",
            "VernacDefinition",
            "39c8bbd36d5012d565b5d39ff3493c9b88c32c3a"
        ],
        [
            "Definition FunctionalRelReification_on := forall R:A->B->Prop, (forall x : A, exists! y : B, R x y) -> (exists f : A->B, forall x : A, R x (f x)).",
            "VernacDefinition",
            "204b5a46b2ae1b926924544a200252023ec6fe2e"
        ],
        [
            "Definition DependentFunctionalRelReification_on (A:Type) (B:A -> Type) := forall (R:forall x:A, B x -> Prop), (forall x:A, exists! y : B x, R x y) -> (exists f : (forall x:A, B x), forall x:A, R x (f x)).",
            "VernacDefinition",
            "8d770dbca74fc881b5693c4f8288ea3c1dfc5167"
        ],
        [
            "Definition RepresentativeFunctionalChoice_on := forall R:A->A->Prop, (Equivalence R) -> (exists f : A->A, forall x : A, (R x (f x)) /\\ forall x', R x x' -> f x = f x').",
            "VernacDefinition",
            "c9977d1b36b608767f0a50f622f56e701edb7f0e"
        ],
        [
            "Definition SetoidFunctionalChoice_on := forall R : A -> A -> Prop, forall T : A -> B -> Prop, Equivalence R -> (forall x x' y, R x x' -> T x y -> T x' y) -> (forall x, exists y, T x y) -> exists f : A -> B, forall x : A, T x (f x) /\\ (forall x' : A, R x x' -> f x = f x').",
            "VernacDefinition",
            "bd919ca90f012c76fc50892ccd650c038cd275ee"
        ],
        [
            "Definition GeneralizedSetoidFunctionalChoice_on := forall R : A -> A -> Prop, forall S : B -> B -> Prop, forall T : A -> B -> Prop, Equivalence R -> Equivalence S -> (forall x x' y y', R x x' -> S y y' -> T x y -> T x' y') -> (forall x, exists y, T x y) -> exists f : A -> B, forall x : A, T x (f x) /\\ (forall x' : A, R x x' -> S (f x) (f x')).",
            "VernacDefinition",
            "d6e08c443971a73f505147efbd3e40097cb7553b"
        ],
        [
            "Definition SimpleSetoidFunctionalChoice_on A B := forall R : A -> A -> Prop, forall T : A -> B -> Prop, Equivalence R -> (forall x, exists y, forall x', R x x' -> T x' y) -> exists f : A -> B, forall x : A, T x (f x) /\\ (forall x' : A, R x x' -> f x = f x').",
            "VernacDefinition",
            "e78a7a657a78c4153f2f172757baa8795f98d49a"
        ],
        [
            "Definition ConstructiveIndefiniteDescription_on := forall P:A->Prop, (exists x, P x) -> { x:A | P x }.",
            "VernacDefinition",
            "6626594c13084b1dbcc2d0281da04dba07ee78af"
        ],
        [
            "Definition ConstructiveDefiniteDescription_on := forall P:A->Prop, (exists! x, P x) -> { x:A | P x }.",
            "VernacDefinition",
            "8fe958cc9497032b9bea042431ff02dfbd461413"
        ],
        [
            "Definition GuardedRelationalChoice_on := forall P : A->Prop, forall R : A->B->Prop, (forall x : A, P x -> exists y : B, R x y) -> (exists R' : A->B->Prop, subrelation R' R /\\ forall x, P x -> exists! y, R' x y).",
            "VernacDefinition",
            "33c28714bc10a172acf0096cb8e45f585655ad56"
        ],
        [
            "Definition GuardedFunctionalChoice_on := forall P : A->Prop, forall R : A->B->Prop, inhabited B -> (forall x : A, P x -> exists y : B, R x y) -> (exists f : A->B, forall x, P x -> R x (f x)).",
            "VernacDefinition",
            "bdb74f5cec77ebe845f23ea98deb50e48bc18f79"
        ],
        [
            "Definition GuardedFunctionalRelReification_on := forall P : A->Prop, forall R : A->B->Prop, inhabited B -> (forall x : A, P x -> exists! y : B, R x y) -> (exists f : A->B, forall x : A, P x -> R x (f x)).",
            "VernacDefinition",
            "fe86f8d2c6c09661cbed53f9f59c26110022c5c0"
        ],
        [
            "Definition OmniscientRelationalChoice_on := forall R : A->B->Prop, exists R' : A->B->Prop, subrelation R' R /\\ forall x : A, (exists y : B, R x y) -> exists! y, R' x y.",
            "VernacDefinition",
            "2bf2f5549646c3673ac8806d23f7098d628f23fb"
        ],
        [
            "Definition OmniscientFunctionalChoice_on := forall R : A->B->Prop, inhabited B -> exists f : A->B, forall x : A, (exists y : B, R x y) -> R x (f x).",
            "VernacDefinition",
            "d02ef9c69141b020cf6a27b9c59c739a9e4de896"
        ],
        [
            "Definition EpsilonStatement_on := forall P:A->Prop, inhabited A -> { x:A | (exists x, P x) -> P x }.",
            "VernacDefinition",
            "84bfaf4ba261bb05913c67ed13a4e7b91f6f243e"
        ],
        [
            "Definition IotaStatement_on := forall P:A->Prop, inhabited A -> { x:A | (exists! x, P x) -> P x }.",
            "VernacDefinition",
            "68d0153388cd5bd3e3f35add63c88c863e3c381f"
        ],
        [
            "End ChoiceSchemes.",
            "VernacEndSegment",
            "7eb30106ab18ad0f95991a31ae6c4ed2c5d82c7c"
        ],
        [
            "Notation RelationalChoice := (forall A B : Type, RelationalChoice_on A B).",
            "VernacSyntacticDefinition",
            "abbdd988a1c0cd967c5ddf3571f1dae4feeebd82"
        ],
        [
            "Notation FunctionalChoice := (forall A B : Type, FunctionalChoice_on A B).",
            "VernacSyntacticDefinition",
            "f52abc18166d6ec0f528b126919cdcac6d57289d"
        ],
        [
            "Notation DependentFunctionalChoice := (forall A (B:A->Type), DependentFunctionalChoice_on B).",
            "VernacSyntacticDefinition",
            "b1c060427a88cf11aeae03d1744edde4c9b27b6f"
        ],
        [
            "Notation InhabitedForallCommute := (forall A (B : A -> Type), InhabitedForallCommute_on B).",
            "VernacSyntacticDefinition",
            "84f04d441750fb9b2257c1b4bd6ec9d79b00c55d"
        ],
        [
            "Notation FunctionalDependentChoice := (forall A : Type, FunctionalDependentChoice_on A).",
            "VernacSyntacticDefinition",
            "99ee9e3d3a4dc1ecf4be05f1a2a034175e121417"
        ],
        [
            "Notation FunctionalCountableChoice := (forall A : Type, FunctionalCountableChoice_on A).",
            "VernacSyntacticDefinition",
            "77c6d67aa6738a5c31a119c5eb8aac8588d1a9dd"
        ],
        [
            "Notation FunctionalChoiceOnInhabitedSet := (forall A B : Type, inhabited B -> FunctionalChoice_on A B).",
            "VernacSyntacticDefinition",
            "a3d05fc0ac1b764cab87c2080cede54715135a08"
        ],
        [
            "Notation FunctionalRelReification := (forall A B : Type, FunctionalRelReification_on A B).",
            "VernacSyntacticDefinition",
            "7be98f43ced69d69c4b91ff71b6713886413e09f"
        ],
        [
            "Notation DependentFunctionalRelReification := (forall A (B:A->Type), DependentFunctionalRelReification_on B).",
            "VernacSyntacticDefinition",
            "df05f261f50c16ba30cfb372a26b2c825d4276d8"
        ],
        [
            "Notation RepresentativeFunctionalChoice := (forall A : Type, RepresentativeFunctionalChoice_on A).",
            "VernacSyntacticDefinition",
            "d453f69bba827d6b0bcb28d9aec2a43f7845a757"
        ],
        [
            "Notation SetoidFunctionalChoice := (forall A B: Type, SetoidFunctionalChoice_on A B).",
            "VernacSyntacticDefinition",
            "eda5dbac059d2e97f3fd861b98bba670446c432f"
        ],
        [
            "Notation GeneralizedSetoidFunctionalChoice := (forall A B : Type, GeneralizedSetoidFunctionalChoice_on A B).",
            "VernacSyntacticDefinition",
            "45850e696911df16baa647882a8babe07b028c1d"
        ],
        [
            "Notation SimpleSetoidFunctionalChoice := (forall A B : Type, SimpleSetoidFunctionalChoice_on A B).",
            "VernacSyntacticDefinition",
            "4c8f3c4d6e5c305ac7c214b326be623a48f0c4dc"
        ],
        [
            "Notation GuardedRelationalChoice := (forall A B : Type, GuardedRelationalChoice_on A B).",
            "VernacSyntacticDefinition",
            "73b91729fe319212f8215f46f46176c2c374b7e9"
        ],
        [
            "Notation GuardedFunctionalChoice := (forall A B : Type, GuardedFunctionalChoice_on A B).",
            "VernacSyntacticDefinition",
            "446175b3dcd501d526c110f3f98c3c3c17725d34"
        ],
        [
            "Notation GuardedFunctionalRelReification := (forall A B : Type, GuardedFunctionalRelReification_on A B).",
            "VernacSyntacticDefinition",
            "a61ad97a833f2f94972a9b6e0d83c0ebce998297"
        ],
        [
            "Notation OmniscientRelationalChoice := (forall A B : Type, OmniscientRelationalChoice_on A B).",
            "VernacSyntacticDefinition",
            "a04af3876c3bb48d1f6daaf7bb07b9d1e4d57913"
        ],
        [
            "Notation OmniscientFunctionalChoice := (forall A B : Type, OmniscientFunctionalChoice_on A B).",
            "VernacSyntacticDefinition",
            "479bb48240b66e8846dcef9f87902db14daf6b3a"
        ],
        [
            "Notation ConstructiveDefiniteDescription := (forall A : Type, ConstructiveDefiniteDescription_on A).",
            "VernacSyntacticDefinition",
            "e03a226159725b658945bb7c55518598352bb066"
        ],
        [
            "Notation ConstructiveIndefiniteDescription := (forall A : Type, ConstructiveIndefiniteDescription_on A).",
            "VernacSyntacticDefinition",
            "98775eff050fb43eaf5b740dca7aa3bfc6094ca9"
        ],
        [
            "Notation IotaStatement := (forall A : Type, IotaStatement_on A).",
            "VernacSyntacticDefinition",
            "a97cf5e34cd7be1c1f8a047175d9186712ae702c"
        ],
        [
            "Notation EpsilonStatement := (forall A : Type, EpsilonStatement_on A).",
            "VernacSyntacticDefinition",
            "9c4146eefdab4d84a1be9f916d59b25bd874b8e0"
        ],
        [
            "Definition ProofIrrelevance := forall (A:Prop) (a1 a2:A), a1 = a2.",
            "VernacDefinition",
            "3cce065f20e893f30698c0c0d07178c6e6497961"
        ],
        [
            "Definition IndependenceOfGeneralPremises := forall (A:Type) (P:A -> Prop) (Q:Prop), inhabited A -> (Q -> exists x, P x) -> exists x, Q -> P x.",
            "VernacDefinition",
            "b471f1f508bffa1b09f0ee2025aa3b2fe5ce78ce"
        ],
        [
            "Definition SmallDrinker'sParadox := forall (A:Type) (P:A -> Prop), inhabited A -> exists x, (exists x, P x) -> P x.",
            "VernacDefinition",
            "21c9b3b0abab6fc29366f383e5f7cd19d19dec68"
        ],
        [
            "Definition ExcludedMiddle := forall P:Prop, P \\/ ~ P.",
            "VernacDefinition",
            "831cf885cbcfb0a5ff4a52a26c3ef6d7c24a4606"
        ],
        [
            "Local Notation ExtensionalPropositionRepresentative := (forall (A:Type), exists h : Prop -> Prop, forall P : Prop, (P <-> h P) /\\ forall Q, (P <-> Q) -> h P = h Q).",
            "VernacSyntacticDefinition",
            "13df15dfc957aebace6072274b45dc464a543256"
        ],
        [
            "Local Notation ExtensionalPredicateRepresentative := (forall (A:Type), exists h : (A->Prop) -> (A->Prop), forall (P : A -> Prop), (forall x, P x <-> h P x) /\\ forall Q, (forall x, P x <-> Q x) -> h P = h Q).",
            "VernacSyntacticDefinition",
            "fdaed9277a474875036814489159cfe862589818"
        ],
        [
            "Local Notation ExtensionalFunctionRepresentative := (forall (A B:Type), exists h : (A->B) -> (A->B), forall (f : A -> B), (forall x, f x = h f x) /\\ forall g, (forall x, f x = g x) -> h f = h g).",
            "VernacSyntacticDefinition",
            "93b3e1695471f50384eb3a5e45919bb5ac5bbac8"
        ],
        [
            "Lemma functional_rel_reification_and_rel_choice_imp_fun_choice : forall A B : Type, FunctionalRelReification_on A B -> RelationalChoice_on A B -> FunctionalChoice_on A B.",
            "VernacStartTheoremProof",
            "c4dd265c5ffc9e22fd396696417acb122b0fc5cb"
        ],
        [
            "intros A B Descr RelCh R H.",
            "VernacExtend",
            "c50c9fb58cc29569ffbd8c805579c1fe13318210"
        ],
        [
            "destruct (RelCh R H) as (R',(HR'R,H0)).",
            "VernacExtend",
            "e51ef3abe7039802905fe941eddc489536c7ee9d"
        ],
        [
            "destruct (Descr R') as (f,Hf).",
            "VernacExtend",
            "b3f91843fff03e472e2a62bec3f4e8d47453628f"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "exists f; intro x.",
            "VernacExtend",
            "8fcb80e8c45e6071437622b69a222ef59f22778d"
        ],
        [
            "destruct (H0 x) as (y,(HR'xy,Huniq)).",
            "VernacExtend",
            "1acc6a5d90740b18ccbfc3ceac4f58a9e8e16f02"
        ],
        [
            "rewrite <- (Huniq (f x) (Hf x)).",
            "VernacExtend",
            "dd89d2698bc8edeffe432a9e5d3c15119a3689cd"
        ],
        [
            "apply HR'R; assumption.",
            "VernacExtend",
            "3c18e88dd292bb3f79b3d01dbffd34e1a135512e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fun_choice_imp_rel_choice : forall A B : Type, FunctionalChoice_on A B -> RelationalChoice_on A B.",
            "VernacStartTheoremProof",
            "efd8872862336a2016daf2de4e2247a21cbb216f"
        ],
        [
            "intros A B FunCh R H.",
            "VernacExtend",
            "45f94d31bba85faeb5fa9b899ed5a3ba92afe91f"
        ],
        [
            "destruct (FunCh R H) as (f,H0).",
            "VernacExtend",
            "db72d3bf601aacb1bf0cad891e1819bcc2844ecb"
        ],
        [
            "exists (fun x y => f x = y).",
            "VernacExtend",
            "64bf72381cae1d490a51decbc781dcaaf075c365"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros x y Heq; rewrite <- Heq; trivial.",
            "VernacExtend",
            "9e7c9607743cfc39fef484ccb07e20bdf56957b0"
        ],
        [
            "intro x; exists (f x); split.",
            "VernacExtend",
            "ef09bc94177db6f5a3446ebe68979adfe1ba1b7f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fun_choice_imp_functional_rel_reification : forall A B : Type, FunctionalChoice_on A B -> FunctionalRelReification_on A B.",
            "VernacStartTheoremProof",
            "5145c8fdc0b1f5bce259239acea6392230dc5f14"
        ],
        [
            "intros A B FunCh R H.",
            "VernacExtend",
            "45f94d31bba85faeb5fa9b899ed5a3ba92afe91f"
        ],
        [
            "destruct (FunCh R) as [f H0].",
            "VernacExtend",
            "56d47f8e988ee00765678388e76c729aff568508"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "destruct (H x) as (y,(HRxy,_)).",
            "VernacExtend",
            "bb626d318838fa400c61a999fe5082893496eee8"
        ],
        [
            "exists y; exact HRxy.",
            "VernacExtend",
            "6d11f9f3032b9bc52c11b13f93ff80e520ab9a15"
        ],
        [
            "exists f; exact H0.",
            "VernacExtend",
            "ca6b3b0353493bb35eaa6791a3d54247772a3658"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary fun_choice_iff_rel_choice_and_functional_rel_reification : forall A B : Type, FunctionalChoice_on A B <-> RelationalChoice_on A B /\\ FunctionalRelReification_on A B.",
            "VernacStartTheoremProof",
            "afc332b3df9878ddf3b1ebb25a0d6a0e97e20b40"
        ],
        [
            "intros A B.",
            "VernacExtend",
            "f0fdd14fe43c412ab9e9cf2b93b27330098322c4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro H; split; [ exact (fun_choice_imp_rel_choice H) | exact (fun_choice_imp_functional_rel_reification H) ].",
            "VernacExtend",
            "b4d417d80345ad415d18669ab592b7b74e0bc6d1"
        ],
        [
            "intros [H H0]; exact (functional_rel_reification_and_rel_choice_imp_fun_choice H0 H).",
            "VernacExtend",
            "d38eac8f6372cc3a8b5861c5ad939f8c16243495"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rel_choice_and_proof_irrel_imp_guarded_rel_choice : RelationalChoice -> ProofIrrelevance -> GuardedRelationalChoice.",
            "VernacStartTheoremProof",
            "198a940f2e047da67bf38400913f0243ef87bc33"
        ],
        [
            "intros rel_choice proof_irrel.",
            "VernacExtend",
            "716e3aac09741d97a685f8e459d6a1d7b425fd5d"
        ],
        [
            "red; intros A B P R H.",
            "VernacExtend",
            "ada4bdcbcb7c4c67aeece013bd0cda86c70139b9"
        ],
        [
            "destruct (rel_choice _ _ (fun (x:sigT P) (y:B) => R (projT1 x) y)) as (R',(HR'R,H0)).",
            "VernacExtend",
            "8e9075a0217fc55f90dfcbe91e634aef921f73f5"
        ],
        [
            "intros (x,HPx).",
            "VernacExtend",
            "120ebae2bd41592824214b9b96cfdeb8754ea395"
        ],
        [
            "destruct (H x HPx) as (y,HRxy).",
            "VernacExtend",
            "a58b41e26692cb0489ecc12e4a9778a586555a49"
        ],
        [
            "exists y; exact HRxy.",
            "VernacExtend",
            "6d11f9f3032b9bc52c11b13f93ff80e520ab9a15"
        ],
        [
            "set (R'' := fun (x:A) (y:B) => exists H : P x, R' (existT P x H) y).",
            "VernacExtend",
            "94ce4f857faefb6220d6a97414ade308318f029c"
        ],
        [
            "exists R''; split.",
            "VernacExtend",
            "788063a16453b524b39a42cb252b6f34f57d3966"
        ],
        [
            "intros x y (HPx,HR'xy).",
            "VernacExtend",
            "fc3206cb8a1662a1bf9d6da5e10a85794e4c096b"
        ],
        [
            "change x with (projT1 (existT P x HPx)); apply HR'R; exact HR'xy.",
            "VernacExtend",
            "511c91d9d9a71350ee0547be89d38c5c071249c3"
        ],
        [
            "intros x HPx.",
            "VernacExtend",
            "2d2bcfc6c8806c9b1a2231aa10e3c9e30b34b282"
        ],
        [
            "destruct (H0 (existT P x HPx)) as (y,(HR'xy,Huniq)).",
            "VernacExtend",
            "3ad5bba6f05aa3a9ec520fc8bd8ca70cd0e8ec40"
        ],
        [
            "exists y; split.",
            "VernacExtend",
            "98b34a63bf65ebe8d8fef8eda97c175e0cb41ad2"
        ],
        [
            "exists HPx; exact HR'xy.",
            "VernacExtend",
            "a4709328a07185abf305152602941f773376a72e"
        ],
        [
            "intros y' (H'Px,HR'xy').",
            "VernacExtend",
            "34c522c733f397d672cf7c116fad37dd516c7e90"
        ],
        [
            "apply Huniq.",
            "VernacExtend",
            "74d511df8e87339af8daa3b5365e783b4276c8cd"
        ],
        [
            "rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); exact HR'xy'.",
            "VernacExtend",
            "0f388f7d262a19eca4fa4efaaf60fd6a0d9a0305"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rel_choice_indep_of_general_premises_imp_guarded_rel_choice : forall A B : Type, inhabited B -> RelationalChoice_on A B -> IndependenceOfGeneralPremises -> GuardedRelationalChoice_on A B.",
            "VernacStartTheoremProof",
            "d5dc37791a31a4a30bf765d6d5a6886b821271d7"
        ],
        [
            "intros A B Inh AC_rel IndPrem P R H.",
            "VernacExtend",
            "e65fe3456d62db0ecf169213deedfaaa237bd124"
        ],
        [
            "destruct (AC_rel (fun x y => P x -> R x y)) as (R',(HR'R,H0)).",
            "VernacExtend",
            "218f7fe7745d3c44a84ee16c57a0fd58b5a199de"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "apply IndPrem.",
            "VernacExtend",
            "3beb3756171f5b537d85ed0c8a0bcb1de9e2b88b"
        ],
        [
            "exact Inh.",
            "VernacExtend",
            "3a3ac23193eac8bf40bb618f8fa11ccd1934cd56"
        ],
        [
            "intro Hx.",
            "VernacExtend",
            "218b6ef98d0605f2e1745b1d78b2fbbb6c4b9a85"
        ],
        [
            "apply H; assumption.",
            "VernacExtend",
            "7904d623a02884c927ef4e8b66c90cb12eee7c7a"
        ],
        [
            "exists (fun x y => P x /\\ R' x y).",
            "VernacExtend",
            "aef97db4dc9c20985e3f134bcf5bfdbe066ebc31"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma guarded_rel_choice_imp_rel_choice : forall A B : Type, GuardedRelationalChoice_on A B -> RelationalChoice_on A B.",
            "VernacStartTheoremProof",
            "12c51ab46ee2512a44f19e21fdb5c1a1d3806dd7"
        ],
        [
            "intros A B GAC_rel R H.",
            "VernacExtend",
            "08fdcb23c44a8ac724443f774248fe3f9ebeaf0b"
        ],
        [
            "destruct (GAC_rel (fun _ => True) R) as (R',(HR'R,H0)).",
            "VernacExtend",
            "138e9b8c78f4a863b9bad88fc5cad693aa605db6"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "exists R'; firstorder.",
            "VernacExtend",
            "e8c8bcc11e692e75d63136ee91415a1b57d1917a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma subset_types_imp_guarded_rel_choice_iff_rel_choice : ProofIrrelevance -> (GuardedRelationalChoice <-> RelationalChoice).",
            "VernacStartTheoremProof",
            "53880af668aa21dcedb864e5b7209e85fa95b0c1"
        ],
        [
            "intuition auto using guarded_rel_choice_imp_rel_choice, rel_choice_and_proof_irrel_imp_guarded_rel_choice.",
            "VernacExtend",
            "3cdfc6aa6cb6e4cd684a154305b7be729dbaebe9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary guarded_iff_omniscient_rel_choice : GuardedRelationalChoice <-> OmniscientRelationalChoice.",
            "VernacStartTheoremProof",
            "976c6ee4668d097dc1fc078b40e68e9f67287ce0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros GAC_rel A B R.",
            "VernacExtend",
            "e8a0d5b6f362c6340a4368e92799fa31c25f5191"
        ],
        [
            "apply (GAC_rel A B (fun x => exists y, R x y) R); auto.",
            "VernacExtend",
            "8ad44d6d0b8038a7ace523ae24c1ba9f6fca17b3"
        ],
        [
            "intros OAC_rel A B P R H.",
            "VernacExtend",
            "8eb81eea9b890a29c609790868a8e9656592389e"
        ],
        [
            "destruct (OAC_rel A B R) as (f,Hf); exists f; firstorder.",
            "VernacExtend",
            "aa58136fa6318bbfcccfe6c06f65a2c6fe24f5e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma guarded_fun_choice_imp_indep_of_general_premises : GuardedFunctionalChoice -> IndependenceOfGeneralPremises.",
            "VernacStartTheoremProof",
            "137a870f9f8902247548ba287d3d08828b3b2bd6"
        ],
        [
            "intros GAC_fun A P Q Inh H.",
            "VernacExtend",
            "2f2d027ac119cfbc9c3b8b2162a55f2971002484"
        ],
        [
            "destruct (GAC_fun unit A (fun _ => Q) (fun _ => P) Inh) as (f,Hf).",
            "VernacExtend",
            "0cb59739131392388f88c328f41bc3f06afc636c"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "exists (f tt); auto.",
            "VernacExtend",
            "200486341393ef48e23ad83902dc8f2081fe355e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma guarded_fun_choice_imp_fun_choice : GuardedFunctionalChoice -> FunctionalChoiceOnInhabitedSet.",
            "VernacStartTheoremProof",
            "6b2ce1cf2a19d8a4b9ff87c6e7bec15a0e44eab6"
        ],
        [
            "intros GAC_fun A B Inh R H.",
            "VernacExtend",
            "530b4cf6f7feaf6a88d5cdfc8892bf086d937a23"
        ],
        [
            "destruct (GAC_fun A B (fun _ => True) R Inh) as (f,Hf).",
            "VernacExtend",
            "01fd3ab9b1dbe9fff6b9c9bb95dc4820ca1a9937"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "exists f; auto.",
            "VernacExtend",
            "aa24125aa80aedebabee6f391ddd719fac195c8f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fun_choice_and_indep_general_prem_imp_guarded_fun_choice : FunctionalChoiceOnInhabitedSet -> IndependenceOfGeneralPremises -> GuardedFunctionalChoice.",
            "VernacStartTheoremProof",
            "844991add88b74f0a3b3bc331325fbac44e5bf1a"
        ],
        [
            "intros AC_fun IndPrem A B P R Inh H.",
            "VernacExtend",
            "4397c8acdfd5b4d83a4929c4b03c32fdd9a1ea13"
        ],
        [
            "apply (AC_fun A B Inh (fun x y => P x -> R x y)).",
            "VernacExtend",
            "9b05d26df394773dbb4adbd9b992394c5e021471"
        ],
        [
            "intro x; apply IndPrem; eauto.",
            "VernacExtend",
            "cdbe1a285f0b8323c7a126b5a71909f6a9a0de86"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary fun_choice_and_indep_general_prem_iff_guarded_fun_choice : FunctionalChoiceOnInhabitedSet /\\ IndependenceOfGeneralPremises <-> GuardedFunctionalChoice.",
            "VernacStartTheoremProof",
            "be37997a96b3f3ad4696e0fdece2674de2eefcc7"
        ],
        [
            "intuition auto using guarded_fun_choice_imp_indep_of_general_premises, guarded_fun_choice_imp_fun_choice, fun_choice_and_indep_general_prem_imp_guarded_fun_choice.",
            "VernacExtend",
            "17915a1ecaf9753cc79b6fb4be16e6918a77f23f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma omniscient_fun_choice_imp_small_drinker : OmniscientFunctionalChoice -> SmallDrinker'sParadox.",
            "VernacStartTheoremProof",
            "87c15d4ae6fcd65c95897b1e4a37bf6d3259e318"
        ],
        [
            "intros OAC_fun A P Inh.",
            "VernacExtend",
            "b3b857b06383074e65089dba8f982f665233cf48"
        ],
        [
            "destruct (OAC_fun unit A (fun _ => P)) as (f,Hf).",
            "VernacExtend",
            "a59930ebff5d0118c367993e8e748d75dde93c69"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "exists (f tt); firstorder.",
            "VernacExtend",
            "7f1627285d178405373d9cfcf39e3297f6eb5712"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma omniscient_fun_choice_imp_fun_choice : OmniscientFunctionalChoice -> FunctionalChoiceOnInhabitedSet.",
            "VernacStartTheoremProof",
            "32861d6067ec9a89fc0a58455ecc162d523a2b7f"
        ],
        [
            "intros OAC_fun A B Inh R H.",
            "VernacExtend",
            "7263ff4c5b45df33082b003efd2905c059e75caf"
        ],
        [
            "destruct (OAC_fun A B R Inh) as (f,Hf).",
            "VernacExtend",
            "18169752ab4338d238afd5e1dacfa76c3b157e4e"
        ],
        [
            "exists f; firstorder.",
            "VernacExtend",
            "d35e06a7309f86dfaad357297b91c141a3f7872e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fun_choice_and_small_drinker_imp_omniscient_fun_choice : FunctionalChoiceOnInhabitedSet -> SmallDrinker'sParadox -> OmniscientFunctionalChoice.",
            "VernacStartTheoremProof",
            "2735344dbe2a6c3ce39ecdb7d2885e4845ecbfd6"
        ],
        [
            "intros AC_fun Drinker A B R Inh.",
            "VernacExtend",
            "35424b5ef59be87637c86a0cc96463c91442e0f6"
        ],
        [
            "destruct (AC_fun A B Inh (fun x y => (exists y, R x y) -> R x y)) as (f,Hf).",
            "VernacExtend",
            "05c7f1bc879b5483961acc62e4051284a1e6a906"
        ],
        [
            "intro x; apply (Drinker B (R x) Inh).",
            "VernacExtend",
            "4c71eac71b2f19adfd6d680dc2b0e664daaa073e"
        ],
        [
            "exists f; assumption.",
            "VernacExtend",
            "cb51458b6973bce77d1150094ec7fcb9c5106f69"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary fun_choice_and_small_drinker_iff_omniscient_fun_choice : FunctionalChoiceOnInhabitedSet /\\ SmallDrinker'sParadox <-> OmniscientFunctionalChoice.",
            "VernacStartTheoremProof",
            "8a14764be1d31d3d6f11e529455fd7e688cf40f5"
        ],
        [
            "intuition auto using omniscient_fun_choice_imp_small_drinker, omniscient_fun_choice_imp_fun_choice, fun_choice_and_small_drinker_imp_omniscient_fun_choice.",
            "VernacExtend",
            "49fa3ec46c0862acb444e1108e077724a67d053a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem guarded_iff_omniscient_fun_choice : GuardedFunctionalChoice <-> OmniscientFunctionalChoice.",
            "VernacStartTheoremProof",
            "6f118d0252ea95f7aee9c98ece0c9e93af51316c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros GAC_fun A B R Inh.",
            "VernacExtend",
            "9e8c5342c1cfff00206b49e3d76f4dd4fa0f2b60"
        ],
        [
            "apply (GAC_fun A B (fun x => exists y, R x y) R); auto.",
            "VernacExtend",
            "4644f6f8325abdc482fff9f2bbc3fb39a94ed35a"
        ],
        [
            "intros OAC_fun A B P R Inh H.",
            "VernacExtend",
            "a5c7fce428800fcf12b4d4d36c483d76b2c3a97d"
        ],
        [
            "destruct (OAC_fun A B R Inh) as (f,Hf).",
            "VernacExtend",
            "18169752ab4338d238afd5e1dacfa76c3b157e4e"
        ],
        [
            "exists f; firstorder.",
            "VernacExtend",
            "d35e06a7309f86dfaad357297b91c141a3f7872e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma iota_imp_constructive_definite_description : IotaStatement -> ConstructiveDefiniteDescription.",
            "VernacStartTheoremProof",
            "f2d23691bb93cf171c4f59615a82a9541fe18dc0"
        ],
        [
            "intros D_iota A P H.",
            "VernacExtend",
            "b52b3c7603b420e5cf2d4f6fda810f8e77ea34bc"
        ],
        [
            "destruct D_iota with (P:=P) as (x,H1).",
            "VernacExtend",
            "b464203d1f1f01253d2822ae8082611733f7723a"
        ],
        [
            "destruct H; red in H; auto.",
            "VernacExtend",
            "809c5b8d89623697adf8b4a37d35bd1d0f408fc0"
        ],
        [
            "exists x; apply H1; assumption.",
            "VernacExtend",
            "4a90ea387381d53176097d3da0a1a4c520601339"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma epsilon_imp_constructive_indefinite_description: EpsilonStatement -> ConstructiveIndefiniteDescription.",
            "VernacStartTheoremProof",
            "716b85fffac7358f1a3404684d8bf1dd9f0c98ca"
        ],
        [
            "intros D_epsilon A P H.",
            "VernacExtend",
            "3c6aebc7c396c4c0e6fe57693305eb073fca76f0"
        ],
        [
            "destruct D_epsilon with (P:=P) as (x,H1).",
            "VernacExtend",
            "933bcec9a8181db43fc3e583593ed94dedc35b35"
        ],
        [
            "destruct H; auto.",
            "VernacExtend",
            "95ae427bd4e09a5f31c59184b718811a23ecb36f"
        ],
        [
            "exists x; apply H1; assumption.",
            "VernacExtend",
            "4a90ea387381d53176097d3da0a1a4c520601339"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma constructive_indefinite_description_and_small_drinker_imp_epsilon : SmallDrinker'sParadox -> ConstructiveIndefiniteDescription -> EpsilonStatement.",
            "VernacStartTheoremProof",
            "24c565639bd3ea967f646ed10eadcefa54517022"
        ],
        [
            "intros Drinkers D_epsilon A P Inh; apply D_epsilon; apply Drinkers; assumption.",
            "VernacExtend",
            "975fc1c5d1802ae8219345e72b7b1fcff561eaa2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma epsilon_imp_small_drinker : EpsilonStatement -> SmallDrinker'sParadox.",
            "VernacStartTheoremProof",
            "903b6a345733adc471e073e3a12ab875535f6190"
        ],
        [
            "intros D_epsilon A P Inh; edestruct D_epsilon; eauto.",
            "VernacExtend",
            "e75b6878651bf13ca7c9c3960db2f564e9607997"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem constructive_indefinite_description_and_small_drinker_iff_epsilon : (SmallDrinker'sParadox * ConstructiveIndefiniteDescription -> EpsilonStatement) * (EpsilonStatement -> SmallDrinker'sParadox * ConstructiveIndefiniteDescription).",
            "VernacStartTheoremProof",
            "d308947571970c1835a13a0dba3b78122ec665d0"
        ],
        [
            "intuition auto using epsilon_imp_constructive_indefinite_description, constructive_indefinite_description_and_small_drinker_imp_epsilon, epsilon_imp_small_drinker.",
            "VernacExtend",
            "ca780478d78efa24b2abf5b1d798fc466f519540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import Wf_nat.",
            "VernacRequire",
            "e78e8b6524a9771b7c95f37880c2b88f96465784"
        ],
        [
            "Require Import Decidable.",
            "VernacRequire",
            "8851c9d04f3102dc5a88a0aacb002aea74a866df"
        ],
        [
            "Lemma classical_denumerable_description_imp_fun_choice : forall A:Type, FunctionalRelReification_on A nat -> forall R:A->nat->Prop, (forall x y, decidable (R x y)) -> FunctionalChoice_on_rel R.",
            "VernacStartTheoremProof",
            "ea897a0c8bc72ec82f8201446d55e5f055df96e1"
        ],
        [
            "intros A Descr.",
            "VernacExtend",
            "a2b1d26bf09dc02d63eb6d7665e828d9af2f2897"
        ],
        [
            "red; intros R Rdec H.",
            "VernacExtend",
            "a27e5f7074f58778faa57969f8f406625916e38a"
        ],
        [
            "set (R':= fun x y => R x y /\\ forall y', R x y' -> y <= y').",
            "VernacExtend",
            "4875e399ca03d37a993f26080cdc22b48e0fdc5e"
        ],
        [
            "destruct (Descr R') as (f,Hf).",
            "VernacExtend",
            "b3f91843fff03e472e2a62bec3f4e8d47453628f"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "apply (dec_inh_nat_subset_has_unique_least_element (R x)).",
            "VernacExtend",
            "ea7a1882eae67a36e9fb8519a275c9b1bcdfa6b9"
        ],
        [
            "apply Rdec.",
            "VernacExtend",
            "0063cd8ecf9c0101aa6a89f0982ccb863d828faa"
        ],
        [
            "apply (H x).",
            "VernacExtend",
            "b16f8b7d3b4cb7520476aeccdc4537ab61318397"
        ],
        [
            "exists f.",
            "VernacExtend",
            "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (Hf x) as (Hfx,_).",
            "VernacExtend",
            "9fc2fa558a292ab9fc503f0efe8a6b688cd5e117"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem dep_non_dep_functional_choice : DependentFunctionalChoice -> FunctionalChoice.",
            "VernacStartTheoremProof",
            "a327242a27f72319c3b4fb29bf13aebac2b78c45"
        ],
        [
            "intros AC_depfun A B R H.",
            "VernacExtend",
            "240bfb2e692a3deac3c09369d701b8788764cf83"
        ],
        [
            "destruct (AC_depfun A (fun _ => B) R H) as (f,Hf).",
            "VernacExtend",
            "ffae1badd855eafdefe70bcbd786c8ae343b8681"
        ],
        [
            "exists f; trivial.",
            "VernacExtend",
            "ec7c823061824dde8d9c61f6febe653cd662ea04"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Scheme and_indd := Induction for and Sort Prop.",
            "VernacScheme",
            "b6989b53835db27d70594c078abad5ea560f0280"
        ],
        [
            "Scheme eq_indd := Induction for eq Sort Prop.",
            "VernacScheme",
            "8c3c8c8a95faab8c7796ccb128fd25f896da3188"
        ],
        [
            "Definition proj1_inf (A B:Prop) (p : A/\\B) := let (a,b) := p in a.",
            "VernacDefinition",
            "c1577495ea5bb44dea28c32ec5b089a03736f507"
        ],
        [
            "Theorem non_dep_dep_functional_choice : FunctionalChoice -> DependentFunctionalChoice.",
            "VernacStartTheoremProof",
            "14962fa6063f7ab5e067fb885e4d377d78127462"
        ],
        [
            "intros AC_fun A B R H.",
            "VernacExtend",
            "472be41ef6a8e518b973cb94a21a7d9ed4a912ee"
        ],
        [
            "pose (B' := { x:A & B x }).",
            "VernacExtend",
            "f5639b6918a0da936bf213e58a3be24657d5b8c8"
        ],
        [
            "pose (R' := fun (x:A) (y:B') => projT1 y = x /\\ R (projT1 y) (projT2 y)).",
            "VernacExtend",
            "3518ea66ec9e318a2a0c2dc888eef38f8a827e6d"
        ],
        [
            "destruct (AC_fun A B' R') as (f,Hf).",
            "VernacExtend",
            "07b02a0f7a5f5f0147252b8d01b5cce2304ab3fd"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (H x) as (y,Hy).",
            "VernacExtend",
            "2d7157a0f49fb2ad99191a81e13dedcfd0c2aa23"
        ],
        [
            "exists (existT (fun x => B x) x y).",
            "VernacExtend",
            "1c46361fc0991c112b4bdc47d5896fd66cfcbfc0"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))).",
            "VernacExtend",
            "19468b7ac8610785be335f21f01743f284b1b651"
        ],
        [
            "intro x; destruct (Hf x) as (Heq,HR) using and_indd.",
            "VernacExtend",
            "d9bce8e3326fcd08a414d1754ff099bebde7f171"
        ],
        [
            "destruct (f x); simpl in *.",
            "VernacExtend",
            "ca2c81dd93c12ec89b7916ca2fbd6aa073db8c6b"
        ],
        [
            "destruct Heq using eq_indd; trivial.",
            "VernacExtend",
            "41b87ba26c5d64b5d42ca52e57f9056696fc56ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem functional_choice_to_inhabited_forall_commute : FunctionalChoice -> InhabitedForallCommute.",
            "VernacStartTheoremProof",
            "f62fdf787271ba856c83ba0c6abe61e24809c20a"
        ],
        [
            "intros choose0 A B Hinhab.",
            "VernacExtend",
            "b2736fa1776636326b56e5ab03b5fe8567d47e8c"
        ],
        [
            "pose proof (non_dep_dep_functional_choice choose0) as choose;clear choose0.",
            "VernacExtend",
            "bd6b304f303a17fc25eddca3847d8583244eb726"
        ],
        [
            "assert (Hexists : forall x, exists _ : B x, True).",
            "VernacExtend",
            "2bda6f525b3881bac183bba269fce6d961c21770"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros x;apply inhabited_sig_to_exists.",
            "VernacExtend",
            "8928dbbe69ce52e3022d543886f61ad626c8c7ba"
        ],
        [
            "refine (inhabited_covariant _ (Hinhab x)).",
            "VernacExtend",
            "f15f0a0f226671f2fc9df783234a5357f9c8fe67"
        ],
        [
            "intros y;exists y;exact I.",
            "VernacExtend",
            "f1c2b799a6867cbb29bdd10ccb9c008faa5d7a6f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply choose in Hexists.",
            "VernacExtend",
            "68e9f346beaa43646332b98cecca5af99e5e034e"
        ],
        [
            "destruct Hexists as [f _].",
            "VernacExtend",
            "3b4059941e0c67425e7dfef4ed907071cdbe3d5a"
        ],
        [
            "exact (inhabits f).",
            "VernacExtend",
            "d3e21a6fa90edf0998ce684b837f5e46c2ec4f26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem inhabited_forall_commute_to_functional_choice : InhabitedForallCommute -> FunctionalChoice.",
            "VernacStartTheoremProof",
            "6a2b61b11c61f2c1e6ef053046b49288193fb17d"
        ],
        [
            "intros choose A B R Hexists.",
            "VernacExtend",
            "97a81c9d7158ece69fb9b2367db633f2ec307733"
        ],
        [
            "assert (Hinhab : forall x, inhabited {y : B | R x y}).",
            "VernacExtend",
            "c86a6295865aa24a5f2d5982e9dc88e9d7ad1ee1"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros x;apply exists_to_inhabited_sig;trivial.",
            "VernacExtend",
            "0f14ba263bca68be7028bdd4fa7e739ff2dd9b1a"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply choose in Hinhab.",
            "VernacExtend",
            "c95efcd83ae9ef74b86b535a8b19a0087b96ff33"
        ],
        [
            "destruct Hinhab as [f].",
            "VernacExtend",
            "d8076cd42685e166a2909ce2bc6f8e43040a0ab0"
        ],
        [
            "exists (fun x => proj1_sig (f x)).",
            "VernacExtend",
            "763c840f3ad9fd809dc5df92a435dff1ff3e4135"
        ],
        [
            "exact (fun x => proj2_sig (f x)).",
            "VernacExtend",
            "f012333f979ef5ea3cf1a89eca489683cbc84b0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem dep_non_dep_functional_rel_reification : DependentFunctionalRelReification -> FunctionalRelReification.",
            "VernacStartTheoremProof",
            "566da1b3c86ac437c9da7733fd95530b25a31cf5"
        ],
        [
            "intros DepFunReify A B R H.",
            "VernacExtend",
            "a248263c7e59b5c9986a82efa657179078a63f01"
        ],
        [
            "destruct (DepFunReify A (fun _ => B) R H) as (f,Hf).",
            "VernacExtend",
            "e16ee63bafaff23a018380ca3d20e485e592afea"
        ],
        [
            "exists f; trivial.",
            "VernacExtend",
            "ec7c823061824dde8d9c61f6febe653cd662ea04"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem non_dep_dep_functional_rel_reification : FunctionalRelReification -> DependentFunctionalRelReification.",
            "VernacStartTheoremProof",
            "cf7d2d5e578ced5b9ced2a80020793e04eb38af6"
        ],
        [
            "intros AC_fun A B R H.",
            "VernacExtend",
            "472be41ef6a8e518b973cb94a21a7d9ed4a912ee"
        ],
        [
            "pose (B' := { x:A & B x }).",
            "VernacExtend",
            "f5639b6918a0da936bf213e58a3be24657d5b8c8"
        ],
        [
            "pose (R' := fun (x:A) (y:B') => projT1 y = x /\\ R (projT1 y) (projT2 y)).",
            "VernacExtend",
            "3518ea66ec9e318a2a0c2dc888eef38f8a827e6d"
        ],
        [
            "destruct (AC_fun A B' R') as (f,Hf).",
            "VernacExtend",
            "07b02a0f7a5f5f0147252b8d01b5cce2304ab3fd"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (H x) as (y,(Hy,Huni)).",
            "VernacExtend",
            "84ab77501cd1e1d329130d971d1b8ef08165ee4d"
        ],
        [
            "exists (existT (fun x => B x) x y).",
            "VernacExtend",
            "1c46361fc0991c112b4bdc47d5896fd66cfcbfc0"
        ],
        [
            "repeat split; trivial.",
            "VernacExtend",
            "060692b05c8d85062072ae8d30e5549bb92445ef"
        ],
        [
            "intros (x',y') (Heqx',Hy').",
            "VernacExtend",
            "7a348c93c1ba61aeb2e5a66dccb191ef579532dc"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "destruct Heqx'.",
            "VernacExtend",
            "d47b5c7f75055b559df36694db2b03bb5c9ad66d"
        ],
        [
            "rewrite (Huni y'); trivial.",
            "VernacExtend",
            "575ad8ac078599219713c3b2b3100d9ab7f73192"
        ],
        [
            "exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))).",
            "VernacExtend",
            "19468b7ac8610785be335f21f01743f284b1b651"
        ],
        [
            "intro x; destruct (Hf x) as (Heq,HR) using and_indd.",
            "VernacExtend",
            "d9bce8e3326fcd08a414d1754ff099bebde7f171"
        ],
        [
            "destruct (f x); simpl in *.",
            "VernacExtend",
            "ca2c81dd93c12ec89b7916ca2fbd6aa073db8c6b"
        ],
        [
            "destruct Heq using eq_indd; trivial.",
            "VernacExtend",
            "41b87ba26c5d64b5d42ca52e57f9056696fc56ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary dep_iff_non_dep_functional_rel_reification : FunctionalRelReification <-> DependentFunctionalRelReification.",
            "VernacStartTheoremProof",
            "5648befa793d38a51e2d0d09dba2b0f8d74056c5"
        ],
        [
            "intuition auto using non_dep_dep_functional_rel_reification, dep_non_dep_functional_rel_reification.",
            "VernacExtend",
            "69ad26f4e4944934dfa2eff181b8f9aff38ef386"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma relative_non_contradiction_of_indefinite_descr : forall C:Prop, (ConstructiveIndefiniteDescription -> C) -> (FunctionalChoice -> C).",
            "VernacStartTheoremProof",
            "da4dc83f61a9589731eab8cfc0ab3a290a8fd7fe"
        ],
        [
            "intros C H AC_fun.",
            "VernacExtend",
            "f83e0573919b9da1977557d9deec208f71ef805a"
        ],
        [
            "assert (AC_depfun := non_dep_dep_functional_choice AC_fun).",
            "VernacExtend",
            "b45ea86396cd06efed952342d011dd3721b24f41"
        ],
        [
            "pose (A0 := { A:Type & { P:A->Prop & exists x, P x }}).",
            "VernacExtend",
            "92b9d59ac10c8587e49f7985c9aabbfd32675c39"
        ],
        [
            "pose (B0 := fun x:A0 => projT1 x).",
            "VernacExtend",
            "d5a5b71b67b5ca4b7b19ee946a39108166e66ef5"
        ],
        [
            "pose (R0 := fun x:A0 => fun y:B0 x => projT1 (projT2 x) y).",
            "VernacExtend",
            "c3fa577a99903587a0d0dde7eea38d82f7b0b296"
        ],
        [
            "pose (H0 := fun x:A0 => projT2 (projT2 x)).",
            "VernacExtend",
            "b79cccb90869b7fd5b5110feb7dde5f7a57f2ee7"
        ],
        [
            "destruct (AC_depfun A0 B0 R0 H0) as (f, Hf).",
            "VernacExtend",
            "f1e42a1378e481c204e355ad44ee53bd58bab9be"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "intros A P H'.",
            "VernacExtend",
            "fa13a0ff3713aae79c5d3b3a27cab45634ca0476"
        ],
        [
            "exists (f (existT _ A (existT _ P H'))).",
            "VernacExtend",
            "d068d7f6e987324193592f2b9e72ac4b9f724b9c"
        ],
        [
            "pose (Hf' := Hf (existT _ A (existT _ P H'))).",
            "VernacExtend",
            "401665058b0d9060a9157260ce567768b9c7c5cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma constructive_indefinite_descr_fun_choice : ConstructiveIndefiniteDescription -> FunctionalChoice.",
            "VernacStartTheoremProof",
            "90e25914be89e9f1297361bfae902f6eff805dd8"
        ],
        [
            "intros IndefDescr A B R H.",
            "VernacExtend",
            "ed958b9044efd2a2d48e84d9d8125293e70e3931"
        ],
        [
            "exists (fun x => proj1_sig (IndefDescr B (R x) (H x))).",
            "VernacExtend",
            "af15159d4af4d61cae0402b2ef5e5450207b8493"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "apply (proj2_sig (IndefDescr B (R x) (H x))).",
            "VernacExtend",
            "70f6a8aba7453c0988d772cf5569bd40c5bf346c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma relative_non_contradiction_of_definite_descr : forall C:Prop, (ConstructiveDefiniteDescription -> C) -> (FunctionalRelReification -> C).",
            "VernacStartTheoremProof",
            "d0823adf524a82961f874921edbcac8b5e0daaf0"
        ],
        [
            "intros C H FunReify.",
            "VernacExtend",
            "02718c4e5bf3988bb2ba6594d55575e50ea3c878"
        ],
        [
            "assert (DepFunReify := non_dep_dep_functional_rel_reification FunReify).",
            "VernacExtend",
            "6d18a9c34160c7a5b9cf8d367e10905dbc583483"
        ],
        [
            "pose (A0 := { A:Type & { P:A->Prop & exists! x, P x }}).",
            "VernacExtend",
            "41a4f3359ec35ffe969dadfd56aba0e33dcd2ef8"
        ],
        [
            "pose (B0 := fun x:A0 => projT1 x).",
            "VernacExtend",
            "d5a5b71b67b5ca4b7b19ee946a39108166e66ef5"
        ],
        [
            "pose (R0 := fun x:A0 => fun y:B0 x => projT1 (projT2 x) y).",
            "VernacExtend",
            "c3fa577a99903587a0d0dde7eea38d82f7b0b296"
        ],
        [
            "pose (H0 := fun x:A0 => projT2 (projT2 x)).",
            "VernacExtend",
            "b79cccb90869b7fd5b5110feb7dde5f7a57f2ee7"
        ],
        [
            "destruct (DepFunReify A0 B0 R0 H0) as (f, Hf).",
            "VernacExtend",
            "6a6dc6e1d3ec713f935ea105b6edf8c4be251c8d"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "intros A P H'.",
            "VernacExtend",
            "fa13a0ff3713aae79c5d3b3a27cab45634ca0476"
        ],
        [
            "exists (f (existT _ A (existT _ P H'))).",
            "VernacExtend",
            "d068d7f6e987324193592f2b9e72ac4b9f724b9c"
        ],
        [
            "pose (Hf' := Hf (existT _ A (existT _ P H'))).",
            "VernacExtend",
            "401665058b0d9060a9157260ce567768b9c7c5cb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma constructive_definite_descr_fun_reification : ConstructiveDefiniteDescription -> FunctionalRelReification.",
            "VernacStartTheoremProof",
            "6e728d37b0b38097443dbe2bc3022d64d2284e08"
        ],
        [
            "intros DefDescr A B R H.",
            "VernacExtend",
            "92c7bc653698a92cd044a31d5c943a7abd317bbe"
        ],
        [
            "exists (fun x => proj1_sig (DefDescr B (R x) (H x))).",
            "VernacExtend",
            "12bbc2bfe1004070fce627aa5a2b0f5d023f998c"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "apply (proj2_sig (DefDescr B (R x) (H x))).",
            "VernacExtend",
            "71e99c5384f0852c040b0941fa3d39c27bf18182"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import Setoid.",
            "VernacRequire",
            "284440985a70c8fcd47c58e3c189cb93b9ec0fcb"
        ],
        [
            "Theorem constructive_definite_descr_excluded_middle : (forall A : Type, ConstructiveDefiniteDescription_on A) -> (forall P:Prop, P \\/ ~ P) -> (forall P:Prop, {P} + {~ P}).",
            "VernacStartTheoremProof",
            "509fb44ad884b9f2e39aae4cc5b6b766cd9e25cd"
        ],
        [
            "intros Descr EM P.",
            "VernacExtend",
            "697295de93f5e83dda519557783f1e36444af577"
        ],
        [
            "pose (select := fun b:bool => if b then P else ~P).",
            "VernacExtend",
            "31ee79c3fe79496686098c6ccc773b2459b813ac"
        ],
        [
            "assert { b:bool | select b } as ([|],HP).",
            "VernacExtend",
            "34ba380e57ae01942f26d251910b3885725c6cc6"
        ],
        [
            "red in Descr.",
            "VernacExtend",
            "c6b7c4ff12f283444b6421d5b57a4ec39ccb3f0a"
        ],
        [
            "apply Descr.",
            "VernacExtend",
            "9fa5ed8537614e9d5b7c7fd56d30a8786d788738"
        ],
        [
            "rewrite <- unique_existence; split.",
            "VernacExtend",
            "aacee62f0b08765283029254dfb23219414d2f4d"
        ],
        [
            "destruct (EM P).",
            "VernacExtend",
            "c232cbe89f6c12cb17fdd8ecb16846469da32198"
        ],
        [
            "exists true; trivial.",
            "VernacExtend",
            "d8f416eaa8eb2d59bca9f6d091e1e77ccedc40fc"
        ],
        [
            "exists false; trivial.",
            "VernacExtend",
            "b042b5bf3a845850949035d38a51f2b510099e2e"
        ],
        [
            "intros [|] [|] H1 H2; simpl in *; reflexivity || contradiction.",
            "VernacExtend",
            "b218fb7bdb1062983827b195d4e1c34bcb869fb4"
        ],
        [
            "left; trivial.",
            "VernacExtend",
            "2f1efd67ff23560c270a9589d0d1b100a9c80732"
        ],
        [
            "right; trivial.",
            "VernacExtend",
            "0340ad4c708a2ae89a0d63d55c2e24a5dd555b53"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary fun_reification_descr_computational_excluded_middle_in_prop_context : FunctionalRelReification -> (forall P:Prop, P \\/ ~ P) -> forall C:Prop, ((forall P:Prop, {P} + {~ P}) -> C) -> C.",
            "VernacStartTheoremProof",
            "799649ad7dc1360a398671a05dfe7983baf69e97"
        ],
        [
            "intros FunReify EM C H.",
            "VernacExtend",
            "a5933989f14b3ec16bedbf00e6c90913805fb90c"
        ],
        [
            "intuition auto using constructive_definite_descr_excluded_middle, (relative_non_contradiction_of_definite_descr (C:=C)).",
            "VernacExtend",
            "2a2d31ad0e8ea9c79923c276e1bbfca850e7aa26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import Arith.",
            "VernacRequire",
            "7f40051ec5b363eee0bbfd802b43ad2f8b97479f"
        ],
        [
            "Theorem functional_choice_imp_functional_dependent_choice : FunctionalChoice -> FunctionalDependentChoice.",
            "VernacStartTheoremProof",
            "d587b73753f1899e0e9b10085aae9d40829596dc"
        ],
        [
            "intros FunChoice A R HRfun x0.",
            "VernacExtend",
            "3a28c50ba7bce76e591da5ca2d9667d4e31a9c58"
        ],
        [
            "apply FunChoice in HRfun as (g,Rg).",
            "VernacExtend",
            "b915fcfeea169a5e7f6ddf8a6e60dd565986046a"
        ],
        [
            "set (f:=fix f n := match n with 0 => x0 | S n' => g (f n') end).",
            "VernacExtend",
            "ce055840cfc9b555c019381c9c0ce4047edf0b12"
        ],
        [
            "exists f; firstorder.",
            "VernacExtend",
            "d35e06a7309f86dfaad357297b91c141a3f7872e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem functional_dependent_choice_imp_functional_countable_choice : FunctionalDependentChoice -> FunctionalCountableChoice.",
            "VernacStartTheoremProof",
            "82ab1aed7e18a57c0b8ad9d111eb730b3fe049e9"
        ],
        [
            "intros H A R H0.",
            "VernacExtend",
            "51fc37ba8cdbb00e255b7f357fccee3f9ecf1f77"
        ],
        [
            "set (R' (p q:nat*A) := fst q = S (fst p) /\\ R (fst p) (snd q)).",
            "VernacExtend",
            "83f1a88f1b82fdb00c8aa55f01d8e5cc621a7307"
        ],
        [
            "destruct (H0 0) as (y0,Hy0).",
            "VernacExtend",
            "b75b37c57f8e19ebd8220977931c1668c3ac9dbb"
        ],
        [
            "destruct H with (R:=R') (x0:=(0,y0)) as (f,(Hf0,HfS)).",
            "VernacExtend",
            "f0add29652aa9dbd612a1f0e299fa9ab26652005"
        ],
        [
            "intro x; destruct (H0 (fst x)) as (y,Hy).",
            "VernacExtend",
            "87812dc5275d34b95bd4a32f72ffa6913e7031df"
        ],
        [
            "exists (S (fst x),y).",
            "VernacExtend",
            "dd03a95c4513641d9bf6a138bd0bf9285aa96c04"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "assert (Heq:forall n, fst (f n) = n).",
            "VernacExtend",
            "13e325c036138309d348bac970ed0286b42bb8e8"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "rewrite Hf0; reflexivity.",
            "VernacExtend",
            "82df37b781d0cd328d0137d94d1177bfcf9dec0b"
        ],
        [
            "specialize HfS with n; destruct HfS as (->,_); congruence.",
            "VernacExtend",
            "29e371f6d0427fb147e3c3f4e2bfd6c3e0559ebb"
        ],
        [
            "exists (fun n => snd (f (S n))).",
            "VernacExtend",
            "e426c861891cac4e7f6984fdc21d33f560e3248a"
        ],
        [
            "intro n'.",
            "VernacExtend",
            "da4c07ef3078b0a44eb64c44004ba6f71b69a2a9"
        ],
        [
            "specialize HfS with n'.",
            "VernacExtend",
            "cf74c30521cc4fc1a337f6a97e50656c1f14c3c3"
        ],
        [
            "destruct HfS as (_,HR).",
            "VernacExtend",
            "577a4ebf4d03a2e4efcb2ae39da6037b1ad18fbd"
        ],
        [
            "rewrite Heq in HR.",
            "VernacExtend",
            "e3dc4419ff696909e2ae3984ab75a606e0e9a8d5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import ClassicalFacts PropExtensionalityFacts.",
            "VernacRequire",
            "44488a49d09ba767c5fd46056debca0e50e6e2b0"
        ],
        [
            "Theorem repr_fun_choice_imp_ext_prop_repr : RepresentativeFunctionalChoice -> ExtensionalPropositionRepresentative.",
            "VernacStartTheoremProof",
            "801659a60bf5bbbc8d8ad026cd6fcff2cf6f7779"
        ],
        [
            "intros ReprFunChoice A.",
            "VernacExtend",
            "c1a03ceee2d00d71904977bfba4863ed5ee28a43"
        ],
        [
            "pose (R P Q := P <-> Q).",
            "VernacExtend",
            "c2773a84cb3bb05d633cc6c705d15d40a01b4d7f"
        ],
        [
            "assert (Hequiv:Equivalence R) by (split; firstorder).",
            "VernacExtend",
            "46fe388b7dc96e0756fb7bce9be486de669d3377"
        ],
        [
            "apply (ReprFunChoice _ R Hequiv).",
            "VernacExtend",
            "afaa7c226b7d7a879656a659a9a0ab7d7653a7d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem repr_fun_choice_imp_ext_pred_repr : RepresentativeFunctionalChoice -> ExtensionalPredicateRepresentative.",
            "VernacStartTheoremProof",
            "c77ba783808ef9dd919be1c196799464512d9c6e"
        ],
        [
            "intros ReprFunChoice A.",
            "VernacExtend",
            "c1a03ceee2d00d71904977bfba4863ed5ee28a43"
        ],
        [
            "pose (R P Q := forall x : A, P x <-> Q x).",
            "VernacExtend",
            "e7935d1971429d24a8df83a21a06c7b6db646ba6"
        ],
        [
            "assert (Hequiv:Equivalence R) by (split; firstorder).",
            "VernacExtend",
            "46fe388b7dc96e0756fb7bce9be486de669d3377"
        ],
        [
            "apply (ReprFunChoice _ R Hequiv).",
            "VernacExtend",
            "afaa7c226b7d7a879656a659a9a0ab7d7653a7d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem repr_fun_choice_imp_ext_function_repr : RepresentativeFunctionalChoice -> ExtensionalFunctionRepresentative.",
            "VernacStartTheoremProof",
            "307317188d39c494b1c92283078d178ba6d8318b"
        ],
        [
            "intros ReprFunChoice A B.",
            "VernacExtend",
            "1348702ef09edf6a55abf691c6f6ed9664ad5b5f"
        ],
        [
            "pose (R (f g : A -> B) := forall x : A, f x = g x).",
            "VernacExtend",
            "77dd2bc7ceb01a35ffb03ec60fe663249ddcb93a"
        ],
        [
            "assert (Hequiv:Equivalence R).",
            "VernacExtend",
            "1aa80d11e8116f3a3dc70bdaadad4ab30cad2b94"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; try easy.",
            "VernacExtend",
            "6a71419e22bf1e10ff817d0469549bc079471092"
        ],
        [
            "firstorder using eq_trans.",
            "VernacExtend",
            "0fac3d19285b3767c7208cdd3d4e7e40ed2f877b"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply (ReprFunChoice _ R Hequiv).",
            "VernacExtend",
            "afaa7c226b7d7a879656a659a9a0ab7d7653a7d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem repr_fun_choice_imp_excluded_middle : RepresentativeFunctionalChoice -> ExcludedMiddle.",
            "VernacStartTheoremProof",
            "13f0e226e5faafb6d2bde4efa907a6222c138d6b"
        ],
        [
            "intros ReprFunChoice.",
            "VernacExtend",
            "8b29c4d82d847df286fdcd91ac98245b9a134b34"
        ],
        [
            "apply representative_boolean_partition_imp_excluded_middle, ReprFunChoice.",
            "VernacExtend",
            "222f39ec3a3110de8319c52b68cc558601c27c65"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem repr_fun_choice_imp_relational_choice : RepresentativeFunctionalChoice -> RelationalChoice.",
            "VernacStartTheoremProof",
            "269b85cf57f3cd3ea304178793c250538de5028f"
        ],
        [
            "intros ReprFunChoice A B T Hexists.",
            "VernacExtend",
            "7223800b63c634437c9c31d0b055690c8592613b"
        ],
        [
            "pose (D := (A*B)%type).",
            "VernacExtend",
            "3e6417e51fbe9242291d9680520d0aa7c0eadbae"
        ],
        [
            "pose (R (z z':D) := let x := fst z in let x' := fst z' in let y := snd z in let y' := snd z' in x = x' /\\ (T x y -> y = y' \\/ T x y') /\\ (T x y' -> y = y' \\/ T x y)).",
            "VernacExtend",
            "532195ce7ac78c7ec10b0b73bfa902eb3cc59394"
        ],
        [
            "assert (Hequiv : Equivalence R).",
            "VernacExtend",
            "1aa80d11e8116f3a3dc70bdaadad4ab30cad2b94"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (x,y) (x',y') (H1,(H2,H2')).",
            "VernacExtend",
            "eba12355fbfdd218dce1d306e65180afbad49178"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "simpl fst in *.",
            "VernacExtend",
            "f1535698ca93ac80445e2fbe5d457f8a3df71731"
        ],
        [
            "simpl snd in *.",
            "VernacExtend",
            "8b803e817ff0840cb03435488963498729b05595"
        ],
        [
            "subst x'.",
            "VernacExtend",
            "23d87e38863f5f14801b3504b95b86a8137d78de"
        ],
        [
            "split; intro H.",
            "VernacExtend",
            "496dd5fc77c723ff896bbd9bc6dee3ccc3aa9bde"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (H2' H); firstorder.",
            "VernacExtend",
            "f8e06bd81e8958686a6595bbcf75d9a95578ce36"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (H2 H); firstorder.",
            "VernacExtend",
            "3f8a53b76db7365f11ada6034767fbda62198580"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (x,y) (x',y') (x'',y'') (H1,(H2,H2')) (H3,(H4,H4')).",
            "VernacExtend",
            "43d843bee9c09c1d86d55181c9c4c79ce1d92851"
        ],
        [
            "simpl fst in *.",
            "VernacExtend",
            "f1535698ca93ac80445e2fbe5d457f8a3df71731"
        ],
        [
            "simpl snd in *.",
            "VernacExtend",
            "8b803e817ff0840cb03435488963498729b05595"
        ],
        [
            "subst x'' x'.",
            "VernacExtend",
            "4f6c8c64e13ed254336554928a297ae60caa2f6b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "split; intro H.",
            "VernacExtend",
            "496dd5fc77c723ff896bbd9bc6dee3ccc3aa9bde"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl fst in *.",
            "VernacExtend",
            "f1535698ca93ac80445e2fbe5d457f8a3df71731"
        ],
        [
            "simpl snd in *.",
            "VernacExtend",
            "8b803e817ff0840cb03435488963498729b05595"
        ],
        [
            "destruct (H2 H) as [<-|H0].",
            "VernacExtend",
            "df9574561b31841c14e2a4cf7ae190f22f7d95f2"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct (H4 H); firstorder.",
            "VernacExtend",
            "3102d5a25f3bbad17feba4e37755dd5de4c776bd"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct (H2' H0), (H4 H0); try subst y'; try subst y''; try firstorder.",
            "VernacExtend",
            "cc24c9953f2b1b0217c521ace2d8e486dedd02d6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl fst in *.",
            "VernacExtend",
            "f1535698ca93ac80445e2fbe5d457f8a3df71731"
        ],
        [
            "simpl snd in *.",
            "VernacExtend",
            "8b803e817ff0840cb03435488963498729b05595"
        ],
        [
            "destruct (H4' H) as [<-|H0].",
            "VernacExtend",
            "20896e060ada9258d988bf021ff61f445eff665d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct (H2' H); firstorder.",
            "VernacExtend",
            "f8e06bd81e8958686a6595bbcf75d9a95578ce36"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct (H2' H0), (H4 H0); try subst y'; try subst y''; try firstorder.",
            "VernacExtend",
            "cc24c9953f2b1b0217c521ace2d8e486dedd02d6"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (ReprFunChoice D R Hequiv) as (g,Hg).",
            "VernacExtend",
            "054bd9c0cd4e0b636866dd32ac9478e50c5c98bd"
        ],
        [
            "set (T' x y := T x y /\\ exists y', T x y' /\\ g (x,y') = (x,y)).",
            "VernacExtend",
            "0071a2bd6d4c26c2b3c68f059980b184c3ad6f0e"
        ],
        [
            "exists T'.",
            "VernacExtend",
            "1dc8f8d879ab54d7665d007debe5a9266a865b06"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros x y (H,_); easy.",
            "VernacExtend",
            "93176bddbfdf3e72c35dde9146e1f9174604c7a0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "destruct (Hexists x) as (y,Hy).",
            "VernacExtend",
            "5767ea10a6d2f4cf2b995214a19f99407ab8fe12"
        ],
        [
            "exists (snd (g (x,y))).",
            "VernacExtend",
            "7a1b4f5d3dd5967e917becc56a0785acd5f1d877"
        ],
        [
            "destruct (Hg (x,y)) as ((Heq1,(H',H'')),Hgxyuniq); clear Hg.",
            "VernacExtend",
            "8d59a40f1cf5292d8e611e88daaa889380fcb11e"
        ],
        [
            "destruct (H' Hy) as [Heq2|Hgy]; clear H'.",
            "VernacExtend",
            "bd7846e6e24a31318e149e81dd0f3dae531e8a3e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "rewrite <- Heq2.",
            "VernacExtend",
            "3f0c9fd650272b9620ee201b675737704fe1cef7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exists y.",
            "VernacExtend",
            "1c06cb2466f48b6def24e74ddeda9956981c0a0a"
        ],
        [
            "destruct (g (x,y)) as (x',y').",
            "VernacExtend",
            "d025de35e29be2d8e19fabc0caac06592f6d47e0"
        ],
        [
            "simpl in Heq1, Heq2.",
            "VernacExtend",
            "b792961b306cd6101ccfbf02a312e79971491bb1"
        ],
        [
            "subst; easy.",
            "VernacExtend",
            "7273e0f2f059e5a43bc46a731c0087a6dd17df74"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros y' (Hy',(y'',(Hy'',Heq))).",
            "VernacExtend",
            "5420afa1bb4957b762a786eee999f5ac8aa8ef16"
        ],
        [
            "rewrite (Hgxyuniq (x,y'')), Heq.",
            "VernacExtend",
            "419dec6b0d76838f3711cdd1edb78ee6f9c5a4ee"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "split; right; easy.",
            "VernacExtend",
            "060167b39d34099b3aa0ebc95ee3ee57c8ed75c3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exists y.",
            "VernacExtend",
            "1c06cb2466f48b6def24e74ddeda9956981c0a0a"
        ],
        [
            "destruct (g (x,y)) as (x',y').",
            "VernacExtend",
            "d025de35e29be2d8e19fabc0caac06592f6d47e0"
        ],
        [
            "simpl in Heq1.",
            "VernacExtend",
            "dc5148d3c35ae43711a0bff9ea030361506ddc04"
        ],
        [
            "subst x'; easy.",
            "VernacExtend",
            "86711bbbaf3b6e6b3d7d19a0bfbef306da941d37"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros y' (Hy',(y'',(Hy'',Heq))).",
            "VernacExtend",
            "5420afa1bb4957b762a786eee999f5ac8aa8ef16"
        ],
        [
            "rewrite (Hgxyuniq (x,y'')), Heq.",
            "VernacExtend",
            "419dec6b0d76838f3711cdd1edb78ee6f9c5a4ee"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "split; right; easy.",
            "VernacExtend",
            "060167b39d34099b3aa0ebc95ee3ee57c8ed75c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem gen_setoid_fun_choice_imp_setoid_fun_choice : forall A B, GeneralizedSetoidFunctionalChoice_on A B -> SetoidFunctionalChoice_on A B.",
            "VernacStartTheoremProof",
            "92b8b5f944db116a9b37fc908a354f76d3793b14"
        ],
        [
            "intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex.",
            "VernacExtend",
            "98b441d8909d3b7140b533154bcf2026404a864e"
        ],
        [
            "apply GenSetoidFunChoice; try easy.",
            "VernacExtend",
            "f7f79054c4a97e2249b105e16685032bafb1a7ac"
        ],
        [
            "apply eq_equivalence.",
            "VernacExtend",
            "5bf0916ed779f70e7d4dcc171aa599e381d16863"
        ],
        [
            "intros * H <-.",
            "VernacExtend",
            "0de7a70904fd613d9e58ddf143ca75c30502f857"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem setoid_fun_choice_imp_gen_setoid_fun_choice : forall A B, SetoidFunctionalChoice_on A B -> GeneralizedSetoidFunctionalChoice_on A B.",
            "VernacStartTheoremProof",
            "812dc25251ea4f02baf6c5cd173ca4235adb7267"
        ],
        [
            "intros A B SetoidFunChoice R S T HequivR HequivS Hcompat Hex.",
            "VernacExtend",
            "3faebc788eaaed84f74ec438c02b4a10b56b429e"
        ],
        [
            "destruct SetoidFunChoice with (R:=R) (T:=T) as (f,Hf); try easy.",
            "VernacExtend",
            "785583a5da6b15e6f15afb814c76ecc6716db925"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros; apply (Hcompat x x' y y); try easy.",
            "VernacExtend",
            "a730ecb737b46fb4d7f66fa8baeb989ef878dab8"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "exists f.",
            "VernacExtend",
            "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
        ],
        [
            "intros x; specialize Hf with x as (Hf,Huniq).",
            "VernacExtend",
            "814a53518a301f24090354ddc63943a1b6ea569e"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "now erewrite Huniq.",
            "VernacExtend",
            "c1e8f352cc169f04e6d0bfb8b579f3d087573122"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary setoid_fun_choice_iff_gen_setoid_fun_choice : forall A B, SetoidFunctionalChoice_on A B <-> GeneralizedSetoidFunctionalChoice_on A B.",
            "VernacStartTheoremProof",
            "90eea30beb1a364d2ee205f4ed40e97f29347264"
        ],
        [
            "split; auto using gen_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_gen_setoid_fun_choice.",
            "VernacExtend",
            "c091fb750d785a54d8f1e91a85af581890750279"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem setoid_fun_choice_imp_simple_setoid_fun_choice : forall A B, SetoidFunctionalChoice_on A B -> SimpleSetoidFunctionalChoice_on A B.",
            "VernacStartTheoremProof",
            "b251132a2882b00d6bb4e66b06fd91d9cf94f5d5"
        ],
        [
            "intros A B SetoidFunChoice R T Hequiv Hexists.",
            "VernacExtend",
            "e018201d244f45e688a45710ddcdeeafabd0ad0b"
        ],
        [
            "pose (T' x y := forall x', R x x' -> T x' y).",
            "VernacExtend",
            "3564aa44d9e12fde7b91362be64415b9e3d6c803"
        ],
        [
            "assert (Hcompat : forall (x x' : A) (y : B), R x x' -> T' x y -> T' x' y) by firstorder.",
            "VernacExtend",
            "a86cd4244b8ac01f340a320d5527aeb2037da4bf"
        ],
        [
            "destruct (SetoidFunChoice R T' Hequiv Hcompat Hexists) as (f,Hf).",
            "VernacExtend",
            "f8fa43bbdeda943e44fca1c6361ab65c9d21a984"
        ],
        [
            "exists f.",
            "VernacExtend",
            "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem simple_setoid_fun_choice_imp_setoid_fun_choice : forall A B, SimpleSetoidFunctionalChoice_on A B -> SetoidFunctionalChoice_on A B.",
            "VernacStartTheoremProof",
            "78381b049fa4c10f04ec26f8e53190c88f0a3841"
        ],
        [
            "intros A B SimpleSetoidFunChoice R T Hequiv Hcompat Hexists.",
            "VernacExtend",
            "17095761ca613bde000829ad8a0fe6788b89c4f4"
        ],
        [
            "destruct (SimpleSetoidFunChoice R T Hequiv) as (f,Hf); firstorder.",
            "VernacExtend",
            "3fb512ca39b20859f1f63eaf759c0212bcc48d3d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary setoid_fun_choice_iff_simple_setoid_fun_choice : forall A B, SetoidFunctionalChoice_on A B <-> SimpleSetoidFunctionalChoice_on A B.",
            "VernacStartTheoremProof",
            "a62e3209c21385843451ceda2f16d0ab3e2037fc"
        ],
        [
            "split; auto using simple_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_simple_setoid_fun_choice.",
            "VernacExtend",
            "a9a18b8a84ef95ab557956cf76e0bc12522f79b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem setoid_fun_choice_imp_fun_choice : forall A B, SetoidFunctionalChoice_on A B -> FunctionalChoice_on A B.",
            "VernacStartTheoremProof",
            "a6f60bba48298f1744d6ceefcedfeadea4cc1ebb"
        ],
        [
            "intros A B SetoidFunChoice T Hexists.",
            "VernacExtend",
            "cbcd1e54a12dca0b829d8c70dbfbae78ebb2e3d8"
        ],
        [
            "destruct SetoidFunChoice with (R:=@eq A) (T:=T) as (f,Hf).",
            "VernacExtend",
            "c0f7b48b4f546a063dce983d8106723916a1dd61"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply eq_equivalence.",
            "VernacExtend",
            "5bf0916ed779f70e7d4dcc171aa599e381d16863"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now intros * ->.",
            "VernacExtend",
            "d704f6d4a7698562275b3a369c9d6bbfbb5db264"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists f.",
            "VernacExtend",
            "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary setoid_fun_choice_imp_functional_rel_reification : forall A B, SetoidFunctionalChoice_on A B -> FunctionalRelReification_on A B.",
            "VernacStartTheoremProof",
            "b867f93c04b2e898c6769d23ee41f51faf41b0df"
        ],
        [
            "intros A B SetoidFunChoice.",
            "VernacExtend",
            "dd430072fa476983b677e0579e39652ab9158fb5"
        ],
        [
            "apply fun_choice_imp_functional_rel_reification.",
            "VernacExtend",
            "a7cd9bda3741497de6db4c993fdef39165bd1c0c"
        ],
        [
            "now apply setoid_fun_choice_imp_fun_choice.",
            "VernacExtend",
            "a4e341bbc56b7c47df71491afe74af1be199cd6b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem setoid_fun_choice_imp_repr_fun_choice : SetoidFunctionalChoice -> RepresentativeFunctionalChoice .",
            "VernacStartTheoremProof",
            "bb2c91c5d8995a47438b4206c991ecc7f1c64e71"
        ],
        [
            "intros SetoidFunChoice A R Hequiv.",
            "VernacExtend",
            "3a021512fc8ac1cd0582f89e2a69667c41fdcd37"
        ],
        [
            "apply SetoidFunChoice; firstorder.",
            "VernacExtend",
            "ccc338d03b116f21afd6e46618f4f1891bc54743"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice : FunctionalRelReification -> RepresentativeFunctionalChoice -> SetoidFunctionalChoice.",
            "VernacStartTheoremProof",
            "5c1431749a395305760c154f10a72a7415f8609f"
        ],
        [
            "intros FunRelReify ReprFunChoice A B R T Hequiv Hcompat Hexists.",
            "VernacExtend",
            "8de2daba209ac667e5977633c2fa6f4d8f6c8435"
        ],
        [
            "assert (FunChoice : FunctionalChoice).",
            "VernacExtend",
            "1a2ea6744fed7d3bf87cfe2db3ef1fd10dc8b065"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros A' B'.",
            "VernacExtend",
            "a0e1143b1603f1f2236a7f7a24be0e41d8977424"
        ],
        [
            "apply functional_rel_reification_and_rel_choice_imp_fun_choice.",
            "VernacExtend",
            "fffbe97d20d650aa2044e20bdf6ea1225cbac1da"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply FunRelReify.",
            "VernacExtend",
            "b9cad5c91b746c2055a2a5989f372882cbe8f319"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now apply repr_fun_choice_imp_relational_choice.",
            "VernacExtend",
            "7e7678a2a7f09723f9bf7359e25d5ca7de6adaaa"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (FunChoice _ _ T Hexists) as (f,Hf).",
            "VernacExtend",
            "ac0d1349f6e8f7c8e6b90b3bd9c7408da010751e"
        ],
        [
            "destruct (ReprFunChoice A R Hequiv) as (g,Hg).",
            "VernacExtend",
            "054943b1fff78d69f489bc45df517d5873c81f6d"
        ],
        [
            "exists (fun a => f (g a)).",
            "VernacExtend",
            "b20bb89c5e1711cf7bb3a62e3533956b03c2cdcb"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "destruct (Hg x) as (Hgx,HRuniq).",
            "VernacExtend",
            "c8a720fdfed242df81a3944161b8995a3391b22d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply Hcompat.",
            "VernacExtend",
            "d276c966bdd63719a4d6b248664a56e4d19ed545"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Hgx.",
            "VernacExtend",
            "568ce71d32aca83fe2d19d7b3ab3124ee83f599f"
        ],
        [
            "apply Hf.",
            "VernacExtend",
            "44e8b4102d20ba355038f72fc52240fc6cb8650c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros y Hxy.",
            "VernacExtend",
            "1952a89185a51f8d726deedc1c1b5257ff95b503"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice : FunctionalRelReification /\\ RepresentativeFunctionalChoice <-> SetoidFunctionalChoice.",
            "VernacStartTheoremProof",
            "2144e9c149314d665e588ad5550355f6abe7506a"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice.",
            "VernacExtend",
            "8888a8d9eb8be85d43b144b2e0de7d5ed13e8798"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now intros A B; apply setoid_fun_choice_imp_functional_rel_reification.",
            "VernacExtend",
            "002d8c3e598461750379e27011692e41fa258094"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply setoid_fun_choice_imp_repr_fun_choice.",
            "VernacExtend",
            "3b2452ccdbc66902d4ae64f1e906790d8fdb6b81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Import EqNotations.",
            "VernacImport",
            "e2dc00d26e8993f9a64b053fd29c9c5376d24f50"
        ],
        [
            "Theorem fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice : FunctionalChoice -> ExtensionalFunctionRepresentative -> ExcludedMiddle -> RepresentativeFunctionalChoice.",
            "VernacStartTheoremProof",
            "ef7b831a407bd8e5a921d7e0aad9d6c91d028ca6"
        ],
        [
            "intros FunChoice SetoidFunRepr EM A R (Hrefl,Hsym,Htrans).",
            "VernacExtend",
            "502946b3612aa0de452c71733ea2eedf4c84653a"
        ],
        [
            "assert (H:forall P:Prop, exists b, b = true <-> P).",
            "VernacExtend",
            "002da129c81498a53abcf28aedb150bb3e18d3bf"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros P.",
            "VernacExtend",
            "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
        ],
        [
            "destruct (EM P).",
            "VernacExtend",
            "c232cbe89f6c12cb17fdd8ecb16846469da32198"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists true; firstorder.",
            "VernacExtend",
            "e87b2d57336a20ecfcc21802a6f3640ef5d43e9f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists false; easy.",
            "VernacExtend",
            "841d8f3e322745bec649dbe6267ba0d5e7fa9fed"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct (FunChoice _ _ _ H) as (c,Hc).",
            "VernacExtend",
            "25b5b511adadeca9af3697294e83f1d7ae3e18d0"
        ],
        [
            "pose (class_of a y := c (R a y)).",
            "VernacExtend",
            "3bd86fa498a388fdbd80adcb360d05fbb0aef30a"
        ],
        [
            "pose (isclass f := exists x:A, f x = true).",
            "VernacExtend",
            "8c8189ccca6d8e63c8e6560c7f42ddc37696943a"
        ],
        [
            "pose (class := {f:A -> bool | isclass f}).",
            "VernacExtend",
            "f124ae260dbe5218ea173401cca23323daf6cc17"
        ],
        [
            "pose (contains (c:class) (a:A) := proj1_sig c a = true).",
            "VernacExtend",
            "fb8cec09d7dfea5ad65a01498da78c191ffb65bb"
        ],
        [
            "destruct (FunChoice class A contains) as (f,Hf).",
            "VernacExtend",
            "9adfece07d12baac18ddb919586ffefc25bbc45d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros f.",
            "VernacExtend",
            "d55304fde379b586a2d23f40fabc5399298bf19a"
        ],
        [
            "destruct (proj2_sig f) as (x,Hx).",
            "VernacExtend",
            "dfdb9cabdc46df0e373ad52ffee3bec50becfe8f"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (SetoidFunRepr A bool) as (h,Hh).",
            "VernacExtend",
            "2e973d3e5fd2270a8c27e803ae41a951bfdabe44"
        ],
        [
            "assert (Hisclass:forall a, isclass (h (class_of a))).",
            "VernacExtend",
            "6d46738aa1e5c89f4b7bcd6f14630e16cf0a2a00"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro a.",
            "VernacExtend",
            "14896994838b4c124c1f1123678e1f3468f5e2ea"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "destruct (Hh (class_of a)) as (Ha,Huniqa).",
            "VernacExtend",
            "a7175befa3a90eb1396182945d953e553eb71e7b"
        ],
        [
            "rewrite <- Ha.",
            "VernacExtend",
            "b1125c5e356fa2badf3ffefe49c0da60d96b65ff"
        ],
        [
            "apply Hc.",
            "VernacExtend",
            "b900f3304ba75d1bc8becba9c3e19edfabbb7700"
        ],
        [
            "apply Hrefl.",
            "VernacExtend",
            "ae2f7f1a023c582f19ae5f7d0d93edc4aa33502f"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "pose (f':= fun a => exist _ (h (class_of a)) (Hisclass a) : class).",
            "VernacExtend",
            "1fc438eef45b32d0aeaf1d2a8a5e1a88efb8baa7"
        ],
        [
            "exists (fun a => f (f' a)).",
            "VernacExtend",
            "af226f058f57987106864bf44b50f72dee2fd20d"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (Hh (class_of x)) as (Hx,Huniqx).",
            "VernacExtend",
            "8398b80f8ad959c81e2dcba4f80539c3cbf6901e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "specialize Hf with (f' x).",
            "VernacExtend",
            "746288fba27e9e01b0b3444c35af1bb561f8f098"
        ],
        [
            "unfold contains in Hf.",
            "VernacExtend",
            "c6f81fc29884cb96a01eeb5d683e68b1de1ee189"
        ],
        [
            "simpl in Hf.",
            "VernacExtend",
            "fcb5032bdc02ce318beb038babaea61e5194fe85"
        ],
        [
            "rewrite <- Hx in Hf.",
            "VernacExtend",
            "2114b0674aaed433f85e9ec625ef5e66cc02b01c"
        ],
        [
            "apply Hc.",
            "VernacExtend",
            "b900f3304ba75d1bc8becba9c3e19edfabbb7700"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros y Hxy.",
            "VernacExtend",
            "1952a89185a51f8d726deedc1c1b5257ff95b503"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "assert (Heq1: h (class_of x) = h (class_of y)).",
            "VernacExtend",
            "9b57174db556a355217e7e00d6ab3e11bd90873b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Huniqx.",
            "VernacExtend",
            "276992fca2e37e7622b0491c86b5d88225ddb8e4"
        ],
        [
            "intro z.",
            "VernacExtend",
            "4eaa711923e3411ac49bd57d091f8de45ca09388"
        ],
        [
            "unfold class_of.",
            "VernacExtend",
            "0bc58d600ac3b8408637df749a49937ffc1e8471"
        ],
        [
            "destruct (c (R x z)) eqn:Hxz.",
            "VernacExtend",
            "9b0d5d70a4612df5ab544c3e9cec640560805b6d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply Hc.",
            "VernacExtend",
            "b900f3304ba75d1bc8becba9c3e19edfabbb7700"
        ],
        [
            "apply -> Hc in Hxz.",
            "VernacExtend",
            "29c8758111e66531f2e539847cd09526919a6229"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (c (R y z)) eqn:Hyz.",
            "VernacExtend",
            "6e943e2624790a9e0dc7daed4944bb4d94786769"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply -> Hc in Hyz.",
            "VernacExtend",
            "2efa2c972c11baead75d767f1c914f1e4f07860f"
        ],
        [
            "rewrite <- Hxz.",
            "VernacExtend",
            "17f9ae856eda2d48aa88008176e4acdd2a0f05f7"
        ],
        [
            "apply Hc.",
            "VernacExtend",
            "b900f3304ba75d1bc8becba9c3e19edfabbb7700"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Heq2:rew Heq1 in Hisclass x = Hisclass y).",
            "VernacExtend",
            "12583ef2beedd24a67d35db545eba78e3434d9ce"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply proof_irrelevance_cci, EM.",
            "VernacExtend",
            "d5102d97132669aabd075a65677902075614d566"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold f'.",
            "VernacExtend",
            "d5030c9006a9df78825d4b9238ed86129ec6a957"
        ],
        [
            "rewrite <- Heq2.",
            "VernacExtend",
            "3f0c9fd650272b9620ee201b675737704fe1cef7"
        ],
        [
            "rewrite <- Heq1.",
            "VernacExtend",
            "71f9b08c0c885813240d60313d46159220a0a5b0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem setoid_functional_choice_first_characterization : FunctionalChoice /\\ ExtensionalFunctionRepresentative /\\ ExcludedMiddle <-> SetoidFunctionalChoice.",
            "VernacStartTheoremProof",
            "23ca0aa3710155c5b006a4b01f44324fc77125d5"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (FunChoice & SetoidFunRepr & EM).",
            "VernacExtend",
            "46f490dad60c6b7434b74845bdd56b4b63e93a21"
        ],
        [
            "apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice.",
            "VernacExtend",
            "dc6bdb217a62fb9c964cfbdadf71693d9bd61b03"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros A B.",
            "VernacExtend",
            "f0fdd14fe43c412ab9e9cf2b93b27330098322c4"
        ],
        [
            "apply fun_choice_imp_functional_rel_reification, FunChoice.",
            "VernacExtend",
            "f9b3a6bf108ac94504eb470defda5a3307627d94"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice.",
            "VernacExtend",
            "eafc99e8277988297809527728ae16dbaa4d99f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro SetoidFunChoice.",
            "VernacExtend",
            "3d5f7f0409c9079b131ead7afc8f526e189a0621"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now intros A B; apply setoid_fun_choice_imp_fun_choice.",
            "VernacExtend",
            "916ca229dc3abbe4c5968fa12f60be0e53910c4e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply repr_fun_choice_imp_ext_function_repr.",
            "VernacExtend",
            "fa8cae2601a42421d557fd28312580ebc213f87c"
        ],
        [
            "now apply setoid_fun_choice_imp_repr_fun_choice.",
            "VernacExtend",
            "3b2452ccdbc66902d4ae64f1e906790d8fdb6b81"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply repr_fun_choice_imp_excluded_middle.",
            "VernacExtend",
            "edd4a76025b3d1fe6c8bff622dd0d3f6c7ae4c66"
        ],
        [
            "now apply setoid_fun_choice_imp_repr_fun_choice.",
            "VernacExtend",
            "3b2452ccdbc66902d4ae64f1e906790d8fdb6b81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice : FunctionalChoice -> ExtensionalPredicateRepresentative -> ProofIrrelevance -> RepresentativeFunctionalChoice.",
            "VernacStartTheoremProof",
            "35b932362d9b242d481b243e16721d1e4f520866"
        ],
        [
            "intros FunChoice PredExtRepr PI A R (Hrefl,Hsym,Htrans).",
            "VernacExtend",
            "93aa6346c185e49f5e3d9662bb63266c0ad7507c"
        ],
        [
            "pose (isclass P := exists x:A, P x).",
            "VernacExtend",
            "fde51f06b028b6b6c256377a9a7a2d57c412a511"
        ],
        [
            "pose (class := {P:A -> Prop | isclass P}).",
            "VernacExtend",
            "e0eccead87d469bb1778eb0686676a788f2541af"
        ],
        [
            "pose (contains (c:class) (a:A) := proj1_sig c a).",
            "VernacExtend",
            "5d06d6068fa0ab7d78cd64348efb0f24915a0d96"
        ],
        [
            "pose (class_of a := R a).",
            "VernacExtend",
            "a1291a22d1e85eb0aad7b296e3f65baf9043fab9"
        ],
        [
            "destruct (FunChoice class A contains) as (f,Hf).",
            "VernacExtend",
            "9adfece07d12baac18ddb919586ffefc25bbc45d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros c.",
            "VernacExtend",
            "b22524904714a3291216c142472c7a61ff52b803"
        ],
        [
            "apply proj2_sig.",
            "VernacExtend",
            "295ab361304d1cfbf908829bcfb291ffadb4fa7c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct (PredExtRepr A) as (h,Hh).",
            "VernacExtend",
            "9ac055344bee3cb12904d3f2846d005970dca3ea"
        ],
        [
            "assert (Hisclass:forall a, isclass (h (class_of a))).",
            "VernacExtend",
            "6d46738aa1e5c89f4b7bcd6f14630e16cf0a2a00"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intro a.",
            "VernacExtend",
            "14896994838b4c124c1f1123678e1f3468f5e2ea"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "destruct (Hh (class_of a)) as (Ha,Huniqa).",
            "VernacExtend",
            "a7175befa3a90eb1396182945d953e553eb71e7b"
        ],
        [
            "rewrite <- Ha; apply Hrefl.",
            "VernacExtend",
            "fb2e08436a366cdc0749a5e0ea2114da60364f3d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "pose (f':= fun a => exist _ (h (class_of a)) (Hisclass a) : class).",
            "VernacExtend",
            "1fc438eef45b32d0aeaf1d2a8a5e1a88efb8baa7"
        ],
        [
            "exists (fun a => f (f' a)).",
            "VernacExtend",
            "af226f058f57987106864bf44b50f72dee2fd20d"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "destruct (Hh (class_of x)) as (Hx,Huniqx).",
            "VernacExtend",
            "8398b80f8ad959c81e2dcba4f80539c3cbf6901e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "specialize Hf with (f' x).",
            "VernacExtend",
            "746288fba27e9e01b0b3444c35af1bb561f8f098"
        ],
        [
            "simpl in Hf.",
            "VernacExtend",
            "fcb5032bdc02ce318beb038babaea61e5194fe85"
        ],
        [
            "rewrite <- Hx in Hf.",
            "VernacExtend",
            "2114b0674aaed433f85e9ec625ef5e66cc02b01c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros y Hxy.",
            "VernacExtend",
            "1952a89185a51f8d726deedc1c1b5257ff95b503"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "assert (Heq1: h (class_of x) = h (class_of y)).",
            "VernacExtend",
            "9b57174db556a355217e7e00d6ab3e11bd90873b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Huniqx.",
            "VernacExtend",
            "276992fca2e37e7622b0491c86b5d88225ddb8e4"
        ],
        [
            "intro z.",
            "VernacExtend",
            "4eaa711923e3411ac49bd57d091f8de45ca09388"
        ],
        [
            "unfold class_of.",
            "VernacExtend",
            "0bc58d600ac3b8408637df749a49937ffc1e8471"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Heq2:rew Heq1 in Hisclass x = Hisclass y).",
            "VernacExtend",
            "12583ef2beedd24a67d35db545eba78e3434d9ce"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply PI.",
            "VernacExtend",
            "5df397aaefe167450fff2686780913a78dc9787d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "unfold f'.",
            "VernacExtend",
            "d5030c9006a9df78825d4b9238ed86129ec6a957"
        ],
        [
            "rewrite <- Heq2.",
            "VernacExtend",
            "3f0c9fd650272b9620ee201b675737704fe1cef7"
        ],
        [
            "rewrite <- Heq1.",
            "VernacExtend",
            "71f9b08c0c885813240d60313d46159220a0a5b0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem setoid_functional_choice_second_characterization : FunctionalChoice /\\ ExtensionalPredicateRepresentative /\\ ProofIrrelevance <-> SetoidFunctionalChoice.",
            "VernacStartTheoremProof",
            "aac9e3055519ab622e306fe1e58852c9f6841257"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (FunChoice & ExtPredRepr & PI).",
            "VernacExtend",
            "c61d9f6d09dc63c48b6cee6148d81fd82187f10f"
        ],
        [
            "apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice.",
            "VernacExtend",
            "dc6bdb217a62fb9c964cfbdadf71693d9bd61b03"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros A B.",
            "VernacExtend",
            "f0fdd14fe43c412ab9e9cf2b93b27330098322c4"
        ],
        [
            "now apply fun_choice_imp_functional_rel_reification.",
            "VernacExtend",
            "cc08d8bfa47e9b7a4eb9d51966257e99d835e3a3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now apply fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice.",
            "VernacExtend",
            "0d54987bcc3ac861f24ed28f639f543d5eef096a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro SetoidFunChoice.",
            "VernacExtend",
            "3d5f7f0409c9079b131ead7afc8f526e189a0621"
        ],
        [
            "repeat split.",
            "VernacExtend",
            "7968f2448e3e51b1de42f5c433248f4a827b4da2"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now intros A B; apply setoid_fun_choice_imp_fun_choice.",
            "VernacExtend",
            "916ca229dc3abbe4c5968fa12f60be0e53910c4e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply repr_fun_choice_imp_ext_pred_repr.",
            "VernacExtend",
            "cea21a80d736ec82f4d9c89e660d60be2af086f6"
        ],
        [
            "now apply setoid_fun_choice_imp_repr_fun_choice.",
            "VernacExtend",
            "3b2452ccdbc66902d4ae64f1e906790d8fdb6b81"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "apply proof_irrelevance_cci.",
            "VernacExtend",
            "d8848bfd01b690f657ea801f2f1c2004cbf2998a"
        ],
        [
            "apply repr_fun_choice_imp_excluded_middle.",
            "VernacExtend",
            "edd4a76025b3d1fe6c8bff622dd0d3f6c7ae4c66"
        ],
        [
            "now apply setoid_fun_choice_imp_repr_fun_choice.",
            "VernacExtend",
            "3b2452ccdbc66902d4ae64f1e906790d8fdb6b81"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation description_rel_choice_imp_funct_choice := functional_rel_reification_and_rel_choice_imp_fun_choice (only parsing).",
            "VernacSyntacticDefinition",
            "d39e432a79093703b7d468628aef5ea04575cff8"
        ],
        [
            "Notation funct_choice_imp_rel_choice := fun_choice_imp_rel_choice (only parsing).",
            "VernacSyntacticDefinition",
            "4cafd4f90278c13df4eeb36ecc351d0555d2cbd3"
        ],
        [
            "Notation FunChoice_Equiv_RelChoice_and_ParamDefinDescr := fun_choice_iff_rel_choice_and_functional_rel_reification (only parsing).",
            "VernacSyntacticDefinition",
            "f0c2045e6843df383cfeda816911a20b3c6d2a3a"
        ],
        [
            "Notation funct_choice_imp_description := fun_choice_imp_functional_rel_reification (only parsing).",
            "VernacSyntacticDefinition",
            "82cd343d84c7a45b7e32a7ee6510e31ff5f5deff"
        ]
    ],
    "proofs": [
        {
            "name": "functional_rel_reification_and_rel_choice_imp_fun_choice",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "intros A B Descr RelCh R H.",
                        "VernacExtend",
                        "c50c9fb58cc29569ffbd8c805579c1fe13318210"
                    ]
                },
                {
                    "command": [
                        "destruct (RelCh R H) as (R',(HR'R,H0)).",
                        "VernacExtend",
                        "e51ef3abe7039802905fe941eddc489536c7ee9d"
                    ]
                },
                {
                    "command": [
                        "destruct (Descr R') as (f,Hf).",
                        "VernacExtend",
                        "b3f91843fff03e472e2a62bec3f4e8d47453628f"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "exists f; intro x.",
                        "VernacExtend",
                        "8fcb80e8c45e6071437622b69a222ef59f22778d"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 x) as (y,(HR'xy,Huniq)).",
                        "VernacExtend",
                        "1acc6a5d90740b18ccbfc3ceac4f58a9e8e16f02"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Huniq (f x) (Hf x)).",
                        "VernacExtend",
                        "dd89d2698bc8edeffe432a9e5d3c15119a3689cd"
                    ]
                },
                {
                    "command": [
                        "apply HR'R; assumption.",
                        "VernacExtend",
                        "3c18e88dd292bb3f79b3d01dbffd34e1a135512e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fun_choice_imp_rel_choice",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "intros A B FunCh R H.",
                        "VernacExtend",
                        "45f94d31bba85faeb5fa9b899ed5a3ba92afe91f"
                    ]
                },
                {
                    "command": [
                        "destruct (FunCh R H) as (f,H0).",
                        "VernacExtend",
                        "db72d3bf601aacb1bf0cad891e1819bcc2844ecb"
                    ]
                },
                {
                    "command": [
                        "exists (fun x y => f x = y).",
                        "VernacExtend",
                        "64bf72381cae1d490a51decbc781dcaaf075c365"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros x y Heq; rewrite <- Heq; trivial.",
                        "VernacExtend",
                        "9e7c9607743cfc39fef484ccb07e20bdf56957b0"
                    ]
                },
                {
                    "command": [
                        "intro x; exists (f x); split.",
                        "VernacExtend",
                        "ef09bc94177db6f5a3446ebe68979adfe1ba1b7f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fun_choice_imp_functional_rel_reification",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros A B FunCh R H.",
                        "VernacExtend",
                        "45f94d31bba85faeb5fa9b899ed5a3ba92afe91f"
                    ]
                },
                {
                    "command": [
                        "destruct (FunCh R) as [f H0].",
                        "VernacExtend",
                        "56d47f8e988ee00765678388e76c729aff568508"
                    ]
                },
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "destruct (H x) as (y,(HRxy,_)).",
                        "VernacExtend",
                        "bb626d318838fa400c61a999fe5082893496eee8"
                    ]
                },
                {
                    "command": [
                        "exists y; exact HRxy.",
                        "VernacExtend",
                        "6d11f9f3032b9bc52c11b13f93ff80e520ab9a15"
                    ]
                },
                {
                    "command": [
                        "exists f; exact H0.",
                        "VernacExtend",
                        "ca6b3b0353493bb35eaa6791a3d54247772a3658"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fun_choice_iff_rel_choice_and_functional_rel_reification",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "intros A B.",
                        "VernacExtend",
                        "f0fdd14fe43c412ab9e9cf2b93b27330098322c4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intro H; split; [ exact (fun_choice_imp_rel_choice H) | exact (fun_choice_imp_functional_rel_reification H) ].",
                        "VernacExtend",
                        "b4d417d80345ad415d18669ab592b7b74e0bc6d1"
                    ]
                },
                {
                    "command": [
                        "intros [H H0]; exact (functional_rel_reification_and_rel_choice_imp_fun_choice H0 H).",
                        "VernacExtend",
                        "d38eac8f6372cc3a8b5861c5ad939f8c16243495"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rel_choice_and_proof_irrel_imp_guarded_rel_choice",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros rel_choice proof_irrel.",
                        "VernacExtend",
                        "716e3aac09741d97a685f8e459d6a1d7b425fd5d"
                    ]
                },
                {
                    "command": [
                        "red; intros A B P R H.",
                        "VernacExtend",
                        "ada4bdcbcb7c4c67aeece013bd0cda86c70139b9"
                    ]
                },
                {
                    "command": [
                        "destruct (rel_choice _ _ (fun (x:sigT P) (y:B) => R (projT1 x) y)) as (R',(HR'R,H0)).",
                        "VernacExtend",
                        "8e9075a0217fc55f90dfcbe91e634aef921f73f5"
                    ]
                },
                {
                    "command": [
                        "intros (x,HPx).",
                        "VernacExtend",
                        "120ebae2bd41592824214b9b96cfdeb8754ea395"
                    ]
                },
                {
                    "command": [
                        "destruct (H x HPx) as (y,HRxy).",
                        "VernacExtend",
                        "a58b41e26692cb0489ecc12e4a9778a586555a49"
                    ]
                },
                {
                    "command": [
                        "exists y; exact HRxy.",
                        "VernacExtend",
                        "6d11f9f3032b9bc52c11b13f93ff80e520ab9a15"
                    ]
                },
                {
                    "command": [
                        "set (R'' := fun (x:A) (y:B) => exists H : P x, R' (existT P x H) y).",
                        "VernacExtend",
                        "94ce4f857faefb6220d6a97414ade308318f029c"
                    ]
                },
                {
                    "command": [
                        "exists R''; split.",
                        "VernacExtend",
                        "788063a16453b524b39a42cb252b6f34f57d3966"
                    ]
                },
                {
                    "command": [
                        "intros x y (HPx,HR'xy).",
                        "VernacExtend",
                        "fc3206cb8a1662a1bf9d6da5e10a85794e4c096b"
                    ]
                },
                {
                    "command": [
                        "change x with (projT1 (existT P x HPx)); apply HR'R; exact HR'xy.",
                        "VernacExtend",
                        "511c91d9d9a71350ee0547be89d38c5c071249c3"
                    ]
                },
                {
                    "command": [
                        "intros x HPx.",
                        "VernacExtend",
                        "2d2bcfc6c8806c9b1a2231aa10e3c9e30b34b282"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 (existT P x HPx)) as (y,(HR'xy,Huniq)).",
                        "VernacExtend",
                        "3ad5bba6f05aa3a9ec520fc8bd8ca70cd0e8ec40"
                    ]
                },
                {
                    "command": [
                        "exists y; split.",
                        "VernacExtend",
                        "98b34a63bf65ebe8d8fef8eda97c175e0cb41ad2"
                    ]
                },
                {
                    "command": [
                        "exists HPx; exact HR'xy.",
                        "VernacExtend",
                        "a4709328a07185abf305152602941f773376a72e"
                    ]
                },
                {
                    "command": [
                        "intros y' (H'Px,HR'xy').",
                        "VernacExtend",
                        "34c522c733f397d672cf7c116fad37dd516c7e90"
                    ]
                },
                {
                    "command": [
                        "apply Huniq.",
                        "VernacExtend",
                        "74d511df8e87339af8daa3b5365e783b4276c8cd"
                    ]
                },
                {
                    "command": [
                        "rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); exact HR'xy'.",
                        "VernacExtend",
                        "0f388f7d262a19eca4fa4efaaf60fd6a0d9a0305"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rel_choice_indep_of_general_premises_imp_guarded_rel_choice",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "intros A B Inh AC_rel IndPrem P R H.",
                        "VernacExtend",
                        "e65fe3456d62db0ecf169213deedfaaa237bd124"
                    ]
                },
                {
                    "command": [
                        "destruct (AC_rel (fun x y => P x -> R x y)) as (R',(HR'R,H0)).",
                        "VernacExtend",
                        "218f7fe7745d3c44a84ee16c57a0fd58b5a199de"
                    ]
                },
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "apply IndPrem.",
                        "VernacExtend",
                        "3beb3756171f5b537d85ed0c8a0bcb1de9e2b88b"
                    ]
                },
                {
                    "command": [
                        "exact Inh.",
                        "VernacExtend",
                        "3a3ac23193eac8bf40bb618f8fa11ccd1934cd56"
                    ]
                },
                {
                    "command": [
                        "intro Hx.",
                        "VernacExtend",
                        "218b6ef98d0605f2e1745b1d78b2fbbb6c4b9a85"
                    ]
                },
                {
                    "command": [
                        "apply H; assumption.",
                        "VernacExtend",
                        "7904d623a02884c927ef4e8b66c90cb12eee7c7a"
                    ]
                },
                {
                    "command": [
                        "exists (fun x y => P x /\\ R' x y).",
                        "VernacExtend",
                        "aef97db4dc9c20985e3f134bcf5bfdbe066ebc31"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "guarded_rel_choice_imp_rel_choice",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "intros A B GAC_rel R H.",
                        "VernacExtend",
                        "08fdcb23c44a8ac724443f774248fe3f9ebeaf0b"
                    ]
                },
                {
                    "command": [
                        "destruct (GAC_rel (fun _ => True) R) as (R',(HR'R,H0)).",
                        "VernacExtend",
                        "138e9b8c78f4a863b9bad88fc5cad693aa605db6"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "exists R'; firstorder.",
                        "VernacExtend",
                        "e8c8bcc11e692e75d63136ee91415a1b57d1917a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "subset_types_imp_guarded_rel_choice_iff_rel_choice",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "intuition auto using guarded_rel_choice_imp_rel_choice, rel_choice_and_proof_irrel_imp_guarded_rel_choice.",
                        "VernacExtend",
                        "3cdfc6aa6cb6e4cd684a154305b7be729dbaebe9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "guarded_iff_omniscient_rel_choice",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros GAC_rel A B R.",
                        "VernacExtend",
                        "e8a0d5b6f362c6340a4368e92799fa31c25f5191"
                    ]
                },
                {
                    "command": [
                        "apply (GAC_rel A B (fun x => exists y, R x y) R); auto.",
                        "VernacExtend",
                        "8ad44d6d0b8038a7ace523ae24c1ba9f6fca17b3"
                    ]
                },
                {
                    "command": [
                        "intros OAC_rel A B P R H.",
                        "VernacExtend",
                        "8eb81eea9b890a29c609790868a8e9656592389e"
                    ]
                },
                {
                    "command": [
                        "destruct (OAC_rel A B R) as (f,Hf); exists f; firstorder.",
                        "VernacExtend",
                        "aa58136fa6318bbfcccfe6c06f65a2c6fe24f5e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "guarded_fun_choice_imp_indep_of_general_premises",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "intros GAC_fun A P Q Inh H.",
                        "VernacExtend",
                        "2f2d027ac119cfbc9c3b8b2162a55f2971002484"
                    ]
                },
                {
                    "command": [
                        "destruct (GAC_fun unit A (fun _ => Q) (fun _ => P) Inh) as (f,Hf).",
                        "VernacExtend",
                        "0cb59739131392388f88c328f41bc3f06afc636c"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "exists (f tt); auto.",
                        "VernacExtend",
                        "200486341393ef48e23ad83902dc8f2081fe355e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "guarded_fun_choice_imp_fun_choice",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "intros GAC_fun A B Inh R H.",
                        "VernacExtend",
                        "530b4cf6f7feaf6a88d5cdfc8892bf086d937a23"
                    ]
                },
                {
                    "command": [
                        "destruct (GAC_fun A B (fun _ => True) R Inh) as (f,Hf).",
                        "VernacExtend",
                        "01fd3ab9b1dbe9fff6b9c9bb95dc4820ca1a9937"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "exists f; auto.",
                        "VernacExtend",
                        "aa24125aa80aedebabee6f391ddd719fac195c8f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fun_choice_and_indep_general_prem_imp_guarded_fun_choice",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "intros AC_fun IndPrem A B P R Inh H.",
                        "VernacExtend",
                        "4397c8acdfd5b4d83a4929c4b03c32fdd9a1ea13"
                    ]
                },
                {
                    "command": [
                        "apply (AC_fun A B Inh (fun x y => P x -> R x y)).",
                        "VernacExtend",
                        "9b05d26df394773dbb4adbd9b992394c5e021471"
                    ]
                },
                {
                    "command": [
                        "intro x; apply IndPrem; eauto.",
                        "VernacExtend",
                        "cdbe1a285f0b8323c7a126b5a71909f6a9a0de86"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fun_choice_and_indep_general_prem_iff_guarded_fun_choice",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "intuition auto using guarded_fun_choice_imp_indep_of_general_premises, guarded_fun_choice_imp_fun_choice, fun_choice_and_indep_general_prem_imp_guarded_fun_choice.",
                        "VernacExtend",
                        "17915a1ecaf9753cc79b6fb4be16e6918a77f23f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "omniscient_fun_choice_imp_small_drinker",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "intros OAC_fun A P Inh.",
                        "VernacExtend",
                        "b3b857b06383074e65089dba8f982f665233cf48"
                    ]
                },
                {
                    "command": [
                        "destruct (OAC_fun unit A (fun _ => P)) as (f,Hf).",
                        "VernacExtend",
                        "a59930ebff5d0118c367993e8e748d75dde93c69"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "exists (f tt); firstorder.",
                        "VernacExtend",
                        "7f1627285d178405373d9cfcf39e3297f6eb5712"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "omniscient_fun_choice_imp_fun_choice",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "intros OAC_fun A B Inh R H.",
                        "VernacExtend",
                        "7263ff4c5b45df33082b003efd2905c059e75caf"
                    ]
                },
                {
                    "command": [
                        "destruct (OAC_fun A B R Inh) as (f,Hf).",
                        "VernacExtend",
                        "18169752ab4338d238afd5e1dacfa76c3b157e4e"
                    ]
                },
                {
                    "command": [
                        "exists f; firstorder.",
                        "VernacExtend",
                        "d35e06a7309f86dfaad357297b91c141a3f7872e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fun_choice_and_small_drinker_imp_omniscient_fun_choice",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "intros AC_fun Drinker A B R Inh.",
                        "VernacExtend",
                        "35424b5ef59be87637c86a0cc96463c91442e0f6"
                    ]
                },
                {
                    "command": [
                        "destruct (AC_fun A B Inh (fun x y => (exists y, R x y) -> R x y)) as (f,Hf).",
                        "VernacExtend",
                        "05c7f1bc879b5483961acc62e4051284a1e6a906"
                    ]
                },
                {
                    "command": [
                        "intro x; apply (Drinker B (R x) Inh).",
                        "VernacExtend",
                        "4c71eac71b2f19adfd6d680dc2b0e664daaa073e"
                    ]
                },
                {
                    "command": [
                        "exists f; assumption.",
                        "VernacExtend",
                        "cb51458b6973bce77d1150094ec7fcb9c5106f69"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fun_choice_and_small_drinker_iff_omniscient_fun_choice",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intuition auto using omniscient_fun_choice_imp_small_drinker, omniscient_fun_choice_imp_fun_choice, fun_choice_and_small_drinker_imp_omniscient_fun_choice.",
                        "VernacExtend",
                        "49fa3ec46c0862acb444e1108e077724a67d053a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "guarded_iff_omniscient_fun_choice",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros GAC_fun A B R Inh.",
                        "VernacExtend",
                        "9e8c5342c1cfff00206b49e3d76f4dd4fa0f2b60"
                    ]
                },
                {
                    "command": [
                        "apply (GAC_fun A B (fun x => exists y, R x y) R); auto.",
                        "VernacExtend",
                        "4644f6f8325abdc482fff9f2bbc3fb39a94ed35a"
                    ]
                },
                {
                    "command": [
                        "intros OAC_fun A B P R Inh H.",
                        "VernacExtend",
                        "a5c7fce428800fcf12b4d4d36c483d76b2c3a97d"
                    ]
                },
                {
                    "command": [
                        "destruct (OAC_fun A B R Inh) as (f,Hf).",
                        "VernacExtend",
                        "18169752ab4338d238afd5e1dacfa76c3b157e4e"
                    ]
                },
                {
                    "command": [
                        "exists f; firstorder.",
                        "VernacExtend",
                        "d35e06a7309f86dfaad357297b91c141a3f7872e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "iota_imp_constructive_definite_description",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "intros D_iota A P H.",
                        "VernacExtend",
                        "b52b3c7603b420e5cf2d4f6fda810f8e77ea34bc"
                    ]
                },
                {
                    "command": [
                        "destruct D_iota with (P:=P) as (x,H1).",
                        "VernacExtend",
                        "b464203d1f1f01253d2822ae8082611733f7723a"
                    ]
                },
                {
                    "command": [
                        "destruct H; red in H; auto.",
                        "VernacExtend",
                        "809c5b8d89623697adf8b4a37d35bd1d0f408fc0"
                    ]
                },
                {
                    "command": [
                        "exists x; apply H1; assumption.",
                        "VernacExtend",
                        "4a90ea387381d53176097d3da0a1a4c520601339"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "epsilon_imp_constructive_indefinite_description",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "intros D_epsilon A P H.",
                        "VernacExtend",
                        "3c6aebc7c396c4c0e6fe57693305eb073fca76f0"
                    ]
                },
                {
                    "command": [
                        "destruct D_epsilon with (P:=P) as (x,H1).",
                        "VernacExtend",
                        "933bcec9a8181db43fc3e583593ed94dedc35b35"
                    ]
                },
                {
                    "command": [
                        "destruct H; auto.",
                        "VernacExtend",
                        "95ae427bd4e09a5f31c59184b718811a23ecb36f"
                    ]
                },
                {
                    "command": [
                        "exists x; apply H1; assumption.",
                        "VernacExtend",
                        "4a90ea387381d53176097d3da0a1a4c520601339"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constructive_indefinite_description_and_small_drinker_imp_epsilon",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "intros Drinkers D_epsilon A P Inh; apply D_epsilon; apply Drinkers; assumption.",
                        "VernacExtend",
                        "975fc1c5d1802ae8219345e72b7b1fcff561eaa2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "epsilon_imp_small_drinker",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "intros D_epsilon A P Inh; edestruct D_epsilon; eauto.",
                        "VernacExtend",
                        "e75b6878651bf13ca7c9c3960db2f564e9607997"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constructive_indefinite_description_and_small_drinker_iff_epsilon",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "intuition auto using epsilon_imp_constructive_indefinite_description, constructive_indefinite_description_and_small_drinker_imp_epsilon, epsilon_imp_small_drinker.",
                        "VernacExtend",
                        "ca780478d78efa24b2abf5b1d798fc466f519540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "classical_denumerable_description_imp_fun_choice",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "intros A Descr.",
                        "VernacExtend",
                        "a2b1d26bf09dc02d63eb6d7665e828d9af2f2897"
                    ]
                },
                {
                    "command": [
                        "red; intros R Rdec H.",
                        "VernacExtend",
                        "a27e5f7074f58778faa57969f8f406625916e38a"
                    ]
                },
                {
                    "command": [
                        "set (R':= fun x y => R x y /\\ forall y', R x y' -> y <= y').",
                        "VernacExtend",
                        "4875e399ca03d37a993f26080cdc22b48e0fdc5e"
                    ]
                },
                {
                    "command": [
                        "destruct (Descr R') as (f,Hf).",
                        "VernacExtend",
                        "b3f91843fff03e472e2a62bec3f4e8d47453628f"
                    ]
                },
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "apply (dec_inh_nat_subset_has_unique_least_element (R x)).",
                        "VernacExtend",
                        "ea7a1882eae67a36e9fb8519a275c9b1bcdfa6b9"
                    ]
                },
                {
                    "command": [
                        "apply Rdec.",
                        "VernacExtend",
                        "0063cd8ecf9c0101aa6a89f0982ccb863d828faa"
                    ]
                },
                {
                    "command": [
                        "apply (H x).",
                        "VernacExtend",
                        "b16f8b7d3b4cb7520476aeccdc4537ab61318397"
                    ]
                },
                {
                    "command": [
                        "exists f.",
                        "VernacExtend",
                        "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "destruct (Hf x) as (Hfx,_).",
                        "VernacExtend",
                        "9fc2fa558a292ab9fc503f0efe8a6b688cd5e117"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dep_non_dep_functional_choice",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "intros AC_depfun A B R H.",
                        "VernacExtend",
                        "240bfb2e692a3deac3c09369d701b8788764cf83"
                    ]
                },
                {
                    "command": [
                        "destruct (AC_depfun A (fun _ => B) R H) as (f,Hf).",
                        "VernacExtend",
                        "ffae1badd855eafdefe70bcbd786c8ae343b8681"
                    ]
                },
                {
                    "command": [
                        "exists f; trivial.",
                        "VernacExtend",
                        "ec7c823061824dde8d9c61f6febe653cd662ea04"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "non_dep_dep_functional_choice",
            "line_nb": 231,
            "steps": [
                {
                    "command": [
                        "intros AC_fun A B R H.",
                        "VernacExtend",
                        "472be41ef6a8e518b973cb94a21a7d9ed4a912ee"
                    ]
                },
                {
                    "command": [
                        "pose (B' := { x:A & B x }).",
                        "VernacExtend",
                        "f5639b6918a0da936bf213e58a3be24657d5b8c8"
                    ]
                },
                {
                    "command": [
                        "pose (R' := fun (x:A) (y:B') => projT1 y = x /\\ R (projT1 y) (projT2 y)).",
                        "VernacExtend",
                        "3518ea66ec9e318a2a0c2dc888eef38f8a827e6d"
                    ]
                },
                {
                    "command": [
                        "destruct (AC_fun A B' R') as (f,Hf).",
                        "VernacExtend",
                        "07b02a0f7a5f5f0147252b8d01b5cce2304ab3fd"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "destruct (H x) as (y,Hy).",
                        "VernacExtend",
                        "2d7157a0f49fb2ad99191a81e13dedcfd0c2aa23"
                    ]
                },
                {
                    "command": [
                        "exists (existT (fun x => B x) x y).",
                        "VernacExtend",
                        "1c46361fc0991c112b4bdc47d5896fd66cfcbfc0"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))).",
                        "VernacExtend",
                        "19468b7ac8610785be335f21f01743f284b1b651"
                    ]
                },
                {
                    "command": [
                        "intro x; destruct (Hf x) as (Heq,HR) using and_indd.",
                        "VernacExtend",
                        "d9bce8e3326fcd08a414d1754ff099bebde7f171"
                    ]
                },
                {
                    "command": [
                        "destruct (f x); simpl in *.",
                        "VernacExtend",
                        "ca2c81dd93c12ec89b7916ca2fbd6aa073db8c6b"
                    ]
                },
                {
                    "command": [
                        "destruct Heq using eq_indd; trivial.",
                        "VernacExtend",
                        "41b87ba26c5d64b5d42ca52e57f9056696fc56ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "functional_choice_to_inhabited_forall_commute",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "intros choose0 A B Hinhab.",
                        "VernacExtend",
                        "b2736fa1776636326b56e5ab03b5fe8567d47e8c"
                    ]
                },
                {
                    "command": [
                        "pose proof (non_dep_dep_functional_choice choose0) as choose;clear choose0.",
                        "VernacExtend",
                        "bd6b304f303a17fc25eddca3847d8583244eb726"
                    ]
                },
                {
                    "command": [
                        "assert (Hexists : forall x, exists _ : B x, True).",
                        "VernacExtend",
                        "2bda6f525b3881bac183bba269fce6d961c21770"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros x;apply inhabited_sig_to_exists.",
                        "VernacExtend",
                        "8928dbbe69ce52e3022d543886f61ad626c8c7ba"
                    ]
                },
                {
                    "command": [
                        "refine (inhabited_covariant _ (Hinhab x)).",
                        "VernacExtend",
                        "f15f0a0f226671f2fc9df783234a5357f9c8fe67"
                    ]
                },
                {
                    "command": [
                        "intros y;exists y;exact I.",
                        "VernacExtend",
                        "f1c2b799a6867cbb29bdd10ccb9c008faa5d7a6f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply choose in Hexists.",
                        "VernacExtend",
                        "68e9f346beaa43646332b98cecca5af99e5e034e"
                    ]
                },
                {
                    "command": [
                        "destruct Hexists as [f _].",
                        "VernacExtend",
                        "3b4059941e0c67425e7dfef4ed907071cdbe3d5a"
                    ]
                },
                {
                    "command": [
                        "exact (inhabits f).",
                        "VernacExtend",
                        "d3e21a6fa90edf0998ce684b837f5e46c2ec4f26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inhabited_forall_commute_to_functional_choice",
            "line_nb": 258,
            "steps": [
                {
                    "command": [
                        "intros choose A B R Hexists.",
                        "VernacExtend",
                        "97a81c9d7158ece69fb9b2367db633f2ec307733"
                    ]
                },
                {
                    "command": [
                        "assert (Hinhab : forall x, inhabited {y : B | R x y}).",
                        "VernacExtend",
                        "c86a6295865aa24a5f2d5982e9dc88e9d7ad1ee1"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros x;apply exists_to_inhabited_sig;trivial.",
                        "VernacExtend",
                        "0f14ba263bca68be7028bdd4fa7e739ff2dd9b1a"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply choose in Hinhab.",
                        "VernacExtend",
                        "c95efcd83ae9ef74b86b535a8b19a0087b96ff33"
                    ]
                },
                {
                    "command": [
                        "destruct Hinhab as [f].",
                        "VernacExtend",
                        "d8076cd42685e166a2909ce2bc6f8e43040a0ab0"
                    ]
                },
                {
                    "command": [
                        "exists (fun x => proj1_sig (f x)).",
                        "VernacExtend",
                        "763c840f3ad9fd809dc5df92a435dff1ff3e4135"
                    ]
                },
                {
                    "command": [
                        "exact (fun x => proj2_sig (f x)).",
                        "VernacExtend",
                        "f012333f979ef5ea3cf1a89eca489683cbc84b0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dep_non_dep_functional_rel_reification",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "intros DepFunReify A B R H.",
                        "VernacExtend",
                        "a248263c7e59b5c9986a82efa657179078a63f01"
                    ]
                },
                {
                    "command": [
                        "destruct (DepFunReify A (fun _ => B) R H) as (f,Hf).",
                        "VernacExtend",
                        "e16ee63bafaff23a018380ca3d20e485e592afea"
                    ]
                },
                {
                    "command": [
                        "exists f; trivial.",
                        "VernacExtend",
                        "ec7c823061824dde8d9c61f6febe653cd662ea04"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "non_dep_dep_functional_rel_reification",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "intros AC_fun A B R H.",
                        "VernacExtend",
                        "472be41ef6a8e518b973cb94a21a7d9ed4a912ee"
                    ]
                },
                {
                    "command": [
                        "pose (B' := { x:A & B x }).",
                        "VernacExtend",
                        "f5639b6918a0da936bf213e58a3be24657d5b8c8"
                    ]
                },
                {
                    "command": [
                        "pose (R' := fun (x:A) (y:B') => projT1 y = x /\\ R (projT1 y) (projT2 y)).",
                        "VernacExtend",
                        "3518ea66ec9e318a2a0c2dc888eef38f8a827e6d"
                    ]
                },
                {
                    "command": [
                        "destruct (AC_fun A B' R') as (f,Hf).",
                        "VernacExtend",
                        "07b02a0f7a5f5f0147252b8d01b5cce2304ab3fd"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "destruct (H x) as (y,(Hy,Huni)).",
                        "VernacExtend",
                        "84ab77501cd1e1d329130d971d1b8ef08165ee4d"
                    ]
                },
                {
                    "command": [
                        "exists (existT (fun x => B x) x y).",
                        "VernacExtend",
                        "1c46361fc0991c112b4bdc47d5896fd66cfcbfc0"
                    ]
                },
                {
                    "command": [
                        "repeat split; trivial.",
                        "VernacExtend",
                        "060692b05c8d85062072ae8d30e5549bb92445ef"
                    ]
                },
                {
                    "command": [
                        "intros (x',y') (Heqx',Hy').",
                        "VernacExtend",
                        "7a348c93c1ba61aeb2e5a66dccb191ef579532dc"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "destruct Heqx'.",
                        "VernacExtend",
                        "d47b5c7f75055b559df36694db2b03bb5c9ad66d"
                    ]
                },
                {
                    "command": [
                        "rewrite (Huni y'); trivial.",
                        "VernacExtend",
                        "575ad8ac078599219713c3b2b3100d9ab7f73192"
                    ]
                },
                {
                    "command": [
                        "exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))).",
                        "VernacExtend",
                        "19468b7ac8610785be335f21f01743f284b1b651"
                    ]
                },
                {
                    "command": [
                        "intro x; destruct (Hf x) as (Heq,HR) using and_indd.",
                        "VernacExtend",
                        "d9bce8e3326fcd08a414d1754ff099bebde7f171"
                    ]
                },
                {
                    "command": [
                        "destruct (f x); simpl in *.",
                        "VernacExtend",
                        "ca2c81dd93c12ec89b7916ca2fbd6aa073db8c6b"
                    ]
                },
                {
                    "command": [
                        "destruct Heq using eq_indd; trivial.",
                        "VernacExtend",
                        "41b87ba26c5d64b5d42ca52e57f9056696fc56ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dep_iff_non_dep_functional_rel_reification",
            "line_nb": 292,
            "steps": [
                {
                    "command": [
                        "intuition auto using non_dep_dep_functional_rel_reification, dep_non_dep_functional_rel_reification.",
                        "VernacExtend",
                        "69ad26f4e4944934dfa2eff181b8f9aff38ef386"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "relative_non_contradiction_of_indefinite_descr",
            "line_nb": 295,
            "steps": [
                {
                    "command": [
                        "intros C H AC_fun.",
                        "VernacExtend",
                        "f83e0573919b9da1977557d9deec208f71ef805a"
                    ]
                },
                {
                    "command": [
                        "assert (AC_depfun := non_dep_dep_functional_choice AC_fun).",
                        "VernacExtend",
                        "b45ea86396cd06efed952342d011dd3721b24f41"
                    ]
                },
                {
                    "command": [
                        "pose (A0 := { A:Type & { P:A->Prop & exists x, P x }}).",
                        "VernacExtend",
                        "92b9d59ac10c8587e49f7985c9aabbfd32675c39"
                    ]
                },
                {
                    "command": [
                        "pose (B0 := fun x:A0 => projT1 x).",
                        "VernacExtend",
                        "d5a5b71b67b5ca4b7b19ee946a39108166e66ef5"
                    ]
                },
                {
                    "command": [
                        "pose (R0 := fun x:A0 => fun y:B0 x => projT1 (projT2 x) y).",
                        "VernacExtend",
                        "c3fa577a99903587a0d0dde7eea38d82f7b0b296"
                    ]
                },
                {
                    "command": [
                        "pose (H0 := fun x:A0 => projT2 (projT2 x)).",
                        "VernacExtend",
                        "b79cccb90869b7fd5b5110feb7dde5f7a57f2ee7"
                    ]
                },
                {
                    "command": [
                        "destruct (AC_depfun A0 B0 R0 H0) as (f, Hf).",
                        "VernacExtend",
                        "f1e42a1378e481c204e355ad44ee53bd58bab9be"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "intros A P H'.",
                        "VernacExtend",
                        "fa13a0ff3713aae79c5d3b3a27cab45634ca0476"
                    ]
                },
                {
                    "command": [
                        "exists (f (existT _ A (existT _ P H'))).",
                        "VernacExtend",
                        "d068d7f6e987324193592f2b9e72ac4b9f724b9c"
                    ]
                },
                {
                    "command": [
                        "pose (Hf' := Hf (existT _ A (existT _ P H'))).",
                        "VernacExtend",
                        "401665058b0d9060a9157260ce567768b9c7c5cb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constructive_indefinite_descr_fun_choice",
            "line_nb": 309,
            "steps": [
                {
                    "command": [
                        "intros IndefDescr A B R H.",
                        "VernacExtend",
                        "ed958b9044efd2a2d48e84d9d8125293e70e3931"
                    ]
                },
                {
                    "command": [
                        "exists (fun x => proj1_sig (IndefDescr B (R x) (H x))).",
                        "VernacExtend",
                        "af15159d4af4d61cae0402b2ef5e5450207b8493"
                    ]
                },
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "apply (proj2_sig (IndefDescr B (R x) (H x))).",
                        "VernacExtend",
                        "70f6a8aba7453c0988d772cf5569bd40c5bf346c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "relative_non_contradiction_of_definite_descr",
            "line_nb": 315,
            "steps": [
                {
                    "command": [
                        "intros C H FunReify.",
                        "VernacExtend",
                        "02718c4e5bf3988bb2ba6594d55575e50ea3c878"
                    ]
                },
                {
                    "command": [
                        "assert (DepFunReify := non_dep_dep_functional_rel_reification FunReify).",
                        "VernacExtend",
                        "6d18a9c34160c7a5b9cf8d367e10905dbc583483"
                    ]
                },
                {
                    "command": [
                        "pose (A0 := { A:Type & { P:A->Prop & exists! x, P x }}).",
                        "VernacExtend",
                        "41a4f3359ec35ffe969dadfd56aba0e33dcd2ef8"
                    ]
                },
                {
                    "command": [
                        "pose (B0 := fun x:A0 => projT1 x).",
                        "VernacExtend",
                        "d5a5b71b67b5ca4b7b19ee946a39108166e66ef5"
                    ]
                },
                {
                    "command": [
                        "pose (R0 := fun x:A0 => fun y:B0 x => projT1 (projT2 x) y).",
                        "VernacExtend",
                        "c3fa577a99903587a0d0dde7eea38d82f7b0b296"
                    ]
                },
                {
                    "command": [
                        "pose (H0 := fun x:A0 => projT2 (projT2 x)).",
                        "VernacExtend",
                        "b79cccb90869b7fd5b5110feb7dde5f7a57f2ee7"
                    ]
                },
                {
                    "command": [
                        "destruct (DepFunReify A0 B0 R0 H0) as (f, Hf).",
                        "VernacExtend",
                        "6a6dc6e1d3ec713f935ea105b6edf8c4be251c8d"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "intros A P H'.",
                        "VernacExtend",
                        "fa13a0ff3713aae79c5d3b3a27cab45634ca0476"
                    ]
                },
                {
                    "command": [
                        "exists (f (existT _ A (existT _ P H'))).",
                        "VernacExtend",
                        "d068d7f6e987324193592f2b9e72ac4b9f724b9c"
                    ]
                },
                {
                    "command": [
                        "pose (Hf' := Hf (existT _ A (existT _ P H'))).",
                        "VernacExtend",
                        "401665058b0d9060a9157260ce567768b9c7c5cb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constructive_definite_descr_fun_reification",
            "line_nb": 329,
            "steps": [
                {
                    "command": [
                        "intros DefDescr A B R H.",
                        "VernacExtend",
                        "92c7bc653698a92cd044a31d5c943a7abd317bbe"
                    ]
                },
                {
                    "command": [
                        "exists (fun x => proj1_sig (DefDescr B (R x) (H x))).",
                        "VernacExtend",
                        "12bbc2bfe1004070fce627aa5a2b0f5d023f998c"
                    ]
                },
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "apply (proj2_sig (DefDescr B (R x) (H x))).",
                        "VernacExtend",
                        "71e99c5384f0852c040b0941fa3d39c27bf18182"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "constructive_definite_descr_excluded_middle",
            "line_nb": 336,
            "steps": [
                {
                    "command": [
                        "intros Descr EM P.",
                        "VernacExtend",
                        "697295de93f5e83dda519557783f1e36444af577"
                    ]
                },
                {
                    "command": [
                        "pose (select := fun b:bool => if b then P else ~P).",
                        "VernacExtend",
                        "31ee79c3fe79496686098c6ccc773b2459b813ac"
                    ]
                },
                {
                    "command": [
                        "assert { b:bool | select b } as ([|],HP).",
                        "VernacExtend",
                        "34ba380e57ae01942f26d251910b3885725c6cc6"
                    ]
                },
                {
                    "command": [
                        "red in Descr.",
                        "VernacExtend",
                        "c6b7c4ff12f283444b6421d5b57a4ec39ccb3f0a"
                    ]
                },
                {
                    "command": [
                        "apply Descr.",
                        "VernacExtend",
                        "9fa5ed8537614e9d5b7c7fd56d30a8786d788738"
                    ]
                },
                {
                    "command": [
                        "rewrite <- unique_existence; split.",
                        "VernacExtend",
                        "aacee62f0b08765283029254dfb23219414d2f4d"
                    ]
                },
                {
                    "command": [
                        "destruct (EM P).",
                        "VernacExtend",
                        "c232cbe89f6c12cb17fdd8ecb16846469da32198"
                    ]
                },
                {
                    "command": [
                        "exists true; trivial.",
                        "VernacExtend",
                        "d8f416eaa8eb2d59bca9f6d091e1e77ccedc40fc"
                    ]
                },
                {
                    "command": [
                        "exists false; trivial.",
                        "VernacExtend",
                        "b042b5bf3a845850949035d38a51f2b510099e2e"
                    ]
                },
                {
                    "command": [
                        "intros [|] [|] H1 H2; simpl in *; reflexivity || contradiction.",
                        "VernacExtend",
                        "b218fb7bdb1062983827b195d4e1c34bcb869fb4"
                    ]
                },
                {
                    "command": [
                        "left; trivial.",
                        "VernacExtend",
                        "2f1efd67ff23560c270a9589d0d1b100a9c80732"
                    ]
                },
                {
                    "command": [
                        "right; trivial.",
                        "VernacExtend",
                        "0340ad4c708a2ae89a0d63d55c2e24a5dd555b53"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fun_reification_descr_computational_excluded_middle_in_prop_context",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "intros FunReify EM C H.",
                        "VernacExtend",
                        "a5933989f14b3ec16bedbf00e6c90913805fb90c"
                    ]
                },
                {
                    "command": [
                        "intuition auto using constructive_definite_descr_excluded_middle, (relative_non_contradiction_of_definite_descr (C:=C)).",
                        "VernacExtend",
                        "2a2d31ad0e8ea9c79923c276e1bbfca850e7aa26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "functional_choice_imp_functional_dependent_choice",
            "line_nb": 355,
            "steps": [
                {
                    "command": [
                        "intros FunChoice A R HRfun x0.",
                        "VernacExtend",
                        "3a28c50ba7bce76e591da5ca2d9667d4e31a9c58"
                    ]
                },
                {
                    "command": [
                        "apply FunChoice in HRfun as (g,Rg).",
                        "VernacExtend",
                        "b915fcfeea169a5e7f6ddf8a6e60dd565986046a"
                    ]
                },
                {
                    "command": [
                        "set (f:=fix f n := match n with 0 => x0 | S n' => g (f n') end).",
                        "VernacExtend",
                        "ce055840cfc9b555c019381c9c0ce4047edf0b12"
                    ]
                },
                {
                    "command": [
                        "exists f; firstorder.",
                        "VernacExtend",
                        "d35e06a7309f86dfaad357297b91c141a3f7872e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "functional_dependent_choice_imp_functional_countable_choice",
            "line_nb": 361,
            "steps": [
                {
                    "command": [
                        "intros H A R H0.",
                        "VernacExtend",
                        "51fc37ba8cdbb00e255b7f357fccee3f9ecf1f77"
                    ]
                },
                {
                    "command": [
                        "set (R' (p q:nat*A) := fst q = S (fst p) /\\ R (fst p) (snd q)).",
                        "VernacExtend",
                        "83f1a88f1b82fdb00c8aa55f01d8e5cc621a7307"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 0) as (y0,Hy0).",
                        "VernacExtend",
                        "b75b37c57f8e19ebd8220977931c1668c3ac9dbb"
                    ]
                },
                {
                    "command": [
                        "destruct H with (R:=R') (x0:=(0,y0)) as (f,(Hf0,HfS)).",
                        "VernacExtend",
                        "f0add29652aa9dbd612a1f0e299fa9ab26652005"
                    ]
                },
                {
                    "command": [
                        "intro x; destruct (H0 (fst x)) as (y,Hy).",
                        "VernacExtend",
                        "87812dc5275d34b95bd4a32f72ffa6913e7031df"
                    ]
                },
                {
                    "command": [
                        "exists (S (fst x),y).",
                        "VernacExtend",
                        "dd03a95c4513641d9bf6a138bd0bf9285aa96c04"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "assert (Heq:forall n, fst (f n) = n).",
                        "VernacExtend",
                        "13e325c036138309d348bac970ed0286b42bb8e8"
                    ]
                },
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "rewrite Hf0; reflexivity.",
                        "VernacExtend",
                        "82df37b781d0cd328d0137d94d1177bfcf9dec0b"
                    ]
                },
                {
                    "command": [
                        "specialize HfS with n; destruct HfS as (->,_); congruence.",
                        "VernacExtend",
                        "29e371f6d0427fb147e3c3f4e2bfd6c3e0559ebb"
                    ]
                },
                {
                    "command": [
                        "exists (fun n => snd (f (S n))).",
                        "VernacExtend",
                        "e426c861891cac4e7f6984fdc21d33f560e3248a"
                    ]
                },
                {
                    "command": [
                        "intro n'.",
                        "VernacExtend",
                        "da4c07ef3078b0a44eb64c44004ba6f71b69a2a9"
                    ]
                },
                {
                    "command": [
                        "specialize HfS with n'.",
                        "VernacExtend",
                        "cf74c30521cc4fc1a337f6a97e50656c1f14c3c3"
                    ]
                },
                {
                    "command": [
                        "destruct HfS as (_,HR).",
                        "VernacExtend",
                        "577a4ebf4d03a2e4efcb2ae39da6037b1ad18fbd"
                    ]
                },
                {
                    "command": [
                        "rewrite Heq in HR.",
                        "VernacExtend",
                        "e3dc4419ff696909e2ae3984ab75a606e0e9a8d5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_fun_choice_imp_ext_prop_repr",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "intros ReprFunChoice A.",
                        "VernacExtend",
                        "c1a03ceee2d00d71904977bfba4863ed5ee28a43"
                    ]
                },
                {
                    "command": [
                        "pose (R P Q := P <-> Q).",
                        "VernacExtend",
                        "c2773a84cb3bb05d633cc6c705d15d40a01b4d7f"
                    ]
                },
                {
                    "command": [
                        "assert (Hequiv:Equivalence R) by (split; firstorder).",
                        "VernacExtend",
                        "46fe388b7dc96e0756fb7bce9be486de669d3377"
                    ]
                },
                {
                    "command": [
                        "apply (ReprFunChoice _ R Hequiv).",
                        "VernacExtend",
                        "afaa7c226b7d7a879656a659a9a0ab7d7653a7d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_fun_choice_imp_ext_pred_repr",
            "line_nb": 388,
            "steps": [
                {
                    "command": [
                        "intros ReprFunChoice A.",
                        "VernacExtend",
                        "c1a03ceee2d00d71904977bfba4863ed5ee28a43"
                    ]
                },
                {
                    "command": [
                        "pose (R P Q := forall x : A, P x <-> Q x).",
                        "VernacExtend",
                        "e7935d1971429d24a8df83a21a06c7b6db646ba6"
                    ]
                },
                {
                    "command": [
                        "assert (Hequiv:Equivalence R) by (split; firstorder).",
                        "VernacExtend",
                        "46fe388b7dc96e0756fb7bce9be486de669d3377"
                    ]
                },
                {
                    "command": [
                        "apply (ReprFunChoice _ R Hequiv).",
                        "VernacExtend",
                        "afaa7c226b7d7a879656a659a9a0ab7d7653a7d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_fun_choice_imp_ext_function_repr",
            "line_nb": 394,
            "steps": [
                {
                    "command": [
                        "intros ReprFunChoice A B.",
                        "VernacExtend",
                        "1348702ef09edf6a55abf691c6f6ed9664ad5b5f"
                    ]
                },
                {
                    "command": [
                        "pose (R (f g : A -> B) := forall x : A, f x = g x).",
                        "VernacExtend",
                        "77dd2bc7ceb01a35ffb03ec60fe663249ddcb93a"
                    ]
                },
                {
                    "command": [
                        "assert (Hequiv:Equivalence R).",
                        "VernacExtend",
                        "1aa80d11e8116f3a3dc70bdaadad4ab30cad2b94"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; try easy.",
                        "VernacExtend",
                        "6a71419e22bf1e10ff817d0469549bc079471092"
                    ]
                },
                {
                    "command": [
                        "firstorder using eq_trans.",
                        "VernacExtend",
                        "0fac3d19285b3767c7208cdd3d4e7e40ed2f877b"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply (ReprFunChoice _ R Hequiv).",
                        "VernacExtend",
                        "afaa7c226b7d7a879656a659a9a0ab7d7653a7d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_fun_choice_imp_excluded_middle",
            "line_nb": 404,
            "steps": [
                {
                    "command": [
                        "intros ReprFunChoice.",
                        "VernacExtend",
                        "8b29c4d82d847df286fdcd91ac98245b9a134b34"
                    ]
                },
                {
                    "command": [
                        "apply representative_boolean_partition_imp_excluded_middle, ReprFunChoice.",
                        "VernacExtend",
                        "222f39ec3a3110de8319c52b68cc558601c27c65"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "repr_fun_choice_imp_relational_choice",
            "line_nb": 408,
            "steps": [
                {
                    "command": [
                        "intros ReprFunChoice A B T Hexists.",
                        "VernacExtend",
                        "7223800b63c634437c9c31d0b055690c8592613b"
                    ]
                },
                {
                    "command": [
                        "pose (D := (A*B)%type).",
                        "VernacExtend",
                        "3e6417e51fbe9242291d9680520d0aa7c0eadbae"
                    ]
                },
                {
                    "command": [
                        "pose (R (z z':D) := let x := fst z in let x' := fst z' in let y := snd z in let y' := snd z' in x = x' /\\ (T x y -> y = y' \\/ T x y') /\\ (T x y' -> y = y' \\/ T x y)).",
                        "VernacExtend",
                        "532195ce7ac78c7ec10b0b73bfa902eb3cc59394"
                    ]
                },
                {
                    "command": [
                        "assert (Hequiv : Equivalence R).",
                        "VernacExtend",
                        "1aa80d11e8116f3a3dc70bdaadad4ab30cad2b94"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (x,y) (x',y') (H1,(H2,H2')).",
                        "VernacExtend",
                        "eba12355fbfdd218dce1d306e65180afbad49178"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "simpl fst in *.",
                        "VernacExtend",
                        "f1535698ca93ac80445e2fbe5d457f8a3df71731"
                    ]
                },
                {
                    "command": [
                        "simpl snd in *.",
                        "VernacExtend",
                        "8b803e817ff0840cb03435488963498729b05595"
                    ]
                },
                {
                    "command": [
                        "subst x'.",
                        "VernacExtend",
                        "23d87e38863f5f14801b3504b95b86a8137d78de"
                    ]
                },
                {
                    "command": [
                        "split; intro H.",
                        "VernacExtend",
                        "496dd5fc77c723ff896bbd9bc6dee3ccc3aa9bde"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (H2' H); firstorder.",
                        "VernacExtend",
                        "f8e06bd81e8958686a6595bbcf75d9a95578ce36"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (H2 H); firstorder.",
                        "VernacExtend",
                        "3f8a53b76db7365f11ada6034767fbda62198580"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (x,y) (x',y') (x'',y'') (H1,(H2,H2')) (H3,(H4,H4')).",
                        "VernacExtend",
                        "43d843bee9c09c1d86d55181c9c4c79ce1d92851"
                    ]
                },
                {
                    "command": [
                        "simpl fst in *.",
                        "VernacExtend",
                        "f1535698ca93ac80445e2fbe5d457f8a3df71731"
                    ]
                },
                {
                    "command": [
                        "simpl snd in *.",
                        "VernacExtend",
                        "8b803e817ff0840cb03435488963498729b05595"
                    ]
                },
                {
                    "command": [
                        "subst x'' x'.",
                        "VernacExtend",
                        "4f6c8c64e13ed254336554928a297ae60caa2f6b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "split; intro H.",
                        "VernacExtend",
                        "496dd5fc77c723ff896bbd9bc6dee3ccc3aa9bde"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl fst in *.",
                        "VernacExtend",
                        "f1535698ca93ac80445e2fbe5d457f8a3df71731"
                    ]
                },
                {
                    "command": [
                        "simpl snd in *.",
                        "VernacExtend",
                        "8b803e817ff0840cb03435488963498729b05595"
                    ]
                },
                {
                    "command": [
                        "destruct (H2 H) as [<-|H0].",
                        "VernacExtend",
                        "df9574561b31841c14e2a4cf7ae190f22f7d95f2"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct (H4 H); firstorder.",
                        "VernacExtend",
                        "3102d5a25f3bbad17feba4e37755dd5de4c776bd"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct (H2' H0), (H4 H0); try subst y'; try subst y''; try firstorder.",
                        "VernacExtend",
                        "cc24c9953f2b1b0217c521ace2d8e486dedd02d6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl fst in *.",
                        "VernacExtend",
                        "f1535698ca93ac80445e2fbe5d457f8a3df71731"
                    ]
                },
                {
                    "command": [
                        "simpl snd in *.",
                        "VernacExtend",
                        "8b803e817ff0840cb03435488963498729b05595"
                    ]
                },
                {
                    "command": [
                        "destruct (H4' H) as [<-|H0].",
                        "VernacExtend",
                        "20896e060ada9258d988bf021ff61f445eff665d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct (H2' H); firstorder.",
                        "VernacExtend",
                        "f8e06bd81e8958686a6595bbcf75d9a95578ce36"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct (H2' H0), (H4 H0); try subst y'; try subst y''; try firstorder.",
                        "VernacExtend",
                        "cc24c9953f2b1b0217c521ace2d8e486dedd02d6"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (ReprFunChoice D R Hequiv) as (g,Hg).",
                        "VernacExtend",
                        "054bd9c0cd4e0b636866dd32ac9478e50c5c98bd"
                    ]
                },
                {
                    "command": [
                        "set (T' x y := T x y /\\ exists y', T x y' /\\ g (x,y') = (x,y)).",
                        "VernacExtend",
                        "0071a2bd6d4c26c2b3c68f059980b184c3ad6f0e"
                    ]
                },
                {
                    "command": [
                        "exists T'.",
                        "VernacExtend",
                        "1dc8f8d879ab54d7665d007debe5a9266a865b06"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros x y (H,_); easy.",
                        "VernacExtend",
                        "93176bddbfdf3e72c35dde9146e1f9174604c7a0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "destruct (Hexists x) as (y,Hy).",
                        "VernacExtend",
                        "5767ea10a6d2f4cf2b995214a19f99407ab8fe12"
                    ]
                },
                {
                    "command": [
                        "exists (snd (g (x,y))).",
                        "VernacExtend",
                        "7a1b4f5d3dd5967e917becc56a0785acd5f1d877"
                    ]
                },
                {
                    "command": [
                        "destruct (Hg (x,y)) as ((Heq1,(H',H'')),Hgxyuniq); clear Hg.",
                        "VernacExtend",
                        "8d59a40f1cf5292d8e611e88daaa889380fcb11e"
                    ]
                },
                {
                    "command": [
                        "destruct (H' Hy) as [Heq2|Hgy]; clear H'.",
                        "VernacExtend",
                        "bd7846e6e24a31318e149e81dd0f3dae531e8a3e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heq2.",
                        "VernacExtend",
                        "3f0c9fd650272b9620ee201b675737704fe1cef7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "exists y.",
                        "VernacExtend",
                        "1c06cb2466f48b6def24e74ddeda9956981c0a0a"
                    ]
                },
                {
                    "command": [
                        "destruct (g (x,y)) as (x',y').",
                        "VernacExtend",
                        "d025de35e29be2d8e19fabc0caac06592f6d47e0"
                    ]
                },
                {
                    "command": [
                        "simpl in Heq1, Heq2.",
                        "VernacExtend",
                        "b792961b306cd6101ccfbf02a312e79971491bb1"
                    ]
                },
                {
                    "command": [
                        "subst; easy.",
                        "VernacExtend",
                        "7273e0f2f059e5a43bc46a731c0087a6dd17df74"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros y' (Hy',(y'',(Hy'',Heq))).",
                        "VernacExtend",
                        "5420afa1bb4957b762a786eee999f5ac8aa8ef16"
                    ]
                },
                {
                    "command": [
                        "rewrite (Hgxyuniq (x,y'')), Heq.",
                        "VernacExtend",
                        "419dec6b0d76838f3711cdd1edb78ee6f9c5a4ee"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "split; right; easy.",
                        "VernacExtend",
                        "060167b39d34099b3aa0ebc95ee3ee57c8ed75c3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "exists y.",
                        "VernacExtend",
                        "1c06cb2466f48b6def24e74ddeda9956981c0a0a"
                    ]
                },
                {
                    "command": [
                        "destruct (g (x,y)) as (x',y').",
                        "VernacExtend",
                        "d025de35e29be2d8e19fabc0caac06592f6d47e0"
                    ]
                },
                {
                    "command": [
                        "simpl in Heq1.",
                        "VernacExtend",
                        "dc5148d3c35ae43711a0bff9ea030361506ddc04"
                    ]
                },
                {
                    "command": [
                        "subst x'; easy.",
                        "VernacExtend",
                        "86711bbbaf3b6e6b3d7d19a0bfbef306da941d37"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros y' (Hy',(y'',(Hy'',Heq))).",
                        "VernacExtend",
                        "5420afa1bb4957b762a786eee999f5ac8aa8ef16"
                    ]
                },
                {
                    "command": [
                        "rewrite (Hgxyuniq (x,y'')), Heq.",
                        "VernacExtend",
                        "419dec6b0d76838f3711cdd1edb78ee6f9c5a4ee"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "split; right; easy.",
                        "VernacExtend",
                        "060167b39d34099b3aa0ebc95ee3ee57c8ed75c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gen_setoid_fun_choice_imp_setoid_fun_choice",
            "line_nb": 504,
            "steps": [
                {
                    "command": [
                        "intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex.",
                        "VernacExtend",
                        "98b441d8909d3b7140b533154bcf2026404a864e"
                    ]
                },
                {
                    "command": [
                        "apply GenSetoidFunChoice; try easy.",
                        "VernacExtend",
                        "f7f79054c4a97e2249b105e16685032bafb1a7ac"
                    ]
                },
                {
                    "command": [
                        "apply eq_equivalence.",
                        "VernacExtend",
                        "5bf0916ed779f70e7d4dcc171aa599e381d16863"
                    ]
                },
                {
                    "command": [
                        "intros * H <-.",
                        "VernacExtend",
                        "0de7a70904fd613d9e58ddf143ca75c30502f857"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setoid_fun_choice_imp_gen_setoid_fun_choice",
            "line_nb": 511,
            "steps": [
                {
                    "command": [
                        "intros A B SetoidFunChoice R S T HequivR HequivS Hcompat Hex.",
                        "VernacExtend",
                        "3faebc788eaaed84f74ec438c02b4a10b56b429e"
                    ]
                },
                {
                    "command": [
                        "destruct SetoidFunChoice with (R:=R) (T:=T) as (f,Hf); try easy.",
                        "VernacExtend",
                        "785583a5da6b15e6f15afb814c76ecc6716db925"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros; apply (Hcompat x x' y y); try easy.",
                        "VernacExtend",
                        "a730ecb737b46fb4d7f66fa8baeb989ef878dab8"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "exists f.",
                        "VernacExtend",
                        "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
                    ]
                },
                {
                    "command": [
                        "intros x; specialize Hf with x as (Hf,Huniq).",
                        "VernacExtend",
                        "814a53518a301f24090354ddc63943a1b6ea569e"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "now erewrite Huniq.",
                        "VernacExtend",
                        "c1e8f352cc169f04e6d0bfb8b579f3d087573122"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setoid_fun_choice_iff_gen_setoid_fun_choice",
            "line_nb": 522,
            "steps": [
                {
                    "command": [
                        "split; auto using gen_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_gen_setoid_fun_choice.",
                        "VernacExtend",
                        "c091fb750d785a54d8f1e91a85af581890750279"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setoid_fun_choice_imp_simple_setoid_fun_choice",
            "line_nb": 525,
            "steps": [
                {
                    "command": [
                        "intros A B SetoidFunChoice R T Hequiv Hexists.",
                        "VernacExtend",
                        "e018201d244f45e688a45710ddcdeeafabd0ad0b"
                    ]
                },
                {
                    "command": [
                        "pose (T' x y := forall x', R x x' -> T x' y).",
                        "VernacExtend",
                        "3564aa44d9e12fde7b91362be64415b9e3d6c803"
                    ]
                },
                {
                    "command": [
                        "assert (Hcompat : forall (x x' : A) (y : B), R x x' -> T' x y -> T' x' y) by firstorder.",
                        "VernacExtend",
                        "a86cd4244b8ac01f340a320d5527aeb2037da4bf"
                    ]
                },
                {
                    "command": [
                        "destruct (SetoidFunChoice R T' Hequiv Hcompat Hexists) as (f,Hf).",
                        "VernacExtend",
                        "f8fa43bbdeda943e44fca1c6361ab65c9d21a984"
                    ]
                },
                {
                    "command": [
                        "exists f.",
                        "VernacExtend",
                        "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "simple_setoid_fun_choice_imp_setoid_fun_choice",
            "line_nb": 533,
            "steps": [
                {
                    "command": [
                        "intros A B SimpleSetoidFunChoice R T Hequiv Hcompat Hexists.",
                        "VernacExtend",
                        "17095761ca613bde000829ad8a0fe6788b89c4f4"
                    ]
                },
                {
                    "command": [
                        "destruct (SimpleSetoidFunChoice R T Hequiv) as (f,Hf); firstorder.",
                        "VernacExtend",
                        "3fb512ca39b20859f1f63eaf759c0212bcc48d3d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setoid_fun_choice_iff_simple_setoid_fun_choice",
            "line_nb": 537,
            "steps": [
                {
                    "command": [
                        "split; auto using simple_setoid_fun_choice_imp_setoid_fun_choice, setoid_fun_choice_imp_simple_setoid_fun_choice.",
                        "VernacExtend",
                        "a9a18b8a84ef95ab557956cf76e0bc12522f79b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setoid_fun_choice_imp_fun_choice",
            "line_nb": 540,
            "steps": [
                {
                    "command": [
                        "intros A B SetoidFunChoice T Hexists.",
                        "VernacExtend",
                        "cbcd1e54a12dca0b829d8c70dbfbae78ebb2e3d8"
                    ]
                },
                {
                    "command": [
                        "destruct SetoidFunChoice with (R:=@eq A) (T:=T) as (f,Hf).",
                        "VernacExtend",
                        "c0f7b48b4f546a063dce983d8106723916a1dd61"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply eq_equivalence.",
                        "VernacExtend",
                        "5bf0916ed779f70e7d4dcc171aa599e381d16863"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now intros * ->.",
                        "VernacExtend",
                        "d704f6d4a7698562275b3a369c9d6bbfbb5db264"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists f.",
                        "VernacExtend",
                        "c9e46b92fddb4f89ddd3a964bd2aee97fe7e2db7"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setoid_fun_choice_imp_functional_rel_reification",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "intros A B SetoidFunChoice.",
                        "VernacExtend",
                        "dd430072fa476983b677e0579e39652ab9158fb5"
                    ]
                },
                {
                    "command": [
                        "apply fun_choice_imp_functional_rel_reification.",
                        "VernacExtend",
                        "a7cd9bda3741497de6db4c993fdef39165bd1c0c"
                    ]
                },
                {
                    "command": [
                        "now apply setoid_fun_choice_imp_fun_choice.",
                        "VernacExtend",
                        "a4e341bbc56b7c47df71491afe74af1be199cd6b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setoid_fun_choice_imp_repr_fun_choice",
            "line_nb": 558,
            "steps": [
                {
                    "command": [
                        "intros SetoidFunChoice A R Hequiv.",
                        "VernacExtend",
                        "3a021512fc8ac1cd0582f89e2a69667c41fdcd37"
                    ]
                },
                {
                    "command": [
                        "apply SetoidFunChoice; firstorder.",
                        "VernacExtend",
                        "ccc338d03b116f21afd6e46618f4f1891bc54743"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice",
            "line_nb": 589,
            "steps": [
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice.",
                        "VernacExtend",
                        "8888a8d9eb8be85d43b144b2e0de7d5ed13e8798"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now intros A B; apply setoid_fun_choice_imp_functional_rel_reification.",
                        "VernacExtend",
                        "002d8c3e598461750379e27011692e41fa258094"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now apply setoid_fun_choice_imp_repr_fun_choice.",
                        "VernacExtend",
                        "3b2452ccdbc66902d4ae64f1e906790d8fdb6b81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice",
            "line_nb": 601,
            "steps": [
                {
                    "command": [
                        "intros FunChoice SetoidFunRepr EM A R (Hrefl,Hsym,Htrans).",
                        "VernacExtend",
                        "502946b3612aa0de452c71733ea2eedf4c84653a"
                    ]
                },
                {
                    "command": [
                        "assert (H:forall P:Prop, exists b, b = true <-> P).",
                        "VernacExtend",
                        "002da129c81498a53abcf28aedb150bb3e18d3bf"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros P.",
                        "VernacExtend",
                        "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
                    ]
                },
                {
                    "command": [
                        "destruct (EM P).",
                        "VernacExtend",
                        "c232cbe89f6c12cb17fdd8ecb16846469da32198"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists true; firstorder.",
                        "VernacExtend",
                        "e87b2d57336a20ecfcc21802a6f3640ef5d43e9f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists false; easy.",
                        "VernacExtend",
                        "841d8f3e322745bec649dbe6267ba0d5e7fa9fed"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct (FunChoice _ _ _ H) as (c,Hc).",
                        "VernacExtend",
                        "25b5b511adadeca9af3697294e83f1d7ae3e18d0"
                    ]
                },
                {
                    "command": [
                        "pose (class_of a y := c (R a y)).",
                        "VernacExtend",
                        "3bd86fa498a388fdbd80adcb360d05fbb0aef30a"
                    ]
                },
                {
                    "command": [
                        "pose (isclass f := exists x:A, f x = true).",
                        "VernacExtend",
                        "8c8189ccca6d8e63c8e6560c7f42ddc37696943a"
                    ]
                },
                {
                    "command": [
                        "pose (class := {f:A -> bool | isclass f}).",
                        "VernacExtend",
                        "f124ae260dbe5218ea173401cca23323daf6cc17"
                    ]
                },
                {
                    "command": [
                        "pose (contains (c:class) (a:A) := proj1_sig c a = true).",
                        "VernacExtend",
                        "fb8cec09d7dfea5ad65a01498da78c191ffb65bb"
                    ]
                },
                {
                    "command": [
                        "destruct (FunChoice class A contains) as (f,Hf).",
                        "VernacExtend",
                        "9adfece07d12baac18ddb919586ffefc25bbc45d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros f.",
                        "VernacExtend",
                        "d55304fde379b586a2d23f40fabc5399298bf19a"
                    ]
                },
                {
                    "command": [
                        "destruct (proj2_sig f) as (x,Hx).",
                        "VernacExtend",
                        "dfdb9cabdc46df0e373ad52ffee3bec50becfe8f"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (SetoidFunRepr A bool) as (h,Hh).",
                        "VernacExtend",
                        "2e973d3e5fd2270a8c27e803ae41a951bfdabe44"
                    ]
                },
                {
                    "command": [
                        "assert (Hisclass:forall a, isclass (h (class_of a))).",
                        "VernacExtend",
                        "6d46738aa1e5c89f4b7bcd6f14630e16cf0a2a00"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro a.",
                        "VernacExtend",
                        "14896994838b4c124c1f1123678e1f3468f5e2ea"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "destruct (Hh (class_of a)) as (Ha,Huniqa).",
                        "VernacExtend",
                        "a7175befa3a90eb1396182945d953e553eb71e7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ha.",
                        "VernacExtend",
                        "b1125c5e356fa2badf3ffefe49c0da60d96b65ff"
                    ]
                },
                {
                    "command": [
                        "apply Hc.",
                        "VernacExtend",
                        "b900f3304ba75d1bc8becba9c3e19edfabbb7700"
                    ]
                },
                {
                    "command": [
                        "apply Hrefl.",
                        "VernacExtend",
                        "ae2f7f1a023c582f19ae5f7d0d93edc4aa33502f"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "pose (f':= fun a => exist _ (h (class_of a)) (Hisclass a) : class).",
                        "VernacExtend",
                        "1fc438eef45b32d0aeaf1d2a8a5e1a88efb8baa7"
                    ]
                },
                {
                    "command": [
                        "exists (fun a => f (f' a)).",
                        "VernacExtend",
                        "af226f058f57987106864bf44b50f72dee2fd20d"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "destruct (Hh (class_of x)) as (Hx,Huniqx).",
                        "VernacExtend",
                        "8398b80f8ad959c81e2dcba4f80539c3cbf6901e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "specialize Hf with (f' x).",
                        "VernacExtend",
                        "746288fba27e9e01b0b3444c35af1bb561f8f098"
                    ]
                },
                {
                    "command": [
                        "unfold contains in Hf.",
                        "VernacExtend",
                        "c6f81fc29884cb96a01eeb5d683e68b1de1ee189"
                    ]
                },
                {
                    "command": [
                        "simpl in Hf.",
                        "VernacExtend",
                        "fcb5032bdc02ce318beb038babaea61e5194fe85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hx in Hf.",
                        "VernacExtend",
                        "2114b0674aaed433f85e9ec625ef5e66cc02b01c"
                    ]
                },
                {
                    "command": [
                        "apply Hc.",
                        "VernacExtend",
                        "b900f3304ba75d1bc8becba9c3e19edfabbb7700"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros y Hxy.",
                        "VernacExtend",
                        "1952a89185a51f8d726deedc1c1b5257ff95b503"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "assert (Heq1: h (class_of x) = h (class_of y)).",
                        "VernacExtend",
                        "9b57174db556a355217e7e00d6ab3e11bd90873b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Huniqx.",
                        "VernacExtend",
                        "276992fca2e37e7622b0491c86b5d88225ddb8e4"
                    ]
                },
                {
                    "command": [
                        "intro z.",
                        "VernacExtend",
                        "4eaa711923e3411ac49bd57d091f8de45ca09388"
                    ]
                },
                {
                    "command": [
                        "unfold class_of.",
                        "VernacExtend",
                        "0bc58d600ac3b8408637df749a49937ffc1e8471"
                    ]
                },
                {
                    "command": [
                        "destruct (c (R x z)) eqn:Hxz.",
                        "VernacExtend",
                        "9b0d5d70a4612df5ab544c3e9cec640560805b6d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply Hc.",
                        "VernacExtend",
                        "b900f3304ba75d1bc8becba9c3e19edfabbb7700"
                    ]
                },
                {
                    "command": [
                        "apply -> Hc in Hxz.",
                        "VernacExtend",
                        "29c8758111e66531f2e539847cd09526919a6229"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (c (R y z)) eqn:Hyz.",
                        "VernacExtend",
                        "6e943e2624790a9e0dc7daed4944bb4d94786769"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply -> Hc in Hyz.",
                        "VernacExtend",
                        "2efa2c972c11baead75d767f1c914f1e4f07860f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hxz.",
                        "VernacExtend",
                        "17f9ae856eda2d48aa88008176e4acdd2a0f05f7"
                    ]
                },
                {
                    "command": [
                        "apply Hc.",
                        "VernacExtend",
                        "b900f3304ba75d1bc8becba9c3e19edfabbb7700"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Heq2:rew Heq1 in Hisclass x = Hisclass y).",
                        "VernacExtend",
                        "12583ef2beedd24a67d35db545eba78e3434d9ce"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply proof_irrelevance_cci, EM.",
                        "VernacExtend",
                        "d5102d97132669aabd075a65677902075614d566"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold f'.",
                        "VernacExtend",
                        "d5030c9006a9df78825d4b9238ed86129ec6a957"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heq2.",
                        "VernacExtend",
                        "3f0c9fd650272b9620ee201b675737704fe1cef7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heq1.",
                        "VernacExtend",
                        "71f9b08c0c885813240d60313d46159220a0a5b0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setoid_functional_choice_first_characterization",
            "line_nb": 679,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (FunChoice & SetoidFunRepr & EM).",
                        "VernacExtend",
                        "46f490dad60c6b7434b74845bdd56b4b63e93a21"
                    ]
                },
                {
                    "command": [
                        "apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice.",
                        "VernacExtend",
                        "dc6bdb217a62fb9c964cfbdadf71693d9bd61b03"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros A B.",
                        "VernacExtend",
                        "f0fdd14fe43c412ab9e9cf2b93b27330098322c4"
                    ]
                },
                {
                    "command": [
                        "apply fun_choice_imp_functional_rel_reification, FunChoice.",
                        "VernacExtend",
                        "f9b3a6bf108ac94504eb470defda5a3307627d94"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now apply fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice.",
                        "VernacExtend",
                        "eafc99e8277988297809527728ae16dbaa4d99f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro SetoidFunChoice.",
                        "VernacExtend",
                        "3d5f7f0409c9079b131ead7afc8f526e189a0621"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now intros A B; apply setoid_fun_choice_imp_fun_choice.",
                        "VernacExtend",
                        "916ca229dc3abbe4c5968fa12f60be0e53910c4e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply repr_fun_choice_imp_ext_function_repr.",
                        "VernacExtend",
                        "fa8cae2601a42421d557fd28312580ebc213f87c"
                    ]
                },
                {
                    "command": [
                        "now apply setoid_fun_choice_imp_repr_fun_choice.",
                        "VernacExtend",
                        "3b2452ccdbc66902d4ae64f1e906790d8fdb6b81"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply repr_fun_choice_imp_excluded_middle.",
                        "VernacExtend",
                        "edd4a76025b3d1fe6c8bff622dd0d3f6c7ae4c66"
                    ]
                },
                {
                    "command": [
                        "now apply setoid_fun_choice_imp_repr_fun_choice.",
                        "VernacExtend",
                        "3b2452ccdbc66902d4ae64f1e906790d8fdb6b81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice",
            "line_nb": 701,
            "steps": [
                {
                    "command": [
                        "intros FunChoice PredExtRepr PI A R (Hrefl,Hsym,Htrans).",
                        "VernacExtend",
                        "93aa6346c185e49f5e3d9662bb63266c0ad7507c"
                    ]
                },
                {
                    "command": [
                        "pose (isclass P := exists x:A, P x).",
                        "VernacExtend",
                        "fde51f06b028b6b6c256377a9a7a2d57c412a511"
                    ]
                },
                {
                    "command": [
                        "pose (class := {P:A -> Prop | isclass P}).",
                        "VernacExtend",
                        "e0eccead87d469bb1778eb0686676a788f2541af"
                    ]
                },
                {
                    "command": [
                        "pose (contains (c:class) (a:A) := proj1_sig c a).",
                        "VernacExtend",
                        "5d06d6068fa0ab7d78cd64348efb0f24915a0d96"
                    ]
                },
                {
                    "command": [
                        "pose (class_of a := R a).",
                        "VernacExtend",
                        "a1291a22d1e85eb0aad7b296e3f65baf9043fab9"
                    ]
                },
                {
                    "command": [
                        "destruct (FunChoice class A contains) as (f,Hf).",
                        "VernacExtend",
                        "9adfece07d12baac18ddb919586ffefc25bbc45d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros c.",
                        "VernacExtend",
                        "b22524904714a3291216c142472c7a61ff52b803"
                    ]
                },
                {
                    "command": [
                        "apply proj2_sig.",
                        "VernacExtend",
                        "295ab361304d1cfbf908829bcfb291ffadb4fa7c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct (PredExtRepr A) as (h,Hh).",
                        "VernacExtend",
                        "9ac055344bee3cb12904d3f2846d005970dca3ea"
                    ]
                },
                {
                    "command": [
                        "assert (Hisclass:forall a, isclass (h (class_of a))).",
                        "VernacExtend",
                        "6d46738aa1e5c89f4b7bcd6f14630e16cf0a2a00"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intro a.",
                        "VernacExtend",
                        "14896994838b4c124c1f1123678e1f3468f5e2ea"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "destruct (Hh (class_of a)) as (Ha,Huniqa).",
                        "VernacExtend",
                        "a7175befa3a90eb1396182945d953e553eb71e7b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ha; apply Hrefl.",
                        "VernacExtend",
                        "fb2e08436a366cdc0749a5e0ea2114da60364f3d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "pose (f':= fun a => exist _ (h (class_of a)) (Hisclass a) : class).",
                        "VernacExtend",
                        "1fc438eef45b32d0aeaf1d2a8a5e1a88efb8baa7"
                    ]
                },
                {
                    "command": [
                        "exists (fun a => f (f' a)).",
                        "VernacExtend",
                        "af226f058f57987106864bf44b50f72dee2fd20d"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "destruct (Hh (class_of x)) as (Hx,Huniqx).",
                        "VernacExtend",
                        "8398b80f8ad959c81e2dcba4f80539c3cbf6901e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "specialize Hf with (f' x).",
                        "VernacExtend",
                        "746288fba27e9e01b0b3444c35af1bb561f8f098"
                    ]
                },
                {
                    "command": [
                        "simpl in Hf.",
                        "VernacExtend",
                        "fcb5032bdc02ce318beb038babaea61e5194fe85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hx in Hf.",
                        "VernacExtend",
                        "2114b0674aaed433f85e9ec625ef5e66cc02b01c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros y Hxy.",
                        "VernacExtend",
                        "1952a89185a51f8d726deedc1c1b5257ff95b503"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "assert (Heq1: h (class_of x) = h (class_of y)).",
                        "VernacExtend",
                        "9b57174db556a355217e7e00d6ab3e11bd90873b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Huniqx.",
                        "VernacExtend",
                        "276992fca2e37e7622b0491c86b5d88225ddb8e4"
                    ]
                },
                {
                    "command": [
                        "intro z.",
                        "VernacExtend",
                        "4eaa711923e3411ac49bd57d091f8de45ca09388"
                    ]
                },
                {
                    "command": [
                        "unfold class_of.",
                        "VernacExtend",
                        "0bc58d600ac3b8408637df749a49937ffc1e8471"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Heq2:rew Heq1 in Hisclass x = Hisclass y).",
                        "VernacExtend",
                        "12583ef2beedd24a67d35db545eba78e3434d9ce"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply PI.",
                        "VernacExtend",
                        "5df397aaefe167450fff2686780913a78dc9787d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "unfold f'.",
                        "VernacExtend",
                        "d5030c9006a9df78825d4b9238ed86129ec6a957"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heq2.",
                        "VernacExtend",
                        "3f0c9fd650272b9620ee201b675737704fe1cef7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heq1.",
                        "VernacExtend",
                        "71f9b08c0c885813240d60313d46159220a0a5b0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setoid_functional_choice_second_characterization",
            "line_nb": 749,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (FunChoice & ExtPredRepr & PI).",
                        "VernacExtend",
                        "c61d9f6d09dc63c48b6cee6148d81fd82187f10f"
                    ]
                },
                {
                    "command": [
                        "apply functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice.",
                        "VernacExtend",
                        "dc6bdb217a62fb9c964cfbdadf71693d9bd61b03"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros A B.",
                        "VernacExtend",
                        "f0fdd14fe43c412ab9e9cf2b93b27330098322c4"
                    ]
                },
                {
                    "command": [
                        "now apply fun_choice_imp_functional_rel_reification.",
                        "VernacExtend",
                        "cc08d8bfa47e9b7a4eb9d51966257e99d835e3a3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now apply fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice.",
                        "VernacExtend",
                        "0d54987bcc3ac861f24ed28f639f543d5eef096a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro SetoidFunChoice.",
                        "VernacExtend",
                        "3d5f7f0409c9079b131ead7afc8f526e189a0621"
                    ]
                },
                {
                    "command": [
                        "repeat split.",
                        "VernacExtend",
                        "7968f2448e3e51b1de42f5c433248f4a827b4da2"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now intros A B; apply setoid_fun_choice_imp_fun_choice.",
                        "VernacExtend",
                        "916ca229dc3abbe4c5968fa12f60be0e53910c4e"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply repr_fun_choice_imp_ext_pred_repr.",
                        "VernacExtend",
                        "cea21a80d736ec82f4d9c89e660d60be2af086f6"
                    ]
                },
                {
                    "command": [
                        "now apply setoid_fun_choice_imp_repr_fun_choice.",
                        "VernacExtend",
                        "3b2452ccdbc66902d4ae64f1e906790d8fdb6b81"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "apply proof_irrelevance_cci.",
                        "VernacExtend",
                        "d8848bfd01b690f657ea801f2f1c2004cbf2998a"
                    ]
                },
                {
                    "command": [
                        "apply repr_fun_choice_imp_excluded_middle.",
                        "VernacExtend",
                        "edd4a76025b3d1fe6c8bff622dd0d3f6c7ae4c66"
                    ]
                },
                {
                    "command": [
                        "now apply setoid_fun_choice_imp_repr_fun_choice.",
                        "VernacExtend",
                        "3b2452ccdbc66902d4ae64f1e906790d8fdb6b81"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}