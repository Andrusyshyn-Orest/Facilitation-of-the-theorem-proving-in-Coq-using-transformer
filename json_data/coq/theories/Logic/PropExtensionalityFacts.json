{
    "filename": "theories/Logic/PropExtensionalityFacts.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Local Notation PropositionalExtensionality := (forall A B : Prop, (A <-> B) -> A = B).",
            "VernacSyntacticDefinition",
            "d8ddf860d67d7d40c3e5d9805028c98eb17cc04e"
        ],
        [
            "Local Notation ProvablePropositionExtensionality := (forall A:Prop, A -> A = True).",
            "VernacSyntacticDefinition",
            "3ac54f714c69974951b0f91ffd2815d21b48073b"
        ],
        [
            "Local Notation RefutablePropositionExtensionality := (forall A:Prop, ~A -> A = False).",
            "VernacSyntacticDefinition",
            "96a1b675f2ea40944fe9b5db2fbec7dfe9b87423"
        ],
        [
            "Local Notation PredicateExtensionality := (forall (A:Type) (P Q : A -> Prop), (forall x, P x <-> Q x) -> P = Q).",
            "VernacSyntacticDefinition",
            "b385920748e24a339a3dd428fece2736fc96873a"
        ],
        [
            "Local Notation PropositionalFunctionalExtensionality := (forall (A:Type) (P Q : A -> Prop), (forall x, P x = Q x) -> P = Q).",
            "VernacSyntacticDefinition",
            "e9c6dab173621566be5ca633694a12f7dc535270"
        ],
        [
            "Lemma PredExt_imp_PropExt : PredicateExtensionality -> PropositionalExtensionality.",
            "VernacStartTheoremProof",
            "b0e0eb3d59f2cd4bb8147c42c0d1535bee9bdf94"
        ],
        [
            "intros Ext A B Equiv.",
            "VernacExtend",
            "869144709e8e1830e6142f49952fe3de4c499e88"
        ],
        [
            "change A with ((fun _ => A) I).",
            "VernacExtend",
            "c45f518daa18ffb3e1caa5f653f61f3ad45b37f2"
        ],
        [
            "now rewrite Ext with (P := fun _ : True =>A) (Q := fun _ => B).",
            "VernacExtend",
            "2eaad4c35baf4417795524815bcbd99064cdc4be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PredExt_imp_PropFunExt : PredicateExtensionality -> PropositionalFunctionalExtensionality.",
            "VernacStartTheoremProof",
            "681345bfd759e3fc0cdf785ef5d9181458b533f9"
        ],
        [
            "intros Ext A P Q Eq.",
            "VernacExtend",
            "d4ca05602e426b1678c15daa9deef2f4d2fe3039"
        ],
        [
            "apply Ext.",
            "VernacExtend",
            "44d2d59310a378316ffc25fb66b50b907d228bd8"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "now rewrite (Eq x).",
            "VernacExtend",
            "77b7f7f6b6cccfd7048c82cdba8540fbbc825d54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PropExt_and_PropFunExt_imp_PredExt : PropositionalExtensionality -> PropositionalFunctionalExtensionality -> PredicateExtensionality.",
            "VernacStartTheoremProof",
            "5bbead27c4ec521d62ffeb984e8689b4688dae66"
        ],
        [
            "intros Ext FunExt A P Q Equiv.",
            "VernacExtend",
            "3ebb8034303b199a093659384527e5fd9cc6f446"
        ],
        [
            "apply FunExt.",
            "VernacExtend",
            "84643445512dba526e472120ca8831f3b32ee091"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "now apply Ext.",
            "VernacExtend",
            "143a4ea0ac35e473fae3bcb0cd6d3c7858906359"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem PropExt_and_PropFunExt_iff_PredExt : PropositionalExtensionality /\\ PropositionalFunctionalExtensionality <-> PredicateExtensionality.",
            "VernacStartTheoremProof",
            "dd0f1e9699d8b8b96f6774e4f826b363c2d2f2eb"
        ],
        [
            "firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt.",
            "VernacExtend",
            "9957a83731ed0fffa242d84a3f99db96ad84345d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PropExt_imp_ProvPropExt : PropositionalExtensionality -> ProvablePropositionExtensionality.",
            "VernacStartTheoremProof",
            "29ded6da7a3d30bb79b51768b9dc698f67d2bda5"
        ],
        [
            "intros Ext A Ha; apply Ext; split; trivial.",
            "VernacExtend",
            "6a155aa342e0d2e066b7676e71d263ba41a45190"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma PropExt_imp_RefutPropExt : PropositionalExtensionality -> RefutablePropositionExtensionality.",
            "VernacStartTheoremProof",
            "90536c4ea7de74d68aaceecaeccbfd2e9258ffd4"
        ],
        [
            "intros Ext A Ha; apply Ext; split; easy.",
            "VernacExtend",
            "c093f48ac90fccff260aed644d5fe2cac15fe043"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "PredExt_imp_PropExt",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros Ext A B Equiv.",
                        "VernacExtend",
                        "869144709e8e1830e6142f49952fe3de4c499e88"
                    ]
                },
                {
                    "command": [
                        "change A with ((fun _ => A) I).",
                        "VernacExtend",
                        "c45f518daa18ffb3e1caa5f653f61f3ad45b37f2"
                    ]
                },
                {
                    "command": [
                        "now rewrite Ext with (P := fun _ : True =>A) (Q := fun _ => B).",
                        "VernacExtend",
                        "2eaad4c35baf4417795524815bcbd99064cdc4be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PredExt_imp_PropFunExt",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros Ext A P Q Eq.",
                        "VernacExtend",
                        "d4ca05602e426b1678c15daa9deef2f4d2fe3039"
                    ]
                },
                {
                    "command": [
                        "apply Ext.",
                        "VernacExtend",
                        "44d2d59310a378316ffc25fb66b50b907d228bd8"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "now rewrite (Eq x).",
                        "VernacExtend",
                        "77b7f7f6b6cccfd7048c82cdba8540fbbc825d54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PropExt_and_PropFunExt_imp_PredExt",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros Ext FunExt A P Q Equiv.",
                        "VernacExtend",
                        "3ebb8034303b199a093659384527e5fd9cc6f446"
                    ]
                },
                {
                    "command": [
                        "apply FunExt.",
                        "VernacExtend",
                        "84643445512dba526e472120ca8831f3b32ee091"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "now apply Ext.",
                        "VernacExtend",
                        "143a4ea0ac35e473fae3bcb0cd6d3c7858906359"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PropExt_and_PropFunExt_iff_PredExt",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt.",
                        "VernacExtend",
                        "9957a83731ed0fffa242d84a3f99db96ad84345d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PropExt_imp_ProvPropExt",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intros Ext A Ha; apply Ext; split; trivial.",
                        "VernacExtend",
                        "6a155aa342e0d2e066b7676e71d263ba41a45190"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PropExt_imp_RefutPropExt",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros Ext A Ha; apply Ext; split; easy.",
                        "VernacExtend",
                        "c093f48ac90fccff260aed644d5fe2cac15fe043"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}