{
    "filename": "theories/Logic/ClassicalUniqueChoice.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export Classical.",
            "VernacRequire",
            "931639e04b7f4b817db4e158c9ff078a0a2025f4"
        ],
        [
            "Axiom dependent_unique_choice : forall (A:Type) (B:A -> Type) (R:forall x:A, B x -> Prop), (forall x : A, exists! y : B x, R x y) -> (exists f : (forall x:A, B x), forall x:A, R x (f x)).",
            "VernacAssumption",
            "004ae34bead1b7dfbb7089b165ab3dfbba1b6321"
        ],
        [
            "Theorem unique_choice : forall (A B:Type) (R:A -> B -> Prop), (forall x:A, exists! y : B, R x y) -> (exists f:A->B, forall x:A, R x (f x)).",
            "VernacStartTheoremProof",
            "c94833c40c51e13951ec9b8f220ff0f06ccb2ee5"
        ],
        [
            "intros A B.",
            "VernacExtend",
            "f0fdd14fe43c412ab9e9cf2b93b27330098322c4"
        ],
        [
            "apply (dependent_unique_choice A (fun _ => B)).",
            "VernacExtend",
            "488117c11841fd186bdd52827ecdc2d3f38c7bf2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Import Setoid.",
            "VernacRequire",
            "284440985a70c8fcd47c58e3c189cb93b9ec0fcb"
        ],
        [
            "Theorem classic_set_in_prop_context : forall C:Prop, ((forall P:Prop, {P} + {~ P}) -> C) -> C.",
            "VernacStartTheoremProof",
            "d870bccd9830b085e6b27123fe150b79ef161b9f"
        ],
        [
            "intros C HnotEM.",
            "VernacExtend",
            "e9bfea598b9cbcaf52a5ca33fae04de6778b5b16"
        ],
        [
            "set (R := fun A b => A /\\ true = b \\/ ~ A /\\ false = b).",
            "VernacExtend",
            "f54db68ec094bc21d4adccb6831042a0e706a7ee"
        ],
        [
            "assert (H : exists f : Prop -> bool, (forall A:Prop, R A (f A))).",
            "VernacExtend",
            "6ac4d9ab80cc250f99062a3445a792a9692114bd"
        ],
        [
            "apply unique_choice.",
            "VernacExtend",
            "e1988344af7b9eadbebf014b3e1fd114eaa357ba"
        ],
        [
            "intro A.",
            "VernacExtend",
            "b74519ea9e7dd1144c84fcd075b2b02467df752b"
        ],
        [
            "destruct (classic A) as [Ha| Hnota].",
            "VernacExtend",
            "84e4e4a570f3cf76e103cd07027c9c91ad8d34c7"
        ],
        [
            "exists true; split.",
            "VernacExtend",
            "5c456a7ed55da10c5f80c0b7f696dbecbce7872e"
        ],
        [
            "left; split; [ assumption | reflexivity ].",
            "VernacExtend",
            "6def53c989cd7f60de2062a31958ff9ab588c284"
        ],
        [
            "intros y [[_ Hy]| [Hna _]].",
            "VernacExtend",
            "d51c8841dbd7b9b63a32963d00d98070b2346d20"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "exists false; split.",
            "VernacExtend",
            "8fc7c869c0e62e461f62e12901d31d5150b30619"
        ],
        [
            "right; split; [ assumption | reflexivity ].",
            "VernacExtend",
            "99f3d95b900feaed48fde1b4ebae981b15ea37eb"
        ],
        [
            "intros y [[Ha _]| [_ Hy]].",
            "VernacExtend",
            "35041e587dc931e88922ce88dcf1419b8b221e9f"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "destruct H as [f Hf].",
            "VernacExtend",
            "3bf23d91994db4eb71d41f7f32a6b28eb9c7d07b"
        ],
        [
            "apply HnotEM.",
            "VernacExtend",
            "cbd4ab90e03e2270198fb9ba821f818b655794b7"
        ],
        [
            "intro P.",
            "VernacExtend",
            "0910b274c6bc3191fb894c537bf6a9d8a015a918"
        ],
        [
            "assert (HfP := Hf P).",
            "VernacExtend",
            "80d01d26dfceefa1d8a795cf6bf3c480ecca0dfa"
        ],
        [
            "destruct (f P).",
            "VernacExtend",
            "7c993c3486b6acb8d07071725729b24e21440985"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "destruct HfP as [[Ha _]| [_ Hfalse]].",
            "VernacExtend",
            "109bd6440d04fe5282599c6427830ad9c156607d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "destruct HfP as [[_ Hfalse]| [Hna _]].",
            "VernacExtend",
            "32a5c7ec95e1b936323d4992dac6ef05020c1008"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Corollary not_not_classic_set : ((forall P:Prop, {P} + {~ P}) -> False) -> False.",
            "VernacStartTheoremProof",
            "fffb6627af864cb75aca0f4e7776aa5ff1172010"
        ],
        [
            "apply classic_set_in_prop_context.",
            "VernacExtend",
            "b1d076d2a9263201e916e8fc816dbf55ddb264ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation classic_set := not_not_classic_set (only parsing).",
            "VernacSyntacticDefinition",
            "ad773facc575ddddabf81e36b8bd75974610db0b"
        ]
    ],
    "proofs": [
        {
            "name": "unique_choice",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "intros A B.",
                        "VernacExtend",
                        "f0fdd14fe43c412ab9e9cf2b93b27330098322c4"
                    ]
                },
                {
                    "command": [
                        "apply (dependent_unique_choice A (fun _ => B)).",
                        "VernacExtend",
                        "488117c11841fd186bdd52827ecdc2d3f38c7bf2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "classic_set_in_prop_context",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros C HnotEM.",
                        "VernacExtend",
                        "e9bfea598b9cbcaf52a5ca33fae04de6778b5b16"
                    ]
                },
                {
                    "command": [
                        "set (R := fun A b => A /\\ true = b \\/ ~ A /\\ false = b).",
                        "VernacExtend",
                        "f54db68ec094bc21d4adccb6831042a0e706a7ee"
                    ]
                },
                {
                    "command": [
                        "assert (H : exists f : Prop -> bool, (forall A:Prop, R A (f A))).",
                        "VernacExtend",
                        "6ac4d9ab80cc250f99062a3445a792a9692114bd"
                    ]
                },
                {
                    "command": [
                        "apply unique_choice.",
                        "VernacExtend",
                        "e1988344af7b9eadbebf014b3e1fd114eaa357ba"
                    ]
                },
                {
                    "command": [
                        "intro A.",
                        "VernacExtend",
                        "b74519ea9e7dd1144c84fcd075b2b02467df752b"
                    ]
                },
                {
                    "command": [
                        "destruct (classic A) as [Ha| Hnota].",
                        "VernacExtend",
                        "84e4e4a570f3cf76e103cd07027c9c91ad8d34c7"
                    ]
                },
                {
                    "command": [
                        "exists true; split.",
                        "VernacExtend",
                        "5c456a7ed55da10c5f80c0b7f696dbecbce7872e"
                    ]
                },
                {
                    "command": [
                        "left; split; [ assumption | reflexivity ].",
                        "VernacExtend",
                        "6def53c989cd7f60de2062a31958ff9ab588c284"
                    ]
                },
                {
                    "command": [
                        "intros y [[_ Hy]| [Hna _]].",
                        "VernacExtend",
                        "d51c8841dbd7b9b63a32963d00d98070b2346d20"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "exists false; split.",
                        "VernacExtend",
                        "8fc7c869c0e62e461f62e12901d31d5150b30619"
                    ]
                },
                {
                    "command": [
                        "right; split; [ assumption | reflexivity ].",
                        "VernacExtend",
                        "99f3d95b900feaed48fde1b4ebae981b15ea37eb"
                    ]
                },
                {
                    "command": [
                        "intros y [[Ha _]| [_ Hy]].",
                        "VernacExtend",
                        "35041e587dc931e88922ce88dcf1419b8b221e9f"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "destruct H as [f Hf].",
                        "VernacExtend",
                        "3bf23d91994db4eb71d41f7f32a6b28eb9c7d07b"
                    ]
                },
                {
                    "command": [
                        "apply HnotEM.",
                        "VernacExtend",
                        "cbd4ab90e03e2270198fb9ba821f818b655794b7"
                    ]
                },
                {
                    "command": [
                        "intro P.",
                        "VernacExtend",
                        "0910b274c6bc3191fb894c537bf6a9d8a015a918"
                    ]
                },
                {
                    "command": [
                        "assert (HfP := Hf P).",
                        "VernacExtend",
                        "80d01d26dfceefa1d8a795cf6bf3c480ecca0dfa"
                    ]
                },
                {
                    "command": [
                        "destruct (f P).",
                        "VernacExtend",
                        "7c993c3486b6acb8d07071725729b24e21440985"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "destruct HfP as [[Ha _]| [_ Hfalse]].",
                        "VernacExtend",
                        "109bd6440d04fe5282599c6427830ad9c156607d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "destruct HfP as [[_ Hfalse]| [Hna _]].",
                        "VernacExtend",
                        "32a5c7ec95e1b936323d4992dac6ef05020c1008"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_not_classic_set",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "apply classic_set_in_prop_context.",
                        "VernacExtend",
                        "b1d076d2a9263201e916e8fc816dbf55ddb264ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}