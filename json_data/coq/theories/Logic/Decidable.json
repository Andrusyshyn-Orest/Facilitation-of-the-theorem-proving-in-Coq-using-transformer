{
    "filename": "theories/Logic/Decidable.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Definition decidable (P:Prop) := P \\/ ~ P.",
            "VernacDefinition",
            "2ad8f9607a665f37e75242a7d220a7a7185090ab"
        ],
        [
            "Theorem dec_not_not : forall P:Prop, decidable P -> (~ P -> False) -> P.",
            "VernacStartTheoremProof",
            "21bcde8f28a587db95533b53ac87a1e5d23a722e"
        ],
        [
            "unfold decidable; tauto.",
            "VernacExtend",
            "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem dec_True : decidable True.",
            "VernacStartTheoremProof",
            "d55c2f254fc0751d56a37f061958db638426bfe1"
        ],
        [
            "unfold decidable; auto.",
            "VernacExtend",
            "926d0458882ff32ec3435b3f792dd53b0ba5099f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem dec_False : decidable False.",
            "VernacStartTheoremProof",
            "c8d2f02fa00861c518c5ed9dd3603f44abde44a7"
        ],
        [
            "unfold decidable, not; auto.",
            "VernacExtend",
            "1802bbc67a7461436c4a29065555113f26e85e48"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem dec_or : forall A B:Prop, decidable A -> decidable B -> decidable (A \\/ B).",
            "VernacStartTheoremProof",
            "81e343d5c94a7977776c14efd814e655c4c27c62"
        ],
        [
            "unfold decidable; tauto.",
            "VernacExtend",
            "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem dec_and : forall A B:Prop, decidable A -> decidable B -> decidable (A /\\ B).",
            "VernacStartTheoremProof",
            "78b9596dad33ed7cc94087e8bf9aaeb112a79928"
        ],
        [
            "unfold decidable; tauto.",
            "VernacExtend",
            "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem dec_not : forall A:Prop, decidable A -> decidable (~ A).",
            "VernacStartTheoremProof",
            "48bc1f421c892e4fb19b18ea236f253be9f31689"
        ],
        [
            "unfold decidable; tauto.",
            "VernacExtend",
            "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem dec_imp : forall A B:Prop, decidable A -> decidable B -> decidable (A -> B).",
            "VernacStartTheoremProof",
            "ed57bd794e76d68c76b644513fab401adb67508c"
        ],
        [
            "unfold decidable; tauto.",
            "VernacExtend",
            "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem dec_iff : forall A B:Prop, decidable A -> decidable B -> decidable (A<->B).",
            "VernacStartTheoremProof",
            "06bbf12211567b6bba0c4855d5c239f933629868"
        ],
        [
            "unfold decidable.",
            "VernacExtend",
            "9d605c38a8f12a8a99df27306dcdd2aac64596da"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_not : forall P:Prop, decidable P -> ~ ~ P -> P.",
            "VernacStartTheoremProof",
            "6953e9d5791ec07f561f2f4b881053525e5f00b6"
        ],
        [
            "unfold decidable; tauto.",
            "VernacExtend",
            "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_or : forall A B:Prop, ~ (A \\/ B) -> ~ A /\\ ~ B.",
            "VernacStartTheoremProof",
            "4a81b80c5a1d7522c96b39b0f494f9aa81a9a140"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_and : forall A B:Prop, decidable A -> ~ (A /\\ B) -> ~ A \\/ ~ B.",
            "VernacStartTheoremProof",
            "1d8518f3e11ba9c8410580f24626898f56d3063c"
        ],
        [
            "unfold decidable; tauto.",
            "VernacExtend",
            "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_imp : forall A B:Prop, decidable A -> ~ (A -> B) -> A /\\ ~ B.",
            "VernacStartTheoremProof",
            "6bfd6d90479705beb619a75dcce64a4fede0c2a2"
        ],
        [
            "unfold decidable; tauto.",
            "VernacExtend",
            "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem imp_simp : forall A B:Prop, decidable A -> (A -> B) -> ~ A \\/ B.",
            "VernacStartTheoremProof",
            "8eb25bdbf497cad09e7573f2673f92086366da10"
        ],
        [
            "unfold decidable; tauto.",
            "VernacExtend",
            "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_iff : forall A B:Prop, decidable A -> decidable B -> ~ (A <-> B) -> (A /\\ ~ B) \\/ (~ A /\\ B).",
            "VernacStartTheoremProof",
            "6747ff703fa0e9292a23026c8bf41afccdd756ad"
        ],
        [
            "unfold decidable; tauto.",
            "VernacExtend",
            "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_true_iff : (True -> False) <-> False.",
            "VernacStartTheoremProof",
            "0f29f9bace3ce05379d1d5fbe78f762dfe8b0612"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_false_iff : (False -> False) <-> True.",
            "VernacStartTheoremProof",
            "87e2fd7ae0e698416864ed92051fe879174058b6"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_not_iff : forall A:Prop, decidable A -> (((A -> False) -> False) <-> A).",
            "VernacStartTheoremProof",
            "e07784081e7148824bc7d18281a4b6af1696d9e0"
        ],
        [
            "unfold decidable; tauto.",
            "VernacExtend",
            "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem contrapositive : forall A B:Prop, decidable A -> (((A -> False) -> (B -> False)) <-> (B -> A)).",
            "VernacStartTheoremProof",
            "ccd915c737576d6f3130109ab99a14a928e3a402"
        ],
        [
            "unfold decidable; tauto.",
            "VernacExtend",
            "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or_not_l_iff_1 : forall A B: Prop, decidable A -> ((A -> False) \\/ B <-> (A -> B)).",
            "VernacStartTheoremProof",
            "6a47a80ae3368c42a3839502a9fc3b24a49827c9"
        ],
        [
            "unfold decidable.",
            "VernacExtend",
            "9d605c38a8f12a8a99df27306dcdd2aac64596da"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or_not_l_iff_2 : forall A B: Prop, decidable B -> ((A -> False) \\/ B <-> (A -> B)).",
            "VernacStartTheoremProof",
            "17fcce64475e34ce7a5849cf5df4d095a88e9aff"
        ],
        [
            "unfold decidable.",
            "VernacExtend",
            "9d605c38a8f12a8a99df27306dcdd2aac64596da"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or_not_r_iff_1 : forall A B: Prop, decidable A -> (A \\/ (B -> False) <-> (B -> A)).",
            "VernacStartTheoremProof",
            "8ca473d15d9351819fc4d90750b93e3d1ffc83c9"
        ],
        [
            "unfold decidable.",
            "VernacExtend",
            "9d605c38a8f12a8a99df27306dcdd2aac64596da"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or_not_r_iff_2 : forall A B: Prop, decidable B -> (A \\/ (B -> False) <-> (B -> A)).",
            "VernacStartTheoremProof",
            "8ac00647e91f1afeaeaa0808d480b5dc6b8918fe"
        ],
        [
            "unfold decidable.",
            "VernacExtend",
            "9d605c38a8f12a8a99df27306dcdd2aac64596da"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma imp_not_l : forall A B: Prop, decidable A -> (((A -> False) -> B) <-> (A \\/ B)).",
            "VernacStartTheoremProof",
            "076818370066f58b5bc05f54b3c754bb4ab1090b"
        ],
        [
            "unfold decidable.",
            "VernacExtend",
            "9d605c38a8f12a8a99df27306dcdd2aac64596da"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_or_iff : forall A B:Prop, (A \\/ B -> False) <-> (A -> False) /\\ (B -> False).",
            "VernacStartTheoremProof",
            "124f60cf7ff442994005bb12974e889d6b19dd78"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_and_iff : forall A B:Prop, (A /\\ B -> False) <-> (A -> B -> False).",
            "VernacStartTheoremProof",
            "5f949fd0baef331c0098661955ffc3efb10d48a3"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_imp_iff : forall A B:Prop, decidable A -> (((A -> B) -> False) <-> A /\\ (B -> False)).",
            "VernacStartTheoremProof",
            "e939132fa972d9be91dd901ed3452c76e484a56d"
        ],
        [
            "unfold decidable.",
            "VernacExtend",
            "9d605c38a8f12a8a99df27306dcdd2aac64596da"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_imp_rev_iff : forall A B : Prop, decidable A -> (((A -> B) -> False) <-> (B -> False) /\\ A).",
            "VernacStartTheoremProof",
            "7bcbfba7497a2d5658bebbad3220f95be3311c9c"
        ],
        [
            "unfold decidable.",
            "VernacExtend",
            "9d605c38a8f12a8a99df27306dcdd2aac64596da"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem dec_functional_relation : forall (X Y : Type) (A:X->Y->Prop), (forall y y' : Y, decidable (y=y')) -> (forall x, exists! y, A x y) -> forall x y, decidable (A x y).",
            "VernacStartTheoremProof",
            "f408bb4d327d6a9c89014c5e1929fe9d1a0cad91"
        ],
        [
            "intros X Y A Hdec H x y.",
            "VernacExtend",
            "e071cc0604744b98edf860c793bafed19d446690"
        ],
        [
            "destruct (H x) as (y',(Hex,Huniq)).",
            "VernacExtend",
            "ae9035a35d2a8e0813e1b454801ec0577dea732d"
        ],
        [
            "destruct (Hdec y y') as [->|Hnot]; firstorder.",
            "VernacExtend",
            "55edccdac6f9c4115b5f3dc7b544587b89d62072"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve dec_True dec_False dec_or dec_and dec_imp dec_not dec_iff : decidable_prop.",
            "VernacHints",
            "b6d6c783cb86cc7b2075944df32ef26d21443706"
        ],
        [
            "Tactic Notation \"solve_decidable\" \"using\" ident(db) := match goal with | |- decidable _ => solve [ auto 100 with decidable_prop db ] end.",
            "VernacExtend",
            "bf6f2c746ecee6035b312ae9d68d7ae3829f3a16"
        ],
        [
            "Tactic Notation \"solve_decidable\" := solve_decidable using core.",
            "VernacExtend",
            "29231d9054b625e637f09f51fb4f76581af3ffbd"
        ]
    ],
    "proofs": [
        {
            "name": "dec_not_not",
            "line_nb": 1,
            "steps": [
                {
                    "command": [
                        "unfold decidable; tauto.",
                        "VernacExtend",
                        "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dec_True",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "unfold decidable; auto.",
                        "VernacExtend",
                        "926d0458882ff32ec3435b3f792dd53b0ba5099f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dec_False",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "unfold decidable, not; auto.",
                        "VernacExtend",
                        "1802bbc67a7461436c4a29065555113f26e85e48"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dec_or",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "unfold decidable; tauto.",
                        "VernacExtend",
                        "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dec_and",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "unfold decidable; tauto.",
                        "VernacExtend",
                        "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dec_not",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "unfold decidable; tauto.",
                        "VernacExtend",
                        "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dec_imp",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "unfold decidable; tauto.",
                        "VernacExtend",
                        "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dec_iff",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "unfold decidable.",
                        "VernacExtend",
                        "9d605c38a8f12a8a99df27306dcdd2aac64596da"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_not",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "unfold decidable; tauto.",
                        "VernacExtend",
                        "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_or",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_and",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "unfold decidable; tauto.",
                        "VernacExtend",
                        "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_imp",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "unfold decidable; tauto.",
                        "VernacExtend",
                        "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "imp_simp",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "unfold decidable; tauto.",
                        "VernacExtend",
                        "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_iff",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "unfold decidable; tauto.",
                        "VernacExtend",
                        "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_true_iff",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_false_iff",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_not_iff",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "unfold decidable; tauto.",
                        "VernacExtend",
                        "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "contrapositive",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "unfold decidable; tauto.",
                        "VernacExtend",
                        "2b3d4dfdcc9f7c0c68db659572a62c9f95964720"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_not_l_iff_1",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "unfold decidable.",
                        "VernacExtend",
                        "9d605c38a8f12a8a99df27306dcdd2aac64596da"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_not_l_iff_2",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "unfold decidable.",
                        "VernacExtend",
                        "9d605c38a8f12a8a99df27306dcdd2aac64596da"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_not_r_iff_1",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "unfold decidable.",
                        "VernacExtend",
                        "9d605c38a8f12a8a99df27306dcdd2aac64596da"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_not_r_iff_2",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "unfold decidable.",
                        "VernacExtend",
                        "9d605c38a8f12a8a99df27306dcdd2aac64596da"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "imp_not_l",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "unfold decidable.",
                        "VernacExtend",
                        "9d605c38a8f12a8a99df27306dcdd2aac64596da"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_or_iff",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_and_iff",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_imp_iff",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "unfold decidable.",
                        "VernacExtend",
                        "9d605c38a8f12a8a99df27306dcdd2aac64596da"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_imp_rev_iff",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "unfold decidable.",
                        "VernacExtend",
                        "9d605c38a8f12a8a99df27306dcdd2aac64596da"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dec_functional_relation",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intros X Y A Hdec H x y.",
                        "VernacExtend",
                        "e071cc0604744b98edf860c793bafed19d446690"
                    ]
                },
                {
                    "command": [
                        "destruct (H x) as (y',(Hex,Huniq)).",
                        "VernacExtend",
                        "ae9035a35d2a8e0813e1b454801ec0577dea732d"
                    ]
                },
                {
                    "command": [
                        "destruct (Hdec y y') as [->|Hnot]; firstorder.",
                        "VernacExtend",
                        "55edccdac6f9c4115b5f3dc7b544587b89d62072"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}