{
    "filename": "theories/Logic/FinFun.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import List Compare_dec EqNat Decidable ListDec.",
            "VernacRequire",
            "dd949f73a999de865a85dd000ad41628a37ee104"
        ],
        [
            "Require Fin.",
            "VernacRequire",
            "6831eab5390b1f3ad450bb8ebdfe1e71c302238b"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Definition Injective {A B} (f : A->B) := forall x y, f x = f y -> x = y.",
            "VernacDefinition",
            "438005182a6329abc88b11b5f75c9a88269c212d"
        ],
        [
            "Definition Surjective {A B} (f : A->B) := forall y, exists x, f x = y.",
            "VernacDefinition",
            "74bc350ec69f32c9a08ccda0aa604f063640e7f4"
        ],
        [
            "Definition Bijective {A B} (f : A->B) := exists g:B->A, (forall x, g (f x) = x) /\\ (forall y, f (g y) = y).",
            "VernacDefinition",
            "b3e3501faab7fd303f04b3d2ce6f6bc0f5035c04"
        ],
        [
            "Definition Full {A:Type} (l:list A) := forall a:A, In a l.",
            "VernacDefinition",
            "6d8bbc7f12ddc6a65360bb3e605ea2a623f93cf7"
        ],
        [
            "Definition Finite (A:Type) := exists (l:list A), Full l.",
            "VernacDefinition",
            "5fc4a2aa92a52bc42d4bdd9634edb5de0bcff09a"
        ],
        [
            "Definition Listing {A:Type} (l:list A) := NoDup l /\\ Full l.",
            "VernacDefinition",
            "c7f03ed07c79b16bb2a9086b529bce5dd7e7e450"
        ],
        [
            "Definition Finite' (A:Type) := exists (l:list A), Listing l.",
            "VernacDefinition",
            "ce53bb44d3d6573f4b710d828d5de059cd79e369"
        ],
        [
            "Lemma Finite_alt A (d:decidable_eq A) : Finite A <-> Finite' A.",
            "VernacStartTheoremProof",
            "8668ca15a8766dad157a2a517529419a1f491585"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (l,F).",
            "VernacExtend",
            "d19e216a66295b4b60fe15b20c704ce9a07d0794"
        ],
        [
            "destruct (uniquify d l) as (l' & N & I).",
            "VernacExtend",
            "f3d0aef573e5c51456567dd8ce53c54829f52c9e"
        ],
        [
            "exists l'.",
            "VernacExtend",
            "254f8e941c4c968bd607990c3604ba03ec0e956e"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply I, F.",
            "VernacExtend",
            "fdbab7de001fd4221383296383030e9d5d31199a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (l & _ & F).",
            "VernacExtend",
            "f6950c591c9e70265be8cb489f2f034f1a612546"
        ],
        [
            "now exists l.",
            "VernacExtend",
            "79ff13d3c729b6e5e1553131e53ebcf7a47e1fdb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Injective_map_NoDup A B (f:A->B) (l:list A) : Injective f -> NoDup l -> NoDup (map f l).",
            "VernacStartTheoremProof",
            "c2f1ad756dd615492906e339431753aed479ee07"
        ],
        [
            "intros Ij.",
            "VernacExtend",
            "542458cad8742f2e13b722ab8fdcdb4c764a46aa"
        ],
        [
            "induction 1 as [|x l X N IH]; simpl; constructor; trivial.",
            "VernacExtend",
            "770a7465afccd31cefce25d59adda32404412105"
        ],
        [
            "rewrite in_map_iff.",
            "VernacExtend",
            "a55211f52b1485764a1a9aeded8063ea6d2e66ea"
        ],
        [
            "intros (y & E & Y).",
            "VernacExtend",
            "b2794f884f43997c4d9c4d21dea8111e227b9dec"
        ],
        [
            "apply Ij in E.",
            "VernacExtend",
            "a940ad3bf89fe0b36fccef41c26fc1bb2c304a5c"
        ],
        [
            "now subst.",
            "VernacExtend",
            "89cc250d34dafb32c3653b2706abafd433151f2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Injective_list_carac A B (d:decidable_eq A)(f:A->B) : Injective f <-> (forall l, NoDup l -> NoDup (map f l)).",
            "VernacStartTheoremProof",
            "8c64879faac4eeb46ce1879391138e0fc77b9a4c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now apply Injective_map_NoDup.",
            "VernacExtend",
            "964feb2cf68833b4e42e7a50701eb4e888fcf686"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros H x y E.",
            "VernacExtend",
            "15e8d2aab240313e0e330cf1bf8185c824b5cc06"
        ],
        [
            "destruct (d x y); trivial.",
            "VernacExtend",
            "2ccba3e93d736aff7c1e57ca9a430b925ff92c66"
        ],
        [
            "assert (N : NoDup (x::y::nil)).",
            "VernacExtend",
            "f577e833c0d396758c15743f280813139d7841f5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "repeat constructor; simpl; intuition.",
            "VernacExtend",
            "5544b48f1f7bd5b6125cd11c23cdf8284ddf0af8"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "specialize (H _ N).",
            "VernacExtend",
            "abcbc8484ac124ee9f0f6f6e4fd57351bd5ebd4c"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite E in H.",
            "VernacExtend",
            "0ae20eaaaef6ce5f353e2f510070b55a5eb4c4a3"
        ],
        [
            "inversion_clear H; simpl in *; intuition.",
            "VernacExtend",
            "2dd59c028bd29de7a6d9a302dfd4588921d46f12"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Injective_carac A B (l:list A) : Listing l -> forall (f:A->B), Injective f <-> NoDup (map f l).",
            "VernacStartTheoremProof",
            "9a352cdd9702b9576121023a4b0d4e4a82a219b5"
        ],
        [
            "intros L f.",
            "VernacExtend",
            "5fece9aace26d8b49b42970899e806402381f0b5"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros Ij.",
            "VernacExtend",
            "542458cad8742f2e13b722ab8fdcdb4c764a46aa"
        ],
        [
            "apply Injective_map_NoDup; trivial.",
            "VernacExtend",
            "bf6e9a22306d34c3cce5544f6b476148fa579084"
        ],
        [
            "apply L.",
            "VernacExtend",
            "6118d7728952f7fba9ff2e5c4949b4ba3ed2bbbf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros N x y E.",
            "VernacExtend",
            "c6239cfd938a50bea1a9699fc5c7a9e12ffb0c8a"
        ],
        [
            "assert (X : In x l) by apply L.",
            "VernacExtend",
            "68e868e171840f02794666bfb7c43d1ca36649a2"
        ],
        [
            "assert (Y : In y l) by apply L.",
            "VernacExtend",
            "4ee19638a2caf2c040a02e9d86cd05d29aa5423d"
        ],
        [
            "apply In_nth_error in X.",
            "VernacExtend",
            "65c513f548a16a7597ebd8076539bb8653f8ba47"
        ],
        [
            "destruct X as (i,X).",
            "VernacExtend",
            "a3db50f6dc42d38fd3aa789eec5150313ab9dc11"
        ],
        [
            "apply In_nth_error in Y.",
            "VernacExtend",
            "4055c1b78a0085bcc5fd1b550ca40bbeb85bee1d"
        ],
        [
            "destruct Y as (j,Y).",
            "VernacExtend",
            "ce161d412addad4c03c998dd08d8add428261fe0"
        ],
        [
            "assert (X' := map_nth_error f _ _ X).",
            "VernacExtend",
            "b7b7569f11b91f4185dcc8100e96cbe98530b11f"
        ],
        [
            "assert (Y' := map_nth_error f _ _ Y).",
            "VernacExtend",
            "e39fa23dae38f998b6b6e4cfbae1e31dbf60da3e"
        ],
        [
            "assert (i = j).",
            "VernacExtend",
            "b8e340e5858407d472bf669317a9807f9beb17ea"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "rewrite NoDup_nth_error in N.",
            "VernacExtend",
            "bc493105a3ce1dbbc33a1c76303de253ada25fcd"
        ],
        [
            "apply N.",
            "VernacExtend",
            "18fe25f6088a3ccb3bf8669fcffd78cee853a725"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- nth_error_Some.",
            "VernacExtend",
            "49eea08c03e3011e20b335f95a3dc8bef554ae96"
        ],
        [
            "now rewrite X'.",
            "VernacExtend",
            "3323a65b09da236ae7817a6adb3cdbcfbe9dbb1f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite X', Y'.",
            "VernacExtend",
            "36f2f151c61705cb9a578999c532123674950262"
        ],
        [
            "now f_equal.",
            "VernacExtend",
            "523c8bb1ba392fd7c541cd8a77c609b310d41f22"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "subst j.",
            "VernacExtend",
            "4959fd5cfffa27452c2d688b999587736fe34624"
        ],
        [
            "rewrite Y in X.",
            "VernacExtend",
            "a3fab72d8a305d4d0e6d4ff1b60c286e49d38d35"
        ],
        [
            "now injection X.",
            "VernacExtend",
            "93cb41b17bd031124f6cf61b982b7151dea70c5c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Surjective_list_carac A B (f:A->B): Surjective f <-> (forall lB, exists lA, incl lB (map f lA)).",
            "VernacStartTheoremProof",
            "37af494e8a372c0d0ccd420c15caa9e5ceafc40a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros Su.",
            "VernacExtend",
            "6af30755860e8ac47a21a2081c8818f22432de9a"
        ],
        [
            "induction lB as [|b lB IH].",
            "VernacExtend",
            "4f5715d7403184f4a589925ed1e84e08e48d74e0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now exists nil.",
            "VernacExtend",
            "0c5be0dbeb43d75fe7a53ab574f9dc411afaf7d1"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "destruct (Su b) as (a,E).",
            "VernacExtend",
            "d3af71fcc9c0d73e3d2b17297fd1bfcc00821043"
        ],
        [
            "destruct IH as (lA,IC).",
            "VernacExtend",
            "b262b476e3673cdbe61502eec4b1357135e8e123"
        ],
        [
            "exists (a::lA).",
            "VernacExtend",
            "a43dba28737d4586dd434abfc9404b421e1c73f7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite E.",
            "VernacExtend",
            "304079e57d3d6c0912193a26e70d779c9e1768b9"
        ],
        [
            "intros x [X|X]; simpl; intuition.",
            "VernacExtend",
            "d7a6b30eef664da776ea265bff6b83e8fdb4a391"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros H y.",
            "VernacExtend",
            "2e077899e1942a5173b3c3117226c3524ab4f056"
        ],
        [
            "destruct (H (y::nil)) as (lA,IC).",
            "VernacExtend",
            "9e699dda0366db633fb83a46c9a740ce6e73c46b"
        ],
        [
            "assert (IN : In y (map f lA)) by (apply (IC y); now left).",
            "VernacExtend",
            "eaa8eeaa85727e9756409b590ce05ec9d569136a"
        ],
        [
            "rewrite in_map_iff in IN.",
            "VernacExtend",
            "888b1c8fd411c1ec37441f71d9f9bbcdfcfe6f68"
        ],
        [
            "destruct IN as (x & E & _).",
            "VernacExtend",
            "4f9b529faa97157f7003ddd7c75cccb1a69b2a46"
        ],
        [
            "now exists x.",
            "VernacExtend",
            "f05bce6ee70a4547cae07a16bc50c6f8d5e90141"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Surjective_carac A B : Finite B -> decidable_eq B -> forall f:A->B, Surjective f <-> (exists lA, Listing (map f lA)).",
            "VernacStartTheoremProof",
            "a8d330a9905116f6d9a4989f7bb181bd42c4a590"
        ],
        [
            "intros (lB,FB) d.",
            "VernacExtend",
            "9e9d3036ee9cb4100aa0b3b767be7c5c167a6adf"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Surjective_list_carac.",
            "VernacExtend",
            "02038a05cdab541b55bddf21565198c2cadb987d"
        ],
        [
            "intros Su.",
            "VernacExtend",
            "6af30755860e8ac47a21a2081c8818f22432de9a"
        ],
        [
            "destruct (Su lB) as (lA,IC).",
            "VernacExtend",
            "2c14cfd981f47eea57b5fb384c669fdee9f9a92c"
        ],
        [
            "destruct (uniquify_map d f lA) as (lA' & N & IC').",
            "VernacExtend",
            "185f637c469aec0d83bbb9a9953ca78033273758"
        ],
        [
            "exists lA'.",
            "VernacExtend",
            "7363d16c22f8740cf3748b7e42f1478daade7cf8"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "apply IC', IC, FB.",
            "VernacExtend",
            "39fecf0a576e88f3d653cacdc74dae578105c6c9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (lA & N & FA) y.",
            "VernacExtend",
            "a009d34ccb5116475ef64fb248dc20a3b3cc9b5b"
        ],
        [
            "generalize (FA y).",
            "VernacExtend",
            "fdfd71725a95126e15804bd81a0e39ff2a035509"
        ],
        [
            "rewrite in_map_iff.",
            "VernacExtend",
            "a55211f52b1485764a1a9aeded8063ea6d2e66ea"
        ],
        [
            "intros (x & E & _).",
            "VernacExtend",
            "ee7cdbe9038f4781ac7387a2577fc5c6ab090054"
        ],
        [
            "now exists x.",
            "VernacExtend",
            "f05bce6ee70a4547cae07a16bc50c6f8d5e90141"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Endo_Injective_Surjective : forall A, Finite A -> decidable_eq A -> forall f:A->A, Injective f <-> Surjective f.",
            "VernacStartTheoremProof",
            "d71cc8c3aa79e9b0a23fd3f13ab9422be7bf9540"
        ],
        [
            "intros A F d f.",
            "VernacExtend",
            "1c9bb0f1dbff6b4c1eecd4857839ddefb38f75d8"
        ],
        [
            "rewrite (Surjective_carac F d).",
            "VernacExtend",
            "3c6a2e82de332ef80134539b836be4cc6b0d30d3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply (Finite_alt d) in F.",
            "VernacExtend",
            "295ee4cf5f5fe29e6001b3c543926d0e1fdf2f14"
        ],
        [
            "destruct F as (l,L).",
            "VernacExtend",
            "c01affeb8e77eebfe71a1690f329bbffba03137f"
        ],
        [
            "rewrite (Injective_carac L); intros.",
            "VernacExtend",
            "24e16486d7f42c7bb8dfed1eead5a9b41b9d6756"
        ],
        [
            "exists l; split; trivial.",
            "VernacExtend",
            "62211017ec1b7fc81643f33fc17e18f6153c9d38"
        ],
        [
            "destruct L as (N,F).",
            "VernacExtend",
            "11540edfc108bb662ed8ac93c89cd3208487afce"
        ],
        [
            "assert (I : incl l (map f l)).",
            "VernacExtend",
            "b6e9a70f665cdd7537ccfdf5b342246560fc9809"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply NoDup_length_incl; trivial.",
            "VernacExtend",
            "03c514fc17f0d2b364e89715c752871291d0ed95"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite map_length.",
            "VernacExtend",
            "8c462a424001e55696f583f567ff7812cade1a9b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros x _.",
            "VernacExtend",
            "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
        ],
        [
            "apply F.",
            "VernacExtend",
            "8ad83bba3f0c01314ccc03d5461b3e8143befbdd"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "apply I, F.",
            "VernacExtend",
            "fdbab7de001fd4221383296383030e9d5d31199a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "clear F d.",
            "VernacExtend",
            "4e1a303a8da26cccb67a9cece11239a93109aabb"
        ],
        [
            "intros (l,L).",
            "VernacExtend",
            "64920b265e1b1d39edcfb6f28aa1a6f3ff9be4a1"
        ],
        [
            "assert (N : NoDup l).",
            "VernacExtend",
            "365f90aa2e7b8bcf7adb7b2dac675cc010b8b6c5"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply (NoDup_map_inv f), L.",
            "VernacExtend",
            "faabcfdf2e2b57a80986d85fc7abb6ec401759cc"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (I : incl (map f l) l).",
            "VernacExtend",
            "47444e241a03845354524aca2544603f6e130713"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply NoDup_length_incl; trivial.",
            "VernacExtend",
            "03c514fc17f0d2b364e89715c752871291d0ed95"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite map_length.",
            "VernacExtend",
            "8c462a424001e55696f583f567ff7812cade1a9b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros x _.",
            "VernacExtend",
            "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
        ],
        [
            "apply L.",
            "VernacExtend",
            "6118d7728952f7fba9ff2e5c4949b4ba3ed2bbbf"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (L' : Listing l).",
            "VernacExtend",
            "01a84c0726968d630665c8de648c6408513c099b"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "apply I, L.",
            "VernacExtend",
            "0f2229c27d2b4914aa94367d0864b66009d51c8d"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "apply (Injective_carac L'), L.",
            "VernacExtend",
            "b6b0ab1f499a4301dc52d000aa8221fbf39542a7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition EqDec (A:Type) := forall x y:A, {x=y}+{x<>y}.",
            "VernacDefinition",
            "c3a4f39473c80c5fe902fe91418cb605f9cd113d"
        ],
        [
            "Lemma Finite_Empty_or_not A : Finite A -> (A->False) \\/ exists a:A,True.",
            "VernacStartTheoremProof",
            "61d36305271d36b470f63fad3e08652c55b1b589"
        ],
        [
            "intros (l,F).",
            "VernacExtend",
            "d19e216a66295b4b60fe15b20c704ce9a07d0794"
        ],
        [
            "destruct l.",
            "VernacExtend",
            "a4218804e377a0d685aafec59adbc3652d543b9c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left; exact F.",
            "VernacExtend",
            "a5303e21e8dd207ae7de185c1cb8deb6886da381"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right; now exists a.",
            "VernacExtend",
            "7d9a9b34b14486ec32e485957a58c55c7719d468"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Surjective_inverse : forall A B, Finite A -> EqDec B -> forall f:A->B, Surjective f -> exists g:B->A, forall x, f (g x) = x.",
            "VernacStartTheoremProof",
            "bac16b9872cc2d45d1910e00547da0fb485686e3"
        ],
        [
            "intros A B F d f Su.",
            "VernacExtend",
            "146b5ba0de4bad7cfa50f125fbfb9b66d8054e93"
        ],
        [
            "destruct (Finite_Empty_or_not F) as [noA | (a,_)].",
            "VernacExtend",
            "345275301f0d42c9525a279093083d480bfbfbd7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assert (noB : B -> False).",
            "VernacExtend",
            "9894d6736b471a3885a30757002b0405d9783a86"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "intros y.",
            "VernacExtend",
            "d3cd14babe4904577f05dd23b379c589bf67ea40"
        ],
        [
            "now destruct (Su y).",
            "VernacExtend",
            "b2c34799d514e858015af160b3ef2cddb79f2d97"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "exists (fun y => False_rect _ (noB y)).",
            "VernacExtend",
            "89680a86ad08af80e626db0a0cd594365a127d02"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "destruct (noB y).",
            "VernacExtend",
            "6a1bc22ee0c55d3c1d23dec22bc31bb798c9f3dd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct F as (l,F).",
            "VernacExtend",
            "ecda58b4145d9173d44d98c7f2c92694cf8b1a09"
        ],
        [
            "set (h := fun x k => if d (f k) x then true else false).",
            "VernacExtend",
            "8758f1dba6261ed225a8527dbfe77a078717d273"
        ],
        [
            "set (get := fun o => match o with Some y => y | None => a end).",
            "VernacExtend",
            "fbc47ec89457bcd5eca2a7a0b4c547237af3c6ef"
        ],
        [
            "exists (fun x => get (List.find (h x) l)).",
            "VernacExtend",
            "6fbdedff97c3a6778d0d62b997ef1b4d108f70a3"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "case_eq (find (h x) l); simpl; clear get; [intros y H|intros H].",
            "VernacExtend",
            "c316a71f9bdba2dcbd34d10e8fef49a9bdb0df36"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply find_some in H.",
            "VernacExtend",
            "c3fd2bc71d2e2c8eb45f8552dc70c371749ef1c8"
        ],
        [
            "destruct H as (_,H).",
            "VernacExtend",
            "01fc932262dcfce3f14eafe3b9c956eca9e097d9"
        ],
        [
            "unfold h in H.",
            "VernacExtend",
            "be9293a083f44704ec63a278585a980b45ac99b5"
        ],
        [
            "now destruct (d (f y) x) in H.",
            "VernacExtend",
            "2b4e25cd4fb6b3947e5d8623cd668dce1ba16481"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "destruct (Su x) as (y & Y).",
            "VernacExtend",
            "d57120ad0e1c9cf280334ee11af1f58bd35fd3f5"
        ],
        [
            "generalize (find_none _ l H y (F y)).",
            "VernacExtend",
            "4faea7ad52c013013142cd6c1474edbc199f8a88"
        ],
        [
            "unfold h.",
            "VernacExtend",
            "7c00b91fd2810f4ab655485683b5fa84338bdde5"
        ],
        [
            "now destruct (d (f y) x).",
            "VernacExtend",
            "45206f9d8827ba69875ce6b3314ec991f21988a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Injective_Surjective_Bijective : forall A B, Finite A -> EqDec B -> forall f:A->B, Injective f -> Surjective f -> Bijective f.",
            "VernacStartTheoremProof",
            "81d4dc693a1f2a31757884612608a770a20519be"
        ],
        [
            "intros A B F d f Ij Su.",
            "VernacExtend",
            "7cf15cdad207d223047e769d425362bd30772209"
        ],
        [
            "destruct (Surjective_inverse F d Su) as (g, E).",
            "VernacExtend",
            "63545e1d18bd4bd47c6d6d260da636d61a4f969c"
        ],
        [
            "exists g.",
            "VernacExtend",
            "27aef793382f0ac61c5ffc2a36b3cd54d16ac982"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "intros y.",
            "VernacExtend",
            "d3cd14babe4904577f05dd23b379c589bf67ea40"
        ],
        [
            "apply Ij.",
            "VernacExtend",
            "f8f0a8d87a23832acdc12b14b6179236184042f7"
        ],
        [
            "now rewrite E.",
            "VernacExtend",
            "0f34871ca82df8c43afdcfd47ff7d95564ce7a2f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fin_Finite n : Finite (Fin.t n).",
            "VernacStartTheoremProof",
            "503f52fc5e8ba29a70fbc66d2b5fc5138b9aa5a0"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists nil.",
            "VernacExtend",
            "847d8d4ad29a6619a1a271a81b4b6128a169751f"
        ],
        [
            "red;inversion a.",
            "VernacExtend",
            "74d753b544375356f99bb7009f060d6aa01fcb12"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct IHn as (l,Hl).",
            "VernacExtend",
            "37f37c90fb50c554b833b7290148d8398bd456bd"
        ],
        [
            "exists (Fin.F1 :: map Fin.FS l).",
            "VernacExtend",
            "3bf7bbca599099266376e2a17234e160d1af220d"
        ],
        [
            "intros a.",
            "VernacExtend",
            "9fef235d1a71132a4c9de7f87ab95d540098d91d"
        ],
        [
            "revert n a l Hl.",
            "VernacExtend",
            "afad3a1c011d96bce27d1ed903faee1b4b72ba66"
        ],
        [
            "refine (@Fin.caseS _ _ _); intros.",
            "VernacExtend",
            "a9c18338370d0b15f4951a50bc5b3c78cfc30aa4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "now apply in_map.",
            "VernacExtend",
            "eeb5dd751e54ba9ce367b7ed6d4a90d81f16a135"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition bFun n (f:nat->nat) := forall x, x < n -> f x < n.",
            "VernacDefinition",
            "32de7b8f5c1b726a77faaa8f95c33973955f6b29"
        ],
        [
            "Definition bInjective n (f:nat->nat) := forall x y, x < n -> y < n -> f x = f y -> x = y.",
            "VernacDefinition",
            "f673207680c02103a022b9f8f84237c357ab23d6"
        ],
        [
            "Definition bSurjective n (f:nat->nat) := forall y, y < n -> exists x, x < n /\\ f x = y.",
            "VernacDefinition",
            "85ae5e196d7c0768659f50787c5b1332cfd5a6d7"
        ],
        [
            "Module Fin2Restrict.",
            "VernacDefineModule",
            "89b8cc4612fb81ffb6ce4ed8b5f797470aee0fae"
        ],
        [
            "Notation n2f := Fin.of_nat_lt.",
            "VernacSyntacticDefinition",
            "9803dd55ecb7316457086f6236ae8aa9d4d3be70"
        ],
        [
            "Definition f2n {n} (x:Fin.t n) := proj1_sig (Fin.to_nat x).",
            "VernacDefinition",
            "4ec22232536c4e3a0ca812355122530ef473a4ab"
        ],
        [
            "Definition f2n_ok n (x:Fin.t n) : f2n x < n := proj2_sig (Fin.to_nat x).",
            "VernacDefinition",
            "d9a1c6a844cdaa900a8f7dee35f4ae35ccaa9668"
        ],
        [
            "Definition n2f_f2n : forall n x, n2f (f2n_ok x) = x := @Fin.of_nat_to_nat_inv.",
            "VernacDefinition",
            "42fefcc0f879438f85c8a93116574f04a7cc05a8"
        ],
        [
            "Definition f2n_n2f x n h : f2n (n2f h) = x := f_equal (@proj1_sig _ _) (@Fin.to_nat_of_nat x n h).",
            "VernacDefinition",
            "0c8cbf2002574b6685be64b885e576b2da9de487"
        ],
        [
            "Definition n2f_ext : forall x n h h', n2f h = n2f h' := @Fin.of_nat_ext.",
            "VernacDefinition",
            "5af12962fb58dfa23253dfe083aa4602ea19b06d"
        ],
        [
            "Definition f2n_inj : forall n x y, f2n x = f2n y -> x = y := @Fin.to_nat_inj.",
            "VernacDefinition",
            "2dc136b432d40d83c252513bbed5fbb7a1754e52"
        ],
        [
            "Definition extend n (f:Fin.t n -> Fin.t n) : (nat->nat) := fun x => match le_lt_dec n x with | left _ => 0 | right h => f2n (f (n2f h)) end.",
            "VernacDefinition",
            "f615aac3169d5608725bea56061523c59a9c3700"
        ],
        [
            "Definition restrict n (f:nat->nat)(hf : bFun n f) : (Fin.t n -> Fin.t n) := fun x => let (x',h) := Fin.to_nat x in n2f (hf _ h).",
            "VernacDefinition",
            "f88e349401bc34b7a88b8497d727eaab96efd25d"
        ],
        [
            "Ltac break_dec H := let H' := fresh \"H\" in destruct le_lt_dec as [H'|H']; [elim (Lt.le_not_lt _ _ H' H) |try rewrite (n2f_ext H' H) in *; try clear H'].",
            "VernacExtend",
            "82c395c2d7e9c54a965b85149f5f96965851196f"
        ],
        [
            "Lemma extend_ok n f : bFun n (@extend n f).",
            "VernacStartTheoremProof",
            "47ce908220dc728d9559aad6c7fb66363301070d"
        ],
        [
            "intros x h.",
            "VernacExtend",
            "d4279026b532c50de3ee2d794c5025f7e8b4f105"
        ],
        [
            "unfold extend.",
            "VernacExtend",
            "00cc913c454e09902f1b1685fe666f4b01746863"
        ],
        [
            "break_dec h.",
            "VernacExtend",
            "74078db14cf28b188c8a690ee5a1ea602df72d3f"
        ],
        [
            "apply f2n_ok.",
            "VernacExtend",
            "ff9057294bd6fcca1d798b783fc047f96444f932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extend_f2n n f (x:Fin.t n) : extend f (f2n x) = f2n (f x).",
            "VernacStartTheoremProof",
            "f860112bf033002c18a622e723b609aabbd30c18"
        ],
        [
            "generalize (n2f_f2n x).",
            "VernacExtend",
            "29f898b85e106b7b8774276abef7ff196706d5ee"
        ],
        [
            "unfold extend, f2n, f2n_ok.",
            "VernacExtend",
            "d5862b8d4d7d1e80e3e1bf5dd69e645fcc56d23c"
        ],
        [
            "destruct (Fin.to_nat x) as (x',h); simpl.",
            "VernacExtend",
            "9af739e588ffcca19e1068406a160a73dd0579f1"
        ],
        [
            "break_dec h.",
            "VernacExtend",
            "74078db14cf28b188c8a690ee5a1ea602df72d3f"
        ],
        [
            "now intros ->.",
            "VernacExtend",
            "22907f64850d937781e9a6c6ee6bb8abecff73ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extend_n2f n f x (h:x<n) : n2f (extend_ok f h) = f (n2f h).",
            "VernacStartTheoremProof",
            "b4e1aa04ed1e627f2a6f1f3b556b58da2ef6685e"
        ],
        [
            "generalize (extend_ok f h).",
            "VernacExtend",
            "1f5708ea2fd6235fcc903f7dceae171c774d03e6"
        ],
        [
            "unfold extend in *.",
            "VernacExtend",
            "b22b2a32d6a5b1c2454ae4adecc02cc4787035e0"
        ],
        [
            "break_dec h.",
            "VernacExtend",
            "74078db14cf28b188c8a690ee5a1ea602df72d3f"
        ],
        [
            "intros h'.",
            "VernacExtend",
            "10bb952abe7db976fed1250dea45bda7a8b08dc0"
        ],
        [
            "rewrite <- n2f_f2n.",
            "VernacExtend",
            "9a6d1f54c270e808b185e5388392b495118fa512"
        ],
        [
            "now apply n2f_ext.",
            "VernacExtend",
            "7a0b9b8dcad5f434c60020cdb9f5d99e1fc70613"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma restrict_f2n n f hf (x:Fin.t n) : f2n (@restrict n f hf x) = f (f2n x).",
            "VernacStartTheoremProof",
            "bc7143f3daa3d67204f22bc040a2fe957ca8573a"
        ],
        [
            "unfold restrict, f2n.",
            "VernacExtend",
            "e69653031c0a0ef7bc3e600ee721df8c767d0447"
        ],
        [
            "destruct (Fin.to_nat x) as (x',h); simpl.",
            "VernacExtend",
            "9af739e588ffcca19e1068406a160a73dd0579f1"
        ],
        [
            "apply f2n_n2f.",
            "VernacExtend",
            "6ed7d1a863bf60e3daab6d3d3b8d0c0047920823"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma restrict_n2f n f hf x (h:x<n) : @restrict n f hf (n2f h) = n2f (hf _ h).",
            "VernacStartTheoremProof",
            "16b62aa0e94fa995d23ef1025350a92a3530dcd1"
        ],
        [
            "unfold restrict.",
            "VernacExtend",
            "a3863d9f634ba2838d286207832792553a81ea6e"
        ],
        [
            "generalize (f2n_n2f h).",
            "VernacExtend",
            "3246d3b0b4db6b116de932564381aed4f107319a"
        ],
        [
            "unfold f2n.",
            "VernacExtend",
            "50c11d396f39e5dc29313c3b5abd307a411acf55"
        ],
        [
            "destruct (Fin.to_nat (n2f h)) as (x',h'); simpl.",
            "VernacExtend",
            "07c3678aec3b42853750815e2e7828b80d14bbd8"
        ],
        [
            "intros ->.",
            "VernacExtend",
            "e8af3665779d92274caf81949b4a0e6232d89ea7"
        ],
        [
            "now apply n2f_ext.",
            "VernacExtend",
            "7a0b9b8dcad5f434c60020cdb9f5d99e1fc70613"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extend_surjective n f : bSurjective n (@extend n f) <-> Surjective f.",
            "VernacStartTheoremProof",
            "7dd87a6d69d091eb580053487294ad95e6895503"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros hf y.",
            "VernacExtend",
            "c29408f80418d62d2950d7a4730ce3ad18cd3fe3"
        ],
        [
            "destruct (hf _ (f2n_ok y)) as (x & h & Eq).",
            "VernacExtend",
            "bf880c195ae2fffacb2814e031e975f01347949e"
        ],
        [
            "exists (n2f h).",
            "VernacExtend",
            "03f1f0a5bc0a0b710013eeb92b58b9913954fd87"
        ],
        [
            "apply f2n_inj.",
            "VernacExtend",
            "591232e0d10bcf5f5f16eeba01e00be64049854a"
        ],
        [
            "now rewrite <- Eq, <- extend_f2n, f2n_n2f.",
            "VernacExtend",
            "30aa5eceb0c37bfebc9c2c5a195b64e041215f3b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros hf y hy.",
            "VernacExtend",
            "d82ae8d9fbca93bfac6cb9284ee2f6ace64c24cf"
        ],
        [
            "destruct (hf (n2f hy)) as (x,Eq).",
            "VernacExtend",
            "495d187c22f35197260fc2bfeb16879a42ca6434"
        ],
        [
            "exists (f2n x).",
            "VernacExtend",
            "d8644c22df4bf7c52dcd0ec62e27e7734ea6a5b4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply f2n_ok.",
            "VernacExtend",
            "ff9057294bd6fcca1d798b783fc047f96444f932"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite extend_f2n, Eq.",
            "VernacExtend",
            "2a5e93335a42a3641bd05c192722810749eeeb30"
        ],
        [
            "apply f2n_n2f.",
            "VernacExtend",
            "6ed7d1a863bf60e3daab6d3d3b8d0c0047920823"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma extend_injective n f : bInjective n (@extend n f) <-> Injective f.",
            "VernacStartTheoremProof",
            "bc90112ed5175f21b027700b96f52d3d5a61d395"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros hf x y Eq.",
            "VernacExtend",
            "fba6cec00fc6b3899f4e8104d57ba5c8f55d0c03"
        ],
        [
            "apply f2n_inj.",
            "VernacExtend",
            "591232e0d10bcf5f5f16eeba01e00be64049854a"
        ],
        [
            "apply hf; try apply f2n_ok.",
            "VernacExtend",
            "b0fa5dd6e655453d44d675943ae9ab7f92f7d64c"
        ],
        [
            "now rewrite 2 extend_f2n, Eq.",
            "VernacExtend",
            "5d672a08d1ce655a238ca9306e89d6b5ad9f29ed"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros hf x y hx hy Eq.",
            "VernacExtend",
            "fa9458ff7b4b8a2758af0dfcb8903243feea96ba"
        ],
        [
            "rewrite <- (f2n_n2f hx), <- (f2n_n2f hy).",
            "VernacExtend",
            "c5fe6bd901c9e9fe72bf11124fbcb6980073a6d5"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply hf.",
            "VernacExtend",
            "e9beb9c5bacb25fe6a13677c3b8309d3880f21b7"
        ],
        [
            "rewrite <- 2 extend_n2f.",
            "VernacExtend",
            "e18f4b1163d60ad555a8ca8346b6d0ee3fa1dbff"
        ],
        [
            "generalize (extend_ok f hx) (extend_ok f hy).",
            "VernacExtend",
            "b514119c4cc14a1d4142ec399065ed138e882890"
        ],
        [
            "rewrite Eq.",
            "VernacExtend",
            "40cf85051bffd6bb09e0c8d6b997364f4b645f4d"
        ],
        [
            "apply n2f_ext.",
            "VernacExtend",
            "5aed71402af55524327b8341a205b3c2ab66f550"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma restrict_surjective n f h : Surjective (@restrict n f h) <-> bSurjective n f.",
            "VernacStartTheoremProof",
            "8c7d1e17d34f219f2f3119272ccf7215d52f9bca"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros hf y hy.",
            "VernacExtend",
            "d82ae8d9fbca93bfac6cb9284ee2f6ace64c24cf"
        ],
        [
            "destruct (hf (n2f hy)) as (x,Eq).",
            "VernacExtend",
            "495d187c22f35197260fc2bfeb16879a42ca6434"
        ],
        [
            "exists (f2n x).",
            "VernacExtend",
            "d8644c22df4bf7c52dcd0ec62e27e7734ea6a5b4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply f2n_ok.",
            "VernacExtend",
            "ff9057294bd6fcca1d798b783fc047f96444f932"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite <- (restrict_f2n h), Eq.",
            "VernacExtend",
            "4c2e2883045dcc41d6b4aa51fd8e1c601c06e0c1"
        ],
        [
            "apply f2n_n2f.",
            "VernacExtend",
            "6ed7d1a863bf60e3daab6d3d3b8d0c0047920823"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros hf y.",
            "VernacExtend",
            "c29408f80418d62d2950d7a4730ce3ad18cd3fe3"
        ],
        [
            "destruct (hf _ (f2n_ok y)) as (x & hx & Eq).",
            "VernacExtend",
            "0b3dd0b4c1dc635679532953aa0f5aad57b29dfe"
        ],
        [
            "exists (n2f hx).",
            "VernacExtend",
            "7602130cde1e024c6b55b48577243696d09d603c"
        ],
        [
            "apply f2n_inj.",
            "VernacExtend",
            "591232e0d10bcf5f5f16eeba01e00be64049854a"
        ],
        [
            "now rewrite restrict_f2n, f2n_n2f.",
            "VernacExtend",
            "5d2cd573e4b823f51e5df70e397b47eb350fdde8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma restrict_injective n f h : Injective (@restrict n f h) <-> bInjective n f.",
            "VernacStartTheoremProof",
            "566a4b538a5a21c9943049bd9e04b35f56cd9f3f"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros hf x y hx hy Eq.",
            "VernacExtend",
            "fa9458ff7b4b8a2758af0dfcb8903243feea96ba"
        ],
        [
            "rewrite <- (f2n_n2f hx), <- (f2n_n2f hy).",
            "VernacExtend",
            "c5fe6bd901c9e9fe72bf11124fbcb6980073a6d5"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply hf.",
            "VernacExtend",
            "e9beb9c5bacb25fe6a13677c3b8309d3880f21b7"
        ],
        [
            "rewrite 2 restrict_n2f.",
            "VernacExtend",
            "d0b83c681d4fe713536fec47ca5dfef1a0785797"
        ],
        [
            "generalize (h x hx) (h y hy).",
            "VernacExtend",
            "3eb07bc2c40c43d9ec3a71ede63cc3011918b682"
        ],
        [
            "rewrite Eq.",
            "VernacExtend",
            "40cf85051bffd6bb09e0c8d6b997364f4b645f4d"
        ],
        [
            "apply n2f_ext.",
            "VernacExtend",
            "5aed71402af55524327b8341a205b3c2ab66f550"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros hf x y Eq.",
            "VernacExtend",
            "fba6cec00fc6b3899f4e8104d57ba5c8f55d0c03"
        ],
        [
            "apply f2n_inj.",
            "VernacExtend",
            "591232e0d10bcf5f5f16eeba01e00be64049854a"
        ],
        [
            "apply hf; try apply f2n_ok.",
            "VernacExtend",
            "b0fa5dd6e655453d44d675943ae9ab7f92f7d64c"
        ],
        [
            "now rewrite <- 2 (restrict_f2n h), Eq.",
            "VernacExtend",
            "362b93fe2ea88c974e3352b11def63f24dc61c10"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fin2Restrict.",
            "VernacEndSegment",
            "a9b6e82a43de01a43ab70406c5e16520884b49ae"
        ],
        [
            "Import Fin2Restrict.",
            "VernacImport",
            "8741d04acf9f7fb0f8c0458f1dcaf623f9dd9d11"
        ],
        [
            "Lemma bInjective_bSurjective n (f:nat->nat) : bFun n f -> (bInjective n f <-> bSurjective n f).",
            "VernacStartTheoremProof",
            "f491f4da0ed24d8ff5623287cbeb64de013835c0"
        ],
        [
            "intros h.",
            "VernacExtend",
            "d9af23d7f0cb5ed2eb064c0cac858c6211d58837"
        ],
        [
            "rewrite <- (restrict_injective h), <- (restrict_surjective h).",
            "VernacExtend",
            "86a6e7b7f7a3fa60e98307ebadec08da4c56e927"
        ],
        [
            "apply Endo_Injective_Surjective.",
            "VernacExtend",
            "0b336ab631ed293ab82bcb1dd16a3eb5c56ac7c0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Fin_Finite.",
            "VernacExtend",
            "a0ec7de05b8a3d77db266291a753f1b0b201e76f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "destruct (Fin.eq_dec x y); [left|right]; trivial.",
            "VernacExtend",
            "5a15af899396b01844ac1d6c5a69930be4173823"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bSurjective_bBijective n (f:nat->nat) : bFun n f -> bSurjective n f -> exists g, bFun n g /\\ forall x, x < n -> g (f x) = x /\\ f (g x) = x.",
            "VernacStartTheoremProof",
            "f6102977e14bca3e34aeecf51c2f1d3a5cc64852"
        ],
        [
            "intro hf.",
            "VernacExtend",
            "c988c6a9282df68bec5ea2062c0cfe875a32307c"
        ],
        [
            "rewrite <- (restrict_surjective hf).",
            "VernacExtend",
            "9d24dc2b719e4b8c517855080af5618d7f4e2508"
        ],
        [
            "intros Su.",
            "VernacExtend",
            "6af30755860e8ac47a21a2081c8818f22432de9a"
        ],
        [
            "assert (Ij : Injective (restrict hf)).",
            "VernacExtend",
            "20270bd6c59cb9614b5ca7e435caf4f8d7d2e719"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Endo_Injective_Surjective; trivial.",
            "VernacExtend",
            "96c047717ec8e0f5c6e895d832682dac2d5a2aa8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Fin_Finite.",
            "VernacExtend",
            "a0ec7de05b8a3d77db266291a753f1b0b201e76f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "destruct (Fin.eq_dec x y); [left|right]; trivial.",
            "VernacExtend",
            "5a15af899396b01844ac1d6c5a69930be4173823"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "assert (Bi : Bijective (restrict hf)).",
            "VernacExtend",
            "058b43f45f58f85369d36644a08c2803d9a9875a"
        ],
        [
            "{",
            "VernacSubproof",
            "184cabd02aa0a33f23f10474ea95789b1f149361"
        ],
        [
            "apply Injective_Surjective_Bijective; trivial.",
            "VernacExtend",
            "93dae277535fa2dba5161200c75610b40ba9536b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Fin_Finite.",
            "VernacExtend",
            "a0ec7de05b8a3d77db266291a753f1b0b201e76f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact Fin.eq_dec.",
            "VernacExtend",
            "f7bb7b275a618b11bf48258d03b1a8b4bbdc09cd"
        ],
        [
            "}",
            "VernacEndSubproof",
            "85f27874ef16421341373f4b062b6d1605043af9"
        ],
        [
            "destruct Bi as (g & Hg & Hg').",
            "VernacExtend",
            "47b6f61088be5b934ad8329972a437babed42977"
        ],
        [
            "exists (extend g).",
            "VernacExtend",
            "30117240f2ac45a6eacec15911586461c1d3d364"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply extend_ok.",
            "VernacExtend",
            "87c4108ee41bcc38acba1a5afcdd761dfc0efefd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now rewrite <- (f2n_n2f Hx), <- (restrict_f2n hf), extend_f2n, Hg.",
            "VernacExtend",
            "f6aa16942bc387ea5d0fef309c7c4454ac77be96"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now rewrite <- (f2n_n2f Hx), extend_f2n, <- (restrict_f2n hf), Hg'.",
            "VernacExtend",
            "e41380ef3435f999c00814d22651af9280adcb89"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "Finite_alt",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (l,F).",
                        "VernacExtend",
                        "d19e216a66295b4b60fe15b20c704ce9a07d0794"
                    ]
                },
                {
                    "command": [
                        "destruct (uniquify d l) as (l' & N & I).",
                        "VernacExtend",
                        "f3d0aef573e5c51456567dd8ce53c54829f52c9e"
                    ]
                },
                {
                    "command": [
                        "exists l'.",
                        "VernacExtend",
                        "254f8e941c4c968bd607990c3604ba03ec0e956e"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "apply I, F.",
                        "VernacExtend",
                        "fdbab7de001fd4221383296383030e9d5d31199a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (l & _ & F).",
                        "VernacExtend",
                        "f6950c591c9e70265be8cb489f2f034f1a612546"
                    ]
                },
                {
                    "command": [
                        "now exists l.",
                        "VernacExtend",
                        "79ff13d3c729b6e5e1553131e53ebcf7a47e1fdb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Injective_map_NoDup",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros Ij.",
                        "VernacExtend",
                        "542458cad8742f2e13b722ab8fdcdb4c764a46aa"
                    ]
                },
                {
                    "command": [
                        "induction 1 as [|x l X N IH]; simpl; constructor; trivial.",
                        "VernacExtend",
                        "770a7465afccd31cefce25d59adda32404412105"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff.",
                        "VernacExtend",
                        "a55211f52b1485764a1a9aeded8063ea6d2e66ea"
                    ]
                },
                {
                    "command": [
                        "intros (y & E & Y).",
                        "VernacExtend",
                        "b2794f884f43997c4d9c4d21dea8111e227b9dec"
                    ]
                },
                {
                    "command": [
                        "apply Ij in E.",
                        "VernacExtend",
                        "a940ad3bf89fe0b36fccef41c26fc1bb2c304a5c"
                    ]
                },
                {
                    "command": [
                        "now subst.",
                        "VernacExtend",
                        "89cc250d34dafb32c3653b2706abafd433151f2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Injective_list_carac",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now apply Injective_map_NoDup.",
                        "VernacExtend",
                        "964feb2cf68833b4e42e7a50701eb4e888fcf686"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros H x y E.",
                        "VernacExtend",
                        "15e8d2aab240313e0e330cf1bf8185c824b5cc06"
                    ]
                },
                {
                    "command": [
                        "destruct (d x y); trivial.",
                        "VernacExtend",
                        "2ccba3e93d736aff7c1e57ca9a430b925ff92c66"
                    ]
                },
                {
                    "command": [
                        "assert (N : NoDup (x::y::nil)).",
                        "VernacExtend",
                        "f577e833c0d396758c15743f280813139d7841f5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "repeat constructor; simpl; intuition.",
                        "VernacExtend",
                        "5544b48f1f7bd5b6125cd11c23cdf8284ddf0af8"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "specialize (H _ N).",
                        "VernacExtend",
                        "abcbc8484ac124ee9f0f6f6e4fd57351bd5ebd4c"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite E in H.",
                        "VernacExtend",
                        "0ae20eaaaef6ce5f353e2f510070b55a5eb4c4a3"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H; simpl in *; intuition.",
                        "VernacExtend",
                        "2dd59c028bd29de7a6d9a302dfd4588921d46f12"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Injective_carac",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros L f.",
                        "VernacExtend",
                        "5fece9aace26d8b49b42970899e806402381f0b5"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros Ij.",
                        "VernacExtend",
                        "542458cad8742f2e13b722ab8fdcdb4c764a46aa"
                    ]
                },
                {
                    "command": [
                        "apply Injective_map_NoDup; trivial.",
                        "VernacExtend",
                        "bf6e9a22306d34c3cce5544f6b476148fa579084"
                    ]
                },
                {
                    "command": [
                        "apply L.",
                        "VernacExtend",
                        "6118d7728952f7fba9ff2e5c4949b4ba3ed2bbbf"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros N x y E.",
                        "VernacExtend",
                        "c6239cfd938a50bea1a9699fc5c7a9e12ffb0c8a"
                    ]
                },
                {
                    "command": [
                        "assert (X : In x l) by apply L.",
                        "VernacExtend",
                        "68e868e171840f02794666bfb7c43d1ca36649a2"
                    ]
                },
                {
                    "command": [
                        "assert (Y : In y l) by apply L.",
                        "VernacExtend",
                        "4ee19638a2caf2c040a02e9d86cd05d29aa5423d"
                    ]
                },
                {
                    "command": [
                        "apply In_nth_error in X.",
                        "VernacExtend",
                        "65c513f548a16a7597ebd8076539bb8653f8ba47"
                    ]
                },
                {
                    "command": [
                        "destruct X as (i,X).",
                        "VernacExtend",
                        "a3db50f6dc42d38fd3aa789eec5150313ab9dc11"
                    ]
                },
                {
                    "command": [
                        "apply In_nth_error in Y.",
                        "VernacExtend",
                        "4055c1b78a0085bcc5fd1b550ca40bbeb85bee1d"
                    ]
                },
                {
                    "command": [
                        "destruct Y as (j,Y).",
                        "VernacExtend",
                        "ce161d412addad4c03c998dd08d8add428261fe0"
                    ]
                },
                {
                    "command": [
                        "assert (X' := map_nth_error f _ _ X).",
                        "VernacExtend",
                        "b7b7569f11b91f4185dcc8100e96cbe98530b11f"
                    ]
                },
                {
                    "command": [
                        "assert (Y' := map_nth_error f _ _ Y).",
                        "VernacExtend",
                        "e39fa23dae38f998b6b6e4cfbae1e31dbf60da3e"
                    ]
                },
                {
                    "command": [
                        "assert (i = j).",
                        "VernacExtend",
                        "b8e340e5858407d472bf669317a9807f9beb17ea"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "rewrite NoDup_nth_error in N.",
                        "VernacExtend",
                        "bc493105a3ce1dbbc33a1c76303de253ada25fcd"
                    ]
                },
                {
                    "command": [
                        "apply N.",
                        "VernacExtend",
                        "18fe25f6088a3ccb3bf8669fcffd78cee853a725"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- nth_error_Some.",
                        "VernacExtend",
                        "49eea08c03e3011e20b335f95a3dc8bef554ae96"
                    ]
                },
                {
                    "command": [
                        "now rewrite X'.",
                        "VernacExtend",
                        "3323a65b09da236ae7817a6adb3cdbcfbe9dbb1f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite X', Y'.",
                        "VernacExtend",
                        "36f2f151c61705cb9a578999c532123674950262"
                    ]
                },
                {
                    "command": [
                        "now f_equal.",
                        "VernacExtend",
                        "523c8bb1ba392fd7c541cd8a77c609b310d41f22"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "subst j.",
                        "VernacExtend",
                        "4959fd5cfffa27452c2d688b999587736fe34624"
                    ]
                },
                {
                    "command": [
                        "rewrite Y in X.",
                        "VernacExtend",
                        "a3fab72d8a305d4d0e6d4ff1b60c286e49d38d35"
                    ]
                },
                {
                    "command": [
                        "now injection X.",
                        "VernacExtend",
                        "93cb41b17bd031124f6cf61b982b7151dea70c5c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Surjective_list_carac",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros Su.",
                        "VernacExtend",
                        "6af30755860e8ac47a21a2081c8818f22432de9a"
                    ]
                },
                {
                    "command": [
                        "induction lB as [|b lB IH].",
                        "VernacExtend",
                        "4f5715d7403184f4a589925ed1e84e08e48d74e0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now exists nil.",
                        "VernacExtend",
                        "0c5be0dbeb43d75fe7a53ab574f9dc411afaf7d1"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "destruct (Su b) as (a,E).",
                        "VernacExtend",
                        "d3af71fcc9c0d73e3d2b17297fd1bfcc00821043"
                    ]
                },
                {
                    "command": [
                        "destruct IH as (lA,IC).",
                        "VernacExtend",
                        "b262b476e3673cdbe61502eec4b1357135e8e123"
                    ]
                },
                {
                    "command": [
                        "exists (a::lA).",
                        "VernacExtend",
                        "a43dba28737d4586dd434abfc9404b421e1c73f7"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite E.",
                        "VernacExtend",
                        "304079e57d3d6c0912193a26e70d779c9e1768b9"
                    ]
                },
                {
                    "command": [
                        "intros x [X|X]; simpl; intuition.",
                        "VernacExtend",
                        "d7a6b30eef664da776ea265bff6b83e8fdb4a391"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros H y.",
                        "VernacExtend",
                        "2e077899e1942a5173b3c3117226c3524ab4f056"
                    ]
                },
                {
                    "command": [
                        "destruct (H (y::nil)) as (lA,IC).",
                        "VernacExtend",
                        "9e699dda0366db633fb83a46c9a740ce6e73c46b"
                    ]
                },
                {
                    "command": [
                        "assert (IN : In y (map f lA)) by (apply (IC y); now left).",
                        "VernacExtend",
                        "eaa8eeaa85727e9756409b590ce05ec9d569136a"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff in IN.",
                        "VernacExtend",
                        "888b1c8fd411c1ec37441f71d9f9bbcdfcfe6f68"
                    ]
                },
                {
                    "command": [
                        "destruct IN as (x & E & _).",
                        "VernacExtend",
                        "4f9b529faa97157f7003ddd7c75cccb1a69b2a46"
                    ]
                },
                {
                    "command": [
                        "now exists x.",
                        "VernacExtend",
                        "f05bce6ee70a4547cae07a16bc50c6f8d5e90141"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Surjective_carac",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "intros (lB,FB) d.",
                        "VernacExtend",
                        "9e9d3036ee9cb4100aa0b3b767be7c5c167a6adf"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Surjective_list_carac.",
                        "VernacExtend",
                        "02038a05cdab541b55bddf21565198c2cadb987d"
                    ]
                },
                {
                    "command": [
                        "intros Su.",
                        "VernacExtend",
                        "6af30755860e8ac47a21a2081c8818f22432de9a"
                    ]
                },
                {
                    "command": [
                        "destruct (Su lB) as (lA,IC).",
                        "VernacExtend",
                        "2c14cfd981f47eea57b5fb384c669fdee9f9a92c"
                    ]
                },
                {
                    "command": [
                        "destruct (uniquify_map d f lA) as (lA' & N & IC').",
                        "VernacExtend",
                        "185f637c469aec0d83bbb9a9953ca78033273758"
                    ]
                },
                {
                    "command": [
                        "exists lA'.",
                        "VernacExtend",
                        "7363d16c22f8740cf3748b7e42f1478daade7cf8"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "apply IC', IC, FB.",
                        "VernacExtend",
                        "39fecf0a576e88f3d653cacdc74dae578105c6c9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (lA & N & FA) y.",
                        "VernacExtend",
                        "a009d34ccb5116475ef64fb248dc20a3b3cc9b5b"
                    ]
                },
                {
                    "command": [
                        "generalize (FA y).",
                        "VernacExtend",
                        "fdfd71725a95126e15804bd81a0e39ff2a035509"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff.",
                        "VernacExtend",
                        "a55211f52b1485764a1a9aeded8063ea6d2e66ea"
                    ]
                },
                {
                    "command": [
                        "intros (x & E & _).",
                        "VernacExtend",
                        "ee7cdbe9038f4781ac7387a2577fc5c6ab090054"
                    ]
                },
                {
                    "command": [
                        "now exists x.",
                        "VernacExtend",
                        "f05bce6ee70a4547cae07a16bc50c6f8d5e90141"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Endo_Injective_Surjective",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "intros A F d f.",
                        "VernacExtend",
                        "1c9bb0f1dbff6b4c1eecd4857839ddefb38f75d8"
                    ]
                },
                {
                    "command": [
                        "rewrite (Surjective_carac F d).",
                        "VernacExtend",
                        "3c6a2e82de332ef80134539b836be4cc6b0d30d3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply (Finite_alt d) in F.",
                        "VernacExtend",
                        "295ee4cf5f5fe29e6001b3c543926d0e1fdf2f14"
                    ]
                },
                {
                    "command": [
                        "destruct F as (l,L).",
                        "VernacExtend",
                        "c01affeb8e77eebfe71a1690f329bbffba03137f"
                    ]
                },
                {
                    "command": [
                        "rewrite (Injective_carac L); intros.",
                        "VernacExtend",
                        "24e16486d7f42c7bb8dfed1eead5a9b41b9d6756"
                    ]
                },
                {
                    "command": [
                        "exists l; split; trivial.",
                        "VernacExtend",
                        "62211017ec1b7fc81643f33fc17e18f6153c9d38"
                    ]
                },
                {
                    "command": [
                        "destruct L as (N,F).",
                        "VernacExtend",
                        "11540edfc108bb662ed8ac93c89cd3208487afce"
                    ]
                },
                {
                    "command": [
                        "assert (I : incl l (map f l)).",
                        "VernacExtend",
                        "b6e9a70f665cdd7537ccfdf5b342246560fc9809"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply NoDup_length_incl; trivial.",
                        "VernacExtend",
                        "03c514fc17f0d2b364e89715c752871291d0ed95"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite map_length.",
                        "VernacExtend",
                        "8c462a424001e55696f583f567ff7812cade1a9b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros x _.",
                        "VernacExtend",
                        "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
                    ]
                },
                {
                    "command": [
                        "apply F.",
                        "VernacExtend",
                        "8ad83bba3f0c01314ccc03d5461b3e8143befbdd"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "apply I, F.",
                        "VernacExtend",
                        "fdbab7de001fd4221383296383030e9d5d31199a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "clear F d.",
                        "VernacExtend",
                        "4e1a303a8da26cccb67a9cece11239a93109aabb"
                    ]
                },
                {
                    "command": [
                        "intros (l,L).",
                        "VernacExtend",
                        "64920b265e1b1d39edcfb6f28aa1a6f3ff9be4a1"
                    ]
                },
                {
                    "command": [
                        "assert (N : NoDup l).",
                        "VernacExtend",
                        "365f90aa2e7b8bcf7adb7b2dac675cc010b8b6c5"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply (NoDup_map_inv f), L.",
                        "VernacExtend",
                        "faabcfdf2e2b57a80986d85fc7abb6ec401759cc"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (I : incl (map f l) l).",
                        "VernacExtend",
                        "47444e241a03845354524aca2544603f6e130713"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply NoDup_length_incl; trivial.",
                        "VernacExtend",
                        "03c514fc17f0d2b364e89715c752871291d0ed95"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite map_length.",
                        "VernacExtend",
                        "8c462a424001e55696f583f567ff7812cade1a9b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros x _.",
                        "VernacExtend",
                        "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
                    ]
                },
                {
                    "command": [
                        "apply L.",
                        "VernacExtend",
                        "6118d7728952f7fba9ff2e5c4949b4ba3ed2bbbf"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (L' : Listing l).",
                        "VernacExtend",
                        "01a84c0726968d630665c8de648c6408513c099b"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "apply I, L.",
                        "VernacExtend",
                        "0f2229c27d2b4914aa94367d0864b66009d51c8d"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "apply (Injective_carac L'), L.",
                        "VernacExtend",
                        "b6b0ab1f499a4301dc52d000aa8221fbf39542a7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Finite_Empty_or_not",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "intros (l,F).",
                        "VernacExtend",
                        "d19e216a66295b4b60fe15b20c704ce9a07d0794"
                    ]
                },
                {
                    "command": [
                        "destruct l.",
                        "VernacExtend",
                        "a4218804e377a0d685aafec59adbc3652d543b9c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "left; exact F.",
                        "VernacExtend",
                        "a5303e21e8dd207ae7de185c1cb8deb6886da381"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "right; now exists a.",
                        "VernacExtend",
                        "7d9a9b34b14486ec32e485957a58c55c7719d468"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Surjective_inverse",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intros A B F d f Su.",
                        "VernacExtend",
                        "146b5ba0de4bad7cfa50f125fbfb9b66d8054e93"
                    ]
                },
                {
                    "command": [
                        "destruct (Finite_Empty_or_not F) as [noA | (a,_)].",
                        "VernacExtend",
                        "345275301f0d42c9525a279093083d480bfbfbd7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assert (noB : B -> False).",
                        "VernacExtend",
                        "9894d6736b471a3885a30757002b0405d9783a86"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "intros y.",
                        "VernacExtend",
                        "d3cd14babe4904577f05dd23b379c589bf67ea40"
                    ]
                },
                {
                    "command": [
                        "now destruct (Su y).",
                        "VernacExtend",
                        "b2c34799d514e858015af160b3ef2cddb79f2d97"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "exists (fun y => False_rect _ (noB y)).",
                        "VernacExtend",
                        "89680a86ad08af80e626db0a0cd594365a127d02"
                    ]
                },
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "destruct (noB y).",
                        "VernacExtend",
                        "6a1bc22ee0c55d3c1d23dec22bc31bb798c9f3dd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct F as (l,F).",
                        "VernacExtend",
                        "ecda58b4145d9173d44d98c7f2c92694cf8b1a09"
                    ]
                },
                {
                    "command": [
                        "set (h := fun x k => if d (f k) x then true else false).",
                        "VernacExtend",
                        "8758f1dba6261ed225a8527dbfe77a078717d273"
                    ]
                },
                {
                    "command": [
                        "set (get := fun o => match o with Some y => y | None => a end).",
                        "VernacExtend",
                        "fbc47ec89457bcd5eca2a7a0b4c547237af3c6ef"
                    ]
                },
                {
                    "command": [
                        "exists (fun x => get (List.find (h x) l)).",
                        "VernacExtend",
                        "6fbdedff97c3a6778d0d62b997ef1b4d108f70a3"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "case_eq (find (h x) l); simpl; clear get; [intros y H|intros H].",
                        "VernacExtend",
                        "c316a71f9bdba2dcbd34d10e8fef49a9bdb0df36"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply find_some in H.",
                        "VernacExtend",
                        "c3fd2bc71d2e2c8eb45f8552dc70c371749ef1c8"
                    ]
                },
                {
                    "command": [
                        "destruct H as (_,H).",
                        "VernacExtend",
                        "01fc932262dcfce3f14eafe3b9c956eca9e097d9"
                    ]
                },
                {
                    "command": [
                        "unfold h in H.",
                        "VernacExtend",
                        "be9293a083f44704ec63a278585a980b45ac99b5"
                    ]
                },
                {
                    "command": [
                        "now destruct (d (f y) x) in H.",
                        "VernacExtend",
                        "2b4e25cd4fb6b3947e5d8623cd668dce1ba16481"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "destruct (Su x) as (y & Y).",
                        "VernacExtend",
                        "d57120ad0e1c9cf280334ee11af1f58bd35fd3f5"
                    ]
                },
                {
                    "command": [
                        "generalize (find_none _ l H y (F y)).",
                        "VernacExtend",
                        "4faea7ad52c013013142cd6c1474edbc199f8a88"
                    ]
                },
                {
                    "command": [
                        "unfold h.",
                        "VernacExtend",
                        "7c00b91fd2810f4ab655485683b5fa84338bdde5"
                    ]
                },
                {
                    "command": [
                        "now destruct (d (f y) x).",
                        "VernacExtend",
                        "45206f9d8827ba69875ce6b3314ec991f21988a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Injective_Surjective_Bijective",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "intros A B F d f Ij Su.",
                        "VernacExtend",
                        "7cf15cdad207d223047e769d425362bd30772209"
                    ]
                },
                {
                    "command": [
                        "destruct (Surjective_inverse F d Su) as (g, E).",
                        "VernacExtend",
                        "63545e1d18bd4bd47c6d6d260da636d61a4f969c"
                    ]
                },
                {
                    "command": [
                        "exists g.",
                        "VernacExtend",
                        "27aef793382f0ac61c5ffc2a36b3cd54d16ac982"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "intros y.",
                        "VernacExtend",
                        "d3cd14babe4904577f05dd23b379c589bf67ea40"
                    ]
                },
                {
                    "command": [
                        "apply Ij.",
                        "VernacExtend",
                        "f8f0a8d87a23832acdc12b14b6179236184042f7"
                    ]
                },
                {
                    "command": [
                        "now rewrite E.",
                        "VernacExtend",
                        "0f34871ca82df8c43afdcfd47ff7d95564ce7a2f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fin_Finite",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exists nil.",
                        "VernacExtend",
                        "847d8d4ad29a6619a1a271a81b4b6128a169751f"
                    ]
                },
                {
                    "command": [
                        "red;inversion a.",
                        "VernacExtend",
                        "74d753b544375356f99bb7009f060d6aa01fcb12"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct IHn as (l,Hl).",
                        "VernacExtend",
                        "37f37c90fb50c554b833b7290148d8398bd456bd"
                    ]
                },
                {
                    "command": [
                        "exists (Fin.F1 :: map Fin.FS l).",
                        "VernacExtend",
                        "3bf7bbca599099266376e2a17234e160d1af220d"
                    ]
                },
                {
                    "command": [
                        "intros a.",
                        "VernacExtend",
                        "9fef235d1a71132a4c9de7f87ab95d540098d91d"
                    ]
                },
                {
                    "command": [
                        "revert n a l Hl.",
                        "VernacExtend",
                        "afad3a1c011d96bce27d1ed903faee1b4b72ba66"
                    ]
                },
                {
                    "command": [
                        "refine (@Fin.caseS _ _ _); intros.",
                        "VernacExtend",
                        "a9c18338370d0b15f4951a50bc5b3c78cfc30aa4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "now apply in_map.",
                        "VernacExtend",
                        "eeb5dd751e54ba9ce367b7ed6d4a90d81f16a135"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extend_ok",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "intros x h.",
                        "VernacExtend",
                        "d4279026b532c50de3ee2d794c5025f7e8b4f105"
                    ]
                },
                {
                    "command": [
                        "unfold extend.",
                        "VernacExtend",
                        "00cc913c454e09902f1b1685fe666f4b01746863"
                    ]
                },
                {
                    "command": [
                        "break_dec h.",
                        "VernacExtend",
                        "74078db14cf28b188c8a690ee5a1ea602df72d3f"
                    ]
                },
                {
                    "command": [
                        "apply f2n_ok.",
                        "VernacExtend",
                        "ff9057294bd6fcca1d798b783fc047f96444f932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extend_f2n",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "generalize (n2f_f2n x).",
                        "VernacExtend",
                        "29f898b85e106b7b8774276abef7ff196706d5ee"
                    ]
                },
                {
                    "command": [
                        "unfold extend, f2n, f2n_ok.",
                        "VernacExtend",
                        "d5862b8d4d7d1e80e3e1bf5dd69e645fcc56d23c"
                    ]
                },
                {
                    "command": [
                        "destruct (Fin.to_nat x) as (x',h); simpl.",
                        "VernacExtend",
                        "9af739e588ffcca19e1068406a160a73dd0579f1"
                    ]
                },
                {
                    "command": [
                        "break_dec h.",
                        "VernacExtend",
                        "74078db14cf28b188c8a690ee5a1ea602df72d3f"
                    ]
                },
                {
                    "command": [
                        "now intros ->.",
                        "VernacExtend",
                        "22907f64850d937781e9a6c6ee6bb8abecff73ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extend_n2f",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "generalize (extend_ok f h).",
                        "VernacExtend",
                        "1f5708ea2fd6235fcc903f7dceae171c774d03e6"
                    ]
                },
                {
                    "command": [
                        "unfold extend in *.",
                        "VernacExtend",
                        "b22b2a32d6a5b1c2454ae4adecc02cc4787035e0"
                    ]
                },
                {
                    "command": [
                        "break_dec h.",
                        "VernacExtend",
                        "74078db14cf28b188c8a690ee5a1ea602df72d3f"
                    ]
                },
                {
                    "command": [
                        "intros h'.",
                        "VernacExtend",
                        "10bb952abe7db976fed1250dea45bda7a8b08dc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- n2f_f2n.",
                        "VernacExtend",
                        "9a6d1f54c270e808b185e5388392b495118fa512"
                    ]
                },
                {
                    "command": [
                        "now apply n2f_ext.",
                        "VernacExtend",
                        "7a0b9b8dcad5f434c60020cdb9f5d99e1fc70613"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "restrict_f2n",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "unfold restrict, f2n.",
                        "VernacExtend",
                        "e69653031c0a0ef7bc3e600ee721df8c767d0447"
                    ]
                },
                {
                    "command": [
                        "destruct (Fin.to_nat x) as (x',h); simpl.",
                        "VernacExtend",
                        "9af739e588ffcca19e1068406a160a73dd0579f1"
                    ]
                },
                {
                    "command": [
                        "apply f2n_n2f.",
                        "VernacExtend",
                        "6ed7d1a863bf60e3daab6d3d3b8d0c0047920823"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "restrict_n2f",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "unfold restrict.",
                        "VernacExtend",
                        "a3863d9f634ba2838d286207832792553a81ea6e"
                    ]
                },
                {
                    "command": [
                        "generalize (f2n_n2f h).",
                        "VernacExtend",
                        "3246d3b0b4db6b116de932564381aed4f107319a"
                    ]
                },
                {
                    "command": [
                        "unfold f2n.",
                        "VernacExtend",
                        "50c11d396f39e5dc29313c3b5abd307a411acf55"
                    ]
                },
                {
                    "command": [
                        "destruct (Fin.to_nat (n2f h)) as (x',h'); simpl.",
                        "VernacExtend",
                        "07c3678aec3b42853750815e2e7828b80d14bbd8"
                    ]
                },
                {
                    "command": [
                        "intros ->.",
                        "VernacExtend",
                        "e8af3665779d92274caf81949b4a0e6232d89ea7"
                    ]
                },
                {
                    "command": [
                        "now apply n2f_ext.",
                        "VernacExtend",
                        "7a0b9b8dcad5f434c60020cdb9f5d99e1fc70613"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extend_surjective",
            "line_nb": 280,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros hf y.",
                        "VernacExtend",
                        "c29408f80418d62d2950d7a4730ce3ad18cd3fe3"
                    ]
                },
                {
                    "command": [
                        "destruct (hf _ (f2n_ok y)) as (x & h & Eq).",
                        "VernacExtend",
                        "bf880c195ae2fffacb2814e031e975f01347949e"
                    ]
                },
                {
                    "command": [
                        "exists (n2f h).",
                        "VernacExtend",
                        "03f1f0a5bc0a0b710013eeb92b58b9913954fd87"
                    ]
                },
                {
                    "command": [
                        "apply f2n_inj.",
                        "VernacExtend",
                        "591232e0d10bcf5f5f16eeba01e00be64049854a"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Eq, <- extend_f2n, f2n_n2f.",
                        "VernacExtend",
                        "30aa5eceb0c37bfebc9c2c5a195b64e041215f3b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros hf y hy.",
                        "VernacExtend",
                        "d82ae8d9fbca93bfac6cb9284ee2f6ace64c24cf"
                    ]
                },
                {
                    "command": [
                        "destruct (hf (n2f hy)) as (x,Eq).",
                        "VernacExtend",
                        "495d187c22f35197260fc2bfeb16879a42ca6434"
                    ]
                },
                {
                    "command": [
                        "exists (f2n x).",
                        "VernacExtend",
                        "d8644c22df4bf7c52dcd0ec62e27e7734ea6a5b4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply f2n_ok.",
                        "VernacExtend",
                        "ff9057294bd6fcca1d798b783fc047f96444f932"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite extend_f2n, Eq.",
                        "VernacExtend",
                        "2a5e93335a42a3641bd05c192722810749eeeb30"
                    ]
                },
                {
                    "command": [
                        "apply f2n_n2f.",
                        "VernacExtend",
                        "6ed7d1a863bf60e3daab6d3d3b8d0c0047920823"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "extend_injective",
            "line_nb": 299,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros hf x y Eq.",
                        "VernacExtend",
                        "fba6cec00fc6b3899f4e8104d57ba5c8f55d0c03"
                    ]
                },
                {
                    "command": [
                        "apply f2n_inj.",
                        "VernacExtend",
                        "591232e0d10bcf5f5f16eeba01e00be64049854a"
                    ]
                },
                {
                    "command": [
                        "apply hf; try apply f2n_ok.",
                        "VernacExtend",
                        "b0fa5dd6e655453d44d675943ae9ab7f92f7d64c"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2 extend_f2n, Eq.",
                        "VernacExtend",
                        "5d672a08d1ce655a238ca9306e89d6b5ad9f29ed"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros hf x y hx hy Eq.",
                        "VernacExtend",
                        "fa9458ff7b4b8a2758af0dfcb8903243feea96ba"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (f2n_n2f hx), <- (f2n_n2f hy).",
                        "VernacExtend",
                        "c5fe6bd901c9e9fe72bf11124fbcb6980073a6d5"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply hf.",
                        "VernacExtend",
                        "e9beb9c5bacb25fe6a13677c3b8309d3880f21b7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- 2 extend_n2f.",
                        "VernacExtend",
                        "e18f4b1163d60ad555a8ca8346b6d0ee3fa1dbff"
                    ]
                },
                {
                    "command": [
                        "generalize (extend_ok f hx) (extend_ok f hy).",
                        "VernacExtend",
                        "b514119c4cc14a1d4142ec399065ed138e882890"
                    ]
                },
                {
                    "command": [
                        "rewrite Eq.",
                        "VernacExtend",
                        "40cf85051bffd6bb09e0c8d6b997364f4b645f4d"
                    ]
                },
                {
                    "command": [
                        "apply n2f_ext.",
                        "VernacExtend",
                        "5aed71402af55524327b8341a205b3c2ab66f550"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "restrict_surjective",
            "line_nb": 316,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros hf y hy.",
                        "VernacExtend",
                        "d82ae8d9fbca93bfac6cb9284ee2f6ace64c24cf"
                    ]
                },
                {
                    "command": [
                        "destruct (hf (n2f hy)) as (x,Eq).",
                        "VernacExtend",
                        "495d187c22f35197260fc2bfeb16879a42ca6434"
                    ]
                },
                {
                    "command": [
                        "exists (f2n x).",
                        "VernacExtend",
                        "d8644c22df4bf7c52dcd0ec62e27e7734ea6a5b4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "apply f2n_ok.",
                        "VernacExtend",
                        "ff9057294bd6fcca1d798b783fc047f96444f932"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (restrict_f2n h), Eq.",
                        "VernacExtend",
                        "4c2e2883045dcc41d6b4aa51fd8e1c601c06e0c1"
                    ]
                },
                {
                    "command": [
                        "apply f2n_n2f.",
                        "VernacExtend",
                        "6ed7d1a863bf60e3daab6d3d3b8d0c0047920823"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros hf y.",
                        "VernacExtend",
                        "c29408f80418d62d2950d7a4730ce3ad18cd3fe3"
                    ]
                },
                {
                    "command": [
                        "destruct (hf _ (f2n_ok y)) as (x & hx & Eq).",
                        "VernacExtend",
                        "0b3dd0b4c1dc635679532953aa0f5aad57b29dfe"
                    ]
                },
                {
                    "command": [
                        "exists (n2f hx).",
                        "VernacExtend",
                        "7602130cde1e024c6b55b48577243696d09d603c"
                    ]
                },
                {
                    "command": [
                        "apply f2n_inj.",
                        "VernacExtend",
                        "591232e0d10bcf5f5f16eeba01e00be64049854a"
                    ]
                },
                {
                    "command": [
                        "now rewrite restrict_f2n, f2n_n2f.",
                        "VernacExtend",
                        "5d2cd573e4b823f51e5df70e397b47eb350fdde8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "restrict_injective",
            "line_nb": 335,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros hf x y hx hy Eq.",
                        "VernacExtend",
                        "fa9458ff7b4b8a2758af0dfcb8903243feea96ba"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (f2n_n2f hx), <- (f2n_n2f hy).",
                        "VernacExtend",
                        "c5fe6bd901c9e9fe72bf11124fbcb6980073a6d5"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply hf.",
                        "VernacExtend",
                        "e9beb9c5bacb25fe6a13677c3b8309d3880f21b7"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 restrict_n2f.",
                        "VernacExtend",
                        "d0b83c681d4fe713536fec47ca5dfef1a0785797"
                    ]
                },
                {
                    "command": [
                        "generalize (h x hx) (h y hy).",
                        "VernacExtend",
                        "3eb07bc2c40c43d9ec3a71ede63cc3011918b682"
                    ]
                },
                {
                    "command": [
                        "rewrite Eq.",
                        "VernacExtend",
                        "40cf85051bffd6bb09e0c8d6b997364f4b645f4d"
                    ]
                },
                {
                    "command": [
                        "apply n2f_ext.",
                        "VernacExtend",
                        "5aed71402af55524327b8341a205b3c2ab66f550"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros hf x y Eq.",
                        "VernacExtend",
                        "fba6cec00fc6b3899f4e8104d57ba5c8f55d0c03"
                    ]
                },
                {
                    "command": [
                        "apply f2n_inj.",
                        "VernacExtend",
                        "591232e0d10bcf5f5f16eeba01e00be64049854a"
                    ]
                },
                {
                    "command": [
                        "apply hf; try apply f2n_ok.",
                        "VernacExtend",
                        "b0fa5dd6e655453d44d675943ae9ab7f92f7d64c"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- 2 (restrict_f2n h), Eq.",
                        "VernacExtend",
                        "362b93fe2ea88c974e3352b11def63f24dc61c10"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bInjective_bSurjective",
            "line_nb": 354,
            "steps": [
                {
                    "command": [
                        "intros h.",
                        "VernacExtend",
                        "d9af23d7f0cb5ed2eb064c0cac858c6211d58837"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (restrict_injective h), <- (restrict_surjective h).",
                        "VernacExtend",
                        "86a6e7b7f7a3fa60e98307ebadec08da4c56e927"
                    ]
                },
                {
                    "command": [
                        "apply Endo_Injective_Surjective.",
                        "VernacExtend",
                        "0b336ab631ed293ab82bcb1dd16a3eb5c56ac7c0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Fin_Finite.",
                        "VernacExtend",
                        "a0ec7de05b8a3d77db266291a753f1b0b201e76f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "destruct (Fin.eq_dec x y); [left|right]; trivial.",
                        "VernacExtend",
                        "5a15af899396b01844ac1d6c5a69930be4173823"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bSurjective_bBijective",
            "line_nb": 364,
            "steps": [
                {
                    "command": [
                        "intro hf.",
                        "VernacExtend",
                        "c988c6a9282df68bec5ea2062c0cfe875a32307c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (restrict_surjective hf).",
                        "VernacExtend",
                        "9d24dc2b719e4b8c517855080af5618d7f4e2508"
                    ]
                },
                {
                    "command": [
                        "intros Su.",
                        "VernacExtend",
                        "6af30755860e8ac47a21a2081c8818f22432de9a"
                    ]
                },
                {
                    "command": [
                        "assert (Ij : Injective (restrict hf)).",
                        "VernacExtend",
                        "20270bd6c59cb9614b5ca7e435caf4f8d7d2e719"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Endo_Injective_Surjective; trivial.",
                        "VernacExtend",
                        "96c047717ec8e0f5c6e895d832682dac2d5a2aa8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Fin_Finite.",
                        "VernacExtend",
                        "a0ec7de05b8a3d77db266291a753f1b0b201e76f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "destruct (Fin.eq_dec x y); [left|right]; trivial.",
                        "VernacExtend",
                        "5a15af899396b01844ac1d6c5a69930be4173823"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "assert (Bi : Bijective (restrict hf)).",
                        "VernacExtend",
                        "058b43f45f58f85369d36644a08c2803d9a9875a"
                    ]
                },
                {
                    "command": [
                        "{",
                        "VernacSubproof",
                        "184cabd02aa0a33f23f10474ea95789b1f149361"
                    ]
                },
                {
                    "command": [
                        "apply Injective_Surjective_Bijective; trivial.",
                        "VernacExtend",
                        "93dae277535fa2dba5161200c75610b40ba9536b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Fin_Finite.",
                        "VernacExtend",
                        "a0ec7de05b8a3d77db266291a753f1b0b201e76f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exact Fin.eq_dec.",
                        "VernacExtend",
                        "f7bb7b275a618b11bf48258d03b1a8b4bbdc09cd"
                    ]
                },
                {
                    "command": [
                        "}",
                        "VernacEndSubproof",
                        "85f27874ef16421341373f4b062b6d1605043af9"
                    ]
                },
                {
                    "command": [
                        "destruct Bi as (g & Hg & Hg').",
                        "VernacExtend",
                        "47b6f61088be5b934ad8329972a437babed42977"
                    ]
                },
                {
                    "command": [
                        "exists (extend g).",
                        "VernacExtend",
                        "30117240f2ac45a6eacec15911586461c1d3d364"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply extend_ok.",
                        "VernacExtend",
                        "87c4108ee41bcc38acba1a5afcdd761dfc0efefd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- (f2n_n2f Hx), <- (restrict_f2n hf), extend_f2n, Hg.",
                        "VernacExtend",
                        "f6aa16942bc387ea5d0fef309c7c4454ac77be96"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- (f2n_n2f Hx), extend_f2n, <- (restrict_f2n hf), Hg'.",
                        "VernacExtend",
                        "e41380ef3435f999c00814d22651af9280adcb89"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}