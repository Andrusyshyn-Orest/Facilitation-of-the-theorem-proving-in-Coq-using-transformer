{
    "filename": "theories/Logic/Eqdep_dec.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Section EqdepDec.",
            "VernacBeginSection",
            "328d47603d782e20825c98971f73141e87766037"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Let comp (x y y':A) (eq1:x = y) (eq2:x = y') : y = y' := eq_ind _ (fun a => a = y') eq2 _ eq1.",
            "VernacDefinition",
            "9dfee7f04c6b9625ed9a6a12b6c603bc37f14353"
        ],
        [
            "Remark trans_sym_eq : forall (x y:A) (u:x = y), comp u u = eq_refl y.",
            "VernacStartTheoremProof",
            "cfde9891f553236be254e4e3360a49c56310ae75"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case u; trivial.",
            "VernacExtend",
            "89c6cbdc2c5740168fad1e0cf3014b034a47d3ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable x : A.",
            "VernacAssumption",
            "0addf7b4b37258a3dbbd8d1eaa393ade321b7989"
        ],
        [
            "Variable eq_dec : forall y:A, x = y \\/ x <> y.",
            "VernacAssumption",
            "f53f08dd62ce1f075c43eb8a206a7e165f410a3a"
        ],
        [
            "Let nu (y:A) (u:x = y) : x = y := match eq_dec y with | or_introl eqxy => eqxy | or_intror neqxy => False_ind _ (neqxy u) end.",
            "VernacDefinition",
            "6308a6165336ee9cbe866a2cde4ef0e2c8badda3"
        ],
        [
            "Let nu_constant : forall (y:A) (u v:x = y), nu u = nu v.",
            "VernacDefinition",
            "46eff484185c305b8f2163d1a5a09b65799967b7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold nu.",
            "VernacExtend",
            "9c0dfa9acd9735302db6a87de44c346f2ab51692"
        ],
        [
            "destruct (eq_dec y) as [Heq|Hneq].",
            "VernacExtend",
            "f252c0e908720c335a4424e480de7ed3dcd73bfc"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "case Hneq; trivial.",
            "VernacExtend",
            "9c5193ee021d7a970fad2b52dc369827e365f0cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let nu_inv (y:A) (v:x = y) : x = y := comp (nu (eq_refl x)) v.",
            "VernacDefinition",
            "07d5500a69684cc45a61ef5ebb5c78714df05a1e"
        ],
        [
            "Remark nu_left_inv_on : forall (y:A) (u:x = y), nu_inv (nu u) = u.",
            "VernacStartTheoremProof",
            "b8d20a7263a7b1a86f7080cc64c6b58a9f50362f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case u; unfold nu_inv.",
            "VernacExtend",
            "c711c7fce84a6e3c26cdca6150c3c6fc178fb4df"
        ],
        [
            "apply trans_sym_eq.",
            "VernacExtend",
            "e969480ac76899ddbcc1fcfd83d9f082645181c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_proofs_unicity_on : forall (y:A) (p1 p2:x = y), p1 = p2.",
            "VernacStartTheoremProof",
            "a0564870f5f0351788f924ee9a731b1af63584bf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim nu_left_inv_on with (u := p1).",
            "VernacExtend",
            "89f678ab1ef035cd9c9a3a481c47983eb07033ee"
        ],
        [
            "elim nu_left_inv_on with (u := p2).",
            "VernacExtend",
            "8c7e530094e4f4690387acb9225328e60db1146d"
        ],
        [
            "elim nu_constant with y p1 p2.",
            "VernacExtend",
            "7819c491a4f341346b2ab666bfda8f07c36016dc"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem K_dec_on : forall P:x = x -> Prop, P (eq_refl x) -> forall p:x = x, P p.",
            "VernacStartTheoremProof",
            "901898ddc639c0ea8ae4d20d5cf4725393e81df4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim eq_proofs_unicity_on with x (eq_refl x) p.",
            "VernacExtend",
            "e41fc3c5675fc3ab8244b8a8576e5511a11af3fa"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Let proj (P:A -> Prop) (exP:ex P) (def:P x) : P x := match exP with | ex_intro _ x' prf => match eq_dec x' with | or_introl eqprf => eq_ind x' P prf x (eq_sym eqprf) | _ => def end end.",
            "VernacDefinition",
            "d3c2f0952fa93c2b94fa08fae48195e88e56bbd0"
        ],
        [
            "Theorem inj_right_pair_on : forall (P:A -> Prop) (y y':P x), ex_intro P x y = ex_intro P x y' -> y = y'.",
            "VernacStartTheoremProof",
            "dc865e6f6d974a23897132cb1d01bc304747483d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (proj (ex_intro P x y) y = proj (ex_intro P x y') y).",
            "VernacExtend",
            "dc2bbcf5eddbb4ba82910a07d52bf6b3dd796d1a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "destruct (eq_dec x) as [Heq|Hneq].",
            "VernacExtend",
            "afaaa88210205caa88571a4cd27d6a5b329d3124"
        ],
        [
            "elim Heq using K_dec_on; trivial.",
            "VernacExtend",
            "353a757dddfe460ca7ac39f984c946f3f02ce5a7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case Hneq; trivial.",
            "VernacExtend",
            "9c5193ee021d7a970fad2b52dc369827e365f0cf"
        ],
        [
            "case H.",
            "VernacExtend",
            "ed133bc3c18fb327812c50c4771060c04c7f32b1"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End EqdepDec.",
            "VernacEndSegment",
            "76967cc6eb21dca1c1e23ee771ee632edf02798d"
        ],
        [
            "Theorem eq_proofs_unicity A (eq_dec : forall x y : A, x = y \\/ x <> y) (x : A) : forall (y:A) (p1 p2:x = y), p1 = p2.",
            "VernacStartTheoremProof",
            "7882225eedb9c1e1cc93831b1542b884b102eb11"
        ],
        [
            "Proof (@eq_proofs_unicity_on A x (eq_dec x)).",
            "VernacExactProof",
            "c59ab7a87412b2186884265f3f58de39bd1d7165"
        ],
        [
            "Theorem K_dec A (eq_dec : forall x y : A, x = y \\/ x <> y) (x : A) : forall P:x = x -> Prop, P (eq_refl x) -> forall p:x = x, P p.",
            "VernacStartTheoremProof",
            "c7bba23cb5bf547694f5cc2ddc688617d0c3d7ed"
        ],
        [
            "Proof (@K_dec_on A x (eq_dec x)).",
            "VernacExactProof",
            "8ce4a5aaa0a8fc0a8145ccc4858160336510d78d"
        ],
        [
            "Theorem inj_right_pair A (eq_dec : forall x y : A, x = y \\/ x <> y) (x : A) : forall (P:A -> Prop) (y y':P x), ex_intro P x y = ex_intro P x y' -> y = y'.",
            "VernacStartTheoremProof",
            "97a8e34aaee6b484e1297f6a491be8548514276c"
        ],
        [
            "Proof (@inj_right_pair_on A x (eq_dec x)).",
            "VernacExactProof",
            "d7fa207e85821ffaadc4db8d5a8ee810c26151ed"
        ],
        [
            "Require Import EqdepFacts.",
            "VernacRequire",
            "733bac8461e4db2e40292271163fec2041f87f5a"
        ],
        [
            "Theorem K_dec_type : forall A:Type, (forall x y:A, {x = y} + {x <> y}) -> forall (x:A) (P:x = x -> Prop), P (eq_refl x) -> forall p:x = x, P p.",
            "VernacStartTheoremProof",
            "8ac390d93e1ded3f2b1d4adcb7aa75ad09324177"
        ],
        [
            "intros A eq_dec x P H p.",
            "VernacExtend",
            "050edc29c14c878a83474f869099a2869ec90c69"
        ],
        [
            "elim p using K_dec; intros.",
            "VernacExtend",
            "9170d951926f44afe109751b284678a4c31ef774"
        ],
        [
            "case (eq_dec x0 y); [left|right]; assumption.",
            "VernacExtend",
            "073d7a437ef6f6bf98524d40195075ae443c2f64"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem K_dec_set : forall A:Set, (forall x y:A, {x = y} + {x <> y}) -> forall (x:A) (P:x = x -> Prop), P (eq_refl x) -> forall p:x = x, P p.",
            "VernacStartTheoremProof",
            "1f3ef442eef0f8b28a28d15aa91462bb9098a9b0"
        ],
        [
            "Proof fun A => K_dec_type (A:=A).",
            "VernacExactProof",
            "dba95fddcc8bd38ca537544832ad90c2e5e09a23"
        ],
        [
            "Theorem eq_rect_eq_dec : forall A:Type, (forall x y:A, {x = y} + {x <> y}) -> forall (p:A) (Q:A -> Type) (x:Q p) (h:p = p), x = eq_rect p Q x p h.",
            "VernacStartTheoremProof",
            "7519763401d84d8f838c41684fd21689c1e30aac"
        ],
        [
            "intros A eq_dec.",
            "VernacExtend",
            "059e68bfe69fd7ccdf1e7ca619e20a0f5ee534b9"
        ],
        [
            "apply (Streicher_K__eq_rect_eq A (K_dec_type eq_dec)).",
            "VernacExtend",
            "281a6bd7e1ad5d99d4a7b3b93b9d7abf5257d79a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_dep_eq_dec : forall A:Type, (forall x y:A, {x = y} + {x <> y}) -> forall (P:A->Type) (p:A) (x y:P p), eq_dep A P p x p y -> x = y.",
            "VernacStartTheoremProof",
            "d76691f093d7e8a056e1246048c5e335089270a1"
        ],
        [
            "Proof (fun A eq_dec => eq_rect_eq__eq_dep_eq A (eq_rect_eq_dec eq_dec)).",
            "VernacExactProof",
            "792b43a05f0a284d4b9f24d9327a0cfae36401a0"
        ],
        [
            "Theorem UIP_dec : forall (A:Type), (forall x y:A, {x = y} + {x <> y}) -> forall (x y:A) (p1 p2:x = y), p1 = p2.",
            "VernacStartTheoremProof",
            "f7e6e2e105c3aed53f461238c6693e89eda41e95"
        ],
        [
            "Proof (fun A eq_dec => eq_dep_eq__UIP A (eq_dep_eq_dec eq_dec)).",
            "VernacExactProof",
            "f83ffbbb4190388a9bd4a0af6450cb8f6c705a48"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ],
        [
            "Module Type DecidableType.",
            "VernacDeclareModuleType",
            "5e0829cfe5d7d3deb21515db59f595d4ad935897"
        ],
        [
            "Monomorphic Parameter U:Type.",
            "VernacAssumption",
            "683bd5bce3f7c3949920445ab508cc6242dc01e8"
        ],
        [
            "Axiom eq_dec : forall x y:U, {x = y} + {x <> y}.",
            "VernacAssumption",
            "106457555bd224e6e702d68da2ee53e7764b21b2"
        ],
        [
            "End DecidableType.",
            "VernacEndSegment",
            "8e8cad37379c13085f6380a760894d3a6d78f46d"
        ],
        [
            "Module DecidableEqDep (M:DecidableType).",
            "VernacDefineModule",
            "ece4f89374fac0cbf0f404a4d6e367acfade2998"
        ],
        [
            "Import M.",
            "VernacImport",
            "69325bbd0268095c07cfca05f898394c270b2c07"
        ],
        [
            "Lemma eq_rect_eq : forall (p:U) (Q:U -> Type) (x:Q p) (h:p = p), x = eq_rect p Q x p h.",
            "VernacStartTheoremProof",
            "9bccc74bae38d19e2ce4c6b42f70a5213812a79a"
        ],
        [
            "Proof eq_rect_eq_dec eq_dec.",
            "VernacExactProof",
            "b875069ce521b9742e3c9d1754a289e9b5f847f1"
        ],
        [
            "Theorem eq_dep_eq : forall (P:U->Type) (p:U) (x y:P p), eq_dep U P p x p y -> x = y.",
            "VernacStartTheoremProof",
            "95f9f2f989a9670d95a42d1c0bed275e0775894f"
        ],
        [
            "Proof (eq_rect_eq__eq_dep_eq U eq_rect_eq).",
            "VernacExactProof",
            "f9223fa4e31b2439de65e5811f2361509f6b733b"
        ],
        [
            "Lemma UIP : forall (x y:U) (p1 p2:x = y), p1 = p2.",
            "VernacStartTheoremProof",
            "d0da0002ce0555fcecf17ee88b407e5c9c32f008"
        ],
        [
            "Proof (eq_dep_eq__UIP U eq_dep_eq).",
            "VernacExactProof",
            "6b5dcaf553cd576626ef885b3cdf9f448a45ae0c"
        ],
        [
            "Lemma UIP_refl : forall (x:U) (p:x = x), p = eq_refl x.",
            "VernacStartTheoremProof",
            "e8ea705a200b714aec48d512cf192b4efd788c9f"
        ],
        [
            "Proof (UIP__UIP_refl U UIP).",
            "VernacExactProof",
            "b58fed1571cbc53b85335c4e56f935da503c062d"
        ],
        [
            "Lemma Streicher_K : forall (x:U) (P:x = x -> Prop), P (eq_refl x) -> forall p:x = x, P p.",
            "VernacStartTheoremProof",
            "1e226005f651a95233b5fcd30a7542a069513b02"
        ],
        [
            "Proof (K_dec_type eq_dec).",
            "VernacExactProof",
            "3686192e77a2dc6a6693a854d55a2bdaa221cdc2"
        ],
        [
            "Lemma inj_pairT2 : forall (P:U -> Type) (p:U) (x y:P p), existT P p x = existT P p y -> x = y.",
            "VernacStartTheoremProof",
            "8027c155c455a8919f44bc7ac94b2dc1624aebfc"
        ],
        [
            "Proof eq_dep_eq__inj_pairT2 U eq_dep_eq.",
            "VernacExactProof",
            "d1715b2df843a451a7b97cb59c4bd429ab49e27b"
        ],
        [
            "Lemma inj_pairP2 : forall (P:U -> Prop) (x:U) (p q:P x), ex_intro P x p = ex_intro P x q -> p = q.",
            "VernacStartTheoremProof",
            "62ef059f29b76ce33dc614eadc7e6d4a881825d7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply inj_right_pair with (A:=U).",
            "VernacExtend",
            "280b78457032e96368512a0a7566e2dbf3fdfc93"
        ],
        [
            "intros x0 y0; case (eq_dec x0 y0); [left|right]; assumption.",
            "VernacExtend",
            "ae124b0f4e5b1042beda9ed891fa26d23e3ef9e2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End DecidableEqDep.",
            "VernacEndSegment",
            "e2a490f921969cf6c9f2e99871a4af8575871822"
        ],
        [
            "Module Type DecidableSet.",
            "VernacDeclareModuleType",
            "b8ea2c2a24a30b3dd52c1d50ec818e53f435863c"
        ],
        [
            "Parameter U:Set.",
            "VernacAssumption",
            "b18aa235acd78cdd9054cbfba1dc8afe9e69a51b"
        ],
        [
            "Axiom eq_dec : forall x y:U, {x = y} + {x <> y}.",
            "VernacAssumption",
            "106457555bd224e6e702d68da2ee53e7764b21b2"
        ],
        [
            "End DecidableSet.",
            "VernacEndSegment",
            "805b8ce3461fe052b3e48a5e8ad3f2ef1cf338a7"
        ],
        [
            "Module DecidableEqDepSet (M:DecidableSet).",
            "VernacDefineModule",
            "d6eb8beb2b85984c4dc5b12143971b5fdb3fe8ca"
        ],
        [
            "Import M.",
            "VernacImport",
            "69325bbd0268095c07cfca05f898394c270b2c07"
        ],
        [
            "Module N:=DecidableEqDep(M).",
            "VernacDefineModule",
            "d132e1eb15438da5fa699adee697b96a7b7b1a4f"
        ],
        [
            "Lemma eq_rect_eq : forall (p:U) (Q:U -> Type) (x:Q p) (h:p = p), x = eq_rect p Q x p h.",
            "VernacStartTheoremProof",
            "9bccc74bae38d19e2ce4c6b42f70a5213812a79a"
        ],
        [
            "Proof eq_rect_eq_dec eq_dec.",
            "VernacExactProof",
            "b875069ce521b9742e3c9d1754a289e9b5f847f1"
        ],
        [
            "Theorem eq_dep_eq : forall (P:U->Type) (p:U) (x y:P p), eq_dep U P p x p y -> x = y.",
            "VernacStartTheoremProof",
            "95f9f2f989a9670d95a42d1c0bed275e0775894f"
        ],
        [
            "Proof (eq_rect_eq__eq_dep_eq U eq_rect_eq).",
            "VernacExactProof",
            "f9223fa4e31b2439de65e5811f2361509f6b733b"
        ],
        [
            "Lemma UIP : forall (x y:U) (p1 p2:x = y), p1 = p2.",
            "VernacStartTheoremProof",
            "d0da0002ce0555fcecf17ee88b407e5c9c32f008"
        ],
        [
            "Proof (eq_dep_eq__UIP U eq_dep_eq).",
            "VernacExactProof",
            "6b5dcaf553cd576626ef885b3cdf9f448a45ae0c"
        ],
        [
            "Lemma UIP_refl : forall (x:U) (p:x = x), p = eq_refl x.",
            "VernacStartTheoremProof",
            "e8ea705a200b714aec48d512cf192b4efd788c9f"
        ],
        [
            "Proof (UIP__UIP_refl U UIP).",
            "VernacExactProof",
            "b58fed1571cbc53b85335c4e56f935da503c062d"
        ],
        [
            "Lemma Streicher_K : forall (x:U) (P:x = x -> Prop), P (eq_refl x) -> forall p:x = x, P p.",
            "VernacStartTheoremProof",
            "1e226005f651a95233b5fcd30a7542a069513b02"
        ],
        [
            "Proof (K_dec_type eq_dec).",
            "VernacExactProof",
            "3686192e77a2dc6a6693a854d55a2bdaa221cdc2"
        ],
        [
            "Lemma inj_pairP2 : forall (P:U -> Prop) (x:U) (p q:P x), ex_intro P x p = ex_intro P x q -> p = q.",
            "VernacStartTheoremProof",
            "62ef059f29b76ce33dc614eadc7e6d4a881825d7"
        ],
        [
            "Proof N.inj_pairP2.",
            "VernacExactProof",
            "d6278388036b353a969c3e2af6f19230ed1b9d02"
        ],
        [
            "Lemma inj_pair2 : forall (P:U -> Type) (p:U) (x y:P p), existT P p x = existT P p y -> x = y.",
            "VernacStartTheoremProof",
            "d266f821fe16fea1b375d9941dc3420c6c4255bb"
        ],
        [
            "Proof eq_dep_eq__inj_pair2 U N.eq_dep_eq.",
            "VernacExactProof",
            "5859a704bfebb31d81ffb33972980d666595ec10"
        ],
        [
            "Notation inj_pairT2 := inj_pair2.",
            "VernacSyntacticDefinition",
            "db67a5ef3d06befc33399cda9f5837c3a25438be"
        ],
        [
            "End DecidableEqDepSet.",
            "VernacEndSegment",
            "d3bc9c737e674ff02d869945ae9c1bcf17759216"
        ],
        [
            "Lemma inj_pair2_eq_dec : forall A:Type, (forall x y:A, {x=y}+{x<>y}) -> ( forall (P:A -> Type) (p:A) (x y:P p), existT P p x = existT P p y -> x = y ).",
            "VernacStartTheoremProof",
            "78b45ce8c05b6306b2afae8fe4cfa396cad6ca1a"
        ],
        [
            "intros A eq_dec.",
            "VernacExtend",
            "059e68bfe69fd7ccdf1e7ca619e20a0f5ee534b9"
        ],
        [
            "apply eq_dep_eq__inj_pair2.",
            "VernacExtend",
            "65f36666db541b4c242be3e0ef911693f1291fe6"
        ],
        [
            "apply eq_rect_eq__eq_dep_eq.",
            "VernacExtend",
            "3e252e08fecb953739a7f95f43a5c047b103d5f3"
        ],
        [
            "unfold Eq_rect_eq, Eq_rect_eq_on.",
            "VernacExtend",
            "61716ead4b2c26d3703ab074e1996b1bb0a921cb"
        ],
        [
            "intros; apply eq_rect_eq_dec.",
            "VernacExtend",
            "e8233b0ff934e0acd207305aaf5fd6583fb76448"
        ],
        [
            "apply eq_dec.",
            "VernacExtend",
            "ca56f014bcd93ee30bedd3a00c0d13852134e818"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma UIP_refl_unit (x : tt = tt) : x = eq_refl tt.",
            "VernacStartTheoremProof",
            "eb2803c9f27f715263a592b1120c19074dbd1bab"
        ],
        [
            "change (match tt as b return tt = b -> Prop with | tt => fun x => x = eq_refl tt end x).",
            "VernacExtend",
            "57864fbc86de4c0cd723541a5ed259dd62d366f6"
        ],
        [
            "destruct x; reflexivity.",
            "VernacExtend",
            "c3ead0f113d03500ac3bc0d0edefa48762d578a6"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma UIP_refl_bool (b:bool) (x : b = b) : x = eq_refl.",
            "VernacStartTheoremProof",
            "24500d4391a770e305f96f318085f9509edd2654"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (match true as b return true=b -> Prop with | true => fun x => x = eq_refl | _ => fun _ => True end x).",
            "VernacExtend",
            "3a15de778dec6c4514f77be868b7d4ce6552508a"
        ],
        [
            "destruct x; reflexivity.",
            "VernacExtend",
            "c3ead0f113d03500ac3bc0d0edefa48762d578a6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (match false as b return false=b -> Prop with | false => fun x => x = eq_refl | _ => fun _ => True end x).",
            "VernacExtend",
            "a16cc9f98f8ebeab8fbb0c98768af4b07d887cf5"
        ],
        [
            "destruct x; reflexivity.",
            "VernacExtend",
            "c3ead0f113d03500ac3bc0d0edefa48762d578a6"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma UIP_refl_nat (n:nat) (x : n = n) : x = eq_refl.",
            "VernacStartTheoremProof",
            "9cd1c6a7521905f12ab6790bf598178ecefd5ca2"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "change (match 0 as n return 0=n -> Prop with | 0 => fun x => x = eq_refl | _ => fun _ => True end x).",
            "VernacExtend",
            "f76d752ad0bec3da8f34c46502df6228499e1480"
        ],
        [
            "destruct x; reflexivity.",
            "VernacExtend",
            "c3ead0f113d03500ac3bc0d0edefa48762d578a6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "specialize IHn with (f_equal pred x).",
            "VernacExtend",
            "6d92ef48baf69171a5240cf0e94064ef2e84fb7b"
        ],
        [
            "change eq_refl with (f_equal S (@eq_refl _ n)).",
            "VernacExtend",
            "3629706c7276f624752c08d0a48277467fe65105"
        ],
        [
            "rewrite <- IHn; clear IHn.",
            "VernacExtend",
            "459c27a814b25248118fc5f7697b95f4e385c566"
        ],
        [
            "change (match S n as n' return S n = n' -> Prop with | 0 => fun _ => True | S n' => fun x => x = f_equal S (f_equal pred x) end x).",
            "VernacExtend",
            "d85aa943175c764fa7f24788e2a296a83cbeeb63"
        ],
        [
            "pattern (S n) at 2 3, x.",
            "VernacExtend",
            "be78470ac982c440a392ab1f046ee1a3cc046cf9"
        ],
        [
            "destruct x; reflexivity.",
            "VernacExtend",
            "c3ead0f113d03500ac3bc0d0edefa48762d578a6"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ]
    ],
    "proofs": [
        {
            "name": "trans_sym_eq",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case u; trivial.",
                        "VernacExtend",
                        "89c6cbdc2c5740168fad1e0cf3014b034a47d3ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nu_constant",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold nu.",
                        "VernacExtend",
                        "9c0dfa9acd9735302db6a87de44c346f2ab51692"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec y) as [Heq|Hneq].",
                        "VernacExtend",
                        "f252c0e908720c335a4424e480de7ed3dcd73bfc"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "case Hneq; trivial.",
                        "VernacExtend",
                        "9c5193ee021d7a970fad2b52dc369827e365f0cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nu_left_inv_on",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case u; unfold nu_inv.",
                        "VernacExtend",
                        "c711c7fce84a6e3c26cdca6150c3c6fc178fb4df"
                    ]
                },
                {
                    "command": [
                        "apply trans_sym_eq.",
                        "VernacExtend",
                        "e969480ac76899ddbcc1fcfd83d9f082645181c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_proofs_unicity_on",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim nu_left_inv_on with (u := p1).",
                        "VernacExtend",
                        "89f678ab1ef035cd9c9a3a481c47983eb07033ee"
                    ]
                },
                {
                    "command": [
                        "elim nu_left_inv_on with (u := p2).",
                        "VernacExtend",
                        "8c7e530094e4f4690387acb9225328e60db1146d"
                    ]
                },
                {
                    "command": [
                        "elim nu_constant with y p1 p2.",
                        "VernacExtend",
                        "7819c491a4f341346b2ab666bfda8f07c36016dc"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "K_dec_on",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim eq_proofs_unicity_on with x (eq_refl x) p.",
                        "VernacExtend",
                        "e41fc3c5675fc3ab8244b8a8576e5511a11af3fa"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_right_pair_on",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (proj (ex_intro P x y) y = proj (ex_intro P x y') y).",
                        "VernacExtend",
                        "dc2bbcf5eddbb4ba82910a07d52bf6b3dd796d1a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec x) as [Heq|Hneq].",
                        "VernacExtend",
                        "afaaa88210205caa88571a4cd27d6a5b329d3124"
                    ]
                },
                {
                    "command": [
                        "elim Heq using K_dec_on; trivial.",
                        "VernacExtend",
                        "353a757dddfe460ca7ac39f984c946f3f02ce5a7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case Hneq; trivial.",
                        "VernacExtend",
                        "9c5193ee021d7a970fad2b52dc369827e365f0cf"
                    ]
                },
                {
                    "command": [
                        "case H.",
                        "VernacExtend",
                        "ed133bc3c18fb327812c50c4771060c04c7f32b1"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "K_dec_type",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros A eq_dec x P H p.",
                        "VernacExtend",
                        "050edc29c14c878a83474f869099a2869ec90c69"
                    ]
                },
                {
                    "command": [
                        "elim p using K_dec; intros.",
                        "VernacExtend",
                        "9170d951926f44afe109751b284678a4c31ef774"
                    ]
                },
                {
                    "command": [
                        "case (eq_dec x0 y); [left|right]; assumption.",
                        "VernacExtend",
                        "073d7a437ef6f6bf98524d40195075ae443c2f64"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_rect_eq_dec",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros A eq_dec.",
                        "VernacExtend",
                        "059e68bfe69fd7ccdf1e7ca619e20a0f5ee534b9"
                    ]
                },
                {
                    "command": [
                        "apply (Streicher_K__eq_rect_eq A (K_dec_type eq_dec)).",
                        "VernacExtend",
                        "281a6bd7e1ad5d99d4a7b3b93b9d7abf5257d79a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_pairP2",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply inj_right_pair with (A:=U).",
                        "VernacExtend",
                        "280b78457032e96368512a0a7566e2dbf3fdfc93"
                    ]
                },
                {
                    "command": [
                        "intros x0 y0; case (eq_dec x0 y0); [left|right]; assumption.",
                        "VernacExtend",
                        "ae124b0f4e5b1042beda9ed891fa26d23e3ef9e2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_pair2_eq_dec",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "intros A eq_dec.",
                        "VernacExtend",
                        "059e68bfe69fd7ccdf1e7ca619e20a0f5ee534b9"
                    ]
                },
                {
                    "command": [
                        "apply eq_dep_eq__inj_pair2.",
                        "VernacExtend",
                        "65f36666db541b4c242be3e0ef911693f1291fe6"
                    ]
                },
                {
                    "command": [
                        "apply eq_rect_eq__eq_dep_eq.",
                        "VernacExtend",
                        "3e252e08fecb953739a7f95f43a5c047b103d5f3"
                    ]
                },
                {
                    "command": [
                        "unfold Eq_rect_eq, Eq_rect_eq_on.",
                        "VernacExtend",
                        "61716ead4b2c26d3703ab074e1996b1bb0a921cb"
                    ]
                },
                {
                    "command": [
                        "intros; apply eq_rect_eq_dec.",
                        "VernacExtend",
                        "e8233b0ff934e0acd207305aaf5fd6583fb76448"
                    ]
                },
                {
                    "command": [
                        "apply eq_dec.",
                        "VernacExtend",
                        "ca56f014bcd93ee30bedd3a00c0d13852134e818"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "UIP_refl_unit",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "change (match tt as b return tt = b -> Prop with | tt => fun x => x = eq_refl tt end x).",
                        "VernacExtend",
                        "57864fbc86de4c0cd723541a5ed259dd62d366f6"
                    ]
                },
                {
                    "command": [
                        "destruct x; reflexivity.",
                        "VernacExtend",
                        "c3ead0f113d03500ac3bc0d0edefa48762d578a6"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "UIP_refl_bool",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (match true as b return true=b -> Prop with | true => fun x => x = eq_refl | _ => fun _ => True end x).",
                        "VernacExtend",
                        "3a15de778dec6c4514f77be868b7d4ce6552508a"
                    ]
                },
                {
                    "command": [
                        "destruct x; reflexivity.",
                        "VernacExtend",
                        "c3ead0f113d03500ac3bc0d0edefa48762d578a6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (match false as b return false=b -> Prop with | false => fun x => x = eq_refl | _ => fun _ => True end x).",
                        "VernacExtend",
                        "a16cc9f98f8ebeab8fbb0c98768af4b07d887cf5"
                    ]
                },
                {
                    "command": [
                        "destruct x; reflexivity.",
                        "VernacExtend",
                        "c3ead0f113d03500ac3bc0d0edefa48762d578a6"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "UIP_refl_nat",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "change (match 0 as n return 0=n -> Prop with | 0 => fun x => x = eq_refl | _ => fun _ => True end x).",
                        "VernacExtend",
                        "f76d752ad0bec3da8f34c46502df6228499e1480"
                    ]
                },
                {
                    "command": [
                        "destruct x; reflexivity.",
                        "VernacExtend",
                        "c3ead0f113d03500ac3bc0d0edefa48762d578a6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "specialize IHn with (f_equal pred x).",
                        "VernacExtend",
                        "6d92ef48baf69171a5240cf0e94064ef2e84fb7b"
                    ]
                },
                {
                    "command": [
                        "change eq_refl with (f_equal S (@eq_refl _ n)).",
                        "VernacExtend",
                        "3629706c7276f624752c08d0a48277467fe65105"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHn; clear IHn.",
                        "VernacExtend",
                        "459c27a814b25248118fc5f7697b95f4e385c566"
                    ]
                },
                {
                    "command": [
                        "change (match S n as n' return S n = n' -> Prop with | 0 => fun _ => True | S n' => fun x => x = f_equal S (f_equal pred x) end x).",
                        "VernacExtend",
                        "d85aa943175c764fa7f24788e2a296a83cbeeb63"
                    ]
                },
                {
                    "command": [
                        "pattern (S n) at 2 3, x.",
                        "VernacExtend",
                        "be78470ac982c440a392ab1f046ee1a3cc046cf9"
                    ]
                },
                {
                    "command": [
                        "destruct x; reflexivity.",
                        "VernacExtend",
                        "c3ead0f113d03500ac3bc0d0edefa48762d578a6"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}