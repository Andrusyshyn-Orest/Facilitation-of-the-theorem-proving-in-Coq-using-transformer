{
    "filename": "theories/Numbers/Integer/Abstract/ZGcd.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import ZAxioms ZMulOrder ZSgnAbs NZGcd.",
            "VernacRequire",
            "7d817068c1bcb0fdcfe75a1f5a55a95af0bab023"
        ],
        [
            "Module Type ZGcdProp (Import A : ZAxiomsSig') (Import B : ZMulOrderProp A) (Import C : ZSgnAbsProp A B).",
            "VernacDeclareModuleType",
            "e267d232ba78b6357323493bdd9e77e21087657e"
        ],
        [
            "Include NZGcdProp A A B.",
            "VernacInclude",
            "d6d7062406ee3c8b2185af43817826277879bcc0"
        ],
        [
            "Lemma divide_opp_l : forall n m, (-n | m) <-> (n | m).",
            "VernacStartTheoremProof",
            "c31e55931d2b42c73c573d1326f41ec7d4a405e6"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "split; intros (p,Hp); exists (-p); rewrite Hp.",
            "VernacExtend",
            "9544fc662653ca57c53124990fee3dd25e45f569"
        ],
        [
            "now rewrite mul_opp_l, mul_opp_r.",
            "VernacExtend",
            "95c5c77e480f745c86d18025c6d782ccfffa3b2b"
        ],
        [
            "now rewrite mul_opp_opp.",
            "VernacExtend",
            "7ce68ee2e065cf872b9a25c0f74e3954945b2e8e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_opp_r : forall n m, (n | -m) <-> (n | m).",
            "VernacStartTheoremProof",
            "31dea9cf14dc9e5b317bbed96e64e2e5745da9d3"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "split; intros (p,Hp); exists (-p).",
            "VernacExtend",
            "c8855559dd940a4a77479f8529c5223727fa8607"
        ],
        [
            "now rewrite mul_opp_l, <- Hp, opp_involutive.",
            "VernacExtend",
            "4ca45da45906e904e9952ecbdb2f6e93c5764e7d"
        ],
        [
            "now rewrite Hp, mul_opp_l.",
            "VernacExtend",
            "8a0556d5379297c8a74768ff43107f18757e6093"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_abs_l : forall n m, (abs n | m) <-> (n | m).",
            "VernacStartTheoremProof",
            "e49f6793c84a19ca5bd4299b667ae708d4fea399"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "destruct (abs_eq_or_opp n) as [H|H]; rewrite H.",
            "VernacExtend",
            "ca6cfaa6e3b75873b97c92c26b70cc839b8decd0"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "apply divide_opp_l.",
            "VernacExtend",
            "f286fe674a12d94a996ab4cb0d07065e50a4a9b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_abs_r : forall n m, (n | abs m) <-> (n | m).",
            "VernacStartTheoremProof",
            "01a29f784602e56efe7587d3340229664ab86a84"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "destruct (abs_eq_or_opp m) as [H|H]; rewrite H.",
            "VernacExtend",
            "48c845b208031183ce53a8f8fd2052f7597ca0c0"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "apply divide_opp_r.",
            "VernacExtend",
            "a14461948b3060d578f4e40cbde2c295c6f43463"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_1_r_abs : forall n, (n | 1) -> abs n == 1.",
            "VernacStartTheoremProof",
            "a2018665d7bc4f6d390c35cf7301f7d374c9e7d4"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "apply divide_1_r_nonneg.",
            "VernacExtend",
            "fd617b108217cb83e7dae340376878e843acebdd"
        ],
        [
            "apply abs_nonneg.",
            "VernacExtend",
            "14084a8a2064f5bdd1c04618116383ef4c5f9046"
        ],
        [
            "now apply divide_abs_l.",
            "VernacExtend",
            "ca173b414a940c2879f18e8b4d428dd175b4e678"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_1_r : forall n, (n | 1) -> n==1 \\/ n==-1.",
            "VernacStartTheoremProof",
            "b0d978f9575c3852b4e81552d1164668eab41b04"
        ],
        [
            "intros n (m,H).",
            "VernacExtend",
            "72fd15d4afc37b7afe1354a9f0325f9d71d152c2"
        ],
        [
            "rewrite mul_comm in H.",
            "VernacExtend",
            "6f21337f5cae7e78505dd74d8c77a0dceb7cdd95"
        ],
        [
            "now apply eq_mul_1 with m.",
            "VernacExtend",
            "8764ef02ccc49c70f51e48b585bbd3bab10427b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_antisym_abs : forall n m, (n | m) -> (m | n) -> abs n == abs m.",
            "VernacStartTheoremProof",
            "1105f50edb0f8375845abf4a24a2e2ad0a30ac78"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply divide_antisym_nonneg; try apply abs_nonneg.",
            "VernacExtend",
            "26e8fd186cb7af9c7a128e75e0315d889cbe0483"
        ],
        [
            "now apply divide_abs_l, divide_abs_r.",
            "VernacExtend",
            "8b357818a18cdc69f7851566adbfbf39e939e0f0"
        ],
        [
            "now apply divide_abs_l, divide_abs_r.",
            "VernacExtend",
            "8b357818a18cdc69f7851566adbfbf39e939e0f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_antisym : forall n m, (n | m) -> (m | n) -> n == m \\/ n == -m.",
            "VernacStartTheoremProof",
            "286055bf1ba3c934ce4e07ce5fc4e0c4c708096f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now apply abs_eq_cases, divide_antisym_abs.",
            "VernacExtend",
            "6d0c0e3f4525e1a0498e70e1009803af1085bd10"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_sub_r : forall n m p, (n | m) -> (n | p) -> (n | m - p).",
            "VernacStartTheoremProof",
            "3b4bfe356d503b65e10793a58ee81f08793ca849"
        ],
        [
            "intros n m p H H'.",
            "VernacExtend",
            "9ec9e45e42db7e71aa7539f895b5aa2bdf5ce9da"
        ],
        [
            "rewrite <- add_opp_r.",
            "VernacExtend",
            "dd28726402d9353bd3d91bb94c753a11cf3c922d"
        ],
        [
            "apply divide_add_r; trivial.",
            "VernacExtend",
            "177a3c8874717a6f6791d1fc25b5399493c643fe"
        ],
        [
            "now apply divide_opp_r.",
            "VernacExtend",
            "cde2aad4e5c6aff36024b4e711fdfb8fde00d171"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_add_cancel_r : forall n m p, (n | m) -> (n | m + p) -> (n | p).",
            "VernacStartTheoremProof",
            "7a89c0649d3c6bdd2312de30ac4511ec4e1c6c51"
        ],
        [
            "intros n m p H H'.",
            "VernacExtend",
            "9ec9e45e42db7e71aa7539f895b5aa2bdf5ce9da"
        ],
        [
            "rewrite <- (add_simpl_l m p).",
            "VernacExtend",
            "0310131ea4d505a9bb57fefd556ead6dd06ced2c"
        ],
        [
            "now apply divide_sub_r.",
            "VernacExtend",
            "53a98eedcbb20e09243623869f2cf07159a826b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_opp_l : forall n m, gcd (-n) m == gcd n m.",
            "VernacStartTheoremProof",
            "844c4a97b916754b4d0edb103854c7e6aa1d9b2c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply gcd_unique_alt; try apply gcd_nonneg.",
            "VernacExtend",
            "3653a532ad2e86c2a158379c266c10ecec735859"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite divide_opp_r.",
            "VernacExtend",
            "e3de4fc3d1ab63133e0f8210e5e2441b0662b21c"
        ],
        [
            "apply gcd_divide_iff.",
            "VernacExtend",
            "ce649d9f11366b6728086e3b5b0409778ee8159e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_opp_r : forall n m, gcd n (-m) == gcd n m.",
            "VernacStartTheoremProof",
            "2b74e6f6c8a7fb36c8a6ccc8b7564f4b00a6e45a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite gcd_comm, gcd_opp_l, gcd_comm.",
            "VernacExtend",
            "e092cdedbb722c4c20d4049d6c71112317ea83f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_abs_l : forall n m, gcd (abs n) m == gcd n m.",
            "VernacStartTheoremProof",
            "7bc19bddae4d12507ebe4134659f2e3b5f932a73"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (abs_eq_or_opp n) as [H|H]; rewrite H.",
            "VernacExtend",
            "ca6cfaa6e3b75873b97c92c26b70cc839b8decd0"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "apply gcd_opp_l.",
            "VernacExtend",
            "e150f70d1570bfbbba5276023ab22898aa17e6e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_abs_r : forall n m, gcd n (abs m) == gcd n m.",
            "VernacStartTheoremProof",
            "18e52cf200e2a2a303fe33b96436fb0cd5df68d8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite gcd_comm, gcd_abs_l, gcd_comm.",
            "VernacExtend",
            "d6c652217bc0efc0712ee46a152d81d9ec657f15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_0_l : forall n, gcd 0 n == abs n.",
            "VernacStartTheoremProof",
            "d89e01af91ec1b402b4e271449dda9fdebf0ff74"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- gcd_abs_r.",
            "VernacExtend",
            "a3f8b451a71aad92199eb83c5fbccfdc13e2f631"
        ],
        [
            "apply gcd_0_l_nonneg, abs_nonneg.",
            "VernacExtend",
            "907f5ecd2e296a2c118b435427004ba2911f05a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_0_r : forall n, gcd n 0 == abs n.",
            "VernacStartTheoremProof",
            "10c67f5c0aa8ece58ac187f02dab8141a4390f04"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite gcd_comm, gcd_0_l.",
            "VernacExtend",
            "10b28bfade033f2f79e4398304e0531cfcea9b6a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_diag : forall n, gcd n n == abs n.",
            "VernacStartTheoremProof",
            "654059bce32aa4f9492866d7da7885db13510b0b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- gcd_abs_l, <- gcd_abs_r.",
            "VernacExtend",
            "47d080c60d02896cfabd8ee2c78ab334f83c0523"
        ],
        [
            "apply gcd_diag_nonneg, abs_nonneg.",
            "VernacExtend",
            "9a67036def9d65a2453db69df02121c77c3a1ad0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_add_mult_diag_r : forall n m p, gcd n (m+p*n) == gcd n m.",
            "VernacStartTheoremProof",
            "deed40321591e2ed953d7f5d883354cc990b250e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply gcd_unique_alt; try apply gcd_nonneg.",
            "VernacExtend",
            "3653a532ad2e86c2a158379c266c10ecec735859"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite gcd_divide_iff.",
            "VernacExtend",
            "a823f0f861635bdab0599454a77abff29845d126"
        ],
        [
            "split; intros (U,V); split; trivial.",
            "VernacExtend",
            "156a2eeca4553bc63df006d06c73e503f6ebece3"
        ],
        [
            "apply divide_add_r; trivial.",
            "VernacExtend",
            "177a3c8874717a6f6791d1fc25b5399493c643fe"
        ],
        [
            "now apply divide_mul_r.",
            "VernacExtend",
            "59182b8aa95d807eef673553f442fc6911449a39"
        ],
        [
            "apply divide_add_cancel_r with (p*n); trivial.",
            "VernacExtend",
            "a39d71a1c14b79e51000784b146a1539f44dd5de"
        ],
        [
            "now apply divide_mul_r.",
            "VernacExtend",
            "59182b8aa95d807eef673553f442fc6911449a39"
        ],
        [
            "now rewrite add_comm.",
            "VernacExtend",
            "49059393716b66357ecc6aee8e8a4481895a2fa1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_add_diag_r : forall n m, gcd n (m+n) == gcd n m.",
            "VernacStartTheoremProof",
            "a7fd5b254126b1c4a2c5f6a028d1c6ddd7ed4de4"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "rewrite <- (mul_1_l n) at 2.",
            "VernacExtend",
            "4e727a82ff5e72796ecad3c582b5501f90548b53"
        ],
        [
            "apply gcd_add_mult_diag_r.",
            "VernacExtend",
            "0a226dbe8deb324b34f3bb3dad78c5bbdf1bc7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_sub_diag_r : forall n m, gcd n (m-n) == gcd n m.",
            "VernacStartTheoremProof",
            "7ad5016872ffe1473a684bb632c7af9ca890e819"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "rewrite <- (mul_1_l n) at 2.",
            "VernacExtend",
            "4e727a82ff5e72796ecad3c582b5501f90548b53"
        ],
        [
            "rewrite <- add_opp_r, <- mul_opp_l.",
            "VernacExtend",
            "f83f2f484d4852453436456b434acbc5e892453f"
        ],
        [
            "apply gcd_add_mult_diag_r.",
            "VernacExtend",
            "0a226dbe8deb324b34f3bb3dad78c5bbdf1bc7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Bezout n m p := exists a b, a*n + b*m == p.",
            "VernacDefinition",
            "b900126e709ce323456f62c17f65eb83f31e0b64"
        ],
        [
            "Instance Bezout_wd : Proper (eq==>eq==>eq==>iff) Bezout.",
            "VernacInstance",
            "74ca98a42e68e5f7a2d623649a65ef5ea37364ff"
        ],
        [
            "unfold Bezout.",
            "VernacExtend",
            "7d8fa7e016164ccb61eb30dbbba7bf26b637ab4b"
        ],
        [
            "intros x x' Hx y y' Hy z z' Hz.",
            "VernacExtend",
            "f6776f72330c7156d501e19269ef26731b253cff"
        ],
        [
            "setoid_rewrite Hx.",
            "VernacExtend",
            "4dcd3a21be5569ed9ca96137ea838c4852d785a3"
        ],
        [
            "setoid_rewrite Hy.",
            "VernacExtend",
            "763501edc03be113f62cef19b8290a6945e0a037"
        ],
        [
            "now setoid_rewrite Hz.",
            "VernacExtend",
            "6fc41d52d1d5c9e2aa6a190b3fe7cbc082418926"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bezout_1_gcd : forall n m, Bezout n m 1 -> gcd n m == 1.",
            "VernacStartTheoremProof",
            "3cd8920e9662e600e3886400aef1b71ad316e0fd"
        ],
        [
            "intros n m (q & r & H).",
            "VernacExtend",
            "2db649cfed7a92389b2f9aad7f593a1c76cb1801"
        ],
        [
            "apply gcd_unique; trivial using divide_1_l, le_0_1.",
            "VernacExtend",
            "a885c39ee87a0ce5028d44beb54f6d83100ff59a"
        ],
        [
            "intros p Hn Hm.",
            "VernacExtend",
            "e4cbec44ff72f54c4476921f77d326b5621c2b55"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "apply divide_add_r; now apply divide_mul_r.",
            "VernacExtend",
            "107c0c75ccb62990b49317af609e85a3771d563b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_bezout : forall n m p, gcd n m == p -> Bezout n m p.",
            "VernacStartTheoremProof",
            "bb3c9ad4db297a2a0e42094d6b17578c3d1aceaa"
        ],
        [
            "assert (aux : forall n, 0<=n -> forall m, 0<=m -> Bezout n m (gcd n m)).",
            "VernacExtend",
            "c525c53f77709d47a26cefa4648c8c25ddabc92f"
        ],
        [
            "intros n Hn; pattern n.",
            "VernacExtend",
            "5b950ea2ec7ebb42aa161367ec472008fad53a29"
        ],
        [
            "apply strong_right_induction with (z:=0); trivial.",
            "VernacExtend",
            "f90425964358cdd193d7aca418ee88f2a8e0a11e"
        ],
        [
            "unfold Bezout.",
            "VernacExtend",
            "7d8fa7e016164ccb61eb30dbbba7bf26b637ab4b"
        ],
        [
            "solve_proper.",
            "VernacExtend",
            "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
        ],
        [
            "clear n Hn.",
            "VernacExtend",
            "4816a25feb4b411159f5c0966c1e7caf220a499e"
        ],
        [
            "intros n Hn IHn.",
            "VernacExtend",
            "83f0c5ccbb78a3e550773af22ed70028046db1d5"
        ],
        [
            "apply le_lteq in Hn; destruct Hn as [Hn|Hn].",
            "VernacExtend",
            "354abfb4bdfdeb3298fb4b383ba7c964abfee2bf"
        ],
        [
            "intros m Hm; pattern m.",
            "VernacExtend",
            "07e3b2090c9ffd2ffb66d087dfa6af60a47aa476"
        ],
        [
            "apply strong_right_induction with (z:=0); trivial.",
            "VernacExtend",
            "f90425964358cdd193d7aca418ee88f2a8e0a11e"
        ],
        [
            "unfold Bezout.",
            "VernacExtend",
            "7d8fa7e016164ccb61eb30dbbba7bf26b637ab4b"
        ],
        [
            "solve_proper.",
            "VernacExtend",
            "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
        ],
        [
            "clear m Hm.",
            "VernacExtend",
            "5907334ad0bd1a7f73eb2ebceecd14187eea07f9"
        ],
        [
            "intros m Hm IHm.",
            "VernacExtend",
            "97ac13c1561aabb5c238c08383a517ed338cc79d"
        ],
        [
            "destruct (lt_trichotomy n m) as [LT|[EQ|LT]].",
            "VernacExtend",
            "6e64597bd917b86b3683eb395cd0c63f01c7cd15"
        ],
        [
            "destruct (IHm (m-n)) as (a & b & EQ).",
            "VernacExtend",
            "da247ad59910c8fed575b678b7027738f415be98"
        ],
        [
            "apply sub_nonneg; order.",
            "VernacExtend",
            "4cdf92215a7793d1b1fe94416bdc47a4a2b209cb"
        ],
        [
            "now apply lt_sub_pos.",
            "VernacExtend",
            "09b6af95fa3291fbac4b9a949efd5a90462e19e0"
        ],
        [
            "exists (a-b).",
            "VernacExtend",
            "06436d97dc8a323b2e8c3d7220cde2fb37103dc0"
        ],
        [
            "exists b.",
            "VernacExtend",
            "131ab3b1f8dceeba7698c539872e59e8413fa321"
        ],
        [
            "rewrite gcd_sub_diag_r in EQ.",
            "VernacExtend",
            "78057c4cb728ac8ecd31f61ad1ac4102335d7a75"
        ],
        [
            "rewrite <- EQ.",
            "VernacExtend",
            "24dbb15b276d4d9b12a890733e217a4157c5a67a"
        ],
        [
            "rewrite mul_sub_distr_r, mul_sub_distr_l.",
            "VernacExtend",
            "fef422e690699dbc8474e948fb93d3747ae0b864"
        ],
        [
            "now rewrite add_sub_assoc, add_sub_swap.",
            "VernacExtend",
            "57d9b43da24194c1d0284355ede58d2fdd1fa598"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "rewrite gcd_diag_nonneg; trivial.",
            "VernacExtend",
            "978cccf590e036536a62da1b6f157d686d3bb735"
        ],
        [
            "exists 1.",
            "VernacExtend",
            "18eb310858be5acae7304d0d9ed33063568db310"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "now nzsimpl.",
            "VernacExtend",
            "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
        ],
        [
            "destruct (IHn m Hm LT n) as (a & b & EQ).",
            "VernacExtend",
            "57dbff20d997ee37b71e9975fadae15e60e79668"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "exists b.",
            "VernacExtend",
            "131ab3b1f8dceeba7698c539872e59e8413fa321"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "now rewrite gcd_comm, <- EQ, add_comm.",
            "VernacExtend",
            "a33052eda560d4f509490863e390b080d0239561"
        ],
        [
            "intros m Hm.",
            "VernacExtend",
            "34a21a1070c8e8d8f861a30c87e3cd7909e131c5"
        ],
        [
            "rewrite <- Hn, gcd_0_l_nonneg; trivial.",
            "VernacExtend",
            "f337c14df7ead9b00c7e3e0fe156301cdcdcde9f"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "exists 1.",
            "VernacExtend",
            "18eb310858be5acae7304d0d9ed33063568db310"
        ],
        [
            "now nzsimpl.",
            "VernacExtend",
            "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
        ],
        [
            "assert (aux' : forall n m, 0<=m -> Bezout n m (gcd n m)).",
            "VernacExtend",
            "5124d084e0c798d2976dfa776f6376fb2f8b12ca"
        ],
        [
            "intros n m Hm.",
            "VernacExtend",
            "71d31d41967a85081bfee2eb8543959fa61c5f13"
        ],
        [
            "destruct (le_ge_cases 0 n).",
            "VernacExtend",
            "9bd341d27360cca22a02ff99918f1ae78e8fa225"
        ],
        [
            "now apply aux.",
            "VernacExtend",
            "2d4c59efe55d7040fda3835f553dd884dc3cbe7a"
        ],
        [
            "assert (Hn' : 0 <= -n) by now apply opp_nonneg_nonpos.",
            "VernacExtend",
            "5b30f8328b2cd709d2588d9d760c727270b94032"
        ],
        [
            "destruct (aux (-n) Hn' m Hm) as (a & b & EQ).",
            "VernacExtend",
            "0291a7cd92df63075db1232b60a7132022dca8b3"
        ],
        [
            "exists (-a).",
            "VernacExtend",
            "08f24fc43078273bbe198cd9b810af7f9e4f834c"
        ],
        [
            "exists b.",
            "VernacExtend",
            "131ab3b1f8dceeba7698c539872e59e8413fa321"
        ],
        [
            "now rewrite <- gcd_opp_l, <- EQ, mul_opp_r, mul_opp_l.",
            "VernacExtend",
            "8b0f79d11e0d4dbdce7d9c2e7bf8bf58dfec6d9f"
        ],
        [
            "intros n m p Hp.",
            "VernacExtend",
            "f61b54c3f42097cf634f6d41fe225817e0113dd8"
        ],
        [
            "rewrite <- Hp; clear Hp.",
            "VernacExtend",
            "7c025a6c903942f0c97694edc75f32b5a8c881af"
        ],
        [
            "destruct (le_ge_cases 0 m).",
            "VernacExtend",
            "b9f69f54351c19fae9bc1af3139972223180e382"
        ],
        [
            "now apply aux'.",
            "VernacExtend",
            "a698a84a0877837e419c365cc976e4ba5959d9f6"
        ],
        [
            "assert (Hm' : 0 <= -m) by now apply opp_nonneg_nonpos.",
            "VernacExtend",
            "aec1619fe24ef4eed88670235e2ccd0fe849bc12"
        ],
        [
            "destruct (aux' n (-m) Hm') as (a & b & EQ).",
            "VernacExtend",
            "c581f28b4bad600cb3f3e68bba9f59480870306d"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "exists (-b).",
            "VernacExtend",
            "7dda9978a0fe8f9b75e6822249ce167ca4f0064c"
        ],
        [
            "now rewrite <- gcd_opp_r, <- EQ, mul_opp_r, mul_opp_l.",
            "VernacExtend",
            "61724fe4bae6634762db58076946c68099a01dcf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_mul_mono_l : forall n m p, gcd (p * n) (p * m) == abs p * gcd n m.",
            "VernacStartTheoremProof",
            "81fdf5a29ebf5eb6d2ef4b0b4f36df9f5b4a7172"
        ],
        [
            "intros n m p.",
            "VernacExtend",
            "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
        ],
        [
            "apply gcd_unique.",
            "VernacExtend",
            "3c74d1ae99ad2a85553bd2e74d1c8e6a602ed25d"
        ],
        [
            "apply mul_nonneg_nonneg; trivial using gcd_nonneg, abs_nonneg.",
            "VernacExtend",
            "f401c7363995b7685716c614b0a95c490b541cb4"
        ],
        [
            "destruct (gcd_divide_l n m) as (q,Hq).",
            "VernacExtend",
            "655a013fd28e5b2cff47d91004a3b26f2d20da16"
        ],
        [
            "rewrite Hq at 2.",
            "VernacExtend",
            "024a07d9c987f9c7d974d374afd8508123a984a3"
        ],
        [
            "rewrite mul_assoc.",
            "VernacExtend",
            "b39bc6f19afe82b1537f8c515e450ab4d3574b7d"
        ],
        [
            "apply mul_divide_mono_r.",
            "VernacExtend",
            "4bf1f5f6fc2089da8be4954ea3c73b683b4b3d8c"
        ],
        [
            "rewrite <- (abs_sgn p) at 2.",
            "VernacExtend",
            "010296c495c38690d5b6056554a40b1d9222fa46"
        ],
        [
            "rewrite <- mul_assoc.",
            "VernacExtend",
            "3f663ca227e984211c845e20f01c2d34b0cda6c2"
        ],
        [
            "apply divide_factor_l.",
            "VernacExtend",
            "f1945737ed38b0fd624657db8fa6d1807bed0e85"
        ],
        [
            "destruct (gcd_divide_r n m) as (q,Hq).",
            "VernacExtend",
            "d185f9b352fe3c541c7e72c1eb677c8413d1d54f"
        ],
        [
            "rewrite Hq at 2.",
            "VernacExtend",
            "024a07d9c987f9c7d974d374afd8508123a984a3"
        ],
        [
            "rewrite mul_assoc.",
            "VernacExtend",
            "b39bc6f19afe82b1537f8c515e450ab4d3574b7d"
        ],
        [
            "apply mul_divide_mono_r.",
            "VernacExtend",
            "4bf1f5f6fc2089da8be4954ea3c73b683b4b3d8c"
        ],
        [
            "rewrite <- (abs_sgn p) at 2.",
            "VernacExtend",
            "010296c495c38690d5b6056554a40b1d9222fa46"
        ],
        [
            "rewrite <- mul_assoc.",
            "VernacExtend",
            "3f663ca227e984211c845e20f01c2d34b0cda6c2"
        ],
        [
            "apply divide_factor_l.",
            "VernacExtend",
            "f1945737ed38b0fd624657db8fa6d1807bed0e85"
        ],
        [
            "intros q H H'.",
            "VernacExtend",
            "eb87e09373287bffadbd92b281b340ac830e93b3"
        ],
        [
            "destruct (gcd_bezout n m (gcd n m) (eq_refl _)) as (a & b & EQ).",
            "VernacExtend",
            "0ad1a3fd041c515eb2b2d49b7c4055032a255782"
        ],
        [
            "rewrite <- EQ, <- sgn_abs, mul_add_distr_l.",
            "VernacExtend",
            "77f4d7aa899c4de3ebe45d45c1fda4c20746ecb0"
        ],
        [
            "apply divide_add_r.",
            "VernacExtend",
            "00fea9481bf97eeb10910fdc8b01d3fed22896a4"
        ],
        [
            "rewrite mul_shuffle2.",
            "VernacExtend",
            "07d79498ff812257eab051be197d8203f4a905cd"
        ],
        [
            "now apply divide_mul_l.",
            "VernacExtend",
            "e24255f96c1fa29a407b78d0d7c8b2c805766ccc"
        ],
        [
            "rewrite mul_shuffle2.",
            "VernacExtend",
            "07d79498ff812257eab051be197d8203f4a905cd"
        ],
        [
            "now apply divide_mul_l.",
            "VernacExtend",
            "e24255f96c1fa29a407b78d0d7c8b2c805766ccc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_mul_mono_l_nonneg : forall n m p, 0<=p -> gcd (p*n) (p*m) == p * gcd n m.",
            "VernacStartTheoremProof",
            "262388259280d05356573b1fb60568a47748cbb4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (abs_eq p) at 3; trivial.",
            "VernacExtend",
            "7dae029a41dc980de7e019d67be5242a6335b7f3"
        ],
        [
            "apply gcd_mul_mono_l.",
            "VernacExtend",
            "5e576ab654b48499fb60f9b1b88c84bf5a1edb5c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_mul_mono_r : forall n m p, gcd (n * p) (m * p) == gcd n m * abs p.",
            "VernacStartTheoremProof",
            "2f88d09ab6e69158a356502c40de81980f53bf5e"
        ],
        [
            "intros n m p.",
            "VernacExtend",
            "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
        ],
        [
            "now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm.",
            "VernacExtend",
            "dcb8c9f678b684a096b8aa3baea5ac123122f2ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_mul_mono_r_nonneg : forall n m p, 0<=p -> gcd (n*p) (m*p) == gcd n m * p.",
            "VernacStartTheoremProof",
            "cfd5fbcf1618c50d4301c2d7788a09bea3fc7676"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (abs_eq p) at 3; trivial.",
            "VernacExtend",
            "7dae029a41dc980de7e019d67be5242a6335b7f3"
        ],
        [
            "apply gcd_mul_mono_r.",
            "VernacExtend",
            "e01e9f7bf6b1c8dca3e5f7d574e9025a4d6d0dec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gauss : forall n m p, (n | m * p) -> gcd n m == 1 -> (n | p).",
            "VernacStartTheoremProof",
            "87390983d9483df33ec336475c0d0b302d2bcdab"
        ],
        [
            "intros n m p H G.",
            "VernacExtend",
            "77fc3f9ddd26b9360a2f0e47f3c00b7dc11e68e6"
        ],
        [
            "destruct (gcd_bezout n m 1 G) as (a & b & EQ).",
            "VernacExtend",
            "884a91abe47e0c783130616b859dc632012fec7c"
        ],
        [
            "rewrite <- (mul_1_l p), <- EQ, mul_add_distr_r.",
            "VernacExtend",
            "ecdb4ca66dac27f644219875e8200a9ee667226c"
        ],
        [
            "apply divide_add_r.",
            "VernacExtend",
            "00fea9481bf97eeb10910fdc8b01d3fed22896a4"
        ],
        [
            "rewrite mul_shuffle0.",
            "VernacExtend",
            "63dc71f19a1e4898f7883851bd262f31ee2feea6"
        ],
        [
            "apply divide_factor_r.",
            "VernacExtend",
            "38a70e3edc9cecf8cc8c0590572e7fd3e7163fa9"
        ],
        [
            "rewrite <- mul_assoc.",
            "VernacExtend",
            "3f663ca227e984211c845e20f01c2d34b0cda6c2"
        ],
        [
            "now apply divide_mul_r.",
            "VernacExtend",
            "59182b8aa95d807eef673553f442fc6911449a39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_mul_split : forall n m p, n ~= 0 -> (n | m * p) -> exists q r, n == q*r /\\ (q | m) /\\ (r | p).",
            "VernacStartTheoremProof",
            "2caf6b4bcb6010fc6def4944ecc7b43622e17185"
        ],
        [
            "intros n m p Hn H.",
            "VernacExtend",
            "4e3de20c96661a80be5cb817095f7e7ad7f95355"
        ],
        [
            "assert (G := gcd_nonneg n m).",
            "VernacExtend",
            "24ba97302c1440a963d7818c1ed39d13d5678acb"
        ],
        [
            "apply le_lteq in G; destruct G as [G|G].",
            "VernacExtend",
            "41160dadc72e4992efb46477a7da05f4524af9b8"
        ],
        [
            "destruct (gcd_divide_l n m) as (q,Hq).",
            "VernacExtend",
            "655a013fd28e5b2cff47d91004a3b26f2d20da16"
        ],
        [
            "exists (gcd n m).",
            "VernacExtend",
            "be0f899a690553f0997e7ff25252ee6f6a59b401"
        ],
        [
            "exists q.",
            "VernacExtend",
            "4b16c752cd7c11bacf99e556cf412cae1f21d016"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now rewrite mul_comm.",
            "VernacExtend",
            "e381ca9335c310c57051601bf6f800b499d27dfd"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply gcd_divide_r.",
            "VernacExtend",
            "23f22b4be94ee31f90f559afe9253eb0db533a6b"
        ],
        [
            "destruct (gcd_divide_r n m) as (r,Hr).",
            "VernacExtend",
            "94533fd5f0f47145b564a3021dc9a8a07230afb6"
        ],
        [
            "rewrite Hr in H.",
            "VernacExtend",
            "ae6eeb544bb39b7242ab88aa8f9f9c2b7895e49c"
        ],
        [
            "rewrite Hq in H at 1.",
            "VernacExtend",
            "f1b51844c8f7d05284339cde9c0c116a7d18d6d0"
        ],
        [
            "rewrite mul_shuffle0 in H.",
            "VernacExtend",
            "154b2416c2a1231e98028f2be4190a2b07ec88c4"
        ],
        [
            "apply mul_divide_cancel_r in H; [|order].",
            "VernacExtend",
            "647d2cbd179f1f39428c398b5b9ddffb0b52a8ff"
        ],
        [
            "apply gauss with r; trivial.",
            "VernacExtend",
            "59e35dc971dff4f3430f9c0eb643a63a817724d9"
        ],
        [
            "apply mul_cancel_r with (gcd n m); [order|].",
            "VernacExtend",
            "0a364e288f03d8d938ae1b01b975c12148c258f3"
        ],
        [
            "rewrite mul_1_l.",
            "VernacExtend",
            "7da68bdebc60a8aac00162920413e78a31e97766"
        ],
        [
            "rewrite <- gcd_mul_mono_r_nonneg, <- Hq, <- Hr; order.",
            "VernacExtend",
            "af49c016e3cd8b804a00f7c7d790e5771ec1ac1f"
        ],
        [
            "symmetry in G.",
            "VernacExtend",
            "a015afd298ee2080a08d65dbdca732ee9826d538"
        ],
        [
            "apply gcd_eq_0 in G.",
            "VernacExtend",
            "11292fd2ccc4880cd1a9e1b389517e4d7fb3496a"
        ],
        [
            "destruct G as (Hn',_); order.",
            "VernacExtend",
            "5f81e1017657028f30ae9fd1ded1b7f559801aa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ZGcdProp.",
            "VernacEndSegment",
            "d7867b03a038284ec5263792007042ac6ef4d65b"
        ]
    ],
    "proofs": [
        {
            "name": "divide_opp_l",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "split; intros (p,Hp); exists (-p); rewrite Hp.",
                        "VernacExtend",
                        "9544fc662653ca57c53124990fee3dd25e45f569"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_opp_l, mul_opp_r.",
                        "VernacExtend",
                        "95c5c77e480f745c86d18025c6d782ccfffa3b2b"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_opp_opp.",
                        "VernacExtend",
                        "7ce68ee2e065cf872b9a25c0f74e3954945b2e8e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_opp_r",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "split; intros (p,Hp); exists (-p).",
                        "VernacExtend",
                        "c8855559dd940a4a77479f8529c5223727fa8607"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_opp_l, <- Hp, opp_involutive.",
                        "VernacExtend",
                        "4ca45da45906e904e9952ecbdb2f6e93c5764e7d"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hp, mul_opp_l.",
                        "VernacExtend",
                        "8a0556d5379297c8a74768ff43107f18757e6093"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_abs_l",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "destruct (abs_eq_or_opp n) as [H|H]; rewrite H.",
                        "VernacExtend",
                        "ca6cfaa6e3b75873b97c92c26b70cc839b8decd0"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "apply divide_opp_l.",
                        "VernacExtend",
                        "f286fe674a12d94a996ab4cb0d07065e50a4a9b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_abs_r",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "destruct (abs_eq_or_opp m) as [H|H]; rewrite H.",
                        "VernacExtend",
                        "48c845b208031183ce53a8f8fd2052f7597ca0c0"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "apply divide_opp_r.",
                        "VernacExtend",
                        "a14461948b3060d578f4e40cbde2c295c6f43463"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_1_r_abs",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros n Hn.",
                        "VernacExtend",
                        "4a15d287eb245c84eabfb58cba2e377ac025029a"
                    ]
                },
                {
                    "command": [
                        "apply divide_1_r_nonneg.",
                        "VernacExtend",
                        "fd617b108217cb83e7dae340376878e843acebdd"
                    ]
                },
                {
                    "command": [
                        "apply abs_nonneg.",
                        "VernacExtend",
                        "14084a8a2064f5bdd1c04618116383ef4c5f9046"
                    ]
                },
                {
                    "command": [
                        "now apply divide_abs_l.",
                        "VernacExtend",
                        "ca173b414a940c2879f18e8b4d428dd175b4e678"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_1_r",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros n (m,H).",
                        "VernacExtend",
                        "72fd15d4afc37b7afe1354a9f0325f9d71d152c2"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_comm in H.",
                        "VernacExtend",
                        "6f21337f5cae7e78505dd74d8c77a0dceb7cdd95"
                    ]
                },
                {
                    "command": [
                        "now apply eq_mul_1 with m.",
                        "VernacExtend",
                        "8764ef02ccc49c70f51e48b585bbd3bab10427b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_antisym_abs",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply divide_antisym_nonneg; try apply abs_nonneg.",
                        "VernacExtend",
                        "26e8fd186cb7af9c7a128e75e0315d889cbe0483"
                    ]
                },
                {
                    "command": [
                        "now apply divide_abs_l, divide_abs_r.",
                        "VernacExtend",
                        "8b357818a18cdc69f7851566adbfbf39e939e0f0"
                    ]
                },
                {
                    "command": [
                        "now apply divide_abs_l, divide_abs_r.",
                        "VernacExtend",
                        "8b357818a18cdc69f7851566adbfbf39e939e0f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_antisym",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now apply abs_eq_cases, divide_antisym_abs.",
                        "VernacExtend",
                        "6d0c0e3f4525e1a0498e70e1009803af1085bd10"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_sub_r",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros n m p H H'.",
                        "VernacExtend",
                        "9ec9e45e42db7e71aa7539f895b5aa2bdf5ce9da"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_opp_r.",
                        "VernacExtend",
                        "dd28726402d9353bd3d91bb94c753a11cf3c922d"
                    ]
                },
                {
                    "command": [
                        "apply divide_add_r; trivial.",
                        "VernacExtend",
                        "177a3c8874717a6f6791d1fc25b5399493c643fe"
                    ]
                },
                {
                    "command": [
                        "now apply divide_opp_r.",
                        "VernacExtend",
                        "cde2aad4e5c6aff36024b4e711fdfb8fde00d171"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_add_cancel_r",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros n m p H H'.",
                        "VernacExtend",
                        "9ec9e45e42db7e71aa7539f895b5aa2bdf5ce9da"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (add_simpl_l m p).",
                        "VernacExtend",
                        "0310131ea4d505a9bb57fefd556ead6dd06ced2c"
                    ]
                },
                {
                    "command": [
                        "now apply divide_sub_r.",
                        "VernacExtend",
                        "53a98eedcbb20e09243623869f2cf07159a826b8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_opp_l",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply gcd_unique_alt; try apply gcd_nonneg.",
                        "VernacExtend",
                        "3653a532ad2e86c2a158379c266c10ecec735859"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite divide_opp_r.",
                        "VernacExtend",
                        "e3de4fc3d1ab63133e0f8210e5e2441b0662b21c"
                    ]
                },
                {
                    "command": [
                        "apply gcd_divide_iff.",
                        "VernacExtend",
                        "ce649d9f11366b6728086e3b5b0409778ee8159e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_opp_r",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite gcd_comm, gcd_opp_l, gcd_comm.",
                        "VernacExtend",
                        "e092cdedbb722c4c20d4049d6c71112317ea83f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_abs_l",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (abs_eq_or_opp n) as [H|H]; rewrite H.",
                        "VernacExtend",
                        "ca6cfaa6e3b75873b97c92c26b70cc839b8decd0"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "apply gcd_opp_l.",
                        "VernacExtend",
                        "e150f70d1570bfbbba5276023ab22898aa17e6e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_abs_r",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite gcd_comm, gcd_abs_l, gcd_comm.",
                        "VernacExtend",
                        "d6c652217bc0efc0712ee46a152d81d9ec657f15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_0_l",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- gcd_abs_r.",
                        "VernacExtend",
                        "a3f8b451a71aad92199eb83c5fbccfdc13e2f631"
                    ]
                },
                {
                    "command": [
                        "apply gcd_0_l_nonneg, abs_nonneg.",
                        "VernacExtend",
                        "907f5ecd2e296a2c118b435427004ba2911f05a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_0_r",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite gcd_comm, gcd_0_l.",
                        "VernacExtend",
                        "10b28bfade033f2f79e4398304e0531cfcea9b6a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_diag",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- gcd_abs_l, <- gcd_abs_r.",
                        "VernacExtend",
                        "47d080c60d02896cfabd8ee2c78ab334f83c0523"
                    ]
                },
                {
                    "command": [
                        "apply gcd_diag_nonneg, abs_nonneg.",
                        "VernacExtend",
                        "9a67036def9d65a2453db69df02121c77c3a1ad0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_add_mult_diag_r",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply gcd_unique_alt; try apply gcd_nonneg.",
                        "VernacExtend",
                        "3653a532ad2e86c2a158379c266c10ecec735859"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite gcd_divide_iff.",
                        "VernacExtend",
                        "a823f0f861635bdab0599454a77abff29845d126"
                    ]
                },
                {
                    "command": [
                        "split; intros (U,V); split; trivial.",
                        "VernacExtend",
                        "156a2eeca4553bc63df006d06c73e503f6ebece3"
                    ]
                },
                {
                    "command": [
                        "apply divide_add_r; trivial.",
                        "VernacExtend",
                        "177a3c8874717a6f6791d1fc25b5399493c643fe"
                    ]
                },
                {
                    "command": [
                        "now apply divide_mul_r.",
                        "VernacExtend",
                        "59182b8aa95d807eef673553f442fc6911449a39"
                    ]
                },
                {
                    "command": [
                        "apply divide_add_cancel_r with (p*n); trivial.",
                        "VernacExtend",
                        "a39d71a1c14b79e51000784b146a1539f44dd5de"
                    ]
                },
                {
                    "command": [
                        "now apply divide_mul_r.",
                        "VernacExtend",
                        "59182b8aa95d807eef673553f442fc6911449a39"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_comm.",
                        "VernacExtend",
                        "49059393716b66357ecc6aee8e8a4481895a2fa1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_add_diag_r",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_1_l n) at 2.",
                        "VernacExtend",
                        "4e727a82ff5e72796ecad3c582b5501f90548b53"
                    ]
                },
                {
                    "command": [
                        "apply gcd_add_mult_diag_r.",
                        "VernacExtend",
                        "0a226dbe8deb324b34f3bb3dad78c5bbdf1bc7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_sub_diag_r",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_1_l n) at 2.",
                        "VernacExtend",
                        "4e727a82ff5e72796ecad3c582b5501f90548b53"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_opp_r, <- mul_opp_l.",
                        "VernacExtend",
                        "f83f2f484d4852453436456b434acbc5e892453f"
                    ]
                },
                {
                    "command": [
                        "apply gcd_add_mult_diag_r.",
                        "VernacExtend",
                        "0a226dbe8deb324b34f3bb3dad78c5bbdf1bc7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bezout_wd",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "unfold Bezout.",
                        "VernacExtend",
                        "7d8fa7e016164ccb61eb30dbbba7bf26b637ab4b"
                    ]
                },
                {
                    "command": [
                        "intros x x' Hx y y' Hy z z' Hz.",
                        "VernacExtend",
                        "f6776f72330c7156d501e19269ef26731b253cff"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Hx.",
                        "VernacExtend",
                        "4dcd3a21be5569ed9ca96137ea838c4852d785a3"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Hy.",
                        "VernacExtend",
                        "763501edc03be113f62cef19b8290a6945e0a037"
                    ]
                },
                {
                    "command": [
                        "now setoid_rewrite Hz.",
                        "VernacExtend",
                        "6fc41d52d1d5c9e2aa6a190b3fe7cbc082418926"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bezout_1_gcd",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "intros n m (q & r & H).",
                        "VernacExtend",
                        "2db649cfed7a92389b2f9aad7f593a1c76cb1801"
                    ]
                },
                {
                    "command": [
                        "apply gcd_unique; trivial using divide_1_l, le_0_1.",
                        "VernacExtend",
                        "a885c39ee87a0ce5028d44beb54f6d83100ff59a"
                    ]
                },
                {
                    "command": [
                        "intros p Hn Hm.",
                        "VernacExtend",
                        "e4cbec44ff72f54c4476921f77d326b5621c2b55"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "apply divide_add_r; now apply divide_mul_r.",
                        "VernacExtend",
                        "107c0c75ccb62990b49317af609e85a3771d563b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_bezout",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "assert (aux : forall n, 0<=n -> forall m, 0<=m -> Bezout n m (gcd n m)).",
                        "VernacExtend",
                        "c525c53f77709d47a26cefa4648c8c25ddabc92f"
                    ]
                },
                {
                    "command": [
                        "intros n Hn; pattern n.",
                        "VernacExtend",
                        "5b950ea2ec7ebb42aa161367ec472008fad53a29"
                    ]
                },
                {
                    "command": [
                        "apply strong_right_induction with (z:=0); trivial.",
                        "VernacExtend",
                        "f90425964358cdd193d7aca418ee88f2a8e0a11e"
                    ]
                },
                {
                    "command": [
                        "unfold Bezout.",
                        "VernacExtend",
                        "7d8fa7e016164ccb61eb30dbbba7bf26b637ab4b"
                    ]
                },
                {
                    "command": [
                        "solve_proper.",
                        "VernacExtend",
                        "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
                    ]
                },
                {
                    "command": [
                        "clear n Hn.",
                        "VernacExtend",
                        "4816a25feb4b411159f5c0966c1e7caf220a499e"
                    ]
                },
                {
                    "command": [
                        "intros n Hn IHn.",
                        "VernacExtend",
                        "83f0c5ccbb78a3e550773af22ed70028046db1d5"
                    ]
                },
                {
                    "command": [
                        "apply le_lteq in Hn; destruct Hn as [Hn|Hn].",
                        "VernacExtend",
                        "354abfb4bdfdeb3298fb4b383ba7c964abfee2bf"
                    ]
                },
                {
                    "command": [
                        "intros m Hm; pattern m.",
                        "VernacExtend",
                        "07e3b2090c9ffd2ffb66d087dfa6af60a47aa476"
                    ]
                },
                {
                    "command": [
                        "apply strong_right_induction with (z:=0); trivial.",
                        "VernacExtend",
                        "f90425964358cdd193d7aca418ee88f2a8e0a11e"
                    ]
                },
                {
                    "command": [
                        "unfold Bezout.",
                        "VernacExtend",
                        "7d8fa7e016164ccb61eb30dbbba7bf26b637ab4b"
                    ]
                },
                {
                    "command": [
                        "solve_proper.",
                        "VernacExtend",
                        "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
                    ]
                },
                {
                    "command": [
                        "clear m Hm.",
                        "VernacExtend",
                        "5907334ad0bd1a7f73eb2ebceecd14187eea07f9"
                    ]
                },
                {
                    "command": [
                        "intros m Hm IHm.",
                        "VernacExtend",
                        "97ac13c1561aabb5c238c08383a517ed338cc79d"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_trichotomy n m) as [LT|[EQ|LT]].",
                        "VernacExtend",
                        "6e64597bd917b86b3683eb395cd0c63f01c7cd15"
                    ]
                },
                {
                    "command": [
                        "destruct (IHm (m-n)) as (a & b & EQ).",
                        "VernacExtend",
                        "da247ad59910c8fed575b678b7027738f415be98"
                    ]
                },
                {
                    "command": [
                        "apply sub_nonneg; order.",
                        "VernacExtend",
                        "4cdf92215a7793d1b1fe94416bdc47a4a2b209cb"
                    ]
                },
                {
                    "command": [
                        "now apply lt_sub_pos.",
                        "VernacExtend",
                        "09b6af95fa3291fbac4b9a949efd5a90462e19e0"
                    ]
                },
                {
                    "command": [
                        "exists (a-b).",
                        "VernacExtend",
                        "06436d97dc8a323b2e8c3d7220cde2fb37103dc0"
                    ]
                },
                {
                    "command": [
                        "exists b.",
                        "VernacExtend",
                        "131ab3b1f8dceeba7698c539872e59e8413fa321"
                    ]
                },
                {
                    "command": [
                        "rewrite gcd_sub_diag_r in EQ.",
                        "VernacExtend",
                        "78057c4cb728ac8ecd31f61ad1ac4102335d7a75"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ.",
                        "VernacExtend",
                        "24dbb15b276d4d9b12a890733e217a4157c5a67a"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_sub_distr_r, mul_sub_distr_l.",
                        "VernacExtend",
                        "fef422e690699dbc8474e948fb93d3747ae0b864"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_sub_assoc, add_sub_swap.",
                        "VernacExtend",
                        "57d9b43da24194c1d0284355ede58d2fdd1fa598"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ.",
                        "VernacExtend",
                        "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
                    ]
                },
                {
                    "command": [
                        "rewrite gcd_diag_nonneg; trivial.",
                        "VernacExtend",
                        "978cccf590e036536a62da1b6f157d686d3bb735"
                    ]
                },
                {
                    "command": [
                        "exists 1.",
                        "VernacExtend",
                        "18eb310858be5acae7304d0d9ed33063568db310"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl.",
                        "VernacExtend",
                        "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
                    ]
                },
                {
                    "command": [
                        "destruct (IHn m Hm LT n) as (a & b & EQ).",
                        "VernacExtend",
                        "57dbff20d997ee37b71e9975fadae15e60e79668"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "exists b.",
                        "VernacExtend",
                        "131ab3b1f8dceeba7698c539872e59e8413fa321"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "now rewrite gcd_comm, <- EQ, add_comm.",
                        "VernacExtend",
                        "a33052eda560d4f509490863e390b080d0239561"
                    ]
                },
                {
                    "command": [
                        "intros m Hm.",
                        "VernacExtend",
                        "34a21a1070c8e8d8f861a30c87e3cd7909e131c5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hn, gcd_0_l_nonneg; trivial.",
                        "VernacExtend",
                        "f337c14df7ead9b00c7e3e0fe156301cdcdcde9f"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "exists 1.",
                        "VernacExtend",
                        "18eb310858be5acae7304d0d9ed33063568db310"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl.",
                        "VernacExtend",
                        "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
                    ]
                },
                {
                    "command": [
                        "assert (aux' : forall n m, 0<=m -> Bezout n m (gcd n m)).",
                        "VernacExtend",
                        "5124d084e0c798d2976dfa776f6376fb2f8b12ca"
                    ]
                },
                {
                    "command": [
                        "intros n m Hm.",
                        "VernacExtend",
                        "71d31d41967a85081bfee2eb8543959fa61c5f13"
                    ]
                },
                {
                    "command": [
                        "destruct (le_ge_cases 0 n).",
                        "VernacExtend",
                        "9bd341d27360cca22a02ff99918f1ae78e8fa225"
                    ]
                },
                {
                    "command": [
                        "now apply aux.",
                        "VernacExtend",
                        "2d4c59efe55d7040fda3835f553dd884dc3cbe7a"
                    ]
                },
                {
                    "command": [
                        "assert (Hn' : 0 <= -n) by now apply opp_nonneg_nonpos.",
                        "VernacExtend",
                        "5b30f8328b2cd709d2588d9d760c727270b94032"
                    ]
                },
                {
                    "command": [
                        "destruct (aux (-n) Hn' m Hm) as (a & b & EQ).",
                        "VernacExtend",
                        "0291a7cd92df63075db1232b60a7132022dca8b3"
                    ]
                },
                {
                    "command": [
                        "exists (-a).",
                        "VernacExtend",
                        "08f24fc43078273bbe198cd9b810af7f9e4f834c"
                    ]
                },
                {
                    "command": [
                        "exists b.",
                        "VernacExtend",
                        "131ab3b1f8dceeba7698c539872e59e8413fa321"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- gcd_opp_l, <- EQ, mul_opp_r, mul_opp_l.",
                        "VernacExtend",
                        "8b0f79d11e0d4dbdce7d9c2e7bf8bf58dfec6d9f"
                    ]
                },
                {
                    "command": [
                        "intros n m p Hp.",
                        "VernacExtend",
                        "f61b54c3f42097cf634f6d41fe225817e0113dd8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hp; clear Hp.",
                        "VernacExtend",
                        "7c025a6c903942f0c97694edc75f32b5a8c881af"
                    ]
                },
                {
                    "command": [
                        "destruct (le_ge_cases 0 m).",
                        "VernacExtend",
                        "b9f69f54351c19fae9bc1af3139972223180e382"
                    ]
                },
                {
                    "command": [
                        "now apply aux'.",
                        "VernacExtend",
                        "a698a84a0877837e419c365cc976e4ba5959d9f6"
                    ]
                },
                {
                    "command": [
                        "assert (Hm' : 0 <= -m) by now apply opp_nonneg_nonpos.",
                        "VernacExtend",
                        "aec1619fe24ef4eed88670235e2ccd0fe849bc12"
                    ]
                },
                {
                    "command": [
                        "destruct (aux' n (-m) Hm') as (a & b & EQ).",
                        "VernacExtend",
                        "c581f28b4bad600cb3f3e68bba9f59480870306d"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "exists (-b).",
                        "VernacExtend",
                        "7dda9978a0fe8f9b75e6822249ce167ca4f0064c"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- gcd_opp_r, <- EQ, mul_opp_r, mul_opp_l.",
                        "VernacExtend",
                        "61724fe4bae6634762db58076946c68099a01dcf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_mul_mono_l",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "intros n m p.",
                        "VernacExtend",
                        "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
                    ]
                },
                {
                    "command": [
                        "apply gcd_unique.",
                        "VernacExtend",
                        "3c74d1ae99ad2a85553bd2e74d1c8e6a602ed25d"
                    ]
                },
                {
                    "command": [
                        "apply mul_nonneg_nonneg; trivial using gcd_nonneg, abs_nonneg.",
                        "VernacExtend",
                        "f401c7363995b7685716c614b0a95c490b541cb4"
                    ]
                },
                {
                    "command": [
                        "destruct (gcd_divide_l n m) as (q,Hq).",
                        "VernacExtend",
                        "655a013fd28e5b2cff47d91004a3b26f2d20da16"
                    ]
                },
                {
                    "command": [
                        "rewrite Hq at 2.",
                        "VernacExtend",
                        "024a07d9c987f9c7d974d374afd8508123a984a3"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_assoc.",
                        "VernacExtend",
                        "b39bc6f19afe82b1537f8c515e450ab4d3574b7d"
                    ]
                },
                {
                    "command": [
                        "apply mul_divide_mono_r.",
                        "VernacExtend",
                        "4bf1f5f6fc2089da8be4954ea3c73b683b4b3d8c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (abs_sgn p) at 2.",
                        "VernacExtend",
                        "010296c495c38690d5b6056554a40b1d9222fa46"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mul_assoc.",
                        "VernacExtend",
                        "3f663ca227e984211c845e20f01c2d34b0cda6c2"
                    ]
                },
                {
                    "command": [
                        "apply divide_factor_l.",
                        "VernacExtend",
                        "f1945737ed38b0fd624657db8fa6d1807bed0e85"
                    ]
                },
                {
                    "command": [
                        "destruct (gcd_divide_r n m) as (q,Hq).",
                        "VernacExtend",
                        "d185f9b352fe3c541c7e72c1eb677c8413d1d54f"
                    ]
                },
                {
                    "command": [
                        "rewrite Hq at 2.",
                        "VernacExtend",
                        "024a07d9c987f9c7d974d374afd8508123a984a3"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_assoc.",
                        "VernacExtend",
                        "b39bc6f19afe82b1537f8c515e450ab4d3574b7d"
                    ]
                },
                {
                    "command": [
                        "apply mul_divide_mono_r.",
                        "VernacExtend",
                        "4bf1f5f6fc2089da8be4954ea3c73b683b4b3d8c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (abs_sgn p) at 2.",
                        "VernacExtend",
                        "010296c495c38690d5b6056554a40b1d9222fa46"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mul_assoc.",
                        "VernacExtend",
                        "3f663ca227e984211c845e20f01c2d34b0cda6c2"
                    ]
                },
                {
                    "command": [
                        "apply divide_factor_l.",
                        "VernacExtend",
                        "f1945737ed38b0fd624657db8fa6d1807bed0e85"
                    ]
                },
                {
                    "command": [
                        "intros q H H'.",
                        "VernacExtend",
                        "eb87e09373287bffadbd92b281b340ac830e93b3"
                    ]
                },
                {
                    "command": [
                        "destruct (gcd_bezout n m (gcd n m) (eq_refl _)) as (a & b & EQ).",
                        "VernacExtend",
                        "0ad1a3fd041c515eb2b2d49b7c4055032a255782"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ, <- sgn_abs, mul_add_distr_l.",
                        "VernacExtend",
                        "77f4d7aa899c4de3ebe45d45c1fda4c20746ecb0"
                    ]
                },
                {
                    "command": [
                        "apply divide_add_r.",
                        "VernacExtend",
                        "00fea9481bf97eeb10910fdc8b01d3fed22896a4"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_shuffle2.",
                        "VernacExtend",
                        "07d79498ff812257eab051be197d8203f4a905cd"
                    ]
                },
                {
                    "command": [
                        "now apply divide_mul_l.",
                        "VernacExtend",
                        "e24255f96c1fa29a407b78d0d7c8b2c805766ccc"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_shuffle2.",
                        "VernacExtend",
                        "07d79498ff812257eab051be197d8203f4a905cd"
                    ]
                },
                {
                    "command": [
                        "now apply divide_mul_l.",
                        "VernacExtend",
                        "e24255f96c1fa29a407b78d0d7c8b2c805766ccc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_mul_mono_l_nonneg",
            "line_nb": 218,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (abs_eq p) at 3; trivial.",
                        "VernacExtend",
                        "7dae029a41dc980de7e019d67be5242a6335b7f3"
                    ]
                },
                {
                    "command": [
                        "apply gcd_mul_mono_l.",
                        "VernacExtend",
                        "5e576ab654b48499fb60f9b1b88c84bf5a1edb5c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_mul_mono_r",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "intros n m p.",
                        "VernacExtend",
                        "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
                    ]
                },
                {
                    "command": [
                        "now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm.",
                        "VernacExtend",
                        "dcb8c9f678b684a096b8aa3baea5ac123122f2ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_mul_mono_r_nonneg",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (abs_eq p) at 3; trivial.",
                        "VernacExtend",
                        "7dae029a41dc980de7e019d67be5242a6335b7f3"
                    ]
                },
                {
                    "command": [
                        "apply gcd_mul_mono_r.",
                        "VernacExtend",
                        "e01e9f7bf6b1c8dca3e5f7d574e9025a4d6d0dec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gauss",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "intros n m p H G.",
                        "VernacExtend",
                        "77fc3f9ddd26b9360a2f0e47f3c00b7dc11e68e6"
                    ]
                },
                {
                    "command": [
                        "destruct (gcd_bezout n m 1 G) as (a & b & EQ).",
                        "VernacExtend",
                        "884a91abe47e0c783130616b859dc632012fec7c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_1_l p), <- EQ, mul_add_distr_r.",
                        "VernacExtend",
                        "ecdb4ca66dac27f644219875e8200a9ee667226c"
                    ]
                },
                {
                    "command": [
                        "apply divide_add_r.",
                        "VernacExtend",
                        "00fea9481bf97eeb10910fdc8b01d3fed22896a4"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_shuffle0.",
                        "VernacExtend",
                        "63dc71f19a1e4898f7883851bd262f31ee2feea6"
                    ]
                },
                {
                    "command": [
                        "apply divide_factor_r.",
                        "VernacExtend",
                        "38a70e3edc9cecf8cc8c0590572e7fd3e7163fa9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mul_assoc.",
                        "VernacExtend",
                        "3f663ca227e984211c845e20f01c2d34b0cda6c2"
                    ]
                },
                {
                    "command": [
                        "now apply divide_mul_r.",
                        "VernacExtend",
                        "59182b8aa95d807eef673553f442fc6911449a39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_mul_split",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "intros n m p Hn H.",
                        "VernacExtend",
                        "4e3de20c96661a80be5cb817095f7e7ad7f95355"
                    ]
                },
                {
                    "command": [
                        "assert (G := gcd_nonneg n m).",
                        "VernacExtend",
                        "24ba97302c1440a963d7818c1ed39d13d5678acb"
                    ]
                },
                {
                    "command": [
                        "apply le_lteq in G; destruct G as [G|G].",
                        "VernacExtend",
                        "41160dadc72e4992efb46477a7da05f4524af9b8"
                    ]
                },
                {
                    "command": [
                        "destruct (gcd_divide_l n m) as (q,Hq).",
                        "VernacExtend",
                        "655a013fd28e5b2cff47d91004a3b26f2d20da16"
                    ]
                },
                {
                    "command": [
                        "exists (gcd n m).",
                        "VernacExtend",
                        "be0f899a690553f0997e7ff25252ee6f6a59b401"
                    ]
                },
                {
                    "command": [
                        "exists q.",
                        "VernacExtend",
                        "4b16c752cd7c11bacf99e556cf412cae1f21d016"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_comm.",
                        "VernacExtend",
                        "e381ca9335c310c57051601bf6f800b499d27dfd"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply gcd_divide_r.",
                        "VernacExtend",
                        "23f22b4be94ee31f90f559afe9253eb0db533a6b"
                    ]
                },
                {
                    "command": [
                        "destruct (gcd_divide_r n m) as (r,Hr).",
                        "VernacExtend",
                        "94533fd5f0f47145b564a3021dc9a8a07230afb6"
                    ]
                },
                {
                    "command": [
                        "rewrite Hr in H.",
                        "VernacExtend",
                        "ae6eeb544bb39b7242ab88aa8f9f9c2b7895e49c"
                    ]
                },
                {
                    "command": [
                        "rewrite Hq in H at 1.",
                        "VernacExtend",
                        "f1b51844c8f7d05284339cde9c0c116a7d18d6d0"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_shuffle0 in H.",
                        "VernacExtend",
                        "154b2416c2a1231e98028f2be4190a2b07ec88c4"
                    ]
                },
                {
                    "command": [
                        "apply mul_divide_cancel_r in H; [|order].",
                        "VernacExtend",
                        "647d2cbd179f1f39428c398b5b9ddffb0b52a8ff"
                    ]
                },
                {
                    "command": [
                        "apply gauss with r; trivial.",
                        "VernacExtend",
                        "59e35dc971dff4f3430f9c0eb643a63a817724d9"
                    ]
                },
                {
                    "command": [
                        "apply mul_cancel_r with (gcd n m); [order|].",
                        "VernacExtend",
                        "0a364e288f03d8d938ae1b01b975c12148c258f3"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_1_l.",
                        "VernacExtend",
                        "7da68bdebc60a8aac00162920413e78a31e97766"
                    ]
                },
                {
                    "command": [
                        "rewrite <- gcd_mul_mono_r_nonneg, <- Hq, <- Hr; order.",
                        "VernacExtend",
                        "af49c016e3cd8b804a00f7c7d790e5771ec1ac1f"
                    ]
                },
                {
                    "command": [
                        "symmetry in G.",
                        "VernacExtend",
                        "a015afd298ee2080a08d65dbdca732ee9826d538"
                    ]
                },
                {
                    "command": [
                        "apply gcd_eq_0 in G.",
                        "VernacExtend",
                        "11292fd2ccc4880cd1a9e1b389517e4d7fb3496a"
                    ]
                },
                {
                    "command": [
                        "destruct G as (Hn',_); order.",
                        "VernacExtend",
                        "5f81e1017657028f30ae9fd1ded1b7f559801aa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}