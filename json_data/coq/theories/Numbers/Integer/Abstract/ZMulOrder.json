{
    "filename": "theories/Numbers/Integer/Abstract/ZMulOrder.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export ZAddOrder.",
            "VernacRequire",
            "4c10668ba9069080f9e938990950b48125b5fe4d"
        ],
        [
            "Module Type ZMulOrderProp (Import Z : ZAxiomsMiniSig').",
            "VernacDeclareModuleType",
            "ed4c62fd7cb234a5f11cddb4f94efd87beb3612d"
        ],
        [
            "Include ZAddOrderProp Z.",
            "VernacInclude",
            "ce70f3235b33ac69aa4fd05349e0ce373d037db3"
        ],
        [
            "Theorem mul_lt_mono_nonpos : forall n m p q, m <= 0 -> n < m -> q <= 0 -> p < q -> m * q < n * p.",
            "VernacStartTheoremProof",
            "72539bc1dcd02e518267924c538d9f05740cdcfd"
        ],
        [
            "intros n m p q H1 H2 H3 H4.",
            "VernacExtend",
            "e32fda7dab5c28d5f24245f1d477abfaf02ba582"
        ],
        [
            "apply le_lt_trans with (m * p).",
            "VernacExtend",
            "2986cc83df48a266335621572514c494ac590f2a"
        ],
        [
            "apply mul_le_mono_nonpos_l; [assumption | now apply lt_le_incl].",
            "VernacExtend",
            "bce7b9d8c4883a8fb3812194227f562ee0c1a571"
        ],
        [
            "apply -> mul_lt_mono_neg_r; [assumption | now apply lt_le_trans with q].",
            "VernacExtend",
            "37fb8f0ae1f24220ca97abd0da10c852957bb777"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_le_mono_nonpos : forall n m p q, m <= 0 -> n <= m -> q <= 0 -> p <= q -> m * q <= n * p.",
            "VernacStartTheoremProof",
            "17375d7365ecc170aa48111dce550c8925209f92"
        ],
        [
            "intros n m p q H1 H2 H3 H4.",
            "VernacExtend",
            "e32fda7dab5c28d5f24245f1d477abfaf02ba582"
        ],
        [
            "apply le_trans with (m * p).",
            "VernacExtend",
            "dc0489b0ddb2c81bd161d14d0ab5e818467666da"
        ],
        [
            "now apply mul_le_mono_nonpos_l.",
            "VernacExtend",
            "c4247e68e31abb8c5716a5755a5a091259a090e2"
        ],
        [
            "apply mul_le_mono_nonpos_r; [now apply le_trans with q | assumption].",
            "VernacExtend",
            "96583a8e6eec11878fe7038a844deb21c4f06b50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_nonpos_nonpos : forall n m, n <= 0 -> m <= 0 -> 0 <= n * m.",
            "VernacStartTheoremProof",
            "bdde3826377e832d6768f233bb6b98808823fa5a"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "rewrite <- (mul_0_l m).",
            "VernacExtend",
            "1ba6115d46fa2085d0174cf35f11c00145dd94c7"
        ],
        [
            "now apply mul_le_mono_nonpos_r.",
            "VernacExtend",
            "23a9bf391d1504404f9f08750fe6d58cf8ae4025"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_nonneg_nonpos : forall n m, 0 <= n -> m <= 0 -> n * m <= 0.",
            "VernacStartTheoremProof",
            "429209c0d90c9038a4971b9687536e1c5a450df9"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "rewrite <- (mul_0_l m).",
            "VernacExtend",
            "1ba6115d46fa2085d0174cf35f11c00145dd94c7"
        ],
        [
            "now apply mul_le_mono_nonpos_r.",
            "VernacExtend",
            "23a9bf391d1504404f9f08750fe6d58cf8ae4025"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_nonpos_nonneg : forall n m, n <= 0 -> 0 <= m -> n * m <= 0.",
            "VernacStartTheoremProof",
            "897b9db9bec2518df7c32b5c31358e4f5f1745b9"
        ],
        [
            "intros; rewrite mul_comm; now apply mul_nonneg_nonpos.",
            "VernacExtend",
            "545dc877b76a181313c3ec6cec3ee070f17eb781"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation mul_pos := lt_0_mul (only parsing).",
            "VernacSyntacticDefinition",
            "c75a2b210f19adff594734a130956a513c67a756"
        ],
        [
            "Theorem lt_mul_0 : forall n m, n * m < 0 <-> n < 0 /\\ m > 0 \\/ n > 0 /\\ m < 0.",
            "VernacStartTheoremProof",
            "65982845c77de2b118e6033128f48932557f08e9"
        ],
        [
            "intros n m; split; [intro H | intros [[H1 H2] | [H1 H2]]].",
            "VernacExtend",
            "3a7ea626a8847fdaa8e2aa76cf0628d04150ecef"
        ],
        [
            "destruct (lt_trichotomy n 0) as [H1 | [H1 | H1]]; [| rewrite H1 in H; rewrite mul_0_l in H; false_hyp H lt_irrefl |]; (destruct (lt_trichotomy m 0) as [H2 | [H2 | H2]]; [| rewrite H2 in H; rewrite mul_0_r in H; false_hyp H lt_irrefl |]); try (left; now split); try (right; now split).",
            "VernacExtend",
            "dbad9b7099f041fd23fd484319fd4d751b2adc7f"
        ],
        [
            "assert (H3 : n * m > 0) by now apply mul_neg_neg.",
            "VernacExtend",
            "ffc6204d7efaeff5a8ffe063ae9d0136d6355920"
        ],
        [
            "exfalso; now apply (lt_asymm (n * m) 0).",
            "VernacExtend",
            "bde39ae474dd3f7ba61c5cd3bdec86042b9199f1"
        ],
        [
            "assert (H3 : n * m > 0) by now apply mul_pos_pos.",
            "VernacExtend",
            "292e068502554ae90c06b6844bff2f38eb385481"
        ],
        [
            "exfalso; now apply (lt_asymm (n * m) 0).",
            "VernacExtend",
            "bde39ae474dd3f7ba61c5cd3bdec86042b9199f1"
        ],
        [
            "now apply mul_neg_pos.",
            "VernacExtend",
            "d18e83362aa455619ccff60b075907d357a74f44"
        ],
        [
            "now apply mul_pos_neg.",
            "VernacExtend",
            "6d87d6b719272277d869d0e3498ca5dbfe270122"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation mul_neg := lt_mul_0 (only parsing).",
            "VernacSyntacticDefinition",
            "c9b66f33bb4a402ba3840d305d9b8c0a0a6aa601"
        ],
        [
            "Theorem le_0_mul : forall n m, 0 <= n * m -> 0 <= n /\\ 0 <= m \\/ n <= 0 /\\ m <= 0.",
            "VernacStartTheoremProof",
            "1e38ec76913b569f108c661cceb04df9006a5211"
        ],
        [
            "assert (R : forall n, 0 == n <-> n == 0) by (intros; split; apply eq_sym).",
            "VernacExtend",
            "9191e30df556733e30015432ce2605f5491161ee"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "repeat rewrite lt_eq_cases.",
            "VernacExtend",
            "2ce09d5c454bbc0ce52e86c6ce62438d53972678"
        ],
        [
            "repeat rewrite R.",
            "VernacExtend",
            "73c0f034029520b5a40452bafb3e512424330892"
        ],
        [
            "rewrite lt_0_mul, eq_mul_0.",
            "VernacExtend",
            "5624f0d275693f80d5d05d80230494ef19cc7ab6"
        ],
        [
            "pose proof (lt_trichotomy n 0); pose proof (lt_trichotomy m 0).",
            "VernacExtend",
            "ad8b8a96a57ec993c2a4f5681982928b6a5828d4"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation mul_nonneg := le_0_mul (only parsing).",
            "VernacSyntacticDefinition",
            "e48b74261f1644d2d272ef1285d8691034b21013"
        ],
        [
            "Theorem le_mul_0 : forall n m, n * m <= 0 -> 0 <= n /\\ m <= 0 \\/ n <= 0 /\\ 0 <= m.",
            "VernacStartTheoremProof",
            "d137eaed41c0f6028b4e2ddb2c6f61f968d215ba"
        ],
        [
            "assert (R : forall n, 0 == n <-> n == 0) by (intros; split; apply eq_sym).",
            "VernacExtend",
            "9191e30df556733e30015432ce2605f5491161ee"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "repeat rewrite lt_eq_cases.",
            "VernacExtend",
            "2ce09d5c454bbc0ce52e86c6ce62438d53972678"
        ],
        [
            "repeat rewrite R.",
            "VernacExtend",
            "73c0f034029520b5a40452bafb3e512424330892"
        ],
        [
            "rewrite lt_mul_0, eq_mul_0.",
            "VernacExtend",
            "2bee981e03b41eeb6268356704d858d389b1b788"
        ],
        [
            "pose proof (lt_trichotomy n 0); pose proof (lt_trichotomy m 0).",
            "VernacExtend",
            "ad8b8a96a57ec993c2a4f5681982928b6a5828d4"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation mul_nonpos := le_mul_0 (only parsing).",
            "VernacSyntacticDefinition",
            "92dd2c72536cdd90eb1ebf22fa0dd02ede500efe"
        ],
        [
            "Notation le_0_square := square_nonneg (only parsing).",
            "VernacSyntacticDefinition",
            "d11e4e38a31c03cd33e80c7ff7c9b931f78bc6e3"
        ],
        [
            "Theorem nlt_square_0 : forall n, ~ n * n < 0.",
            "VernacStartTheoremProof",
            "70c843c909beae7568e6e914291eeada2725ee22"
        ],
        [
            "intros n H.",
            "VernacExtend",
            "348ce37d2f619b733a523bd998a06fecedcf3fc4"
        ],
        [
            "apply lt_nge in H.",
            "VernacExtend",
            "f636704ca709eb06bee6531517524cfaad1d0de0"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply square_nonneg.",
            "VernacExtend",
            "588c4984550c15f9319f668cf235237a988b2603"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem square_lt_mono_nonpos : forall n m, n <= 0 -> m < n -> n * n < m * m.",
            "VernacStartTheoremProof",
            "e9a01c2a8b57ef07c402a16f141aa2a124cb4a4e"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "now apply mul_lt_mono_nonpos.",
            "VernacExtend",
            "7864f8df89186766deb8b0dc4d49ac6361217a71"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem square_le_mono_nonpos : forall n m, n <= 0 -> m <= n -> n * n <= m * m.",
            "VernacStartTheoremProof",
            "4af205ee91e039f48339f701ad6eec877316461f"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "now apply mul_le_mono_nonpos.",
            "VernacExtend",
            "239e96a99d8111c7e59ad584876741e6dad3a74b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem square_lt_simpl_nonpos : forall n m, m <= 0 -> n * n < m * m -> m < n.",
            "VernacStartTheoremProof",
            "5e26aea42daab08e9495280e4aaf1cc4adb0958a"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "destruct (le_gt_cases n 0); [|order].",
            "VernacExtend",
            "cae7f055b15caf814cf3710fadd6d9d10fd8705b"
        ],
        [
            "destruct (lt_ge_cases m n) as [LE|GT]; trivial.",
            "VernacExtend",
            "08cbeae67a5c03c57c85f6c6898c23303d8b060d"
        ],
        [
            "apply square_le_mono_nonpos in GT; order.",
            "VernacExtend",
            "3552d3367b6500d4bceeb1074d0247d058ed0bb1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem square_le_simpl_nonpos : forall n m, m <= 0 -> n * n <= m * m -> m <= n.",
            "VernacStartTheoremProof",
            "3570600b030c332a92cd67d4f8ef4f00640b3dbe"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "destruct (le_gt_cases n 0); [|order].",
            "VernacExtend",
            "cae7f055b15caf814cf3710fadd6d9d10fd8705b"
        ],
        [
            "destruct (le_gt_cases m n) as [LE|GT]; trivial.",
            "VernacExtend",
            "1c4d5e556f2989c3f476b14bc4bcabfb30223216"
        ],
        [
            "apply square_lt_mono_nonpos in GT; order.",
            "VernacExtend",
            "8054498139b82c272beba029c28af63f8f55e847"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_1_mul_neg : forall n m, n < -1 -> m < 0 -> 1 < n * m.",
            "VernacStartTheoremProof",
            "1f3b4a39a6f9760497ea9bf100913a31b4ba0d9c"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "apply (mul_lt_mono_neg_r m) in H1.",
            "VernacExtend",
            "1134c59f26fedd70606f68259514485294b752f8"
        ],
        [
            "apply opp_pos_neg in H2.",
            "VernacExtend",
            "829bab27f5fa3aedb58e92954c5dcd3cd4a5ce60"
        ],
        [
            "rewrite mul_opp_l, mul_1_l in H1.",
            "VernacExtend",
            "44a47f289a26a8af5811e1e87e3cd8f99a7278eb"
        ],
        [
            "now apply lt_1_l with (- m).",
            "VernacExtend",
            "e54b25aa535e3d614ffc7dbdd9e20707966b5395"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_mul_m1_neg : forall n m, 1 < n -> m < 0 -> n * m < -1.",
            "VernacStartTheoremProof",
            "2cc9c91163aa77729777360354f2ae9ede2fc06b"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "apply (mul_lt_mono_neg_r m) in H1.",
            "VernacExtend",
            "1134c59f26fedd70606f68259514485294b752f8"
        ],
        [
            "rewrite mul_1_l in H1.",
            "VernacExtend",
            "18fd0b5968eedb704d4baae759096f30b02cd780"
        ],
        [
            "now apply lt_m1_r with m.",
            "VernacExtend",
            "9c253a73b27cb3c217e74dd22a22dff8d1a96766"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_mul_m1_pos : forall n m, n < -1 -> 0 < m -> n * m < -1.",
            "VernacStartTheoremProof",
            "e252ad809907df2ef1cf78e0cc74eb86e31cba3a"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "apply (mul_lt_mono_pos_r m) in H1.",
            "VernacExtend",
            "85f693fc9f5c6fc06369a53f63f4bdac0f494668"
        ],
        [
            "rewrite mul_opp_l, mul_1_l in H1.",
            "VernacExtend",
            "44a47f289a26a8af5811e1e87e3cd8f99a7278eb"
        ],
        [
            "apply opp_neg_pos in H2.",
            "VernacExtend",
            "c3b4060b932212a7427babb91e489739e6027411"
        ],
        [
            "now apply lt_m1_r with (- m).",
            "VernacExtend",
            "ca9848d15dc728684101af601ed26b1538e2a2c5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_1_mul_l : forall n m, 1 < n -> n * m < -1 \\/ n * m == 0 \\/ 1 < n * m.",
            "VernacStartTheoremProof",
            "ea2989864af16cdb9364c7929aade97d2d96f721"
        ],
        [
            "intros n m H; destruct (lt_trichotomy m 0) as [H1 | [H1 | H1]].",
            "VernacExtend",
            "a18510aa876602bfcb1212ebd05b1d199928c85e"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "now apply lt_mul_m1_neg.",
            "VernacExtend",
            "a6bdf224b973f848f8688ccc76caa32b82825440"
        ],
        [
            "right; left; now rewrite H1, mul_0_r.",
            "VernacExtend",
            "88236d3d6909c1f01bc5c25fdadf49b7a359b6cf"
        ],
        [
            "right; right; now apply lt_1_mul_pos.",
            "VernacExtend",
            "91c1dd3f13bee9ca51df20ebf8e6fc6a46cc01d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_m1_mul_r : forall n m, n < -1 -> n * m < -1 \\/ n * m == 0 \\/ 1 < n * m.",
            "VernacStartTheoremProof",
            "32c68b425a37cd3bb7dc15b2d945f71c346919c3"
        ],
        [
            "intros n m H; destruct (lt_trichotomy m 0) as [H1 | [H1 | H1]].",
            "VernacExtend",
            "a18510aa876602bfcb1212ebd05b1d199928c85e"
        ],
        [
            "right; right.",
            "VernacExtend",
            "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
        ],
        [
            "now apply lt_1_mul_neg.",
            "VernacExtend",
            "8456f2728ca2d1eff2749051bbe88f46f74a3c7b"
        ],
        [
            "right; left; now rewrite H1, mul_0_r.",
            "VernacExtend",
            "88236d3d6909c1f01bc5c25fdadf49b7a359b6cf"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "now apply lt_mul_m1_pos.",
            "VernacExtend",
            "f77c19d04b98b4a285041653f27fe059ee5cfc84"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_mul_1 : forall n m, n * m == 1 -> n == 1 \\/ n == -1.",
            "VernacStartTheoremProof",
            "dcac3fed76911bb99020aee00e7c5cf7f160a221"
        ],
        [
            "assert (F := lt_m1_0).",
            "VernacExtend",
            "752da9c41b55c8b312018d5416e148ce08be31ab"
        ],
        [
            "zero_pos_neg n.",
            "VernacExtend",
            "53bdf0cc4b396de039e804f56ad691d26178bc79"
        ],
        [
            "intros m.",
            "VernacExtend",
            "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
        ],
        [
            "nzsimpl.",
            "VernacExtend",
            "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "rewrite <- le_succ_l, <- one_succ in Hn.",
            "VernacExtend",
            "be64ffa2c9347dbe86373787c95089f84c5e167b"
        ],
        [
            "le_elim Hn; split; intros m H.",
            "VernacExtend",
            "5e6c5a41e39f3bc0355f8a2542eff38299b0dfc8"
        ],
        [
            "destruct (lt_1_mul_l n m) as [|[|]]; order'.",
            "VernacExtend",
            "e73ce13830d37c77d5a75cb38b9f76922955273c"
        ],
        [
            "rewrite mul_opp_l, eq_opp_l in H.",
            "VernacExtend",
            "f3bc1ed5f1fce4b5ec7eff0199e873ac223799fe"
        ],
        [
            "destruct (lt_1_mul_l n m) as [|[|]]; order'.",
            "VernacExtend",
            "e73ce13830d37c77d5a75cb38b9f76922955273c"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "intros; right.",
            "VernacExtend",
            "0c97a3d964169defe64399098f1fa99f7c30db48"
        ],
        [
            "now f_equiv.",
            "VernacExtend",
            "98cbad0c17c93e8efb72200330cc4dc88ee8a339"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_mul_diag_l : forall n m, n < 0 -> (1 < m <-> n * m < n).",
            "VernacStartTheoremProof",
            "dbbe2615403d5650cc1ea9334557b7ac360f1857"
        ],
        [
            "intros n m H.",
            "VernacExtend",
            "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
        ],
        [
            "stepr (n * m < n * 1) by now rewrite mul_1_r.",
            "VernacExtend",
            "a796e485a92f34d179467bde3b6e1682306c6944"
        ],
        [
            "now apply mul_lt_mono_neg_l.",
            "VernacExtend",
            "09dd28fef4a33392334267a05360ad6878f1d598"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_mul_diag_r : forall n m, 0 < n -> (1 < m <-> n < n * m).",
            "VernacStartTheoremProof",
            "8669a1441702baf04da4d8d608f498e33fe32bcd"
        ],
        [
            "intros n m H.",
            "VernacExtend",
            "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
        ],
        [
            "stepr (n * 1 < n * m) by now rewrite mul_1_r.",
            "VernacExtend",
            "dc499f04b6e4751f7dfb2bc295f14f55de5766ef"
        ],
        [
            "now apply mul_lt_mono_pos_l.",
            "VernacExtend",
            "b1d7f127fd9fd0ec4a7719c3926d91b9735b1507"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_mul_diag_l : forall n m, n < 0 -> (1 <= m <-> n * m <= n).",
            "VernacStartTheoremProof",
            "1272019c57911d3af0c8f09521ce4950c4396560"
        ],
        [
            "intros n m H.",
            "VernacExtend",
            "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
        ],
        [
            "stepr (n * m <= n * 1) by now rewrite mul_1_r.",
            "VernacExtend",
            "5953d9abf4958446d5e772239990286f1947f3c6"
        ],
        [
            "now apply mul_le_mono_neg_l.",
            "VernacExtend",
            "c8248cd75b38ec54c5c70853d5dc5cb53177cf78"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_mul_diag_r : forall n m, 0 < n -> (1 <= m <-> n <= n * m).",
            "VernacStartTheoremProof",
            "486cf2189ea52184949b2f824bbca61d62137dba"
        ],
        [
            "intros n m H.",
            "VernacExtend",
            "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
        ],
        [
            "stepr (n * 1 <= n * m) by now rewrite mul_1_r.",
            "VernacExtend",
            "cdba2fe05a12048c00a2e397b08b70a5b1c9c1ca"
        ],
        [
            "now apply mul_le_mono_pos_l.",
            "VernacExtend",
            "8536cd7c05a03cc730ce54b17d1888c2e03e2cf0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_mul_r : forall n m p, 0 < n -> 1 < p -> n < m -> n < m * p.",
            "VernacStartTheoremProof",
            "68168eff21dc124606ef86f4001f4d4ae94f67d0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "stepl (n * 1) by now rewrite mul_1_r.",
            "VernacExtend",
            "44c4c517250bdffae453eadbe9016730994ad880"
        ],
        [
            "apply mul_lt_mono_nonneg.",
            "VernacExtend",
            "8ff442404600f159fd4b0ac882fe914694cfb2a8"
        ],
        [
            "now apply lt_le_incl.",
            "VernacExtend",
            "acdf72fc8000eed208128b3a4133f14a26e08d82"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_0_1.",
            "VernacExtend",
            "af02408ec258220b3cec08a9e9dbe8f3ad101a7b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mul_eq_1 := eq_mul_1.",
            "VernacDefinition",
            "cc7e302ac9f89513181e79df2626b2c25ae09010"
        ],
        [
            "End ZMulOrderProp.",
            "VernacEndSegment",
            "e862159fb485ac4276be2cb7e44632de53228643"
        ]
    ],
    "proofs": [
        {
            "name": "mul_lt_mono_nonpos",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros n m p q H1 H2 H3 H4.",
                        "VernacExtend",
                        "e32fda7dab5c28d5f24245f1d477abfaf02ba582"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (m * p).",
                        "VernacExtend",
                        "2986cc83df48a266335621572514c494ac590f2a"
                    ]
                },
                {
                    "command": [
                        "apply mul_le_mono_nonpos_l; [assumption | now apply lt_le_incl].",
                        "VernacExtend",
                        "bce7b9d8c4883a8fb3812194227f562ee0c1a571"
                    ]
                },
                {
                    "command": [
                        "apply -> mul_lt_mono_neg_r; [assumption | now apply lt_le_trans with q].",
                        "VernacExtend",
                        "37fb8f0ae1f24220ca97abd0da10c852957bb777"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_le_mono_nonpos",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros n m p q H1 H2 H3 H4.",
                        "VernacExtend",
                        "e32fda7dab5c28d5f24245f1d477abfaf02ba582"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (m * p).",
                        "VernacExtend",
                        "dc0489b0ddb2c81bd161d14d0ab5e818467666da"
                    ]
                },
                {
                    "command": [
                        "now apply mul_le_mono_nonpos_l.",
                        "VernacExtend",
                        "c4247e68e31abb8c5716a5755a5a091259a090e2"
                    ]
                },
                {
                    "command": [
                        "apply mul_le_mono_nonpos_r; [now apply le_trans with q | assumption].",
                        "VernacExtend",
                        "96583a8e6eec11878fe7038a844deb21c4f06b50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_nonpos_nonpos",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_0_l m).",
                        "VernacExtend",
                        "1ba6115d46fa2085d0174cf35f11c00145dd94c7"
                    ]
                },
                {
                    "command": [
                        "now apply mul_le_mono_nonpos_r.",
                        "VernacExtend",
                        "23a9bf391d1504404f9f08750fe6d58cf8ae4025"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_nonneg_nonpos",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_0_l m).",
                        "VernacExtend",
                        "1ba6115d46fa2085d0174cf35f11c00145dd94c7"
                    ]
                },
                {
                    "command": [
                        "now apply mul_le_mono_nonpos_r.",
                        "VernacExtend",
                        "23a9bf391d1504404f9f08750fe6d58cf8ae4025"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_nonpos_nonneg",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros; rewrite mul_comm; now apply mul_nonneg_nonpos.",
                        "VernacExtend",
                        "545dc877b76a181313c3ec6cec3ee070f17eb781"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_mul_0",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros n m; split; [intro H | intros [[H1 H2] | [H1 H2]]].",
                        "VernacExtend",
                        "3a7ea626a8847fdaa8e2aa76cf0628d04150ecef"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_trichotomy n 0) as [H1 | [H1 | H1]]; [| rewrite H1 in H; rewrite mul_0_l in H; false_hyp H lt_irrefl |]; (destruct (lt_trichotomy m 0) as [H2 | [H2 | H2]]; [| rewrite H2 in H; rewrite mul_0_r in H; false_hyp H lt_irrefl |]); try (left; now split); try (right; now split).",
                        "VernacExtend",
                        "dbad9b7099f041fd23fd484319fd4d751b2adc7f"
                    ]
                },
                {
                    "command": [
                        "assert (H3 : n * m > 0) by now apply mul_neg_neg.",
                        "VernacExtend",
                        "ffc6204d7efaeff5a8ffe063ae9d0136d6355920"
                    ]
                },
                {
                    "command": [
                        "exfalso; now apply (lt_asymm (n * m) 0).",
                        "VernacExtend",
                        "bde39ae474dd3f7ba61c5cd3bdec86042b9199f1"
                    ]
                },
                {
                    "command": [
                        "assert (H3 : n * m > 0) by now apply mul_pos_pos.",
                        "VernacExtend",
                        "292e068502554ae90c06b6844bff2f38eb385481"
                    ]
                },
                {
                    "command": [
                        "exfalso; now apply (lt_asymm (n * m) 0).",
                        "VernacExtend",
                        "bde39ae474dd3f7ba61c5cd3bdec86042b9199f1"
                    ]
                },
                {
                    "command": [
                        "now apply mul_neg_pos.",
                        "VernacExtend",
                        "d18e83362aa455619ccff60b075907d357a74f44"
                    ]
                },
                {
                    "command": [
                        "now apply mul_pos_neg.",
                        "VernacExtend",
                        "6d87d6b719272277d869d0e3498ca5dbfe270122"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_0_mul",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "assert (R : forall n, 0 == n <-> n == 0) by (intros; split; apply eq_sym).",
                        "VernacExtend",
                        "9191e30df556733e30015432ce2605f5491161ee"
                    ]
                },
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite lt_eq_cases.",
                        "VernacExtend",
                        "2ce09d5c454bbc0ce52e86c6ce62438d53972678"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite R.",
                        "VernacExtend",
                        "73c0f034029520b5a40452bafb3e512424330892"
                    ]
                },
                {
                    "command": [
                        "rewrite lt_0_mul, eq_mul_0.",
                        "VernacExtend",
                        "5624f0d275693f80d5d05d80230494ef19cc7ab6"
                    ]
                },
                {
                    "command": [
                        "pose proof (lt_trichotomy n 0); pose proof (lt_trichotomy m 0).",
                        "VernacExtend",
                        "ad8b8a96a57ec993c2a4f5681982928b6a5828d4"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_mul_0",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "assert (R : forall n, 0 == n <-> n == 0) by (intros; split; apply eq_sym).",
                        "VernacExtend",
                        "9191e30df556733e30015432ce2605f5491161ee"
                    ]
                },
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite lt_eq_cases.",
                        "VernacExtend",
                        "2ce09d5c454bbc0ce52e86c6ce62438d53972678"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite R.",
                        "VernacExtend",
                        "73c0f034029520b5a40452bafb3e512424330892"
                    ]
                },
                {
                    "command": [
                        "rewrite lt_mul_0, eq_mul_0.",
                        "VernacExtend",
                        "2bee981e03b41eeb6268356704d858d389b1b788"
                    ]
                },
                {
                    "command": [
                        "pose proof (lt_trichotomy n 0); pose proof (lt_trichotomy m 0).",
                        "VernacExtend",
                        "ad8b8a96a57ec993c2a4f5681982928b6a5828d4"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nlt_square_0",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intros n H.",
                        "VernacExtend",
                        "348ce37d2f619b733a523bd998a06fecedcf3fc4"
                    ]
                },
                {
                    "command": [
                        "apply lt_nge in H.",
                        "VernacExtend",
                        "f636704ca709eb06bee6531517524cfaad1d0de0"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply square_nonneg.",
                        "VernacExtend",
                        "588c4984550c15f9319f668cf235237a988b2603"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_lt_mono_nonpos",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_nonpos.",
                        "VernacExtend",
                        "7864f8df89186766deb8b0dc4d49ac6361217a71"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_le_mono_nonpos",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "now apply mul_le_mono_nonpos.",
                        "VernacExtend",
                        "239e96a99d8111c7e59ad584876741e6dad3a74b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_lt_simpl_nonpos",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_cases n 0); [|order].",
                        "VernacExtend",
                        "cae7f055b15caf814cf3710fadd6d9d10fd8705b"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_ge_cases m n) as [LE|GT]; trivial.",
                        "VernacExtend",
                        "08cbeae67a5c03c57c85f6c6898c23303d8b060d"
                    ]
                },
                {
                    "command": [
                        "apply square_le_mono_nonpos in GT; order.",
                        "VernacExtend",
                        "3552d3367b6500d4bceeb1074d0247d058ed0bb1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_le_simpl_nonpos",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_cases n 0); [|order].",
                        "VernacExtend",
                        "cae7f055b15caf814cf3710fadd6d9d10fd8705b"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_cases m n) as [LE|GT]; trivial.",
                        "VernacExtend",
                        "1c4d5e556f2989c3f476b14bc4bcabfb30223216"
                    ]
                },
                {
                    "command": [
                        "apply square_lt_mono_nonpos in GT; order.",
                        "VernacExtend",
                        "8054498139b82c272beba029c28af63f8f55e847"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_1_mul_neg",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "apply (mul_lt_mono_neg_r m) in H1.",
                        "VernacExtend",
                        "1134c59f26fedd70606f68259514485294b752f8"
                    ]
                },
                {
                    "command": [
                        "apply opp_pos_neg in H2.",
                        "VernacExtend",
                        "829bab27f5fa3aedb58e92954c5dcd3cd4a5ce60"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_opp_l, mul_1_l in H1.",
                        "VernacExtend",
                        "44a47f289a26a8af5811e1e87e3cd8f99a7278eb"
                    ]
                },
                {
                    "command": [
                        "now apply lt_1_l with (- m).",
                        "VernacExtend",
                        "e54b25aa535e3d614ffc7dbdd9e20707966b5395"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_mul_m1_neg",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "apply (mul_lt_mono_neg_r m) in H1.",
                        "VernacExtend",
                        "1134c59f26fedd70606f68259514485294b752f8"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_1_l in H1.",
                        "VernacExtend",
                        "18fd0b5968eedb704d4baae759096f30b02cd780"
                    ]
                },
                {
                    "command": [
                        "now apply lt_m1_r with m.",
                        "VernacExtend",
                        "9c253a73b27cb3c217e74dd22a22dff8d1a96766"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_mul_m1_pos",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "apply (mul_lt_mono_pos_r m) in H1.",
                        "VernacExtend",
                        "85f693fc9f5c6fc06369a53f63f4bdac0f494668"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_opp_l, mul_1_l in H1.",
                        "VernacExtend",
                        "44a47f289a26a8af5811e1e87e3cd8f99a7278eb"
                    ]
                },
                {
                    "command": [
                        "apply opp_neg_pos in H2.",
                        "VernacExtend",
                        "c3b4060b932212a7427babb91e489739e6027411"
                    ]
                },
                {
                    "command": [
                        "now apply lt_m1_r with (- m).",
                        "VernacExtend",
                        "ca9848d15dc728684101af601ed26b1538e2a2c5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_1_mul_l",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "intros n m H; destruct (lt_trichotomy m 0) as [H1 | [H1 | H1]].",
                        "VernacExtend",
                        "a18510aa876602bfcb1212ebd05b1d199928c85e"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "now apply lt_mul_m1_neg.",
                        "VernacExtend",
                        "a6bdf224b973f848f8688ccc76caa32b82825440"
                    ]
                },
                {
                    "command": [
                        "right; left; now rewrite H1, mul_0_r.",
                        "VernacExtend",
                        "88236d3d6909c1f01bc5c25fdadf49b7a359b6cf"
                    ]
                },
                {
                    "command": [
                        "right; right; now apply lt_1_mul_pos.",
                        "VernacExtend",
                        "91c1dd3f13bee9ca51df20ebf8e6fc6a46cc01d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_m1_mul_r",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros n m H; destruct (lt_trichotomy m 0) as [H1 | [H1 | H1]].",
                        "VernacExtend",
                        "a18510aa876602bfcb1212ebd05b1d199928c85e"
                    ]
                },
                {
                    "command": [
                        "right; right.",
                        "VernacExtend",
                        "1a9cf7435e57a762272bbff4bbbb1d8b0bd2b801"
                    ]
                },
                {
                    "command": [
                        "now apply lt_1_mul_neg.",
                        "VernacExtend",
                        "8456f2728ca2d1eff2749051bbe88f46f74a3c7b"
                    ]
                },
                {
                    "command": [
                        "right; left; now rewrite H1, mul_0_r.",
                        "VernacExtend",
                        "88236d3d6909c1f01bc5c25fdadf49b7a359b6cf"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "now apply lt_mul_m1_pos.",
                        "VernacExtend",
                        "f77c19d04b98b4a285041653f27fe059ee5cfc84"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_mul_1",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "assert (F := lt_m1_0).",
                        "VernacExtend",
                        "752da9c41b55c8b312018d5416e148ce08be31ab"
                    ]
                },
                {
                    "command": [
                        "zero_pos_neg n.",
                        "VernacExtend",
                        "53bdf0cc4b396de039e804f56ad691d26178bc79"
                    ]
                },
                {
                    "command": [
                        "intros m.",
                        "VernacExtend",
                        "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
                    ]
                },
                {
                    "command": [
                        "nzsimpl.",
                        "VernacExtend",
                        "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "intros n Hn.",
                        "VernacExtend",
                        "4a15d287eb245c84eabfb58cba2e377ac025029a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_succ_l, <- one_succ in Hn.",
                        "VernacExtend",
                        "be64ffa2c9347dbe86373787c95089f84c5e167b"
                    ]
                },
                {
                    "command": [
                        "le_elim Hn; split; intros m H.",
                        "VernacExtend",
                        "5e6c5a41e39f3bc0355f8a2542eff38299b0dfc8"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_1_mul_l n m) as [|[|]]; order'.",
                        "VernacExtend",
                        "e73ce13830d37c77d5a75cb38b9f76922955273c"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_opp_l, eq_opp_l in H.",
                        "VernacExtend",
                        "f3bc1ed5f1fce4b5ec7eff0199e873ac223799fe"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_1_mul_l n m) as [|[|]]; order'.",
                        "VernacExtend",
                        "e73ce13830d37c77d5a75cb38b9f76922955273c"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "intros; right.",
                        "VernacExtend",
                        "0c97a3d964169defe64399098f1fa99f7c30db48"
                    ]
                },
                {
                    "command": [
                        "now f_equiv.",
                        "VernacExtend",
                        "98cbad0c17c93e8efb72200330cc4dc88ee8a339"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_mul_diag_l",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "intros n m H.",
                        "VernacExtend",
                        "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
                    ]
                },
                {
                    "command": [
                        "stepr (n * m < n * 1) by now rewrite mul_1_r.",
                        "VernacExtend",
                        "a796e485a92f34d179467bde3b6e1682306c6944"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_neg_l.",
                        "VernacExtend",
                        "09dd28fef4a33392334267a05360ad6878f1d598"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_mul_diag_r",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "intros n m H.",
                        "VernacExtend",
                        "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
                    ]
                },
                {
                    "command": [
                        "stepr (n * 1 < n * m) by now rewrite mul_1_r.",
                        "VernacExtend",
                        "dc499f04b6e4751f7dfb2bc295f14f55de5766ef"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_pos_l.",
                        "VernacExtend",
                        "b1d7f127fd9fd0ec4a7719c3926d91b9735b1507"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_mul_diag_l",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "intros n m H.",
                        "VernacExtend",
                        "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
                    ]
                },
                {
                    "command": [
                        "stepr (n * m <= n * 1) by now rewrite mul_1_r.",
                        "VernacExtend",
                        "5953d9abf4958446d5e772239990286f1947f3c6"
                    ]
                },
                {
                    "command": [
                        "now apply mul_le_mono_neg_l.",
                        "VernacExtend",
                        "c8248cd75b38ec54c5c70853d5dc5cb53177cf78"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_mul_diag_r",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "intros n m H.",
                        "VernacExtend",
                        "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
                    ]
                },
                {
                    "command": [
                        "stepr (n * 1 <= n * m) by now rewrite mul_1_r.",
                        "VernacExtend",
                        "cdba2fe05a12048c00a2e397b08b70a5b1c9c1ca"
                    ]
                },
                {
                    "command": [
                        "now apply mul_le_mono_pos_l.",
                        "VernacExtend",
                        "8536cd7c05a03cc730ce54b17d1888c2e03e2cf0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_mul_r",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "stepl (n * 1) by now rewrite mul_1_r.",
                        "VernacExtend",
                        "44c4c517250bdffae453eadbe9016730994ad880"
                    ]
                },
                {
                    "command": [
                        "apply mul_lt_mono_nonneg.",
                        "VernacExtend",
                        "8ff442404600f159fd4b0ac882fe914694cfb2a8"
                    ]
                },
                {
                    "command": [
                        "now apply lt_le_incl.",
                        "VernacExtend",
                        "acdf72fc8000eed208128b3a4133f14a26e08d82"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_0_1.",
                        "VernacExtend",
                        "af02408ec258220b3cec08a9e9dbe8f3ad101a7b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}