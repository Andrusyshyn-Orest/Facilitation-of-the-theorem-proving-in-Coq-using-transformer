{
    "filename": "theories/Numbers/Integer/Abstract/ZParity.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Bool ZMulOrder NZParity.",
            "VernacRequire",
            "2f44b9f48111cd90829cf122b6b3dcd8a21f338e"
        ],
        [
            "Module Type ZParityProp (Import Z : ZAxiomsSig') (Import ZP : ZMulOrderProp Z).",
            "VernacDeclareModuleType",
            "2600ba67ca66496d07f784b6132e6ab4ea35df6f"
        ],
        [
            "Include NZParityProp Z Z ZP.",
            "VernacInclude",
            "152ca489810b2d48f1ab7c7ce8661edc69060c54"
        ],
        [
            "Lemma odd_pred : forall n, odd (P n) = even n.",
            "VernacStartTheoremProof",
            "03d1065e5068e1e94f1952eac19a103df44ef13f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (succ_pred n) at 2.",
            "VernacExtend",
            "08c6170838a9b68937a135b94f43f289b1bd31cd"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply even_succ.",
            "VernacExtend",
            "978755f835eb9b8815e3610f36519235204c5b82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_pred : forall n, even (P n) = odd n.",
            "VernacStartTheoremProof",
            "23bd254a915e228da7694c85fe249b2d8779a3c2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (succ_pred n) at 2.",
            "VernacExtend",
            "08c6170838a9b68937a135b94f43f289b1bd31cd"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply odd_succ.",
            "VernacExtend",
            "75cea013268d4bfb9cd3cc6b77890343f5fa1a8d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_opp : forall n, even (-n) = even n.",
            "VernacStartTheoremProof",
            "b01bd86677f633ec3fade40ae3a4afb4453c8492"
        ],
        [
            "assert (H : forall n, Even n -> Even (-n)).",
            "VernacExtend",
            "7611280424f2dd7a0e7c70e92c9381b044494058"
        ],
        [
            "intros n (m,H).",
            "VernacExtend",
            "72fd15d4afc37b7afe1354a9f0325f9d71d152c2"
        ],
        [
            "exists (-m).",
            "VernacExtend",
            "203d7c6f6c3fbd6fedef03aabf3c813eb691fb4c"
        ],
        [
            "rewrite mul_opp_r.",
            "VernacExtend",
            "013b5a25984b215ac6c6f02e8bccd8ad7de199fc"
        ],
        [
            "now f_equiv.",
            "VernacExtend",
            "98cbad0c17c93e8efb72200330cc4dc88ee8a339"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite eq_iff_eq_true, !even_spec.",
            "VernacExtend",
            "093ecc9ab6109165ea81b14b109989951f07ba26"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite <- (opp_involutive n) at 2.",
            "VernacExtend",
            "580dcd7844e39d62949aae1e238515d171d6177d"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_opp : forall n, odd (-n) = odd n.",
            "VernacStartTheoremProof",
            "4162bfb5081634df8ead47d45f4d775501b12059"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- !negb_even.",
            "VernacExtend",
            "3c8949919d84aa83e1c4836a4e2f1a6958c26a5e"
        ],
        [
            "now rewrite even_opp.",
            "VernacExtend",
            "fa0a8ab5de497b47f5f9f32a1533b66f618c0625"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_sub : forall n m, even (n-m) = Bool.eqb (even n) (even m).",
            "VernacStartTheoremProof",
            "8d99d3e0daca95288ea8d5382f7f9d6a6ddc6f2e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite <- add_opp_r, even_add, even_opp.",
            "VernacExtend",
            "c04b9b5d129f1f4f52df79ac905bfbe49db64cc6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_sub : forall n m, odd (n-m) = xorb (odd n) (odd m).",
            "VernacStartTheoremProof",
            "622cd4e64b93a51ba21276486bb9a1944bece905"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite <- add_opp_r, odd_add, odd_opp.",
            "VernacExtend",
            "72bb8fe363485b172373b0269c1ff57b85f278db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ZParityProp.",
            "VernacEndSegment",
            "6b30715fc120d3069f386f15d12fff9f0691abb7"
        ]
    ],
    "proofs": [
        {
            "name": "odd_pred",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (succ_pred n) at 2.",
                        "VernacExtend",
                        "08c6170838a9b68937a135b94f43f289b1bd31cd"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply even_succ.",
                        "VernacExtend",
                        "978755f835eb9b8815e3610f36519235204c5b82"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_pred",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (succ_pred n) at 2.",
                        "VernacExtend",
                        "08c6170838a9b68937a135b94f43f289b1bd31cd"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply odd_succ.",
                        "VernacExtend",
                        "75cea013268d4bfb9cd3cc6b77890343f5fa1a8d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_opp",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "assert (H : forall n, Even n -> Even (-n)).",
                        "VernacExtend",
                        "7611280424f2dd7a0e7c70e92c9381b044494058"
                    ]
                },
                {
                    "command": [
                        "intros n (m,H).",
                        "VernacExtend",
                        "72fd15d4afc37b7afe1354a9f0325f9d71d152c2"
                    ]
                },
                {
                    "command": [
                        "exists (-m).",
                        "VernacExtend",
                        "203d7c6f6c3fbd6fedef03aabf3c813eb691fb4c"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_opp_r.",
                        "VernacExtend",
                        "013b5a25984b215ac6c6f02e8bccd8ad7de199fc"
                    ]
                },
                {
                    "command": [
                        "now f_equiv.",
                        "VernacExtend",
                        "98cbad0c17c93e8efb72200330cc4dc88ee8a339"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_iff_eq_true, !even_spec.",
                        "VernacExtend",
                        "093ecc9ab6109165ea81b14b109989951f07ba26"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (opp_involutive n) at 2.",
                        "VernacExtend",
                        "580dcd7844e39d62949aae1e238515d171d6177d"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_opp",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !negb_even.",
                        "VernacExtend",
                        "3c8949919d84aa83e1c4836a4e2f1a6958c26a5e"
                    ]
                },
                {
                    "command": [
                        "now rewrite even_opp.",
                        "VernacExtend",
                        "fa0a8ab5de497b47f5f9f32a1533b66f618c0625"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_sub",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- add_opp_r, even_add, even_opp.",
                        "VernacExtend",
                        "c04b9b5d129f1f4f52df79ac905bfbe49db64cc6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_sub",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- add_opp_r, odd_add, odd_opp.",
                        "VernacExtend",
                        "72bb8fe363485b172373b0269c1ff57b85f278db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}