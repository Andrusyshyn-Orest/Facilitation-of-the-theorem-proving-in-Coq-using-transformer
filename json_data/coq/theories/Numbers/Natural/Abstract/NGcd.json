{
    "filename": "theories/Numbers/Natural/Abstract/NGcd.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import NAxioms NSub NZGcd.",
            "VernacRequire",
            "c359ab561cffe75ec6c948b74565b5669ebbcdd2"
        ],
        [
            "Module Type NGcdProp (Import A : NAxiomsSig') (Import B : NSubProp A).",
            "VernacDeclareModuleType",
            "4c035093c50529b3a37c2126350d6076b8c7048a"
        ],
        [
            "Include NZGcdProp A A B.",
            "VernacInclude",
            "d6d7062406ee3c8b2185af43817826277879bcc0"
        ],
        [
            "Definition divide_1_r n : (n | 1) -> n == 1 := divide_1_r_nonneg n (le_0_l n).",
            "VernacDefinition",
            "e6c4a76b2544e5f19e51911c0cfbbbcdb13bf214"
        ],
        [
            "Definition divide_antisym n m : (n | m) -> (m | n) -> n == m := divide_antisym_nonneg n m (le_0_l n) (le_0_l m).",
            "VernacDefinition",
            "7fc3fd73fc939bbada0aef854ff58700ae13a591"
        ],
        [
            "Lemma divide_add_cancel_r : forall n m p, (n | m) -> (n | m + p) -> (n | p).",
            "VernacStartTheoremProof",
            "7a89c0649d3c6bdd2312de30ac4511ec4e1c6c51"
        ],
        [
            "intros n m p (q,Hq) (r,Hr).",
            "VernacExtend",
            "729d667c9c0b9105d209e47cbc2ac2e6b43c077b"
        ],
        [
            "exists (r-q).",
            "VernacExtend",
            "3f9d74daacaea94a3b9ac242492763eb43d40868"
        ],
        [
            "rewrite mul_sub_distr_r, <- Hq, <- Hr.",
            "VernacExtend",
            "039b270e4f2f6b8090ef89e04d0770a6b40adda2"
        ],
        [
            "now rewrite add_comm, add_sub.",
            "VernacExtend",
            "4d49399d557c8364c01baf89e679a58fdd5850f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_sub_r : forall n m p, (n | m) -> (n | p) -> (n | m - p).",
            "VernacStartTheoremProof",
            "3b4bfe356d503b65e10793a58ee81f08793ca849"
        ],
        [
            "intros n m p H H'.",
            "VernacExtend",
            "9ec9e45e42db7e71aa7539f895b5aa2bdf5ce9da"
        ],
        [
            "destruct (le_ge_cases m p) as [LE|LE].",
            "VernacExtend",
            "e92d63a2c349d21c4dbaac4f6225df39668567ea"
        ],
        [
            "apply sub_0_le in LE.",
            "VernacExtend",
            "f2222487a9ad8b201930701e3011d6eb50da0188"
        ],
        [
            "rewrite LE.",
            "VernacExtend",
            "3cc313578065747e11f555dbc986d2e04ca9cc02"
        ],
        [
            "apply divide_0_r.",
            "VernacExtend",
            "dd28a5c443063a2e06d448357840c5452dc6c2e8"
        ],
        [
            "apply divide_add_cancel_r with p; trivial.",
            "VernacExtend",
            "92fe36dfd3ff2e0d2a32837f181ee20834cc6890"
        ],
        [
            "now rewrite add_comm, sub_add.",
            "VernacExtend",
            "94d5b78b13afcbe6e7afae84386041db9b153009"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition gcd_0_l n : gcd 0 n == n := gcd_0_l_nonneg n (le_0_l n).",
            "VernacDefinition",
            "22d8e9378ef903d1b506d18c4b4bd74e83be721c"
        ],
        [
            "Definition gcd_0_r n : gcd n 0 == n := gcd_0_r_nonneg n (le_0_l n).",
            "VernacDefinition",
            "0d1ce226372015bc727a7acbeb8a5c7b41c9c0f3"
        ],
        [
            "Definition gcd_diag n : gcd n n == n := gcd_diag_nonneg n (le_0_l n).",
            "VernacDefinition",
            "57dd2822b06bbdf96203c8afbd7e14e0bfd49ac4"
        ],
        [
            "Definition gcd_unique' n m p := gcd_unique n m p (le_0_l p).",
            "VernacDefinition",
            "3d1a3f0e412dc006322080d7b14cf15e53aa92d4"
        ],
        [
            "Definition gcd_unique_alt' n m p := gcd_unique_alt n m p (le_0_l p).",
            "VernacDefinition",
            "f5995faca93d1ce28c3757a4178c404a30fa634a"
        ],
        [
            "Definition divide_gcd_iff' n m := divide_gcd_iff n m (le_0_l n).",
            "VernacDefinition",
            "61ce9c235e88a1fbba5054d67bce70b31033ed26"
        ],
        [
            "Lemma gcd_add_mult_diag_r : forall n m p, gcd n (m+p*n) == gcd n m.",
            "VernacStartTheoremProof",
            "deed40321591e2ed953d7f5d883354cc990b250e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply gcd_unique_alt'.",
            "VernacExtend",
            "379e0bfa779a45907f8eccce89fddf29dc81b3a4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite gcd_divide_iff.",
            "VernacExtend",
            "a823f0f861635bdab0599454a77abff29845d126"
        ],
        [
            "split; intros (U,V); split; trivial.",
            "VernacExtend",
            "156a2eeca4553bc63df006d06c73e503f6ebece3"
        ],
        [
            "apply divide_add_r; trivial.",
            "VernacExtend",
            "177a3c8874717a6f6791d1fc25b5399493c643fe"
        ],
        [
            "now apply divide_mul_r.",
            "VernacExtend",
            "59182b8aa95d807eef673553f442fc6911449a39"
        ],
        [
            "apply divide_add_cancel_r with (p*n); trivial.",
            "VernacExtend",
            "a39d71a1c14b79e51000784b146a1539f44dd5de"
        ],
        [
            "now apply divide_mul_r.",
            "VernacExtend",
            "59182b8aa95d807eef673553f442fc6911449a39"
        ],
        [
            "now rewrite add_comm.",
            "VernacExtend",
            "49059393716b66357ecc6aee8e8a4481895a2fa1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_add_diag_r : forall n m, gcd n (m+n) == gcd n m.",
            "VernacStartTheoremProof",
            "a7fd5b254126b1c4a2c5f6a028d1c6ddd7ed4de4"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "rewrite <- (mul_1_l n) at 2.",
            "VernacExtend",
            "4e727a82ff5e72796ecad3c582b5501f90548b53"
        ],
        [
            "apply gcd_add_mult_diag_r.",
            "VernacExtend",
            "0a226dbe8deb324b34f3bb3dad78c5bbdf1bc7db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_sub_diag_r : forall n m, n<=m -> gcd n (m-n) == gcd n m.",
            "VernacStartTheoremProof",
            "66ec54e84970421b078f22b61a174071d3c69605"
        ],
        [
            "intros n m H.",
            "VernacExtend",
            "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite <- (sub_add n m H) at 1.",
            "VernacExtend",
            "80601cad8e7eeb5bb769a0574b5814a5f18658f8"
        ],
        [
            "apply gcd_add_diag_r.",
            "VernacExtend",
            "a4bab210f0c7c114aa0a3e39e50908e7a62326ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Bezout n m p := exists a b, a*n == p + b*m.",
            "VernacDefinition",
            "35bdd768186a9e94bae7c7d382be8d38c4533f5c"
        ],
        [
            "Instance Bezout_wd : Proper (eq==>eq==>eq==>iff) Bezout.",
            "VernacInstance",
            "74ca98a42e68e5f7a2d623649a65ef5ea37364ff"
        ],
        [
            "unfold Bezout.",
            "VernacExtend",
            "7d8fa7e016164ccb61eb30dbbba7bf26b637ab4b"
        ],
        [
            "intros x x' Hx y y' Hy z z' Hz.",
            "VernacExtend",
            "f6776f72330c7156d501e19269ef26731b253cff"
        ],
        [
            "setoid_rewrite Hx.",
            "VernacExtend",
            "4dcd3a21be5569ed9ca96137ea838c4852d785a3"
        ],
        [
            "setoid_rewrite Hy.",
            "VernacExtend",
            "763501edc03be113f62cef19b8290a6945e0a037"
        ],
        [
            "now setoid_rewrite Hz.",
            "VernacExtend",
            "6fc41d52d1d5c9e2aa6a190b3fe7cbc082418926"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bezout_1_gcd : forall n m, Bezout n m 1 -> gcd n m == 1.",
            "VernacStartTheoremProof",
            "3cd8920e9662e600e3886400aef1b71ad316e0fd"
        ],
        [
            "intros n m (q & r & H).",
            "VernacExtend",
            "2db649cfed7a92389b2f9aad7f593a1c76cb1801"
        ],
        [
            "apply gcd_unique; trivial using divide_1_l, le_0_1.",
            "VernacExtend",
            "a885c39ee87a0ce5028d44beb54f6d83100ff59a"
        ],
        [
            "intros p Hn Hm.",
            "VernacExtend",
            "e4cbec44ff72f54c4476921f77d326b5621c2b55"
        ],
        [
            "apply divide_add_cancel_r with (r*m).",
            "VernacExtend",
            "3c529a9b40f89006bd606e1f1d39dc3ca4be1c88"
        ],
        [
            "now apply divide_mul_r.",
            "VernacExtend",
            "59182b8aa95d807eef673553f442fc6911449a39"
        ],
        [
            "rewrite add_comm, <- H.",
            "VernacExtend",
            "c789a2ab746dbb20e7309b8de62f91fe486681a6"
        ],
        [
            "now apply divide_mul_r.",
            "VernacExtend",
            "59182b8aa95d807eef673553f442fc6911449a39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_bezout_pos_pos : forall n, 0<n -> forall m, 0<m -> Bezout n m (gcd n m) /\\ Bezout m n (gcd n m).",
            "VernacStartTheoremProof",
            "7705bf1239d6d4ca0e6b83c7d0b9f9ea97d4719a"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "rewrite <- le_succ_l, <- one_succ in Hn.",
            "VernacExtend",
            "be64ffa2c9347dbe86373787c95089f84c5e167b"
        ],
        [
            "pattern n.",
            "VernacExtend",
            "08c70a187492b2b293b2a787a83b543d8b736fa0"
        ],
        [
            "apply strong_right_induction with (z:=1); trivial.",
            "VernacExtend",
            "0a265dfc027b72a16edb4df317b2a66ffdd71fb3"
        ],
        [
            "unfold Bezout.",
            "VernacExtend",
            "7d8fa7e016164ccb61eb30dbbba7bf26b637ab4b"
        ],
        [
            "solve_proper.",
            "VernacExtend",
            "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
        ],
        [
            "clear n Hn.",
            "VernacExtend",
            "4816a25feb4b411159f5c0966c1e7caf220a499e"
        ],
        [
            "intros n Hn IHn.",
            "VernacExtend",
            "83f0c5ccbb78a3e550773af22ed70028046db1d5"
        ],
        [
            "intros m Hm.",
            "VernacExtend",
            "34a21a1070c8e8d8f861a30c87e3cd7909e131c5"
        ],
        [
            "rewrite <- le_succ_l, <- one_succ in Hm.",
            "VernacExtend",
            "eace856c1e54eb4da48237e0a8e3a4c7c11ef932"
        ],
        [
            "pattern m.",
            "VernacExtend",
            "d2534544fbb9a57341a246c5440b83ff8b1c99fc"
        ],
        [
            "apply strong_right_induction with (z:=1); trivial.",
            "VernacExtend",
            "0a265dfc027b72a16edb4df317b2a66ffdd71fb3"
        ],
        [
            "unfold Bezout.",
            "VernacExtend",
            "7d8fa7e016164ccb61eb30dbbba7bf26b637ab4b"
        ],
        [
            "solve_proper.",
            "VernacExtend",
            "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
        ],
        [
            "clear m Hm.",
            "VernacExtend",
            "5907334ad0bd1a7f73eb2ebceecd14187eea07f9"
        ],
        [
            "intros m Hm IHm.",
            "VernacExtend",
            "97ac13c1561aabb5c238c08383a517ed338cc79d"
        ],
        [
            "destruct (lt_trichotomy n m) as [LT|[EQ|LT]].",
            "VernacExtend",
            "6e64597bd917b86b3683eb395cd0c63f01c7cd15"
        ],
        [
            "destruct (IHm (m-n)) as ((a & b & EQ), (a' & b' & EQ')).",
            "VernacExtend",
            "47f4eb463822c3d6fb5eb3392e059614439f6d9d"
        ],
        [
            "rewrite one_succ, le_succ_l.",
            "VernacExtend",
            "2e366cf2d43530dc1de760691f999c7c059075ce"
        ],
        [
            "apply lt_add_lt_sub_l; now nzsimpl.",
            "VernacExtend",
            "2ac5a2a6202474069ddd98211972ca6805e8d3f8"
        ],
        [
            "apply sub_lt; order'.",
            "VernacExtend",
            "eebafb5d086e9e31d940cd076b9d92ba291763b4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exists (a+b).",
            "VernacExtend",
            "c8e835c498f430d48cf0760448d174c45438c1e7"
        ],
        [
            "exists b.",
            "VernacExtend",
            "131ab3b1f8dceeba7698c539872e59e8413fa321"
        ],
        [
            "rewrite mul_add_distr_r, EQ, mul_sub_distr_l, <- add_assoc.",
            "VernacExtend",
            "99a81ac517315a9af83fd38eb096bc5f4491ce33"
        ],
        [
            "rewrite gcd_sub_diag_r by order.",
            "VernacExtend",
            "19aec0c6d3945dd6a748122678e83cd543a69d44"
        ],
        [
            "rewrite sub_add.",
            "VernacExtend",
            "cc89d6d3d76f99fe134079c6846321fb3a3b4f6c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply mul_le_mono_l; order.",
            "VernacExtend",
            "746557f3dc2662d5dcc4b11b4be147b70fe558b3"
        ],
        [
            "exists a'.",
            "VernacExtend",
            "c538f1e84054c7af2082d20e9d440f432df7145c"
        ],
        [
            "exists (a'+b').",
            "VernacExtend",
            "ac910bf48d836110987d050d7f6511e99e46f231"
        ],
        [
            "rewrite gcd_sub_diag_r in EQ' by order.",
            "VernacExtend",
            "c899ded7893b0ac5c63be502804449d6c3a7dc8d"
        ],
        [
            "rewrite (add_comm a'), mul_add_distr_r, add_assoc, <- EQ'.",
            "VernacExtend",
            "85b7ce993e575bf8b35a1ea192407d072833eec2"
        ],
        [
            "rewrite mul_sub_distr_l, sub_add.",
            "VernacExtend",
            "7a2612eaadfd31181de605c65840942cba2e3b5b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply mul_le_mono_l; order.",
            "VernacExtend",
            "746557f3dc2662d5dcc4b11b4be147b70fe558b3"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "rewrite gcd_diag.",
            "VernacExtend",
            "b939a6d117a8b987541694250677ceb9d7561105"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "exists 1.",
            "VernacExtend",
            "18eb310858be5acae7304d0d9ed33063568db310"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "now nzsimpl.",
            "VernacExtend",
            "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
        ],
        [
            "exists 1.",
            "VernacExtend",
            "18eb310858be5acae7304d0d9ed33063568db310"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "now nzsimpl.",
            "VernacExtend",
            "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
        ],
        [
            "rewrite gcd_comm, and_comm.",
            "VernacExtend",
            "fbe45afdf89fe9c60ddce50cc5289e2f66160851"
        ],
        [
            "apply IHn; trivial.",
            "VernacExtend",
            "f4d2d2dc356de9c0093fe2988cf483d00ee58eb3"
        ],
        [
            "now rewrite <- le_succ_l, <- one_succ.",
            "VernacExtend",
            "166ab3f1d4d2e96d70092110d3164c0287596b3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_bezout_pos : forall n m, 0<n -> Bezout n m (gcd n m).",
            "VernacStartTheoremProof",
            "5e89b52f0ee04c9273b38522332b2a0550184b59"
        ],
        [
            "intros n m Hn.",
            "VernacExtend",
            "4ea7964435753d0708d2436cc340541c65cb37f7"
        ],
        [
            "destruct (eq_0_gt_0_cases m) as [EQ|LT].",
            "VernacExtend",
            "eb464e550498172731721f4a6c42bc30197b97c8"
        ],
        [
            "rewrite EQ, gcd_0_r.",
            "VernacExtend",
            "7df1b6bf4591aaab35375521748958536717d45b"
        ],
        [
            "exists 1.",
            "VernacExtend",
            "18eb310858be5acae7304d0d9ed33063568db310"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "now nzsimpl.",
            "VernacExtend",
            "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
        ],
        [
            "now apply gcd_bezout_pos_pos.",
            "VernacExtend",
            "b1151e85a03e77906aa33d218306e002df586a1c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_bezout : forall n m, Bezout n m (gcd n m) \\/ Bezout m n (gcd n m).",
            "VernacStartTheoremProof",
            "35f97651006785acb8754431f0d48722925d2af2"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "destruct (eq_0_gt_0_cases n) as [EQ|LT].",
            "VernacExtend",
            "1f8af5e6397777e336e4e63fce16d027cf58b4a5"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "rewrite EQ, gcd_0_l.",
            "VernacExtend",
            "841d3ee5e3f8858765a3584e2647f6464dc53554"
        ],
        [
            "exists 1.",
            "VernacExtend",
            "18eb310858be5acae7304d0d9ed33063568db310"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "now nzsimpl.",
            "VernacExtend",
            "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "now apply gcd_bezout_pos.",
            "VernacExtend",
            "be9617bb2ae7c899fd8ce19a311ea210d1779c16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_mul_mono_l : forall n m p, gcd (p * n) (p * m) == p * gcd n m.",
            "VernacStartTheoremProof",
            "166ec74043f535f8a7b37a6852c65ec22be458af"
        ],
        [
            "intros n m p.",
            "VernacExtend",
            "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
        ],
        [
            "apply gcd_unique'.",
            "VernacExtend",
            "bf0d881e920c3210e881fbfa3bec8d5720d15d23"
        ],
        [
            "apply mul_divide_mono_l, gcd_divide_l.",
            "VernacExtend",
            "7e47c158ddced51b65ef9479672c2d44253353e8"
        ],
        [
            "apply mul_divide_mono_l, gcd_divide_r.",
            "VernacExtend",
            "2959bd0e94e683f16ffe6db8f03443e9f3bd737c"
        ],
        [
            "intros q H H'.",
            "VernacExtend",
            "eb87e09373287bffadbd92b281b340ac830e93b3"
        ],
        [
            "destruct (eq_0_gt_0_cases n) as [EQ|LT].",
            "VernacExtend",
            "1f8af5e6397777e336e4e63fce16d027cf58b4a5"
        ],
        [
            "rewrite EQ in *.",
            "VernacExtend",
            "ffd7cd0b693f60169c5a8dd5b12ac635cf9ed012"
        ],
        [
            "now rewrite gcd_0_l.",
            "VernacExtend",
            "a08bd28c3affde3cbd732447cd1e072bb75f459e"
        ],
        [
            "destruct (gcd_bezout_pos n m) as (a & b & EQ); trivial.",
            "VernacExtend",
            "5ac318864e6c17b28062935969921025f417a012"
        ],
        [
            "apply divide_add_cancel_r with (p*m*b).",
            "VernacExtend",
            "96632059627938ace92008f472976986ad27ebb7"
        ],
        [
            "now apply divide_mul_l.",
            "VernacExtend",
            "e24255f96c1fa29a407b78d0d7c8b2c805766ccc"
        ],
        [
            "rewrite <- mul_assoc, <- mul_add_distr_l, add_comm, (mul_comm m), <- EQ.",
            "VernacExtend",
            "8333dfd5ce6b4d7c9cccf95ea50fe2b57da1d2b7"
        ],
        [
            "rewrite (mul_comm a), mul_assoc.",
            "VernacExtend",
            "dfece1f5227db37b726e709b71fac635ca5abdf3"
        ],
        [
            "now apply divide_mul_l.",
            "VernacExtend",
            "e24255f96c1fa29a407b78d0d7c8b2c805766ccc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_mul_mono_r : forall n m p, gcd (n*p) (m*p) == gcd n m * p.",
            "VernacStartTheoremProof",
            "bea63b7c710e356cd81656a20329287c6b6e1cdc"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite !(mul_comm _ p).",
            "VernacExtend",
            "c1c406e146daf5d782dea67cc7474727d0c12304"
        ],
        [
            "apply gcd_mul_mono_l.",
            "VernacExtend",
            "5e576ab654b48499fb60f9b1b88c84bf5a1edb5c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gauss : forall n m p, (n | m * p) -> gcd n m == 1 -> (n | p).",
            "VernacStartTheoremProof",
            "87390983d9483df33ec336475c0d0b302d2bcdab"
        ],
        [
            "intros n m p H G.",
            "VernacExtend",
            "77fc3f9ddd26b9360a2f0e47f3c00b7dc11e68e6"
        ],
        [
            "destruct (eq_0_gt_0_cases n) as [EQ|LT].",
            "VernacExtend",
            "1f8af5e6397777e336e4e63fce16d027cf58b4a5"
        ],
        [
            "rewrite EQ in *.",
            "VernacExtend",
            "ffd7cd0b693f60169c5a8dd5b12ac635cf9ed012"
        ],
        [
            "rewrite gcd_0_l in G.",
            "VernacExtend",
            "3daf7c870d5093a6e44a1354fd5fec2bfb0f6f66"
        ],
        [
            "now rewrite <- (mul_1_l p), <- G.",
            "VernacExtend",
            "b05298d845543aec03b3e11bd2cff027d6c59ceb"
        ],
        [
            "destruct (gcd_bezout_pos n m) as (a & b & EQ); trivial.",
            "VernacExtend",
            "5ac318864e6c17b28062935969921025f417a012"
        ],
        [
            "rewrite G in EQ.",
            "VernacExtend",
            "d87889ffcc61ea0d6151cde6f4633debc6265fa4"
        ],
        [
            "apply divide_add_cancel_r with (m*p*b).",
            "VernacExtend",
            "3d4aa9540f234357b6a6751e1732c0c66dbd43d1"
        ],
        [
            "now apply divide_mul_l.",
            "VernacExtend",
            "e24255f96c1fa29a407b78d0d7c8b2c805766ccc"
        ],
        [
            "rewrite (mul_comm _ b), mul_assoc.",
            "VernacExtend",
            "ed30845c22de64bf9db2805cfc6345a2f4b33944"
        ],
        [
            "rewrite <- (mul_1_l p) at 2.",
            "VernacExtend",
            "7b16902e059196141ba7deb92fb8b5f26c092a6e"
        ],
        [
            "rewrite <- mul_add_distr_r, add_comm, <- EQ.",
            "VernacExtend",
            "b3e011ae579da0041cabbd52ea2577b7077a58b0"
        ],
        [
            "now apply divide_mul_l, divide_factor_r.",
            "VernacExtend",
            "ef40699aadfe47077cdc938367c89c31ee28da99"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_mul_split : forall n m p, n ~= 0 -> (n | m * p) -> exists q r, n == q*r /\\ (q | m) /\\ (r | p).",
            "VernacStartTheoremProof",
            "2caf6b4bcb6010fc6def4944ecc7b43622e17185"
        ],
        [
            "intros n m p Hn H.",
            "VernacExtend",
            "4e3de20c96661a80be5cb817095f7e7ad7f95355"
        ],
        [
            "assert (G := gcd_nonneg n m).",
            "VernacExtend",
            "24ba97302c1440a963d7818c1ed39d13d5678acb"
        ],
        [
            "le_elim G.",
            "VernacExtend",
            "f694de1b46b900b99f17f76d14cf52ae23f90ec8"
        ],
        [
            "destruct (gcd_divide_l n m) as (q,Hq).",
            "VernacExtend",
            "655a013fd28e5b2cff47d91004a3b26f2d20da16"
        ],
        [
            "exists (gcd n m).",
            "VernacExtend",
            "be0f899a690553f0997e7ff25252ee6f6a59b401"
        ],
        [
            "exists q.",
            "VernacExtend",
            "4b16c752cd7c11bacf99e556cf412cae1f21d016"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now rewrite mul_comm.",
            "VernacExtend",
            "e381ca9335c310c57051601bf6f800b499d27dfd"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply gcd_divide_r.",
            "VernacExtend",
            "23f22b4be94ee31f90f559afe9253eb0db533a6b"
        ],
        [
            "destruct (gcd_divide_r n m) as (r,Hr).",
            "VernacExtend",
            "94533fd5f0f47145b564a3021dc9a8a07230afb6"
        ],
        [
            "rewrite Hr in H.",
            "VernacExtend",
            "ae6eeb544bb39b7242ab88aa8f9f9c2b7895e49c"
        ],
        [
            "rewrite Hq in H at 1.",
            "VernacExtend",
            "f1b51844c8f7d05284339cde9c0c116a7d18d6d0"
        ],
        [
            "rewrite mul_shuffle0 in H.",
            "VernacExtend",
            "154b2416c2a1231e98028f2be4190a2b07ec88c4"
        ],
        [
            "apply mul_divide_cancel_r in H; [|order].",
            "VernacExtend",
            "647d2cbd179f1f39428c398b5b9ddffb0b52a8ff"
        ],
        [
            "apply gauss with r; trivial.",
            "VernacExtend",
            "59e35dc971dff4f3430f9c0eb643a63a817724d9"
        ],
        [
            "apply mul_cancel_r with (gcd n m); [order|].",
            "VernacExtend",
            "0a364e288f03d8d938ae1b01b975c12148c258f3"
        ],
        [
            "rewrite mul_1_l.",
            "VernacExtend",
            "7da68bdebc60a8aac00162920413e78a31e97766"
        ],
        [
            "rewrite <- gcd_mul_mono_r, <- Hq, <- Hr; order.",
            "VernacExtend",
            "2f913d7ca7d58572c7e501b6e31b58cce560df03"
        ],
        [
            "symmetry in G.",
            "VernacExtend",
            "a015afd298ee2080a08d65dbdca732ee9826d538"
        ],
        [
            "apply gcd_eq_0 in G.",
            "VernacExtend",
            "11292fd2ccc4880cd1a9e1b389517e4d7fb3496a"
        ],
        [
            "destruct G as (Hn',_); order.",
            "VernacExtend",
            "5f81e1017657028f30ae9fd1ded1b7f559801aa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NGcdProp.",
            "VernacEndSegment",
            "c7298750e7e41271195b3c7bcd38022c86603c6c"
        ]
    ],
    "proofs": [
        {
            "name": "divide_add_cancel_r",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros n m p (q,Hq) (r,Hr).",
                        "VernacExtend",
                        "729d667c9c0b9105d209e47cbc2ac2e6b43c077b"
                    ]
                },
                {
                    "command": [
                        "exists (r-q).",
                        "VernacExtend",
                        "3f9d74daacaea94a3b9ac242492763eb43d40868"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_sub_distr_r, <- Hq, <- Hr.",
                        "VernacExtend",
                        "039b270e4f2f6b8090ef89e04d0770a6b40adda2"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_comm, add_sub.",
                        "VernacExtend",
                        "4d49399d557c8364c01baf89e679a58fdd5850f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_sub_r",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros n m p H H'.",
                        "VernacExtend",
                        "9ec9e45e42db7e71aa7539f895b5aa2bdf5ce9da"
                    ]
                },
                {
                    "command": [
                        "destruct (le_ge_cases m p) as [LE|LE].",
                        "VernacExtend",
                        "e92d63a2c349d21c4dbaac4f6225df39668567ea"
                    ]
                },
                {
                    "command": [
                        "apply sub_0_le in LE.",
                        "VernacExtend",
                        "f2222487a9ad8b201930701e3011d6eb50da0188"
                    ]
                },
                {
                    "command": [
                        "rewrite LE.",
                        "VernacExtend",
                        "3cc313578065747e11f555dbc986d2e04ca9cc02"
                    ]
                },
                {
                    "command": [
                        "apply divide_0_r.",
                        "VernacExtend",
                        "dd28a5c443063a2e06d448357840c5452dc6c2e8"
                    ]
                },
                {
                    "command": [
                        "apply divide_add_cancel_r with p; trivial.",
                        "VernacExtend",
                        "92fe36dfd3ff2e0d2a32837f181ee20834cc6890"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_comm, sub_add.",
                        "VernacExtend",
                        "94d5b78b13afcbe6e7afae84386041db9b153009"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_add_mult_diag_r",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply gcd_unique_alt'.",
                        "VernacExtend",
                        "379e0bfa779a45907f8eccce89fddf29dc81b3a4"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite gcd_divide_iff.",
                        "VernacExtend",
                        "a823f0f861635bdab0599454a77abff29845d126"
                    ]
                },
                {
                    "command": [
                        "split; intros (U,V); split; trivial.",
                        "VernacExtend",
                        "156a2eeca4553bc63df006d06c73e503f6ebece3"
                    ]
                },
                {
                    "command": [
                        "apply divide_add_r; trivial.",
                        "VernacExtend",
                        "177a3c8874717a6f6791d1fc25b5399493c643fe"
                    ]
                },
                {
                    "command": [
                        "now apply divide_mul_r.",
                        "VernacExtend",
                        "59182b8aa95d807eef673553f442fc6911449a39"
                    ]
                },
                {
                    "command": [
                        "apply divide_add_cancel_r with (p*n); trivial.",
                        "VernacExtend",
                        "a39d71a1c14b79e51000784b146a1539f44dd5de"
                    ]
                },
                {
                    "command": [
                        "now apply divide_mul_r.",
                        "VernacExtend",
                        "59182b8aa95d807eef673553f442fc6911449a39"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_comm.",
                        "VernacExtend",
                        "49059393716b66357ecc6aee8e8a4481895a2fa1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_add_diag_r",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_1_l n) at 2.",
                        "VernacExtend",
                        "4e727a82ff5e72796ecad3c582b5501f90548b53"
                    ]
                },
                {
                    "command": [
                        "apply gcd_add_mult_diag_r.",
                        "VernacExtend",
                        "0a226dbe8deb324b34f3bb3dad78c5bbdf1bc7db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_sub_diag_r",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros n m H.",
                        "VernacExtend",
                        "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (sub_add n m H) at 1.",
                        "VernacExtend",
                        "80601cad8e7eeb5bb769a0574b5814a5f18658f8"
                    ]
                },
                {
                    "command": [
                        "apply gcd_add_diag_r.",
                        "VernacExtend",
                        "a4bab210f0c7c114aa0a3e39e50908e7a62326ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Bezout_wd",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "unfold Bezout.",
                        "VernacExtend",
                        "7d8fa7e016164ccb61eb30dbbba7bf26b637ab4b"
                    ]
                },
                {
                    "command": [
                        "intros x x' Hx y y' Hy z z' Hz.",
                        "VernacExtend",
                        "f6776f72330c7156d501e19269ef26731b253cff"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Hx.",
                        "VernacExtend",
                        "4dcd3a21be5569ed9ca96137ea838c4852d785a3"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Hy.",
                        "VernacExtend",
                        "763501edc03be113f62cef19b8290a6945e0a037"
                    ]
                },
                {
                    "command": [
                        "now setoid_rewrite Hz.",
                        "VernacExtend",
                        "6fc41d52d1d5c9e2aa6a190b3fe7cbc082418926"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bezout_1_gcd",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros n m (q & r & H).",
                        "VernacExtend",
                        "2db649cfed7a92389b2f9aad7f593a1c76cb1801"
                    ]
                },
                {
                    "command": [
                        "apply gcd_unique; trivial using divide_1_l, le_0_1.",
                        "VernacExtend",
                        "a885c39ee87a0ce5028d44beb54f6d83100ff59a"
                    ]
                },
                {
                    "command": [
                        "intros p Hn Hm.",
                        "VernacExtend",
                        "e4cbec44ff72f54c4476921f77d326b5621c2b55"
                    ]
                },
                {
                    "command": [
                        "apply divide_add_cancel_r with (r*m).",
                        "VernacExtend",
                        "3c529a9b40f89006bd606e1f1d39dc3ca4be1c88"
                    ]
                },
                {
                    "command": [
                        "now apply divide_mul_r.",
                        "VernacExtend",
                        "59182b8aa95d807eef673553f442fc6911449a39"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm, <- H.",
                        "VernacExtend",
                        "c789a2ab746dbb20e7309b8de62f91fe486681a6"
                    ]
                },
                {
                    "command": [
                        "now apply divide_mul_r.",
                        "VernacExtend",
                        "59182b8aa95d807eef673553f442fc6911449a39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_bezout_pos_pos",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intros n Hn.",
                        "VernacExtend",
                        "4a15d287eb245c84eabfb58cba2e377ac025029a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_succ_l, <- one_succ in Hn.",
                        "VernacExtend",
                        "be64ffa2c9347dbe86373787c95089f84c5e167b"
                    ]
                },
                {
                    "command": [
                        "pattern n.",
                        "VernacExtend",
                        "08c70a187492b2b293b2a787a83b543d8b736fa0"
                    ]
                },
                {
                    "command": [
                        "apply strong_right_induction with (z:=1); trivial.",
                        "VernacExtend",
                        "0a265dfc027b72a16edb4df317b2a66ffdd71fb3"
                    ]
                },
                {
                    "command": [
                        "unfold Bezout.",
                        "VernacExtend",
                        "7d8fa7e016164ccb61eb30dbbba7bf26b637ab4b"
                    ]
                },
                {
                    "command": [
                        "solve_proper.",
                        "VernacExtend",
                        "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
                    ]
                },
                {
                    "command": [
                        "clear n Hn.",
                        "VernacExtend",
                        "4816a25feb4b411159f5c0966c1e7caf220a499e"
                    ]
                },
                {
                    "command": [
                        "intros n Hn IHn.",
                        "VernacExtend",
                        "83f0c5ccbb78a3e550773af22ed70028046db1d5"
                    ]
                },
                {
                    "command": [
                        "intros m Hm.",
                        "VernacExtend",
                        "34a21a1070c8e8d8f861a30c87e3cd7909e131c5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_succ_l, <- one_succ in Hm.",
                        "VernacExtend",
                        "eace856c1e54eb4da48237e0a8e3a4c7c11ef932"
                    ]
                },
                {
                    "command": [
                        "pattern m.",
                        "VernacExtend",
                        "d2534544fbb9a57341a246c5440b83ff8b1c99fc"
                    ]
                },
                {
                    "command": [
                        "apply strong_right_induction with (z:=1); trivial.",
                        "VernacExtend",
                        "0a265dfc027b72a16edb4df317b2a66ffdd71fb3"
                    ]
                },
                {
                    "command": [
                        "unfold Bezout.",
                        "VernacExtend",
                        "7d8fa7e016164ccb61eb30dbbba7bf26b637ab4b"
                    ]
                },
                {
                    "command": [
                        "solve_proper.",
                        "VernacExtend",
                        "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
                    ]
                },
                {
                    "command": [
                        "clear m Hm.",
                        "VernacExtend",
                        "5907334ad0bd1a7f73eb2ebceecd14187eea07f9"
                    ]
                },
                {
                    "command": [
                        "intros m Hm IHm.",
                        "VernacExtend",
                        "97ac13c1561aabb5c238c08383a517ed338cc79d"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_trichotomy n m) as [LT|[EQ|LT]].",
                        "VernacExtend",
                        "6e64597bd917b86b3683eb395cd0c63f01c7cd15"
                    ]
                },
                {
                    "command": [
                        "destruct (IHm (m-n)) as ((a & b & EQ), (a' & b' & EQ')).",
                        "VernacExtend",
                        "47f4eb463822c3d6fb5eb3392e059614439f6d9d"
                    ]
                },
                {
                    "command": [
                        "rewrite one_succ, le_succ_l.",
                        "VernacExtend",
                        "2e366cf2d43530dc1de760691f999c7c059075ce"
                    ]
                },
                {
                    "command": [
                        "apply lt_add_lt_sub_l; now nzsimpl.",
                        "VernacExtend",
                        "2ac5a2a6202474069ddd98211972ca6805e8d3f8"
                    ]
                },
                {
                    "command": [
                        "apply sub_lt; order'.",
                        "VernacExtend",
                        "eebafb5d086e9e31d940cd076b9d92ba291763b4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exists (a+b).",
                        "VernacExtend",
                        "c8e835c498f430d48cf0760448d174c45438c1e7"
                    ]
                },
                {
                    "command": [
                        "exists b.",
                        "VernacExtend",
                        "131ab3b1f8dceeba7698c539872e59e8413fa321"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_add_distr_r, EQ, mul_sub_distr_l, <- add_assoc.",
                        "VernacExtend",
                        "99a81ac517315a9af83fd38eb096bc5f4491ce33"
                    ]
                },
                {
                    "command": [
                        "rewrite gcd_sub_diag_r by order.",
                        "VernacExtend",
                        "19aec0c6d3945dd6a748122678e83cd543a69d44"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add.",
                        "VernacExtend",
                        "cc89d6d3d76f99fe134079c6846321fb3a3b4f6c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply mul_le_mono_l; order.",
                        "VernacExtend",
                        "746557f3dc2662d5dcc4b11b4be147b70fe558b3"
                    ]
                },
                {
                    "command": [
                        "exists a'.",
                        "VernacExtend",
                        "c538f1e84054c7af2082d20e9d440f432df7145c"
                    ]
                },
                {
                    "command": [
                        "exists (a'+b').",
                        "VernacExtend",
                        "ac910bf48d836110987d050d7f6511e99e46f231"
                    ]
                },
                {
                    "command": [
                        "rewrite gcd_sub_diag_r in EQ' by order.",
                        "VernacExtend",
                        "c899ded7893b0ac5c63be502804449d6c3a7dc8d"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_comm a'), mul_add_distr_r, add_assoc, <- EQ'.",
                        "VernacExtend",
                        "85b7ce993e575bf8b35a1ea192407d072833eec2"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_sub_distr_l, sub_add.",
                        "VernacExtend",
                        "7a2612eaadfd31181de605c65840942cba2e3b5b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply mul_le_mono_l; order.",
                        "VernacExtend",
                        "746557f3dc2662d5dcc4b11b4be147b70fe558b3"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ.",
                        "VernacExtend",
                        "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
                    ]
                },
                {
                    "command": [
                        "rewrite gcd_diag.",
                        "VernacExtend",
                        "b939a6d117a8b987541694250677ceb9d7561105"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "exists 1.",
                        "VernacExtend",
                        "18eb310858be5acae7304d0d9ed33063568db310"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl.",
                        "VernacExtend",
                        "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
                    ]
                },
                {
                    "command": [
                        "exists 1.",
                        "VernacExtend",
                        "18eb310858be5acae7304d0d9ed33063568db310"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl.",
                        "VernacExtend",
                        "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
                    ]
                },
                {
                    "command": [
                        "rewrite gcd_comm, and_comm.",
                        "VernacExtend",
                        "fbe45afdf89fe9c60ddce50cc5289e2f66160851"
                    ]
                },
                {
                    "command": [
                        "apply IHn; trivial.",
                        "VernacExtend",
                        "f4d2d2dc356de9c0093fe2988cf483d00ee58eb3"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- le_succ_l, <- one_succ.",
                        "VernacExtend",
                        "166ab3f1d4d2e96d70092110d3164c0287596b3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_bezout_pos",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "intros n m Hn.",
                        "VernacExtend",
                        "4ea7964435753d0708d2436cc340541c65cb37f7"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_0_gt_0_cases m) as [EQ|LT].",
                        "VernacExtend",
                        "eb464e550498172731721f4a6c42bc30197b97c8"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ, gcd_0_r.",
                        "VernacExtend",
                        "7df1b6bf4591aaab35375521748958536717d45b"
                    ]
                },
                {
                    "command": [
                        "exists 1.",
                        "VernacExtend",
                        "18eb310858be5acae7304d0d9ed33063568db310"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl.",
                        "VernacExtend",
                        "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
                    ]
                },
                {
                    "command": [
                        "now apply gcd_bezout_pos_pos.",
                        "VernacExtend",
                        "b1151e85a03e77906aa33d218306e002df586a1c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_bezout",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_0_gt_0_cases n) as [EQ|LT].",
                        "VernacExtend",
                        "1f8af5e6397777e336e4e63fce16d027cf58b4a5"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ, gcd_0_l.",
                        "VernacExtend",
                        "841d3ee5e3f8858765a3584e2647f6464dc53554"
                    ]
                },
                {
                    "command": [
                        "exists 1.",
                        "VernacExtend",
                        "18eb310858be5acae7304d0d9ed33063568db310"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl.",
                        "VernacExtend",
                        "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "now apply gcd_bezout_pos.",
                        "VernacExtend",
                        "be9617bb2ae7c899fd8ce19a311ea210d1779c16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_mul_mono_l",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "intros n m p.",
                        "VernacExtend",
                        "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
                    ]
                },
                {
                    "command": [
                        "apply gcd_unique'.",
                        "VernacExtend",
                        "bf0d881e920c3210e881fbfa3bec8d5720d15d23"
                    ]
                },
                {
                    "command": [
                        "apply mul_divide_mono_l, gcd_divide_l.",
                        "VernacExtend",
                        "7e47c158ddced51b65ef9479672c2d44253353e8"
                    ]
                },
                {
                    "command": [
                        "apply mul_divide_mono_l, gcd_divide_r.",
                        "VernacExtend",
                        "2959bd0e94e683f16ffe6db8f03443e9f3bd737c"
                    ]
                },
                {
                    "command": [
                        "intros q H H'.",
                        "VernacExtend",
                        "eb87e09373287bffadbd92b281b340ac830e93b3"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_0_gt_0_cases n) as [EQ|LT].",
                        "VernacExtend",
                        "1f8af5e6397777e336e4e63fce16d027cf58b4a5"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ in *.",
                        "VernacExtend",
                        "ffd7cd0b693f60169c5a8dd5b12ac635cf9ed012"
                    ]
                },
                {
                    "command": [
                        "now rewrite gcd_0_l.",
                        "VernacExtend",
                        "a08bd28c3affde3cbd732447cd1e072bb75f459e"
                    ]
                },
                {
                    "command": [
                        "destruct (gcd_bezout_pos n m) as (a & b & EQ); trivial.",
                        "VernacExtend",
                        "5ac318864e6c17b28062935969921025f417a012"
                    ]
                },
                {
                    "command": [
                        "apply divide_add_cancel_r with (p*m*b).",
                        "VernacExtend",
                        "96632059627938ace92008f472976986ad27ebb7"
                    ]
                },
                {
                    "command": [
                        "now apply divide_mul_l.",
                        "VernacExtend",
                        "e24255f96c1fa29a407b78d0d7c8b2c805766ccc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mul_assoc, <- mul_add_distr_l, add_comm, (mul_comm m), <- EQ.",
                        "VernacExtend",
                        "8333dfd5ce6b4d7c9cccf95ea50fe2b57da1d2b7"
                    ]
                },
                {
                    "command": [
                        "rewrite (mul_comm a), mul_assoc.",
                        "VernacExtend",
                        "dfece1f5227db37b726e709b71fac635ca5abdf3"
                    ]
                },
                {
                    "command": [
                        "now apply divide_mul_l.",
                        "VernacExtend",
                        "e24255f96c1fa29a407b78d0d7c8b2c805766ccc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_mul_mono_r",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite !(mul_comm _ p).",
                        "VernacExtend",
                        "c1c406e146daf5d782dea67cc7474727d0c12304"
                    ]
                },
                {
                    "command": [
                        "apply gcd_mul_mono_l.",
                        "VernacExtend",
                        "5e576ab654b48499fb60f9b1b88c84bf5a1edb5c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gauss",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "intros n m p H G.",
                        "VernacExtend",
                        "77fc3f9ddd26b9360a2f0e47f3c00b7dc11e68e6"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_0_gt_0_cases n) as [EQ|LT].",
                        "VernacExtend",
                        "1f8af5e6397777e336e4e63fce16d027cf58b4a5"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ in *.",
                        "VernacExtend",
                        "ffd7cd0b693f60169c5a8dd5b12ac635cf9ed012"
                    ]
                },
                {
                    "command": [
                        "rewrite gcd_0_l in G.",
                        "VernacExtend",
                        "3daf7c870d5093a6e44a1354fd5fec2bfb0f6f66"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- (mul_1_l p), <- G.",
                        "VernacExtend",
                        "b05298d845543aec03b3e11bd2cff027d6c59ceb"
                    ]
                },
                {
                    "command": [
                        "destruct (gcd_bezout_pos n m) as (a & b & EQ); trivial.",
                        "VernacExtend",
                        "5ac318864e6c17b28062935969921025f417a012"
                    ]
                },
                {
                    "command": [
                        "rewrite G in EQ.",
                        "VernacExtend",
                        "d87889ffcc61ea0d6151cde6f4633debc6265fa4"
                    ]
                },
                {
                    "command": [
                        "apply divide_add_cancel_r with (m*p*b).",
                        "VernacExtend",
                        "3d4aa9540f234357b6a6751e1732c0c66dbd43d1"
                    ]
                },
                {
                    "command": [
                        "now apply divide_mul_l.",
                        "VernacExtend",
                        "e24255f96c1fa29a407b78d0d7c8b2c805766ccc"
                    ]
                },
                {
                    "command": [
                        "rewrite (mul_comm _ b), mul_assoc.",
                        "VernacExtend",
                        "ed30845c22de64bf9db2805cfc6345a2f4b33944"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_1_l p) at 2.",
                        "VernacExtend",
                        "7b16902e059196141ba7deb92fb8b5f26c092a6e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mul_add_distr_r, add_comm, <- EQ.",
                        "VernacExtend",
                        "b3e011ae579da0041cabbd52ea2577b7077a58b0"
                    ]
                },
                {
                    "command": [
                        "now apply divide_mul_l, divide_factor_r.",
                        "VernacExtend",
                        "ef40699aadfe47077cdc938367c89c31ee28da99"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_mul_split",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "intros n m p Hn H.",
                        "VernacExtend",
                        "4e3de20c96661a80be5cb817095f7e7ad7f95355"
                    ]
                },
                {
                    "command": [
                        "assert (G := gcd_nonneg n m).",
                        "VernacExtend",
                        "24ba97302c1440a963d7818c1ed39d13d5678acb"
                    ]
                },
                {
                    "command": [
                        "le_elim G.",
                        "VernacExtend",
                        "f694de1b46b900b99f17f76d14cf52ae23f90ec8"
                    ]
                },
                {
                    "command": [
                        "destruct (gcd_divide_l n m) as (q,Hq).",
                        "VernacExtend",
                        "655a013fd28e5b2cff47d91004a3b26f2d20da16"
                    ]
                },
                {
                    "command": [
                        "exists (gcd n m).",
                        "VernacExtend",
                        "be0f899a690553f0997e7ff25252ee6f6a59b401"
                    ]
                },
                {
                    "command": [
                        "exists q.",
                        "VernacExtend",
                        "4b16c752cd7c11bacf99e556cf412cae1f21d016"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_comm.",
                        "VernacExtend",
                        "e381ca9335c310c57051601bf6f800b499d27dfd"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply gcd_divide_r.",
                        "VernacExtend",
                        "23f22b4be94ee31f90f559afe9253eb0db533a6b"
                    ]
                },
                {
                    "command": [
                        "destruct (gcd_divide_r n m) as (r,Hr).",
                        "VernacExtend",
                        "94533fd5f0f47145b564a3021dc9a8a07230afb6"
                    ]
                },
                {
                    "command": [
                        "rewrite Hr in H.",
                        "VernacExtend",
                        "ae6eeb544bb39b7242ab88aa8f9f9c2b7895e49c"
                    ]
                },
                {
                    "command": [
                        "rewrite Hq in H at 1.",
                        "VernacExtend",
                        "f1b51844c8f7d05284339cde9c0c116a7d18d6d0"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_shuffle0 in H.",
                        "VernacExtend",
                        "154b2416c2a1231e98028f2be4190a2b07ec88c4"
                    ]
                },
                {
                    "command": [
                        "apply mul_divide_cancel_r in H; [|order].",
                        "VernacExtend",
                        "647d2cbd179f1f39428c398b5b9ddffb0b52a8ff"
                    ]
                },
                {
                    "command": [
                        "apply gauss with r; trivial.",
                        "VernacExtend",
                        "59e35dc971dff4f3430f9c0eb643a63a817724d9"
                    ]
                },
                {
                    "command": [
                        "apply mul_cancel_r with (gcd n m); [order|].",
                        "VernacExtend",
                        "0a364e288f03d8d938ae1b01b975c12148c258f3"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_1_l.",
                        "VernacExtend",
                        "7da68bdebc60a8aac00162920413e78a31e97766"
                    ]
                },
                {
                    "command": [
                        "rewrite <- gcd_mul_mono_r, <- Hq, <- Hr; order.",
                        "VernacExtend",
                        "2f913d7ca7d58572c7e501b6e31b58cce560df03"
                    ]
                },
                {
                    "command": [
                        "symmetry in G.",
                        "VernacExtend",
                        "a015afd298ee2080a08d65dbdca732ee9826d538"
                    ]
                },
                {
                    "command": [
                        "apply gcd_eq_0 in G.",
                        "VernacExtend",
                        "11292fd2ccc4880cd1a9e1b389517e4d7fb3496a"
                    ]
                },
                {
                    "command": [
                        "destruct G as (Hn',_); order.",
                        "VernacExtend",
                        "5f81e1017657028f30ae9fd1ded1b7f559801aa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}