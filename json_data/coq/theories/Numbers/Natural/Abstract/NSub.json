{
    "filename": "theories/Numbers/Natural/Abstract/NSub.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export NMulOrder.",
            "VernacRequire",
            "f3cb14b1ced3b18921dc2c045a275ce6c53e82f3"
        ],
        [
            "Module Type NSubProp (Import N : NAxiomsMiniSig').",
            "VernacDeclareModuleType",
            "9100554d24f3b4a122cba80362464d30a77519e0"
        ],
        [
            "Include NMulOrderProp N.",
            "VernacInclude",
            "0fcb63acaa2628d5a200a0dd21ae7d4f20701347"
        ],
        [
            "Theorem sub_0_l : forall n, 0 - n == 0.",
            "VernacStartTheoremProof",
            "49d33f4140a1677e3a4c5d449533591583234411"
        ],
        [
            "induct n.",
            "VernacExtend",
            "65da2a07da20377fedd046879f630e8441375e8e"
        ],
        [
            "apply sub_0_r.",
            "VernacExtend",
            "f49d6ddb4a5f22b07bb085ae16206468406bd5d9"
        ],
        [
            "intros n IH; rewrite sub_succ_r; rewrite IH.",
            "VernacExtend",
            "d84a89f84752ca3777ab5445a4a4836580f1016e"
        ],
        [
            "now apply pred_0.",
            "VernacExtend",
            "5cd05a9472a2233260d554be2adcbcaafa140189"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_succ : forall n m, S n - S m == n - m.",
            "VernacStartTheoremProof",
            "9dfa4071feec611f32ad762234cd0bbe7b0a5be3"
        ],
        [
            "intro n; induct m.",
            "VernacExtend",
            "9984f89f271da89eda153e537c6793a27a70a1ed"
        ],
        [
            "rewrite sub_succ_r.",
            "VernacExtend",
            "dc4bc37c2faa50bb319807e493cad07466818783"
        ],
        [
            "do 2 rewrite sub_0_r.",
            "VernacExtend",
            "21e2a70f24cd3ca9bcef53f64e18bfba00ad458e"
        ],
        [
            "now rewrite pred_succ.",
            "VernacExtend",
            "ed6c638cb412421a2f99f27d9f7f094126f2e5fc"
        ],
        [
            "intros m IH.",
            "VernacExtend",
            "3d69923b9215397a1bafaf89039400f0b4977733"
        ],
        [
            "rewrite sub_succ_r.",
            "VernacExtend",
            "dc4bc37c2faa50bb319807e493cad07466818783"
        ],
        [
            "rewrite IH.",
            "VernacExtend",
            "dbf4f765dab656705bc8df8600fa3b3017a20858"
        ],
        [
            "now rewrite sub_succ_r.",
            "VernacExtend",
            "18bd42c0575347b7bb12f4d0e024caf5faf3a9a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_diag : forall n, n - n == 0.",
            "VernacStartTheoremProof",
            "08f752ecf3c223d7300bbffdec1fca4273a304de"
        ],
        [
            "induct n.",
            "VernacExtend",
            "65da2a07da20377fedd046879f630e8441375e8e"
        ],
        [
            "apply sub_0_r.",
            "VernacExtend",
            "f49d6ddb4a5f22b07bb085ae16206468406bd5d9"
        ],
        [
            "intros n IH; rewrite sub_succ; now rewrite IH.",
            "VernacExtend",
            "b9e70bc92634a6c521452f9c3db1d05cac3c9df9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_gt : forall n m, n > m -> n - m ~= 0.",
            "VernacStartTheoremProof",
            "914b87b8cc66248b7366f812db1a3bb30e074dc8"
        ],
        [
            "intros n m H; elim H using lt_ind_rel; clear n m H.",
            "VernacExtend",
            "b0f501fac9fd25c44c620f4fc307fa684e8937b6"
        ],
        [
            "solve_proper.",
            "VernacExtend",
            "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
        ],
        [
            "intro; rewrite sub_0_r; apply neq_succ_0.",
            "VernacExtend",
            "8a4a7ac20484c9aded6d10277f7f7fc6eea6bd3a"
        ],
        [
            "intros; now rewrite sub_succ.",
            "VernacExtend",
            "fdf8a3cd3b55929c4bd3379653ca4171682ce9e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_sub_assoc : forall n m p, p <= m -> n + (m - p) == (n + m) - p.",
            "VernacStartTheoremProof",
            "c7c186faa7b7568cda48f79cb10ace84bfab59a5"
        ],
        [
            "intros n m p; induct p.",
            "VernacExtend",
            "4163e5e86ad51cf8258a2c27a78c8627aac6c806"
        ],
        [
            "intro; now do 2 rewrite sub_0_r.",
            "VernacExtend",
            "c1ab8deac667708997a86634a99cd35d3b322b2a"
        ],
        [
            "intros p IH H.",
            "VernacExtend",
            "ede56af2c77f1626095ce9cee88776614031bdb8"
        ],
        [
            "do 2 rewrite sub_succ_r.",
            "VernacExtend",
            "833e6206652177f2b4866c54e732008fdfb19d5e"
        ],
        [
            "rewrite <- IH by (apply lt_le_incl; now apply le_succ_l).",
            "VernacExtend",
            "c51a3e309068adbb7499d9099ad136e43c8d1b4e"
        ],
        [
            "rewrite add_pred_r by (apply sub_gt; now apply le_succ_l).",
            "VernacExtend",
            "0944d6d7d9710234e49146d93d346e39e6404071"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_succ_l : forall n m, n <= m -> S m - n == S (m - n).",
            "VernacStartTheoremProof",
            "5eba9e1ae43884dde06ec9fdac5bb063d7a29db5"
        ],
        [
            "intros n m H.",
            "VernacExtend",
            "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
        ],
        [
            "rewrite <- (add_1_l m).",
            "VernacExtend",
            "9d737f24fb7930a44f159062ca7f60bc69fe614a"
        ],
        [
            "rewrite <- (add_1_l (m - n)).",
            "VernacExtend",
            "425af6f2d7b2825f3591cb921f14c2f8980503a9"
        ],
        [
            "symmetry; now apply add_sub_assoc.",
            "VernacExtend",
            "cbbbda365b09297183af20daa909f23df66bed3c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_sub : forall n m, (n + m) - m == n.",
            "VernacStartTheoremProof",
            "cc9e1601d44ff32c1bd250401d4a8f3653a8cf1f"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "rewrite <- add_sub_assoc by (apply le_refl).",
            "VernacExtend",
            "a2d724a1362dba00e5b1f5ac7cdbc661d1fcb327"
        ],
        [
            "rewrite sub_diag; now rewrite add_0_r.",
            "VernacExtend",
            "c603a5cdbfa0629ca30074f22527abfbcc8a65e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_add : forall n m, n <= m -> (m - n) + n == m.",
            "VernacStartTheoremProof",
            "9eaae97871b2b4034498991b828e77c2fa301689"
        ],
        [
            "intros n m H.",
            "VernacExtend",
            "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
        ],
        [
            "rewrite add_comm.",
            "VernacExtend",
            "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
        ],
        [
            "rewrite add_sub_assoc by assumption.",
            "VernacExtend",
            "0f162e663dbfd09e84e9a54275b90ccee40d384c"
        ],
        [
            "rewrite add_comm.",
            "VernacExtend",
            "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
        ],
        [
            "apply add_sub.",
            "VernacExtend",
            "08e2ad70532d616faa2ee66112da92e3cb1de6f2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_sub_eq_l : forall n m p, m + p == n -> n - m == p.",
            "VernacStartTheoremProof",
            "cd5b54a67633ef81b796b08e2f13948acdb8a96a"
        ],
        [
            "intros n m p H.",
            "VernacExtend",
            "ed0af612733e8ddfd294f1800ff0547cd2dbb14c"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "assert (H1 : m + p - m == n - m) by now rewrite H.",
            "VernacExtend",
            "b1721e426209bc3f6ff269d236786119db5cb40b"
        ],
        [
            "rewrite add_comm in H1.",
            "VernacExtend",
            "6298cdfb04fb39f1684a3dd0eccb2b012bf5178a"
        ],
        [
            "now rewrite add_sub in H1.",
            "VernacExtend",
            "4fda0094ac0e5e2b785d2c350c490e7934527b2c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_sub_eq_r : forall n m p, m + p == n -> n - p == m.",
            "VernacStartTheoremProof",
            "4cd332409a4b32ccf8aac270abe36d0e7d99e09d"
        ],
        [
            "intros n m p H; rewrite add_comm in H; now apply add_sub_eq_l.",
            "VernacExtend",
            "33e9e1fa1b02c4ac9d32e532a069c5d8d3df94c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_sub_eq_nz : forall n m p, p ~= 0 -> n - m == p -> m + p == n.",
            "VernacStartTheoremProof",
            "10a94f0de6d8264e3a8537a6a0b107c1c2273f72"
        ],
        [
            "intros n m p H; double_induct n m.",
            "VernacExtend",
            "3ee1f3b4cdf30d7c781dea862da2277a5cd78e50"
        ],
        [
            "intros m H1; rewrite sub_0_l in H1.",
            "VernacExtend",
            "472771521838578c6073e35925ba4ad0ba27ac35"
        ],
        [
            "symmetry in H1; false_hyp H1 H.",
            "VernacExtend",
            "0abc069ea605307f55611bda4d7e34817a93eca3"
        ],
        [
            "intro n; rewrite sub_0_r; now rewrite add_0_l.",
            "VernacExtend",
            "c283e7553abfe33c63a4f6423728766c26253b4e"
        ],
        [
            "intros n m IH H1.",
            "VernacExtend",
            "c8d46abbe36cdd69a757c1f8e02d96165437c410"
        ],
        [
            "rewrite sub_succ in H1.",
            "VernacExtend",
            "7478be1ded2bd96f42c1a36bd1b2ce6292cba14e"
        ],
        [
            "apply IH in H1.",
            "VernacExtend",
            "d32d2a1c9f6eb3312b35ef621419e93471e39cdd"
        ],
        [
            "rewrite add_succ_l; now rewrite H1.",
            "VernacExtend",
            "18e3ca8df3e0381474ff0478f6e842fc6f4289af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_add_distr : forall n m p, n - (m + p) == (n - m) - p.",
            "VernacStartTheoremProof",
            "0e59799b9cd626a9287a786fe36a1d97e2133da4"
        ],
        [
            "intros n m; induct p.",
            "VernacExtend",
            "b4599473412d220debd5a5f907de70b70991777e"
        ],
        [
            "rewrite add_0_r; now rewrite sub_0_r.",
            "VernacExtend",
            "6778643c0813709df10f306a7b192f4a22ab4863"
        ],
        [
            "intros p IH.",
            "VernacExtend",
            "e205c530c6bddefed5c9d93d82891a9720ae067b"
        ],
        [
            "rewrite add_succ_r; do 2 rewrite sub_succ_r.",
            "VernacExtend",
            "beb49f2ac715acbcc450e0cb69848473f7193ae2"
        ],
        [
            "now rewrite IH.",
            "VernacExtend",
            "81522b1f7744483b2809ae9ad2e40d948f1f0b36"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_sub_swap : forall n m p, p <= n -> n + m - p == n - p + m.",
            "VernacStartTheoremProof",
            "9f4ba8e5c37997fa2da4b27928304a98d5cee63a"
        ],
        [
            "intros n m p H.",
            "VernacExtend",
            "ed0af612733e8ddfd294f1800ff0547cd2dbb14c"
        ],
        [
            "rewrite (add_comm n m).",
            "VernacExtend",
            "351acbf670006402305216daaa5c7abd8045bba7"
        ],
        [
            "rewrite <- add_sub_assoc by assumption.",
            "VernacExtend",
            "02114511266d632bf3ce6b9505e89120310f6c43"
        ],
        [
            "now rewrite (add_comm m (n - p)).",
            "VernacExtend",
            "060529d9a8aeae3c895a82b2c05f2ab7d13a74bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_sub_l : forall n m, n - m <= n.",
            "VernacStartTheoremProof",
            "d6cf08ca7de581a74568e319f973f9cd5aca2524"
        ],
        [
            "intro n; induct m.",
            "VernacExtend",
            "9984f89f271da89eda153e537c6793a27a70a1ed"
        ],
        [
            "rewrite sub_0_r; now apply eq_le_incl.",
            "VernacExtend",
            "722a32934769bb9c3900663495573387d10e07c6"
        ],
        [
            "intros m IH.",
            "VernacExtend",
            "3d69923b9215397a1bafaf89039400f0b4977733"
        ],
        [
            "rewrite sub_succ_r.",
            "VernacExtend",
            "dc4bc37c2faa50bb319807e493cad07466818783"
        ],
        [
            "apply le_trans with (n - m); [apply le_pred_l | assumption].",
            "VernacExtend",
            "a74ed954684a00998c9448bf22772df68f04d61f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_0_le : forall n m, n - m == 0 <-> n <= m.",
            "VernacStartTheoremProof",
            "e222ab4f532a75f082053b9a68af9e65b4b05563"
        ],
        [
            "double_induct n m.",
            "VernacExtend",
            "e2854dd0c975186bf45443eb19db68f96a6716c7"
        ],
        [
            "intro m; split; intro; [apply le_0_l | apply sub_0_l].",
            "VernacExtend",
            "739a5cbc7d9af74cb541b040aa5e4c4c2fc67a68"
        ],
        [
            "intro m; rewrite sub_0_r; split; intro H; [false_hyp H neq_succ_0 | false_hyp H nle_succ_0].",
            "VernacExtend",
            "b3900f34c462ad4d2eabadcaaa23aea9fdec388c"
        ],
        [
            "intros n m H.",
            "VernacExtend",
            "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
        ],
        [
            "rewrite <- succ_le_mono.",
            "VernacExtend",
            "604287379f5b9eaad7bd1545d8396dcf324af598"
        ],
        [
            "now rewrite sub_succ.",
            "VernacExtend",
            "e0d43fe62d984f740a309e31848dbf4bc9af0ce0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_add_le : forall n m, n <= n - m + m.",
            "VernacStartTheoremProof",
            "7ff30f7a21e007b2338dd9644e3bbf7677a90ea4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (le_ge_cases n m) as [LE|GE].",
            "VernacExtend",
            "c5247c12652675f42ffde2c579d1e1afb6bb08f8"
        ],
        [
            "rewrite <- sub_0_le in LE.",
            "VernacExtend",
            "96044db6859b0e8a3980158091363102792b85f7"
        ],
        [
            "rewrite LE; nzsimpl.",
            "VernacExtend",
            "6b7f8aada9c6e1b714dd126478424809b13f8b9f"
        ],
        [
            "now rewrite <- sub_0_le.",
            "VernacExtend",
            "c0a27bf95b3f60b38f7bc6b015c6ecdda2966962"
        ],
        [
            "rewrite sub_add by assumption.",
            "VernacExtend",
            "5c76478223e82eb2802fad5bee8e05b8e427ee7e"
        ],
        [
            "apply le_refl.",
            "VernacExtend",
            "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_sub_le_add_r : forall n m p, n - p <= m <-> n <= m + p.",
            "VernacStartTheoremProof",
            "ab1062de5225ccd11685b3e48c3af4db70a8d003"
        ],
        [
            "intros n m p.",
            "VernacExtend",
            "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
        ],
        [
            "split; intros LE.",
            "VernacExtend",
            "21fc030494644fb37895676d674bb46fa45b0773"
        ],
        [
            "rewrite (add_le_mono_r _ _ p) in LE.",
            "VernacExtend",
            "52928e633bec8e147df19bf6397974b174475aa3"
        ],
        [
            "apply le_trans with (n-p+p); auto using sub_add_le.",
            "VernacExtend",
            "5ca67cc4d3abcef1b366db28babcc216cd0da3dc"
        ],
        [
            "destruct (le_ge_cases n p) as [LE'|GE].",
            "VernacExtend",
            "428fc95e8b92f9e8e35c2ee74d978b1946896e2c"
        ],
        [
            "rewrite <- sub_0_le in LE'.",
            "VernacExtend",
            "85b9846ba18365befe8a1ad9a0c54d88b73a05dc"
        ],
        [
            "rewrite LE'.",
            "VernacExtend",
            "a443056b7123f642ba3ee9885a4d83a15541a1a2"
        ],
        [
            "apply le_0_l.",
            "VernacExtend",
            "606697e0b4a3c1f2b140a14e33e5da526da6c9a2"
        ],
        [
            "rewrite (add_le_mono_r _ _ p).",
            "VernacExtend",
            "40506df212cb8da24624864030e235891bc979e8"
        ],
        [
            "now rewrite sub_add.",
            "VernacExtend",
            "1141a7fb0f89eb9b9e67d1e1b0dc793079dc3ffc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_sub_le_add_l : forall n m p, n - m <= p <-> n <= m + p.",
            "VernacStartTheoremProof",
            "2e5908fe41c73ae4a6466e232679b946a20d1993"
        ],
        [
            "intros n m p.",
            "VernacExtend",
            "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
        ],
        [
            "rewrite add_comm; apply le_sub_le_add_r.",
            "VernacExtend",
            "8cdeb0e2b1f5b547000ac49fb70865a740675547"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_sub_lt_add_r : forall n m p, n - p < m -> n < m + p.",
            "VernacStartTheoremProof",
            "86273be9d5b0c2e8a1e69751b977f4f736faefb7"
        ],
        [
            "intros n m p LT.",
            "VernacExtend",
            "4d8aea81ef278e254af1f9a0b8b9772445f008bb"
        ],
        [
            "rewrite (add_lt_mono_r _ _ p) in LT.",
            "VernacExtend",
            "7ddef00134e48b2cca3c642a678791cbbcc8d8a2"
        ],
        [
            "apply le_lt_trans with (n-p+p); auto using sub_add_le.",
            "VernacExtend",
            "ea2b9fd080ac33d9c8a4ab8baef004815a06b778"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_sub_lt_add_l : forall n m p, n - m < p -> n < m + p.",
            "VernacStartTheoremProof",
            "1535510e285eda6a181346e7b8a2bbd0f512879f"
        ],
        [
            "intros n m p.",
            "VernacExtend",
            "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
        ],
        [
            "rewrite add_comm; apply lt_sub_lt_add_r.",
            "VernacExtend",
            "639c2975e520dad810b4682ce67e8ac780b8dae2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_add_le_sub_r : forall n m p, n + p <= m -> n <= m - p.",
            "VernacStartTheoremProof",
            "224ffc1e62c63fbbc685e1e27a2df68c06ce4bc3"
        ],
        [
            "intros n m p LE.",
            "VernacExtend",
            "cbf6e4ec93b75e079bc3799688d44f7f24b67f16"
        ],
        [
            "apply (add_le_mono_r _ _ p).",
            "VernacExtend",
            "ce7e68363f2345622c46f64e1b3f4262c1469751"
        ],
        [
            "rewrite sub_add.",
            "VernacExtend",
            "cc89d6d3d76f99fe134079c6846321fb3a3b4f6c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_trans with (n+p); trivial.",
            "VernacExtend",
            "6ba049141c0968d9d1d191c338efb27d50e494e9"
        ],
        [
            "rewrite <- (add_0_l p) at 1.",
            "VernacExtend",
            "af927834336da11410a826f710bde41b0d842dd9"
        ],
        [
            "rewrite <- add_le_mono_r.",
            "VernacExtend",
            "03e202d809a5ccc541282217bd31360d9d00e957"
        ],
        [
            "apply le_0_l.",
            "VernacExtend",
            "606697e0b4a3c1f2b140a14e33e5da526da6c9a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_add_le_sub_l : forall n m p, n + p <= m -> p <= m - n.",
            "VernacStartTheoremProof",
            "1cf7127d4a273bbcfe729ba48b8d4e546b69c827"
        ],
        [
            "intros n m p.",
            "VernacExtend",
            "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
        ],
        [
            "rewrite add_comm; apply le_add_le_sub_r.",
            "VernacExtend",
            "ec3949c8cf93ef148d33e33b6df8ded4f04cf3b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_add_lt_sub_r : forall n m p, n + p < m <-> n < m - p.",
            "VernacStartTheoremProof",
            "74ce7c81e7e8c4bed5d958041f9c748ba9fe691e"
        ],
        [
            "intros n m p.",
            "VernacExtend",
            "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
        ],
        [
            "destruct (le_ge_cases p m) as [LE|GE].",
            "VernacExtend",
            "3dbe24b573654bdff750e0e710db89f1b6e290e0"
        ],
        [
            "rewrite <- (sub_add p m) at 1 by assumption.",
            "VernacExtend",
            "00fdfa67c644a784e6fb7c145dbf4079c06352f7"
        ],
        [
            "now rewrite <- add_lt_mono_r.",
            "VernacExtend",
            "6cfb5ff9321c3a4d6d75f1a005d6395a9f561930"
        ],
        [
            "assert (GE' := GE).",
            "VernacExtend",
            "a83308e4cb6240830e4a337dba308f9b563e3373"
        ],
        [
            "rewrite <- sub_0_le in GE'; rewrite GE'.",
            "VernacExtend",
            "e731f7c1209b096213041e07ffd08aa89e6986d8"
        ],
        [
            "split; intros LT.",
            "VernacExtend",
            "35c319d576bb1f449d7e8bc9b6973ba269724c64"
        ],
        [
            "elim (lt_irrefl m).",
            "VernacExtend",
            "515305bd7dcb7d9e54a456084804b7388edd4bbf"
        ],
        [
            "apply le_lt_trans with (n+p); trivial.",
            "VernacExtend",
            "040e00eb02d1d78ce9b260699242672887af5762"
        ],
        [
            "rewrite <- (add_0_l m).",
            "VernacExtend",
            "6d57f0ff3dfad0e0913acc52b538d8cdf79c0bbe"
        ],
        [
            "apply add_le_mono.",
            "VernacExtend",
            "8e626a1b2961fac863622633a1c4d74b9f2577bf"
        ],
        [
            "apply le_0_l.",
            "VernacExtend",
            "606697e0b4a3c1f2b140a14e33e5da526da6c9a2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "now elim (nlt_0_r n).",
            "VernacExtend",
            "fa97ece50c78be6a80d25353aa93eaf506b5a984"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_add_lt_sub_l : forall n m p, n + p < m <-> p < m - n.",
            "VernacStartTheoremProof",
            "cbea52fe26820720f3db08eed81e6fa75598c1e6"
        ],
        [
            "intros n m p.",
            "VernacExtend",
            "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
        ],
        [
            "rewrite add_comm; apply lt_add_lt_sub_r.",
            "VernacExtend",
            "facd838e25c663cdf593a139ce4d1511b0338f49"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sub_lt : forall n m, m <= n -> 0 < m -> n - m < n.",
            "VernacStartTheoremProof",
            "38ceef5d74b78fc2eb618e3bce4d8eadb8af343e"
        ],
        [
            "intros n m LE LT.",
            "VernacExtend",
            "6a3e04d123da6d8fc172dba3f6af61114329bde0"
        ],
        [
            "assert (LE' := le_sub_l n m).",
            "VernacExtend",
            "bc1ec91ce06e3e8a327a51643c74f3ca3193ce60"
        ],
        [
            "rewrite lt_eq_cases in LE'.",
            "VernacExtend",
            "8453883fe937a63498e0feee157e9c24b72afd39"
        ],
        [
            "destruct LE' as [LT'|EQ].",
            "VernacExtend",
            "7b1e73de8b0c1ed481594c8b548bc90c0fb73f90"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply add_sub_eq_nz in EQ; [|order].",
            "VernacExtend",
            "69002cd587d7de24134c7da419aad610da90a6e3"
        ],
        [
            "rewrite (add_lt_mono_r _ _ n), add_0_l in LT.",
            "VernacExtend",
            "fa09cd83c8685443f47c787c5c0c9736424debb0"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_le_mono_r : forall n m p, n <= m -> n-p <= m-p.",
            "VernacStartTheoremProof",
            "d50c9b351fdfe61c09c2646634022dc520b8fb10"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite le_sub_le_add_r.",
            "VernacExtend",
            "7cf0dc56d9e63d0afb3204f5b466978753ed9449"
        ],
        [
            "transitivity m.",
            "VernacExtend",
            "53ed6641a32f328d957207acf08b12f82b072625"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply sub_add_le.",
            "VernacExtend",
            "e7fa2fee2bc7ab308f3bca2d9e8e0b3090d1eef4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sub_le_mono_l : forall n m p, n <= m -> p-m <= p-n.",
            "VernacStartTheoremProof",
            "2c0ba8410ab6083bd980a75e8f135e657f6e3ab3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite le_sub_le_add_r.",
            "VernacExtend",
            "7cf0dc56d9e63d0afb3204f5b466978753ed9449"
        ],
        [
            "transitivity (p-n+n); [ apply sub_add_le | now apply add_le_mono_l].",
            "VernacExtend",
            "313c4c912bad0ec83fb362f7e3e2b0328c04d3e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_pred_r : forall n m, n * (P m) == n * m - n.",
            "VernacStartTheoremProof",
            "c15c39c991e9d28f9066aa57762b7566b88bf8e1"
        ],
        [
            "intros n m; cases m.",
            "VernacExtend",
            "dc3507781313a61e3f3fbd1d694ab5fd4936b63f"
        ],
        [
            "now rewrite pred_0, mul_0_r, sub_0_l.",
            "VernacExtend",
            "989b907d68fce6d636645ad893e87fee3e0e9b89"
        ],
        [
            "intro m; rewrite pred_succ, mul_succ_r, <- add_sub_assoc.",
            "VernacExtend",
            "d354027e0d1f9028a7c1fa2a30bac4d462652496"
        ],
        [
            "now rewrite sub_diag, add_0_r.",
            "VernacExtend",
            "725a8c14587118a915486ef85654731ffd3d696b"
        ],
        [
            "now apply eq_le_incl.",
            "VernacExtend",
            "aa5168a907f80f2f7901df5e49c049880596640d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_sub_distr_r : forall n m p, (n - m) * p == n * p - m * p.",
            "VernacStartTheoremProof",
            "39b385d2d5d324636502ec5d77974601c776451e"
        ],
        [
            "intros n m p; induct n.",
            "VernacExtend",
            "12a3b3259de4e5573969539065f3a3af9ee2ab47"
        ],
        [
            "now rewrite sub_0_l, mul_0_l, sub_0_l.",
            "VernacExtend",
            "9ff2a8c2aa9f55fb5ba240a3aed3430a977f0c9c"
        ],
        [
            "intros n IH.",
            "VernacExtend",
            "29e262b3c640389d376f6327ae2c3d4078c1f25d"
        ],
        [
            "destruct (le_gt_cases m n) as [H | H].",
            "VernacExtend",
            "a0e98ec9e02aba3c203487b5ab6f831ebea76f97"
        ],
        [
            "rewrite sub_succ_l by assumption.",
            "VernacExtend",
            "a3c14215fb1cde77cadfe31752b1c89c13be76f1"
        ],
        [
            "do 2 rewrite mul_succ_l.",
            "VernacExtend",
            "a83526fe0db8fc2ef1b0e91fffc8ff56a71f73d4"
        ],
        [
            "rewrite (add_comm ((n - m) * p) p), (add_comm (n * p) p).",
            "VernacExtend",
            "dd148e3bfee06acda8942befca53ee0e0c9e45a1"
        ],
        [
            "rewrite <- (add_sub_assoc p (n * p) (m * p)) by now apply mul_le_mono_r.",
            "VernacExtend",
            "be0e4b48439839bdad3cfc9d1768f3acf8ee5bf0"
        ],
        [
            "now apply add_cancel_l.",
            "VernacExtend",
            "03bc566150eb47bd9116f5a1ae335964bc8c7bd1"
        ],
        [
            "assert (H1 : S n <= m); [now apply le_succ_l |].",
            "VernacExtend",
            "bd4d0f7f54446d907467304858f989b4a1afce82"
        ],
        [
            "setoid_replace (S n - m) with 0 by now apply sub_0_le.",
            "VernacExtend",
            "856eb58cee6161ccd81882cd5477eb18706a0bf2"
        ],
        [
            "setoid_replace ((S n * p) - m * p) with 0 by (apply sub_0_le; now apply mul_le_mono_r).",
            "VernacExtend",
            "1ea35789d9206b3dd5b041130266bd80b787be67"
        ],
        [
            "apply mul_0_l.",
            "VernacExtend",
            "effbbe7bfa05640e9512aa4d4a5ecf6beefc336a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_sub_distr_l : forall n m p, p * (n - m) == p * n - p * m.",
            "VernacStartTheoremProof",
            "94f11ad31b142b0b4a36869d18a07f705e9d8960"
        ],
        [
            "intros n m p; rewrite (mul_comm p (n - m)), (mul_comm p n), (mul_comm p m).",
            "VernacExtend",
            "1cfb785256afca250518abed31da975f14422cce"
        ],
        [
            "apply mul_sub_distr_r.",
            "VernacExtend",
            "b401329a6bcafdda66913b543f63012a3769618c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition le_alt n m := exists p, p + n == m.",
            "VernacDefinition",
            "9e4ceed720258484856b222f98559827bbb3ea66"
        ],
        [
            "Definition lt_alt n m := exists p, S p + n == m.",
            "VernacDefinition",
            "ef102d841a754f3f68ab8ab4dc118afec47b8b84"
        ],
        [
            "Lemma le_equiv : forall n m, le_alt n m <-> n <= m.",
            "VernacStartTheoremProof",
            "d8109992b2833d869a119a7aac1eac55f6095baf"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros (p,H).",
            "VernacExtend",
            "cb2d3fa95d9028295f572e40236a8a28b583b072"
        ],
        [
            "rewrite <- H, add_comm.",
            "VernacExtend",
            "934632e23adf35c4fc146530d00ed642e407a491"
        ],
        [
            "apply le_add_r.",
            "VernacExtend",
            "aa44954b6cafce234c10a7dc23680f20b7eab36f"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "exists (m-n).",
            "VernacExtend",
            "ea98f3bf5b8446bb780be91b34f23f06ee12cd3f"
        ],
        [
            "now apply sub_add.",
            "VernacExtend",
            "d6b90c81e21615a99fd7fde4d1cd2a9a79898ee9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_equiv : forall n m, lt_alt n m <-> n < m.",
            "VernacStartTheoremProof",
            "260ffac3a77d08e9ffe60c853d239378c848c849"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros (p,H).",
            "VernacExtend",
            "cb2d3fa95d9028295f572e40236a8a28b583b072"
        ],
        [
            "rewrite <- H, add_succ_l, lt_succ_r, add_comm.",
            "VernacExtend",
            "b32e7f0dc483323e8cbe0ac8d9965ef8792b1cff"
        ],
        [
            "apply le_add_r.",
            "VernacExtend",
            "aa44954b6cafce234c10a7dc23680f20b7eab36f"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "exists (m-S n).",
            "VernacExtend",
            "ab388b41b9bc0650adbaa9986b768b4e51db5e33"
        ],
        [
            "rewrite add_succ_l, <- add_succ_r.",
            "VernacExtend",
            "75c36755673f2cf76d37577aed5232f463543cc9"
        ],
        [
            "apply sub_add.",
            "VernacExtend",
            "70eceb66701da8f76497636b63a0795fd2b971ea"
        ],
        [
            "now rewrite le_succ_l.",
            "VernacExtend",
            "e7640ee55d867db38adc3788bb86715739d321fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance le_alt_wd : Proper (eq==>eq==>iff) le_alt.",
            "VernacInstance",
            "bd1305001616ad8c13ed95489cad82cb09c5f30c"
        ],
        [
            "intros x x' Hx y y' Hy; unfold le_alt.",
            "VernacExtend",
            "51c24a96496d9cb3334be65cb84157d7c8dad6f1"
        ],
        [
            "setoid_rewrite Hx.",
            "VernacExtend",
            "4dcd3a21be5569ed9ca96137ea838c4852d785a3"
        ],
        [
            "setoid_rewrite Hy.",
            "VernacExtend",
            "763501edc03be113f62cef19b8290a6945e0a037"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance lt_alt_wd : Proper (eq==>eq==>iff) lt_alt.",
            "VernacInstance",
            "a17cbf3ffc1c2cce9e7516279c30d2ffb80604df"
        ],
        [
            "intros x x' Hx y y' Hy; unfold lt_alt.",
            "VernacExtend",
            "8dec706843fc2948d0f4912edadaf7ef9141c42a"
        ],
        [
            "setoid_rewrite Hx.",
            "VernacExtend",
            "4dcd3a21be5569ed9ca96137ea838c4852d785a3"
        ],
        [
            "setoid_rewrite Hy.",
            "VernacExtend",
            "763501edc03be113f62cef19b8290a6945e0a037"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_alt_dichotomy : forall n m, le_alt n m \\/ le_alt m n.",
            "VernacStartTheoremProof",
            "e8a22a3d3185b80542d919acc34ec98ba6783b62"
        ],
        [
            "intros n m; induct n.",
            "VernacExtend",
            "d1568f660d2ad27d91d6a4dea90cf933039d13fb"
        ],
        [
            "left; exists m; apply add_0_r.",
            "VernacExtend",
            "4b30b807b1a1ef25500d4ad1b695b0044133e9be"
        ],
        [
            "intros n IH.",
            "VernacExtend",
            "29e262b3c640389d376f6327ae2c3d4078c1f25d"
        ],
        [
            "destruct IH as [[p H] | [p H]].",
            "VernacExtend",
            "7538570fc8909f5eeb1d944850267564405da7db"
        ],
        [
            "destruct (zero_or_succ p) as [H1 | [p' H1]]; rewrite H1 in H.",
            "VernacExtend",
            "baf70229be8a3285d2e9ed11ecd0556ff0c632e0"
        ],
        [
            "rewrite add_0_l in H.",
            "VernacExtend",
            "463a1d44fd20727ff42430d9c39173ea8362c437"
        ],
        [
            "right; exists (S 0); rewrite H, add_succ_l; now rewrite add_0_l.",
            "VernacExtend",
            "e6aea594b3c4ba1b304bf86b25506ac5fc876950"
        ],
        [
            "left; exists p'; rewrite add_succ_r; now rewrite add_succ_l in H.",
            "VernacExtend",
            "a4edb56fcf6750d695e561a349b389171bb9ab79"
        ],
        [
            "right; exists (S p).",
            "VernacExtend",
            "a62c138f2379df72931d1eb96e004d2bde52fda4"
        ],
        [
            "rewrite add_succ_l; now rewrite H.",
            "VernacExtend",
            "75b5467dde4cbce9e2b138561cfc959503a24120"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem add_dichotomy : forall n m, (exists p, p + n == m) \\/ (exists p, p + m == n).",
            "VernacStartTheoremProof",
            "72d0d09cc1ac0d6a431612133b9e4dc573788869"
        ],
        [
            "exact le_alt_dichotomy.",
            "VernacExtend",
            "13a009e8ee72992bbccb59ef4937545d051eb15a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NSubProp.",
            "VernacEndSegment",
            "ebbd2b1a4d4876c7a0eb06457d54758a5042cbd2"
        ]
    ],
    "proofs": [
        {
            "name": "sub_0_l",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "induct n.",
                        "VernacExtend",
                        "65da2a07da20377fedd046879f630e8441375e8e"
                    ]
                },
                {
                    "command": [
                        "apply sub_0_r.",
                        "VernacExtend",
                        "f49d6ddb4a5f22b07bb085ae16206468406bd5d9"
                    ]
                },
                {
                    "command": [
                        "intros n IH; rewrite sub_succ_r; rewrite IH.",
                        "VernacExtend",
                        "d84a89f84752ca3777ab5445a4a4836580f1016e"
                    ]
                },
                {
                    "command": [
                        "now apply pred_0.",
                        "VernacExtend",
                        "5cd05a9472a2233260d554be2adcbcaafa140189"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_succ",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intro n; induct m.",
                        "VernacExtend",
                        "9984f89f271da89eda153e537c6793a27a70a1ed"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_succ_r.",
                        "VernacExtend",
                        "dc4bc37c2faa50bb319807e493cad07466818783"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite sub_0_r.",
                        "VernacExtend",
                        "21e2a70f24cd3ca9bcef53f64e18bfba00ad458e"
                    ]
                },
                {
                    "command": [
                        "now rewrite pred_succ.",
                        "VernacExtend",
                        "ed6c638cb412421a2f99f27d9f7f094126f2e5fc"
                    ]
                },
                {
                    "command": [
                        "intros m IH.",
                        "VernacExtend",
                        "3d69923b9215397a1bafaf89039400f0b4977733"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_succ_r.",
                        "VernacExtend",
                        "dc4bc37c2faa50bb319807e493cad07466818783"
                    ]
                },
                {
                    "command": [
                        "rewrite IH.",
                        "VernacExtend",
                        "dbf4f765dab656705bc8df8600fa3b3017a20858"
                    ]
                },
                {
                    "command": [
                        "now rewrite sub_succ_r.",
                        "VernacExtend",
                        "18bd42c0575347b7bb12f4d0e024caf5faf3a9a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_diag",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "induct n.",
                        "VernacExtend",
                        "65da2a07da20377fedd046879f630e8441375e8e"
                    ]
                },
                {
                    "command": [
                        "apply sub_0_r.",
                        "VernacExtend",
                        "f49d6ddb4a5f22b07bb085ae16206468406bd5d9"
                    ]
                },
                {
                    "command": [
                        "intros n IH; rewrite sub_succ; now rewrite IH.",
                        "VernacExtend",
                        "b9e70bc92634a6c521452f9c3db1d05cac3c9df9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_gt",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros n m H; elim H using lt_ind_rel; clear n m H.",
                        "VernacExtend",
                        "b0f501fac9fd25c44c620f4fc307fa684e8937b6"
                    ]
                },
                {
                    "command": [
                        "solve_proper.",
                        "VernacExtend",
                        "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite sub_0_r; apply neq_succ_0.",
                        "VernacExtend",
                        "8a4a7ac20484c9aded6d10277f7f7fc6eea6bd3a"
                    ]
                },
                {
                    "command": [
                        "intros; now rewrite sub_succ.",
                        "VernacExtend",
                        "fdf8a3cd3b55929c4bd3379653ca4171682ce9e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_sub_assoc",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros n m p; induct p.",
                        "VernacExtend",
                        "4163e5e86ad51cf8258a2c27a78c8627aac6c806"
                    ]
                },
                {
                    "command": [
                        "intro; now do 2 rewrite sub_0_r.",
                        "VernacExtend",
                        "c1ab8deac667708997a86634a99cd35d3b322b2a"
                    ]
                },
                {
                    "command": [
                        "intros p IH H.",
                        "VernacExtend",
                        "ede56af2c77f1626095ce9cee88776614031bdb8"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite sub_succ_r.",
                        "VernacExtend",
                        "833e6206652177f2b4866c54e732008fdfb19d5e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IH by (apply lt_le_incl; now apply le_succ_l).",
                        "VernacExtend",
                        "c51a3e309068adbb7499d9099ad136e43c8d1b4e"
                    ]
                },
                {
                    "command": [
                        "rewrite add_pred_r by (apply sub_gt; now apply le_succ_l).",
                        "VernacExtend",
                        "0944d6d7d9710234e49146d93d346e39e6404071"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_succ_l",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros n m H.",
                        "VernacExtend",
                        "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (add_1_l m).",
                        "VernacExtend",
                        "9d737f24fb7930a44f159062ca7f60bc69fe614a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (add_1_l (m - n)).",
                        "VernacExtend",
                        "425af6f2d7b2825f3591cb921f14c2f8980503a9"
                    ]
                },
                {
                    "command": [
                        "symmetry; now apply add_sub_assoc.",
                        "VernacExtend",
                        "cbbbda365b09297183af20daa909f23df66bed3c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_sub",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_sub_assoc by (apply le_refl).",
                        "VernacExtend",
                        "a2d724a1362dba00e5b1f5ac7cdbc661d1fcb327"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_diag; now rewrite add_0_r.",
                        "VernacExtend",
                        "c603a5cdbfa0629ca30074f22527abfbcc8a65e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_add",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros n m H.",
                        "VernacExtend",
                        "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm.",
                        "VernacExtend",
                        "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
                    ]
                },
                {
                    "command": [
                        "rewrite add_sub_assoc by assumption.",
                        "VernacExtend",
                        "0f162e663dbfd09e84e9a54275b90ccee40d384c"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm.",
                        "VernacExtend",
                        "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
                    ]
                },
                {
                    "command": [
                        "apply add_sub.",
                        "VernacExtend",
                        "08e2ad70532d616faa2ee66112da92e3cb1de6f2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_sub_eq_l",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros n m p H.",
                        "VernacExtend",
                        "ed0af612733e8ddfd294f1800ff0547cd2dbb14c"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "assert (H1 : m + p - m == n - m) by now rewrite H.",
                        "VernacExtend",
                        "b1721e426209bc3f6ff269d236786119db5cb40b"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm in H1.",
                        "VernacExtend",
                        "6298cdfb04fb39f1684a3dd0eccb2b012bf5178a"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_sub in H1.",
                        "VernacExtend",
                        "4fda0094ac0e5e2b785d2c350c490e7934527b2c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_sub_eq_r",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros n m p H; rewrite add_comm in H; now apply add_sub_eq_l.",
                        "VernacExtend",
                        "33e9e1fa1b02c4ac9d32e532a069c5d8d3df94c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_sub_eq_nz",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros n m p H; double_induct n m.",
                        "VernacExtend",
                        "3ee1f3b4cdf30d7c781dea862da2277a5cd78e50"
                    ]
                },
                {
                    "command": [
                        "intros m H1; rewrite sub_0_l in H1.",
                        "VernacExtend",
                        "472771521838578c6073e35925ba4ad0ba27ac35"
                    ]
                },
                {
                    "command": [
                        "symmetry in H1; false_hyp H1 H.",
                        "VernacExtend",
                        "0abc069ea605307f55611bda4d7e34817a93eca3"
                    ]
                },
                {
                    "command": [
                        "intro n; rewrite sub_0_r; now rewrite add_0_l.",
                        "VernacExtend",
                        "c283e7553abfe33c63a4f6423728766c26253b4e"
                    ]
                },
                {
                    "command": [
                        "intros n m IH H1.",
                        "VernacExtend",
                        "c8d46abbe36cdd69a757c1f8e02d96165437c410"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_succ in H1.",
                        "VernacExtend",
                        "7478be1ded2bd96f42c1a36bd1b2ce6292cba14e"
                    ]
                },
                {
                    "command": [
                        "apply IH in H1.",
                        "VernacExtend",
                        "d32d2a1c9f6eb3312b35ef621419e93471e39cdd"
                    ]
                },
                {
                    "command": [
                        "rewrite add_succ_l; now rewrite H1.",
                        "VernacExtend",
                        "18e3ca8df3e0381474ff0478f6e842fc6f4289af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_add_distr",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "intros n m; induct p.",
                        "VernacExtend",
                        "b4599473412d220debd5a5f907de70b70991777e"
                    ]
                },
                {
                    "command": [
                        "rewrite add_0_r; now rewrite sub_0_r.",
                        "VernacExtend",
                        "6778643c0813709df10f306a7b192f4a22ab4863"
                    ]
                },
                {
                    "command": [
                        "intros p IH.",
                        "VernacExtend",
                        "e205c530c6bddefed5c9d93d82891a9720ae067b"
                    ]
                },
                {
                    "command": [
                        "rewrite add_succ_r; do 2 rewrite sub_succ_r.",
                        "VernacExtend",
                        "beb49f2ac715acbcc450e0cb69848473f7193ae2"
                    ]
                },
                {
                    "command": [
                        "now rewrite IH.",
                        "VernacExtend",
                        "81522b1f7744483b2809ae9ad2e40d948f1f0b36"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_sub_swap",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "intros n m p H.",
                        "VernacExtend",
                        "ed0af612733e8ddfd294f1800ff0547cd2dbb14c"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_comm n m).",
                        "VernacExtend",
                        "351acbf670006402305216daaa5c7abd8045bba7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_sub_assoc by assumption.",
                        "VernacExtend",
                        "02114511266d632bf3ce6b9505e89120310f6c43"
                    ]
                },
                {
                    "command": [
                        "now rewrite (add_comm m (n - p)).",
                        "VernacExtend",
                        "060529d9a8aeae3c895a82b2c05f2ab7d13a74bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_sub_l",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intro n; induct m.",
                        "VernacExtend",
                        "9984f89f271da89eda153e537c6793a27a70a1ed"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_0_r; now apply eq_le_incl.",
                        "VernacExtend",
                        "722a32934769bb9c3900663495573387d10e07c6"
                    ]
                },
                {
                    "command": [
                        "intros m IH.",
                        "VernacExtend",
                        "3d69923b9215397a1bafaf89039400f0b4977733"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_succ_r.",
                        "VernacExtend",
                        "dc4bc37c2faa50bb319807e493cad07466818783"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (n - m); [apply le_pred_l | assumption].",
                        "VernacExtend",
                        "a74ed954684a00998c9448bf22772df68f04d61f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_0_le",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "double_induct n m.",
                        "VernacExtend",
                        "e2854dd0c975186bf45443eb19db68f96a6716c7"
                    ]
                },
                {
                    "command": [
                        "intro m; split; intro; [apply le_0_l | apply sub_0_l].",
                        "VernacExtend",
                        "739a5cbc7d9af74cb541b040aa5e4c4c2fc67a68"
                    ]
                },
                {
                    "command": [
                        "intro m; rewrite sub_0_r; split; intro H; [false_hyp H neq_succ_0 | false_hyp H nle_succ_0].",
                        "VernacExtend",
                        "b3900f34c462ad4d2eabadcaaa23aea9fdec388c"
                    ]
                },
                {
                    "command": [
                        "intros n m H.",
                        "VernacExtend",
                        "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- succ_le_mono.",
                        "VernacExtend",
                        "604287379f5b9eaad7bd1545d8396dcf324af598"
                    ]
                },
                {
                    "command": [
                        "now rewrite sub_succ.",
                        "VernacExtend",
                        "e0d43fe62d984f740a309e31848dbf4bc9af0ce0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_add_le",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (le_ge_cases n m) as [LE|GE].",
                        "VernacExtend",
                        "c5247c12652675f42ffde2c579d1e1afb6bb08f8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sub_0_le in LE.",
                        "VernacExtend",
                        "96044db6859b0e8a3980158091363102792b85f7"
                    ]
                },
                {
                    "command": [
                        "rewrite LE; nzsimpl.",
                        "VernacExtend",
                        "6b7f8aada9c6e1b714dd126478424809b13f8b9f"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- sub_0_le.",
                        "VernacExtend",
                        "c0a27bf95b3f60b38f7bc6b015c6ecdda2966962"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add by assumption.",
                        "VernacExtend",
                        "5c76478223e82eb2802fad5bee8e05b8e427ee7e"
                    ]
                },
                {
                    "command": [
                        "apply le_refl.",
                        "VernacExtend",
                        "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_sub_le_add_r",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros n m p.",
                        "VernacExtend",
                        "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
                    ]
                },
                {
                    "command": [
                        "split; intros LE.",
                        "VernacExtend",
                        "21fc030494644fb37895676d674bb46fa45b0773"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_le_mono_r _ _ p) in LE.",
                        "VernacExtend",
                        "52928e633bec8e147df19bf6397974b174475aa3"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (n-p+p); auto using sub_add_le.",
                        "VernacExtend",
                        "5ca67cc4d3abcef1b366db28babcc216cd0da3dc"
                    ]
                },
                {
                    "command": [
                        "destruct (le_ge_cases n p) as [LE'|GE].",
                        "VernacExtend",
                        "428fc95e8b92f9e8e35c2ee74d978b1946896e2c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sub_0_le in LE'.",
                        "VernacExtend",
                        "85b9846ba18365befe8a1ad9a0c54d88b73a05dc"
                    ]
                },
                {
                    "command": [
                        "rewrite LE'.",
                        "VernacExtend",
                        "a443056b7123f642ba3ee9885a4d83a15541a1a2"
                    ]
                },
                {
                    "command": [
                        "apply le_0_l.",
                        "VernacExtend",
                        "606697e0b4a3c1f2b140a14e33e5da526da6c9a2"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_le_mono_r _ _ p).",
                        "VernacExtend",
                        "40506df212cb8da24624864030e235891bc979e8"
                    ]
                },
                {
                    "command": [
                        "now rewrite sub_add.",
                        "VernacExtend",
                        "1141a7fb0f89eb9b9e67d1e1b0dc793079dc3ffc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_sub_le_add_l",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "intros n m p.",
                        "VernacExtend",
                        "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm; apply le_sub_le_add_r.",
                        "VernacExtend",
                        "8cdeb0e2b1f5b547000ac49fb70865a740675547"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_sub_lt_add_r",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "intros n m p LT.",
                        "VernacExtend",
                        "4d8aea81ef278e254af1f9a0b8b9772445f008bb"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_lt_mono_r _ _ p) in LT.",
                        "VernacExtend",
                        "7ddef00134e48b2cca3c642a678791cbbcc8d8a2"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (n-p+p); auto using sub_add_le.",
                        "VernacExtend",
                        "ea2b9fd080ac33d9c8a4ab8baef004815a06b778"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_sub_lt_add_l",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "intros n m p.",
                        "VernacExtend",
                        "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm; apply lt_sub_lt_add_r.",
                        "VernacExtend",
                        "639c2975e520dad810b4682ce67e8ac780b8dae2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_add_le_sub_r",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "intros n m p LE.",
                        "VernacExtend",
                        "cbf6e4ec93b75e079bc3799688d44f7f24b67f16"
                    ]
                },
                {
                    "command": [
                        "apply (add_le_mono_r _ _ p).",
                        "VernacExtend",
                        "ce7e68363f2345622c46f64e1b3f4262c1469751"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_add.",
                        "VernacExtend",
                        "cc89d6d3d76f99fe134079c6846321fb3a3b4f6c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (n+p); trivial.",
                        "VernacExtend",
                        "6ba049141c0968d9d1d191c338efb27d50e494e9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (add_0_l p) at 1.",
                        "VernacExtend",
                        "af927834336da11410a826f710bde41b0d842dd9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_le_mono_r.",
                        "VernacExtend",
                        "03e202d809a5ccc541282217bd31360d9d00e957"
                    ]
                },
                {
                    "command": [
                        "apply le_0_l.",
                        "VernacExtend",
                        "606697e0b4a3c1f2b140a14e33e5da526da6c9a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_add_le_sub_l",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "intros n m p.",
                        "VernacExtend",
                        "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm; apply le_add_le_sub_r.",
                        "VernacExtend",
                        "ec3949c8cf93ef148d33e33b6df8ded4f04cf3b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_add_lt_sub_r",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "intros n m p.",
                        "VernacExtend",
                        "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
                    ]
                },
                {
                    "command": [
                        "destruct (le_ge_cases p m) as [LE|GE].",
                        "VernacExtend",
                        "3dbe24b573654bdff750e0e710db89f1b6e290e0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (sub_add p m) at 1 by assumption.",
                        "VernacExtend",
                        "00fdfa67c644a784e6fb7c145dbf4079c06352f7"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- add_lt_mono_r.",
                        "VernacExtend",
                        "6cfb5ff9321c3a4d6d75f1a005d6395a9f561930"
                    ]
                },
                {
                    "command": [
                        "assert (GE' := GE).",
                        "VernacExtend",
                        "a83308e4cb6240830e4a337dba308f9b563e3373"
                    ]
                },
                {
                    "command": [
                        "rewrite <- sub_0_le in GE'; rewrite GE'.",
                        "VernacExtend",
                        "e731f7c1209b096213041e07ffd08aa89e6986d8"
                    ]
                },
                {
                    "command": [
                        "split; intros LT.",
                        "VernacExtend",
                        "35c319d576bb1f449d7e8bc9b6973ba269724c64"
                    ]
                },
                {
                    "command": [
                        "elim (lt_irrefl m).",
                        "VernacExtend",
                        "515305bd7dcb7d9e54a456084804b7388edd4bbf"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (n+p); trivial.",
                        "VernacExtend",
                        "040e00eb02d1d78ce9b260699242672887af5762"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (add_0_l m).",
                        "VernacExtend",
                        "6d57f0ff3dfad0e0913acc52b538d8cdf79c0bbe"
                    ]
                },
                {
                    "command": [
                        "apply add_le_mono.",
                        "VernacExtend",
                        "8e626a1b2961fac863622633a1c4d74b9f2577bf"
                    ]
                },
                {
                    "command": [
                        "apply le_0_l.",
                        "VernacExtend",
                        "606697e0b4a3c1f2b140a14e33e5da526da6c9a2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "now elim (nlt_0_r n).",
                        "VernacExtend",
                        "fa97ece50c78be6a80d25353aa93eaf506b5a984"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_add_lt_sub_l",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "intros n m p.",
                        "VernacExtend",
                        "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm; apply lt_add_lt_sub_r.",
                        "VernacExtend",
                        "facd838e25c663cdf593a139ce4d1511b0338f49"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_lt",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "intros n m LE LT.",
                        "VernacExtend",
                        "6a3e04d123da6d8fc172dba3f6af61114329bde0"
                    ]
                },
                {
                    "command": [
                        "assert (LE' := le_sub_l n m).",
                        "VernacExtend",
                        "bc1ec91ce06e3e8a327a51643c74f3ca3193ce60"
                    ]
                },
                {
                    "command": [
                        "rewrite lt_eq_cases in LE'.",
                        "VernacExtend",
                        "8453883fe937a63498e0feee157e9c24b72afd39"
                    ]
                },
                {
                    "command": [
                        "destruct LE' as [LT'|EQ].",
                        "VernacExtend",
                        "7b1e73de8b0c1ed481594c8b548bc90c0fb73f90"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply add_sub_eq_nz in EQ; [|order].",
                        "VernacExtend",
                        "69002cd587d7de24134c7da419aad610da90a6e3"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_lt_mono_r _ _ n), add_0_l in LT.",
                        "VernacExtend",
                        "fa09cd83c8685443f47c787c5c0c9736424debb0"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_le_mono_r",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite le_sub_le_add_r.",
                        "VernacExtend",
                        "7cf0dc56d9e63d0afb3204f5b466978753ed9449"
                    ]
                },
                {
                    "command": [
                        "transitivity m.",
                        "VernacExtend",
                        "53ed6641a32f328d957207acf08b12f82b072625"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply sub_add_le.",
                        "VernacExtend",
                        "e7fa2fee2bc7ab308f3bca2d9e8e0b3090d1eef4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sub_le_mono_l",
            "line_nb": 190,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite le_sub_le_add_r.",
                        "VernacExtend",
                        "7cf0dc56d9e63d0afb3204f5b466978753ed9449"
                    ]
                },
                {
                    "command": [
                        "transitivity (p-n+n); [ apply sub_add_le | now apply add_le_mono_l].",
                        "VernacExtend",
                        "313c4c912bad0ec83fb362f7e3e2b0328c04d3e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_pred_r",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "intros n m; cases m.",
                        "VernacExtend",
                        "dc3507781313a61e3f3fbd1d694ab5fd4936b63f"
                    ]
                },
                {
                    "command": [
                        "now rewrite pred_0, mul_0_r, sub_0_l.",
                        "VernacExtend",
                        "989b907d68fce6d636645ad893e87fee3e0e9b89"
                    ]
                },
                {
                    "command": [
                        "intro m; rewrite pred_succ, mul_succ_r, <- add_sub_assoc.",
                        "VernacExtend",
                        "d354027e0d1f9028a7c1fa2a30bac4d462652496"
                    ]
                },
                {
                    "command": [
                        "now rewrite sub_diag, add_0_r.",
                        "VernacExtend",
                        "725a8c14587118a915486ef85654731ffd3d696b"
                    ]
                },
                {
                    "command": [
                        "now apply eq_le_incl.",
                        "VernacExtend",
                        "aa5168a907f80f2f7901df5e49c049880596640d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_sub_distr_r",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "intros n m p; induct n.",
                        "VernacExtend",
                        "12a3b3259de4e5573969539065f3a3af9ee2ab47"
                    ]
                },
                {
                    "command": [
                        "now rewrite sub_0_l, mul_0_l, sub_0_l.",
                        "VernacExtend",
                        "9ff2a8c2aa9f55fb5ba240a3aed3430a977f0c9c"
                    ]
                },
                {
                    "command": [
                        "intros n IH.",
                        "VernacExtend",
                        "29e262b3c640389d376f6327ae2c3d4078c1f25d"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_cases m n) as [H | H].",
                        "VernacExtend",
                        "a0e98ec9e02aba3c203487b5ab6f831ebea76f97"
                    ]
                },
                {
                    "command": [
                        "rewrite sub_succ_l by assumption.",
                        "VernacExtend",
                        "a3c14215fb1cde77cadfe31752b1c89c13be76f1"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite mul_succ_l.",
                        "VernacExtend",
                        "a83526fe0db8fc2ef1b0e91fffc8ff56a71f73d4"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_comm ((n - m) * p) p), (add_comm (n * p) p).",
                        "VernacExtend",
                        "dd148e3bfee06acda8942befca53ee0e0c9e45a1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (add_sub_assoc p (n * p) (m * p)) by now apply mul_le_mono_r.",
                        "VernacExtend",
                        "be0e4b48439839bdad3cfc9d1768f3acf8ee5bf0"
                    ]
                },
                {
                    "command": [
                        "now apply add_cancel_l.",
                        "VernacExtend",
                        "03bc566150eb47bd9116f5a1ae335964bc8c7bd1"
                    ]
                },
                {
                    "command": [
                        "assert (H1 : S n <= m); [now apply le_succ_l |].",
                        "VernacExtend",
                        "bd4d0f7f54446d907467304858f989b4a1afce82"
                    ]
                },
                {
                    "command": [
                        "setoid_replace (S n - m) with 0 by now apply sub_0_le.",
                        "VernacExtend",
                        "856eb58cee6161ccd81882cd5477eb18706a0bf2"
                    ]
                },
                {
                    "command": [
                        "setoid_replace ((S n * p) - m * p) with 0 by (apply sub_0_le; now apply mul_le_mono_r).",
                        "VernacExtend",
                        "1ea35789d9206b3dd5b041130266bd80b787be67"
                    ]
                },
                {
                    "command": [
                        "apply mul_0_l.",
                        "VernacExtend",
                        "effbbe7bfa05640e9512aa4d4a5ecf6beefc336a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_sub_distr_l",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "intros n m p; rewrite (mul_comm p (n - m)), (mul_comm p n), (mul_comm p m).",
                        "VernacExtend",
                        "1cfb785256afca250518abed31da975f14422cce"
                    ]
                },
                {
                    "command": [
                        "apply mul_sub_distr_r.",
                        "VernacExtend",
                        "b401329a6bcafdda66913b543f63012a3769618c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_equiv",
            "line_nb": 223,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros (p,H).",
                        "VernacExtend",
                        "cb2d3fa95d9028295f572e40236a8a28b583b072"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H, add_comm.",
                        "VernacExtend",
                        "934632e23adf35c4fc146530d00ed642e407a491"
                    ]
                },
                {
                    "command": [
                        "apply le_add_r.",
                        "VernacExtend",
                        "aa44954b6cafce234c10a7dc23680f20b7eab36f"
                    ]
                },
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "exists (m-n).",
                        "VernacExtend",
                        "ea98f3bf5b8446bb780be91b34f23f06ee12cd3f"
                    ]
                },
                {
                    "command": [
                        "now apply sub_add.",
                        "VernacExtend",
                        "d6b90c81e21615a99fd7fde4d1cd2a9a79898ee9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_equiv",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros (p,H).",
                        "VernacExtend",
                        "cb2d3fa95d9028295f572e40236a8a28b583b072"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H, add_succ_l, lt_succ_r, add_comm.",
                        "VernacExtend",
                        "b32e7f0dc483323e8cbe0ac8d9965ef8792b1cff"
                    ]
                },
                {
                    "command": [
                        "apply le_add_r.",
                        "VernacExtend",
                        "aa44954b6cafce234c10a7dc23680f20b7eab36f"
                    ]
                },
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "exists (m-S n).",
                        "VernacExtend",
                        "ab388b41b9bc0650adbaa9986b768b4e51db5e33"
                    ]
                },
                {
                    "command": [
                        "rewrite add_succ_l, <- add_succ_r.",
                        "VernacExtend",
                        "75c36755673f2cf76d37577aed5232f463543cc9"
                    ]
                },
                {
                    "command": [
                        "apply sub_add.",
                        "VernacExtend",
                        "70eceb66701da8f76497636b63a0795fd2b971ea"
                    ]
                },
                {
                    "command": [
                        "now rewrite le_succ_l.",
                        "VernacExtend",
                        "e7640ee55d867db38adc3788bb86715739d321fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_alt_wd",
            "line_nb": 243,
            "steps": [
                {
                    "command": [
                        "intros x x' Hx y y' Hy; unfold le_alt.",
                        "VernacExtend",
                        "51c24a96496d9cb3334be65cb84157d7c8dad6f1"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Hx.",
                        "VernacExtend",
                        "4dcd3a21be5569ed9ca96137ea838c4852d785a3"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Hy.",
                        "VernacExtend",
                        "763501edc03be113f62cef19b8290a6945e0a037"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_alt_wd",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "intros x x' Hx y y' Hy; unfold lt_alt.",
                        "VernacExtend",
                        "8dec706843fc2948d0f4912edadaf7ef9141c42a"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Hx.",
                        "VernacExtend",
                        "4dcd3a21be5569ed9ca96137ea838c4852d785a3"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Hy.",
                        "VernacExtend",
                        "763501edc03be113f62cef19b8290a6945e0a037"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_alt_dichotomy",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "intros n m; induct n.",
                        "VernacExtend",
                        "d1568f660d2ad27d91d6a4dea90cf933039d13fb"
                    ]
                },
                {
                    "command": [
                        "left; exists m; apply add_0_r.",
                        "VernacExtend",
                        "4b30b807b1a1ef25500d4ad1b695b0044133e9be"
                    ]
                },
                {
                    "command": [
                        "intros n IH.",
                        "VernacExtend",
                        "29e262b3c640389d376f6327ae2c3d4078c1f25d"
                    ]
                },
                {
                    "command": [
                        "destruct IH as [[p H] | [p H]].",
                        "VernacExtend",
                        "7538570fc8909f5eeb1d944850267564405da7db"
                    ]
                },
                {
                    "command": [
                        "destruct (zero_or_succ p) as [H1 | [p' H1]]; rewrite H1 in H.",
                        "VernacExtend",
                        "baf70229be8a3285d2e9ed11ecd0556ff0c632e0"
                    ]
                },
                {
                    "command": [
                        "rewrite add_0_l in H.",
                        "VernacExtend",
                        "463a1d44fd20727ff42430d9c39173ea8362c437"
                    ]
                },
                {
                    "command": [
                        "right; exists (S 0); rewrite H, add_succ_l; now rewrite add_0_l.",
                        "VernacExtend",
                        "e6aea594b3c4ba1b304bf86b25506ac5fc876950"
                    ]
                },
                {
                    "command": [
                        "left; exists p'; rewrite add_succ_r; now rewrite add_succ_l in H.",
                        "VernacExtend",
                        "a4edb56fcf6750d695e561a349b389171bb9ab79"
                    ]
                },
                {
                    "command": [
                        "right; exists (S p).",
                        "VernacExtend",
                        "a62c138f2379df72931d1eb96e004d2bde52fda4"
                    ]
                },
                {
                    "command": [
                        "rewrite add_succ_l; now rewrite H.",
                        "VernacExtend",
                        "75b5467dde4cbce9e2b138561cfc959503a24120"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_dichotomy",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "exact le_alt_dichotomy.",
                        "VernacExtend",
                        "13a009e8ee72992bbccb59ef4937545d051eb15a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}