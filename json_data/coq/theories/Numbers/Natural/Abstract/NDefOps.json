{
    "filename": "theories/Numbers/Natural/Abstract/NDefOps.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Bool.",
            "VernacRequire",
            "a27d9a6c92262b970381301472e9a1100c206680"
        ],
        [
            "Require Import RelationPairs.",
            "VernacRequire",
            "1f57eedd1fa80de916409fcbe97db4773b0bf054"
        ],
        [
            "Require Export NStrongRec.",
            "VernacRequire",
            "29068b84310b976a925f28be5757236676f34948"
        ],
        [
            "Module NdefOpsProp (Import N : NAxiomsRecSig').",
            "VernacDefineModule",
            "a6cb0ee7664979150c505d5f388654d04c54c970"
        ],
        [
            "Include NStrongRecProp N.",
            "VernacInclude",
            "bbf2af0a30190fae1d7567158d15608913f5f760"
        ],
        [
            "Definition if_zero (A : Type) (a b : A) (n : N.t) : A := recursion a (fun _ _ => b) n.",
            "VernacDefinition",
            "74a587ec6b9baaf80fb3f78aa831ae114c2e2767"
        ],
        [
            "Arguments if_zero [A] a b n.",
            "VernacArguments",
            "7944e6838f893a37d86bcab080048be2b1c5ef10"
        ],
        [
            "Instance if_zero_wd (A : Type) : Proper (Logic.eq ==> Logic.eq ==> N.eq ==> Logic.eq) (@if_zero A).",
            "VernacInstance",
            "c68588860b28f1d91e9735307da70db849041790"
        ],
        [
            "unfold if_zero.",
            "VernacExtend",
            "a5e9e55c63924cfe3b81f5e817f27304b10c6fbd"
        ],
        [
            "f_equiv'.",
            "VernacExtend",
            "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem if_zero_0 : forall (A : Type) (a b : A), if_zero a b 0 = a.",
            "VernacStartTheoremProof",
            "f8c2c033f40249de83a3873d647095f20612a9e8"
        ],
        [
            "unfold if_zero; intros; now rewrite recursion_0.",
            "VernacExtend",
            "16bdd67c095cfd1ee04407a284e81da2d58c230d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem if_zero_succ : forall (A : Type) (a b : A) (n : N.t), if_zero a b (S n) = b.",
            "VernacStartTheoremProof",
            "45e004d5ade80ac412c65941af45d6ef1ffac3d2"
        ],
        [
            "intros; unfold if_zero.",
            "VernacExtend",
            "16c6f99778013b93a275f4b170dd23c2efbaced1"
        ],
        [
            "now rewrite recursion_succ.",
            "VernacExtend",
            "235448e29bc92cb5cae791c586eea404d53aebb7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition def_add (x y : N.t) := recursion y (fun _ => S) x.",
            "VernacDefinition",
            "36ef01c783b081feaf3dec3ba413f5ad0e8cd289"
        ],
        [
            "Local Infix \"+++\" := def_add (at level 50, left associativity).",
            "VernacInfix",
            "e26dd8ee601fede1e54311364434b28dcbab50e4"
        ],
        [
            "Instance def_add_wd : Proper (N.eq ==> N.eq ==> N.eq) def_add.",
            "VernacInstance",
            "2e063088e71bf91ede4d9af2ea9a6ecb41a0f137"
        ],
        [
            "unfold def_add.",
            "VernacExtend",
            "511aab00a7ca48cd9b47405c8d07294e319e650a"
        ],
        [
            "f_equiv'.",
            "VernacExtend",
            "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem def_add_0_l : forall y, 0 +++ y == y.",
            "VernacStartTheoremProof",
            "8e562295cac26634d00afab25d9228bba7eff79f"
        ],
        [
            "intro y.",
            "VernacExtend",
            "ff685af42a1246b2c01b3c56229f29040ac3f340"
        ],
        [
            "unfold def_add.",
            "VernacExtend",
            "511aab00a7ca48cd9b47405c8d07294e319e650a"
        ],
        [
            "now rewrite recursion_0.",
            "VernacExtend",
            "92ee26e10e4669cfb887c36c685c6db0b7406c3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem def_add_succ_l : forall x y, S x +++ y == S (x +++ y).",
            "VernacStartTheoremProof",
            "fc12124a669b880de938eb398d49a7e1e5a3ecdf"
        ],
        [
            "intros x y; unfold def_add.",
            "VernacExtend",
            "963b2b13e39a0a9fe75ff12d6cff43ab3744b238"
        ],
        [
            "rewrite recursion_succ; f_equiv'.",
            "VernacExtend",
            "95443755d4c7deebc5c42696ed86d9de9affd234"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem def_add_add : forall n m, n +++ m == n + m.",
            "VernacStartTheoremProof",
            "2ff42dfd250203ac69256422d05ccb905123607a"
        ],
        [
            "intros n m; induct n.",
            "VernacExtend",
            "d1568f660d2ad27d91d6a4dea90cf933039d13fb"
        ],
        [
            "now rewrite def_add_0_l, add_0_l.",
            "VernacExtend",
            "88a968fec8a7092d6af5f32b42d1a644206257a1"
        ],
        [
            "intros n H.",
            "VernacExtend",
            "348ce37d2f619b733a523bd998a06fecedcf3fc4"
        ],
        [
            "now rewrite def_add_succ_l, add_succ_l, H.",
            "VernacExtend",
            "5b7fdfa0f60c8f0daffa611ab001c09eb1549ffd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition def_mul (x y : N.t) := recursion 0 (fun _ p => p +++ x) y.",
            "VernacDefinition",
            "95509cf001af90141d2136eeb3d10f6c6197b036"
        ],
        [
            "Local Infix \"**\" := def_mul (at level 40, left associativity).",
            "VernacInfix",
            "44a0d9382f46c60e921d970133a8097b157acc74"
        ],
        [
            "Instance def_mul_wd : Proper (N.eq ==> N.eq ==> N.eq) def_mul.",
            "VernacInstance",
            "76ee8b5b2199ec539f199bf2c50f2bc20dc7ecd1"
        ],
        [
            "unfold def_mul.",
            "VernacExtend",
            "834cdc15a7bd57b62bd3d8686032d820463745dd"
        ],
        [
            "f_equiv'.",
            "VernacExtend",
            "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem def_mul_0_r : forall x, x ** 0 == 0.",
            "VernacStartTheoremProof",
            "391716e9188a4ac21deaa2bf7b378e773ad3633f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold def_mul.",
            "VernacExtend",
            "834cdc15a7bd57b62bd3d8686032d820463745dd"
        ],
        [
            "now rewrite recursion_0.",
            "VernacExtend",
            "92ee26e10e4669cfb887c36c685c6db0b7406c3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem def_mul_succ_r : forall x y, x ** S y == x ** y +++ x.",
            "VernacStartTheoremProof",
            "90f389d3aaea7642da4e8f2e0da5e11be61cdab3"
        ],
        [
            "intros x y; unfold def_mul.",
            "VernacExtend",
            "79c40271a085328041dff14523afc27b73b6da31"
        ],
        [
            "rewrite recursion_succ; auto with *.",
            "VernacExtend",
            "3e4a539c846e7e0f353c94204b7f71704102ea97"
        ],
        [
            "f_equiv'.",
            "VernacExtend",
            "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem def_mul_mul : forall n m, n ** m == n * m.",
            "VernacStartTheoremProof",
            "705113179c4670dbe13a61ad17f9d9214d02b7d9"
        ],
        [
            "intros n m; induct m.",
            "VernacExtend",
            "606cbacf9675b650be07c3c48938ecfe29461a4d"
        ],
        [
            "now rewrite def_mul_0_r, mul_0_r.",
            "VernacExtend",
            "8fa2818c6536a11bcd9335458e59f6b4b9a19f45"
        ],
        [
            "intros m IH; now rewrite def_mul_succ_r, mul_succ_r, def_add_add, IH.",
            "VernacExtend",
            "f4fbf580d35d7842c8d6529a31484ab04fb2edb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ltb (m : N.t) : N.t -> bool := recursion (if_zero false true) (fun _ f n => recursion false (fun n' _ => f n') n) m.",
            "VernacDefinition",
            "9e15e0b07321e1b2ac9f40df8e0356dd9cfedf9d"
        ],
        [
            "Local Infix \"<<\" := ltb (at level 70, no associativity).",
            "VernacInfix",
            "ed8d5f7f53b60eece6917dde59dd145a1d996e73"
        ],
        [
            "Instance ltb_wd : Proper (N.eq ==> N.eq ==> Logic.eq) ltb.",
            "VernacInstance",
            "04bfba5ac616537857997c3ef3442879715a4bea"
        ],
        [
            "unfold ltb.",
            "VernacExtend",
            "5ff84fcff87310f13b5dfc198bf097b1b6b5fabb"
        ],
        [
            "f_equiv'.",
            "VernacExtend",
            "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ltb_base : forall n, 0 << n = if_zero false true n.",
            "VernacStartTheoremProof",
            "a98f72a49b968db283e23838b002930bcf4dc16c"
        ],
        [
            "intro n; unfold ltb; now rewrite recursion_0.",
            "VernacExtend",
            "bde5365bb8fe57d7180e35a414bee229920b948b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ltb_step : forall m n, S m << n = recursion false (fun n' _ => m << n') n.",
            "VernacStartTheoremProof",
            "7870c9f8310dcd8e27780e96c70e5c5c5f9e36fd"
        ],
        [
            "intros m n; unfold ltb at 1.",
            "VernacExtend",
            "e3881c2440764ff8ca0e1b319dd839ddd52adfcb"
        ],
        [
            "f_equiv.",
            "VernacExtend",
            "ed0db7be627cb3834790ae805a13139db94a9012"
        ],
        [
            "rewrite recursion_succ; f_equiv'.",
            "VernacExtend",
            "95443755d4c7deebc5c42696ed86d9de9affd234"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ltb_0 : forall n, n << 0 = false.",
            "VernacStartTheoremProof",
            "086f5b8c5a716d5709370ca48c5bf587ca0dea7c"
        ],
        [
            "cases n.",
            "VernacExtend",
            "12366c918461820f6df3677de2220e508eb994d2"
        ],
        [
            "rewrite ltb_base; now rewrite if_zero_0.",
            "VernacExtend",
            "cb00cf635cfa45037ded6e371169cd01206d611c"
        ],
        [
            "intro n; rewrite ltb_step.",
            "VernacExtend",
            "15629fdb9802ffe47acbfb73ad0797389617ba1a"
        ],
        [
            "now rewrite recursion_0.",
            "VernacExtend",
            "92ee26e10e4669cfb887c36c685c6db0b7406c3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ltb_0_succ : forall n, 0 << S n = true.",
            "VernacStartTheoremProof",
            "f898beef94c1871a17abc21ef26970e58d9aea0b"
        ],
        [
            "intro n; rewrite ltb_base; now rewrite if_zero_succ.",
            "VernacExtend",
            "be75226dc132823188a017e0dd2c027c28738056"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem succ_ltb_mono : forall n m, (S n << S m) = (n << m).",
            "VernacStartTheoremProof",
            "83029770ba6f021a67a74cf62f81f17ade3c01c6"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "rewrite ltb_step.",
            "VernacExtend",
            "e93d60b58ba783a4c80e5d5fa553fe3a9d2c30ad"
        ],
        [
            "rewrite recursion_succ; f_equiv'.",
            "VernacExtend",
            "95443755d4c7deebc5c42696ed86d9de9affd234"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ltb_lt : forall n m, n << m = true <-> n < m.",
            "VernacStartTheoremProof",
            "1dfb16fbb5dd2f920c942769e6dcc705d274925b"
        ],
        [
            "double_induct n m.",
            "VernacExtend",
            "e2854dd0c975186bf45443eb19db68f96a6716c7"
        ],
        [
            "cases m.",
            "VernacExtend",
            "71a90e868409479d080ebc80b6945274e0e78300"
        ],
        [
            "rewrite ltb_0.",
            "VernacExtend",
            "95f053d95dd9ca9d976f01300a9fe9e5db4255f3"
        ],
        [
            "split; intro H; [discriminate H | false_hyp H nlt_0_r].",
            "VernacExtend",
            "7f69aa539911739b606ea3e4c6f717212ae77c9f"
        ],
        [
            "intro n.",
            "VernacExtend",
            "7b184e6f13215b0f6a04b4277e277a724a645d52"
        ],
        [
            "rewrite ltb_0_succ.",
            "VernacExtend",
            "902bd5655eca9c580ac5741ff815385d6f8f9627"
        ],
        [
            "split; intro; [apply lt_0_succ | reflexivity].",
            "VernacExtend",
            "892ae8559aa8e1a2c911c2cb6f668b37cc6b9c17"
        ],
        [
            "intro n.",
            "VernacExtend",
            "7b184e6f13215b0f6a04b4277e277a724a645d52"
        ],
        [
            "rewrite ltb_0.",
            "VernacExtend",
            "95f053d95dd9ca9d976f01300a9fe9e5db4255f3"
        ],
        [
            "split; intro H; [discriminate | false_hyp H nlt_0_r].",
            "VernacExtend",
            "03b153e09c57962a71b2ab0814454b72099d93f2"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "rewrite succ_ltb_mono.",
            "VernacExtend",
            "d307fb7cafb18bdf2a33dda1b79bee520f8d078a"
        ],
        [
            "now rewrite <- succ_lt_mono.",
            "VernacExtend",
            "2c00bdf16648649cfd764bbe51b05ded34d2f1e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ltb_ge : forall n m, n << m = false <-> n >= m.",
            "VernacStartTheoremProof",
            "0aab36b968360dfe9cf76c686e0cbf174044f385"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- not_true_iff_false, ltb_lt.",
            "VernacExtend",
            "baa82bc5a9e615db30065d1b870c413390452b28"
        ],
        [
            "apply nlt_ge.",
            "VernacExtend",
            "8a4a3aad4275353e61c6575657cc9bcd42422e9c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition even (x : N.t) := recursion true (fun _ p => negb p) x.",
            "VernacDefinition",
            "d0103b52599173629ec8dbe480028627189e86fc"
        ],
        [
            "Instance even_wd : Proper (N.eq==>Logic.eq) even.",
            "VernacInstance",
            "874bea7a00c5964f37eefe3d9556b3aa45d428fc"
        ],
        [
            "unfold even.",
            "VernacExtend",
            "c2dd51f6d9f01164a0ca6a37eca2f5d6974fe808"
        ],
        [
            "f_equiv'.",
            "VernacExtend",
            "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem even_0 : even 0 = true.",
            "VernacStartTheoremProof",
            "9b9f06cf0bd11988e9b40c77c8ef0ba57df590da"
        ],
        [
            "unfold even.",
            "VernacExtend",
            "c2dd51f6d9f01164a0ca6a37eca2f5d6974fe808"
        ],
        [
            "now rewrite recursion_0.",
            "VernacExtend",
            "92ee26e10e4669cfb887c36c685c6db0b7406c3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem even_succ : forall x, even (S x) = negb (even x).",
            "VernacStartTheoremProof",
            "398187c6a812f99a442a88d465914c1f712b4761"
        ],
        [
            "unfold even.",
            "VernacExtend",
            "c2dd51f6d9f01164a0ca6a37eca2f5d6974fe808"
        ],
        [
            "intro x; rewrite recursion_succ; f_equiv'.",
            "VernacExtend",
            "37fd760c47245589b74e6c91d61b7e90486afeec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition half_aux (x : N.t) : N.t * N.t := recursion (0, 0) (fun _ p => let (x1, x2) := p in (S x2, x1)) x.",
            "VernacDefinition",
            "e0f6edfa56ae4e8944104dc14016f50ebf6c6076"
        ],
        [
            "Definition half (x : N.t) := snd (half_aux x).",
            "VernacDefinition",
            "f80c0466caadf3c071d871b710ddc324f4b6be57"
        ],
        [
            "Instance half_aux_wd : Proper (N.eq ==> N.eq*N.eq) half_aux.",
            "VernacInstance",
            "562c4bcb1669064b83fcc6fed0c5924c235ca429"
        ],
        [
            "intros x x' Hx.",
            "VernacExtend",
            "49195b1b80b3a0ff84529054731028e547b2d48b"
        ],
        [
            "unfold half_aux.",
            "VernacExtend",
            "ebf7fc6ae8efab108798ef933810a1d1a9f87a26"
        ],
        [
            "f_equiv; trivial.",
            "VernacExtend",
            "e712378a28164fe8a80e7dc70182290ef8cc7792"
        ],
        [
            "intros y y' Hy (u,v) (u',v') (Hu,Hv).",
            "VernacExtend",
            "6517fada021c8687264cddd9258208b7e6f9d6b4"
        ],
        [
            "compute in *.",
            "VernacExtend",
            "fdb9967dbf01d1b50777ffa4d10bbf253e0f8741"
        ],
        [
            "rewrite Hu, Hv; auto with *.",
            "VernacExtend",
            "93625655e60e9d7deb61a6476d77f4b22eb692e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance half_wd : Proper (N.eq==>N.eq) half.",
            "VernacInstance",
            "f6940ef5a80abf8bef8a363d6b36204889807c7b"
        ],
        [
            "unfold half.",
            "VernacExtend",
            "15d86bd34192a37dae8db97c6e15a4a0ae77dda4"
        ],
        [
            "f_equiv'.",
            "VernacExtend",
            "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma half_aux_0 : half_aux 0 = (0,0).",
            "VernacStartTheoremProof",
            "009e73a855f0479ed7411103b9d98a863a54b46e"
        ],
        [
            "unfold half_aux.",
            "VernacExtend",
            "ebf7fc6ae8efab108798ef933810a1d1a9f87a26"
        ],
        [
            "rewrite recursion_0; auto.",
            "VernacExtend",
            "6af9accfd84750d0a7b1eedf02ed007986188c59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma half_aux_succ : forall x, half_aux (S x) = (S (snd (half_aux x)), fst (half_aux x)).",
            "VernacStartTheoremProof",
            "d4bd6bbfe1a3ac41f6a6c34454166007866f79c1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "remember (half_aux x) as h.",
            "VernacExtend",
            "43df6f5ed2961990690450e839417b698bd0761a"
        ],
        [
            "destruct h as (f,s); simpl in *.",
            "VernacExtend",
            "76dc76499ad1c3b1c82de1e96d169d6f203533dc"
        ],
        [
            "unfold half_aux in *.",
            "VernacExtend",
            "a167a9d670ad9f683d8c8f3b82037e7981e663db"
        ],
        [
            "rewrite recursion_succ, <- Heqh; simpl; f_equiv'.",
            "VernacExtend",
            "c724b49a3a81049299a6d03f63346796f7e54632"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem half_aux_spec : forall n, n == fst (half_aux n) + snd (half_aux n).",
            "VernacStartTheoremProof",
            "a3fee2e078c24d1804525571e8a38178bd68d034"
        ],
        [
            "apply induction.",
            "VernacExtend",
            "64631d4cb82eee834d5ba5be2db9e3b2ea630a88"
        ],
        [
            "intros x x' Hx.",
            "VernacExtend",
            "49195b1b80b3a0ff84529054731028e547b2d48b"
        ],
        [
            "setoid_rewrite Hx; auto with *.",
            "VernacExtend",
            "6aaf5a8e1068bfba4b4803c9d51e5a60a156a0a8"
        ],
        [
            "rewrite half_aux_0; simpl; rewrite add_0_l; auto with *.",
            "VernacExtend",
            "61cafd09fea23915247dda2acd2c37ccec3b39b2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite half_aux_succ.",
            "VernacExtend",
            "077a9f3540f8554ac749cf689ee15e87f4142683"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite add_succ_l, add_comm; auto.",
            "VernacExtend",
            "47419fc14ba916699b706f9957fb563ba015cce7"
        ],
        [
            "now f_equiv.",
            "VernacExtend",
            "98cbad0c17c93e8efb72200330cc4dc88ee8a339"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem half_aux_spec2 : forall n, fst (half_aux n) == snd (half_aux n) \\/ fst (half_aux n) == S (snd (half_aux n)).",
            "VernacStartTheoremProof",
            "ad154ea98014bddb9e4f49f336a92f558a83c0bc"
        ],
        [
            "apply induction.",
            "VernacExtend",
            "64631d4cb82eee834d5ba5be2db9e3b2ea630a88"
        ],
        [
            "intros x x' Hx.",
            "VernacExtend",
            "49195b1b80b3a0ff84529054731028e547b2d48b"
        ],
        [
            "setoid_rewrite Hx; auto with *.",
            "VernacExtend",
            "6aaf5a8e1068bfba4b4803c9d51e5a60a156a0a8"
        ],
        [
            "rewrite half_aux_0; simpl.",
            "VernacExtend",
            "a4d7b06b210f0c6ae244ec603fe3f8541915cc08"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite half_aux_succ; simpl.",
            "VernacExtend",
            "093dbad873c31725766b81df599f95d52ca105aa"
        ],
        [
            "destruct H; auto with *.",
            "VernacExtend",
            "6305f5ac6e34ff882b3e60f84d8b1ff06cc7a701"
        ],
        [
            "right; now f_equiv.",
            "VernacExtend",
            "9537ee6af06ad9063430d0a4d1dda1ce67b5ec99"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem half_0 : half 0 == 0.",
            "VernacStartTheoremProof",
            "aa523b66a147f90ff61b81e1cc9b8dbf9529a087"
        ],
        [
            "unfold half.",
            "VernacExtend",
            "15d86bd34192a37dae8db97c6e15a4a0ae77dda4"
        ],
        [
            "rewrite half_aux_0; simpl; auto with *.",
            "VernacExtend",
            "5208b4fe4a0993db6f59c16805ad442fe9f14b91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem half_1 : half 1 == 0.",
            "VernacStartTheoremProof",
            "756f7ae73c5e4a915d0a5ddffbeaf9ab6e6dfe3e"
        ],
        [
            "unfold half.",
            "VernacExtend",
            "15d86bd34192a37dae8db97c6e15a4a0ae77dda4"
        ],
        [
            "rewrite one_succ, half_aux_succ, half_aux_0; simpl; auto with *.",
            "VernacExtend",
            "dfbd185102d8f8de486a77c095c93acf112eedcf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem half_double : forall n, n == 2 * half n \\/ n == 1 + 2 * half n.",
            "VernacStartTheoremProof",
            "3359f19e779d4fde586528a23cf49a91520bdbe1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold half.",
            "VernacExtend",
            "15d86bd34192a37dae8db97c6e15a4a0ae77dda4"
        ],
        [
            "nzsimpl'.",
            "VernacExtend",
            "8e574f0f62759aeb195e08bf64ba0a41330fb166"
        ],
        [
            "destruct (half_aux_spec2 n) as [H|H]; [left|right].",
            "VernacExtend",
            "efaeaf9dc9c8e07612b7766e12333f92e31431e0"
        ],
        [
            "rewrite <- H at 1.",
            "VernacExtend",
            "1228220d0c8493ef9f03a161d6feaf115674678a"
        ],
        [
            "apply half_aux_spec.",
            "VernacExtend",
            "8ab6ef71a715d9876d4380da36946991a40375be"
        ],
        [
            "rewrite <- add_succ_l.",
            "VernacExtend",
            "663a8044b9ee49e6f1918c268c37ddd5e951cad6"
        ],
        [
            "rewrite <- H at 1.",
            "VernacExtend",
            "1228220d0c8493ef9f03a161d6feaf115674678a"
        ],
        [
            "apply half_aux_spec.",
            "VernacExtend",
            "8ab6ef71a715d9876d4380da36946991a40375be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem half_upper_bound : forall n, 2 * half n <= n.",
            "VernacStartTheoremProof",
            "d0f503dd855409672b7d761ab91f74be798cbc85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (half_double n) as [E|E]; rewrite E at 2.",
            "VernacExtend",
            "d937a2d257c52bb93b33651097bd50bad6f7191f"
        ],
        [
            "apply le_refl.",
            "VernacExtend",
            "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
        ],
        [
            "nzsimpl.",
            "VernacExtend",
            "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
        ],
        [
            "apply le_le_succ_r, le_refl.",
            "VernacExtend",
            "2d5036c5837b3e43f791b37c103f4a7ad784dcd2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem half_lower_bound : forall n, n <= 1 + 2 * half n.",
            "VernacStartTheoremProof",
            "c79edaa87151b7341201da101e743f02a211db83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (half_double n) as [E|E]; rewrite E at 1.",
            "VernacExtend",
            "d643f4e1024b0c65b0adbf89f9b6c20995023152"
        ],
        [
            "nzsimpl.",
            "VernacExtend",
            "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
        ],
        [
            "apply le_le_succ_r, le_refl.",
            "VernacExtend",
            "2d5036c5837b3e43f791b37c103f4a7ad784dcd2"
        ],
        [
            "apply le_refl.",
            "VernacExtend",
            "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem half_nz : forall n, 1 < n -> 0 < half n.",
            "VernacStartTheoremProof",
            "eff6f6a6f87f0d999d335fee0f3ded84c6af3e5f"
        ],
        [
            "intros n LT.",
            "VernacExtend",
            "ce1fa65a9fdc8ce16b0aa75a65e64bbe10ae532e"
        ],
        [
            "assert (LE : 0 <= half n) by apply le_0_l.",
            "VernacExtend",
            "70cb703c274c499f4c6da5e01d8822d1d5b9f0e4"
        ],
        [
            "le_elim LE; auto.",
            "VernacExtend",
            "179c04d3f1857d8f421ae9eebdcc3b2d817abbcb"
        ],
        [
            "destruct (half_double n) as [E|E]; rewrite <- LE, mul_0_r, ?add_0_r in E; rewrite E in LT.",
            "VernacExtend",
            "cc7eeec2381ca42baa2146e70e1d1cc0d6d0b545"
        ],
        [
            "order'.",
            "VernacExtend",
            "26a428c4e19636d4a0cb0933578ee52cd17419c4"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem half_decrease : forall n, 0 < n -> half n < n.",
            "VernacStartTheoremProof",
            "a8192165e04c892a6e1fef1a36ed06ddf302be21"
        ],
        [
            "intros n LT.",
            "VernacExtend",
            "ce1fa65a9fdc8ce16b0aa75a65e64bbe10ae532e"
        ],
        [
            "destruct (half_double n) as [E|E]; rewrite E at 2; nzsimpl'.",
            "VernacExtend",
            "9a0a6269b45b31cb44bb79f7c676fb233e409bd1"
        ],
        [
            "rewrite <- add_0_l at 1.",
            "VernacExtend",
            "0359471aeae394f7092b2c5a10c8fea8ed0d0410"
        ],
        [
            "rewrite <- add_lt_mono_r.",
            "VernacExtend",
            "7683435d9ca72757acb818719d7dbc7c17410915"
        ],
        [
            "assert (LE : 0 <= half n) by apply le_0_l.",
            "VernacExtend",
            "70cb703c274c499f4c6da5e01d8822d1d5b9f0e4"
        ],
        [
            "le_elim LE; auto.",
            "VernacExtend",
            "179c04d3f1857d8f421ae9eebdcc3b2d817abbcb"
        ],
        [
            "rewrite <- LE, mul_0_r in E.",
            "VernacExtend",
            "bb18672aa10f68c359c66bc80df8438531ad56e1"
        ],
        [
            "rewrite E in LT.",
            "VernacExtend",
            "daa6275e31a8afe41f817b17678128907d0de88a"
        ],
        [
            "destruct (nlt_0_r _ LT).",
            "VernacExtend",
            "d824e41ac40479d6c7c440e031efd3a9219f2e68"
        ],
        [
            "rewrite <- add_succ_l.",
            "VernacExtend",
            "663a8044b9ee49e6f1918c268c37ddd5e951cad6"
        ],
        [
            "rewrite <- add_0_l at 1.",
            "VernacExtend",
            "0359471aeae394f7092b2c5a10c8fea8ed0d0410"
        ],
        [
            "rewrite <- add_lt_mono_r.",
            "VernacExtend",
            "7683435d9ca72757acb818719d7dbc7c17410915"
        ],
        [
            "apply lt_0_succ.",
            "VernacExtend",
            "2cd25f5d8adf1085b8bed13f18786f1a5780fc39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pow (n m : N.t) := recursion 1 (fun _ r => n*r) m.",
            "VernacDefinition",
            "851657cdb6588c8552dbfb2126b81b560bbc00f2"
        ],
        [
            "Local Infix \"^^\" := pow (at level 30, right associativity).",
            "VernacInfix",
            "d87e8ad025fdb35580c7bf774eeef6ca4001f951"
        ],
        [
            "Instance pow_wd : Proper (N.eq==>N.eq==>N.eq) pow.",
            "VernacInstance",
            "efc95b80caed55efdd34d29b55c9ce3bc40adcf6"
        ],
        [
            "unfold pow.",
            "VernacExtend",
            "f7bb7bd17f7209a79ed08610d1478093e25f454f"
        ],
        [
            "f_equiv'.",
            "VernacExtend",
            "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_0 : forall n, n^^0 == 1.",
            "VernacStartTheoremProof",
            "20991d4a4174d85eb24ce4bfe6c77a38459c1e1f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold pow.",
            "VernacExtend",
            "f7bb7bd17f7209a79ed08610d1478093e25f454f"
        ],
        [
            "rewrite recursion_0.",
            "VernacExtend",
            "a05b4859cf908ed34a6f380aeefb5a5551d94dde"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_succ : forall n m, n^^(S m) == n*(n^^m).",
            "VernacStartTheoremProof",
            "faddc27d2be421cf1b3b1aaa14445aea0cbedbc6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold pow.",
            "VernacExtend",
            "f7bb7bd17f7209a79ed08610d1478093e25f454f"
        ],
        [
            "rewrite recursion_succ; f_equiv'.",
            "VernacExtend",
            "95443755d4c7deebc5c42696ed86d9de9affd234"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition log (x : N.t) : N.t := strong_rec 0 (fun g x => if x << 2 then 0 else S (g (half x))) x.",
            "VernacDefinition",
            "39f5aa87346781888c07f9a09d383a57ec669964"
        ],
        [
            "Instance log_prewd : Proper ((N.eq==>N.eq)==>N.eq==>N.eq) (fun g x => if x<<2 then 0 else S (g (half x))).",
            "VernacInstance",
            "2fbb550a4f033d8af023f33281288874d6e64698"
        ],
        [
            "intros g g' Hg n n' Hn.",
            "VernacExtend",
            "0693084d3f3c6a65c2b5d529b90bfaf7268f3e71"
        ],
        [
            "rewrite Hn.",
            "VernacExtend",
            "19d723e07a3b4e61fa807d0fb1f10a0dccc4a8ac"
        ],
        [
            "destruct (n' << 2); auto with *.",
            "VernacExtend",
            "6f9a7825b942d0e9f6af74f3c851b92c3fd3bbf2"
        ],
        [
            "f_equiv.",
            "VernacExtend",
            "ed0db7be627cb3834790ae805a13139db94a9012"
        ],
        [
            "apply Hg.",
            "VernacExtend",
            "01c1d3461bd6fa059f36624dcd703fe73a0894a8"
        ],
        [
            "now f_equiv.",
            "VernacExtend",
            "98cbad0c17c93e8efb72200330cc4dc88ee8a339"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance log_wd : Proper (N.eq==>N.eq) log.",
            "VernacInstance",
            "8b81d866dd0fc7ecd8bb3c578d54ec447017c503"
        ],
        [
            "intros x x' Exx'.",
            "VernacExtend",
            "8b1fd015d51f1836ab33341bfd40414b81683039"
        ],
        [
            "unfold log.",
            "VernacExtend",
            "59b13b0c894ae61d4ac90be937d78be2f4fa5322"
        ],
        [
            "apply strong_rec_wd; f_equiv'.",
            "VernacExtend",
            "4fd894b9ac6e9d10bdeae844f949f5b4e31b9bff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma log_good_step : forall n h1 h2, (forall m, m < n -> h1 m == h2 m) -> (if n << 2 then 0 else S (h1 (half n))) == (if n << 2 then 0 else S (h2 (half n))).",
            "VernacStartTheoremProof",
            "e596be462e0c5cbdbb6b884f10ac3423f5273c5d"
        ],
        [
            "intros n h1 h2 E.",
            "VernacExtend",
            "94b1d66aea6026248258e6665fec27b8d90ebb3f"
        ],
        [
            "destruct (n<<2) eqn:H.",
            "VernacExtend",
            "e8820730d63de31c627688b319241d49ccf7a59a"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "f_equiv.",
            "VernacExtend",
            "ed0db7be627cb3834790ae805a13139db94a9012"
        ],
        [
            "apply E, half_decrease.",
            "VernacExtend",
            "4bd536f2a2e3005edaccd2caf16fcb0b1ec175c1"
        ],
        [
            "rewrite two_succ, <- not_true_iff_false, ltb_lt, nlt_ge, le_succ_l in H.",
            "VernacExtend",
            "82f4cc9d5f306a1640adad75573db0fa1b905d6c"
        ],
        [
            "order'.",
            "VernacExtend",
            "26a428c4e19636d4a0cb0933578ee52cd17419c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve log_good_step.",
            "VernacHints",
            "9e84f062ead45c0f9b9f7aaab55264c80fda5113"
        ],
        [
            "Theorem log_init : forall n, n < 2 -> log n == 0.",
            "VernacStartTheoremProof",
            "ab651722c548f1f23c196cc3a7e535c9081614c4"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "unfold log.",
            "VernacExtend",
            "59b13b0c894ae61d4ac90be937d78be2f4fa5322"
        ],
        [
            "rewrite strong_rec_fixpoint; auto with *.",
            "VernacExtend",
            "4214a71412adcc66a20b8f797d1f67d967c6919a"
        ],
        [
            "replace (n << 2) with true; auto with *.",
            "VernacExtend",
            "8c64db2cda59db4d02de8998cce02090235d7482"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "now rewrite ltb_lt.",
            "VernacExtend",
            "200b840e00564e4848cc103672083ead0860f521"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem log_step : forall n, 2 <= n -> log n == S (log (half n)).",
            "VernacStartTheoremProof",
            "6822746aae211d8cc3c87ca51d311a781830a40b"
        ],
        [
            "intros n Hn.",
            "VernacExtend",
            "4a15d287eb245c84eabfb58cba2e377ac025029a"
        ],
        [
            "unfold log.",
            "VernacExtend",
            "59b13b0c894ae61d4ac90be937d78be2f4fa5322"
        ],
        [
            "rewrite strong_rec_fixpoint; auto with *.",
            "VernacExtend",
            "4214a71412adcc66a20b8f797d1f67d967c6919a"
        ],
        [
            "replace (n << 2) with false; auto with *.",
            "VernacExtend",
            "1c48276906a9645184498261f6833bb6a6650e68"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "rewrite <- not_true_iff_false, ltb_lt, nlt_ge; auto.",
            "VernacExtend",
            "a9f745f4747bfb6f291bbf435bbc82b3686fb76c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem pow2_log : forall n, 0 < n -> half n < 2^^(log n) <= n.",
            "VernacStartTheoremProof",
            "c1a97dd0757c21b174388fd1e591a31224106f4b"
        ],
        [
            "intro n; generalize (le_refl n).",
            "VernacExtend",
            "77b970c8e91acdb4e9bb0ffaf040e8cff04f17f0"
        ],
        [
            "set (k:=n) at -2.",
            "VernacExtend",
            "5b226619071f709a0709a1909ff741719b6131f1"
        ],
        [
            "clearbody k.",
            "VernacExtend",
            "a819b2ae373d602054adfc93b032018110b4f6da"
        ],
        [
            "revert k.",
            "VernacExtend",
            "9954edd748d0cf1057a2885d54db0597618ac6e0"
        ],
        [
            "pattern n.",
            "VernacExtend",
            "08c70a187492b2b293b2a787a83b543d8b736fa0"
        ],
        [
            "apply induction; clear n.",
            "VernacExtend",
            "33ff300c642a88103b95a1f8753bdcbae51639f2"
        ],
        [
            "intros n n' Hn; setoid_rewrite Hn; auto with *.",
            "VernacExtend",
            "17ca1107f0355045726ad7ee502994ed41f792ff"
        ],
        [
            "intros k Hk1 Hk2.",
            "VernacExtend",
            "abc3228803e0df94a33a9cbf32188e7d446b533a"
        ],
        [
            "le_elim Hk1.",
            "VernacExtend",
            "457eeb96b44c365f19ffe513b77b376636525363"
        ],
        [
            "destruct (nlt_0_r _ Hk1).",
            "VernacExtend",
            "77336f7671c035ad9989a7e294969ae73122762e"
        ],
        [
            "rewrite Hk1 in Hk2.",
            "VernacExtend",
            "b4a16af148dc47b566a21588f185478210d26cd9"
        ],
        [
            "destruct (nlt_0_r _ Hk2).",
            "VernacExtend",
            "3df1dc92cabc1e768340cef61818e7607567094f"
        ],
        [
            "intros n IH k Hk1 Hk2.",
            "VernacExtend",
            "0f3c8f650378b8251aa020bb5128d3f7b841169e"
        ],
        [
            "destruct (lt_ge_cases k 2) as [LT|LE].",
            "VernacExtend",
            "b863d8c0b6c934cfd8b81ca5876e01a3716ef200"
        ],
        [
            "rewrite log_init, pow_0 by auto.",
            "VernacExtend",
            "63269fb8859a85352d8e7a8f1d310a176928a4ff"
        ],
        [
            "rewrite <- le_succ_l, <- one_succ in Hk2.",
            "VernacExtend",
            "6f5ae94d85f58703c484ac5a7c01cd4eb0cb5455"
        ],
        [
            "le_elim Hk2.",
            "VernacExtend",
            "6ecbe4052a3a8bdfff9eebab1899710e2a2528a2"
        ],
        [
            "rewrite two_succ, <- nle_gt, le_succ_l in LT.",
            "VernacExtend",
            "260afd1c99231a4c53472bb285902bffd1491b60"
        ],
        [
            "destruct LT; auto.",
            "VernacExtend",
            "151f1c141eb6b234e709df494a3ab31d967f5c89"
        ],
        [
            "rewrite <- Hk2.",
            "VernacExtend",
            "e436590ab7520048b2c7dd45db7bd014ed263741"
        ],
        [
            "rewrite half_1; auto using lt_0_1, le_refl.",
            "VernacExtend",
            "ff90427591994e0fdd2ad25f5aae18db3f04f9d8"
        ],
        [
            "rewrite log_step, pow_succ by auto.",
            "VernacExtend",
            "51b661f557b668155e7db1fa8caf9b357ae83290"
        ],
        [
            "rewrite two_succ, le_succ_l in LE.",
            "VernacExtend",
            "4549656c7605c2c8dc623ea5f3cc23a507f1da60"
        ],
        [
            "destruct (IH (half k)) as (IH1,IH2).",
            "VernacExtend",
            "2c687767ccc228d771f32c8b3391b48fa1728907"
        ],
        [
            "rewrite <- lt_succ_r.",
            "VernacExtend",
            "dbb8763606ec1c465f3d52d334206f7e2eb38e0a"
        ],
        [
            "apply lt_le_trans with k; auto.",
            "VernacExtend",
            "694355c4686874c3a5939262c8674229da77ed20"
        ],
        [
            "now apply half_decrease.",
            "VernacExtend",
            "2b60e8d8f51b6ff85d5816ee3e4c3a11565ce3eb"
        ],
        [
            "apply half_nz; auto.",
            "VernacExtend",
            "4ea3e2a05761b58ada6507511c74bcf64d51c7eb"
        ],
        [
            "set (K:=2^^log (half k)) in *; clearbody K.",
            "VernacExtend",
            "113ccb9e568ddd227d493efa882eb9e80ef8f98b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite <- le_succ_l in IH1.",
            "VernacExtend",
            "4c3085e4048576946b8e26d5c5be5a3c8245a9bf"
        ],
        [
            "apply mul_le_mono_l with (p:=2) in IH1.",
            "VernacExtend",
            "54497696dfc72e72aff6dc5f92c22052a2ab7dca"
        ],
        [
            "eapply lt_le_trans; eauto.",
            "VernacExtend",
            "e6ee2fef529a3ebffb8150e9b0941227c7977c0f"
        ],
        [
            "nzsimpl'.",
            "VernacExtend",
            "8e574f0f62759aeb195e08bf64ba0a41330fb166"
        ],
        [
            "rewrite lt_succ_r.",
            "VernacExtend",
            "097913cfd34ba72cac962d3bc2e555f7e038e310"
        ],
        [
            "eapply le_trans; [ eapply half_lower_bound | ].",
            "VernacExtend",
            "c7a73b15c3d15c7ed36bc19d88f62bad2bf16789"
        ],
        [
            "nzsimpl'; apply le_refl.",
            "VernacExtend",
            "eb1f819047e6e9f6d3ef446aa373c2802f0b6075"
        ],
        [
            "eapply le_trans; [ | eapply half_upper_bound ].",
            "VernacExtend",
            "911c679ead01396da35f4756cd6c2a8887d1802a"
        ],
        [
            "apply mul_le_mono_l; auto.",
            "VernacExtend",
            "5a615daef4d6737a6b851f8ce1d51f7eb11fef0d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NdefOpsProp.",
            "VernacEndSegment",
            "11ba516d78a37df280695f0f3e4a3dd344ed705b"
        ]
    ],
    "proofs": [
        {
            "name": "if_zero_wd",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "unfold if_zero.",
                        "VernacExtend",
                        "a5e9e55c63924cfe3b81f5e817f27304b10c6fbd"
                    ]
                },
                {
                    "command": [
                        "f_equiv'.",
                        "VernacExtend",
                        "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "if_zero_0",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "unfold if_zero; intros; now rewrite recursion_0.",
                        "VernacExtend",
                        "16bdd67c095cfd1ee04407a284e81da2d58c230d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "if_zero_succ",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros; unfold if_zero.",
                        "VernacExtend",
                        "16c6f99778013b93a275f4b170dd23c2efbaced1"
                    ]
                },
                {
                    "command": [
                        "now rewrite recursion_succ.",
                        "VernacExtend",
                        "235448e29bc92cb5cae791c586eea404d53aebb7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "def_add_wd",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "unfold def_add.",
                        "VernacExtend",
                        "511aab00a7ca48cd9b47405c8d07294e319e650a"
                    ]
                },
                {
                    "command": [
                        "f_equiv'.",
                        "VernacExtend",
                        "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "def_add_0_l",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intro y.",
                        "VernacExtend",
                        "ff685af42a1246b2c01b3c56229f29040ac3f340"
                    ]
                },
                {
                    "command": [
                        "unfold def_add.",
                        "VernacExtend",
                        "511aab00a7ca48cd9b47405c8d07294e319e650a"
                    ]
                },
                {
                    "command": [
                        "now rewrite recursion_0.",
                        "VernacExtend",
                        "92ee26e10e4669cfb887c36c685c6db0b7406c3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "def_add_succ_l",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros x y; unfold def_add.",
                        "VernacExtend",
                        "963b2b13e39a0a9fe75ff12d6cff43ab3744b238"
                    ]
                },
                {
                    "command": [
                        "rewrite recursion_succ; f_equiv'.",
                        "VernacExtend",
                        "95443755d4c7deebc5c42696ed86d9de9affd234"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "def_add_add",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros n m; induct n.",
                        "VernacExtend",
                        "d1568f660d2ad27d91d6a4dea90cf933039d13fb"
                    ]
                },
                {
                    "command": [
                        "now rewrite def_add_0_l, add_0_l.",
                        "VernacExtend",
                        "88a968fec8a7092d6af5f32b42d1a644206257a1"
                    ]
                },
                {
                    "command": [
                        "intros n H.",
                        "VernacExtend",
                        "348ce37d2f619b733a523bd998a06fecedcf3fc4"
                    ]
                },
                {
                    "command": [
                        "now rewrite def_add_succ_l, add_succ_l, H.",
                        "VernacExtend",
                        "5b7fdfa0f60c8f0daffa611ab001c09eb1549ffd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "def_mul_wd",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "unfold def_mul.",
                        "VernacExtend",
                        "834cdc15a7bd57b62bd3d8686032d820463745dd"
                    ]
                },
                {
                    "command": [
                        "f_equiv'.",
                        "VernacExtend",
                        "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "def_mul_0_r",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold def_mul.",
                        "VernacExtend",
                        "834cdc15a7bd57b62bd3d8686032d820463745dd"
                    ]
                },
                {
                    "command": [
                        "now rewrite recursion_0.",
                        "VernacExtend",
                        "92ee26e10e4669cfb887c36c685c6db0b7406c3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "def_mul_succ_r",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros x y; unfold def_mul.",
                        "VernacExtend",
                        "79c40271a085328041dff14523afc27b73b6da31"
                    ]
                },
                {
                    "command": [
                        "rewrite recursion_succ; auto with *.",
                        "VernacExtend",
                        "3e4a539c846e7e0f353c94204b7f71704102ea97"
                    ]
                },
                {
                    "command": [
                        "f_equiv'.",
                        "VernacExtend",
                        "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "def_mul_mul",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "intros n m; induct m.",
                        "VernacExtend",
                        "606cbacf9675b650be07c3c48938ecfe29461a4d"
                    ]
                },
                {
                    "command": [
                        "now rewrite def_mul_0_r, mul_0_r.",
                        "VernacExtend",
                        "8fa2818c6536a11bcd9335458e59f6b4b9a19f45"
                    ]
                },
                {
                    "command": [
                        "intros m IH; now rewrite def_mul_succ_r, mul_succ_r, def_add_add, IH.",
                        "VernacExtend",
                        "f4fbf580d35d7842c8d6529a31484ab04fb2edb2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltb_wd",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "unfold ltb.",
                        "VernacExtend",
                        "5ff84fcff87310f13b5dfc198bf097b1b6b5fabb"
                    ]
                },
                {
                    "command": [
                        "f_equiv'.",
                        "VernacExtend",
                        "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltb_base",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intro n; unfold ltb; now rewrite recursion_0.",
                        "VernacExtend",
                        "bde5365bb8fe57d7180e35a414bee229920b948b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltb_step",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "intros m n; unfold ltb at 1.",
                        "VernacExtend",
                        "e3881c2440764ff8ca0e1b319dd839ddd52adfcb"
                    ]
                },
                {
                    "command": [
                        "f_equiv.",
                        "VernacExtend",
                        "ed0db7be627cb3834790ae805a13139db94a9012"
                    ]
                },
                {
                    "command": [
                        "rewrite recursion_succ; f_equiv'.",
                        "VernacExtend",
                        "95443755d4c7deebc5c42696ed86d9de9affd234"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltb_0",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "cases n.",
                        "VernacExtend",
                        "12366c918461820f6df3677de2220e508eb994d2"
                    ]
                },
                {
                    "command": [
                        "rewrite ltb_base; now rewrite if_zero_0.",
                        "VernacExtend",
                        "cb00cf635cfa45037ded6e371169cd01206d611c"
                    ]
                },
                {
                    "command": [
                        "intro n; rewrite ltb_step.",
                        "VernacExtend",
                        "15629fdb9802ffe47acbfb73ad0797389617ba1a"
                    ]
                },
                {
                    "command": [
                        "now rewrite recursion_0.",
                        "VernacExtend",
                        "92ee26e10e4669cfb887c36c685c6db0b7406c3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltb_0_succ",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "intro n; rewrite ltb_base; now rewrite if_zero_succ.",
                        "VernacExtend",
                        "be75226dc132823188a017e0dd2c027c28738056"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_ltb_mono",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "rewrite ltb_step.",
                        "VernacExtend",
                        "e93d60b58ba783a4c80e5d5fa553fe3a9d2c30ad"
                    ]
                },
                {
                    "command": [
                        "rewrite recursion_succ; f_equiv'.",
                        "VernacExtend",
                        "95443755d4c7deebc5c42696ed86d9de9affd234"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltb_lt",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "double_induct n m.",
                        "VernacExtend",
                        "e2854dd0c975186bf45443eb19db68f96a6716c7"
                    ]
                },
                {
                    "command": [
                        "cases m.",
                        "VernacExtend",
                        "71a90e868409479d080ebc80b6945274e0e78300"
                    ]
                },
                {
                    "command": [
                        "rewrite ltb_0.",
                        "VernacExtend",
                        "95f053d95dd9ca9d976f01300a9fe9e5db4255f3"
                    ]
                },
                {
                    "command": [
                        "split; intro H; [discriminate H | false_hyp H nlt_0_r].",
                        "VernacExtend",
                        "7f69aa539911739b606ea3e4c6f717212ae77c9f"
                    ]
                },
                {
                    "command": [
                        "intro n.",
                        "VernacExtend",
                        "7b184e6f13215b0f6a04b4277e277a724a645d52"
                    ]
                },
                {
                    "command": [
                        "rewrite ltb_0_succ.",
                        "VernacExtend",
                        "902bd5655eca9c580ac5741ff815385d6f8f9627"
                    ]
                },
                {
                    "command": [
                        "split; intro; [apply lt_0_succ | reflexivity].",
                        "VernacExtend",
                        "892ae8559aa8e1a2c911c2cb6f668b37cc6b9c17"
                    ]
                },
                {
                    "command": [
                        "intro n.",
                        "VernacExtend",
                        "7b184e6f13215b0f6a04b4277e277a724a645d52"
                    ]
                },
                {
                    "command": [
                        "rewrite ltb_0.",
                        "VernacExtend",
                        "95f053d95dd9ca9d976f01300a9fe9e5db4255f3"
                    ]
                },
                {
                    "command": [
                        "split; intro H; [discriminate | false_hyp H nlt_0_r].",
                        "VernacExtend",
                        "03b153e09c57962a71b2ab0814454b72099d93f2"
                    ]
                },
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "rewrite succ_ltb_mono.",
                        "VernacExtend",
                        "d307fb7cafb18bdf2a33dda1b79bee520f8d078a"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- succ_lt_mono.",
                        "VernacExtend",
                        "2c00bdf16648649cfd764bbe51b05ded34d2f1e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ltb_ge",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- not_true_iff_false, ltb_lt.",
                        "VernacExtend",
                        "baa82bc5a9e615db30065d1b870c413390452b28"
                    ]
                },
                {
                    "command": [
                        "apply nlt_ge.",
                        "VernacExtend",
                        "8a4a3aad4275353e61c6575657cc9bcd42422e9c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_wd",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "unfold even.",
                        "VernacExtend",
                        "c2dd51f6d9f01164a0ca6a37eca2f5d6974fe808"
                    ]
                },
                {
                    "command": [
                        "f_equiv'.",
                        "VernacExtend",
                        "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_0",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "unfold even.",
                        "VernacExtend",
                        "c2dd51f6d9f01164a0ca6a37eca2f5d6974fe808"
                    ]
                },
                {
                    "command": [
                        "now rewrite recursion_0.",
                        "VernacExtend",
                        "92ee26e10e4669cfb887c36c685c6db0b7406c3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_succ",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "unfold even.",
                        "VernacExtend",
                        "c2dd51f6d9f01164a0ca6a37eca2f5d6974fe808"
                    ]
                },
                {
                    "command": [
                        "intro x; rewrite recursion_succ; f_equiv'.",
                        "VernacExtend",
                        "37fd760c47245589b74e6c91d61b7e90486afeec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "half_aux_wd",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "intros x x' Hx.",
                        "VernacExtend",
                        "49195b1b80b3a0ff84529054731028e547b2d48b"
                    ]
                },
                {
                    "command": [
                        "unfold half_aux.",
                        "VernacExtend",
                        "ebf7fc6ae8efab108798ef933810a1d1a9f87a26"
                    ]
                },
                {
                    "command": [
                        "f_equiv; trivial.",
                        "VernacExtend",
                        "e712378a28164fe8a80e7dc70182290ef8cc7792"
                    ]
                },
                {
                    "command": [
                        "intros y y' Hy (u,v) (u',v') (Hu,Hv).",
                        "VernacExtend",
                        "6517fada021c8687264cddd9258208b7e6f9d6b4"
                    ]
                },
                {
                    "command": [
                        "compute in *.",
                        "VernacExtend",
                        "fdb9967dbf01d1b50777ffa4d10bbf253e0f8741"
                    ]
                },
                {
                    "command": [
                        "rewrite Hu, Hv; auto with *.",
                        "VernacExtend",
                        "93625655e60e9d7deb61a6476d77f4b22eb692e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "half_wd",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "unfold half.",
                        "VernacExtend",
                        "15d86bd34192a37dae8db97c6e15a4a0ae77dda4"
                    ]
                },
                {
                    "command": [
                        "f_equiv'.",
                        "VernacExtend",
                        "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "half_aux_0",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "unfold half_aux.",
                        "VernacExtend",
                        "ebf7fc6ae8efab108798ef933810a1d1a9f87a26"
                    ]
                },
                {
                    "command": [
                        "rewrite recursion_0; auto.",
                        "VernacExtend",
                        "6af9accfd84750d0a7b1eedf02ed007986188c59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "half_aux_succ",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "remember (half_aux x) as h.",
                        "VernacExtend",
                        "43df6f5ed2961990690450e839417b698bd0761a"
                    ]
                },
                {
                    "command": [
                        "destruct h as (f,s); simpl in *.",
                        "VernacExtend",
                        "76dc76499ad1c3b1c82de1e96d169d6f203533dc"
                    ]
                },
                {
                    "command": [
                        "unfold half_aux in *.",
                        "VernacExtend",
                        "a167a9d670ad9f683d8c8f3b82037e7981e663db"
                    ]
                },
                {
                    "command": [
                        "rewrite recursion_succ, <- Heqh; simpl; f_equiv'.",
                        "VernacExtend",
                        "c724b49a3a81049299a6d03f63346796f7e54632"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "half_aux_spec",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "apply induction.",
                        "VernacExtend",
                        "64631d4cb82eee834d5ba5be2db9e3b2ea630a88"
                    ]
                },
                {
                    "command": [
                        "intros x x' Hx.",
                        "VernacExtend",
                        "49195b1b80b3a0ff84529054731028e547b2d48b"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Hx; auto with *.",
                        "VernacExtend",
                        "6aaf5a8e1068bfba4b4803c9d51e5a60a156a0a8"
                    ]
                },
                {
                    "command": [
                        "rewrite half_aux_0; simpl; rewrite add_0_l; auto with *.",
                        "VernacExtend",
                        "61cafd09fea23915247dda2acd2c37ccec3b39b2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite half_aux_succ.",
                        "VernacExtend",
                        "077a9f3540f8554ac749cf689ee15e87f4142683"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite add_succ_l, add_comm; auto.",
                        "VernacExtend",
                        "47419fc14ba916699b706f9957fb563ba015cce7"
                    ]
                },
                {
                    "command": [
                        "now f_equiv.",
                        "VernacExtend",
                        "98cbad0c17c93e8efb72200330cc4dc88ee8a339"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "half_aux_spec2",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "apply induction.",
                        "VernacExtend",
                        "64631d4cb82eee834d5ba5be2db9e3b2ea630a88"
                    ]
                },
                {
                    "command": [
                        "intros x x' Hx.",
                        "VernacExtend",
                        "49195b1b80b3a0ff84529054731028e547b2d48b"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Hx; auto with *.",
                        "VernacExtend",
                        "6aaf5a8e1068bfba4b4803c9d51e5a60a156a0a8"
                    ]
                },
                {
                    "command": [
                        "rewrite half_aux_0; simpl.",
                        "VernacExtend",
                        "a4d7b06b210f0c6ae244ec603fe3f8541915cc08"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite half_aux_succ; simpl.",
                        "VernacExtend",
                        "093dbad873c31725766b81df599f95d52ca105aa"
                    ]
                },
                {
                    "command": [
                        "destruct H; auto with *.",
                        "VernacExtend",
                        "6305f5ac6e34ff882b3e60f84d8b1ff06cc7a701"
                    ]
                },
                {
                    "command": [
                        "right; now f_equiv.",
                        "VernacExtend",
                        "9537ee6af06ad9063430d0a4d1dda1ce67b5ec99"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "half_0",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "unfold half.",
                        "VernacExtend",
                        "15d86bd34192a37dae8db97c6e15a4a0ae77dda4"
                    ]
                },
                {
                    "command": [
                        "rewrite half_aux_0; simpl; auto with *.",
                        "VernacExtend",
                        "5208b4fe4a0993db6f59c16805ad442fe9f14b91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "half_1",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "unfold half.",
                        "VernacExtend",
                        "15d86bd34192a37dae8db97c6e15a4a0ae77dda4"
                    ]
                },
                {
                    "command": [
                        "rewrite one_succ, half_aux_succ, half_aux_0; simpl; auto with *.",
                        "VernacExtend",
                        "dfbd185102d8f8de486a77c095c93acf112eedcf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "half_double",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold half.",
                        "VernacExtend",
                        "15d86bd34192a37dae8db97c6e15a4a0ae77dda4"
                    ]
                },
                {
                    "command": [
                        "nzsimpl'.",
                        "VernacExtend",
                        "8e574f0f62759aeb195e08bf64ba0a41330fb166"
                    ]
                },
                {
                    "command": [
                        "destruct (half_aux_spec2 n) as [H|H]; [left|right].",
                        "VernacExtend",
                        "efaeaf9dc9c8e07612b7766e12333f92e31431e0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H at 1.",
                        "VernacExtend",
                        "1228220d0c8493ef9f03a161d6feaf115674678a"
                    ]
                },
                {
                    "command": [
                        "apply half_aux_spec.",
                        "VernacExtend",
                        "8ab6ef71a715d9876d4380da36946991a40375be"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_succ_l.",
                        "VernacExtend",
                        "663a8044b9ee49e6f1918c268c37ddd5e951cad6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H at 1.",
                        "VernacExtend",
                        "1228220d0c8493ef9f03a161d6feaf115674678a"
                    ]
                },
                {
                    "command": [
                        "apply half_aux_spec.",
                        "VernacExtend",
                        "8ab6ef71a715d9876d4380da36946991a40375be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "half_upper_bound",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (half_double n) as [E|E]; rewrite E at 2.",
                        "VernacExtend",
                        "d937a2d257c52bb93b33651097bd50bad6f7191f"
                    ]
                },
                {
                    "command": [
                        "apply le_refl.",
                        "VernacExtend",
                        "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
                    ]
                },
                {
                    "command": [
                        "nzsimpl.",
                        "VernacExtend",
                        "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
                    ]
                },
                {
                    "command": [
                        "apply le_le_succ_r, le_refl.",
                        "VernacExtend",
                        "2d5036c5837b3e43f791b37c103f4a7ad784dcd2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "half_lower_bound",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (half_double n) as [E|E]; rewrite E at 1.",
                        "VernacExtend",
                        "d643f4e1024b0c65b0adbf89f9b6c20995023152"
                    ]
                },
                {
                    "command": [
                        "nzsimpl.",
                        "VernacExtend",
                        "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
                    ]
                },
                {
                    "command": [
                        "apply le_le_succ_r, le_refl.",
                        "VernacExtend",
                        "2d5036c5837b3e43f791b37c103f4a7ad784dcd2"
                    ]
                },
                {
                    "command": [
                        "apply le_refl.",
                        "VernacExtend",
                        "cf6c26be2dc0610be68abd6b5b4bb52c94832e79"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "half_nz",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "intros n LT.",
                        "VernacExtend",
                        "ce1fa65a9fdc8ce16b0aa75a65e64bbe10ae532e"
                    ]
                },
                {
                    "command": [
                        "assert (LE : 0 <= half n) by apply le_0_l.",
                        "VernacExtend",
                        "70cb703c274c499f4c6da5e01d8822d1d5b9f0e4"
                    ]
                },
                {
                    "command": [
                        "le_elim LE; auto.",
                        "VernacExtend",
                        "179c04d3f1857d8f421ae9eebdcc3b2d817abbcb"
                    ]
                },
                {
                    "command": [
                        "destruct (half_double n) as [E|E]; rewrite <- LE, mul_0_r, ?add_0_r in E; rewrite E in LT.",
                        "VernacExtend",
                        "cc7eeec2381ca42baa2146e70e1d1cc0d6d0b545"
                    ]
                },
                {
                    "command": [
                        "order'.",
                        "VernacExtend",
                        "26a428c4e19636d4a0cb0933578ee52cd17419c4"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "half_decrease",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "intros n LT.",
                        "VernacExtend",
                        "ce1fa65a9fdc8ce16b0aa75a65e64bbe10ae532e"
                    ]
                },
                {
                    "command": [
                        "destruct (half_double n) as [E|E]; rewrite E at 2; nzsimpl'.",
                        "VernacExtend",
                        "9a0a6269b45b31cb44bb79f7c676fb233e409bd1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_0_l at 1.",
                        "VernacExtend",
                        "0359471aeae394f7092b2c5a10c8fea8ed0d0410"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_lt_mono_r.",
                        "VernacExtend",
                        "7683435d9ca72757acb818719d7dbc7c17410915"
                    ]
                },
                {
                    "command": [
                        "assert (LE : 0 <= half n) by apply le_0_l.",
                        "VernacExtend",
                        "70cb703c274c499f4c6da5e01d8822d1d5b9f0e4"
                    ]
                },
                {
                    "command": [
                        "le_elim LE; auto.",
                        "VernacExtend",
                        "179c04d3f1857d8f421ae9eebdcc3b2d817abbcb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- LE, mul_0_r in E.",
                        "VernacExtend",
                        "bb18672aa10f68c359c66bc80df8438531ad56e1"
                    ]
                },
                {
                    "command": [
                        "rewrite E in LT.",
                        "VernacExtend",
                        "daa6275e31a8afe41f817b17678128907d0de88a"
                    ]
                },
                {
                    "command": [
                        "destruct (nlt_0_r _ LT).",
                        "VernacExtend",
                        "d824e41ac40479d6c7c440e031efd3a9219f2e68"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_succ_l.",
                        "VernacExtend",
                        "663a8044b9ee49e6f1918c268c37ddd5e951cad6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_0_l at 1.",
                        "VernacExtend",
                        "0359471aeae394f7092b2c5a10c8fea8ed0d0410"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_lt_mono_r.",
                        "VernacExtend",
                        "7683435d9ca72757acb818719d7dbc7c17410915"
                    ]
                },
                {
                    "command": [
                        "apply lt_0_succ.",
                        "VernacExtend",
                        "2cd25f5d8adf1085b8bed13f18786f1a5780fc39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_wd",
            "line_nb": 226,
            "steps": [
                {
                    "command": [
                        "unfold pow.",
                        "VernacExtend",
                        "f7bb7bd17f7209a79ed08610d1478093e25f454f"
                    ]
                },
                {
                    "command": [
                        "f_equiv'.",
                        "VernacExtend",
                        "7b663a64f38a216d92ac8ad5c6193cd7b790b3c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_0",
            "line_nb": 230,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold pow.",
                        "VernacExtend",
                        "f7bb7bd17f7209a79ed08610d1478093e25f454f"
                    ]
                },
                {
                    "command": [
                        "rewrite recursion_0.",
                        "VernacExtend",
                        "a05b4859cf908ed34a6f380aeefb5a5551d94dde"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_succ",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold pow.",
                        "VernacExtend",
                        "f7bb7bd17f7209a79ed08610d1478093e25f454f"
                    ]
                },
                {
                    "command": [
                        "rewrite recursion_succ; f_equiv'.",
                        "VernacExtend",
                        "95443755d4c7deebc5c42696ed86d9de9affd234"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "log_prewd",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "intros g g' Hg n n' Hn.",
                        "VernacExtend",
                        "0693084d3f3c6a65c2b5d529b90bfaf7268f3e71"
                    ]
                },
                {
                    "command": [
                        "rewrite Hn.",
                        "VernacExtend",
                        "19d723e07a3b4e61fa807d0fb1f10a0dccc4a8ac"
                    ]
                },
                {
                    "command": [
                        "destruct (n' << 2); auto with *.",
                        "VernacExtend",
                        "6f9a7825b942d0e9f6af74f3c851b92c3fd3bbf2"
                    ]
                },
                {
                    "command": [
                        "f_equiv.",
                        "VernacExtend",
                        "ed0db7be627cb3834790ae805a13139db94a9012"
                    ]
                },
                {
                    "command": [
                        "apply Hg.",
                        "VernacExtend",
                        "01c1d3461bd6fa059f36624dcd703fe73a0894a8"
                    ]
                },
                {
                    "command": [
                        "now f_equiv.",
                        "VernacExtend",
                        "98cbad0c17c93e8efb72200330cc4dc88ee8a339"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "log_wd",
            "line_nb": 250,
            "steps": [
                {
                    "command": [
                        "intros x x' Exx'.",
                        "VernacExtend",
                        "8b1fd015d51f1836ab33341bfd40414b81683039"
                    ]
                },
                {
                    "command": [
                        "unfold log.",
                        "VernacExtend",
                        "59b13b0c894ae61d4ac90be937d78be2f4fa5322"
                    ]
                },
                {
                    "command": [
                        "apply strong_rec_wd; f_equiv'.",
                        "VernacExtend",
                        "4fd894b9ac6e9d10bdeae844f949f5b4e31b9bff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "log_good_step",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "intros n h1 h2 E.",
                        "VernacExtend",
                        "94b1d66aea6026248258e6665fec27b8d90ebb3f"
                    ]
                },
                {
                    "command": [
                        "destruct (n<<2) eqn:H.",
                        "VernacExtend",
                        "e8820730d63de31c627688b319241d49ccf7a59a"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "f_equiv.",
                        "VernacExtend",
                        "ed0db7be627cb3834790ae805a13139db94a9012"
                    ]
                },
                {
                    "command": [
                        "apply E, half_decrease.",
                        "VernacExtend",
                        "4bd536f2a2e3005edaccd2caf16fcb0b1ec175c1"
                    ]
                },
                {
                    "command": [
                        "rewrite two_succ, <- not_true_iff_false, ltb_lt, nlt_ge, le_succ_l in H.",
                        "VernacExtend",
                        "82f4cc9d5f306a1640adad75573db0fa1b905d6c"
                    ]
                },
                {
                    "command": [
                        "order'.",
                        "VernacExtend",
                        "26a428c4e19636d4a0cb0933578ee52cd17419c4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "log_init",
            "line_nb": 265,
            "steps": [
                {
                    "command": [
                        "intros n Hn.",
                        "VernacExtend",
                        "4a15d287eb245c84eabfb58cba2e377ac025029a"
                    ]
                },
                {
                    "command": [
                        "unfold log.",
                        "VernacExtend",
                        "59b13b0c894ae61d4ac90be937d78be2f4fa5322"
                    ]
                },
                {
                    "command": [
                        "rewrite strong_rec_fixpoint; auto with *.",
                        "VernacExtend",
                        "4214a71412adcc66a20b8f797d1f67d967c6919a"
                    ]
                },
                {
                    "command": [
                        "replace (n << 2) with true; auto with *.",
                        "VernacExtend",
                        "8c64db2cda59db4d02de8998cce02090235d7482"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "now rewrite ltb_lt.",
                        "VernacExtend",
                        "200b840e00564e4848cc103672083ead0860f521"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "log_step",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "intros n Hn.",
                        "VernacExtend",
                        "4a15d287eb245c84eabfb58cba2e377ac025029a"
                    ]
                },
                {
                    "command": [
                        "unfold log.",
                        "VernacExtend",
                        "59b13b0c894ae61d4ac90be937d78be2f4fa5322"
                    ]
                },
                {
                    "command": [
                        "rewrite strong_rec_fixpoint; auto with *.",
                        "VernacExtend",
                        "4214a71412adcc66a20b8f797d1f67d967c6919a"
                    ]
                },
                {
                    "command": [
                        "replace (n << 2) with false; auto with *.",
                        "VernacExtend",
                        "1c48276906a9645184498261f6833bb6a6650e68"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "rewrite <- not_true_iff_false, ltb_lt, nlt_ge; auto.",
                        "VernacExtend",
                        "a9f745f4747bfb6f291bbf435bbc82b3686fb76c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow2_log",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "intro n; generalize (le_refl n).",
                        "VernacExtend",
                        "77b970c8e91acdb4e9bb0ffaf040e8cff04f17f0"
                    ]
                },
                {
                    "command": [
                        "set (k:=n) at -2.",
                        "VernacExtend",
                        "5b226619071f709a0709a1909ff741719b6131f1"
                    ]
                },
                {
                    "command": [
                        "clearbody k.",
                        "VernacExtend",
                        "a819b2ae373d602054adfc93b032018110b4f6da"
                    ]
                },
                {
                    "command": [
                        "revert k.",
                        "VernacExtend",
                        "9954edd748d0cf1057a2885d54db0597618ac6e0"
                    ]
                },
                {
                    "command": [
                        "pattern n.",
                        "VernacExtend",
                        "08c70a187492b2b293b2a787a83b543d8b736fa0"
                    ]
                },
                {
                    "command": [
                        "apply induction; clear n.",
                        "VernacExtend",
                        "33ff300c642a88103b95a1f8753bdcbae51639f2"
                    ]
                },
                {
                    "command": [
                        "intros n n' Hn; setoid_rewrite Hn; auto with *.",
                        "VernacExtend",
                        "17ca1107f0355045726ad7ee502994ed41f792ff"
                    ]
                },
                {
                    "command": [
                        "intros k Hk1 Hk2.",
                        "VernacExtend",
                        "abc3228803e0df94a33a9cbf32188e7d446b533a"
                    ]
                },
                {
                    "command": [
                        "le_elim Hk1.",
                        "VernacExtend",
                        "457eeb96b44c365f19ffe513b77b376636525363"
                    ]
                },
                {
                    "command": [
                        "destruct (nlt_0_r _ Hk1).",
                        "VernacExtend",
                        "77336f7671c035ad9989a7e294969ae73122762e"
                    ]
                },
                {
                    "command": [
                        "rewrite Hk1 in Hk2.",
                        "VernacExtend",
                        "b4a16af148dc47b566a21588f185478210d26cd9"
                    ]
                },
                {
                    "command": [
                        "destruct (nlt_0_r _ Hk2).",
                        "VernacExtend",
                        "3df1dc92cabc1e768340cef61818e7607567094f"
                    ]
                },
                {
                    "command": [
                        "intros n IH k Hk1 Hk2.",
                        "VernacExtend",
                        "0f3c8f650378b8251aa020bb5128d3f7b841169e"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_ge_cases k 2) as [LT|LE].",
                        "VernacExtend",
                        "b863d8c0b6c934cfd8b81ca5876e01a3716ef200"
                    ]
                },
                {
                    "command": [
                        "rewrite log_init, pow_0 by auto.",
                        "VernacExtend",
                        "63269fb8859a85352d8e7a8f1d310a176928a4ff"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_succ_l, <- one_succ in Hk2.",
                        "VernacExtend",
                        "6f5ae94d85f58703c484ac5a7c01cd4eb0cb5455"
                    ]
                },
                {
                    "command": [
                        "le_elim Hk2.",
                        "VernacExtend",
                        "6ecbe4052a3a8bdfff9eebab1899710e2a2528a2"
                    ]
                },
                {
                    "command": [
                        "rewrite two_succ, <- nle_gt, le_succ_l in LT.",
                        "VernacExtend",
                        "260afd1c99231a4c53472bb285902bffd1491b60"
                    ]
                },
                {
                    "command": [
                        "destruct LT; auto.",
                        "VernacExtend",
                        "151f1c141eb6b234e709df494a3ab31d967f5c89"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hk2.",
                        "VernacExtend",
                        "e436590ab7520048b2c7dd45db7bd014ed263741"
                    ]
                },
                {
                    "command": [
                        "rewrite half_1; auto using lt_0_1, le_refl.",
                        "VernacExtend",
                        "ff90427591994e0fdd2ad25f5aae18db3f04f9d8"
                    ]
                },
                {
                    "command": [
                        "rewrite log_step, pow_succ by auto.",
                        "VernacExtend",
                        "51b661f557b668155e7db1fa8caf9b357ae83290"
                    ]
                },
                {
                    "command": [
                        "rewrite two_succ, le_succ_l in LE.",
                        "VernacExtend",
                        "4549656c7605c2c8dc623ea5f3cc23a507f1da60"
                    ]
                },
                {
                    "command": [
                        "destruct (IH (half k)) as (IH1,IH2).",
                        "VernacExtend",
                        "2c687767ccc228d771f32c8b3391b48fa1728907"
                    ]
                },
                {
                    "command": [
                        "rewrite <- lt_succ_r.",
                        "VernacExtend",
                        "dbb8763606ec1c465f3d52d334206f7e2eb38e0a"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with k; auto.",
                        "VernacExtend",
                        "694355c4686874c3a5939262c8674229da77ed20"
                    ]
                },
                {
                    "command": [
                        "now apply half_decrease.",
                        "VernacExtend",
                        "2b60e8d8f51b6ff85d5816ee3e4c3a11565ce3eb"
                    ]
                },
                {
                    "command": [
                        "apply half_nz; auto.",
                        "VernacExtend",
                        "4ea3e2a05761b58ada6507511c74bcf64d51c7eb"
                    ]
                },
                {
                    "command": [
                        "set (K:=2^^log (half k)) in *; clearbody K.",
                        "VernacExtend",
                        "113ccb9e568ddd227d493efa882eb9e80ef8f98b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_succ_l in IH1.",
                        "VernacExtend",
                        "4c3085e4048576946b8e26d5c5be5a3c8245a9bf"
                    ]
                },
                {
                    "command": [
                        "apply mul_le_mono_l with (p:=2) in IH1.",
                        "VernacExtend",
                        "54497696dfc72e72aff6dc5f92c22052a2ab7dca"
                    ]
                },
                {
                    "command": [
                        "eapply lt_le_trans; eauto.",
                        "VernacExtend",
                        "e6ee2fef529a3ebffb8150e9b0941227c7977c0f"
                    ]
                },
                {
                    "command": [
                        "nzsimpl'.",
                        "VernacExtend",
                        "8e574f0f62759aeb195e08bf64ba0a41330fb166"
                    ]
                },
                {
                    "command": [
                        "rewrite lt_succ_r.",
                        "VernacExtend",
                        "097913cfd34ba72cac962d3bc2e555f7e038e310"
                    ]
                },
                {
                    "command": [
                        "eapply le_trans; [ eapply half_lower_bound | ].",
                        "VernacExtend",
                        "c7a73b15c3d15c7ed36bc19d88f62bad2bf16789"
                    ]
                },
                {
                    "command": [
                        "nzsimpl'; apply le_refl.",
                        "VernacExtend",
                        "eb1f819047e6e9f6d3ef446aa373c2802f0b6075"
                    ]
                },
                {
                    "command": [
                        "eapply le_trans; [ | eapply half_upper_bound ].",
                        "VernacExtend",
                        "911c679ead01396da35f4756cd6c2a8887d1802a"
                    ]
                },
                {
                    "command": [
                        "apply mul_le_mono_l; auto.",
                        "VernacExtend",
                        "5a615daef4d6737a6b851f8ce1d51f7eb11fef0d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}