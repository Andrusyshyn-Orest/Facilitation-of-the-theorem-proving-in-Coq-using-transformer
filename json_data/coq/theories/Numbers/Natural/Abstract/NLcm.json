{
    "filename": "theories/Numbers/Natural/Abstract/NLcm.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import NAxioms NSub NDiv NGcd.",
            "VernacRequire",
            "ce2d5158bcead54acae1eda06ebafc8c9d8cdd9e"
        ],
        [
            "Module Type NLcmProp (Import A : NAxiomsSig') (Import B : NSubProp A) (Import C : NDivProp A B) (Import D : NGcdProp A B).",
            "VernacDeclareModuleType",
            "4fab8f779364e52255d5f310025f19834c451e71"
        ],
        [
            "Lemma mod_divide : forall a b, b~=0 -> (a mod b == 0 <-> (b|a)).",
            "VernacStartTheoremProof",
            "7cd858113f916249eaada62a90c2e85ee3d25f24"
        ],
        [
            "intros a b Hb.",
            "VernacExtend",
            "4acf50263777c8159f0209cc85e75b737597ba41"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros Hab.",
            "VernacExtend",
            "971000144c97ecedc2e60fc3637ddb1d2a64ab90"
        ],
        [
            "exists (a/b).",
            "VernacExtend",
            "f67c754356dd3dd83fc0d6a4154287cef9f4a5de"
        ],
        [
            "rewrite mul_comm.",
            "VernacExtend",
            "5f0fb0765ec04101790f2b78062bf5490bbe5e03"
        ],
        [
            "rewrite (div_mod a b Hb) at 1.",
            "VernacExtend",
            "0a3534cbe2728e0d957129d558053ec7028d9a60"
        ],
        [
            "rewrite Hab; now nzsimpl.",
            "VernacExtend",
            "14e5eb334054fedf6d27401d08bac6e866f7f95c"
        ],
        [
            "intros (c,Hc).",
            "VernacExtend",
            "bb016d689093cb6c63c1d10197ed0f9c5e5317f1"
        ],
        [
            "rewrite Hc.",
            "VernacExtend",
            "fc5aedf7a3e2d990ae51448e074500a246f368e9"
        ],
        [
            "now apply mod_mul.",
            "VernacExtend",
            "64a5a285888b6cd57d063f34a3aa12864782028c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_div_mul_exact : forall a b c, b~=0 -> (b|a) -> (c*a)/b == c*(a/b).",
            "VernacStartTheoremProof",
            "c2828d69a0fa1ecc03e7dc9a4a4665da2e7373eb"
        ],
        [
            "intros a b c Hb H.",
            "VernacExtend",
            "cf414a52b4f44784a44f39f5993a0460ea393701"
        ],
        [
            "apply mul_cancel_l with b; trivial.",
            "VernacExtend",
            "b7d7fd2fce4b0df7c0bbeabca3e1d3d970db45c9"
        ],
        [
            "rewrite mul_assoc, mul_shuffle0.",
            "VernacExtend",
            "578f91544c4028cd05e9712e23cca92f37795bc0"
        ],
        [
            "assert (H':=H).",
            "VernacExtend",
            "15c1ed350339019dd3099ce17e681f2e618fbc4a"
        ],
        [
            "apply mod_divide, div_exact in H'; trivial.",
            "VernacExtend",
            "6ebc0f4c8a0fddd67c979fd6e1e4da9cfcd8aed4"
        ],
        [
            "rewrite <- H', (mul_comm a c).",
            "VernacExtend",
            "75a68bfff5b85727acab7c6ae5465f0acaa0cefc"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply div_exact; trivial.",
            "VernacExtend",
            "64332c92c5e846b4e0dcd8ad97e7c9c1b838d32a"
        ],
        [
            "apply mod_divide; trivial.",
            "VernacExtend",
            "a6cbfc5049b0b108a3ee5f9282b7f38a1e0427a2"
        ],
        [
            "now apply divide_mul_r.",
            "VernacExtend",
            "59182b8aa95d807eef673553f442fc6911449a39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_div_factor : forall a b c, c~=0 -> (c|a) -> (c|b) -> gcd (a/c) (b/c) == (gcd a b)/c.",
            "VernacStartTheoremProof",
            "56e3a14cab8a1caa0eb47370773a24b49912c428"
        ],
        [
            "intros a b c Hc Ha Hb.",
            "VernacExtend",
            "a8097798575b1b145623508745b4541d5a72d9da"
        ],
        [
            "apply mul_cancel_l with c; try order.",
            "VernacExtend",
            "e5973db491cf5d7fd5d0e5ea68e65bf786fe2856"
        ],
        [
            "assert (H:=gcd_greatest _ _ _ Ha Hb).",
            "VernacExtend",
            "4a794f9f0cde9b61c94e0855bad3fbfd32b37b85"
        ],
        [
            "apply mod_divide, div_exact in H; try order.",
            "VernacExtend",
            "806249ebe602084c44db6f93ac3646c5b156d63e"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "rewrite <- gcd_mul_mono_l; try order.",
            "VernacExtend",
            "f562c2abcc8843054ee2d35cd6f5faf95396429f"
        ],
        [
            "f_equiv; symmetry; apply div_exact; try order; apply mod_divide; trivial; try order.",
            "VernacExtend",
            "94aaf290b69311d0e5980b7a2bf6bc6858975080"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_div_gcd : forall a b g, g~=0 -> g == gcd a b -> gcd (a/g) (b/g) == 1.",
            "VernacStartTheoremProof",
            "74ca0190e68e9a589a521799ad494d66ce2128a4"
        ],
        [
            "intros a b g NZ EQ.",
            "VernacExtend",
            "3b687ae95ce04388ae3be0e72a0c5c8291eb20a2"
        ],
        [
            "rewrite gcd_div_factor.",
            "VernacExtend",
            "bcff2b0e63d8e3031a24da53ea9ca8c314f04879"
        ],
        [
            "now rewrite <- EQ, div_same.",
            "VernacExtend",
            "ef7d5ab6622e6e91096520ce795c2a978460044a"
        ],
        [
            "generalize (gcd_nonneg a b); order.",
            "VernacExtend",
            "7a93bfa5b32753f70db627ef2f5be5a5334b1a96"
        ],
        [
            "rewrite EQ; apply gcd_divide_l.",
            "VernacExtend",
            "957b8b8fa6a51b839ebcc0933c568689b68adec0"
        ],
        [
            "rewrite EQ; apply gcd_divide_r.",
            "VernacExtend",
            "edac2334ba189b6c4c1167057bc9da7d6c09785b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_mod : forall a b, b~=0 -> gcd (a mod b) b == gcd b a.",
            "VernacStartTheoremProof",
            "68ff74c6e57b02800901d1ce14ad562f22a87bbf"
        ],
        [
            "intros a b Hb.",
            "VernacExtend",
            "4acf50263777c8159f0209cc85e75b737597ba41"
        ],
        [
            "rewrite (gcd_comm _ b).",
            "VernacExtend",
            "f28fda0847180588750ccc03812521fc4df4dd73"
        ],
        [
            "rewrite <- (gcd_add_mult_diag_r b (a mod b) (a/b)).",
            "VernacExtend",
            "efefbe597785f52e3c3beb0214954e9ee92fbe8d"
        ],
        [
            "now rewrite add_comm, mul_comm, <- div_mod.",
            "VernacExtend",
            "00eddadb6c14a3d891af008a7b7fa2fe27e112a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition lcm a b := a*(b/gcd a b).",
            "VernacDefinition",
            "c6134eadc3eabe56fe423ad2cba867d64b3df47b"
        ],
        [
            "Instance lcm_wd : Proper (eq==>eq==>eq) lcm.",
            "VernacInstance",
            "418046e77a5a9e0e4a4d0ff2282e169acb5aabea"
        ],
        [
            "unfold lcm.",
            "VernacExtend",
            "9bd73e7c13a12aa7a0f804b885c2d9bd3f65a988"
        ],
        [
            "solve_proper.",
            "VernacExtend",
            "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_equiv1 : forall a b, gcd a b ~= 0 -> a * (b / gcd a b) == (a*b)/gcd a b.",
            "VernacStartTheoremProof",
            "2e0ac7e62b82f33b2c74b1ed2b26497ae7328375"
        ],
        [
            "intros a b H.",
            "VernacExtend",
            "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
        ],
        [
            "rewrite divide_div_mul_exact; try easy.",
            "VernacExtend",
            "da50622bda04abf6d6d84be55662c473f1ea462a"
        ],
        [
            "apply gcd_divide_r.",
            "VernacExtend",
            "23f22b4be94ee31f90f559afe9253eb0db533a6b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_equiv2 : forall a b, gcd a b ~= 0 -> (a / gcd a b) * b == (a*b)/gcd a b.",
            "VernacStartTheoremProof",
            "5322b1675c2f1661f9b676a91d60cd1db40c4f12"
        ],
        [
            "intros a b H.",
            "VernacExtend",
            "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
        ],
        [
            "rewrite 2 (mul_comm _ b).",
            "VernacExtend",
            "b59dfdf3682fa5a5ffa48aa15cc00f51609458bb"
        ],
        [
            "rewrite divide_div_mul_exact; try easy.",
            "VernacExtend",
            "da50622bda04abf6d6d84be55662c473f1ea462a"
        ],
        [
            "apply gcd_divide_l.",
            "VernacExtend",
            "ffcffc43e027dff4c204925ba6773cbc66f94de7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_div_swap : forall a b, (a / gcd a b) * b == a * (b / gcd a b).",
            "VernacStartTheoremProof",
            "bc35c5d10a1b85c8481c16a62477aca1a616468d"
        ],
        [
            "intros a b.",
            "VernacExtend",
            "8c4941fda9d591147c446ef6e06d248ec0e6bf7a"
        ],
        [
            "destruct (eq_decidable (gcd a b) 0) as [EQ|NEQ].",
            "VernacExtend",
            "1246b308d84a6807b11bc8cce22c9942b74a8c43"
        ],
        [
            "apply gcd_eq_0 in EQ.",
            "VernacExtend",
            "aa8f9b5280dab82ced6f6466c6fec2528af89bd3"
        ],
        [
            "destruct EQ as (EQ,EQ').",
            "VernacExtend",
            "2da49a26ad53ff941db1c9c9bb74bdce1cb14fa0"
        ],
        [
            "rewrite EQ, EQ'.",
            "VernacExtend",
            "3990a1281486fe9ce675059b7506e3f7191e9617"
        ],
        [
            "now nzsimpl.",
            "VernacExtend",
            "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
        ],
        [
            "now rewrite lcm_equiv1, <-lcm_equiv2.",
            "VernacExtend",
            "d78c3cef518219ca80e5936c2a75138419b9ab77"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_lcm_l : forall a b, (a | lcm a b).",
            "VernacStartTheoremProof",
            "c39e8b243ac441f9cea02a32b8b85793a9605d02"
        ],
        [
            "unfold lcm.",
            "VernacExtend",
            "9bd73e7c13a12aa7a0f804b885c2d9bd3f65a988"
        ],
        [
            "intros a b.",
            "VernacExtend",
            "8c4941fda9d591147c446ef6e06d248ec0e6bf7a"
        ],
        [
            "apply divide_factor_l.",
            "VernacExtend",
            "f1945737ed38b0fd624657db8fa6d1807bed0e85"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_lcm_r : forall a b, (b | lcm a b).",
            "VernacStartTheoremProof",
            "12d7ce078f565e8121ad1e3cdbbd4f7597fc3537"
        ],
        [
            "unfold lcm.",
            "VernacExtend",
            "9bd73e7c13a12aa7a0f804b885c2d9bd3f65a988"
        ],
        [
            "intros a b.",
            "VernacExtend",
            "8c4941fda9d591147c446ef6e06d248ec0e6bf7a"
        ],
        [
            "rewrite <- gcd_div_swap.",
            "VernacExtend",
            "0b01f2a6057e52805efd75443f463edaa75fce68"
        ],
        [
            "apply divide_factor_r.",
            "VernacExtend",
            "38a70e3edc9cecf8cc8c0590572e7fd3e7163fa9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_div : forall a b c, a~=0 -> (a|b) -> (b|c) -> (b/a|c/a).",
            "VernacStartTheoremProof",
            "9a73a8728cdcef4ff1d5ddefacec5e4c555228fa"
        ],
        [
            "intros a b c Ha Hb (c',Hc).",
            "VernacExtend",
            "845ffce7a15fc91a490f379fdf7ac75768bcb1f4"
        ],
        [
            "exists c'.",
            "VernacExtend",
            "5569033e95456b4c53740667b231ecb94442c6c9"
        ],
        [
            "now rewrite <- divide_div_mul_exact, Hc.",
            "VernacExtend",
            "eefe40ce3e5c0217d09e31576e546eb5e330a758"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_least : forall a b c, (a | c) -> (b | c) -> (lcm a b | c).",
            "VernacStartTheoremProof",
            "5e73ad1d452604236f17e44ffc12b5349c24e56a"
        ],
        [
            "intros a b c Ha Hb.",
            "VernacExtend",
            "e90bf88424f10e340806e631c031985f5eaa1c80"
        ],
        [
            "unfold lcm.",
            "VernacExtend",
            "9bd73e7c13a12aa7a0f804b885c2d9bd3f65a988"
        ],
        [
            "destruct (eq_decidable (gcd a b) 0) as [EQ|NEQ].",
            "VernacExtend",
            "1246b308d84a6807b11bc8cce22c9942b74a8c43"
        ],
        [
            "apply gcd_eq_0 in EQ.",
            "VernacExtend",
            "aa8f9b5280dab82ced6f6466c6fec2528af89bd3"
        ],
        [
            "destruct EQ as (EQ,EQ').",
            "VernacExtend",
            "2da49a26ad53ff941db1c9c9bb74bdce1cb14fa0"
        ],
        [
            "rewrite EQ in *.",
            "VernacExtend",
            "ffd7cd0b693f60169c5a8dd5b12ac635cf9ed012"
        ],
        [
            "now nzsimpl.",
            "VernacExtend",
            "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
        ],
        [
            "assert (Ga := gcd_divide_l a b).",
            "VernacExtend",
            "01426a075a22146a8a0517929af010a7ff3bd185"
        ],
        [
            "assert (Gb := gcd_divide_r a b).",
            "VernacExtend",
            "7609207c8eb5cc820a1b534aa7b85512428168be"
        ],
        [
            "set (g:=gcd a b) in *.",
            "VernacExtend",
            "0dcecb9b830799dbc62685695f4566c138ee9aa2"
        ],
        [
            "assert (Ha' := divide_div g a c NEQ Ga Ha).",
            "VernacExtend",
            "ca320ca58beba5277a33870c961cbeedc212c45c"
        ],
        [
            "assert (Hb' := divide_div g b c NEQ Gb Hb).",
            "VernacExtend",
            "e93aee51e66b907949c921880d801879e7f54623"
        ],
        [
            "destruct Ha' as (a',Ha').",
            "VernacExtend",
            "3420dba80777be842cc121f95444b3b7e35cb394"
        ],
        [
            "rewrite Ha', mul_comm in Hb'.",
            "VernacExtend",
            "64007036cb92c33fe84b90b3ae01ad7039d2250e"
        ],
        [
            "apply gauss in Hb'; [|apply gcd_div_gcd; unfold g; trivial using gcd_comm].",
            "VernacExtend",
            "87b314cfab483c6e2c4cfa2dc8817844bae5634b"
        ],
        [
            "destruct Hb' as (b',Hb').",
            "VernacExtend",
            "67730e99a3862448b5afea236ed4bfe083b61abb"
        ],
        [
            "exists b'.",
            "VernacExtend",
            "35ea12e5c629577ad18b1aa567ac35f6e7caeb3b"
        ],
        [
            "rewrite mul_shuffle3, <- Hb'.",
            "VernacExtend",
            "dd4727b82e4055c8f29e27d09a2b764297f12da1"
        ],
        [
            "rewrite (proj2 (div_exact c g NEQ)).",
            "VernacExtend",
            "a54018b0a84277605391f78c92989c923f7242f7"
        ],
        [
            "rewrite Ha', mul_shuffle3, (mul_comm a a').",
            "VernacExtend",
            "7342808f1ad9d4525fad215a35e35c85017d6cd4"
        ],
        [
            "f_equiv.",
            "VernacExtend",
            "ed0db7be627cb3834790ae805a13139db94a9012"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply div_exact; trivial.",
            "VernacExtend",
            "64332c92c5e846b4e0dcd8ad97e7c9c1b838d32a"
        ],
        [
            "apply mod_divide; trivial.",
            "VernacExtend",
            "a6cbfc5049b0b108a3ee5f9282b7f38a1e0427a2"
        ],
        [
            "apply mod_divide; trivial.",
            "VernacExtend",
            "a6cbfc5049b0b108a3ee5f9282b7f38a1e0427a2"
        ],
        [
            "transitivity a; trivial.",
            "VernacExtend",
            "0f9edeac21d6a2d39050d0cfa7f94bcd891ed4dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_comm : forall a b, lcm a b == lcm b a.",
            "VernacStartTheoremProof",
            "bc76ce0b37ae8a5bd59f6dd513f092e0b6c146fb"
        ],
        [
            "intros a b.",
            "VernacExtend",
            "8c4941fda9d591147c446ef6e06d248ec0e6bf7a"
        ],
        [
            "unfold lcm.",
            "VernacExtend",
            "9bd73e7c13a12aa7a0f804b885c2d9bd3f65a988"
        ],
        [
            "rewrite (gcd_comm b), (mul_comm b).",
            "VernacExtend",
            "6419048e7243779a9002111aa35a58ec66bdc5e3"
        ],
        [
            "now rewrite <- gcd_div_swap.",
            "VernacExtend",
            "bd06059c01a27b374470f9be49a28c17e22c3c3e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_divide_iff : forall n m p, (lcm n m | p) <-> (n | p) /\\ (m | p).",
            "VernacStartTheoremProof",
            "2467153f62f25902b536c54b23a48f567d27d945"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "transitivity (lcm n m); trivial using divide_lcm_l.",
            "VernacExtend",
            "ae5017c4c00ca538288678dee2623cce52158bb9"
        ],
        [
            "transitivity (lcm n m); trivial using divide_lcm_r.",
            "VernacExtend",
            "3a35f8f6c8142c5facc0e8a6620b745c3127aa11"
        ],
        [
            "intros (H,H').",
            "VernacExtend",
            "b991c5101438ca8c345f0ab0492b64f5360bab5e"
        ],
        [
            "now apply lcm_least.",
            "VernacExtend",
            "5f88b7b4966d132f0ac45513354fc73c4dbfa781"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_unique : forall n m p, 0<=p -> (n|p) -> (m|p) -> (forall q, (n|q) -> (m|q) -> (p|q)) -> lcm n m == p.",
            "VernacStartTheoremProof",
            "d1cca0ad0891b27d1cdca1a89450c6be2c3a9475"
        ],
        [
            "intros n m p Hp Hn Hm H.",
            "VernacExtend",
            "c2dacc9e928c49a31b735c4231429fb7c7a243b5"
        ],
        [
            "apply divide_antisym; trivial.",
            "VernacExtend",
            "36c9132adf3462f606d33f138666f17da6904e5a"
        ],
        [
            "now apply lcm_least.",
            "VernacExtend",
            "5f88b7b4966d132f0ac45513354fc73c4dbfa781"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply divide_lcm_l.",
            "VernacExtend",
            "d969780d96618ad6946b21fcba4c29722a295396"
        ],
        [
            "apply divide_lcm_r.",
            "VernacExtend",
            "84077a2aa30627abd0ddca7cdaf8065eb3846f11"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_unique_alt : forall n m p, 0<=p -> (forall q, (p|q) <-> (n|q) /\\ (m|q)) -> lcm n m == p.",
            "VernacStartTheoremProof",
            "0fb5d5d51ef307ebf79b83e6d4c1b7051cdfa9c5"
        ],
        [
            "intros n m p Hp H.",
            "VernacExtend",
            "4a390feaf0e8abf95215780023e151cf3ea361e8"
        ],
        [
            "apply lcm_unique; trivial.",
            "VernacExtend",
            "1a575ade3d2706d8338f2f1258726e1e43bff176"
        ],
        [
            "apply H, divide_refl.",
            "VernacExtend",
            "1ac8559bea6c172bec708dfb8dc320a5e55e578c"
        ],
        [
            "apply H, divide_refl.",
            "VernacExtend",
            "1ac8559bea6c172bec708dfb8dc320a5e55e578c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_assoc : forall n m p, lcm n (lcm m p) == lcm (lcm n m) p.",
            "VernacStartTheoremProof",
            "f92d452ac4d904b97609e559e9018634e72dfb4a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply lcm_unique_alt.",
            "VernacExtend",
            "18ee4c350fc95e864c51de7da26fd617009c2f7a"
        ],
        [
            "apply le_0_l.",
            "VernacExtend",
            "606697e0b4a3c1f2b140a14e33e5da526da6c9a2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite !lcm_divide_iff, and_assoc.",
            "VernacExtend",
            "d49039e0b740edb770a169d1de774deb405d2bf1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_0_l : forall n, lcm 0 n == 0.",
            "VernacStartTheoremProof",
            "419fe0400718a73a6f9ffca3e86dda41d8fccee6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply lcm_unique; trivial.",
            "VernacExtend",
            "1a575ade3d2706d8338f2f1258726e1e43bff176"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "apply divide_refl.",
            "VernacExtend",
            "af5881c97e07a5a2b2d5463d7792c7b34256a743"
        ],
        [
            "apply divide_0_r.",
            "VernacExtend",
            "dd28a5c443063a2e06d448357840c5452dc6c2e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_0_r : forall n, lcm n 0 == 0.",
            "VernacStartTheoremProof",
            "8c6c1d6aebfe2d349cb33ff7b34de2a54332d179"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite lcm_comm, lcm_0_l.",
            "VernacExtend",
            "7539912c7c362d9913431b12608d0b94f007b47b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_1_l : forall n, lcm 1 n == n.",
            "VernacStartTheoremProof",
            "693cc701b22789f20e92048d0a3f53beb766bd97"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply lcm_unique; trivial using divide_1_l, le_0_l, divide_refl.",
            "VernacExtend",
            "64065c0854226a02bcb25a38643abc0ce0b60629"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_1_r : forall n, lcm n 1 == n.",
            "VernacStartTheoremProof",
            "9cd83fca1ac936cae22bc55fd6d0646f9afdd8ec"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite lcm_comm, lcm_1_l.",
            "VernacExtend",
            "472ae114618182d3d85ba96711c4c627576a9060"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_diag : forall n, lcm n n == n.",
            "VernacStartTheoremProof",
            "74668bf9f3f8b65971c654cc8473f402af6d05c1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply lcm_unique; trivial using divide_refl, le_0_l.",
            "VernacExtend",
            "36d76af9ce585cf33df3673a7e0e532339675fbc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_eq_0 : forall n m, lcm n m == 0 <-> n == 0 \\/ m == 0.",
            "VernacStartTheoremProof",
            "82a677de9816e6a5b89c3b30bf11033677444fb5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros EQ.",
            "VernacExtend",
            "55ec42483a4ca0813a68f464f2703cf9ccb237d7"
        ],
        [
            "apply eq_mul_0.",
            "VernacExtend",
            "5bb20380d9e5b37f9e1b25d93b4b8d7dd4e4a173"
        ],
        [
            "apply divide_0_l.",
            "VernacExtend",
            "3e8eea2ffb9a5ffad2802859d69238ed1917322b"
        ],
        [
            "rewrite <- EQ.",
            "VernacExtend",
            "24dbb15b276d4d9b12a890733e217a4157c5a67a"
        ],
        [
            "apply lcm_least.",
            "VernacExtend",
            "acf6e1ebfa9e6c9a6d8d94174752f2f625f0eef3"
        ],
        [
            "apply divide_factor_l.",
            "VernacExtend",
            "f1945737ed38b0fd624657db8fa6d1807bed0e85"
        ],
        [
            "apply divide_factor_r.",
            "VernacExtend",
            "38a70e3edc9cecf8cc8c0590572e7fd3e7163fa9"
        ],
        [
            "destruct 1 as [EQ|EQ]; rewrite EQ.",
            "VernacExtend",
            "2c9673293907e10dd8e5c206ee508ad0b5175f40"
        ],
        [
            "apply lcm_0_l.",
            "VernacExtend",
            "15fd9658ebbf3fa7e1bf338d5cbd6bb8f6b46481"
        ],
        [
            "apply lcm_0_r.",
            "VernacExtend",
            "2544a43b33982590e3b363ccd9f565786fcf57fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_lcm_eq_r : forall n m, (n|m) -> lcm n m == m.",
            "VernacStartTheoremProof",
            "50106f8dcf1334d56f5f6e08b4f30ee5193915f6"
        ],
        [
            "intros n m H.",
            "VernacExtend",
            "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
        ],
        [
            "apply lcm_unique_alt; trivial using le_0_l.",
            "VernacExtend",
            "d7a5e69955ff395829238cc9dba7d9b69ee15eb1"
        ],
        [
            "intros q.",
            "VernacExtend",
            "ff9d121cdb516bd63ace418a2de73c7fb0f8ba3e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "now transitivity m.",
            "VernacExtend",
            "7586a1536f0121468ba4be37c7437f42d11fde5b"
        ],
        [
            "now destruct 1.",
            "VernacExtend",
            "599cf8488dce43cedbb3491ca78a34441bf2a1bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma divide_lcm_iff : forall n m, (n|m) <-> lcm n m == m.",
            "VernacStartTheoremProof",
            "0a1919fa3133d22ac4c09415f680ec37b52beb95"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "now apply divide_lcm_eq_r.",
            "VernacExtend",
            "54a5ef3e77562b06af9a91c7ae33a7f64d53ab77"
        ],
        [
            "intros EQ.",
            "VernacExtend",
            "55ec42483a4ca0813a68f464f2703cf9ccb237d7"
        ],
        [
            "rewrite <- EQ.",
            "VernacExtend",
            "24dbb15b276d4d9b12a890733e217a4157c5a67a"
        ],
        [
            "apply divide_lcm_l.",
            "VernacExtend",
            "d969780d96618ad6946b21fcba4c29722a295396"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_mul_mono_l : forall n m p, lcm (p * n) (p * m) == p * lcm n m.",
            "VernacStartTheoremProof",
            "7642ecd80f7622813fdfeca938fc3625f17a71c8"
        ],
        [
            "intros n m p.",
            "VernacExtend",
            "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
        ],
        [
            "destruct (eq_decidable p 0) as [Hp|Hp].",
            "VernacExtend",
            "764f23382c0f4f692770bfb93d6c649ae78f0d76"
        ],
        [
            "rewrite Hp.",
            "VernacExtend",
            "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
        ],
        [
            "nzsimpl.",
            "VernacExtend",
            "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
        ],
        [
            "rewrite lcm_0_l.",
            "VernacExtend",
            "51e92e818246f03ca09d8ee3810ddf09a982629e"
        ],
        [
            "now nzsimpl.",
            "VernacExtend",
            "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
        ],
        [
            "destruct (eq_decidable (gcd n m) 0) as [Hg|Hg].",
            "VernacExtend",
            "90147f553e8c852728c3b2d4452af00f45306958"
        ],
        [
            "apply gcd_eq_0 in Hg.",
            "VernacExtend",
            "184a01978d1c651fbd393c51d7a6a7b0462f9553"
        ],
        [
            "destruct Hg as (Hn,Hm); rewrite Hn, Hm.",
            "VernacExtend",
            "4edc31bfc4a901cc5e9b7228e1489f5409e11099"
        ],
        [
            "nzsimpl.",
            "VernacExtend",
            "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
        ],
        [
            "rewrite lcm_0_l.",
            "VernacExtend",
            "51e92e818246f03ca09d8ee3810ddf09a982629e"
        ],
        [
            "now nzsimpl.",
            "VernacExtend",
            "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
        ],
        [
            "unfold lcm.",
            "VernacExtend",
            "9bd73e7c13a12aa7a0f804b885c2d9bd3f65a988"
        ],
        [
            "rewrite gcd_mul_mono_l.",
            "VernacExtend",
            "97993dce328d05c94dd58657d198207536b4f688"
        ],
        [
            "rewrite mul_assoc.",
            "VernacExtend",
            "b39bc6f19afe82b1537f8c515e450ab4d3574b7d"
        ],
        [
            "f_equiv.",
            "VernacExtend",
            "ed0db7be627cb3834790ae805a13139db94a9012"
        ],
        [
            "now rewrite div_mul_cancel_l.",
            "VernacExtend",
            "73a1770993911bcb29adfb658a52c1bccceaa445"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lcm_mul_mono_r : forall n m p, lcm (n * p) (m * p) == lcm n m * p.",
            "VernacStartTheoremProof",
            "86fc89f71128ee96ce019289a5ce4476578b7004"
        ],
        [
            "intros n m p.",
            "VernacExtend",
            "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
        ],
        [
            "now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm.",
            "VernacExtend",
            "1098a719b1bd70893e4194955e50fa08c1ad3991"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gcd_1_lcm_mul : forall n m, n~=0 -> m~=0 -> (gcd n m == 1 <-> lcm n m == n*m).",
            "VernacStartTheoremProof",
            "7315cd54c98b8c535edbe6a50923d661594dbac6"
        ],
        [
            "intros n m Hn Hm.",
            "VernacExtend",
            "c015ffe457193f0270ea4e3a78379b6375abe752"
        ],
        [
            "split; intros H.",
            "VernacExtend",
            "a22fcc98cae3c9e7feb477b9e8b0236d37ea8d65"
        ],
        [
            "unfold lcm.",
            "VernacExtend",
            "9bd73e7c13a12aa7a0f804b885c2d9bd3f65a988"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "now rewrite div_1_r.",
            "VernacExtend",
            "ce8c833eadd704d9183f0e9a1d2bb16d7d8914e9"
        ],
        [
            "unfold lcm in *.",
            "VernacExtend",
            "0d3e792b6f2ad25fbd09033f6aaef0bb19586091"
        ],
        [
            "apply mul_cancel_l in H; trivial.",
            "VernacExtend",
            "23d9daef9d590d60500638682528c2fd4157e89a"
        ],
        [
            "assert (Hg : gcd n m ~= 0) by (red; rewrite gcd_eq_0; destruct 1; order).",
            "VernacExtend",
            "6a31c9a99cd79386c7f3ac09c0e500cdced7967c"
        ],
        [
            "assert (H' := gcd_divide_r n m).",
            "VernacExtend",
            "88d28d4b631c1da5cc9ce9318399bb45fe4b4966"
        ],
        [
            "apply mod_divide in H'; trivial.",
            "VernacExtend",
            "6ac09748282c8b1e39b2b18808c1e4c985526506"
        ],
        [
            "apply div_exact in H'; trivial.",
            "VernacExtend",
            "498ea9621060e80c5c027675676c8be051d5412a"
        ],
        [
            "rewrite H in H'.",
            "VernacExtend",
            "c39e9f55deabbdd87d1be9dcc1208660411d80c3"
        ],
        [
            "rewrite <- (mul_1_l m) in H' at 1.",
            "VernacExtend",
            "e25d9367baeac7b409f98f8c9f83cd37d9d94e36"
        ],
        [
            "now apply mul_cancel_r in H'.",
            "VernacExtend",
            "783eb430b525e5befa5740f1dda008612aa573e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NLcmProp.",
            "VernacEndSegment",
            "2b9b0cce1bc79fef5f7f690fcd374acb6b16f8bb"
        ]
    ],
    "proofs": [
        {
            "name": "mod_divide",
            "line_nb": 2,
            "steps": [
                {
                    "command": [
                        "intros a b Hb.",
                        "VernacExtend",
                        "4acf50263777c8159f0209cc85e75b737597ba41"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros Hab.",
                        "VernacExtend",
                        "971000144c97ecedc2e60fc3637ddb1d2a64ab90"
                    ]
                },
                {
                    "command": [
                        "exists (a/b).",
                        "VernacExtend",
                        "f67c754356dd3dd83fc0d6a4154287cef9f4a5de"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_comm.",
                        "VernacExtend",
                        "5f0fb0765ec04101790f2b78062bf5490bbe5e03"
                    ]
                },
                {
                    "command": [
                        "rewrite (div_mod a b Hb) at 1.",
                        "VernacExtend",
                        "0a3534cbe2728e0d957129d558053ec7028d9a60"
                    ]
                },
                {
                    "command": [
                        "rewrite Hab; now nzsimpl.",
                        "VernacExtend",
                        "14e5eb334054fedf6d27401d08bac6e866f7f95c"
                    ]
                },
                {
                    "command": [
                        "intros (c,Hc).",
                        "VernacExtend",
                        "bb016d689093cb6c63c1d10197ed0f9c5e5317f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Hc.",
                        "VernacExtend",
                        "fc5aedf7a3e2d990ae51448e074500a246f368e9"
                    ]
                },
                {
                    "command": [
                        "now apply mod_mul.",
                        "VernacExtend",
                        "64a5a285888b6cd57d063f34a3aa12864782028c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_div_mul_exact",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros a b c Hb H.",
                        "VernacExtend",
                        "cf414a52b4f44784a44f39f5993a0460ea393701"
                    ]
                },
                {
                    "command": [
                        "apply mul_cancel_l with b; trivial.",
                        "VernacExtend",
                        "b7d7fd2fce4b0df7c0bbeabca3e1d3d970db45c9"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_assoc, mul_shuffle0.",
                        "VernacExtend",
                        "578f91544c4028cd05e9712e23cca92f37795bc0"
                    ]
                },
                {
                    "command": [
                        "assert (H':=H).",
                        "VernacExtend",
                        "15c1ed350339019dd3099ce17e681f2e618fbc4a"
                    ]
                },
                {
                    "command": [
                        "apply mod_divide, div_exact in H'; trivial.",
                        "VernacExtend",
                        "6ebc0f4c8a0fddd67c979fd6e1e4da9cfcd8aed4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H', (mul_comm a c).",
                        "VernacExtend",
                        "75a68bfff5b85727acab7c6ae5465f0acaa0cefc"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply div_exact; trivial.",
                        "VernacExtend",
                        "64332c92c5e846b4e0dcd8ad97e7c9c1b838d32a"
                    ]
                },
                {
                    "command": [
                        "apply mod_divide; trivial.",
                        "VernacExtend",
                        "a6cbfc5049b0b108a3ee5f9282b7f38a1e0427a2"
                    ]
                },
                {
                    "command": [
                        "now apply divide_mul_r.",
                        "VernacExtend",
                        "59182b8aa95d807eef673553f442fc6911449a39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_div_factor",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intros a b c Hc Ha Hb.",
                        "VernacExtend",
                        "a8097798575b1b145623508745b4541d5a72d9da"
                    ]
                },
                {
                    "command": [
                        "apply mul_cancel_l with c; try order.",
                        "VernacExtend",
                        "e5973db491cf5d7fd5d0e5ea68e65bf786fe2856"
                    ]
                },
                {
                    "command": [
                        "assert (H:=gcd_greatest _ _ _ Ha Hb).",
                        "VernacExtend",
                        "4a794f9f0cde9b61c94e0855bad3fbfd32b37b85"
                    ]
                },
                {
                    "command": [
                        "apply mod_divide, div_exact in H; try order.",
                        "VernacExtend",
                        "806249ebe602084c44db6f93ac3646c5b156d63e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "rewrite <- gcd_mul_mono_l; try order.",
                        "VernacExtend",
                        "f562c2abcc8843054ee2d35cd6f5faf95396429f"
                    ]
                },
                {
                    "command": [
                        "f_equiv; symmetry; apply div_exact; try order; apply mod_divide; trivial; try order.",
                        "VernacExtend",
                        "94aaf290b69311d0e5980b7a2bf6bc6858975080"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_div_gcd",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros a b g NZ EQ.",
                        "VernacExtend",
                        "3b687ae95ce04388ae3be0e72a0c5c8291eb20a2"
                    ]
                },
                {
                    "command": [
                        "rewrite gcd_div_factor.",
                        "VernacExtend",
                        "bcff2b0e63d8e3031a24da53ea9ca8c314f04879"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- EQ, div_same.",
                        "VernacExtend",
                        "ef7d5ab6622e6e91096520ce795c2a978460044a"
                    ]
                },
                {
                    "command": [
                        "generalize (gcd_nonneg a b); order.",
                        "VernacExtend",
                        "7a93bfa5b32753f70db627ef2f5be5a5334b1a96"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ; apply gcd_divide_l.",
                        "VernacExtend",
                        "957b8b8fa6a51b839ebcc0933c568689b68adec0"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ; apply gcd_divide_r.",
                        "VernacExtend",
                        "edac2334ba189b6c4c1167057bc9da7d6c09785b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_mod",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros a b Hb.",
                        "VernacExtend",
                        "4acf50263777c8159f0209cc85e75b737597ba41"
                    ]
                },
                {
                    "command": [
                        "rewrite (gcd_comm _ b).",
                        "VernacExtend",
                        "f28fda0847180588750ccc03812521fc4df4dd73"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (gcd_add_mult_diag_r b (a mod b) (a/b)).",
                        "VernacExtend",
                        "efefbe597785f52e3c3beb0214954e9ee92fbe8d"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_comm, mul_comm, <- div_mod.",
                        "VernacExtend",
                        "00eddadb6c14a3d891af008a7b7fa2fe27e112a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_wd",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "unfold lcm.",
                        "VernacExtend",
                        "9bd73e7c13a12aa7a0f804b885c2d9bd3f65a988"
                    ]
                },
                {
                    "command": [
                        "solve_proper.",
                        "VernacExtend",
                        "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_equiv1",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros a b H.",
                        "VernacExtend",
                        "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
                    ]
                },
                {
                    "command": [
                        "rewrite divide_div_mul_exact; try easy.",
                        "VernacExtend",
                        "da50622bda04abf6d6d84be55662c473f1ea462a"
                    ]
                },
                {
                    "command": [
                        "apply gcd_divide_r.",
                        "VernacExtend",
                        "23f22b4be94ee31f90f559afe9253eb0db533a6b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_equiv2",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros a b H.",
                        "VernacExtend",
                        "46d2618ac2fa01d057d8240f05e4d61cc7f056e5"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 (mul_comm _ b).",
                        "VernacExtend",
                        "b59dfdf3682fa5a5ffa48aa15cc00f51609458bb"
                    ]
                },
                {
                    "command": [
                        "rewrite divide_div_mul_exact; try easy.",
                        "VernacExtend",
                        "da50622bda04abf6d6d84be55662c473f1ea462a"
                    ]
                },
                {
                    "command": [
                        "apply gcd_divide_l.",
                        "VernacExtend",
                        "ffcffc43e027dff4c204925ba6773cbc66f94de7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_div_swap",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros a b.",
                        "VernacExtend",
                        "8c4941fda9d591147c446ef6e06d248ec0e6bf7a"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_decidable (gcd a b) 0) as [EQ|NEQ].",
                        "VernacExtend",
                        "1246b308d84a6807b11bc8cce22c9942b74a8c43"
                    ]
                },
                {
                    "command": [
                        "apply gcd_eq_0 in EQ.",
                        "VernacExtend",
                        "aa8f9b5280dab82ced6f6466c6fec2528af89bd3"
                    ]
                },
                {
                    "command": [
                        "destruct EQ as (EQ,EQ').",
                        "VernacExtend",
                        "2da49a26ad53ff941db1c9c9bb74bdce1cb14fa0"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ, EQ'.",
                        "VernacExtend",
                        "3990a1281486fe9ce675059b7506e3f7191e9617"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl.",
                        "VernacExtend",
                        "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
                    ]
                },
                {
                    "command": [
                        "now rewrite lcm_equiv1, <-lcm_equiv2.",
                        "VernacExtend",
                        "d78c3cef518219ca80e5936c2a75138419b9ab77"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_lcm_l",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "unfold lcm.",
                        "VernacExtend",
                        "9bd73e7c13a12aa7a0f804b885c2d9bd3f65a988"
                    ]
                },
                {
                    "command": [
                        "intros a b.",
                        "VernacExtend",
                        "8c4941fda9d591147c446ef6e06d248ec0e6bf7a"
                    ]
                },
                {
                    "command": [
                        "apply divide_factor_l.",
                        "VernacExtend",
                        "f1945737ed38b0fd624657db8fa6d1807bed0e85"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_lcm_r",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "unfold lcm.",
                        "VernacExtend",
                        "9bd73e7c13a12aa7a0f804b885c2d9bd3f65a988"
                    ]
                },
                {
                    "command": [
                        "intros a b.",
                        "VernacExtend",
                        "8c4941fda9d591147c446ef6e06d248ec0e6bf7a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- gcd_div_swap.",
                        "VernacExtend",
                        "0b01f2a6057e52805efd75443f463edaa75fce68"
                    ]
                },
                {
                    "command": [
                        "apply divide_factor_r.",
                        "VernacExtend",
                        "38a70e3edc9cecf8cc8c0590572e7fd3e7163fa9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_div",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros a b c Ha Hb (c',Hc).",
                        "VernacExtend",
                        "845ffce7a15fc91a490f379fdf7ac75768bcb1f4"
                    ]
                },
                {
                    "command": [
                        "exists c'.",
                        "VernacExtend",
                        "5569033e95456b4c53740667b231ecb94442c6c9"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- divide_div_mul_exact, Hc.",
                        "VernacExtend",
                        "eefe40ce3e5c0217d09e31576e546eb5e330a758"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_least",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intros a b c Ha Hb.",
                        "VernacExtend",
                        "e90bf88424f10e340806e631c031985f5eaa1c80"
                    ]
                },
                {
                    "command": [
                        "unfold lcm.",
                        "VernacExtend",
                        "9bd73e7c13a12aa7a0f804b885c2d9bd3f65a988"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_decidable (gcd a b) 0) as [EQ|NEQ].",
                        "VernacExtend",
                        "1246b308d84a6807b11bc8cce22c9942b74a8c43"
                    ]
                },
                {
                    "command": [
                        "apply gcd_eq_0 in EQ.",
                        "VernacExtend",
                        "aa8f9b5280dab82ced6f6466c6fec2528af89bd3"
                    ]
                },
                {
                    "command": [
                        "destruct EQ as (EQ,EQ').",
                        "VernacExtend",
                        "2da49a26ad53ff941db1c9c9bb74bdce1cb14fa0"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ in *.",
                        "VernacExtend",
                        "ffd7cd0b693f60169c5a8dd5b12ac635cf9ed012"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl.",
                        "VernacExtend",
                        "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
                    ]
                },
                {
                    "command": [
                        "assert (Ga := gcd_divide_l a b).",
                        "VernacExtend",
                        "01426a075a22146a8a0517929af010a7ff3bd185"
                    ]
                },
                {
                    "command": [
                        "assert (Gb := gcd_divide_r a b).",
                        "VernacExtend",
                        "7609207c8eb5cc820a1b534aa7b85512428168be"
                    ]
                },
                {
                    "command": [
                        "set (g:=gcd a b) in *.",
                        "VernacExtend",
                        "0dcecb9b830799dbc62685695f4566c138ee9aa2"
                    ]
                },
                {
                    "command": [
                        "assert (Ha' := divide_div g a c NEQ Ga Ha).",
                        "VernacExtend",
                        "ca320ca58beba5277a33870c961cbeedc212c45c"
                    ]
                },
                {
                    "command": [
                        "assert (Hb' := divide_div g b c NEQ Gb Hb).",
                        "VernacExtend",
                        "e93aee51e66b907949c921880d801879e7f54623"
                    ]
                },
                {
                    "command": [
                        "destruct Ha' as (a',Ha').",
                        "VernacExtend",
                        "3420dba80777be842cc121f95444b3b7e35cb394"
                    ]
                },
                {
                    "command": [
                        "rewrite Ha', mul_comm in Hb'.",
                        "VernacExtend",
                        "64007036cb92c33fe84b90b3ae01ad7039d2250e"
                    ]
                },
                {
                    "command": [
                        "apply gauss in Hb'; [|apply gcd_div_gcd; unfold g; trivial using gcd_comm].",
                        "VernacExtend",
                        "87b314cfab483c6e2c4cfa2dc8817844bae5634b"
                    ]
                },
                {
                    "command": [
                        "destruct Hb' as (b',Hb').",
                        "VernacExtend",
                        "67730e99a3862448b5afea236ed4bfe083b61abb"
                    ]
                },
                {
                    "command": [
                        "exists b'.",
                        "VernacExtend",
                        "35ea12e5c629577ad18b1aa567ac35f6e7caeb3b"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_shuffle3, <- Hb'.",
                        "VernacExtend",
                        "dd4727b82e4055c8f29e27d09a2b764297f12da1"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj2 (div_exact c g NEQ)).",
                        "VernacExtend",
                        "a54018b0a84277605391f78c92989c923f7242f7"
                    ]
                },
                {
                    "command": [
                        "rewrite Ha', mul_shuffle3, (mul_comm a a').",
                        "VernacExtend",
                        "7342808f1ad9d4525fad215a35e35c85017d6cd4"
                    ]
                },
                {
                    "command": [
                        "f_equiv.",
                        "VernacExtend",
                        "ed0db7be627cb3834790ae805a13139db94a9012"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply div_exact; trivial.",
                        "VernacExtend",
                        "64332c92c5e846b4e0dcd8ad97e7c9c1b838d32a"
                    ]
                },
                {
                    "command": [
                        "apply mod_divide; trivial.",
                        "VernacExtend",
                        "a6cbfc5049b0b108a3ee5f9282b7f38a1e0427a2"
                    ]
                },
                {
                    "command": [
                        "apply mod_divide; trivial.",
                        "VernacExtend",
                        "a6cbfc5049b0b108a3ee5f9282b7f38a1e0427a2"
                    ]
                },
                {
                    "command": [
                        "transitivity a; trivial.",
                        "VernacExtend",
                        "0f9edeac21d6a2d39050d0cfa7f94bcd891ed4dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_comm",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "intros a b.",
                        "VernacExtend",
                        "8c4941fda9d591147c446ef6e06d248ec0e6bf7a"
                    ]
                },
                {
                    "command": [
                        "unfold lcm.",
                        "VernacExtend",
                        "9bd73e7c13a12aa7a0f804b885c2d9bd3f65a988"
                    ]
                },
                {
                    "command": [
                        "rewrite (gcd_comm b), (mul_comm b).",
                        "VernacExtend",
                        "6419048e7243779a9002111aa35a58ec66bdc5e3"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- gcd_div_swap.",
                        "VernacExtend",
                        "bd06059c01a27b374470f9be49a28c17e22c3c3e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_divide_iff",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "transitivity (lcm n m); trivial using divide_lcm_l.",
                        "VernacExtend",
                        "ae5017c4c00ca538288678dee2623cce52158bb9"
                    ]
                },
                {
                    "command": [
                        "transitivity (lcm n m); trivial using divide_lcm_r.",
                        "VernacExtend",
                        "3a35f8f6c8142c5facc0e8a6620b745c3127aa11"
                    ]
                },
                {
                    "command": [
                        "intros (H,H').",
                        "VernacExtend",
                        "b991c5101438ca8c345f0ab0492b64f5360bab5e"
                    ]
                },
                {
                    "command": [
                        "now apply lcm_least.",
                        "VernacExtend",
                        "5f88b7b4966d132f0ac45513354fc73c4dbfa781"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_unique",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "intros n m p Hp Hn Hm H.",
                        "VernacExtend",
                        "c2dacc9e928c49a31b735c4231429fb7c7a243b5"
                    ]
                },
                {
                    "command": [
                        "apply divide_antisym; trivial.",
                        "VernacExtend",
                        "36c9132adf3462f606d33f138666f17da6904e5a"
                    ]
                },
                {
                    "command": [
                        "now apply lcm_least.",
                        "VernacExtend",
                        "5f88b7b4966d132f0ac45513354fc73c4dbfa781"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply divide_lcm_l.",
                        "VernacExtend",
                        "d969780d96618ad6946b21fcba4c29722a295396"
                    ]
                },
                {
                    "command": [
                        "apply divide_lcm_r.",
                        "VernacExtend",
                        "84077a2aa30627abd0ddca7cdaf8065eb3846f11"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_unique_alt",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "intros n m p Hp H.",
                        "VernacExtend",
                        "4a390feaf0e8abf95215780023e151cf3ea361e8"
                    ]
                },
                {
                    "command": [
                        "apply lcm_unique; trivial.",
                        "VernacExtend",
                        "1a575ade3d2706d8338f2f1258726e1e43bff176"
                    ]
                },
                {
                    "command": [
                        "apply H, divide_refl.",
                        "VernacExtend",
                        "1ac8559bea6c172bec708dfb8dc320a5e55e578c"
                    ]
                },
                {
                    "command": [
                        "apply H, divide_refl.",
                        "VernacExtend",
                        "1ac8559bea6c172bec708dfb8dc320a5e55e578c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "now split.",
                        "VernacExtend",
                        "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_assoc",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply lcm_unique_alt.",
                        "VernacExtend",
                        "18ee4c350fc95e864c51de7da26fd617009c2f7a"
                    ]
                },
                {
                    "command": [
                        "apply le_0_l.",
                        "VernacExtend",
                        "606697e0b4a3c1f2b140a14e33e5da526da6c9a2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite !lcm_divide_iff, and_assoc.",
                        "VernacExtend",
                        "d49039e0b740edb770a169d1de774deb405d2bf1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_0_l",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply lcm_unique; trivial.",
                        "VernacExtend",
                        "1a575ade3d2706d8338f2f1258726e1e43bff176"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "apply divide_refl.",
                        "VernacExtend",
                        "af5881c97e07a5a2b2d5463d7792c7b34256a743"
                    ]
                },
                {
                    "command": [
                        "apply divide_0_r.",
                        "VernacExtend",
                        "dd28a5c443063a2e06d448357840c5452dc6c2e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_0_r",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite lcm_comm, lcm_0_l.",
                        "VernacExtend",
                        "7539912c7c362d9913431b12608d0b94f007b47b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_1_l",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply lcm_unique; trivial using divide_1_l, le_0_l, divide_refl.",
                        "VernacExtend",
                        "64065c0854226a02bcb25a38643abc0ce0b60629"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_1_r",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite lcm_comm, lcm_1_l.",
                        "VernacExtend",
                        "472ae114618182d3d85ba96711c4c627576a9060"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_diag",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply lcm_unique; trivial using divide_refl, le_0_l.",
                        "VernacExtend",
                        "36d76af9ce585cf33df3673a7e0e532339675fbc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_eq_0",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros EQ.",
                        "VernacExtend",
                        "55ec42483a4ca0813a68f464f2703cf9ccb237d7"
                    ]
                },
                {
                    "command": [
                        "apply eq_mul_0.",
                        "VernacExtend",
                        "5bb20380d9e5b37f9e1b25d93b4b8d7dd4e4a173"
                    ]
                },
                {
                    "command": [
                        "apply divide_0_l.",
                        "VernacExtend",
                        "3e8eea2ffb9a5ffad2802859d69238ed1917322b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ.",
                        "VernacExtend",
                        "24dbb15b276d4d9b12a890733e217a4157c5a67a"
                    ]
                },
                {
                    "command": [
                        "apply lcm_least.",
                        "VernacExtend",
                        "acf6e1ebfa9e6c9a6d8d94174752f2f625f0eef3"
                    ]
                },
                {
                    "command": [
                        "apply divide_factor_l.",
                        "VernacExtend",
                        "f1945737ed38b0fd624657db8fa6d1807bed0e85"
                    ]
                },
                {
                    "command": [
                        "apply divide_factor_r.",
                        "VernacExtend",
                        "38a70e3edc9cecf8cc8c0590572e7fd3e7163fa9"
                    ]
                },
                {
                    "command": [
                        "destruct 1 as [EQ|EQ]; rewrite EQ.",
                        "VernacExtend",
                        "2c9673293907e10dd8e5c206ee508ad0b5175f40"
                    ]
                },
                {
                    "command": [
                        "apply lcm_0_l.",
                        "VernacExtend",
                        "15fd9658ebbf3fa7e1bf338d5cbd6bb8f6b46481"
                    ]
                },
                {
                    "command": [
                        "apply lcm_0_r.",
                        "VernacExtend",
                        "2544a43b33982590e3b363ccd9f565786fcf57fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_lcm_eq_r",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "intros n m H.",
                        "VernacExtend",
                        "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
                    ]
                },
                {
                    "command": [
                        "apply lcm_unique_alt; trivial using le_0_l.",
                        "VernacExtend",
                        "d7a5e69955ff395829238cc9dba7d9b69ee15eb1"
                    ]
                },
                {
                    "command": [
                        "intros q.",
                        "VernacExtend",
                        "ff9d121cdb516bd63ace418a2de73c7fb0f8ba3e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "now transitivity m.",
                        "VernacExtend",
                        "7586a1536f0121468ba4be37c7437f42d11fde5b"
                    ]
                },
                {
                    "command": [
                        "now destruct 1.",
                        "VernacExtend",
                        "599cf8488dce43cedbb3491ca78a34441bf2a1bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "divide_lcm_iff",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "now apply divide_lcm_eq_r.",
                        "VernacExtend",
                        "54a5ef3e77562b06af9a91c7ae33a7f64d53ab77"
                    ]
                },
                {
                    "command": [
                        "intros EQ.",
                        "VernacExtend",
                        "55ec42483a4ca0813a68f464f2703cf9ccb237d7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- EQ.",
                        "VernacExtend",
                        "24dbb15b276d4d9b12a890733e217a4157c5a67a"
                    ]
                },
                {
                    "command": [
                        "apply divide_lcm_l.",
                        "VernacExtend",
                        "d969780d96618ad6946b21fcba4c29722a295396"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_mul_mono_l",
            "line_nb": 211,
            "steps": [
                {
                    "command": [
                        "intros n m p.",
                        "VernacExtend",
                        "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_decidable p 0) as [Hp|Hp].",
                        "VernacExtend",
                        "764f23382c0f4f692770bfb93d6c649ae78f0d76"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp.",
                        "VernacExtend",
                        "b511f9e4ffd06db3fba6cc16f472f9ed92990ffa"
                    ]
                },
                {
                    "command": [
                        "nzsimpl.",
                        "VernacExtend",
                        "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
                    ]
                },
                {
                    "command": [
                        "rewrite lcm_0_l.",
                        "VernacExtend",
                        "51e92e818246f03ca09d8ee3810ddf09a982629e"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl.",
                        "VernacExtend",
                        "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_decidable (gcd n m) 0) as [Hg|Hg].",
                        "VernacExtend",
                        "90147f553e8c852728c3b2d4452af00f45306958"
                    ]
                },
                {
                    "command": [
                        "apply gcd_eq_0 in Hg.",
                        "VernacExtend",
                        "184a01978d1c651fbd393c51d7a6a7b0462f9553"
                    ]
                },
                {
                    "command": [
                        "destruct Hg as (Hn,Hm); rewrite Hn, Hm.",
                        "VernacExtend",
                        "4edc31bfc4a901cc5e9b7228e1489f5409e11099"
                    ]
                },
                {
                    "command": [
                        "nzsimpl.",
                        "VernacExtend",
                        "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
                    ]
                },
                {
                    "command": [
                        "rewrite lcm_0_l.",
                        "VernacExtend",
                        "51e92e818246f03ca09d8ee3810ddf09a982629e"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl.",
                        "VernacExtend",
                        "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
                    ]
                },
                {
                    "command": [
                        "unfold lcm.",
                        "VernacExtend",
                        "9bd73e7c13a12aa7a0f804b885c2d9bd3f65a988"
                    ]
                },
                {
                    "command": [
                        "rewrite gcd_mul_mono_l.",
                        "VernacExtend",
                        "97993dce328d05c94dd58657d198207536b4f688"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_assoc.",
                        "VernacExtend",
                        "b39bc6f19afe82b1537f8c515e450ab4d3574b7d"
                    ]
                },
                {
                    "command": [
                        "f_equiv.",
                        "VernacExtend",
                        "ed0db7be627cb3834790ae805a13139db94a9012"
                    ]
                },
                {
                    "command": [
                        "now rewrite div_mul_cancel_l.",
                        "VernacExtend",
                        "73a1770993911bcb29adfb658a52c1bccceaa445"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lcm_mul_mono_r",
            "line_nb": 230,
            "steps": [
                {
                    "command": [
                        "intros n m p.",
                        "VernacExtend",
                        "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
                    ]
                },
                {
                    "command": [
                        "now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm.",
                        "VernacExtend",
                        "1098a719b1bd70893e4194955e50fa08c1ad3991"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gcd_1_lcm_mul",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "intros n m Hn Hm.",
                        "VernacExtend",
                        "c015ffe457193f0270ea4e3a78379b6375abe752"
                    ]
                },
                {
                    "command": [
                        "split; intros H.",
                        "VernacExtend",
                        "a22fcc98cae3c9e7feb477b9e8b0236d37ea8d65"
                    ]
                },
                {
                    "command": [
                        "unfold lcm.",
                        "VernacExtend",
                        "9bd73e7c13a12aa7a0f804b885c2d9bd3f65a988"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "now rewrite div_1_r.",
                        "VernacExtend",
                        "ce8c833eadd704d9183f0e9a1d2bb16d7d8914e9"
                    ]
                },
                {
                    "command": [
                        "unfold lcm in *.",
                        "VernacExtend",
                        "0d3e792b6f2ad25fbd09033f6aaef0bb19586091"
                    ]
                },
                {
                    "command": [
                        "apply mul_cancel_l in H; trivial.",
                        "VernacExtend",
                        "23d9daef9d590d60500638682528c2fd4157e89a"
                    ]
                },
                {
                    "command": [
                        "assert (Hg : gcd n m ~= 0) by (red; rewrite gcd_eq_0; destruct 1; order).",
                        "VernacExtend",
                        "6a31c9a99cd79386c7f3ac09c0e500cdced7967c"
                    ]
                },
                {
                    "command": [
                        "assert (H' := gcd_divide_r n m).",
                        "VernacExtend",
                        "88d28d4b631c1da5cc9ce9318399bb45fe4b4966"
                    ]
                },
                {
                    "command": [
                        "apply mod_divide in H'; trivial.",
                        "VernacExtend",
                        "6ac09748282c8b1e39b2b18808c1e4c985526506"
                    ]
                },
                {
                    "command": [
                        "apply div_exact in H'; trivial.",
                        "VernacExtend",
                        "498ea9621060e80c5c027675676c8be051d5412a"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H'.",
                        "VernacExtend",
                        "c39e9f55deabbdd87d1be9dcc1208660411d80c3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_1_l m) in H' at 1.",
                        "VernacExtend",
                        "e25d9367baeac7b409f98f8c9f83cd37d9d94e36"
                    ]
                },
                {
                    "command": [
                        "now apply mul_cancel_r in H'.",
                        "VernacExtend",
                        "783eb430b525e5befa5740f1dda008612aa573e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}