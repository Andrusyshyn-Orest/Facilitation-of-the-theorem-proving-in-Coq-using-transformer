{
    "filename": "theories/Numbers/NatInt/NZParity.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Bool NZAxioms NZMulOrder.",
            "VernacRequire",
            "a724ca08c49a7495ce030138ab27155be82fa611"
        ],
        [
            "Module Type NZParity (Import A : NZAxiomsSig').",
            "VernacDeclareModuleType",
            "712fafe23b14993c98190da999932011145e999d"
        ],
        [
            "Parameter Inline even odd : t -> bool.",
            "VernacAssumption",
            "2527fbd63cfa487772776f5787186f9aa4d91656"
        ],
        [
            "Definition Even n := exists m, n == 2*m.",
            "VernacDefinition",
            "eb0796a56f2036d028e700e1c5f714a7fdda15c2"
        ],
        [
            "Definition Odd n := exists m, n == 2*m+1.",
            "VernacDefinition",
            "6a1025dc918661509fb96e71ac2c846c450770d4"
        ],
        [
            "Axiom even_spec : forall n, even n = true <-> Even n.",
            "VernacAssumption",
            "de2a22218e02014ac1426345e255d07c2cf99416"
        ],
        [
            "Axiom odd_spec : forall n, odd n = true <-> Odd n.",
            "VernacAssumption",
            "d22dfc81b89807e4780ce4b2370bc0f83101d37f"
        ],
        [
            "End NZParity.",
            "VernacEndSegment",
            "a1dcef60d4a68501ef788668d31ccd2a4d1dacac"
        ],
        [
            "Module Type NZParityProp (Import A : NZOrdAxiomsSig') (Import B : NZParity A) (Import C : NZMulOrderProp A).",
            "VernacDeclareModuleType",
            "365d82343fc2e5bac07efc559fb61ecf22ffc748"
        ],
        [
            "Instance Even_wd : Proper (eq==>iff) Even.",
            "VernacInstance",
            "05158039837a119c21fd5d0eff0765914b06c58e"
        ],
        [
            "unfold Even.",
            "VernacExtend",
            "e6b4af91fa268fa4a5a8882b2a89e14e9abcbca0"
        ],
        [
            "solve_proper.",
            "VernacExtend",
            "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance Odd_wd : Proper (eq==>iff) Odd.",
            "VernacInstance",
            "5c985f802410e925ae4da3ea9996c4ea030871c1"
        ],
        [
            "unfold Odd.",
            "VernacExtend",
            "e072beb382ce59d412311054feb1d6224736ff6f"
        ],
        [
            "solve_proper.",
            "VernacExtend",
            "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance even_wd : Proper (eq==>Logic.eq) even.",
            "VernacInstance",
            "a134dbca16d212e9e9389f6b2a196a07619ddc59"
        ],
        [
            "intros x x' EQ.",
            "VernacExtend",
            "b1014e4dd13c0f28b48bef9c863ac080c232e8a1"
        ],
        [
            "rewrite eq_iff_eq_true, 2 even_spec.",
            "VernacExtend",
            "8c74a4d45f8c91c0b92dceecb0609c8a745fc060"
        ],
        [
            "now f_equiv.",
            "VernacExtend",
            "98cbad0c17c93e8efb72200330cc4dc88ee8a339"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance odd_wd : Proper (eq==>Logic.eq) odd.",
            "VernacInstance",
            "b8702f8f982f5027191fff935ee3c6169e82621b"
        ],
        [
            "intros x x' EQ.",
            "VernacExtend",
            "b1014e4dd13c0f28b48bef9c863ac080c232e8a1"
        ],
        [
            "rewrite eq_iff_eq_true, 2 odd_spec.",
            "VernacExtend",
            "be87f245765c07b8c7ec35ab4bf8fb74e5b09f06"
        ],
        [
            "now f_equiv.",
            "VernacExtend",
            "98cbad0c17c93e8efb72200330cc4dc88ee8a339"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Even_or_Odd : forall x, Even x \\/ Odd x.",
            "VernacStartTheoremProof",
            "fdf6698a10c6fb711177466ce18df4202f488260"
        ],
        [
            "nzinduct x.",
            "VernacExtend",
            "2588b2dcc344f74b3c7d5d9f2cb49939659cdba0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "now nzsimpl.",
            "VernacExtend",
            "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "split; intros [(y,H)|(y,H)].",
            "VernacExtend",
            "373d7922a5157cf1ebce27dd1252d877c77e5e16"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "exists y.",
            "VernacExtend",
            "1c06cb2466f48b6def24e74ddeda9956981c0a0a"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "now nzsimpl.",
            "VernacExtend",
            "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists (S y).",
            "VernacExtend",
            "8717e045b9814bec5f72557300161f3edbb45ecc"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "now nzsimpl'.",
            "VernacExtend",
            "7c9a3b39ed2b376414aa623dd77af64f7690380f"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "assert (LT : exists z, z<y).",
            "VernacExtend",
            "10f7b2d84dc373f96ce6a4f242167e30439d43b3"
        ],
        [
            "destruct (lt_ge_cases 0 y) as [LT|GT]; [now exists 0 | exists x].",
            "VernacExtend",
            "a8e47e797be5afc9ce93899d758e45b1c0045898"
        ],
        [
            "rewrite <- le_succ_l, H.",
            "VernacExtend",
            "c0b8e3af65786ef6b3c81ca8f47a099718505d3b"
        ],
        [
            "nzsimpl'.",
            "VernacExtend",
            "8e574f0f62759aeb195e08bf64ba0a41330fb166"
        ],
        [
            "rewrite <- (add_0_r y) at 3.",
            "VernacExtend",
            "6a20e38e3be554a365ab7c9b3c3e964f2f288ffc"
        ],
        [
            "now apply add_le_mono_l.",
            "VernacExtend",
            "0d41a77e1ecac43d6b8c8ba3730494b687f116ee"
        ],
        [
            "destruct LT as (z,LT).",
            "VernacExtend",
            "74f0eddd29d21831ca70418f89ac679433e529a9"
        ],
        [
            "destruct (lt_exists_pred z y LT) as (y' & Hy' & _).",
            "VernacExtend",
            "1f6e21f02294292449c8f24fb77f6e4aa0a72f31"
        ],
        [
            "exists y'.",
            "VernacExtend",
            "8665611bf4db726589753633fb622609f741e1e7"
        ],
        [
            "rewrite <- succ_inj_wd, H, Hy'.",
            "VernacExtend",
            "90b9632e6f2bdf21cd6f6326379ce278affe1669"
        ],
        [
            "now nzsimpl'.",
            "VernacExtend",
            "7c9a3b39ed2b376414aa623dd77af64f7690380f"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "exists y.",
            "VernacExtend",
            "1c06cb2466f48b6def24e74ddeda9956981c0a0a"
        ],
        [
            "rewrite <- succ_inj_wd.",
            "VernacExtend",
            "910880a39b07cc617f2427236d8cb08c1e24b547"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "now nzsimpl.",
            "VernacExtend",
            "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma double_below : forall n m, n<=m -> 2*n < 2*m+1.",
            "VernacStartTheoremProof",
            "3f8b1e6c09b524c355bfb5301e7ca9a49160d01b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "nzsimpl'.",
            "VernacExtend",
            "8e574f0f62759aeb195e08bf64ba0a41330fb166"
        ],
        [
            "apply lt_succ_r.",
            "VernacExtend",
            "eb5492855fed638ce59ac381632f2830bb69c5ec"
        ],
        [
            "now apply add_le_mono.",
            "VernacExtend",
            "5d82796786dfa0c3c120931b65de99be411717d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma double_above : forall n m, n<m -> 2*n+1 < 2*m.",
            "VernacStartTheoremProof",
            "bb7a61ef173dfa09ff2c999d220ac49338a6ba75"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "nzsimpl'.",
            "VernacExtend",
            "8e574f0f62759aeb195e08bf64ba0a41330fb166"
        ],
        [
            "rewrite <- le_succ_l, <- add_succ_l, <- add_succ_r.",
            "VernacExtend",
            "db4cbd40400d891ec4fe96bc3c69b9333763b1fb"
        ],
        [
            "apply add_le_mono; now apply le_succ_l.",
            "VernacExtend",
            "a17e3b46cd1ab25b09761e4bb0858699a08ddc7b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Even_Odd_False : forall x, Even x -> Odd x -> False.",
            "VernacStartTheoremProof",
            "5adc982f8fa2f6f0ae0496d268dcdbebae75561f"
        ],
        [
            "intros x (y,E) (z,O).",
            "VernacExtend",
            "a75ecd78ad71a3018e3117181c931f6ff225baa3"
        ],
        [
            "rewrite O in E; clear O.",
            "VernacExtend",
            "3c3c51d028695e3eb2f4268d8a01b4c988b28c9e"
        ],
        [
            "destruct (le_gt_cases y z) as [LE|GT].",
            "VernacExtend",
            "ce5a27b095ad703d78b72a890d7835e143c66811"
        ],
        [
            "generalize (double_below _ _ LE); order.",
            "VernacExtend",
            "3c5771a34b671910dc96ccfd2b316c63e0840426"
        ],
        [
            "generalize (double_above _ _ GT); order.",
            "VernacExtend",
            "31114dbba52434b3c10f5d5d9747606cf810cec4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma orb_even_odd : forall n, orb (even n) (odd n) = true.",
            "VernacStartTheoremProof",
            "0e1c330ed87046d0b34557f491cbd60966a6b317"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (Even_or_Odd n) as [H|H].",
            "VernacExtend",
            "90375d27fd8bfd6e0ed527df742a3a543926def5"
        ],
        [
            "rewrite <- even_spec in H.",
            "VernacExtend",
            "a92fc87707306556bd97270e259252380203e35d"
        ],
        [
            "now rewrite H.",
            "VernacExtend",
            "4b48f672d72bdaa3470accf224603b6461e14cf4"
        ],
        [
            "rewrite <- odd_spec in H.",
            "VernacExtend",
            "3d1045b14c03def18cc9459bcc53336aead3e92e"
        ],
        [
            "now rewrite H, orb_true_r.",
            "VernacExtend",
            "4d1e63eb9297f8dff8dfce0eb50b9b7b8da98f2d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negb_odd : forall n, negb (odd n) = even n.",
            "VernacStartTheoremProof",
            "7ba97e19b136ad21fc14e8b22e1fb552041c91e4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (Even_or_Odd n) (Even_Odd_False n).",
            "VernacExtend",
            "b44941da9fc23968ff58fcecbacbe5c586de9a5f"
        ],
        [
            "rewrite <- even_spec, <- odd_spec.",
            "VernacExtend",
            "a22b388f475e8cd85ba2c6993a88add4e462f9a1"
        ],
        [
            "destruct (odd n), (even n) ; simpl; intuition.",
            "VernacExtend",
            "80b494611a15cc9c2b7dc9715674f0a2842076cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negb_even : forall n, negb (even n) = odd n.",
            "VernacStartTheoremProof",
            "68a0490fb95366968533f2f216f6ff5882f29531"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- negb_odd.",
            "VernacExtend",
            "173efc4c394bb8707db9874249407b58a9eced35"
        ],
        [
            "apply negb_involutive.",
            "VernacExtend",
            "db9699a137f25341884e2751828b196303310124"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_0 : even 0 = true.",
            "VernacStartTheoremProof",
            "a1b6d3564ffc868068115c2ad01badd7f775bab5"
        ],
        [
            "rewrite even_spec.",
            "VernacExtend",
            "bf455b0362426fb472a1a687926e0d9a91793b6e"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "now nzsimpl.",
            "VernacExtend",
            "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_0 : odd 0 = false.",
            "VernacStartTheoremProof",
            "dd87130d3f89489755ddd0388a1a76281edf1cd0"
        ],
        [
            "now rewrite <- negb_even, even_0.",
            "VernacExtend",
            "cc9292420ae81d2caba0a0e570b70c9d14b161f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_1 : odd 1 = true.",
            "VernacStartTheoremProof",
            "fd457e824715699e122297e7c8afe68e52f66c26"
        ],
        [
            "rewrite odd_spec.",
            "VernacExtend",
            "9542474a1cac21d2eca91859921439d6ed10a49f"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "now nzsimpl'.",
            "VernacExtend",
            "7c9a3b39ed2b376414aa623dd77af64f7690380f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_1 : even 1 = false.",
            "VernacStartTheoremProof",
            "3a1afd315f9893bace886260524216fb04d5cc1d"
        ],
        [
            "now rewrite <- negb_odd, odd_1.",
            "VernacExtend",
            "1a4e5394ef9882733b110fb9f57587bc28e7da0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_2 : even 2 = true.",
            "VernacStartTheoremProof",
            "c0cf9b335cb7df798c1d74396451165b016242bf"
        ],
        [
            "rewrite even_spec.",
            "VernacExtend",
            "bf455b0362426fb472a1a687926e0d9a91793b6e"
        ],
        [
            "exists 1.",
            "VernacExtend",
            "18eb310858be5acae7304d0d9ed33063568db310"
        ],
        [
            "now nzsimpl'.",
            "VernacExtend",
            "7c9a3b39ed2b376414aa623dd77af64f7690380f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_2 : odd 2 = false.",
            "VernacStartTheoremProof",
            "7e8aeee0300f6f2644eae54a8cac66fbc5f47c1f"
        ],
        [
            "now rewrite <- negb_even, even_2.",
            "VernacExtend",
            "b483656f4f267ffd751509a3d4542ffca2bd764d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Odd_succ : forall n, Odd (S n) <-> Even n.",
            "VernacStartTheoremProof",
            "0aeac092bf70fe4a042953ec53da3d2f669b4bf3"
        ],
        [
            "split; intros (m,H).",
            "VernacExtend",
            "505274bd8166a1fd8d8b808cd79d1bfc17204139"
        ],
        [
            "exists m.",
            "VernacExtend",
            "9282a6b695b4daa97f27297bcc295a268a932fcd"
        ],
        [
            "apply succ_inj.",
            "VernacExtend",
            "20bea47dc9639cb7f51951bae01ee9c028f3992f"
        ],
        [
            "now rewrite add_1_r in H.",
            "VernacExtend",
            "b17986e75ea5d6106d0b4a6f70094fb1f467d0a0"
        ],
        [
            "exists m.",
            "VernacExtend",
            "9282a6b695b4daa97f27297bcc295a268a932fcd"
        ],
        [
            "rewrite add_1_r.",
            "VernacExtend",
            "d1ec3ca17f17da3192e164fb41c4a163b74f7dc5"
        ],
        [
            "now f_equiv.",
            "VernacExtend",
            "98cbad0c17c93e8efb72200330cc4dc88ee8a339"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_succ : forall n, odd (S n) = even n.",
            "VernacStartTheoremProof",
            "c312d90dbfa1b4e688b2f09418460a5a8cb209b8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply eq_iff_eq_true.",
            "VernacExtend",
            "fbc9e5e291e29c632196299248408098d7fc76bd"
        ],
        [
            "rewrite even_spec, odd_spec.",
            "VernacExtend",
            "0f8e86cb057f54997bae8cf5e231c6807b5ffdf9"
        ],
        [
            "apply Odd_succ.",
            "VernacExtend",
            "cbba3a1a5ccdb9c1bca68d50464a1b01d982c75c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_succ : forall n, even (S n) = odd n.",
            "VernacStartTheoremProof",
            "da87bc0e31f4951dbd1d221f8118c4d7737ed405"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite <- negb_odd, odd_succ, negb_even.",
            "VernacExtend",
            "951db7492ca144b379625031470b36a21e16ffa8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Even_succ : forall n, Even (S n) <-> Odd n.",
            "VernacStartTheoremProof",
            "b61d214ca16bda6d8f756821a857f4c131799ae8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite <- even_spec, even_succ, odd_spec.",
            "VernacExtend",
            "9613146906a32002720c1a9dbc8b12513d240625"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Even_succ_succ : forall n, Even (S (S n)) <-> Even n.",
            "VernacStartTheoremProof",
            "d894beda41a2067b77b4a5c0e1dbcaead1630b1d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite Even_succ, Odd_succ.",
            "VernacExtend",
            "d002c6259a570c86ab3e9e3e1f22c106484730e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Odd_succ_succ : forall n, Odd (S (S n)) <-> Odd n.",
            "VernacStartTheoremProof",
            "5a13db8c628c5f772a2dc892835c4b0757a26e3d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite Odd_succ, Even_succ.",
            "VernacExtend",
            "a044fcaf99f7e75ae607c6e3cd14b9f12e3f320e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_succ_succ : forall n, even (S (S n)) = even n.",
            "VernacStartTheoremProof",
            "cc116c2a7fa53e9c76a4081fb5e1eed99f65fdb9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite even_succ, odd_succ.",
            "VernacExtend",
            "f27f5b4f65f583e0c285d6e48ad79a8a9b7ab4b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_succ_succ : forall n, odd (S (S n)) = odd n.",
            "VernacStartTheoremProof",
            "d144348833f899ccae41f7d9b07e4331c714b0f8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite odd_succ, even_succ.",
            "VernacExtend",
            "cd7bd4e890e85ee1febe0ec39e74caa7ef97ddf3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_add : forall n m, even (n+m) = Bool.eqb (even n) (even m).",
            "VernacStartTheoremProof",
            "b39d35bb8d1641eed6ee130f1201349cc53ef9e8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (even n); case_eq (even m); rewrite <- ?negb_true_iff, ?negb_even, ?odd_spec, ?even_spec; intros (m',Hm) (n',Hn).",
            "VernacExtend",
            "b9699e373b88d8be169171e9d28a0f18030f9ace"
        ],
        [
            "exists (n'+m').",
            "VernacExtend",
            "d2ee5146fa66ab63a670e33c63ece32382e24fc5"
        ],
        [
            "now rewrite mul_add_distr_l, Hn, Hm.",
            "VernacExtend",
            "f7bb856b6768b3112cf72f4d5395a4bf3253c4f7"
        ],
        [
            "exists (n'+m').",
            "VernacExtend",
            "d2ee5146fa66ab63a670e33c63ece32382e24fc5"
        ],
        [
            "now rewrite mul_add_distr_l, Hn, Hm, add_assoc.",
            "VernacExtend",
            "66a1363fd243177a73f3143d807343d3201c13a9"
        ],
        [
            "exists (n'+m').",
            "VernacExtend",
            "d2ee5146fa66ab63a670e33c63ece32382e24fc5"
        ],
        [
            "now rewrite mul_add_distr_l, Hn, Hm, add_shuffle0.",
            "VernacExtend",
            "96b7076e66b942e88cb6b201de328ae6328746bc"
        ],
        [
            "exists (n'+m'+1).",
            "VernacExtend",
            "6bd04474d25e31aeb5ff43d700cfaf649b4183be"
        ],
        [
            "rewrite Hm,Hn.",
            "VernacExtend",
            "87ac8358ea078833de92258cee6ba5160523fcf8"
        ],
        [
            "nzsimpl'.",
            "VernacExtend",
            "8e574f0f62759aeb195e08bf64ba0a41330fb166"
        ],
        [
            "now rewrite add_shuffle1.",
            "VernacExtend",
            "5c03997309a74f930f266862828247b19083fcaf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_add : forall n m, odd (n+m) = xorb (odd n) (odd m).",
            "VernacStartTheoremProof",
            "46875ee12c175fbc2b7d3e85f920a83f3889efc9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- !negb_even.",
            "VernacExtend",
            "3c8949919d84aa83e1c4836a4e2f1a6958c26a5e"
        ],
        [
            "rewrite even_add.",
            "VernacExtend",
            "2489c4c4934c9dfd28366dea05c1f0134cbf4e7f"
        ],
        [
            "now destruct (even n), (even m).",
            "VernacExtend",
            "c4f5a75163b9c249ea1423fa539e0fbd71caa858"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_mul : forall n m, even (mul n m) = even n || even m.",
            "VernacStartTheoremProof",
            "12ad756c54cdc7f15594fc01e42ea64f97d3ba28"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (even n); simpl; rewrite ?even_spec.",
            "VernacExtend",
            "b0d9ec46a5696aace60e6733dab60ef54e3d8162"
        ],
        [
            "intros (n',Hn).",
            "VernacExtend",
            "8cbec82f5803a19566fdb00db7b7aff10cc6d95a"
        ],
        [
            "exists (n'*m).",
            "VernacExtend",
            "4e3b2ac8a1956d94a3b3687913f3e720e321366e"
        ],
        [
            "now rewrite Hn, mul_assoc.",
            "VernacExtend",
            "0a559c38997af2d9df9e503f070e068396edfa95"
        ],
        [
            "case_eq (even m); simpl; rewrite ?even_spec.",
            "VernacExtend",
            "bc5424c1b7b129dfec18f548f8e20f2abdf3d4a8"
        ],
        [
            "intros (m',Hm).",
            "VernacExtend",
            "40391c13de5eca1b49757d223a1dda77ae37fe31"
        ],
        [
            "exists (n*m').",
            "VernacExtend",
            "dc8fdfb27ac2408140d63e77bcb8e279a9a961b0"
        ],
        [
            "now rewrite Hm, !mul_assoc, (mul_comm 2).",
            "VernacExtend",
            "f263df5073b7997e720b7a2667bb3f5703378293"
        ],
        [
            "rewrite <- !negb_true_iff, !negb_even, !odd_spec.",
            "VernacExtend",
            "6762fb7d44be1679bbba18b2c95bc7986ff508af"
        ],
        [
            "intros (m',Hm) (n',Hn).",
            "VernacExtend",
            "e0e13dd33e3e846e48f8fbb87a84e410bddc55c3"
        ],
        [
            "exists (n'*2*m' +n'+m').",
            "VernacExtend",
            "90ebd91dcb8f0ca1576a414847ac33381899fb12"
        ],
        [
            "rewrite Hn,Hm, !mul_add_distr_l, !mul_add_distr_r, !mul_1_l, !mul_1_r.",
            "VernacExtend",
            "68cac68e80b5387438c839c0e3fe5410385987c7"
        ],
        [
            "now rewrite add_shuffle1, add_assoc, !mul_assoc.",
            "VernacExtend",
            "282cbba0c76576b2fcff6bc86a946cea9be97661"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_mul : forall n m, odd (mul n m) = odd n && odd m.",
            "VernacStartTheoremProof",
            "bf527867bbd743049ff6892b860eb2548ee6d994"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- !negb_even.",
            "VernacExtend",
            "3c8949919d84aa83e1c4836a4e2f1a6958c26a5e"
        ],
        [
            "rewrite even_mul.",
            "VernacExtend",
            "6267957049b3820693b45afdfaed6d93c8854e13"
        ],
        [
            "now destruct (even n), (even m).",
            "VernacExtend",
            "c4f5a75163b9c249ea1423fa539e0fbd71caa858"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_add_even : forall n m, Even m -> even (n+m) = even n.",
            "VernacStartTheoremProof",
            "8ad9f79950f6ca7a347a1d988808d3940e864cf3"
        ],
        [
            "intros n m Hm.",
            "VernacExtend",
            "71d31d41967a85081bfee2eb8543959fa61c5f13"
        ],
        [
            "apply even_spec in Hm.",
            "VernacExtend",
            "d3d0606c8cae07cdb6eb3fd676c489e134d53997"
        ],
        [
            "rewrite even_add, Hm.",
            "VernacExtend",
            "c694874562db3f2ba66818e3a1b0468ca48372ea"
        ],
        [
            "now destruct (even n).",
            "VernacExtend",
            "7fe25b8e339bc6d5cc6c8238ad99b4c62df1ded5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_add_even : forall n m, Even m -> odd (n+m) = odd n.",
            "VernacStartTheoremProof",
            "3a697c7bbe051835152af951f921e0869f8b1e4e"
        ],
        [
            "intros n m Hm.",
            "VernacExtend",
            "71d31d41967a85081bfee2eb8543959fa61c5f13"
        ],
        [
            "apply even_spec in Hm.",
            "VernacExtend",
            "d3d0606c8cae07cdb6eb3fd676c489e134d53997"
        ],
        [
            "rewrite odd_add, <- (negb_even m), Hm.",
            "VernacExtend",
            "8c8f909527a8f5ccf071c7762ce31621ebb20d3b"
        ],
        [
            "now destruct (odd n).",
            "VernacExtend",
            "50d442df4f56d22d29f4cc8cd32b0915359ec95f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_add_mul_even : forall n m p, Even m -> even (n+m*p) = even n.",
            "VernacStartTheoremProof",
            "ad4e5edd9cf2855a93e771bf0ca8e29778397d10"
        ],
        [
            "intros n m p Hm.",
            "VernacExtend",
            "7732ed59ace187b29b96b33ba1d8dc33ce1dc954"
        ],
        [
            "apply even_spec in Hm.",
            "VernacExtend",
            "d3d0606c8cae07cdb6eb3fd676c489e134d53997"
        ],
        [
            "apply even_add_even.",
            "VernacExtend",
            "1b86272c8cfeaa5932ee4088b4a02b51972d7bcd"
        ],
        [
            "apply even_spec.",
            "VernacExtend",
            "2eca576c489ef3de101f777de6ec9ea155272a86"
        ],
        [
            "now rewrite even_mul, Hm.",
            "VernacExtend",
            "c76c2b23fac769d4f582b2034faa25c822109db5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_add_mul_even : forall n m p, Even m -> odd (n+m*p) = odd n.",
            "VernacStartTheoremProof",
            "eae84f7e56c30229e5b084e525b80aa86eb65b8d"
        ],
        [
            "intros n m p Hm.",
            "VernacExtend",
            "7732ed59ace187b29b96b33ba1d8dc33ce1dc954"
        ],
        [
            "apply even_spec in Hm.",
            "VernacExtend",
            "d3d0606c8cae07cdb6eb3fd676c489e134d53997"
        ],
        [
            "apply odd_add_even.",
            "VernacExtend",
            "0c9087e68355d179cbbed41f3fbcc8a3a41e5729"
        ],
        [
            "apply even_spec.",
            "VernacExtend",
            "2eca576c489ef3de101f777de6ec9ea155272a86"
        ],
        [
            "now rewrite even_mul, Hm.",
            "VernacExtend",
            "c76c2b23fac769d4f582b2034faa25c822109db5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma even_add_mul_2 : forall n m, even (n+2*m) = even n.",
            "VernacStartTheoremProof",
            "84ee8c4b665d4b4ba0444ae9a852112c13c490c8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply even_add_mul_even.",
            "VernacExtend",
            "19dcbe6086affd97d9db8d07ab7a7d2ef74986f6"
        ],
        [
            "apply even_spec, even_2.",
            "VernacExtend",
            "ab984fd8c063bb53df19ca069b2a4c7ebe216ecc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma odd_add_mul_2 : forall n m, odd (n+2*m) = odd n.",
            "VernacStartTheoremProof",
            "e73b614093a2e03235f536a87640ac23b34fda91"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply odd_add_mul_even.",
            "VernacExtend",
            "00a5b3292b8d9751798bde4c602b9d7ce5b07e42"
        ],
        [
            "apply even_spec, even_2.",
            "VernacExtend",
            "ab984fd8c063bb53df19ca069b2a4c7ebe216ecc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NZParityProp.",
            "VernacEndSegment",
            "4a27f53bca9848503ca77c882e318eabebca2925"
        ]
    ],
    "proofs": [
        {
            "name": "Even_wd",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "unfold Even.",
                        "VernacExtend",
                        "e6b4af91fa268fa4a5a8882b2a89e14e9abcbca0"
                    ]
                },
                {
                    "command": [
                        "solve_proper.",
                        "VernacExtend",
                        "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Odd_wd",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "unfold Odd.",
                        "VernacExtend",
                        "e072beb382ce59d412311054feb1d6224736ff6f"
                    ]
                },
                {
                    "command": [
                        "solve_proper.",
                        "VernacExtend",
                        "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_wd",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros x x' EQ.",
                        "VernacExtend",
                        "b1014e4dd13c0f28b48bef9c863ac080c232e8a1"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_iff_eq_true, 2 even_spec.",
                        "VernacExtend",
                        "8c74a4d45f8c91c0b92dceecb0609c8a745fc060"
                    ]
                },
                {
                    "command": [
                        "now f_equiv.",
                        "VernacExtend",
                        "98cbad0c17c93e8efb72200330cc4dc88ee8a339"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_wd",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros x x' EQ.",
                        "VernacExtend",
                        "b1014e4dd13c0f28b48bef9c863ac080c232e8a1"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_iff_eq_true, 2 odd_spec.",
                        "VernacExtend",
                        "be87f245765c07b8c7ec35ab4bf8fb74e5b09f06"
                    ]
                },
                {
                    "command": [
                        "now f_equiv.",
                        "VernacExtend",
                        "98cbad0c17c93e8efb72200330cc4dc88ee8a339"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Even_or_Odd",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "nzinduct x.",
                        "VernacExtend",
                        "2588b2dcc344f74b3c7d5d9f2cb49939659cdba0"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl.",
                        "VernacExtend",
                        "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "split; intros [(y,H)|(y,H)].",
                        "VernacExtend",
                        "373d7922a5157cf1ebce27dd1252d877c77e5e16"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "exists y.",
                        "VernacExtend",
                        "1c06cb2466f48b6def24e74ddeda9956981c0a0a"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl.",
                        "VernacExtend",
                        "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "exists (S y).",
                        "VernacExtend",
                        "8717e045b9814bec5f72557300161f3edbb45ecc"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl'.",
                        "VernacExtend",
                        "7c9a3b39ed2b376414aa623dd77af64f7690380f"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "assert (LT : exists z, z<y).",
                        "VernacExtend",
                        "10f7b2d84dc373f96ce6a4f242167e30439d43b3"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_ge_cases 0 y) as [LT|GT]; [now exists 0 | exists x].",
                        "VernacExtend",
                        "a8e47e797be5afc9ce93899d758e45b1c0045898"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_succ_l, H.",
                        "VernacExtend",
                        "c0b8e3af65786ef6b3c81ca8f47a099718505d3b"
                    ]
                },
                {
                    "command": [
                        "nzsimpl'.",
                        "VernacExtend",
                        "8e574f0f62759aeb195e08bf64ba0a41330fb166"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (add_0_r y) at 3.",
                        "VernacExtend",
                        "6a20e38e3be554a365ab7c9b3c3e964f2f288ffc"
                    ]
                },
                {
                    "command": [
                        "now apply add_le_mono_l.",
                        "VernacExtend",
                        "0d41a77e1ecac43d6b8c8ba3730494b687f116ee"
                    ]
                },
                {
                    "command": [
                        "destruct LT as (z,LT).",
                        "VernacExtend",
                        "74f0eddd29d21831ca70418f89ac679433e529a9"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_exists_pred z y LT) as (y' & Hy' & _).",
                        "VernacExtend",
                        "1f6e21f02294292449c8f24fb77f6e4aa0a72f31"
                    ]
                },
                {
                    "command": [
                        "exists y'.",
                        "VernacExtend",
                        "8665611bf4db726589753633fb622609f741e1e7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- succ_inj_wd, H, Hy'.",
                        "VernacExtend",
                        "90b9632e6f2bdf21cd6f6326379ce278affe1669"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl'.",
                        "VernacExtend",
                        "7c9a3b39ed2b376414aa623dd77af64f7690380f"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "exists y.",
                        "VernacExtend",
                        "1c06cb2466f48b6def24e74ddeda9956981c0a0a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- succ_inj_wd.",
                        "VernacExtend",
                        "910880a39b07cc617f2427236d8cb08c1e24b547"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl.",
                        "VernacExtend",
                        "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "double_below",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "nzsimpl'.",
                        "VernacExtend",
                        "8e574f0f62759aeb195e08bf64ba0a41330fb166"
                    ]
                },
                {
                    "command": [
                        "apply lt_succ_r.",
                        "VernacExtend",
                        "eb5492855fed638ce59ac381632f2830bb69c5ec"
                    ]
                },
                {
                    "command": [
                        "now apply add_le_mono.",
                        "VernacExtend",
                        "5d82796786dfa0c3c120931b65de99be411717d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "double_above",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "nzsimpl'.",
                        "VernacExtend",
                        "8e574f0f62759aeb195e08bf64ba0a41330fb166"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_succ_l, <- add_succ_l, <- add_succ_r.",
                        "VernacExtend",
                        "db4cbd40400d891ec4fe96bc3c69b9333763b1fb"
                    ]
                },
                {
                    "command": [
                        "apply add_le_mono; now apply le_succ_l.",
                        "VernacExtend",
                        "a17e3b46cd1ab25b09761e4bb0858699a08ddc7b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Even_Odd_False",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "intros x (y,E) (z,O).",
                        "VernacExtend",
                        "a75ecd78ad71a3018e3117181c931f6ff225baa3"
                    ]
                },
                {
                    "command": [
                        "rewrite O in E; clear O.",
                        "VernacExtend",
                        "3c3c51d028695e3eb2f4268d8a01b4c988b28c9e"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_cases y z) as [LE|GT].",
                        "VernacExtend",
                        "ce5a27b095ad703d78b72a890d7835e143c66811"
                    ]
                },
                {
                    "command": [
                        "generalize (double_below _ _ LE); order.",
                        "VernacExtend",
                        "3c5771a34b671910dc96ccfd2b316c63e0840426"
                    ]
                },
                {
                    "command": [
                        "generalize (double_above _ _ GT); order.",
                        "VernacExtend",
                        "31114dbba52434b3c10f5d5d9747606cf810cec4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "orb_even_odd",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (Even_or_Odd n) as [H|H].",
                        "VernacExtend",
                        "90375d27fd8bfd6e0ed527df742a3a543926def5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- even_spec in H.",
                        "VernacExtend",
                        "a92fc87707306556bd97270e259252380203e35d"
                    ]
                },
                {
                    "command": [
                        "now rewrite H.",
                        "VernacExtend",
                        "4b48f672d72bdaa3470accf224603b6461e14cf4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- odd_spec in H.",
                        "VernacExtend",
                        "3d1045b14c03def18cc9459bcc53336aead3e92e"
                    ]
                },
                {
                    "command": [
                        "now rewrite H, orb_true_r.",
                        "VernacExtend",
                        "4d1e63eb9297f8dff8dfce0eb50b9b7b8da98f2d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negb_odd",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (Even_or_Odd n) (Even_Odd_False n).",
                        "VernacExtend",
                        "b44941da9fc23968ff58fcecbacbe5c586de9a5f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- even_spec, <- odd_spec.",
                        "VernacExtend",
                        "a22b388f475e8cd85ba2c6993a88add4e462f9a1"
                    ]
                },
                {
                    "command": [
                        "destruct (odd n), (even n) ; simpl; intuition.",
                        "VernacExtend",
                        "80b494611a15cc9c2b7dc9715674f0a2842076cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negb_even",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- negb_odd.",
                        "VernacExtend",
                        "173efc4c394bb8707db9874249407b58a9eced35"
                    ]
                },
                {
                    "command": [
                        "apply negb_involutive.",
                        "VernacExtend",
                        "db9699a137f25341884e2751828b196303310124"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_0",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "rewrite even_spec.",
                        "VernacExtend",
                        "bf455b0362426fb472a1a687926e0d9a91793b6e"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl.",
                        "VernacExtend",
                        "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_0",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "now rewrite <- negb_even, even_0.",
                        "VernacExtend",
                        "cc9292420ae81d2caba0a0e570b70c9d14b161f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_1",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "rewrite odd_spec.",
                        "VernacExtend",
                        "9542474a1cac21d2eca91859921439d6ed10a49f"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl'.",
                        "VernacExtend",
                        "7c9a3b39ed2b376414aa623dd77af64f7690380f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_1",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "now rewrite <- negb_odd, odd_1.",
                        "VernacExtend",
                        "1a4e5394ef9882733b110fb9f57587bc28e7da0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_2",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "rewrite even_spec.",
                        "VernacExtend",
                        "bf455b0362426fb472a1a687926e0d9a91793b6e"
                    ]
                },
                {
                    "command": [
                        "exists 1.",
                        "VernacExtend",
                        "18eb310858be5acae7304d0d9ed33063568db310"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl'.",
                        "VernacExtend",
                        "7c9a3b39ed2b376414aa623dd77af64f7690380f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_2",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "now rewrite <- negb_even, even_2.",
                        "VernacExtend",
                        "b483656f4f267ffd751509a3d4542ffca2bd764d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Odd_succ",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "split; intros (m,H).",
                        "VernacExtend",
                        "505274bd8166a1fd8d8b808cd79d1bfc17204139"
                    ]
                },
                {
                    "command": [
                        "exists m.",
                        "VernacExtend",
                        "9282a6b695b4daa97f27297bcc295a268a932fcd"
                    ]
                },
                {
                    "command": [
                        "apply succ_inj.",
                        "VernacExtend",
                        "20bea47dc9639cb7f51951bae01ee9c028f3992f"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_1_r in H.",
                        "VernacExtend",
                        "b17986e75ea5d6106d0b4a6f70094fb1f467d0a0"
                    ]
                },
                {
                    "command": [
                        "exists m.",
                        "VernacExtend",
                        "9282a6b695b4daa97f27297bcc295a268a932fcd"
                    ]
                },
                {
                    "command": [
                        "rewrite add_1_r.",
                        "VernacExtend",
                        "d1ec3ca17f17da3192e164fb41c4a163b74f7dc5"
                    ]
                },
                {
                    "command": [
                        "now f_equiv.",
                        "VernacExtend",
                        "98cbad0c17c93e8efb72200330cc4dc88ee8a339"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_succ",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply eq_iff_eq_true.",
                        "VernacExtend",
                        "fbc9e5e291e29c632196299248408098d7fc76bd"
                    ]
                },
                {
                    "command": [
                        "rewrite even_spec, odd_spec.",
                        "VernacExtend",
                        "0f8e86cb057f54997bae8cf5e231c6807b5ffdf9"
                    ]
                },
                {
                    "command": [
                        "apply Odd_succ.",
                        "VernacExtend",
                        "cbba3a1a5ccdb9c1bca68d50464a1b01d982c75c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_succ",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- negb_odd, odd_succ, negb_even.",
                        "VernacExtend",
                        "951db7492ca144b379625031470b36a21e16ffa8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Even_succ",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- even_spec, even_succ, odd_spec.",
                        "VernacExtend",
                        "9613146906a32002720c1a9dbc8b12513d240625"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Even_succ_succ",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite Even_succ, Odd_succ.",
                        "VernacExtend",
                        "d002c6259a570c86ab3e9e3e1f22c106484730e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Odd_succ_succ",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite Odd_succ, Even_succ.",
                        "VernacExtend",
                        "a044fcaf99f7e75ae607c6e3cd14b9f12e3f320e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_succ_succ",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite even_succ, odd_succ.",
                        "VernacExtend",
                        "f27f5b4f65f583e0c285d6e48ad79a8a9b7ab4b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_succ_succ",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite odd_succ, even_succ.",
                        "VernacExtend",
                        "cd7bd4e890e85ee1febe0ec39e74caa7ef97ddf3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_add",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case_eq (even n); case_eq (even m); rewrite <- ?negb_true_iff, ?negb_even, ?odd_spec, ?even_spec; intros (m',Hm) (n',Hn).",
                        "VernacExtend",
                        "b9699e373b88d8be169171e9d28a0f18030f9ace"
                    ]
                },
                {
                    "command": [
                        "exists (n'+m').",
                        "VernacExtend",
                        "d2ee5146fa66ab63a670e33c63ece32382e24fc5"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_add_distr_l, Hn, Hm.",
                        "VernacExtend",
                        "f7bb856b6768b3112cf72f4d5395a4bf3253c4f7"
                    ]
                },
                {
                    "command": [
                        "exists (n'+m').",
                        "VernacExtend",
                        "d2ee5146fa66ab63a670e33c63ece32382e24fc5"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_add_distr_l, Hn, Hm, add_assoc.",
                        "VernacExtend",
                        "66a1363fd243177a73f3143d807343d3201c13a9"
                    ]
                },
                {
                    "command": [
                        "exists (n'+m').",
                        "VernacExtend",
                        "d2ee5146fa66ab63a670e33c63ece32382e24fc5"
                    ]
                },
                {
                    "command": [
                        "now rewrite mul_add_distr_l, Hn, Hm, add_shuffle0.",
                        "VernacExtend",
                        "96b7076e66b942e88cb6b201de328ae6328746bc"
                    ]
                },
                {
                    "command": [
                        "exists (n'+m'+1).",
                        "VernacExtend",
                        "6bd04474d25e31aeb5ff43d700cfaf649b4183be"
                    ]
                },
                {
                    "command": [
                        "rewrite Hm,Hn.",
                        "VernacExtend",
                        "87ac8358ea078833de92258cee6ba5160523fcf8"
                    ]
                },
                {
                    "command": [
                        "nzsimpl'.",
                        "VernacExtend",
                        "8e574f0f62759aeb195e08bf64ba0a41330fb166"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_shuffle1.",
                        "VernacExtend",
                        "5c03997309a74f930f266862828247b19083fcaf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_add",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !negb_even.",
                        "VernacExtend",
                        "3c8949919d84aa83e1c4836a4e2f1a6958c26a5e"
                    ]
                },
                {
                    "command": [
                        "rewrite even_add.",
                        "VernacExtend",
                        "2489c4c4934c9dfd28366dea05c1f0134cbf4e7f"
                    ]
                },
                {
                    "command": [
                        "now destruct (even n), (even m).",
                        "VernacExtend",
                        "c4f5a75163b9c249ea1423fa539e0fbd71caa858"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_mul",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case_eq (even n); simpl; rewrite ?even_spec.",
                        "VernacExtend",
                        "b0d9ec46a5696aace60e6733dab60ef54e3d8162"
                    ]
                },
                {
                    "command": [
                        "intros (n',Hn).",
                        "VernacExtend",
                        "8cbec82f5803a19566fdb00db7b7aff10cc6d95a"
                    ]
                },
                {
                    "command": [
                        "exists (n'*m).",
                        "VernacExtend",
                        "4e3b2ac8a1956d94a3b3687913f3e720e321366e"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hn, mul_assoc.",
                        "VernacExtend",
                        "0a559c38997af2d9df9e503f070e068396edfa95"
                    ]
                },
                {
                    "command": [
                        "case_eq (even m); simpl; rewrite ?even_spec.",
                        "VernacExtend",
                        "bc5424c1b7b129dfec18f548f8e20f2abdf3d4a8"
                    ]
                },
                {
                    "command": [
                        "intros (m',Hm).",
                        "VernacExtend",
                        "40391c13de5eca1b49757d223a1dda77ae37fe31"
                    ]
                },
                {
                    "command": [
                        "exists (n*m').",
                        "VernacExtend",
                        "dc8fdfb27ac2408140d63e77bcb8e279a9a961b0"
                    ]
                },
                {
                    "command": [
                        "now rewrite Hm, !mul_assoc, (mul_comm 2).",
                        "VernacExtend",
                        "f263df5073b7997e720b7a2667bb3f5703378293"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !negb_true_iff, !negb_even, !odd_spec.",
                        "VernacExtend",
                        "6762fb7d44be1679bbba18b2c95bc7986ff508af"
                    ]
                },
                {
                    "command": [
                        "intros (m',Hm) (n',Hn).",
                        "VernacExtend",
                        "e0e13dd33e3e846e48f8fbb87a84e410bddc55c3"
                    ]
                },
                {
                    "command": [
                        "exists (n'*2*m' +n'+m').",
                        "VernacExtend",
                        "90ebd91dcb8f0ca1576a414847ac33381899fb12"
                    ]
                },
                {
                    "command": [
                        "rewrite Hn,Hm, !mul_add_distr_l, !mul_add_distr_r, !mul_1_l, !mul_1_r.",
                        "VernacExtend",
                        "68cac68e80b5387438c839c0e3fe5410385987c7"
                    ]
                },
                {
                    "command": [
                        "now rewrite add_shuffle1, add_assoc, !mul_assoc.",
                        "VernacExtend",
                        "282cbba0c76576b2fcff6bc86a946cea9be97661"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_mul",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !negb_even.",
                        "VernacExtend",
                        "3c8949919d84aa83e1c4836a4e2f1a6958c26a5e"
                    ]
                },
                {
                    "command": [
                        "rewrite even_mul.",
                        "VernacExtend",
                        "6267957049b3820693b45afdfaed6d93c8854e13"
                    ]
                },
                {
                    "command": [
                        "now destruct (even n), (even m).",
                        "VernacExtend",
                        "c4f5a75163b9c249ea1423fa539e0fbd71caa858"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_add_even",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "intros n m Hm.",
                        "VernacExtend",
                        "71d31d41967a85081bfee2eb8543959fa61c5f13"
                    ]
                },
                {
                    "command": [
                        "apply even_spec in Hm.",
                        "VernacExtend",
                        "d3d0606c8cae07cdb6eb3fd676c489e134d53997"
                    ]
                },
                {
                    "command": [
                        "rewrite even_add, Hm.",
                        "VernacExtend",
                        "c694874562db3f2ba66818e3a1b0468ca48372ea"
                    ]
                },
                {
                    "command": [
                        "now destruct (even n).",
                        "VernacExtend",
                        "7fe25b8e339bc6d5cc6c8238ad99b4c62df1ded5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_add_even",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "intros n m Hm.",
                        "VernacExtend",
                        "71d31d41967a85081bfee2eb8543959fa61c5f13"
                    ]
                },
                {
                    "command": [
                        "apply even_spec in Hm.",
                        "VernacExtend",
                        "d3d0606c8cae07cdb6eb3fd676c489e134d53997"
                    ]
                },
                {
                    "command": [
                        "rewrite odd_add, <- (negb_even m), Hm.",
                        "VernacExtend",
                        "8c8f909527a8f5ccf071c7762ce31621ebb20d3b"
                    ]
                },
                {
                    "command": [
                        "now destruct (odd n).",
                        "VernacExtend",
                        "50d442df4f56d22d29f4cc8cd32b0915359ec95f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_add_mul_even",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "intros n m p Hm.",
                        "VernacExtend",
                        "7732ed59ace187b29b96b33ba1d8dc33ce1dc954"
                    ]
                },
                {
                    "command": [
                        "apply even_spec in Hm.",
                        "VernacExtend",
                        "d3d0606c8cae07cdb6eb3fd676c489e134d53997"
                    ]
                },
                {
                    "command": [
                        "apply even_add_even.",
                        "VernacExtend",
                        "1b86272c8cfeaa5932ee4088b4a02b51972d7bcd"
                    ]
                },
                {
                    "command": [
                        "apply even_spec.",
                        "VernacExtend",
                        "2eca576c489ef3de101f777de6ec9ea155272a86"
                    ]
                },
                {
                    "command": [
                        "now rewrite even_mul, Hm.",
                        "VernacExtend",
                        "c76c2b23fac769d4f582b2034faa25c822109db5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_add_mul_even",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "intros n m p Hm.",
                        "VernacExtend",
                        "7732ed59ace187b29b96b33ba1d8dc33ce1dc954"
                    ]
                },
                {
                    "command": [
                        "apply even_spec in Hm.",
                        "VernacExtend",
                        "d3d0606c8cae07cdb6eb3fd676c489e134d53997"
                    ]
                },
                {
                    "command": [
                        "apply odd_add_even.",
                        "VernacExtend",
                        "0c9087e68355d179cbbed41f3fbcc8a3a41e5729"
                    ]
                },
                {
                    "command": [
                        "apply even_spec.",
                        "VernacExtend",
                        "2eca576c489ef3de101f777de6ec9ea155272a86"
                    ]
                },
                {
                    "command": [
                        "now rewrite even_mul, Hm.",
                        "VernacExtend",
                        "c76c2b23fac769d4f582b2034faa25c822109db5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "even_add_mul_2",
            "line_nb": 229,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply even_add_mul_even.",
                        "VernacExtend",
                        "19dcbe6086affd97d9db8d07ab7a7d2ef74986f6"
                    ]
                },
                {
                    "command": [
                        "apply even_spec, even_2.",
                        "VernacExtend",
                        "ab984fd8c063bb53df19ca069b2a4c7ebe216ecc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "odd_add_mul_2",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply odd_add_mul_even.",
                        "VernacExtend",
                        "00a5b3292b8d9751798bde4c602b9d7ce5b07e42"
                    ]
                },
                {
                    "command": [
                        "apply even_spec, even_2.",
                        "VernacExtend",
                        "ab984fd8c063bb53df19ca069b2a4c7ebe216ecc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}