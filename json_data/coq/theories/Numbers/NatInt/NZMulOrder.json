{
    "filename": "theories/Numbers/NatInt/NZMulOrder.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import NZAxioms.",
            "VernacRequire",
            "a119c8ffe42a55963254d4041b8ef43609e620e5"
        ],
        [
            "Require Import NZAddOrder.",
            "VernacRequire",
            "05f80d1eaa6aa838d3e3f59445987bbcd580a932"
        ],
        [
            "Module Type NZMulOrderProp (Import NZ : NZOrdAxiomsSig').",
            "VernacDeclareModuleType",
            "0064950be780dbf14310ddd115d0571ffa83be70"
        ],
        [
            "Include NZAddOrderProp NZ.",
            "VernacInclude",
            "5c0df99c58aae0a1e7156ca71c3a9db8be3641d0"
        ],
        [
            "Theorem mul_lt_pred : forall p q n m, S p == q -> (p * n < p * m <-> q * n + m < q * m + n).",
            "VernacStartTheoremProof",
            "ad779a659291d01f99a6d3eb9c7c7fee09cca2c8"
        ],
        [
            "intros p q n m H.",
            "VernacExtend",
            "469c4385640e2e8e20cd667a61c6c08e3fe1b6db"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "nzsimpl.",
            "VernacExtend",
            "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
        ],
        [
            "rewrite <- ! add_assoc, (add_comm n m).",
            "VernacExtend",
            "2e71cf8133c9ec4a8615373471bb7126b5ae472f"
        ],
        [
            "now rewrite <- add_lt_mono_r.",
            "VernacExtend",
            "6cfb5ff9321c3a4d6d75f1a005d6395a9f561930"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_lt_mono_pos_l : forall p n m, 0 < p -> (n < m <-> p * n < p * m).",
            "VernacStartTheoremProof",
            "7f57df26e1e55aeafa6ce2271b232708404f7805"
        ],
        [
            "intros p n m Hp.",
            "VernacExtend",
            "eb2029e594ffe941076eb9bfc4d6785f42aa8345"
        ],
        [
            "revert n m.",
            "VernacExtend",
            "f423d1eebab8f85f00cd4cbfae0dfc5074b8535f"
        ],
        [
            "apply lt_ind with (4:=Hp).",
            "VernacExtend",
            "d41027ec464dafe1c5604948d43198cf55ef572f"
        ],
        [
            "solve_proper.",
            "VernacExtend",
            "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now nzsimpl.",
            "VernacExtend",
            "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
        ],
        [
            "clear p Hp.",
            "VernacExtend",
            "4d03503b670097e517e75fd5ffa5c1b905abacc2"
        ],
        [
            "intros p Hp IH n m.",
            "VernacExtend",
            "1af957124135f2db1d4a878cc16e5fe45a17f88d"
        ],
        [
            "nzsimpl.",
            "VernacExtend",
            "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
        ],
        [
            "assert (LR : forall n m, n < m -> p * n + n < p * m + m) by (intros n1 m1 H; apply add_lt_mono; trivial; now rewrite <- IH).",
            "VernacExtend",
            "b7ef3975b2876f1c3e41d9484fd2ad58503f3cdd"
        ],
        [
            "split; intros H.",
            "VernacExtend",
            "a22fcc98cae3c9e7feb477b9e8b0236d37ea8d65"
        ],
        [
            "now apply LR.",
            "VernacExtend",
            "390afb59ec7f3f310006ef52d1ec210a7c835462"
        ],
        [
            "destruct (lt_trichotomy n m) as [LT|[EQ|GT]]; trivial.",
            "VernacExtend",
            "b417b71f899b20ab8c233b26051ece88b2c3b74e"
        ],
        [
            "rewrite EQ in H.",
            "VernacExtend",
            "96ee997be8ec1621ab2560388d0684f029c94896"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "apply LR in GT.",
            "VernacExtend",
            "dd69148da04148749e930e390433295cdb7b3634"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_lt_mono_pos_r : forall p n m, 0 < p -> (n < m <-> n * p < m * p).",
            "VernacStartTheoremProof",
            "5c959ed312533f3bd2d26b12033521aa0705b1ed"
        ],
        [
            "intros p n m.",
            "VernacExtend",
            "5d451b324a623149b1d97ded6335e6c85773f67d"
        ],
        [
            "rewrite (mul_comm n p), (mul_comm m p).",
            "VernacExtend",
            "784f9722937f69f1ef711cc3ecae4901d1c98fe8"
        ],
        [
            "now apply mul_lt_mono_pos_l.",
            "VernacExtend",
            "b1d7f127fd9fd0ec4a7719c3926d91b9735b1507"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_lt_mono_neg_l : forall p n m, p < 0 -> (n < m <-> p * m < p * n).",
            "VernacStartTheoremProof",
            "dcfe7c590e94f47672361c1432098552496c3b0a"
        ],
        [
            "nzord_induct p.",
            "VernacExtend",
            "d58821f9c276923acabeac4b5eeecc3de840ffe6"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "intros p Hp _ n m Hp'.",
            "VernacExtend",
            "9d4d9f0d3d29fd7740093015c3c40f5033cddc84"
        ],
        [
            "apply lt_succ_l in Hp'.",
            "VernacExtend",
            "1d17116fa61e1607103c26c595d22865e92b33f3"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "intros p Hp IH n m _.",
            "VernacExtend",
            "fe9d05ee49b731793157a85f5513d39ae323ec8d"
        ],
        [
            "apply le_succ_l in Hp.",
            "VernacExtend",
            "cff8cc8dc10d9f5bda7d98a31cae77a471520227"
        ],
        [
            "le_elim Hp.",
            "VernacExtend",
            "17876eb1b5fdebb6aa546c2be2784086ee1d8893"
        ],
        [
            "assert (LR : forall n m, n < m -> p * m < p * n).",
            "VernacExtend",
            "03ab48b5492b408d920f7ed3c2d8cf7c4527cad4"
        ],
        [
            "intros n1 m1 H.",
            "VernacExtend",
            "117bf32d3d9ec1b9753f1066916b3fe283556677"
        ],
        [
            "apply (le_lt_add_lt n1 m1).",
            "VernacExtend",
            "da4854e226d79272bad9e0f2c225203b4577fd1d"
        ],
        [
            "now apply lt_le_incl.",
            "VernacExtend",
            "acdf72fc8000eed208128b3a4133f14a26e08d82"
        ],
        [
            "rewrite <- 2 mul_succ_l.",
            "VernacExtend",
            "d6f48b9ea6bc9b386ef41f3be860ad85471515ff"
        ],
        [
            "now rewrite <- IH.",
            "VernacExtend",
            "ded01dc68b05af28fd78d29c798e1274e2174c88"
        ],
        [
            "split; intros H.",
            "VernacExtend",
            "a22fcc98cae3c9e7feb477b9e8b0236d37ea8d65"
        ],
        [
            "now apply LR.",
            "VernacExtend",
            "390afb59ec7f3f310006ef52d1ec210a7c835462"
        ],
        [
            "destruct (lt_trichotomy n m) as [LT|[EQ|GT]]; trivial.",
            "VernacExtend",
            "b417b71f899b20ab8c233b26051ece88b2c3b74e"
        ],
        [
            "rewrite EQ in H.",
            "VernacExtend",
            "96ee997be8ec1621ab2560388d0684f029c94896"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "apply LR in GT.",
            "VernacExtend",
            "dd69148da04148749e930e390433295cdb7b3634"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "rewrite (mul_lt_pred p (S p)), Hp; now nzsimpl.",
            "VernacExtend",
            "0875a8432ef62c7d731815b28778faab9fadaa26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_lt_mono_neg_r : forall p n m, p < 0 -> (n < m <-> m * p < n * p).",
            "VernacStartTheoremProof",
            "cad1969bb192138dd72e7503e3a0f27103905286"
        ],
        [
            "intros p n m.",
            "VernacExtend",
            "5d451b324a623149b1d97ded6335e6c85773f67d"
        ],
        [
            "rewrite (mul_comm n p), (mul_comm m p).",
            "VernacExtend",
            "784f9722937f69f1ef711cc3ecae4901d1c98fe8"
        ],
        [
            "now apply mul_lt_mono_neg_l.",
            "VernacExtend",
            "09dd28fef4a33392334267a05360ad6878f1d598"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_le_mono_nonneg_l : forall n m p, 0 <= p -> n <= m -> p * n <= p * m.",
            "VernacStartTheoremProof",
            "9de6136bc84960e9dc30f6f5791bf1ef22024d9a"
        ],
        [
            "intros n m p H1 H2.",
            "VernacExtend",
            "e8767157c47cd1baf1cd483dfb75e1138bf3e7ab"
        ],
        [
            "le_elim H1.",
            "VernacExtend",
            "617d0085f314b9c579efbee09aa6eb737102bd07"
        ],
        [
            "le_elim H2.",
            "VernacExtend",
            "c65e03f56830c0c6240cb5041f2a81a215d957ba"
        ],
        [
            "apply lt_le_incl.",
            "VernacExtend",
            "97b4d61e67062ad4dfa00a84f019e97394a93110"
        ],
        [
            "now apply mul_lt_mono_pos_l.",
            "VernacExtend",
            "b1d7f127fd9fd0ec4a7719c3926d91b9735b1507"
        ],
        [
            "apply eq_le_incl; now rewrite H2.",
            "VernacExtend",
            "ecb81d86b4cb529bd2e00c3a7ec600749531ddd9"
        ],
        [
            "apply eq_le_incl; rewrite <- H1; now do 2 rewrite mul_0_l.",
            "VernacExtend",
            "11b4d1936a55711280625b6324414f11ad0a4681"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_le_mono_nonpos_l : forall n m p, p <= 0 -> n <= m -> p * m <= p * n.",
            "VernacStartTheoremProof",
            "edf2edf5b899e8974805d31fcf4b43b56afb8df5"
        ],
        [
            "intros n m p H1 H2.",
            "VernacExtend",
            "e8767157c47cd1baf1cd483dfb75e1138bf3e7ab"
        ],
        [
            "le_elim H1.",
            "VernacExtend",
            "617d0085f314b9c579efbee09aa6eb737102bd07"
        ],
        [
            "le_elim H2.",
            "VernacExtend",
            "c65e03f56830c0c6240cb5041f2a81a215d957ba"
        ],
        [
            "apply lt_le_incl.",
            "VernacExtend",
            "97b4d61e67062ad4dfa00a84f019e97394a93110"
        ],
        [
            "now apply mul_lt_mono_neg_l.",
            "VernacExtend",
            "09dd28fef4a33392334267a05360ad6878f1d598"
        ],
        [
            "apply eq_le_incl; now rewrite H2.",
            "VernacExtend",
            "ecb81d86b4cb529bd2e00c3a7ec600749531ddd9"
        ],
        [
            "apply eq_le_incl; rewrite H1; now do 2 rewrite mul_0_l.",
            "VernacExtend",
            "8a2a83601fbaeef3c435995d2f7ae6e3b76df945"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_le_mono_nonneg_r : forall n m p, 0 <= p -> n <= m -> n * p <= m * p.",
            "VernacStartTheoremProof",
            "7a964bc33afb0c535ef5310ec13312e0cd7bcdd7"
        ],
        [
            "intros n m p H1 H2; rewrite (mul_comm n p), (mul_comm m p); now apply mul_le_mono_nonneg_l.",
            "VernacExtend",
            "47692042b95ba6b4c0c2d27c9ec8775810760f6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_le_mono_nonpos_r : forall n m p, p <= 0 -> n <= m -> m * p <= n * p.",
            "VernacStartTheoremProof",
            "c1122d6e8d342cc787197872b2c27f7bc3fc3089"
        ],
        [
            "intros n m p H1 H2; rewrite (mul_comm n p), (mul_comm m p); now apply mul_le_mono_nonpos_l.",
            "VernacExtend",
            "a26792f8886e3cb7166eb035fcd101d51e6f1c48"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_cancel_l : forall n m p, p ~= 0 -> (p * n == p * m <-> n == m).",
            "VernacStartTheoremProof",
            "1f8ece92d35a8de90aeee37475312115fc3982d9"
        ],
        [
            "intros n m p Hp; split; intro H; [|now f_equiv].",
            "VernacExtend",
            "9438e8749b3dadf052736b62071ababdfc35a0a6"
        ],
        [
            "apply lt_gt_cases in Hp; destruct Hp as [Hp|Hp]; destruct (lt_trichotomy n m) as [LT|[EQ|GT]]; trivial.",
            "VernacExtend",
            "fc6e0e087bc96f492f3e7347abf8f4b54eddabf7"
        ],
        [
            "apply (mul_lt_mono_neg_l p) in LT; order.",
            "VernacExtend",
            "9581bf998db5f7e3dfe5495a5a3e73b1d41d6c46"
        ],
        [
            "apply (mul_lt_mono_neg_l p) in GT; order.",
            "VernacExtend",
            "ea9dd04791e5413338f358a8bf04f3693aaa878a"
        ],
        [
            "apply (mul_lt_mono_pos_l p) in LT; order.",
            "VernacExtend",
            "1432a7af60aa4cdaa0ed75823576080082d2c7f4"
        ],
        [
            "apply (mul_lt_mono_pos_l p) in GT; order.",
            "VernacExtend",
            "fac53eb57b617260137a2faef69d95cfd69308f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_cancel_r : forall n m p, p ~= 0 -> (n * p == m * p <-> n == m).",
            "VernacStartTheoremProof",
            "42c5b69c7e91a2df9309afb56a2a8af7066ba95a"
        ],
        [
            "intros n m p.",
            "VernacExtend",
            "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
        ],
        [
            "rewrite (mul_comm n p), (mul_comm m p); apply mul_cancel_l.",
            "VernacExtend",
            "b14718392dff9ded0d76769d706565f1704fb025"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_id_l : forall n m, m ~= 0 -> (n * m == m <-> n == 1).",
            "VernacStartTheoremProof",
            "288bc4feed259bcb1e0fb865d9fe09b3923d5b12"
        ],
        [
            "intros n m H.",
            "VernacExtend",
            "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
        ],
        [
            "stepl (n * m == 1 * m) by now rewrite mul_1_l.",
            "VernacExtend",
            "aed052d7de205fad487ae319a5fece8f1e7246f0"
        ],
        [
            "now apply mul_cancel_r.",
            "VernacExtend",
            "5eb2432dccae0729d49ae14121a5ef0c884b9372"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_id_r : forall n m, n ~= 0 -> (n * m == n <-> m == 1).",
            "VernacStartTheoremProof",
            "7926fbf2295f0811c8a10f46e1c7152b218cbd3f"
        ],
        [
            "intros n m; rewrite mul_comm; apply mul_id_l.",
            "VernacExtend",
            "f48acd47bb009f2d795d6f6f60a73e645b493446"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_le_mono_pos_l : forall n m p, 0 < p -> (n <= m <-> p * n <= p * m).",
            "VernacStartTheoremProof",
            "d89f0550a2ce5714925a33d7ecbc6542d94e5224"
        ],
        [
            "intros n m p H; do 2 rewrite lt_eq_cases.",
            "VernacExtend",
            "3623b6242bcf2166c9efc3c5feca3fe0850fcb13"
        ],
        [
            "rewrite (mul_lt_mono_pos_l p n m) by assumption.",
            "VernacExtend",
            "ff4c181482a72d8bbc9bc47fef6836f42cf8aa2d"
        ],
        [
            "now rewrite -> (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl).",
            "VernacExtend",
            "d8aa0334760aad15793002c666a8692c10cc50e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_le_mono_pos_r : forall n m p, 0 < p -> (n <= m <-> n * p <= m * p).",
            "VernacStartTheoremProof",
            "fc80f35e10216aa07214463a51033db7f2fe3bad"
        ],
        [
            "intros n m p.",
            "VernacExtend",
            "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
        ],
        [
            "rewrite (mul_comm n p), (mul_comm m p); apply mul_le_mono_pos_l.",
            "VernacExtend",
            "642304d09899d0a39f9b843eba5a5e7603348999"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_le_mono_neg_l : forall n m p, p < 0 -> (n <= m <-> p * m <= p * n).",
            "VernacStartTheoremProof",
            "56ae9cdfa01e2259322e8a3847b81e3a53a53043"
        ],
        [
            "intros n m p H; do 2 rewrite lt_eq_cases.",
            "VernacExtend",
            "3623b6242bcf2166c9efc3c5feca3fe0850fcb13"
        ],
        [
            "rewrite (mul_lt_mono_neg_l p n m); [| assumption].",
            "VernacExtend",
            "f4cc833120451f2408a8300f206db73e700901ae"
        ],
        [
            "rewrite -> (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl).",
            "VernacExtend",
            "85f760df2db491b9c3bb5f46cd5fa5ead08cb18c"
        ],
        [
            "now setoid_replace (n == m) with (m == n) by (split; now intro).",
            "VernacExtend",
            "e5ed095d45bb930fc788a787b3b0c9040fa31383"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_le_mono_neg_r : forall n m p, p < 0 -> (n <= m <-> m * p <= n * p).",
            "VernacStartTheoremProof",
            "34477a5e96b7bab31830ce00e370a147f6615fa3"
        ],
        [
            "intros n m p.",
            "VernacExtend",
            "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
        ],
        [
            "rewrite (mul_comm n p), (mul_comm m p); apply mul_le_mono_neg_l.",
            "VernacExtend",
            "441083683dc8fb23ac761e3b3228410d214514f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_lt_mono_nonneg : forall n m p q, 0 <= n -> n < m -> 0 <= p -> p < q -> n * p < m * q.",
            "VernacStartTheoremProof",
            "a98227243dfed8c97af95ffa416ec938dfe1ca9e"
        ],
        [
            "intros n m p q H1 H2 H3 H4.",
            "VernacExtend",
            "e32fda7dab5c28d5f24245f1d477abfaf02ba582"
        ],
        [
            "apply le_lt_trans with (m * p).",
            "VernacExtend",
            "2986cc83df48a266335621572514c494ac590f2a"
        ],
        [
            "apply mul_le_mono_nonneg_r; [assumption | now apply lt_le_incl].",
            "VernacExtend",
            "509fd749311787492d8fe11c7a20d41cbc858474"
        ],
        [
            "apply -> mul_lt_mono_pos_l; [assumption | now apply le_lt_trans with n].",
            "VernacExtend",
            "d93cb9e072800969341e9f3ef322607b6722960f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_le_mono_nonneg : forall n m p q, 0 <= n -> n <= m -> 0 <= p -> p <= q -> n * p <= m * q.",
            "VernacStartTheoremProof",
            "0c1d838f1b80bfd1433705531cc00f1b2f1fd6a7"
        ],
        [
            "intros n m p q H1 H2 H3 H4.",
            "VernacExtend",
            "e32fda7dab5c28d5f24245f1d477abfaf02ba582"
        ],
        [
            "le_elim H2; le_elim H4.",
            "VernacExtend",
            "3962d91b0d3f2c0033ea7b8dd46403b9386a8f28"
        ],
        [
            "apply lt_le_incl; now apply mul_lt_mono_nonneg.",
            "VernacExtend",
            "664160900b46a38d546aef6d52b4b31034af0cfa"
        ],
        [
            "rewrite <- H4; apply mul_le_mono_nonneg_r; [assumption | now apply lt_le_incl].",
            "VernacExtend",
            "12dc2811ab8dbf7a07de29bd047f6555d0d5afa8"
        ],
        [
            "rewrite <- H2; apply mul_le_mono_nonneg_l; [assumption | now apply lt_le_incl].",
            "VernacExtend",
            "c3278d337ce164b0fcb9182029fd17be85e874c5"
        ],
        [
            "rewrite H2; rewrite H4; now apply eq_le_incl.",
            "VernacExtend",
            "6c4fffbde1888c82b9dc324f6689858f17f91193"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_pos_pos : forall n m, 0 < n -> 0 < m -> 0 < n * m.",
            "VernacStartTheoremProof",
            "4ccc9871c3d562ca20dd6ae807747f4a4428a417"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "rewrite <- (mul_0_l m).",
            "VernacExtend",
            "1ba6115d46fa2085d0174cf35f11c00145dd94c7"
        ],
        [
            "now apply mul_lt_mono_pos_r.",
            "VernacExtend",
            "3b51d5f4ef7ffbd741174572b415813b9a4bc43a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_neg_neg : forall n m, n < 0 -> m < 0 -> 0 < n * m.",
            "VernacStartTheoremProof",
            "994eaab44df2128c041c809bcacffc943413443a"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "rewrite <- (mul_0_l m).",
            "VernacExtend",
            "1ba6115d46fa2085d0174cf35f11c00145dd94c7"
        ],
        [
            "now apply mul_lt_mono_neg_r.",
            "VernacExtend",
            "4930be184cc1204e86f43681d36dd05e2a6778bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_pos_neg : forall n m, 0 < n -> m < 0 -> n * m < 0.",
            "VernacStartTheoremProof",
            "30fe5057b486ec7196be4cb4795f23b858ea1de6"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "rewrite <- (mul_0_l m).",
            "VernacExtend",
            "1ba6115d46fa2085d0174cf35f11c00145dd94c7"
        ],
        [
            "now apply mul_lt_mono_neg_r.",
            "VernacExtend",
            "4930be184cc1204e86f43681d36dd05e2a6778bf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_neg_pos : forall n m, n < 0 -> 0 < m -> n * m < 0.",
            "VernacStartTheoremProof",
            "36a0811118df41ce73c51923efa2602e6a1d2f0b"
        ],
        [
            "intros; rewrite mul_comm; now apply mul_pos_neg.",
            "VernacExtend",
            "492e0c9a59a7d57489c1c4350c5dbfd8e0020aa9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_nonneg_nonneg : forall n m, 0 <= n -> 0 <= m -> 0 <= n*m.",
            "VernacStartTheoremProof",
            "990d818b8479ce4f320bef6ab5f2ac58a0318492"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (mul_0_l m).",
            "VernacExtend",
            "1ba6115d46fa2085d0174cf35f11c00145dd94c7"
        ],
        [
            "apply mul_le_mono_nonneg; order.",
            "VernacExtend",
            "b390c0986c4a35fe21592cc8d1f43294a2028ce6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_pos_cancel_l : forall n m, 0 < n -> (0 < n*m <-> 0 < m).",
            "VernacStartTheoremProof",
            "5ac0037f933b4d9463fdedfa409f11bd98b11366"
        ],
        [
            "intros n m Hn.",
            "VernacExtend",
            "4ea7964435753d0708d2436cc340541c65cb37f7"
        ],
        [
            "rewrite <- (mul_0_r n) at 1.",
            "VernacExtend",
            "ec5f9aa7f39fad7d991c3f2066c29e0deb537edd"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "now apply mul_lt_mono_pos_l.",
            "VernacExtend",
            "b1d7f127fd9fd0ec4a7719c3926d91b9735b1507"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_pos_cancel_r : forall n m, 0 < m -> (0 < n*m <-> 0 < n).",
            "VernacStartTheoremProof",
            "ca37603aadbe925c77e338ee8e788b1bed56ac95"
        ],
        [
            "intros n m Hn.",
            "VernacExtend",
            "4ea7964435753d0708d2436cc340541c65cb37f7"
        ],
        [
            "rewrite <- (mul_0_l m) at 1.",
            "VernacExtend",
            "f1b991a0efea452292db7b3e18b101138af27ded"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "now apply mul_lt_mono_pos_r.",
            "VernacExtend",
            "3b51d5f4ef7ffbd741174572b415813b9a4bc43a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_nonneg_cancel_l : forall n m, 0 < n -> (0 <= n*m <-> 0 <= m).",
            "VernacStartTheoremProof",
            "33b6f2abe017575a25999c85cb3f73cecd24e027"
        ],
        [
            "intros n m Hn.",
            "VernacExtend",
            "4ea7964435753d0708d2436cc340541c65cb37f7"
        ],
        [
            "rewrite <- (mul_0_r n) at 1.",
            "VernacExtend",
            "ec5f9aa7f39fad7d991c3f2066c29e0deb537edd"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "now apply mul_le_mono_pos_l.",
            "VernacExtend",
            "8536cd7c05a03cc730ce54b17d1888c2e03e2cf0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_nonneg_cancel_r : forall n m, 0 < m -> (0 <= n*m <-> 0 <= n).",
            "VernacStartTheoremProof",
            "516e6195f70cf9bb80fcdd471a6b202a89b10c2a"
        ],
        [
            "intros n m Hn.",
            "VernacExtend",
            "4ea7964435753d0708d2436cc340541c65cb37f7"
        ],
        [
            "rewrite <- (mul_0_l m) at 1.",
            "VernacExtend",
            "f1b991a0efea452292db7b3e18b101138af27ded"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "now apply mul_le_mono_pos_r.",
            "VernacExtend",
            "3b477068a21d43580ee67ef5a0842ec44d53198d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem lt_1_mul_pos : forall n m, 1 < n -> 0 < m -> 1 < n * m.",
            "VernacStartTheoremProof",
            "58fbd6baa4164fb1b52fa41916f4a289d0229ecb"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "apply (mul_lt_mono_pos_r m) in H1.",
            "VernacExtend",
            "85f693fc9f5c6fc06369a53f63f4bdac0f494668"
        ],
        [
            "rewrite mul_1_l in H1.",
            "VernacExtend",
            "18fd0b5968eedb704d4baae759096f30b02cd780"
        ],
        [
            "now apply lt_1_l with m.",
            "VernacExtend",
            "a73a386834ba7604d1f5cc8ea00017377d1a2c1c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_mul_0 : forall n m, n * m == 0 <-> n == 0 \\/ m == 0.",
            "VernacStartTheoremProof",
            "508b3fa5f8a296494294482fd75d4ff013fc6e23"
        ],
        [
            "intros n m; split.",
            "VernacExtend",
            "650b222bb08daad640203fcf665a2933a56324ad"
        ],
        [
            "intro H; destruct (lt_trichotomy n 0) as [H1 | [H1 | H1]]; destruct (lt_trichotomy m 0) as [H2 | [H2 | H2]]; try (now right); try (now left).",
            "VernacExtend",
            "1f23901902a0c3e3b0aed84f4b6fff36625e82ce"
        ],
        [
            "exfalso; now apply (lt_neq 0 (n * m)); [apply mul_neg_neg |].",
            "VernacExtend",
            "b65704762faff4aa287b63fced9f2966e9870687"
        ],
        [
            "exfalso; now apply (lt_neq (n * m) 0); [apply mul_neg_pos |].",
            "VernacExtend",
            "710eea952c0409a270bf3c98c6310844e0c593ef"
        ],
        [
            "exfalso; now apply (lt_neq (n * m) 0); [apply mul_pos_neg |].",
            "VernacExtend",
            "acb084b82c853cf48ababb53dea4b575f105d111"
        ],
        [
            "exfalso; now apply (lt_neq 0 (n * m)); [apply mul_pos_pos |].",
            "VernacExtend",
            "7d0f4b457d1dd1117b6fe8a47e986b0922502d10"
        ],
        [
            "intros [H | H].",
            "VernacExtend",
            "76bd49ae65fcff8dd1f96fe0caeb50b38245e5bf"
        ],
        [
            "now rewrite H, mul_0_l.",
            "VernacExtend",
            "075e1462bb81bf426142533c48ed649217400654"
        ],
        [
            "now rewrite H, mul_0_r.",
            "VernacExtend",
            "7ef840bdb02b618c4976e4895562fdf4b524f6fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem neq_mul_0 : forall n m, n ~= 0 /\\ m ~= 0 <-> n * m ~= 0.",
            "VernacStartTheoremProof",
            "4a36a48dff59e0a9aa9dfd9f00aea77eaeeadb6f"
        ],
        [
            "intros n m; split; intro H.",
            "VernacExtend",
            "8d54ed164f879c2585b6e24f85f6223d8e1d46c6"
        ],
        [
            "intro H1; apply eq_mul_0 in H1.",
            "VernacExtend",
            "4fb7bcc49ce6e57dbdded7c65ee754a4bd5e97d6"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "split; intro H1; rewrite H1 in H; (rewrite mul_0_l in H || rewrite mul_0_r in H); now apply H.",
            "VernacExtend",
            "b195a92a7245daa0a3043dc89dbd6e61239f8b2c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_square_0 : forall n, n * n == 0 <-> n == 0.",
            "VernacStartTheoremProof",
            "04b2354e25a170db58eb308a55514abb2006b233"
        ],
        [
            "intro n; rewrite eq_mul_0; tauto.",
            "VernacExtend",
            "d88a0da6fa58996c8fadd350b8fe6534ea7c805f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_mul_0_l : forall n m, n * m == 0 -> m ~= 0 -> n == 0.",
            "VernacStartTheoremProof",
            "2a1fa9f3343ac89f711760b6de7ce9e25d95d973"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "apply eq_mul_0 in H1.",
            "VernacExtend",
            "8ad6eb2fb0f5492800bf65a559d7d3d087b472d5"
        ],
        [
            "destruct H1 as [H1 | H1].",
            "VernacExtend",
            "3d64b5d5257c32cb97db1118ac8095f035e8c53f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "false_hyp H1 H2.",
            "VernacExtend",
            "f3b81a572cbae97505d474680343127cd1d5fa5a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eq_mul_0_r : forall n m, n * m == 0 -> n ~= 0 -> m == 0.",
            "VernacStartTheoremProof",
            "58c0677dcda5dd35c7326af758b938542c9bfb21"
        ],
        [
            "intros n m H1 H2; apply eq_mul_0 in H1.",
            "VernacExtend",
            "68b708b2dc56088503153e3b5957009eb71caf42"
        ],
        [
            "destruct H1 as [H1 | H1].",
            "VernacExtend",
            "3d64b5d5257c32cb97db1118ac8095f035e8c53f"
        ],
        [
            "false_hyp H1 H2.",
            "VernacExtend",
            "f3b81a572cbae97505d474680343127cd1d5fa5a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mul_eq_0 := eq_mul_0.",
            "VernacDefinition",
            "cdd4003228df5c40c957f0d212d870aa1f27fc5d"
        ],
        [
            "Definition mul_eq_0_l := eq_mul_0_l.",
            "VernacDefinition",
            "8b1ecbd800c1164def2d6a79f82cf18144e795ec"
        ],
        [
            "Definition mul_eq_0_r := eq_mul_0_r.",
            "VernacDefinition",
            "cba2710f81be2b54c28a9df042a20fe2b42f970d"
        ],
        [
            "Theorem lt_0_mul n m : 0 < n * m <-> (0 < n /\\ 0 < m) \\/ (m < 0 /\\ n < 0).",
            "VernacStartTheoremProof",
            "85e372bbfa1320041cd7b68c610365d88478d435"
        ],
        [
            "split; [intro H | intros [[H1 H2] | [H1 H2]]].",
            "VernacExtend",
            "6ca835d87933fdef1079cba76d080e169f3ab8e9"
        ],
        [
            "destruct (lt_trichotomy n 0) as [H1 | [H1 | H1]]; [| rewrite H1 in H; rewrite mul_0_l in H; false_hyp H lt_irrefl |]; (destruct (lt_trichotomy m 0) as [H2 | [H2 | H2]]; [| rewrite H2 in H; rewrite mul_0_r in H; false_hyp H lt_irrefl |]); try (left; now split); try (right; now split).",
            "VernacExtend",
            "dbad9b7099f041fd23fd484319fd4d751b2adc7f"
        ],
        [
            "assert (H3 : n * m < 0) by now apply mul_neg_pos.",
            "VernacExtend",
            "6c031dda9b47f62cc59ab661551aee9e0d870642"
        ],
        [
            "exfalso; now apply (lt_asymm (n * m) 0).",
            "VernacExtend",
            "bde39ae474dd3f7ba61c5cd3bdec86042b9199f1"
        ],
        [
            "assert (H3 : n * m < 0) by now apply mul_pos_neg.",
            "VernacExtend",
            "950e8836b780c831fb3cbcff728635322ae136de"
        ],
        [
            "exfalso; now apply (lt_asymm (n * m) 0).",
            "VernacExtend",
            "bde39ae474dd3f7ba61c5cd3bdec86042b9199f1"
        ],
        [
            "now apply mul_pos_pos.",
            "VernacExtend",
            "3554562c6b7488f7acd09268eb27b598b87ffdbc"
        ],
        [
            "now apply mul_neg_neg.",
            "VernacExtend",
            "f5e5a1d1c8e429a36f1c7950dffd8751e4ac30c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem square_lt_mono_nonneg : forall n m, 0 <= n -> n < m -> n * n < m * m.",
            "VernacStartTheoremProof",
            "24d6be8575d03ce44ec48a517dd58d788b694f21"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "now apply mul_lt_mono_nonneg.",
            "VernacExtend",
            "82ca167bdb02a72372d791194c4a5fff9613c18c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem square_le_mono_nonneg : forall n m, 0 <= n -> n <= m -> n * n <= m * m.",
            "VernacStartTheoremProof",
            "d03e2375baf09f38802647663835c1696db3847d"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "now apply mul_le_mono_nonneg.",
            "VernacExtend",
            "f5a2fd0ea01af8aa7bdbbcbef24431c1c73cb69c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem square_lt_simpl_nonneg : forall n m, 0 <= m -> n * n < m * m -> n < m.",
            "VernacStartTheoremProof",
            "bbe5cd57d4e127d7a2f85114cd7de6c761c0b182"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "destruct (lt_ge_cases n 0).",
            "VernacExtend",
            "39eb60342b8a614b0128f84ea6993f67b8563269"
        ],
        [
            "now apply lt_le_trans with 0.",
            "VernacExtend",
            "28fdeadf4b12042329ee092e37236a88ade0c204"
        ],
        [
            "destruct (lt_ge_cases n m) as [LT|LE]; trivial.",
            "VernacExtend",
            "1530610bed0fac4052c18dfa445d2eece7a00bdc"
        ],
        [
            "apply square_le_mono_nonneg in LE; order.",
            "VernacExtend",
            "d78f613bfd51f057c5ad6c0e9822de5349415ee4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem square_le_simpl_nonneg : forall n m, 0 <= m -> n * n <= m * m -> n <= m.",
            "VernacStartTheoremProof",
            "a0f3e3c47194274b6265bce6528761cdcfd1ad9d"
        ],
        [
            "intros n m H1 H2.",
            "VernacExtend",
            "333094d674d871ad7b2a2ed4d4f9b26814d72138"
        ],
        [
            "destruct (lt_ge_cases n 0).",
            "VernacExtend",
            "39eb60342b8a614b0128f84ea6993f67b8563269"
        ],
        [
            "apply lt_le_incl; now apply lt_le_trans with 0.",
            "VernacExtend",
            "63d8a2a2d0020092e5bc9433dc7ea237f31d5eaa"
        ],
        [
            "destruct (le_gt_cases n m) as [LE|LT]; trivial.",
            "VernacExtend",
            "99e946123d5256d78b86e343b2e68dbb4c60de12"
        ],
        [
            "apply square_lt_mono_nonneg in LT; order.",
            "VernacExtend",
            "5626ec40e9ae189c0e4a2775d592a3e93d498d5e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem mul_2_mono_l : forall n m, n < m -> 1 + 2 * n < 2 * m.",
            "VernacStartTheoremProof",
            "ab8bd2c0f32d364c663a1a5af8b14ca4e52ba664"
        ],
        [
            "intros n m.",
            "VernacExtend",
            "b32939a1d90184ef888d5e875ed5067404699c61"
        ],
        [
            "rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m two).",
            "VernacExtend",
            "d606494f41d28af897a3676de5fc800f96e9aa63"
        ],
        [
            "rewrite two_succ.",
            "VernacExtend",
            "e74dbd4aac92fad0a31fe602622e00623316b45a"
        ],
        [
            "nzsimpl.",
            "VernacExtend",
            "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
        ],
        [
            "now rewrite le_succ_l.",
            "VernacExtend",
            "e7640ee55d867db38adc3788bb86715739d321fe"
        ],
        [
            "order'.",
            "VernacExtend",
            "26a428c4e19636d4a0cb0933578ee52cd17419c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_le_mul : forall a b, 1<a -> 1<b -> a+b <= a*b.",
            "VernacStartTheoremProof",
            "ad701bd5153e1e737b6ca5f9a1fef831e8c9a95d"
        ],
        [
            "assert (AUX : forall a b, 0<a -> 0<b -> (S a)+(S b) <= (S a)*(S b)).",
            "VernacExtend",
            "f55622f8314e0818dbbc5517c0190197c34a9189"
        ],
        [
            "intros a b Ha Hb.",
            "VernacExtend",
            "66806e238a444cf46d8b4db167ceff52729a7bf9"
        ],
        [
            "nzsimpl.",
            "VernacExtend",
            "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
        ],
        [
            "rewrite <- succ_le_mono.",
            "VernacExtend",
            "604287379f5b9eaad7bd1545d8396dcf324af598"
        ],
        [
            "apply le_succ_l.",
            "VernacExtend",
            "0d9da945bcbd6148598e6f4ad7dd587a3c1cf95d"
        ],
        [
            "rewrite <- add_assoc, <- (add_0_l (a+b)), (add_comm b).",
            "VernacExtend",
            "630a3af7c21baac3f18552f1fc5d4ce2a18a86c3"
        ],
        [
            "apply add_lt_mono_r.",
            "VernacExtend",
            "23044fb6b332f3c89ff7aee402ebd81391f75fe5"
        ],
        [
            "now apply mul_pos_pos.",
            "VernacExtend",
            "3554562c6b7488f7acd09268eb27b598b87ffdbc"
        ],
        [
            "intros a b Ha Hb.",
            "VernacExtend",
            "66806e238a444cf46d8b4db167ceff52729a7bf9"
        ],
        [
            "assert (Ha' := lt_succ_pred 1 a Ha).",
            "VernacExtend",
            "f3104390ff24a337339eb039ca20294dc10f39e3"
        ],
        [
            "assert (Hb' := lt_succ_pred 1 b Hb).",
            "VernacExtend",
            "2e06fee6d99ab23f24b699510ceb6d552187c6c1"
        ],
        [
            "rewrite <- Ha', <- Hb'.",
            "VernacExtend",
            "9fd8a8e601e072b7fc16f17bd5146fd80da7e0d7"
        ],
        [
            "apply AUX; rewrite succ_lt_mono, <- one_succ; order.",
            "VernacExtend",
            "1ecff61ce136cd4d7d334868a22c69ddf7aba8d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma square_nonneg : forall a, 0 <= a * a.",
            "VernacStartTheoremProof",
            "686ac28ae9b8454e3aa4653c3f590ba0ac1cfae6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (mul_0_r a).",
            "VernacExtend",
            "303cdd5e34797b563e046de645c1cc89d15a3f7d"
        ],
        [
            "destruct (le_gt_cases a 0).",
            "VernacExtend",
            "6d060afeaec114d64b47e052e932153bc9c9af62"
        ],
        [
            "now apply mul_le_mono_nonpos_l.",
            "VernacExtend",
            "c4247e68e31abb8c5716a5755a5a091259a090e2"
        ],
        [
            "apply mul_le_mono_nonneg_l; order.",
            "VernacExtend",
            "fbc6ed72a56f08239d7f6249310ee75f58ee0009"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma crossmul_le_addsquare : forall a b, 0<=a -> 0<=b -> b*a+a*b <= a*a+b*b.",
            "VernacStartTheoremProof",
            "e47bacc5f20819bd7a12b9c51dd8e302027dbef7"
        ],
        [
            "assert (AUX : forall a b, 0<=a<=b -> b*a+a*b <= a*a+b*b).",
            "VernacExtend",
            "639412df9229a541aa4de05e74976fcd184eee27"
        ],
        [
            "intros a b (Ha,H).",
            "VernacExtend",
            "759335497d1fb62e0bfe40379bc9a8ce4581a63c"
        ],
        [
            "destruct (le_exists_sub _ _ H) as (d & EQ & Hd).",
            "VernacExtend",
            "8adbea04b6a0bc5a7c0e1930f510b726f3ed1eaa"
        ],
        [
            "rewrite EQ.",
            "VernacExtend",
            "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
        ],
        [
            "rewrite 2 mul_add_distr_r.",
            "VernacExtend",
            "d45a2fc68ef8a9cfb13caf016f6758c0997769b1"
        ],
        [
            "rewrite !add_assoc.",
            "VernacExtend",
            "8d08d7c6c8b8935df99691a18a48ba7a4c3e128d"
        ],
        [
            "apply add_le_mono_r.",
            "VernacExtend",
            "179a409957abd8c3952b00a85d26c8530e43a0b3"
        ],
        [
            "rewrite add_comm.",
            "VernacExtend",
            "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
        ],
        [
            "apply add_le_mono_l.",
            "VernacExtend",
            "64c279615122d28dd9f063fc771b140427353b42"
        ],
        [
            "apply mul_le_mono_nonneg_l; trivial.",
            "VernacExtend",
            "14efd9993bf1661e22dc41270c383e63303301f1"
        ],
        [
            "order.",
            "VernacExtend",
            "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
        ],
        [
            "intros a b Ha Hb.",
            "VernacExtend",
            "66806e238a444cf46d8b4db167ceff52729a7bf9"
        ],
        [
            "destruct (le_gt_cases a b).",
            "VernacExtend",
            "2215c3d280b8e2dfc363a935446bc832c7913191"
        ],
        [
            "apply AUX; split; order.",
            "VernacExtend",
            "98c7a72d47af4122bbe6c3d73e7e94a36d406420"
        ],
        [
            "rewrite (add_comm (b*a)), (add_comm (a*a)).",
            "VernacExtend",
            "6d80fd4806cccc22574104dbbb886eea0cf3ff70"
        ],
        [
            "apply AUX; split; order.",
            "VernacExtend",
            "98c7a72d47af4122bbe6c3d73e7e94a36d406420"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_square_le : forall a b, 0<=a -> 0<=b -> a*a + b*b <= (a+b)*(a+b).",
            "VernacStartTheoremProof",
            "87f5211f02a15152a7f09a3b92e81a888e37cdec"
        ],
        [
            "intros a b Ha Hb.",
            "VernacExtend",
            "66806e238a444cf46d8b4db167ceff52729a7bf9"
        ],
        [
            "rewrite mul_add_distr_r, !mul_add_distr_l.",
            "VernacExtend",
            "30ba1a53630e1bf6375a5f8c43be358564a902a8"
        ],
        [
            "rewrite add_assoc.",
            "VernacExtend",
            "ad3a5a815f5c731ca973b85c3a98fab1355860f5"
        ],
        [
            "apply add_le_mono_r.",
            "VernacExtend",
            "179a409957abd8c3952b00a85d26c8530e43a0b3"
        ],
        [
            "rewrite <- add_assoc.",
            "VernacExtend",
            "c34a88538a6a595366810d8d189307fbbf983edd"
        ],
        [
            "rewrite <- (add_0_r (a*a)) at 1.",
            "VernacExtend",
            "453f27aa7d2af6e57b923e81f11372d39fc39f2d"
        ],
        [
            "apply add_le_mono_l.",
            "VernacExtend",
            "64c279615122d28dd9f063fc771b140427353b42"
        ],
        [
            "apply add_nonneg_nonneg; now apply mul_nonneg_nonneg.",
            "VernacExtend",
            "3ec9977232691280b6975f200fd1d247008ce14d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma square_add_le : forall a b, 0<=a -> 0<=b -> (a+b)*(a+b) <= 2*(a*a + b*b).",
            "VernacStartTheoremProof",
            "982f62f81f9b8bf76e7576bcd2500c7faea9ac31"
        ],
        [
            "intros a b Ha Hb.",
            "VernacExtend",
            "66806e238a444cf46d8b4db167ceff52729a7bf9"
        ],
        [
            "rewrite !mul_add_distr_l, !mul_add_distr_r.",
            "VernacExtend",
            "0811112149440e39b5936b3369a4cabb6a726b31"
        ],
        [
            "nzsimpl'.",
            "VernacExtend",
            "8e574f0f62759aeb195e08bf64ba0a41330fb166"
        ],
        [
            "rewrite <- !add_assoc.",
            "VernacExtend",
            "6259de28ef267c589c2ffd15661d95b8cb4f8112"
        ],
        [
            "apply add_le_mono_l.",
            "VernacExtend",
            "64c279615122d28dd9f063fc771b140427353b42"
        ],
        [
            "rewrite !add_assoc.",
            "VernacExtend",
            "8d08d7c6c8b8935df99691a18a48ba7a4c3e128d"
        ],
        [
            "apply add_le_mono_r.",
            "VernacExtend",
            "179a409957abd8c3952b00a85d26c8530e43a0b3"
        ],
        [
            "apply crossmul_le_addsquare; order.",
            "VernacExtend",
            "93202836ffb3ef06a847773ca340a8512138eb6d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma quadmul_le_squareadd : forall a b, 0<=a -> 0<=b -> 2*2*a*b <= (a+b)*(a+b).",
            "VernacStartTheoremProof",
            "4c72dd8a49579a021ed5f15654e3f925ed2a7dfe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "nzsimpl'.",
            "VernacExtend",
            "8e574f0f62759aeb195e08bf64ba0a41330fb166"
        ],
        [
            "rewrite !mul_add_distr_l, !mul_add_distr_r.",
            "VernacExtend",
            "0811112149440e39b5936b3369a4cabb6a726b31"
        ],
        [
            "rewrite (add_comm _ (b*b)), add_assoc.",
            "VernacExtend",
            "0787e8eacd18ce9f1d3d2c9581dd26f7e8662d96"
        ],
        [
            "apply add_le_mono_r.",
            "VernacExtend",
            "179a409957abd8c3952b00a85d26c8530e43a0b3"
        ],
        [
            "rewrite (add_shuffle0 (a*a)), (mul_comm b a).",
            "VernacExtend",
            "217d2bd5521434ce8490e908c64c5b80ae2fa87a"
        ],
        [
            "apply add_le_mono_r.",
            "VernacExtend",
            "179a409957abd8c3952b00a85d26c8530e43a0b3"
        ],
        [
            "rewrite (mul_comm a b) at 1.",
            "VernacExtend",
            "848e20cce17e8a3df7d6a1aead12a9ce1e4941cb"
        ],
        [
            "now apply crossmul_le_addsquare.",
            "VernacExtend",
            "2bbda2478d4aa0929c213578ee47cffd357720ef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End NZMulOrderProp.",
            "VernacEndSegment",
            "3800d8c5cdca0d963d9fe2ee9503e67894f6e3e4"
        ]
    ],
    "proofs": [
        {
            "name": "mul_lt_pred",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros p q n m H.",
                        "VernacExtend",
                        "469c4385640e2e8e20cd667a61c6c08e3fe1b6db"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "nzsimpl.",
                        "VernacExtend",
                        "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- ! add_assoc, (add_comm n m).",
                        "VernacExtend",
                        "2e71cf8133c9ec4a8615373471bb7126b5ae472f"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- add_lt_mono_r.",
                        "VernacExtend",
                        "6cfb5ff9321c3a4d6d75f1a005d6395a9f561930"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_lt_mono_pos_l",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros p n m Hp.",
                        "VernacExtend",
                        "eb2029e594ffe941076eb9bfc4d6785f42aa8345"
                    ]
                },
                {
                    "command": [
                        "revert n m.",
                        "VernacExtend",
                        "f423d1eebab8f85f00cd4cbfae0dfc5074b8535f"
                    ]
                },
                {
                    "command": [
                        "apply lt_ind with (4:=Hp).",
                        "VernacExtend",
                        "d41027ec464dafe1c5604948d43198cf55ef572f"
                    ]
                },
                {
                    "command": [
                        "solve_proper.",
                        "VernacExtend",
                        "82c8a5c0bba0e15dadfebb3446ef2557300c23ea"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now nzsimpl.",
                        "VernacExtend",
                        "7a34e6b2056b7f8be25b677c8236ffacba18aa9d"
                    ]
                },
                {
                    "command": [
                        "clear p Hp.",
                        "VernacExtend",
                        "4d03503b670097e517e75fd5ffa5c1b905abacc2"
                    ]
                },
                {
                    "command": [
                        "intros p Hp IH n m.",
                        "VernacExtend",
                        "1af957124135f2db1d4a878cc16e5fe45a17f88d"
                    ]
                },
                {
                    "command": [
                        "nzsimpl.",
                        "VernacExtend",
                        "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
                    ]
                },
                {
                    "command": [
                        "assert (LR : forall n m, n < m -> p * n + n < p * m + m) by (intros n1 m1 H; apply add_lt_mono; trivial; now rewrite <- IH).",
                        "VernacExtend",
                        "b7ef3975b2876f1c3e41d9484fd2ad58503f3cdd"
                    ]
                },
                {
                    "command": [
                        "split; intros H.",
                        "VernacExtend",
                        "a22fcc98cae3c9e7feb477b9e8b0236d37ea8d65"
                    ]
                },
                {
                    "command": [
                        "now apply LR.",
                        "VernacExtend",
                        "390afb59ec7f3f310006ef52d1ec210a7c835462"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_trichotomy n m) as [LT|[EQ|GT]]; trivial.",
                        "VernacExtend",
                        "b417b71f899b20ab8c233b26051ece88b2c3b74e"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ in H.",
                        "VernacExtend",
                        "96ee997be8ec1621ab2560388d0684f029c94896"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "apply LR in GT.",
                        "VernacExtend",
                        "dd69148da04148749e930e390433295cdb7b3634"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_lt_mono_pos_r",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros p n m.",
                        "VernacExtend",
                        "5d451b324a623149b1d97ded6335e6c85773f67d"
                    ]
                },
                {
                    "command": [
                        "rewrite (mul_comm n p), (mul_comm m p).",
                        "VernacExtend",
                        "784f9722937f69f1ef711cc3ecae4901d1c98fe8"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_pos_l.",
                        "VernacExtend",
                        "b1d7f127fd9fd0ec4a7719c3926d91b9735b1507"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_lt_mono_neg_l",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "nzord_induct p.",
                        "VernacExtend",
                        "d58821f9c276923acabeac4b5eeecc3de840ffe6"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "intros p Hp _ n m Hp'.",
                        "VernacExtend",
                        "9d4d9f0d3d29fd7740093015c3c40f5033cddc84"
                    ]
                },
                {
                    "command": [
                        "apply lt_succ_l in Hp'.",
                        "VernacExtend",
                        "1d17116fa61e1607103c26c595d22865e92b33f3"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "intros p Hp IH n m _.",
                        "VernacExtend",
                        "fe9d05ee49b731793157a85f5513d39ae323ec8d"
                    ]
                },
                {
                    "command": [
                        "apply le_succ_l in Hp.",
                        "VernacExtend",
                        "cff8cc8dc10d9f5bda7d98a31cae77a471520227"
                    ]
                },
                {
                    "command": [
                        "le_elim Hp.",
                        "VernacExtend",
                        "17876eb1b5fdebb6aa546c2be2784086ee1d8893"
                    ]
                },
                {
                    "command": [
                        "assert (LR : forall n m, n < m -> p * m < p * n).",
                        "VernacExtend",
                        "03ab48b5492b408d920f7ed3c2d8cf7c4527cad4"
                    ]
                },
                {
                    "command": [
                        "intros n1 m1 H.",
                        "VernacExtend",
                        "117bf32d3d9ec1b9753f1066916b3fe283556677"
                    ]
                },
                {
                    "command": [
                        "apply (le_lt_add_lt n1 m1).",
                        "VernacExtend",
                        "da4854e226d79272bad9e0f2c225203b4577fd1d"
                    ]
                },
                {
                    "command": [
                        "now apply lt_le_incl.",
                        "VernacExtend",
                        "acdf72fc8000eed208128b3a4133f14a26e08d82"
                    ]
                },
                {
                    "command": [
                        "rewrite <- 2 mul_succ_l.",
                        "VernacExtend",
                        "d6f48b9ea6bc9b386ef41f3be860ad85471515ff"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- IH.",
                        "VernacExtend",
                        "ded01dc68b05af28fd78d29c798e1274e2174c88"
                    ]
                },
                {
                    "command": [
                        "split; intros H.",
                        "VernacExtend",
                        "a22fcc98cae3c9e7feb477b9e8b0236d37ea8d65"
                    ]
                },
                {
                    "command": [
                        "now apply LR.",
                        "VernacExtend",
                        "390afb59ec7f3f310006ef52d1ec210a7c835462"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_trichotomy n m) as [LT|[EQ|GT]]; trivial.",
                        "VernacExtend",
                        "b417b71f899b20ab8c233b26051ece88b2c3b74e"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ in H.",
                        "VernacExtend",
                        "96ee997be8ec1621ab2560388d0684f029c94896"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "apply LR in GT.",
                        "VernacExtend",
                        "dd69148da04148749e930e390433295cdb7b3634"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "rewrite (mul_lt_pred p (S p)), Hp; now nzsimpl.",
                        "VernacExtend",
                        "0875a8432ef62c7d731815b28778faab9fadaa26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_lt_mono_neg_r",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros p n m.",
                        "VernacExtend",
                        "5d451b324a623149b1d97ded6335e6c85773f67d"
                    ]
                },
                {
                    "command": [
                        "rewrite (mul_comm n p), (mul_comm m p).",
                        "VernacExtend",
                        "784f9722937f69f1ef711cc3ecae4901d1c98fe8"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_neg_l.",
                        "VernacExtend",
                        "09dd28fef4a33392334267a05360ad6878f1d598"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_le_mono_nonneg_l",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros n m p H1 H2.",
                        "VernacExtend",
                        "e8767157c47cd1baf1cd483dfb75e1138bf3e7ab"
                    ]
                },
                {
                    "command": [
                        "le_elim H1.",
                        "VernacExtend",
                        "617d0085f314b9c579efbee09aa6eb737102bd07"
                    ]
                },
                {
                    "command": [
                        "le_elim H2.",
                        "VernacExtend",
                        "c65e03f56830c0c6240cb5041f2a81a215d957ba"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_incl.",
                        "VernacExtend",
                        "97b4d61e67062ad4dfa00a84f019e97394a93110"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_pos_l.",
                        "VernacExtend",
                        "b1d7f127fd9fd0ec4a7719c3926d91b9735b1507"
                    ]
                },
                {
                    "command": [
                        "apply eq_le_incl; now rewrite H2.",
                        "VernacExtend",
                        "ecb81d86b4cb529bd2e00c3a7ec600749531ddd9"
                    ]
                },
                {
                    "command": [
                        "apply eq_le_incl; rewrite <- H1; now do 2 rewrite mul_0_l.",
                        "VernacExtend",
                        "11b4d1936a55711280625b6324414f11ad0a4681"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_le_mono_nonpos_l",
            "line_nb": 73,
            "steps": [
                {
                    "command": [
                        "intros n m p H1 H2.",
                        "VernacExtend",
                        "e8767157c47cd1baf1cd483dfb75e1138bf3e7ab"
                    ]
                },
                {
                    "command": [
                        "le_elim H1.",
                        "VernacExtend",
                        "617d0085f314b9c579efbee09aa6eb737102bd07"
                    ]
                },
                {
                    "command": [
                        "le_elim H2.",
                        "VernacExtend",
                        "c65e03f56830c0c6240cb5041f2a81a215d957ba"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_incl.",
                        "VernacExtend",
                        "97b4d61e67062ad4dfa00a84f019e97394a93110"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_neg_l.",
                        "VernacExtend",
                        "09dd28fef4a33392334267a05360ad6878f1d598"
                    ]
                },
                {
                    "command": [
                        "apply eq_le_incl; now rewrite H2.",
                        "VernacExtend",
                        "ecb81d86b4cb529bd2e00c3a7ec600749531ddd9"
                    ]
                },
                {
                    "command": [
                        "apply eq_le_incl; rewrite H1; now do 2 rewrite mul_0_l.",
                        "VernacExtend",
                        "8a2a83601fbaeef3c435995d2f7ae6e3b76df945"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_le_mono_nonneg_r",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "intros n m p H1 H2; rewrite (mul_comm n p), (mul_comm m p); now apply mul_le_mono_nonneg_l.",
                        "VernacExtend",
                        "47692042b95ba6b4c0c2d27c9ec8775810760f6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_le_mono_nonpos_r",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros n m p H1 H2; rewrite (mul_comm n p), (mul_comm m p); now apply mul_le_mono_nonpos_l.",
                        "VernacExtend",
                        "a26792f8886e3cb7166eb035fcd101d51e6f1c48"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_cancel_l",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "intros n m p Hp; split; intro H; [|now f_equiv].",
                        "VernacExtend",
                        "9438e8749b3dadf052736b62071ababdfc35a0a6"
                    ]
                },
                {
                    "command": [
                        "apply lt_gt_cases in Hp; destruct Hp as [Hp|Hp]; destruct (lt_trichotomy n m) as [LT|[EQ|GT]]; trivial.",
                        "VernacExtend",
                        "fc6e0e087bc96f492f3e7347abf8f4b54eddabf7"
                    ]
                },
                {
                    "command": [
                        "apply (mul_lt_mono_neg_l p) in LT; order.",
                        "VernacExtend",
                        "9581bf998db5f7e3dfe5495a5a3e73b1d41d6c46"
                    ]
                },
                {
                    "command": [
                        "apply (mul_lt_mono_neg_l p) in GT; order.",
                        "VernacExtend",
                        "ea9dd04791e5413338f358a8bf04f3693aaa878a"
                    ]
                },
                {
                    "command": [
                        "apply (mul_lt_mono_pos_l p) in LT; order.",
                        "VernacExtend",
                        "1432a7af60aa4cdaa0ed75823576080082d2c7f4"
                    ]
                },
                {
                    "command": [
                        "apply (mul_lt_mono_pos_l p) in GT; order.",
                        "VernacExtend",
                        "fac53eb57b617260137a2faef69d95cfd69308f8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_cancel_r",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "intros n m p.",
                        "VernacExtend",
                        "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
                    ]
                },
                {
                    "command": [
                        "rewrite (mul_comm n p), (mul_comm m p); apply mul_cancel_l.",
                        "VernacExtend",
                        "b14718392dff9ded0d76769d706565f1704fb025"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_id_l",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "intros n m H.",
                        "VernacExtend",
                        "8f706f0ba9eb308f7dcaa2ee371cdcedf959ded8"
                    ]
                },
                {
                    "command": [
                        "stepl (n * m == 1 * m) by now rewrite mul_1_l.",
                        "VernacExtend",
                        "aed052d7de205fad487ae319a5fece8f1e7246f0"
                    ]
                },
                {
                    "command": [
                        "now apply mul_cancel_r.",
                        "VernacExtend",
                        "5eb2432dccae0729d49ae14121a5ef0c884b9372"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_id_r",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "intros n m; rewrite mul_comm; apply mul_id_l.",
                        "VernacExtend",
                        "f48acd47bb009f2d795d6f6f60a73e645b493446"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_le_mono_pos_l",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "intros n m p H; do 2 rewrite lt_eq_cases.",
                        "VernacExtend",
                        "3623b6242bcf2166c9efc3c5feca3fe0850fcb13"
                    ]
                },
                {
                    "command": [
                        "rewrite (mul_lt_mono_pos_l p n m) by assumption.",
                        "VernacExtend",
                        "ff4c181482a72d8bbc9bc47fef6836f42cf8aa2d"
                    ]
                },
                {
                    "command": [
                        "now rewrite -> (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl).",
                        "VernacExtend",
                        "d8aa0334760aad15793002c666a8692c10cc50e1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_le_mono_pos_r",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "intros n m p.",
                        "VernacExtend",
                        "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
                    ]
                },
                {
                    "command": [
                        "rewrite (mul_comm n p), (mul_comm m p); apply mul_le_mono_pos_l.",
                        "VernacExtend",
                        "642304d09899d0a39f9b843eba5a5e7603348999"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_le_mono_neg_l",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros n m p H; do 2 rewrite lt_eq_cases.",
                        "VernacExtend",
                        "3623b6242bcf2166c9efc3c5feca3fe0850fcb13"
                    ]
                },
                {
                    "command": [
                        "rewrite (mul_lt_mono_neg_l p n m); [| assumption].",
                        "VernacExtend",
                        "f4cc833120451f2408a8300f206db73e700901ae"
                    ]
                },
                {
                    "command": [
                        "rewrite -> (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl).",
                        "VernacExtend",
                        "85f760df2db491b9c3bb5f46cd5fa5ead08cb18c"
                    ]
                },
                {
                    "command": [
                        "now setoid_replace (n == m) with (m == n) by (split; now intro).",
                        "VernacExtend",
                        "e5ed095d45bb930fc788a787b3b0c9040fa31383"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_le_mono_neg_r",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "intros n m p.",
                        "VernacExtend",
                        "49a9b11b22c0b1f6add93d9ab8e3837271958f5b"
                    ]
                },
                {
                    "command": [
                        "rewrite (mul_comm n p), (mul_comm m p); apply mul_le_mono_neg_l.",
                        "VernacExtend",
                        "441083683dc8fb23ac761e3b3228410d214514f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_lt_mono_nonneg",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "intros n m p q H1 H2 H3 H4.",
                        "VernacExtend",
                        "e32fda7dab5c28d5f24245f1d477abfaf02ba582"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (m * p).",
                        "VernacExtend",
                        "2986cc83df48a266335621572514c494ac590f2a"
                    ]
                },
                {
                    "command": [
                        "apply mul_le_mono_nonneg_r; [assumption | now apply lt_le_incl].",
                        "VernacExtend",
                        "509fd749311787492d8fe11c7a20d41cbc858474"
                    ]
                },
                {
                    "command": [
                        "apply -> mul_lt_mono_pos_l; [assumption | now apply le_lt_trans with n].",
                        "VernacExtend",
                        "d93cb9e072800969341e9f3ef322607b6722960f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_le_mono_nonneg",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "intros n m p q H1 H2 H3 H4.",
                        "VernacExtend",
                        "e32fda7dab5c28d5f24245f1d477abfaf02ba582"
                    ]
                },
                {
                    "command": [
                        "le_elim H2; le_elim H4.",
                        "VernacExtend",
                        "3962d91b0d3f2c0033ea7b8dd46403b9386a8f28"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_incl; now apply mul_lt_mono_nonneg.",
                        "VernacExtend",
                        "664160900b46a38d546aef6d52b4b31034af0cfa"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H4; apply mul_le_mono_nonneg_r; [assumption | now apply lt_le_incl].",
                        "VernacExtend",
                        "12dc2811ab8dbf7a07de29bd047f6555d0d5afa8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2; apply mul_le_mono_nonneg_l; [assumption | now apply lt_le_incl].",
                        "VernacExtend",
                        "c3278d337ce164b0fcb9182029fd17be85e874c5"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; rewrite H4; now apply eq_le_incl.",
                        "VernacExtend",
                        "6c4fffbde1888c82b9dc324f6689858f17f91193"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_pos_pos",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_0_l m).",
                        "VernacExtend",
                        "1ba6115d46fa2085d0174cf35f11c00145dd94c7"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_pos_r.",
                        "VernacExtend",
                        "3b51d5f4ef7ffbd741174572b415813b9a4bc43a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_neg_neg",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_0_l m).",
                        "VernacExtend",
                        "1ba6115d46fa2085d0174cf35f11c00145dd94c7"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_neg_r.",
                        "VernacExtend",
                        "4930be184cc1204e86f43681d36dd05e2a6778bf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_pos_neg",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_0_l m).",
                        "VernacExtend",
                        "1ba6115d46fa2085d0174cf35f11c00145dd94c7"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_neg_r.",
                        "VernacExtend",
                        "4930be184cc1204e86f43681d36dd05e2a6778bf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_neg_pos",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "intros; rewrite mul_comm; now apply mul_pos_neg.",
                        "VernacExtend",
                        "492e0c9a59a7d57489c1c4350c5dbfd8e0020aa9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_nonneg_nonneg",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_0_l m).",
                        "VernacExtend",
                        "1ba6115d46fa2085d0174cf35f11c00145dd94c7"
                    ]
                },
                {
                    "command": [
                        "apply mul_le_mono_nonneg; order.",
                        "VernacExtend",
                        "b390c0986c4a35fe21592cc8d1f43294a2028ce6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_pos_cancel_l",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "intros n m Hn.",
                        "VernacExtend",
                        "4ea7964435753d0708d2436cc340541c65cb37f7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_0_r n) at 1.",
                        "VernacExtend",
                        "ec5f9aa7f39fad7d991c3f2066c29e0deb537edd"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_pos_l.",
                        "VernacExtend",
                        "b1d7f127fd9fd0ec4a7719c3926d91b9735b1507"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_pos_cancel_r",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "intros n m Hn.",
                        "VernacExtend",
                        "4ea7964435753d0708d2436cc340541c65cb37f7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_0_l m) at 1.",
                        "VernacExtend",
                        "f1b991a0efea452292db7b3e18b101138af27ded"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_pos_r.",
                        "VernacExtend",
                        "3b51d5f4ef7ffbd741174572b415813b9a4bc43a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_nonneg_cancel_l",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "intros n m Hn.",
                        "VernacExtend",
                        "4ea7964435753d0708d2436cc340541c65cb37f7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_0_r n) at 1.",
                        "VernacExtend",
                        "ec5f9aa7f39fad7d991c3f2066c29e0deb537edd"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "now apply mul_le_mono_pos_l.",
                        "VernacExtend",
                        "8536cd7c05a03cc730ce54b17d1888c2e03e2cf0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_nonneg_cancel_r",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "intros n m Hn.",
                        "VernacExtend",
                        "4ea7964435753d0708d2436cc340541c65cb37f7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_0_l m) at 1.",
                        "VernacExtend",
                        "f1b991a0efea452292db7b3e18b101138af27ded"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "now apply mul_le_mono_pos_r.",
                        "VernacExtend",
                        "3b477068a21d43580ee67ef5a0842ec44d53198d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_1_mul_pos",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "apply (mul_lt_mono_pos_r m) in H1.",
                        "VernacExtend",
                        "85f693fc9f5c6fc06369a53f63f4bdac0f494668"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_1_l in H1.",
                        "VernacExtend",
                        "18fd0b5968eedb704d4baae759096f30b02cd780"
                    ]
                },
                {
                    "command": [
                        "now apply lt_1_l with m.",
                        "VernacExtend",
                        "a73a386834ba7604d1f5cc8ea00017377d1a2c1c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_mul_0",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "intros n m; split.",
                        "VernacExtend",
                        "650b222bb08daad640203fcf665a2933a56324ad"
                    ]
                },
                {
                    "command": [
                        "intro H; destruct (lt_trichotomy n 0) as [H1 | [H1 | H1]]; destruct (lt_trichotomy m 0) as [H2 | [H2 | H2]]; try (now right); try (now left).",
                        "VernacExtend",
                        "1f23901902a0c3e3b0aed84f4b6fff36625e82ce"
                    ]
                },
                {
                    "command": [
                        "exfalso; now apply (lt_neq 0 (n * m)); [apply mul_neg_neg |].",
                        "VernacExtend",
                        "b65704762faff4aa287b63fced9f2966e9870687"
                    ]
                },
                {
                    "command": [
                        "exfalso; now apply (lt_neq (n * m) 0); [apply mul_neg_pos |].",
                        "VernacExtend",
                        "710eea952c0409a270bf3c98c6310844e0c593ef"
                    ]
                },
                {
                    "command": [
                        "exfalso; now apply (lt_neq (n * m) 0); [apply mul_pos_neg |].",
                        "VernacExtend",
                        "acb084b82c853cf48ababb53dea4b575f105d111"
                    ]
                },
                {
                    "command": [
                        "exfalso; now apply (lt_neq 0 (n * m)); [apply mul_pos_pos |].",
                        "VernacExtend",
                        "7d0f4b457d1dd1117b6fe8a47e986b0922502d10"
                    ]
                },
                {
                    "command": [
                        "intros [H | H].",
                        "VernacExtend",
                        "76bd49ae65fcff8dd1f96fe0caeb50b38245e5bf"
                    ]
                },
                {
                    "command": [
                        "now rewrite H, mul_0_l.",
                        "VernacExtend",
                        "075e1462bb81bf426142533c48ed649217400654"
                    ]
                },
                {
                    "command": [
                        "now rewrite H, mul_0_r.",
                        "VernacExtend",
                        "7ef840bdb02b618c4976e4895562fdf4b524f6fb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "neq_mul_0",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "intros n m; split; intro H.",
                        "VernacExtend",
                        "8d54ed164f879c2585b6e24f85f6223d8e1d46c6"
                    ]
                },
                {
                    "command": [
                        "intro H1; apply eq_mul_0 in H1.",
                        "VernacExtend",
                        "4fb7bcc49ce6e57dbdded7c65ee754a4bd5e97d6"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "split; intro H1; rewrite H1 in H; (rewrite mul_0_l in H || rewrite mul_0_r in H); now apply H.",
                        "VernacExtend",
                        "b195a92a7245daa0a3043dc89dbd6e61239f8b2c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_square_0",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "intro n; rewrite eq_mul_0; tauto.",
                        "VernacExtend",
                        "d88a0da6fa58996c8fadd350b8fe6534ea7c805f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_mul_0_l",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "apply eq_mul_0 in H1.",
                        "VernacExtend",
                        "8ad6eb2fb0f5492800bf65a559d7d3d087b472d5"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [H1 | H1].",
                        "VernacExtend",
                        "3d64b5d5257c32cb97db1118ac8095f035e8c53f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "false_hyp H1 H2.",
                        "VernacExtend",
                        "f3b81a572cbae97505d474680343127cd1d5fa5a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_mul_0_r",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2; apply eq_mul_0 in H1.",
                        "VernacExtend",
                        "68b708b2dc56088503153e3b5957009eb71caf42"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as [H1 | H1].",
                        "VernacExtend",
                        "3d64b5d5257c32cb97db1118ac8095f035e8c53f"
                    ]
                },
                {
                    "command": [
                        "false_hyp H1 H2.",
                        "VernacExtend",
                        "f3b81a572cbae97505d474680343127cd1d5fa5a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_0_mul",
            "line_nb": 231,
            "steps": [
                {
                    "command": [
                        "split; [intro H | intros [[H1 H2] | [H1 H2]]].",
                        "VernacExtend",
                        "6ca835d87933fdef1079cba76d080e169f3ab8e9"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_trichotomy n 0) as [H1 | [H1 | H1]]; [| rewrite H1 in H; rewrite mul_0_l in H; false_hyp H lt_irrefl |]; (destruct (lt_trichotomy m 0) as [H2 | [H2 | H2]]; [| rewrite H2 in H; rewrite mul_0_r in H; false_hyp H lt_irrefl |]); try (left; now split); try (right; now split).",
                        "VernacExtend",
                        "dbad9b7099f041fd23fd484319fd4d751b2adc7f"
                    ]
                },
                {
                    "command": [
                        "assert (H3 : n * m < 0) by now apply mul_neg_pos.",
                        "VernacExtend",
                        "6c031dda9b47f62cc59ab661551aee9e0d870642"
                    ]
                },
                {
                    "command": [
                        "exfalso; now apply (lt_asymm (n * m) 0).",
                        "VernacExtend",
                        "bde39ae474dd3f7ba61c5cd3bdec86042b9199f1"
                    ]
                },
                {
                    "command": [
                        "assert (H3 : n * m < 0) by now apply mul_pos_neg.",
                        "VernacExtend",
                        "950e8836b780c831fb3cbcff728635322ae136de"
                    ]
                },
                {
                    "command": [
                        "exfalso; now apply (lt_asymm (n * m) 0).",
                        "VernacExtend",
                        "bde39ae474dd3f7ba61c5cd3bdec86042b9199f1"
                    ]
                },
                {
                    "command": [
                        "now apply mul_pos_pos.",
                        "VernacExtend",
                        "3554562c6b7488f7acd09268eb27b598b87ffdbc"
                    ]
                },
                {
                    "command": [
                        "now apply mul_neg_neg.",
                        "VernacExtend",
                        "f5e5a1d1c8e429a36f1c7950dffd8751e4ac30c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_lt_mono_nonneg",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "now apply mul_lt_mono_nonneg.",
                        "VernacExtend",
                        "82ca167bdb02a72372d791194c4a5fff9613c18c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_le_mono_nonneg",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "now apply mul_le_mono_nonneg.",
                        "VernacExtend",
                        "f5a2fd0ea01af8aa7bdbbcbef24431c1c73cb69c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_lt_simpl_nonneg",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_ge_cases n 0).",
                        "VernacExtend",
                        "39eb60342b8a614b0128f84ea6993f67b8563269"
                    ]
                },
                {
                    "command": [
                        "now apply lt_le_trans with 0.",
                        "VernacExtend",
                        "28fdeadf4b12042329ee092e37236a88ade0c204"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_ge_cases n m) as [LT|LE]; trivial.",
                        "VernacExtend",
                        "1530610bed0fac4052c18dfa445d2eece7a00bdc"
                    ]
                },
                {
                    "command": [
                        "apply square_le_mono_nonneg in LE; order.",
                        "VernacExtend",
                        "d78f613bfd51f057c5ad6c0e9822de5349415ee4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_le_simpl_nonneg",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "intros n m H1 H2.",
                        "VernacExtend",
                        "333094d674d871ad7b2a2ed4d4f9b26814d72138"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_ge_cases n 0).",
                        "VernacExtend",
                        "39eb60342b8a614b0128f84ea6993f67b8563269"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_incl; now apply lt_le_trans with 0.",
                        "VernacExtend",
                        "63d8a2a2d0020092e5bc9433dc7ea237f31d5eaa"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_cases n m) as [LE|LT]; trivial.",
                        "VernacExtend",
                        "99e946123d5256d78b86e343b2e68dbb4c60de12"
                    ]
                },
                {
                    "command": [
                        "apply square_lt_mono_nonneg in LT; order.",
                        "VernacExtend",
                        "5626ec40e9ae189c0e4a2775d592a3e93d498d5e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_2_mono_l",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "intros n m.",
                        "VernacExtend",
                        "b32939a1d90184ef888d5e875ed5067404699c61"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m two).",
                        "VernacExtend",
                        "d606494f41d28af897a3676de5fc800f96e9aa63"
                    ]
                },
                {
                    "command": [
                        "rewrite two_succ.",
                        "VernacExtend",
                        "e74dbd4aac92fad0a31fe602622e00623316b45a"
                    ]
                },
                {
                    "command": [
                        "nzsimpl.",
                        "VernacExtend",
                        "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
                    ]
                },
                {
                    "command": [
                        "now rewrite le_succ_l.",
                        "VernacExtend",
                        "e7640ee55d867db38adc3788bb86715739d321fe"
                    ]
                },
                {
                    "command": [
                        "order'.",
                        "VernacExtend",
                        "26a428c4e19636d4a0cb0933578ee52cd17419c4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_le_mul",
            "line_nb": 271,
            "steps": [
                {
                    "command": [
                        "assert (AUX : forall a b, 0<a -> 0<b -> (S a)+(S b) <= (S a)*(S b)).",
                        "VernacExtend",
                        "f55622f8314e0818dbbc5517c0190197c34a9189"
                    ]
                },
                {
                    "command": [
                        "intros a b Ha Hb.",
                        "VernacExtend",
                        "66806e238a444cf46d8b4db167ceff52729a7bf9"
                    ]
                },
                {
                    "command": [
                        "nzsimpl.",
                        "VernacExtend",
                        "32a0da57fa9b6fef77a1ba15d7ad314a88420ca3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- succ_le_mono.",
                        "VernacExtend",
                        "604287379f5b9eaad7bd1545d8396dcf324af598"
                    ]
                },
                {
                    "command": [
                        "apply le_succ_l.",
                        "VernacExtend",
                        "0d9da945bcbd6148598e6f4ad7dd587a3c1cf95d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_assoc, <- (add_0_l (a+b)), (add_comm b).",
                        "VernacExtend",
                        "630a3af7c21baac3f18552f1fc5d4ce2a18a86c3"
                    ]
                },
                {
                    "command": [
                        "apply add_lt_mono_r.",
                        "VernacExtend",
                        "23044fb6b332f3c89ff7aee402ebd81391f75fe5"
                    ]
                },
                {
                    "command": [
                        "now apply mul_pos_pos.",
                        "VernacExtend",
                        "3554562c6b7488f7acd09268eb27b598b87ffdbc"
                    ]
                },
                {
                    "command": [
                        "intros a b Ha Hb.",
                        "VernacExtend",
                        "66806e238a444cf46d8b4db167ceff52729a7bf9"
                    ]
                },
                {
                    "command": [
                        "assert (Ha' := lt_succ_pred 1 a Ha).",
                        "VernacExtend",
                        "f3104390ff24a337339eb039ca20294dc10f39e3"
                    ]
                },
                {
                    "command": [
                        "assert (Hb' := lt_succ_pred 1 b Hb).",
                        "VernacExtend",
                        "2e06fee6d99ab23f24b699510ceb6d552187c6c1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ha', <- Hb'.",
                        "VernacExtend",
                        "9fd8a8e601e072b7fc16f17bd5146fd80da7e0d7"
                    ]
                },
                {
                    "command": [
                        "apply AUX; rewrite succ_lt_mono, <- one_succ; order.",
                        "VernacExtend",
                        "1ecff61ce136cd4d7d334868a22c69ddf7aba8d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_nonneg",
            "line_nb": 286,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mul_0_r a).",
                        "VernacExtend",
                        "303cdd5e34797b563e046de645c1cc89d15a3f7d"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_cases a 0).",
                        "VernacExtend",
                        "6d060afeaec114d64b47e052e932153bc9c9af62"
                    ]
                },
                {
                    "command": [
                        "now apply mul_le_mono_nonpos_l.",
                        "VernacExtend",
                        "c4247e68e31abb8c5716a5755a5a091259a090e2"
                    ]
                },
                {
                    "command": [
                        "apply mul_le_mono_nonneg_l; order.",
                        "VernacExtend",
                        "fbc6ed72a56f08239d7f6249310ee75f58ee0009"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "crossmul_le_addsquare",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "assert (AUX : forall a b, 0<=a<=b -> b*a+a*b <= a*a+b*b).",
                        "VernacExtend",
                        "639412df9229a541aa4de05e74976fcd184eee27"
                    ]
                },
                {
                    "command": [
                        "intros a b (Ha,H).",
                        "VernacExtend",
                        "759335497d1fb62e0bfe40379bc9a8ce4581a63c"
                    ]
                },
                {
                    "command": [
                        "destruct (le_exists_sub _ _ H) as (d & EQ & Hd).",
                        "VernacExtend",
                        "8adbea04b6a0bc5a7c0e1930f510b726f3ed1eaa"
                    ]
                },
                {
                    "command": [
                        "rewrite EQ.",
                        "VernacExtend",
                        "359c5e196f83a6afbd9ede635bddbf545fd1eb82"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 mul_add_distr_r.",
                        "VernacExtend",
                        "d45a2fc68ef8a9cfb13caf016f6758c0997769b1"
                    ]
                },
                {
                    "command": [
                        "rewrite !add_assoc.",
                        "VernacExtend",
                        "8d08d7c6c8b8935df99691a18a48ba7a4c3e128d"
                    ]
                },
                {
                    "command": [
                        "apply add_le_mono_r.",
                        "VernacExtend",
                        "179a409957abd8c3952b00a85d26c8530e43a0b3"
                    ]
                },
                {
                    "command": [
                        "rewrite add_comm.",
                        "VernacExtend",
                        "2e006d16c02dac4eb42050bd443b016b3aa95c2d"
                    ]
                },
                {
                    "command": [
                        "apply add_le_mono_l.",
                        "VernacExtend",
                        "64c279615122d28dd9f063fc771b140427353b42"
                    ]
                },
                {
                    "command": [
                        "apply mul_le_mono_nonneg_l; trivial.",
                        "VernacExtend",
                        "14efd9993bf1661e22dc41270c383e63303301f1"
                    ]
                },
                {
                    "command": [
                        "order.",
                        "VernacExtend",
                        "1befdab9038d1868ab2c465bac8af3e25c5ac3da"
                    ]
                },
                {
                    "command": [
                        "intros a b Ha Hb.",
                        "VernacExtend",
                        "66806e238a444cf46d8b4db167ceff52729a7bf9"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_cases a b).",
                        "VernacExtend",
                        "2215c3d280b8e2dfc363a935446bc832c7913191"
                    ]
                },
                {
                    "command": [
                        "apply AUX; split; order.",
                        "VernacExtend",
                        "98c7a72d47af4122bbe6c3d73e7e94a36d406420"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_comm (b*a)), (add_comm (a*a)).",
                        "VernacExtend",
                        "6d80fd4806cccc22574104dbbb886eea0cf3ff70"
                    ]
                },
                {
                    "command": [
                        "apply AUX; split; order.",
                        "VernacExtend",
                        "98c7a72d47af4122bbe6c3d73e7e94a36d406420"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_square_le",
            "line_nb": 311,
            "steps": [
                {
                    "command": [
                        "intros a b Ha Hb.",
                        "VernacExtend",
                        "66806e238a444cf46d8b4db167ceff52729a7bf9"
                    ]
                },
                {
                    "command": [
                        "rewrite mul_add_distr_r, !mul_add_distr_l.",
                        "VernacExtend",
                        "30ba1a53630e1bf6375a5f8c43be358564a902a8"
                    ]
                },
                {
                    "command": [
                        "rewrite add_assoc.",
                        "VernacExtend",
                        "ad3a5a815f5c731ca973b85c3a98fab1355860f5"
                    ]
                },
                {
                    "command": [
                        "apply add_le_mono_r.",
                        "VernacExtend",
                        "179a409957abd8c3952b00a85d26c8530e43a0b3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- add_assoc.",
                        "VernacExtend",
                        "c34a88538a6a595366810d8d189307fbbf983edd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (add_0_r (a*a)) at 1.",
                        "VernacExtend",
                        "453f27aa7d2af6e57b923e81f11372d39fc39f2d"
                    ]
                },
                {
                    "command": [
                        "apply add_le_mono_l.",
                        "VernacExtend",
                        "64c279615122d28dd9f063fc771b140427353b42"
                    ]
                },
                {
                    "command": [
                        "apply add_nonneg_nonneg; now apply mul_nonneg_nonneg.",
                        "VernacExtend",
                        "3ec9977232691280b6975f200fd1d247008ce14d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "square_add_le",
            "line_nb": 321,
            "steps": [
                {
                    "command": [
                        "intros a b Ha Hb.",
                        "VernacExtend",
                        "66806e238a444cf46d8b4db167ceff52729a7bf9"
                    ]
                },
                {
                    "command": [
                        "rewrite !mul_add_distr_l, !mul_add_distr_r.",
                        "VernacExtend",
                        "0811112149440e39b5936b3369a4cabb6a726b31"
                    ]
                },
                {
                    "command": [
                        "nzsimpl'.",
                        "VernacExtend",
                        "8e574f0f62759aeb195e08bf64ba0a41330fb166"
                    ]
                },
                {
                    "command": [
                        "rewrite <- !add_assoc.",
                        "VernacExtend",
                        "6259de28ef267c589c2ffd15661d95b8cb4f8112"
                    ]
                },
                {
                    "command": [
                        "apply add_le_mono_l.",
                        "VernacExtend",
                        "64c279615122d28dd9f063fc771b140427353b42"
                    ]
                },
                {
                    "command": [
                        "rewrite !add_assoc.",
                        "VernacExtend",
                        "8d08d7c6c8b8935df99691a18a48ba7a4c3e128d"
                    ]
                },
                {
                    "command": [
                        "apply add_le_mono_r.",
                        "VernacExtend",
                        "179a409957abd8c3952b00a85d26c8530e43a0b3"
                    ]
                },
                {
                    "command": [
                        "apply crossmul_le_addsquare; order.",
                        "VernacExtend",
                        "93202836ffb3ef06a847773ca340a8512138eb6d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "quadmul_le_squareadd",
            "line_nb": 331,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "nzsimpl'.",
                        "VernacExtend",
                        "8e574f0f62759aeb195e08bf64ba0a41330fb166"
                    ]
                },
                {
                    "command": [
                        "rewrite !mul_add_distr_l, !mul_add_distr_r.",
                        "VernacExtend",
                        "0811112149440e39b5936b3369a4cabb6a726b31"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_comm _ (b*b)), add_assoc.",
                        "VernacExtend",
                        "0787e8eacd18ce9f1d3d2c9581dd26f7e8662d96"
                    ]
                },
                {
                    "command": [
                        "apply add_le_mono_r.",
                        "VernacExtend",
                        "179a409957abd8c3952b00a85d26c8530e43a0b3"
                    ]
                },
                {
                    "command": [
                        "rewrite (add_shuffle0 (a*a)), (mul_comm b a).",
                        "VernacExtend",
                        "217d2bd5521434ce8490e908c64c5b80ae2fa87a"
                    ]
                },
                {
                    "command": [
                        "apply add_le_mono_r.",
                        "VernacExtend",
                        "179a409957abd8c3952b00a85d26c8530e43a0b3"
                    ]
                },
                {
                    "command": [
                        "rewrite (mul_comm a b) at 1.",
                        "VernacExtend",
                        "848e20cce17e8a3df7d6a1aead12a9ce1e4941cb"
                    ]
                },
                {
                    "command": [
                        "now apply crossmul_le_addsquare.",
                        "VernacExtend",
                        "2bbda2478d4aa0929c213578ee47cffd357720ef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}