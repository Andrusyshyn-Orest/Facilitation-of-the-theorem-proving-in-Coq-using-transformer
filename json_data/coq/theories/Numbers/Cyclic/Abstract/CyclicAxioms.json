{
    "filename": "theories/Numbers/Cyclic/Abstract/CyclicAxioms.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Require Import ZArith.",
            "VernacRequire",
            "12e7bb35b490128f5b015cdb4af7d2255de07134"
        ],
        [
            "Require Import Znumtheory.",
            "VernacRequire",
            "b0019a4f65c83089c27581d981ae8f6e0b66ab58"
        ],
        [
            "Require Import Zpow_facts.",
            "VernacRequire",
            "50a8f38bf0882327fc16963938665f0326f5d8ab"
        ],
        [
            "Require Import DoubleType.",
            "VernacRequire",
            "487ac6633c3dff50356f2b938903faa0058bda91"
        ],
        [
            "Local Open Scope Z_scope.",
            "VernacOpenCloseScope",
            "5313930c0cd5fa63810c1c79463485ebf0638bad"
        ],
        [
            "Module ZnZ.",
            "VernacDefineModule",
            "0c7c9cd37684fc2b5e9d5bd32b3400f926de257e"
        ],
        [
            "Class Ops (t:Type) := MkOps { digits : positive; zdigits: t; to_Z : t -> Z; of_pos : positive -> N * t; head0 : t -> t; tail0 : t -> t; zero : t; one : t; minus_one : t; compare : t -> t -> comparison; eq0 : t -> bool; opp_c : t -> carry t; opp : t -> t; opp_carry : t -> t; succ_c : t -> carry t; add_c : t -> t -> carry t; add_carry_c : t -> t -> carry t; succ : t -> t; add : t -> t -> t; add_carry : t -> t -> t; pred_c : t -> carry t; sub_c : t -> t -> carry t; sub_carry_c : t -> t -> carry t; pred : t -> t; sub : t -> t -> t; sub_carry : t -> t -> t; mul_c : t -> t -> zn2z t; mul : t -> t -> t; square_c : t -> zn2z t; div21 : t -> t -> t -> t*t; div_gt : t -> t -> t * t; div : t -> t -> t * t; modulo_gt : t -> t -> t; modulo : t -> t -> t; gcd_gt : t -> t -> t; gcd : t -> t -> t; add_mul_div : t -> t -> t -> t; pos_mod : t -> t -> t; is_even : t -> bool; sqrt2 : t -> t -> t * carry t; sqrt : t -> t; lor : t -> t -> t; land : t -> t -> t; lxor : t -> t -> t }.",
            "VernacInductive",
            "929cd71f6621421fe012f21ba113774a90b48d94"
        ],
        [
            "Section Specs.",
            "VernacBeginSection",
            "3199301d6770bd7ed5c7ce4534ed3eb3b871eed0"
        ],
        [
            "Context {t : Type}{ops : Ops t}.",
            "VernacContext",
            "e274131c3a863401432326e403e592a6ae5f7970"
        ],
        [
            "Notation \"[| x |]\" := (to_Z x) (at level 0, x at level 99).",
            "VernacNotation",
            "8d96aab3a77e7409acafd8d842cdc88e95852ea6"
        ],
        [
            "Let wB := base digits.",
            "VernacDefinition",
            "97e18ac7bff26871b1e41defce06cfecfa0872a3"
        ],
        [
            "Notation \"[+| c |]\" := (interp_carry 1 wB to_Z c) (at level 0, c at level 99).",
            "VernacNotation",
            "447b05e90a9afa101f0420600047da727ec1b135"
        ],
        [
            "Notation \"[-| c |]\" := (interp_carry (-1) wB to_Z c) (at level 0, c at level 99).",
            "VernacNotation",
            "adb24b02acfcd7f3743b43d72c67db3aed03b641"
        ],
        [
            "Notation \"[|| x ||]\" := (zn2z_to_Z wB to_Z x) (at level 0, x at level 99).",
            "VernacNotation",
            "38310595e6a15a33c5cb4ab907b27fcd67398920"
        ],
        [
            "Class Specs := MkSpecs { spec_to_Z : forall x, 0 <= [| x |] < wB; spec_of_pos : forall p, Zpos p = (Z.of_N (fst (of_pos p)))*wB + [|(snd (of_pos p))|]; spec_zdigits : [| zdigits |] = Zpos digits; spec_more_than_1_digit: 1 < Zpos digits; spec_0 : [|zero|] = 0; spec_1 : [|one|] = 1; spec_m1 : [|minus_one|] = wB - 1; spec_compare : forall x y, compare x y = ([|x|] ?= [|y|]); spec_eq0 : forall x, eq0 x = true -> [|x|] = 0; spec_opp_c : forall x, [-|opp_c x|] = -[|x|]; spec_opp : forall x, [|opp x|] = (-[|x|]) mod wB; spec_opp_carry : forall x, [|opp_carry x|] = wB - [|x|] - 1; spec_succ_c : forall x, [+|succ_c x|] = [|x|] + 1; spec_add_c : forall x y, [+|add_c x y|] = [|x|] + [|y|]; spec_add_carry_c : forall x y, [+|add_carry_c x y|] = [|x|] + [|y|] + 1; spec_succ : forall x, [|succ x|] = ([|x|] + 1) mod wB; spec_add : forall x y, [|add x y|] = ([|x|] + [|y|]) mod wB; spec_add_carry : forall x y, [|add_carry x y|] = ([|x|] + [|y|] + 1) mod wB; spec_pred_c : forall x, [-|pred_c x|] = [|x|] - 1; spec_sub_c : forall x y, [-|sub_c x y|] = [|x|] - [|y|]; spec_sub_carry_c : forall x y, [-|sub_carry_c x y|] = [|x|] - [|y|] - 1; spec_pred : forall x, [|pred x|] = ([|x|] - 1) mod wB; spec_sub : forall x y, [|sub x y|] = ([|x|] - [|y|]) mod wB; spec_sub_carry : forall x y, [|sub_carry x y|] = ([|x|] - [|y|] - 1) mod wB; spec_mul_c : forall x y, [|| mul_c x y ||] = [|x|] * [|y|]; spec_mul : forall x y, [|mul x y|] = ([|x|] * [|y|]) mod wB; spec_square_c : forall x, [|| square_c x||] = [|x|] * [|x|]; spec_div21 : forall a1 a2 b, wB/2 <= [|b|] -> [|a1|] < [|b|] -> let (q,r) := div21 a1 a2 b in [|a1|] *wB+ [|a2|] = [|q|] * [|b|] + [|r|] /\\ 0 <= [|r|] < [|b|]; spec_div_gt : forall a b, [|a|] > [|b|] -> 0 < [|b|] -> let (q,r) := div_gt a b in [|a|] = [|q|] * [|b|] + [|r|] /\\ 0 <= [|r|] < [|b|]; spec_div : forall a b, 0 < [|b|] -> let (q,r) := div a b in [|a|] = [|q|] * [|b|] + [|r|] /\\ 0 <= [|r|] < [|b|]; spec_modulo_gt : forall a b, [|a|] > [|b|] -> 0 < [|b|] -> [|modulo_gt a b|] = [|a|] mod [|b|]; spec_modulo : forall a b, 0 < [|b|] -> [|modulo a b|] = [|a|] mod [|b|]; spec_gcd_gt : forall a b, [|a|] > [|b|] -> Zis_gcd [|a|] [|b|] [|gcd_gt a b|]; spec_gcd : forall a b, Zis_gcd [|a|] [|b|] [|gcd a b|]; spec_head00: forall x, [|x|] = 0 -> [|head0 x|] = Zpos digits; spec_head0 : forall x, 0 < [|x|] -> wB/ 2 <= 2 ^ ([|head0 x|]) * [|x|] < wB; spec_tail00: forall x, [|x|] = 0 -> [|tail0 x|] = Zpos digits; spec_tail0 : forall x, 0 < [|x|] -> exists y, 0 <= y /\\ [|x|] = (2 * y + 1) * (2 ^ [|tail0 x|]) ; spec_add_mul_div : forall x y p, [|p|] <= Zpos digits -> [| add_mul_div p x y |] = ([|x|] * (2 ^ [|p|]) + [|y|] / (2 ^ ((Zpos digits) - [|p|]))) mod wB; spec_pos_mod : forall w p, [|pos_mod p w|] = [|w|] mod (2 ^ [|p|]); spec_is_even : forall x, if is_even x then [|x|] mod 2 = 0 else [|x|] mod 2 = 1; spec_sqrt2 : forall x y, wB/ 4 <= [|x|] -> let (s,r) := sqrt2 x y in [||WW x y||] = [|s|] ^ 2 + [+|r|] /\\ [+|r|] <= 2 * [|s|]; spec_sqrt : forall x, [|sqrt x|] ^ 2 <= [|x|] < ([|sqrt x|] + 1) ^ 2; spec_lor : forall x y, [|lor x y|] = Z.lor [|x|] [|y|]; spec_land : forall x y, [|land x y|] = Z.land [|x|] [|y|]; spec_lxor : forall x y, [|lxor x y|] = Z.lxor [|x|] [|y|] }.",
            "VernacInductive",
            "110ca6525756d71bb37d2ef7c40c81ed1e7a13e6"
        ],
        [
            "End Specs.",
            "VernacEndSegment",
            "cd208cf6549faa997d087fa0ced605d679ec61de"
        ],
        [
            "Arguments Specs {t} ops.",
            "VernacArguments",
            "05b113e186c53bae8964a1f5b230a030bb52961e"
        ],
        [
            "Section WW.",
            "VernacBeginSection",
            "0c52efbc0234c0616faf16104768fd7ce8cad2f4"
        ],
        [
            "Context {t : Type}{ops : Ops t}{specs : Specs ops}.",
            "VernacContext",
            "bafa0d90b2946219cc47ad6bbcb4aa413bdd19fb"
        ],
        [
            "Let wB := base digits.",
            "VernacDefinition",
            "97e18ac7bff26871b1e41defce06cfecfa0872a3"
        ],
        [
            "Definition WO' (eq0:t->bool) zero h := if eq0 h then W0 else WW h zero.",
            "VernacDefinition",
            "f6b277e0fc9a792d6683deb0a63e6557739ce677"
        ],
        [
            "Definition WO := Eval lazy beta delta [WO'] in let eq0 := ZnZ.eq0 in let zero := ZnZ.zero in WO' eq0 zero.",
            "VernacDefinition",
            "f417e31efdc9ca757cd6c7758629b5c7c5ad2d25"
        ],
        [
            "Definition OW' (eq0:t->bool) zero l := if eq0 l then W0 else WW zero l.",
            "VernacDefinition",
            "8434f59dd5f9ff54b39d8f994b496b1505cd26a0"
        ],
        [
            "Definition OW := Eval lazy beta delta [OW'] in let eq0 := ZnZ.eq0 in let zero := ZnZ.zero in OW' eq0 zero.",
            "VernacDefinition",
            "75efbabc35dc3219ac96c27e156a8c7cd212abf8"
        ],
        [
            "Definition WW' (eq0:t->bool) zero h l := if eq0 h then OW' eq0 zero l else WW h l.",
            "VernacDefinition",
            "f03a6264883fcea12e8c089f102fd996363ea4fd"
        ],
        [
            "Definition WW := Eval lazy beta delta [WW' OW'] in let eq0 := ZnZ.eq0 in let zero := ZnZ.zero in WW' eq0 zero.",
            "VernacDefinition",
            "8786bc430f38ebe7431290b97ef769ecda5c9c0a"
        ],
        [
            "Lemma spec_WO : forall h, zn2z_to_Z wB to_Z (WO h) = (to_Z h)*wB.",
            "VernacStartTheoremProof",
            "117d3f126c4cf67dc67b713a3342e9a9794a8cf5"
        ],
        [
            "unfold zn2z_to_Z, WO; simpl; intros.",
            "VernacExtend",
            "dc98e1210645244d911962eab64b29d129349aef"
        ],
        [
            "case_eq (eq0 h); intros.",
            "VernacExtend",
            "d10f9883afd41f719e9ed8fe3f5b570ba177137c"
        ],
        [
            "rewrite (spec_eq0 _ H); auto.",
            "VernacExtend",
            "7a40c325693c399a947223f1da440dc07d352b29"
        ],
        [
            "rewrite spec_0; auto with zarith.",
            "VernacExtend",
            "264bec972fffcf021165326255fb9c08f386dfa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma spec_OW : forall l, zn2z_to_Z wB to_Z (OW l) = to_Z l.",
            "VernacStartTheoremProof",
            "4f847e33cf94ff372b30c980e61cb5e88df9d833"
        ],
        [
            "unfold zn2z_to_Z, OW; simpl; intros.",
            "VernacExtend",
            "d98d0f6440bb362c68441754b2a8352f6b7f56c0"
        ],
        [
            "case_eq (eq0 l); intros.",
            "VernacExtend",
            "e0a7643d9ab7827c261d06d0602e214e9d915c16"
        ],
        [
            "rewrite (spec_eq0 _ H); auto.",
            "VernacExtend",
            "7a40c325693c399a947223f1da440dc07d352b29"
        ],
        [
            "rewrite spec_0; auto with zarith.",
            "VernacExtend",
            "264bec972fffcf021165326255fb9c08f386dfa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma spec_WW : forall h l, zn2z_to_Z wB to_Z (WW h l) = (to_Z h)*wB + to_Z l.",
            "VernacStartTheoremProof",
            "6b0a7537691de8e6022072af03d5c265f7a1cb60"
        ],
        [
            "unfold WW; simpl; intros.",
            "VernacExtend",
            "be18149b9180929a9c34dec2ae59ede7f0d6a20a"
        ],
        [
            "case_eq (eq0 h); intros.",
            "VernacExtend",
            "d10f9883afd41f719e9ed8fe3f5b570ba177137c"
        ],
        [
            "rewrite (spec_eq0 _ H); auto.",
            "VernacExtend",
            "7a40c325693c399a947223f1da440dc07d352b29"
        ],
        [
            "fold (OW l).",
            "VernacExtend",
            "5dddd6766900149c662463b4f9951ec87578d4ca"
        ],
        [
            "rewrite spec_OW; auto.",
            "VernacExtend",
            "ed044f6117065a0703e9dd7a4f2fbadf065ad93e"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End WW.",
            "VernacEndSegment",
            "0fbb086dc6b713df29d95fd4eaca36196fd86079"
        ],
        [
            "Section Of_Z.",
            "VernacBeginSection",
            "095b6c3e302cb1edf984a021e9848b48132d56f7"
        ],
        [
            "Context {t : Type}{ops : Ops t}{specs : Specs ops}.",
            "VernacContext",
            "bafa0d90b2946219cc47ad6bbcb4aa413bdd19fb"
        ],
        [
            "Notation \"[| x |]\" := (to_Z x) (at level 0, x at level 99).",
            "VernacNotation",
            "8d96aab3a77e7409acafd8d842cdc88e95852ea6"
        ],
        [
            "Theorem of_pos_correct: forall p, Zpos p < base digits -> [|(snd (of_pos p))|] = Zpos p.",
            "VernacStartTheoremProof",
            "fb64b2324d26a2b6e59fe1b6e9894b6938361b8c"
        ],
        [
            "intros p Hp.",
            "VernacExtend",
            "cf737bd4e185c03175335af1ca6ae52da34cba56"
        ],
        [
            "generalize (spec_of_pos p).",
            "VernacExtend",
            "4e8a2d9bcff32a3a8c4acac70dff956761aa359c"
        ],
        [
            "case (of_pos p); intros n w1; simpl.",
            "VernacExtend",
            "3a2917edfa54334cfa889e50abf2db9b62938c4f"
        ],
        [
            "case n; auto with zarith.",
            "VernacExtend",
            "4833de9f386b3fecf1f7f577a1a1d4d65465758f"
        ],
        [
            "intros p1 Hp1; contradict Hp; apply Z.le_ngt.",
            "VernacExtend",
            "d718952ffb6f00c091af1b610f3d6421b8e30b4c"
        ],
        [
            "replace (base digits) with (1 * base digits + 0) by ring.",
            "VernacExtend",
            "eb0302b9975625041614390501845b68097958d1"
        ],
        [
            "rewrite Hp1.",
            "VernacExtend",
            "de9387f377b79a31b09b91e21d75dffb0ddfb4ba"
        ],
        [
            "apply Z.add_le_mono.",
            "VernacExtend",
            "f890c079b670eb73d8fed3c0ce92f2d36e7a46a1"
        ],
        [
            "apply Z.mul_le_mono_nonneg; auto with zarith.",
            "VernacExtend",
            "677df5d2eec24c31228334df6ea4f9b6c7303cdf"
        ],
        [
            "case p1; simpl; intros; red; simpl; intros; discriminate.",
            "VernacExtend",
            "43ae1070d026a29b99c22cec396fdd1d1eadd613"
        ],
        [
            "unfold base; auto with zarith.",
            "VernacExtend",
            "01bc8943265433c6bbbe9c7a64636cc7d4579185"
        ],
        [
            "case (spec_to_Z w1); auto with zarith.",
            "VernacExtend",
            "a5a0c90404ca9f7426be9d464b51f75a35fd4829"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition of_Z z := match z with | Zpos p => snd (of_pos p) | _ => zero end.",
            "VernacDefinition",
            "69225bf78be5cc521140b5e3e041bdc725e88ba6"
        ],
        [
            "Theorem of_Z_correct: forall p, 0 <= p < base digits -> [|of_Z p|] = p.",
            "VernacStartTheoremProof",
            "a10aa037db2b02b062233c38a109fb43ac054d92"
        ],
        [
            "intros p; case p; simpl; try rewrite spec_0; auto.",
            "VernacExtend",
            "6c811b6857ea5c8a60f82e49eec360a19eb99bad"
        ],
        [
            "intros; rewrite of_pos_correct; auto with zarith.",
            "VernacExtend",
            "c4d25a23a3c481f12ed33281b74cc5f71e9c2bea"
        ],
        [
            "intros p1 (H1, _); contradict H1; apply Z.lt_nge; red; simpl; auto.",
            "VernacExtend",
            "bb83297e0e0d5178ca10692e8459251d68cbc7a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Of_Z.",
            "VernacEndSegment",
            "8d97cc6abe572875d206bf0265cb4a2bde439d24"
        ],
        [
            "End ZnZ.",
            "VernacEndSegment",
            "96249e0095c3feb6a800b6e8eae2013371e759e8"
        ],
        [
            "Module Type CyclicType.",
            "VernacDeclareModuleType",
            "f570bbdb983ebdd0fe959fb8ae0e87ffda59104f"
        ],
        [
            "Parameter t : Type.",
            "VernacAssumption",
            "504795567cd4c81b969bd65cb901c9b8a73ae96f"
        ],
        [
            "Declare Instance ops : ZnZ.Ops t.",
            "VernacInstance",
            "34b1cb92bc394169bdbe94600e42fc1aa282b4db"
        ],
        [
            "Declare Instance specs : ZnZ.Specs ops.",
            "VernacInstance",
            "50e91c83823b3bf737e6bb79ddc3035956649058"
        ],
        [
            "End CyclicType.",
            "VernacEndSegment",
            "5b3449bd9b1f879c67761c1137ce78e358703c70"
        ],
        [
            "Module CyclicRing (Import Cyclic : CyclicType).",
            "VernacDefineModule",
            "362f7ac261637ef0e7871af788ccad7a4fb302b6"
        ],
        [
            "Local Notation \"[| x |]\" := (ZnZ.to_Z x) (at level 0, x at level 99).",
            "VernacNotation",
            "1b7fb28688f6629b7329aa98665dc74da0f3355a"
        ],
        [
            "Definition eq (n m : t) := [| n |] = [| m |].",
            "VernacDefinition",
            "9d78969bc4f82d70ca4d4f2eac00f1982a7d9d0c"
        ],
        [
            "Local Infix \"==\" := eq (at level 70).",
            "VernacInfix",
            "cc5207d2159239d2fbb90e71956d3d8bc444012c"
        ],
        [
            "Local Notation \"0\" := ZnZ.zero.",
            "VernacNotation",
            "bcba0fe8076865691d86c3bbf1ce19da099026a4"
        ],
        [
            "Local Notation \"1\" := ZnZ.one.",
            "VernacNotation",
            "68231717ebaecddc789bfeb9edb5f05522cd0284"
        ],
        [
            "Local Infix \"+\" := ZnZ.add.",
            "VernacInfix",
            "ddbd0a07cc7fcbdb114a0659c8d9ac8fa72fc4a8"
        ],
        [
            "Local Infix \"-\" := ZnZ.sub.",
            "VernacInfix",
            "db072bff0818d2ff55398a0ed509200c7fc98072"
        ],
        [
            "Local Notation \"- x\" := (ZnZ.opp x).",
            "VernacNotation",
            "0f5a96c9d6d9dcee5b042a99bbd373fb710ff13f"
        ],
        [
            "Local Infix \"*\" := ZnZ.mul.",
            "VernacInfix",
            "99d0146f9926bba6df9e37c8e4510fd3b1441a0b"
        ],
        [
            "Local Notation wB := (base ZnZ.digits).",
            "VernacSyntacticDefinition",
            "77cd197bca2f12044a51fd8fc4fe87ee24d5615c"
        ],
        [
            "Hint Rewrite ZnZ.spec_0 ZnZ.spec_1 ZnZ.spec_add ZnZ.spec_mul ZnZ.spec_opp ZnZ.spec_sub : cyclic.",
            "VernacExtend",
            "7ae61c3de5420df5bd5b758dd0e4495d187be06c"
        ],
        [
            "Ltac zify := unfold eq in *; autorewrite with cyclic.",
            "VernacExtend",
            "0c26c9ea509bb4bf72ddc963c2e22e94d4d73b54"
        ],
        [
            "Lemma add_0_l : forall x, 0 + x == x.",
            "VernacStartTheoremProof",
            "360381f18e6c50567e71ed335b7d563ee9af910d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "zify.",
            "VernacExtend",
            "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
        ],
        [
            "rewrite Z.add_0_l.",
            "VernacExtend",
            "44f25f9f1c5a6e47f391f3c0a94821844d59e729"
        ],
        [
            "apply Zmod_small.",
            "VernacExtend",
            "439f7572e12963e1685c905bb39e49700a5d1e32"
        ],
        [
            "apply ZnZ.spec_to_Z.",
            "VernacExtend",
            "d77f06f56a1ecfd363d2eab8b7105ded701d91ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_comm : forall x y, x + y == y + x.",
            "VernacStartTheoremProof",
            "a187aabdd9ef175a605031c96408d4d10f09cd6d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "zify.",
            "VernacExtend",
            "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
        ],
        [
            "now rewrite Z.add_comm.",
            "VernacExtend",
            "87dfce03e0853f35dab6db14261208b36f6107e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_assoc : forall x y z, x + (y + z) == x + y + z.",
            "VernacStartTheoremProof",
            "98fe0d4d526aa26d7168ffab81b79d19ef1c0231"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "zify.",
            "VernacExtend",
            "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
        ],
        [
            "now rewrite Zplus_mod_idemp_r, Zplus_mod_idemp_l, Z.add_assoc.",
            "VernacExtend",
            "b6491d4edca79325761c8fc3c3cf5eeeb3b27065"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_1_l : forall x, 1 * x == x.",
            "VernacStartTheoremProof",
            "51fecdf84e281fa964ac198398ff24d94726efe9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "zify.",
            "VernacExtend",
            "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
        ],
        [
            "rewrite Z.mul_1_l.",
            "VernacExtend",
            "95e2e6f2f2a88fa9685f8eb93863d7db4e1da373"
        ],
        [
            "apply Zmod_small.",
            "VernacExtend",
            "439f7572e12963e1685c905bb39e49700a5d1e32"
        ],
        [
            "apply ZnZ.spec_to_Z.",
            "VernacExtend",
            "d77f06f56a1ecfd363d2eab8b7105ded701d91ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_comm : forall x y, x * y == y * x.",
            "VernacStartTheoremProof",
            "fce1bb5653c8d7da4f0072e36dbe9d54d6ea0a59"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "zify.",
            "VernacExtend",
            "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
        ],
        [
            "now rewrite Z.mul_comm.",
            "VernacExtend",
            "99582e7088c4739420b6464d09084bf21d59733d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_assoc : forall x y z, x * (y * z) == x * y * z.",
            "VernacStartTheoremProof",
            "92f08dbf13a355cc4a0aa0fe6d57d3c38906b3bb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "zify.",
            "VernacExtend",
            "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
        ],
        [
            "now rewrite Zmult_mod_idemp_r, Zmult_mod_idemp_l, Z.mul_assoc.",
            "VernacExtend",
            "27fbaccccf3e2019d6d758b4d4b5773ee557674d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_add_distr_r : forall x y z, (x+y)*z == x*z + y*z.",
            "VernacStartTheoremProof",
            "f57cf6ca96c74824a816c1292c4813d22dfdf2f7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "zify.",
            "VernacExtend",
            "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
        ],
        [
            "now rewrite <- Zplus_mod, Zmult_mod_idemp_l, Z.mul_add_distr_r.",
            "VernacExtend",
            "cc417524635c458b8c6fe52da310e60a8bf2a437"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_opp_r : forall x y, x + - y == x-y.",
            "VernacStartTheoremProof",
            "95a85b83e3318b4686740a4bfb6630ad0344a6a0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "zify.",
            "VernacExtend",
            "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
        ],
        [
            "rewrite <- Zminus_mod_idemp_r.",
            "VernacExtend",
            "95dd5f32a337d45ee09d52ae07ea8ebe00819825"
        ],
        [
            "unfold Z.sub.",
            "VernacExtend",
            "e1e2a089ec5b3f623e66fc9d6fa6fcec99904eb4"
        ],
        [
            "destruct (Z.eq_dec ([|y|] mod wB) 0) as [EQ|NEQ].",
            "VernacExtend",
            "b616403f9c8c1751606248b1bab13a4e572a1a63"
        ],
        [
            "rewrite Z_mod_zero_opp_full, EQ, 2 Z.add_0_r; auto.",
            "VernacExtend",
            "22cd3cdc2c1bc930dba14836a3353edbb2704e2a"
        ],
        [
            "rewrite Z_mod_nz_opp_full by auto.",
            "VernacExtend",
            "e624296332782b943aea8a3abf6fe1b1ddd7ca5d"
        ],
        [
            "rewrite <- Zplus_mod_idemp_r, <- Zminus_mod_idemp_l.",
            "VernacExtend",
            "4df92242425aff7b0e9086ec81746445f6b2bc06"
        ],
        [
            "rewrite Z_mod_same_full.",
            "VernacExtend",
            "e7962fa6b554c4c229581e3b93c42092180a6ea5"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now rewrite Zplus_mod_idemp_r.",
            "VernacExtend",
            "b774cddd17c53c8c2c188d4a911bea31b1f5d747"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_opp_diag_r : forall x, x + - x == 0.",
            "VernacStartTheoremProof",
            "3a6fae2400deeeebca73dc7e45151dd9a666b2ab"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "rewrite add_opp_r.",
            "VernacExtend",
            "145f466622e7e61ce41bfeb44a0f43fb6f0e0761"
        ],
        [
            "zify.",
            "VernacExtend",
            "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
        ],
        [
            "now rewrite Z.sub_diag, Zmod_0_l.",
            "VernacExtend",
            "f79f94a2a050f4f9e52aed42bd6f558b30e340fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CyclicRing : ring_theory 0 1 ZnZ.add ZnZ.mul ZnZ.sub ZnZ.opp eq.",
            "VernacStartTheoremProof",
            "4968ce9fc73e9da51159e218f08c2a19f16cb97d"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "exact add_0_l.",
            "VernacExtend",
            "9733058273ac7aff06ab5018746e3155c28581e2"
        ],
        [
            "exact add_comm.",
            "VernacExtend",
            "30d18f86415bfe708e8182eedf1e5d634ae22c37"
        ],
        [
            "exact add_assoc.",
            "VernacExtend",
            "3bc522cb7c2237e64c8894389bd338981d69f6c5"
        ],
        [
            "exact mul_1_l.",
            "VernacExtend",
            "dd6f06246526bb77adae2b08b3ad626e4016e054"
        ],
        [
            "exact mul_comm.",
            "VernacExtend",
            "532f396b90e4d08c55decc0de8f9e31a97588abf"
        ],
        [
            "exact mul_assoc.",
            "VernacExtend",
            "7bc16c2975550fde9514f0ac2c60d41d5a161a77"
        ],
        [
            "exact mul_add_distr_r.",
            "VernacExtend",
            "47545423e44adfaf231220bea1e5bd7988eb1e59"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply add_opp_r.",
            "VernacExtend",
            "ed962bd72c75f92720fa19d4543ecab0b9d84766"
        ],
        [
            "exact add_opp_diag_r.",
            "VernacExtend",
            "47ffe1b3931e4e74fd566ecc2787420260bd3795"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eqb x y := match ZnZ.compare x y with Eq => true | _ => false end.",
            "VernacDefinition",
            "3f43aae783deeac55f3d202b571aa863922ce6fc"
        ],
        [
            "Lemma eqb_eq : forall x y, eqb x y = true <-> x == y.",
            "VernacStartTheoremProof",
            "36f7581b53d307fd44a385c1b82ff3c9de8f6cd8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold eqb, eq.",
            "VernacExtend",
            "55d925924202b0ffbe04190854f3339e64a735e2"
        ],
        [
            "rewrite ZnZ.spec_compare.",
            "VernacExtend",
            "1086d798bff1da9fda7a260e11582048664e0b0a"
        ],
        [
            "case Z.compare_spec; intuition; try discriminate.",
            "VernacExtend",
            "6868da1c33433e7e366b91993d7b976855b8d0d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqb_correct : forall x y, eqb x y = true -> x==y.",
            "VernacStartTheoremProof",
            "0fa7903a689f7541f485f3c9e28bdb595efb971c"
        ],
        [
            "now apply eqb_eq.",
            "VernacExtend",
            "238eff1a464b479561b20de93fde6a4f9102d1dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CyclicRing.",
            "VernacEndSegment",
            "9c29b8c455f82f73a54de5b8d69abf1e12155de8"
        ]
    ],
    "proofs": [
        {
            "name": "spec_WO",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "unfold zn2z_to_Z, WO; simpl; intros.",
                        "VernacExtend",
                        "dc98e1210645244d911962eab64b29d129349aef"
                    ]
                },
                {
                    "command": [
                        "case_eq (eq0 h); intros.",
                        "VernacExtend",
                        "d10f9883afd41f719e9ed8fe3f5b570ba177137c"
                    ]
                },
                {
                    "command": [
                        "rewrite (spec_eq0 _ H); auto.",
                        "VernacExtend",
                        "7a40c325693c399a947223f1da440dc07d352b29"
                    ]
                },
                {
                    "command": [
                        "rewrite spec_0; auto with zarith.",
                        "VernacExtend",
                        "264bec972fffcf021165326255fb9c08f386dfa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "spec_OW",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "unfold zn2z_to_Z, OW; simpl; intros.",
                        "VernacExtend",
                        "d98d0f6440bb362c68441754b2a8352f6b7f56c0"
                    ]
                },
                {
                    "command": [
                        "case_eq (eq0 l); intros.",
                        "VernacExtend",
                        "e0a7643d9ab7827c261d06d0602e214e9d915c16"
                    ]
                },
                {
                    "command": [
                        "rewrite (spec_eq0 _ H); auto.",
                        "VernacExtend",
                        "7a40c325693c399a947223f1da440dc07d352b29"
                    ]
                },
                {
                    "command": [
                        "rewrite spec_0; auto with zarith.",
                        "VernacExtend",
                        "264bec972fffcf021165326255fb9c08f386dfa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "spec_WW",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "unfold WW; simpl; intros.",
                        "VernacExtend",
                        "be18149b9180929a9c34dec2ae59ede7f0d6a20a"
                    ]
                },
                {
                    "command": [
                        "case_eq (eq0 h); intros.",
                        "VernacExtend",
                        "d10f9883afd41f719e9ed8fe3f5b570ba177137c"
                    ]
                },
                {
                    "command": [
                        "rewrite (spec_eq0 _ H); auto.",
                        "VernacExtend",
                        "7a40c325693c399a947223f1da440dc07d352b29"
                    ]
                },
                {
                    "command": [
                        "fold (OW l).",
                        "VernacExtend",
                        "5dddd6766900149c662463b4f9951ec87578d4ca"
                    ]
                },
                {
                    "command": [
                        "rewrite spec_OW; auto.",
                        "VernacExtend",
                        "ed044f6117065a0703e9dd7a4f2fbadf065ad93e"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_pos_correct",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros p Hp.",
                        "VernacExtend",
                        "cf737bd4e185c03175335af1ca6ae52da34cba56"
                    ]
                },
                {
                    "command": [
                        "generalize (spec_of_pos p).",
                        "VernacExtend",
                        "4e8a2d9bcff32a3a8c4acac70dff956761aa359c"
                    ]
                },
                {
                    "command": [
                        "case (of_pos p); intros n w1; simpl.",
                        "VernacExtend",
                        "3a2917edfa54334cfa889e50abf2db9b62938c4f"
                    ]
                },
                {
                    "command": [
                        "case n; auto with zarith.",
                        "VernacExtend",
                        "4833de9f386b3fecf1f7f577a1a1d4d65465758f"
                    ]
                },
                {
                    "command": [
                        "intros p1 Hp1; contradict Hp; apply Z.le_ngt.",
                        "VernacExtend",
                        "d718952ffb6f00c091af1b610f3d6421b8e30b4c"
                    ]
                },
                {
                    "command": [
                        "replace (base digits) with (1 * base digits + 0) by ring.",
                        "VernacExtend",
                        "eb0302b9975625041614390501845b68097958d1"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp1.",
                        "VernacExtend",
                        "de9387f377b79a31b09b91e21d75dffb0ddfb4ba"
                    ]
                },
                {
                    "command": [
                        "apply Z.add_le_mono.",
                        "VernacExtend",
                        "f890c079b670eb73d8fed3c0ce92f2d36e7a46a1"
                    ]
                },
                {
                    "command": [
                        "apply Z.mul_le_mono_nonneg; auto with zarith.",
                        "VernacExtend",
                        "677df5d2eec24c31228334df6ea4f9b6c7303cdf"
                    ]
                },
                {
                    "command": [
                        "case p1; simpl; intros; red; simpl; intros; discriminate.",
                        "VernacExtend",
                        "43ae1070d026a29b99c22cec396fdd1d1eadd613"
                    ]
                },
                {
                    "command": [
                        "unfold base; auto with zarith.",
                        "VernacExtend",
                        "01bc8943265433c6bbbe9c7a64636cc7d4579185"
                    ]
                },
                {
                    "command": [
                        "case (spec_to_Z w1); auto with zarith.",
                        "VernacExtend",
                        "a5a0c90404ca9f7426be9d464b51f75a35fd4829"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_Z_correct",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intros p; case p; simpl; try rewrite spec_0; auto.",
                        "VernacExtend",
                        "6c811b6857ea5c8a60f82e49eec360a19eb99bad"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite of_pos_correct; auto with zarith.",
                        "VernacExtend",
                        "c4d25a23a3c481f12ed33281b74cc5f71e9c2bea"
                    ]
                },
                {
                    "command": [
                        "intros p1 (H1, _); contradict H1; apply Z.lt_nge; red; simpl; auto.",
                        "VernacExtend",
                        "bb83297e0e0d5178ca10692e8459251d68cbc7a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_0_l",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "zify.",
                        "VernacExtend",
                        "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.add_0_l.",
                        "VernacExtend",
                        "44f25f9f1c5a6e47f391f3c0a94821844d59e729"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_small.",
                        "VernacExtend",
                        "439f7572e12963e1685c905bb39e49700a5d1e32"
                    ]
                },
                {
                    "command": [
                        "apply ZnZ.spec_to_Z.",
                        "VernacExtend",
                        "d77f06f56a1ecfd363d2eab8b7105ded701d91ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_comm",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "zify.",
                        "VernacExtend",
                        "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
                    ]
                },
                {
                    "command": [
                        "now rewrite Z.add_comm.",
                        "VernacExtend",
                        "87dfce03e0853f35dab6db14261208b36f6107e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_assoc",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "zify.",
                        "VernacExtend",
                        "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
                    ]
                },
                {
                    "command": [
                        "now rewrite Zplus_mod_idemp_r, Zplus_mod_idemp_l, Z.add_assoc.",
                        "VernacExtend",
                        "b6491d4edca79325761c8fc3c3cf5eeeb3b27065"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_1_l",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "zify.",
                        "VernacExtend",
                        "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.mul_1_l.",
                        "VernacExtend",
                        "95e2e6f2f2a88fa9685f8eb93863d7db4e1da373"
                    ]
                },
                {
                    "command": [
                        "apply Zmod_small.",
                        "VernacExtend",
                        "439f7572e12963e1685c905bb39e49700a5d1e32"
                    ]
                },
                {
                    "command": [
                        "apply ZnZ.spec_to_Z.",
                        "VernacExtend",
                        "d77f06f56a1ecfd363d2eab8b7105ded701d91ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_comm",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "zify.",
                        "VernacExtend",
                        "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
                    ]
                },
                {
                    "command": [
                        "now rewrite Z.mul_comm.",
                        "VernacExtend",
                        "99582e7088c4739420b6464d09084bf21d59733d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_assoc",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "zify.",
                        "VernacExtend",
                        "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
                    ]
                },
                {
                    "command": [
                        "now rewrite Zmult_mod_idemp_r, Zmult_mod_idemp_l, Z.mul_assoc.",
                        "VernacExtend",
                        "27fbaccccf3e2019d6d758b4d4b5773ee557674d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_add_distr_r",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "zify.",
                        "VernacExtend",
                        "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Zplus_mod, Zmult_mod_idemp_l, Z.mul_add_distr_r.",
                        "VernacExtend",
                        "cc417524635c458b8c6fe52da310e60a8bf2a437"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_opp_r",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "zify.",
                        "VernacExtend",
                        "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zminus_mod_idemp_r.",
                        "VernacExtend",
                        "95dd5f32a337d45ee09d52ae07ea8ebe00819825"
                    ]
                },
                {
                    "command": [
                        "unfold Z.sub.",
                        "VernacExtend",
                        "e1e2a089ec5b3f623e66fc9d6fa6fcec99904eb4"
                    ]
                },
                {
                    "command": [
                        "destruct (Z.eq_dec ([|y|] mod wB) 0) as [EQ|NEQ].",
                        "VernacExtend",
                        "b616403f9c8c1751606248b1bab13a4e572a1a63"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_mod_zero_opp_full, EQ, 2 Z.add_0_r; auto.",
                        "VernacExtend",
                        "22cd3cdc2c1bc930dba14836a3353edbb2704e2a"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_mod_nz_opp_full by auto.",
                        "VernacExtend",
                        "e624296332782b943aea8a3abf6fe1b1ddd7ca5d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Zplus_mod_idemp_r, <- Zminus_mod_idemp_l.",
                        "VernacExtend",
                        "4df92242425aff7b0e9086ec81746445f6b2bc06"
                    ]
                },
                {
                    "command": [
                        "rewrite Z_mod_same_full.",
                        "VernacExtend",
                        "e7962fa6b554c4c229581e3b93c42092180a6ea5"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now rewrite Zplus_mod_idemp_r.",
                        "VernacExtend",
                        "b774cddd17c53c8c2c188d4a911bea31b1f5d747"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_opp_diag_r",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "rewrite add_opp_r.",
                        "VernacExtend",
                        "145f466622e7e61ce41bfeb44a0f43fb6f0e0761"
                    ]
                },
                {
                    "command": [
                        "zify.",
                        "VernacExtend",
                        "1cc314461888aca2a8d9ab0ac2e16f28edc6c9bb"
                    ]
                },
                {
                    "command": [
                        "now rewrite Z.sub_diag, Zmod_0_l.",
                        "VernacExtend",
                        "f79f94a2a050f4f9e52aed42bd6f558b30e340fb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CyclicRing",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "exact add_0_l.",
                        "VernacExtend",
                        "9733058273ac7aff06ab5018746e3155c28581e2"
                    ]
                },
                {
                    "command": [
                        "exact add_comm.",
                        "VernacExtend",
                        "30d18f86415bfe708e8182eedf1e5d634ae22c37"
                    ]
                },
                {
                    "command": [
                        "exact add_assoc.",
                        "VernacExtend",
                        "3bc522cb7c2237e64c8894389bd338981d69f6c5"
                    ]
                },
                {
                    "command": [
                        "exact mul_1_l.",
                        "VernacExtend",
                        "dd6f06246526bb77adae2b08b3ad626e4016e054"
                    ]
                },
                {
                    "command": [
                        "exact mul_comm.",
                        "VernacExtend",
                        "532f396b90e4d08c55decc0de8f9e31a97588abf"
                    ]
                },
                {
                    "command": [
                        "exact mul_assoc.",
                        "VernacExtend",
                        "7bc16c2975550fde9514f0ac2c60d41d5a161a77"
                    ]
                },
                {
                    "command": [
                        "exact mul_add_distr_r.",
                        "VernacExtend",
                        "47545423e44adfaf231220bea1e5bd7988eb1e59"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply add_opp_r.",
                        "VernacExtend",
                        "ed962bd72c75f92720fa19d4543ecab0b9d84766"
                    ]
                },
                {
                    "command": [
                        "exact add_opp_diag_r.",
                        "VernacExtend",
                        "47ffe1b3931e4e74fd566ecc2787420260bd3795"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqb_eq",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold eqb, eq.",
                        "VernacExtend",
                        "55d925924202b0ffbe04190854f3339e64a735e2"
                    ]
                },
                {
                    "command": [
                        "rewrite ZnZ.spec_compare.",
                        "VernacExtend",
                        "1086d798bff1da9fda7a260e11582048664e0b0a"
                    ]
                },
                {
                    "command": [
                        "case Z.compare_spec; intuition; try discriminate.",
                        "VernacExtend",
                        "6868da1c33433e7e366b91993d7b976855b8d0d5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqb_correct",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "now apply eqb_eq.",
                        "VernacExtend",
                        "238eff1a464b479561b20de93fde6a4f9102d1dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}