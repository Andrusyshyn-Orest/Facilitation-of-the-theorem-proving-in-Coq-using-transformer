{
    "filename": "theories/Arith/Euclid.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Mult.",
            "VernacRequire",
            "2f212547234b36011df39fc4af8aa026cbf75aee"
        ],
        [
            "Require Import Compare_dec.",
            "VernacRequire",
            "96b495dc82d6bd54e62353acae7d6e61222564e6"
        ],
        [
            "Require Import Wf_nat.",
            "VernacRequire",
            "e78e8b6524a9771b7c95f37880c2b88f96465784"
        ],
        [
            "Local Open Scope nat_scope.",
            "VernacOpenCloseScope",
            "7386604700c7eb05ef0ae2947828bc909568dab7"
        ],
        [
            "Implicit Types a b n q r : nat.",
            "VernacReserve",
            "614f3a30fafce6ca7ac25316e22aea07f48c5f4f"
        ],
        [
            "Inductive diveucl a b : Set := divex : forall q r, b > r -> a = q * b + r -> diveucl a b.",
            "VernacInductive",
            "f6581f92506ef9578403760f3a4919a74df5e165"
        ],
        [
            "Lemma eucl_dev : forall n, n > 0 -> forall m:nat, diveucl m n.",
            "VernacStartTheoremProof",
            "dd1c11a8c4ea2b46ceb0bf2c51c3b7a77d2f29db"
        ],
        [
            "induction m as (m,H0) using gt_wf_rec.",
            "VernacExtend",
            "5517fc1bdb5b4c31ae825ed0f0e0f4c9a52cb80d"
        ],
        [
            "destruct (le_gt_dec n m) as [Hlebn|Hgtbn].",
            "VernacExtend",
            "014ebf08959d2e017ab9889a68aa1686a2612fd8"
        ],
        [
            "destruct (H0 (m - n)) as (q,r,Hge0,Heq); auto with arith.",
            "VernacExtend",
            "da59a8caa9a02adc8f0ed49f268f009a0c3b66dd"
        ],
        [
            "apply divex with (S q) r; trivial.",
            "VernacExtend",
            "1bda312accadd447613531ddcdc06db3abbed422"
        ],
        [
            "simpl; rewrite <- plus_assoc, <- Heq; auto with arith.",
            "VernacExtend",
            "87f71c20ba1ec163e0cd93356fc2f0dbb5bce51b"
        ],
        [
            "apply divex with 0 m; simpl; trivial.",
            "VernacExtend",
            "761f3840e1ea39729e20f321b7e945a54db7c0c4"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma quotient : forall n, n > 0 -> forall m:nat, {q : nat | exists r : nat, m = q * n + r /\\ n > r}.",
            "VernacStartTheoremProof",
            "834ff6f7bf5101ab77741302525db41b7b10692a"
        ],
        [
            "induction m as (m,H0) using gt_wf_rec.",
            "VernacExtend",
            "5517fc1bdb5b4c31ae825ed0f0e0f4c9a52cb80d"
        ],
        [
            "destruct (le_gt_dec n m) as [Hlebn|Hgtbn].",
            "VernacExtend",
            "014ebf08959d2e017ab9889a68aa1686a2612fd8"
        ],
        [
            "destruct (H0 (m - n)) as (q & Hq); auto with arith; exists (S q).",
            "VernacExtend",
            "c94ee48f98b53a6eff92bbc4449523dcc58f1a69"
        ],
        [
            "destruct Hq as (r & Heq & Hgt); exists r; split; trivial.",
            "VernacExtend",
            "5c8062048ea6118b57b15f792093b9e33e6a109b"
        ],
        [
            "simpl; rewrite <- plus_assoc, <- Heq; auto with arith.",
            "VernacExtend",
            "87f71c20ba1ec163e0cd93356fc2f0dbb5bce51b"
        ],
        [
            "exists 0; exists m; simpl; auto with arith.",
            "VernacExtend",
            "0c39e36ca50d46f80ad5446ea1f32de5017c1704"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma modulo : forall n, n > 0 -> forall m:nat, {r : nat | exists q : nat, m = q * n + r /\\ n > r}.",
            "VernacStartTheoremProof",
            "e3d89786cb63f64c0203e07776b93a29dedec048"
        ],
        [
            "induction m as (m,H0) using gt_wf_rec.",
            "VernacExtend",
            "5517fc1bdb5b4c31ae825ed0f0e0f4c9a52cb80d"
        ],
        [
            "destruct (le_gt_dec n m) as [Hlebn|Hgtbn].",
            "VernacExtend",
            "014ebf08959d2e017ab9889a68aa1686a2612fd8"
        ],
        [
            "destruct (H0 (m - n)) as (r & Hr); auto with arith; exists r.",
            "VernacExtend",
            "0fd2fb7d66514ae9ebb55cfe53a7094e53208b35"
        ],
        [
            "destruct Hr as (q & Heq & Hgt); exists (S q); split; trivial.",
            "VernacExtend",
            "467802cdca28161cdd2940bf22944de6733a357e"
        ],
        [
            "simpl; rewrite <- plus_assoc, <- Heq; auto with arith.",
            "VernacExtend",
            "87f71c20ba1ec163e0cd93356fc2f0dbb5bce51b"
        ],
        [
            "exists m; exists 0; simpl; auto with arith.",
            "VernacExtend",
            "54b5acc0336ca14c058ea24ca7c4c5d3df40d57f"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ]
    ],
    "proofs": [
        {
            "name": "eucl_dev",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "induction m as (m,H0) using gt_wf_rec.",
                        "VernacExtend",
                        "5517fc1bdb5b4c31ae825ed0f0e0f4c9a52cb80d"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_dec n m) as [Hlebn|Hgtbn].",
                        "VernacExtend",
                        "014ebf08959d2e017ab9889a68aa1686a2612fd8"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 (m - n)) as (q,r,Hge0,Heq); auto with arith.",
                        "VernacExtend",
                        "da59a8caa9a02adc8f0ed49f268f009a0c3b66dd"
                    ]
                },
                {
                    "command": [
                        "apply divex with (S q) r; trivial.",
                        "VernacExtend",
                        "1bda312accadd447613531ddcdc06db3abbed422"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite <- plus_assoc, <- Heq; auto with arith.",
                        "VernacExtend",
                        "87f71c20ba1ec163e0cd93356fc2f0dbb5bce51b"
                    ]
                },
                {
                    "command": [
                        "apply divex with 0 m; simpl; trivial.",
                        "VernacExtend",
                        "761f3840e1ea39729e20f321b7e945a54db7c0c4"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "quotient",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "induction m as (m,H0) using gt_wf_rec.",
                        "VernacExtend",
                        "5517fc1bdb5b4c31ae825ed0f0e0f4c9a52cb80d"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_dec n m) as [Hlebn|Hgtbn].",
                        "VernacExtend",
                        "014ebf08959d2e017ab9889a68aa1686a2612fd8"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 (m - n)) as (q & Hq); auto with arith; exists (S q).",
                        "VernacExtend",
                        "c94ee48f98b53a6eff92bbc4449523dcc58f1a69"
                    ]
                },
                {
                    "command": [
                        "destruct Hq as (r & Heq & Hgt); exists r; split; trivial.",
                        "VernacExtend",
                        "5c8062048ea6118b57b15f792093b9e33e6a109b"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite <- plus_assoc, <- Heq; auto with arith.",
                        "VernacExtend",
                        "87f71c20ba1ec163e0cd93356fc2f0dbb5bce51b"
                    ]
                },
                {
                    "command": [
                        "exists 0; exists m; simpl; auto with arith.",
                        "VernacExtend",
                        "0c39e36ca50d46f80ad5446ea1f32de5017c1704"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "modulo",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "induction m as (m,H0) using gt_wf_rec.",
                        "VernacExtend",
                        "5517fc1bdb5b4c31ae825ed0f0e0f4c9a52cb80d"
                    ]
                },
                {
                    "command": [
                        "destruct (le_gt_dec n m) as [Hlebn|Hgtbn].",
                        "VernacExtend",
                        "014ebf08959d2e017ab9889a68aa1686a2612fd8"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 (m - n)) as (r & Hr); auto with arith; exists r.",
                        "VernacExtend",
                        "0fd2fb7d66514ae9ebb55cfe53a7094e53208b35"
                    ]
                },
                {
                    "command": [
                        "destruct Hr as (q & Heq & Hgt); exists (S q); split; trivial.",
                        "VernacExtend",
                        "467802cdca28161cdd2940bf22944de6733a357e"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite <- plus_assoc, <- Heq; auto with arith.",
                        "VernacExtend",
                        "87f71c20ba1ec163e0cd93356fc2f0dbb5bce51b"
                    ]
                },
                {
                    "command": [
                        "exists m; exists 0; simpl; auto with arith.",
                        "VernacExtend",
                        "54b5acc0336ca14c058ea24ca7c4c5d3df40d57f"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}