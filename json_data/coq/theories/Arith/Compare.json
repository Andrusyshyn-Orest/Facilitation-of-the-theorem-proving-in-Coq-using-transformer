{
    "filename": "theories/Arith/Compare.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Local Open Scope nat_scope.",
            "VernacOpenCloseScope",
            "7386604700c7eb05ef0ae2947828bc909568dab7"
        ],
        [
            "Notation not_eq_sym := not_eq_sym (only parsing).",
            "VernacSyntacticDefinition",
            "401ade6f7330a1763248bc8e58959ddc8990f60a"
        ],
        [
            "Implicit Types m n p q : nat.",
            "VernacReserve",
            "7b06f0cb95cbe46e18b08ed6d51b2f9da5f7dedf"
        ],
        [
            "Require Import Arith_base.",
            "VernacRequire",
            "0a5c71c154a46f7c67196ddbc87d0f1a6854b630"
        ],
        [
            "Require Import Peano_dec.",
            "VernacRequire",
            "5f49ca778918c88f400242f11d696ec23079b44f"
        ],
        [
            "Require Import Compare_dec.",
            "VernacRequire",
            "96b495dc82d6bd54e62353acae7d6e61222564e6"
        ],
        [
            "Definition le_or_le_S := le_le_S_dec.",
            "VernacDefinition",
            "c62e03bd9d3456dfea2a5bcb4b93dd3ca27d47bc"
        ],
        [
            "Definition Pcompare := gt_eq_gt_dec.",
            "VernacDefinition",
            "698a4c5345420d9e44ec3e7106b9cb98d9b9e17b"
        ],
        [
            "Lemma le_dec : forall n m, {n <= m} + {m <= n}.",
            "VernacStartTheoremProof",
            "4a418d705bfa01892abe00648e9db353000c9309"
        ],
        [
            "Proof le_ge_dec.",
            "VernacExactProof",
            "97a1a3ee1ffe7df026e112fd4ab2896c5f378f9e"
        ],
        [
            "Definition lt_or_eq n m := {m > n} + {n = m}.",
            "VernacDefinition",
            "39af8bf66e41db9f2adbb83b69567db941ee9f81"
        ],
        [
            "Lemma le_decide : forall n m, n <= m -> lt_or_eq n m.",
            "VernacStartTheoremProof",
            "ab9ecec8ef06389dbbbc18525dfc31993fbd8f35"
        ],
        [
            "Proof le_lt_eq_dec.",
            "VernacExactProof",
            "e68a97423c2705a381d3d3316a0b6c7cbdbdd134"
        ],
        [
            "Lemma le_le_S_eq : forall n m, n <= m -> S n <= m \\/ n = m.",
            "VernacStartTheoremProof",
            "2754f668cc8a55ead1a654a9937bc6cf1e0533cf"
        ],
        [
            "Proof le_lt_or_eq.",
            "VernacExactProof",
            "bb7afaacd60f460eeeced72be4686dcea7a33dab"
        ],
        [
            "Lemma discrete_nat : forall n m, n < m -> S n = m \\/ (exists r : nat, m = S (S (n + r))).",
            "VernacStartTheoremProof",
            "78008ab21270eeced409c02e182be2c93247b6ee"
        ],
        [
            "intros m n H.",
            "VernacExtend",
            "284eaf42bc214a5a61616eb19b0aa015fc738ee1"
        ],
        [
            "lapply (lt_le_S m n); auto with arith.",
            "VernacExtend",
            "ad4b183531192b17c39c08bcf8978b1c8873437d"
        ],
        [
            "intro H'; lapply (le_lt_or_eq (S m) n); auto with arith.",
            "VernacExtend",
            "34a25a83b71ef53fdda14b33c13d3f8413f4a27f"
        ],
        [
            "induction 1; auto with arith.",
            "VernacExtend",
            "aae5ec6b81adcf04080b60c064a11e2b464bb34f"
        ],
        [
            "right; exists (n - S (S m)); simpl.",
            "VernacExtend",
            "ca920bf11622b73e4610bafba99f9f264cce007b"
        ],
        [
            "rewrite (plus_comm m (n - S (S m))).",
            "VernacExtend",
            "929024c9fdde2b5186dcb8b7d4a723300f62a60f"
        ],
        [
            "rewrite (plus_n_Sm (n - S (S m)) m).",
            "VernacExtend",
            "b760e7419d3ab84ebe05f38dc83ce3b0512196a3"
        ],
        [
            "rewrite (plus_n_Sm (n - S (S m)) (S m)).",
            "VernacExtend",
            "f3c78a72704b1d836993d14380b6f1b54e7a86ee"
        ],
        [
            "rewrite (plus_comm (n - S (S m)) (S (S m))); auto with arith.",
            "VernacExtend",
            "8e1850a670588a1a054155cf7f176f3d4b617ab8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Require Export Wf_nat.",
            "VernacRequire",
            "287253697823c346b4d8375b73e4c5bcf429af23"
        ],
        [
            "Require Export Min Max.",
            "VernacRequire",
            "3e2f27c2c8fca00bfca11304265b2c61cd0a5047"
        ]
    ],
    "proofs": [
        {
            "name": "discrete_nat",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros m n H.",
                        "VernacExtend",
                        "284eaf42bc214a5a61616eb19b0aa015fc738ee1"
                    ]
                },
                {
                    "command": [
                        "lapply (lt_le_S m n); auto with arith.",
                        "VernacExtend",
                        "ad4b183531192b17c39c08bcf8978b1c8873437d"
                    ]
                },
                {
                    "command": [
                        "intro H'; lapply (le_lt_or_eq (S m) n); auto with arith.",
                        "VernacExtend",
                        "34a25a83b71ef53fdda14b33c13d3f8413f4a27f"
                    ]
                },
                {
                    "command": [
                        "induction 1; auto with arith.",
                        "VernacExtend",
                        "aae5ec6b81adcf04080b60c064a11e2b464bb34f"
                    ]
                },
                {
                    "command": [
                        "right; exists (n - S (S m)); simpl.",
                        "VernacExtend",
                        "ca920bf11622b73e4610bafba99f9f264cce007b"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_comm m (n - S (S m))).",
                        "VernacExtend",
                        "929024c9fdde2b5186dcb8b7d4a723300f62a60f"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_n_Sm (n - S (S m)) m).",
                        "VernacExtend",
                        "b760e7419d3ab84ebe05f38dc83ce3b0512196a3"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_n_Sm (n - S (S m)) (S m)).",
                        "VernacExtend",
                        "f3c78a72704b1d836993d14380b6f1b54e7a86ee"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_comm (n - S (S m)) (S (S m))); auto with arith.",
                        "VernacExtend",
                        "8e1850a670588a1a054155cf7f176f3d4b617ab8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}