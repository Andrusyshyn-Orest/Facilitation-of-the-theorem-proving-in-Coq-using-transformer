{
    "filename": "theories/Structures/Orders.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export Relations Morphisms Setoid Equalities.",
            "VernacRequire",
            "538a80c24c48009fcd1d715bab2fa79250d8e697"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Module Type HasLt (Import T:Typ).",
            "VernacDeclareModuleType",
            "26a918e11a34afecaac8af1e43c972ab1d6d6664"
        ],
        [
            "Parameter Inline(40) lt : t -> t -> Prop.",
            "VernacAssumption",
            "9e3ec70c246b391a9875070846adc7f17d769d94"
        ],
        [
            "End HasLt.",
            "VernacEndSegment",
            "e984f6525e37ae442bde386bbe6b7fdf4f43f728"
        ],
        [
            "Module Type HasLe (Import T:Typ).",
            "VernacDeclareModuleType",
            "8e2c3ab8e7c9b1d83a07ca97a8e1d36c58258064"
        ],
        [
            "Parameter Inline(40) le : t -> t -> Prop.",
            "VernacAssumption",
            "21ed73012b69623c163ab30b85cecaac7cfaf7fd"
        ],
        [
            "End HasLe.",
            "VernacEndSegment",
            "5ac349aeaf7f00db08cf8cf52d2c1f05d0d3366a"
        ],
        [
            "Module Type EqLt := Typ <+ HasEq <+ HasLt.",
            "VernacDeclareModuleType",
            "c012a4e2c2359b6337c705a25773091bf84259ad"
        ],
        [
            "Module Type EqLe := Typ <+ HasEq <+ HasLe.",
            "VernacDeclareModuleType",
            "9f07eefd2a192ceda61b14adcb90a099e6fe2fc1"
        ],
        [
            "Module Type EqLtLe := Typ <+ HasEq <+ HasLt <+ HasLe.",
            "VernacDeclareModuleType",
            "4bef86f5ca744e880f9db3047b6f75ae78a652f8"
        ],
        [
            "Module Type LtNotation (E:EqLt).",
            "VernacDeclareModuleType",
            "e4b1d8e0edc9bc47dc6f71363f80e71f11a90d1d"
        ],
        [
            "Infix \"<\" := E.lt.",
            "VernacInfix",
            "1f8eaf240d1ce4f6cb83a071279ffc779bff1831"
        ],
        [
            "Notation \"x > y\" := (y<x) (only parsing).",
            "VernacNotation",
            "da7d244a295a35daa77a3f2087224664b6c70c13"
        ],
        [
            "Notation \"x < y < z\" := (x<y /\\ y<z).",
            "VernacNotation",
            "1fdae47f88aea773497ebbe08e30f2a08c75484a"
        ],
        [
            "End LtNotation.",
            "VernacEndSegment",
            "9bff57960aa36daa07f3418dba7fe1a22b4d3466"
        ],
        [
            "Module Type LeNotation (E:EqLe).",
            "VernacDeclareModuleType",
            "f0cdcd2929a886a3581b2fb40ba063ab9450fe0b"
        ],
        [
            "Infix \"<=\" := E.le.",
            "VernacInfix",
            "96cfb2f633b11663f87c5e10547fbbfdeda11aaf"
        ],
        [
            "Notation \"x >= y\" := (y<=x) (only parsing).",
            "VernacNotation",
            "99c17682b9221bbe8e5e7f7cbddc4c0d4a54f33f"
        ],
        [
            "Notation \"x <= y <= z\" := (x<=y /\\ y<=z).",
            "VernacNotation",
            "3710038e2f612db75fa1fd7164d0852c12684932"
        ],
        [
            "End LeNotation.",
            "VernacEndSegment",
            "9ce3e79e3409900c12293025665559da52533237"
        ],
        [
            "Module Type LtLeNotation (E:EqLtLe).",
            "VernacDeclareModuleType",
            "412ea6439a67bc3579e2ea09b7277a59247af36f"
        ],
        [
            "Include LtNotation E <+ LeNotation E.",
            "VernacInclude",
            "a816495f5fccfb52d502e7dbce5551367b74efb4"
        ],
        [
            "Notation \"x <= y < z\" := (x<=y /\\ y<z).",
            "VernacNotation",
            "cf4024194f4e096774321b760b554c43f9f7c0ab"
        ],
        [
            "Notation \"x < y <= z\" := (x<y /\\ y<=z).",
            "VernacNotation",
            "fb09ebb99a8fa4561e1474734eba7ecf24f45951"
        ],
        [
            "End LtLeNotation.",
            "VernacEndSegment",
            "bfade7fcf082d6a735cd7c1a0bc72a63a195f5f0"
        ],
        [
            "Module Type EqLtNotation (E:EqLt) := EqNotation E <+ LtNotation E.",
            "VernacDeclareModuleType",
            "222e85917e7679d86a354ee917d0dad492eb70b1"
        ],
        [
            "Module Type EqLeNotation (E:EqLe) := EqNotation E <+ LeNotation E.",
            "VernacDeclareModuleType",
            "8603c2778fe8d2d2707d7bf8ed5fff9ff541c26b"
        ],
        [
            "Module Type EqLtLeNotation (E:EqLtLe) := EqNotation E <+ LtLeNotation E.",
            "VernacDeclareModuleType",
            "c52e3389ce7b8b40becf37aa578b882c3fff76db"
        ],
        [
            "Module Type EqLt' := EqLt <+ EqLtNotation.",
            "VernacDeclareModuleType",
            "ac780b2d90170799168741c7d76b287ae6de7579"
        ],
        [
            "Module Type EqLe' := EqLe <+ EqLeNotation.",
            "VernacDeclareModuleType",
            "a30c41fc893d8cea896834479a02777cbbb46961"
        ],
        [
            "Module Type EqLtLe' := EqLtLe <+ EqLtLeNotation.",
            "VernacDeclareModuleType",
            "69ee586289878dc55c77ca316cae568052bddc60"
        ],
        [
            "Module Type IsStrOrder (Import E:EqLt).",
            "VernacDeclareModuleType",
            "2d74936d08d4f01fe9f009f2608622af607a5d51"
        ],
        [
            "Declare Instance lt_strorder : StrictOrder lt.",
            "VernacInstance",
            "9795d8442ef3d6fb86b62732fb5d54e15cc185c2"
        ],
        [
            "Declare Instance lt_compat : Proper (eq==>eq==>iff) lt.",
            "VernacInstance",
            "63a7d0acad8dc46c6e6fc4898846303664cd6565"
        ],
        [
            "End IsStrOrder.",
            "VernacEndSegment",
            "c758231c32d01c0b63ed612e7da53ce135e2163d"
        ],
        [
            "Module Type LeIsLtEq (Import E:EqLtLe').",
            "VernacDeclareModuleType",
            "df58e4fa1804747014c10ccb42e014f7e906907e"
        ],
        [
            "Axiom le_lteq : forall x y, x<=y <-> x<y \\/ x==y.",
            "VernacAssumption",
            "399e24a7cb9c91e75c3463fc0f16b95b95b22f3e"
        ],
        [
            "End LeIsLtEq.",
            "VernacEndSegment",
            "7ceb34fae55157d0a00933e4d777c0ca0113e7e1"
        ],
        [
            "Module Type StrOrder := EqualityType <+ HasLt <+ IsStrOrder.",
            "VernacDeclareModuleType",
            "e96e888fab485f312977c5b96ce4650b6832ade1"
        ],
        [
            "Module Type StrOrder' := StrOrder <+ EqLtNotation.",
            "VernacDeclareModuleType",
            "7c58afe77547c723ac36cac125d0cdb7c1877314"
        ],
        [
            "Module Type HasCmp (Import T:Typ).",
            "VernacDeclareModuleType",
            "c068166552c139bd7dca978efcc346bd0eda63bb"
        ],
        [
            "Parameter Inline compare : t -> t -> comparison.",
            "VernacAssumption",
            "23be309bbe7c92a8a5f99a2b1f755c3bf38ed13c"
        ],
        [
            "End HasCmp.",
            "VernacEndSegment",
            "1456f16c1d4602eeea1ad539e52c53ffe5e191b4"
        ],
        [
            "Module Type CmpNotation (T:Typ)(C:HasCmp T).",
            "VernacDeclareModuleType",
            "bfd22315030cbbb51c46ca86449a73b9d2c892cd"
        ],
        [
            "Infix \"?=\" := C.compare (at level 70, no associativity).",
            "VernacInfix",
            "69df044e88bec94cb498ad8c696e69b161f95eed"
        ],
        [
            "End CmpNotation.",
            "VernacEndSegment",
            "ffb34ee2f7ce6c4836f40660bab874208853057e"
        ],
        [
            "Module Type CmpSpec (Import E:EqLt')(Import C:HasCmp E).",
            "VernacDeclareModuleType",
            "021753890eb15f209d7a11e2327cc694c838fd39"
        ],
        [
            "Axiom compare_spec : forall x y, CompareSpec (x==y) (x<y) (y<x) (compare x y).",
            "VernacAssumption",
            "c97d2c8e188c55b55d22b4fa8279db4b943a4199"
        ],
        [
            "End CmpSpec.",
            "VernacEndSegment",
            "9052828b142df0624acd878e3a0d3aac71d7db9f"
        ],
        [
            "Module Type HasCompare (E:EqLt) := HasCmp E <+ CmpSpec E.",
            "VernacDeclareModuleType",
            "d0fb0bad4cf76e38a0ecd38fb869b17bf788e1fa"
        ],
        [
            "Module Type DecStrOrder := StrOrder <+ HasCompare.",
            "VernacDeclareModuleType",
            "3f996a80eeb7416414e9ea805d1929caa24ebcd4"
        ],
        [
            "Module Type DecStrOrder' := DecStrOrder <+ EqLtNotation <+ CmpNotation.",
            "VernacDeclareModuleType",
            "a68571f5adce65e7c090c1ac69eac022031402b2"
        ],
        [
            "Module Type OrderedType <: DecidableType := DecStrOrder <+ HasEqDec.",
            "VernacDeclareModuleType",
            "3f640e62d32cb27dd6250d998014a6f3f324928e"
        ],
        [
            "Module Type OrderedType' := OrderedType <+ EqLtNotation <+ CmpNotation.",
            "VernacDeclareModuleType",
            "5ea1a699393c067fbd793c849659e91711dbae94"
        ],
        [
            "Module Type OrderedTypeFull := OrderedType <+ HasLe <+ LeIsLtEq.",
            "VernacDeclareModuleType",
            "b13867c30c531cfe5f8ac8fc81846057996cca42"
        ],
        [
            "Module Type OrderedTypeFull' := OrderedTypeFull <+ EqLtLeNotation <+ CmpNotation.",
            "VernacDeclareModuleType",
            "76d850edcdc7165f96f5403ece53456db20ee6e0"
        ],
        [
            "Module Type UsualStrOrder := UsualEqualityType <+ HasLt <+ IsStrOrder.",
            "VernacDeclareModuleType",
            "cfe26cf2453ecf9cd0c8e09f09d83bf67f671721"
        ],
        [
            "Module Type UsualDecStrOrder := UsualStrOrder <+ HasCompare.",
            "VernacDeclareModuleType",
            "839bfe7ab329a1422bde2aa608b6395ca0a5eac5"
        ],
        [
            "Module Type UsualOrderedType <: UsualDecidableType <: OrderedType := UsualDecStrOrder <+ HasEqDec.",
            "VernacDeclareModuleType",
            "4c4a8a682d67f958edc2fe604191fc81fe47b087"
        ],
        [
            "Module Type UsualOrderedTypeFull := UsualOrderedType <+ HasLe <+ LeIsLtEq.",
            "VernacDeclareModuleType",
            "4c70f5080201ef832df7e2004d0131a3aa6ccbec"
        ],
        [
            "Module Type UsualStrOrder' := UsualStrOrder <+ LtNotation.",
            "VernacDeclareModuleType",
            "eb40057de28e5057eca657130bb95f6af2ece722"
        ],
        [
            "Module Type UsualDecStrOrder' := UsualDecStrOrder <+ LtNotation.",
            "VernacDeclareModuleType",
            "b0d06f4a2f21fa32407c036f38fac5da9b4bba52"
        ],
        [
            "Module Type UsualOrderedType' := UsualOrderedType <+ LtNotation.",
            "VernacDeclareModuleType",
            "764e46d42c0855dde329b1cc82e05e2a022f82bc"
        ],
        [
            "Module Type UsualOrderedTypeFull' := UsualOrderedTypeFull <+ LtLeNotation.",
            "VernacDeclareModuleType",
            "af3a2382d39b245e3335ced0beba1bbb1d9d8649"
        ],
        [
            "Module Type LtIsTotal (Import E:EqLt').",
            "VernacDeclareModuleType",
            "3887c0913418f0c8b9294052b7627843bb300bc2"
        ],
        [
            "Axiom lt_total : forall x y, x<y \\/ x==y \\/ y<x.",
            "VernacAssumption",
            "3a116f506b4f4af96e8a042e9e62524dd626061e"
        ],
        [
            "End LtIsTotal.",
            "VernacEndSegment",
            "3e7c1f4160c0f7895736d3cc957e0a2b6d75c5ad"
        ],
        [
            "Module Type TotalOrder := StrOrder <+ HasLe <+ LeIsLtEq <+ LtIsTotal.",
            "VernacDeclareModuleType",
            "23f2e75825687e48cfa72c839f353ec059c3a2ec"
        ],
        [
            "Module Type UsualTotalOrder <: TotalOrder := UsualStrOrder <+ HasLe <+ LeIsLtEq <+ LtIsTotal.",
            "VernacDeclareModuleType",
            "cb8e04f5730f79ade4fb6e925859683981d03881"
        ],
        [
            "Module Type TotalOrder' := TotalOrder <+ EqLtLeNotation.",
            "VernacDeclareModuleType",
            "70aae8e9b15d14e8314cabcaedde2dd937198fba"
        ],
        [
            "Module Type UsualTotalOrder' := UsualTotalOrder <+ LtLeNotation.",
            "VernacDeclareModuleType",
            "80d7dfce96502a153456eb8514c7e01eb059c71d"
        ],
        [
            "Module Compare2EqBool (Import O:DecStrOrder') <: HasEqBool O.",
            "VernacDefineModule",
            "7b3d8034a3333834c2f9231459374a13399612cb"
        ],
        [
            "Definition eqb x y := match compare x y with Eq => true | _ => false end.",
            "VernacDefinition",
            "721d79d902bd9f13f94559ed2e29d685ab0db3b9"
        ],
        [
            "Lemma eqb_eq : forall x y, eqb x y = true <-> x==y.",
            "VernacStartTheoremProof",
            "36f7581b53d307fd44a385c1b82ff3c9de8f6cd8"
        ],
        [
            "unfold eqb.",
            "VernacExtend",
            "f9e717295e72955f079840f1bebf6c7bb720ca43"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "destruct (compare_spec x y) as [H|H|H]; split; auto; try discriminate.",
            "VernacExtend",
            "7a71d7e5ac5ca79353ff983a18caa83d6125adf1"
        ],
        [
            "intros EQ; rewrite EQ in H; elim (StrictOrder_Irreflexive _ H).",
            "VernacExtend",
            "502ff95d4221c745e04ddcd69445f6132b8252a2"
        ],
        [
            "intros EQ; rewrite EQ in H; elim (StrictOrder_Irreflexive _ H).",
            "VernacExtend",
            "502ff95d4221c745e04ddcd69445f6132b8252a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Compare2EqBool.",
            "VernacEndSegment",
            "69968b2bea3ddb064ab1ce4a94c290e9936d61ab"
        ],
        [
            "Module DSO_to_OT (O:DecStrOrder) <: OrderedType := O <+ Compare2EqBool <+ HasEqBool2Dec.",
            "VernacDefineModule",
            "3558efcfe090ef794816e48cd7691e42976691f5"
        ],
        [
            "Module OT_to_Full (O:OrderedType') <: OrderedTypeFull.",
            "VernacDefineModule",
            "c7d187b6a2e39330ed50fac9da211b17909991ce"
        ],
        [
            "Include O.",
            "VernacInclude",
            "f0eed8d0de6c957b79e47c0d073bb8eaad9a78c5"
        ],
        [
            "Definition le x y := x<y \\/ x==y.",
            "VernacDefinition",
            "d22ffeff82059c52cd6a4e83ffbc276f869dd147"
        ],
        [
            "Lemma le_lteq : forall x y, le x y <-> x<y \\/ x==y.",
            "VernacStartTheoremProof",
            "fcbf6b6c17eff64a2edb11d56f4e1ea5a7fbc131"
        ],
        [
            "unfold le; split; auto.",
            "VernacExtend",
            "a1165b08d27656c603d048a464de6df2f63e9667"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OT_to_Full.",
            "VernacEndSegment",
            "6a07064d9bbaa6c3cd9ffdbe24995e6b26d5d675"
        ],
        [
            "Module OTF_LtIsTotal (Import O:OrderedTypeFull') <: LtIsTotal O.",
            "VernacDefineModule",
            "088b6d1ddf22482e884e87adb4118f079d0befba"
        ],
        [
            "Lemma lt_total : forall x y, x<y \\/ x==y \\/ y<x.",
            "VernacStartTheoremProof",
            "ae9c4b3979d042197c65917dbc8ca0e8463a631e"
        ],
        [
            "intros; destruct (compare_spec x y); auto.",
            "VernacExtend",
            "23e74bdff37cf342be95dc186bb32a006b924951"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OTF_LtIsTotal.",
            "VernacEndSegment",
            "ae8b9d6341571622df836dffe610182b64a88a8d"
        ],
        [
            "Module OTF_to_TotalOrder (O:OrderedTypeFull) <: TotalOrder := O <+ OTF_LtIsTotal.",
            "VernacDefineModule",
            "8bccc6135d07220f7dccc3f4414ef1f22d3614d0"
        ],
        [
            "Local Coercion is_true : bool >-> Sortclass.",
            "VernacCoercion",
            "bfeea8b9a217c39aa3c15fad2fd390e702126cd2"
        ],
        [
            "Hint Unfold is_true.",
            "VernacHints",
            "d53340b97790e76bc44a4396fcccd397204fdbce"
        ],
        [
            "Module Type HasLeb (Import T:Typ).",
            "VernacDeclareModuleType",
            "5f0cc3f43292d20c675e5ece30b55a02927ff192"
        ],
        [
            "Parameter Inline leb : t -> t -> bool.",
            "VernacAssumption",
            "e3d0189a6acc1299529ad67a6585e0628674c53f"
        ],
        [
            "End HasLeb.",
            "VernacEndSegment",
            "85de1df9ac0b1f6478dcf11df0fc5789865ed96a"
        ],
        [
            "Module Type HasLtb (Import T:Typ).",
            "VernacDeclareModuleType",
            "8268bea7c0399723fbfb463b1c1a5aabb01d1454"
        ],
        [
            "Parameter Inline ltb : t -> t -> bool.",
            "VernacAssumption",
            "43a425a55175d06e23f424f0361ac64b5c0ddf45"
        ],
        [
            "End HasLtb.",
            "VernacEndSegment",
            "69b74a54fe6f8a7c0acc5ee8b77ec2ee772d2b67"
        ],
        [
            "Module Type LebNotation (T:Typ)(E:HasLeb T).",
            "VernacDeclareModuleType",
            "06802e85ebbce9da4ab25ea7f8e3ebb3a0b47d97"
        ],
        [
            "Infix \"<=?\" := E.leb (at level 35).",
            "VernacInfix",
            "ce156ab1feca4d2672fa84e95fa2a2e41d0a1b80"
        ],
        [
            "End LebNotation.",
            "VernacEndSegment",
            "f6894c641800b207155f1b0138c7911c5476836d"
        ],
        [
            "Module Type LtbNotation (T:Typ)(E:HasLtb T).",
            "VernacDeclareModuleType",
            "6c3f9a0db45e1af37fd27c84a26cdd4c5b35629f"
        ],
        [
            "Infix \"<?\" := E.ltb (at level 35).",
            "VernacInfix",
            "1a5e429b981162d6c0d3bdf661e3aa1e45df3e0e"
        ],
        [
            "End LtbNotation.",
            "VernacEndSegment",
            "09c097e8195641d66773be6f7de3ff52fe627006"
        ],
        [
            "Module Type LebSpec (T:Typ)(X:HasLe T)(Y:HasLeb T).",
            "VernacDeclareModuleType",
            "16df537a56f21eacb91c34c15aa960a66e24974b"
        ],
        [
            "Parameter leb_le : forall x y, Y.leb x y = true <-> X.le x y.",
            "VernacAssumption",
            "95af6f33580cf8850edc07af56fbf52b26cf4929"
        ],
        [
            "End LebSpec.",
            "VernacEndSegment",
            "f4e63984679c83f6be893094c752d2f64be4d8f6"
        ],
        [
            "Module Type LtbSpec (T:Typ)(X:HasLt T)(Y:HasLtb T).",
            "VernacDeclareModuleType",
            "cccbcdd43e499d9de2a9bc6e5f9f15db5dab3d78"
        ],
        [
            "Parameter ltb_lt : forall x y, Y.ltb x y = true <-> X.lt x y.",
            "VernacAssumption",
            "1a90f547d84f84508fb227ee2a7930570ce6469d"
        ],
        [
            "End LtbSpec.",
            "VernacEndSegment",
            "ff934d437b0cb109a79e74eaff5ce45cb3bda7af"
        ],
        [
            "Module Type LeBool := Typ <+ HasLeb.",
            "VernacDeclareModuleType",
            "306e7320cc0a12cef554326db493f6391f9d7723"
        ],
        [
            "Module Type LtBool := Typ <+ HasLtb.",
            "VernacDeclareModuleType",
            "ca7dbfc679d1ab7e24974586650f47b3c5e1f575"
        ],
        [
            "Module Type LeBool' := LeBool <+ LebNotation.",
            "VernacDeclareModuleType",
            "d165337580b77e6cb4bd43d26b37c66260c9d9e0"
        ],
        [
            "Module Type LtBool' := LtBool <+ LtbNotation.",
            "VernacDeclareModuleType",
            "153d16b521e936f5b67f22c99e6744f04c45976c"
        ],
        [
            "Module Type LebIsTotal (Import X:LeBool').",
            "VernacDeclareModuleType",
            "edc8bf6972b26a5bf73cb8ed530f58ce994b30fa"
        ],
        [
            "Axiom leb_total : forall x y, (x <=? y) = true \\/ (y <=? x) = true.",
            "VernacAssumption",
            "ba0bd06a52b37e215ea62882dfabca65dc4c0ff3"
        ],
        [
            "End LebIsTotal.",
            "VernacEndSegment",
            "688b7609bbe43068cc6bde045358624f772944f1"
        ],
        [
            "Module Type TotalLeBool := LeBool <+ LebIsTotal.",
            "VernacDeclareModuleType",
            "d08ce35e1bb12238eccc18a6e560f1fb3925f1ef"
        ],
        [
            "Module Type TotalLeBool' := LeBool' <+ LebIsTotal.",
            "VernacDeclareModuleType",
            "42220f5b55d1b4f8dcbf2919c3add4236c49451b"
        ],
        [
            "Module Type LebIsTransitive (Import X:LeBool').",
            "VernacDeclareModuleType",
            "3fc97507b12e82de035672979671ff7e8791584b"
        ],
        [
            "Axiom leb_trans : Transitive X.leb.",
            "VernacAssumption",
            "577f6a84fe09806dde9acf4ff600db950866dfc0"
        ],
        [
            "End LebIsTransitive.",
            "VernacEndSegment",
            "7bf8f2e88c63fcfa626c599835e0fde23f7d1f5c"
        ],
        [
            "Module Type TotalTransitiveLeBool := TotalLeBool <+ LebIsTransitive.",
            "VernacDeclareModuleType",
            "0ad135aa7fda01ea843cc2406cc3f2ba68f08163"
        ],
        [
            "Module Type TotalTransitiveLeBool' := TotalLeBool' <+ LebIsTransitive.",
            "VernacDeclareModuleType",
            "ff2448a2f8e2fa657337d5c11361d1e7a89c5418"
        ],
        [
            "Module Type HasBoolOrdFuns (T:Typ) := HasEqb T <+ HasLtb T <+ HasLeb T.",
            "VernacDeclareModuleType",
            "1b8a6b90e08fcf8d2b3a69ea7707adc30c0ca446"
        ],
        [
            "Module Type HasBoolOrdFuns' (T:Typ) := HasBoolOrdFuns T <+ EqbNotation T <+ LtbNotation T <+ LebNotation T.",
            "VernacDeclareModuleType",
            "d61fbdb09995e520b5699146fdadfe164f21c41d"
        ],
        [
            "Module Type BoolOrdSpecs (O:EqLtLe)(F:HasBoolOrdFuns O) := EqbSpec O O F <+ LtbSpec O O F <+ LebSpec O O F.",
            "VernacDeclareModuleType",
            "e44fc0330cb4000fc67686a027faaa96e2643411"
        ],
        [
            "Module Type OrderFunctions (E:EqLtLe) := HasCompare E <+ HasBoolOrdFuns E <+ BoolOrdSpecs E.",
            "VernacDeclareModuleType",
            "c69b891e54aac57fe6d69d62b4f809119c91aef5"
        ],
        [
            "Module Type OrderFunctions' (E:EqLtLe) := HasCompare E <+ CmpNotation E <+ HasBoolOrdFuns' E <+ BoolOrdSpecs E.",
            "VernacDeclareModuleType",
            "9c160e72682af9a3541c4fee23688053955890f8"
        ],
        [
            "Module OTF_to_TTLB (Import O : OrderedTypeFull') <: TotalTransitiveLeBool.",
            "VernacDefineModule",
            "e4037758fb32b630b31e4ef873ab019ae5d27f7d"
        ],
        [
            "Definition leb x y := match compare x y with Gt => false | _ => true end.",
            "VernacDefinition",
            "8cdc75604327e44bd0bdd363317e8bfd47bee4e6"
        ],
        [
            "Lemma leb_le : forall x y, leb x y <-> x <= y.",
            "VernacStartTheoremProof",
            "2fb2365678a65ae4033ecfe0d52f84cd63c833f5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold leb.",
            "VernacExtend",
            "a031f9632fa7f27d9c8c5b51008ba5de99f6fbfd"
        ],
        [
            "rewrite le_lteq.",
            "VernacExtend",
            "47966683a5a63c6d598b8a20140ebd9b33c67bd8"
        ],
        [
            "destruct (compare_spec x y) as [EQ|LT|GT]; split; auto.",
            "VernacExtend",
            "a7b4d3b7fe66017ba8bfff053f99a302a5ad279d"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "intros LE.",
            "VernacExtend",
            "247ba2dd64491e46fb5d2dc620259eb968701e9c"
        ],
        [
            "elim (StrictOrder_Irreflexive x).",
            "VernacExtend",
            "dc8bdc655d9372d197b21c90756055ab6e519915"
        ],
        [
            "destruct LE as [LT|EQ].",
            "VernacExtend",
            "b73e6e2bec7e58cba20aa40d4c01add8c262b484"
        ],
        [
            "now transitivity y.",
            "VernacExtend",
            "187ae8d8d88d0750965785853b3032e23d8a85b9"
        ],
        [
            "now rewrite <- EQ in GT.",
            "VernacExtend",
            "cf6992efeaa84162036b810fe9421514a3f9546d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leb_total : forall x y, leb x y \\/ leb y x.",
            "VernacStartTheoremProof",
            "7b97202f6a4a558544bf3c3192c0111b34588f83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite 2 leb_le.",
            "VernacExtend",
            "8e2be8f00a8ff082b3ca75505f487d1426651501"
        ],
        [
            "rewrite 2 le_lteq.",
            "VernacExtend",
            "aa2244d607540cd5d7973ed5d0429b2a60c69707"
        ],
        [
            "destruct (compare_spec x y); intuition.",
            "VernacExtend",
            "d72d5a9e4017c7eb7ec9e2764c826a03eb5242c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leb_trans : Transitive leb.",
            "VernacStartTheoremProof",
            "322cd40c70491184b69e1d0cc1218d2162ff1c2d"
        ],
        [
            "intros x y z.",
            "VernacExtend",
            "8357c7ce661033f932c65582aab008de3b5d8530"
        ],
        [
            "rewrite !leb_le, !le_lteq.",
            "VernacExtend",
            "bc08412452634cb7f5aa8628597bde687b60accb"
        ],
        [
            "intros [Hxy|Hxy] [Hyz|Hyz].",
            "VernacExtend",
            "8eab0d828a5ff2b128c7aef1cb7f31695321cf5d"
        ],
        [
            "left; transitivity y; auto.",
            "VernacExtend",
            "bd353c257185c7fd324e41e0e6c926d090c66303"
        ],
        [
            "left; rewrite <- Hyz; auto.",
            "VernacExtend",
            "5e307fd50b0581e4366e5b1aabf371f189d19786"
        ],
        [
            "left; rewrite Hxy; auto.",
            "VernacExtend",
            "35731bc3a1f28071bf5e7289db0e2d2c5e3c8236"
        ],
        [
            "right; transitivity y; auto.",
            "VernacExtend",
            "24ab5759a218f3ef903697a152bd5222ab521c30"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition t := t.",
            "VernacDefinition",
            "e7e60c889544351df20327af7f53fca7bf65d064"
        ],
        [
            "End OTF_to_TTLB.",
            "VernacEndSegment",
            "5990598a40291d08339a131e8ed158ab0ea63add"
        ],
        [
            "Local Open Scope bool_scope.",
            "VernacOpenCloseScope",
            "086f8561c3539962795a6f74d15aefc379d3505d"
        ],
        [
            "Module TTLB_to_OTF (Import O : TotalTransitiveLeBool') <: OrderedTypeFull.",
            "VernacDefineModule",
            "73119039ea5ecce0081ef18acdb319c35567c0c2"
        ],
        [
            "Definition t := t.",
            "VernacDefinition",
            "e7e60c889544351df20327af7f53fca7bf65d064"
        ],
        [
            "Definition le x y : Prop := x <=? y.",
            "VernacDefinition",
            "12e5b8cef3f72759510585d9aa115f1f47f869f5"
        ],
        [
            "Definition eq x y : Prop := le x y /\\ le y x.",
            "VernacDefinition",
            "d452b3fb734248b0134d1495ec5024863677647e"
        ],
        [
            "Definition lt x y : Prop := le x y /\\ ~le y x.",
            "VernacDefinition",
            "e38813fc4510abf8b5440872c351496ece4ea202"
        ],
        [
            "Definition compare x y := if x <=? y then (if y <=? x then Eq else Lt) else Gt.",
            "VernacDefinition",
            "e53b0cf99380bff6c2e1d14ba0033b561d5378dd"
        ],
        [
            "Lemma compare_spec : forall x y, CompSpec eq lt x y (compare x y).",
            "VernacStartTheoremProof",
            "e38e454cef27255925324e7230bfbba4a074b75d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold compare.",
            "VernacExtend",
            "b5d4704dfbc3e5e9441ee8f2b7957e022b2209cb"
        ],
        [
            "case_eq (x <=? y).",
            "VernacExtend",
            "44f6937cd6a7b81fb2728ccdbf68e52afc0e9d6d"
        ],
        [
            "case_eq (y <=? x).",
            "VernacExtend",
            "a4f2b48be95a47d7242e5eef63fbb6f8be71b327"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "split; congruence.",
            "VernacExtend",
            "7f007b5ce3732856c1deed66b0edcc61cdb7f2d5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "destruct (leb_total x y); split; congruence.",
            "VernacExtend",
            "d618c637e050ddec95e5d63e0168cf076e075ff8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eqb x y := (x <=? y) && (y <=? x).",
            "VernacDefinition",
            "ed66f88adf66c5ae000f1219e46de9714c45b07f"
        ],
        [
            "Lemma eqb_eq : forall x y, eqb x y <-> eq x y.",
            "VernacStartTheoremProof",
            "d643b94625b7a0ddf7bbc4d022533633d24ca7ac"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold eq, eqb, le.",
            "VernacExtend",
            "41a8fadf72f1b022a75ca224620707978d176a13"
        ],
        [
            "case leb; simpl; intuition; discriminate.",
            "VernacExtend",
            "49e86bbf20fa4ff79fc26fbe39d0ebe5c850ecab"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Include HasEqBool2Dec.",
            "VernacInclude",
            "39a32ce78404fe2085b62d1aa75f098b5fc86564"
        ],
        [
            "Instance eq_equiv : Equivalence eq.",
            "VernacInstance",
            "deeaf33dc54ae03b7448861f860d5bb8daaca18c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros x; unfold eq, le.",
            "VernacExtend",
            "16a27fcc5557137f9cb26bbd8fb93f3f7ec044e7"
        ],
        [
            "destruct (leb_total x x); auto.",
            "VernacExtend",
            "6716a2e79f69883752d32237bd29aa05a642f6cc"
        ],
        [
            "intros x y; unfold eq, le.",
            "VernacExtend",
            "0970a6abed315a1e7db3adfc05b59e69c0770d37"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intros x y z; unfold eq, le.",
            "VernacExtend",
            "0209e77ad74605e61fac6042370a1c06a5160329"
        ],
        [
            "intuition; apply leb_trans with y; auto.",
            "VernacExtend",
            "5ea9a3266c273fb25faa6a425314b7879c7d4161"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance lt_strorder : StrictOrder lt.",
            "VernacInstance",
            "fa189ac61b1474957ad71f3e51fbb244abde9f22"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold lt; red; intuition.",
            "VernacExtend",
            "a414fe8d3f839d3d6efd036784fe65d12d2caa54"
        ],
        [
            "intros x y z; unfold lt, le.",
            "VernacExtend",
            "ef899ab3e4971c0eb522d3cfc67f64d1f4c3a2a8"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply leb_trans with y; auto.",
            "VernacExtend",
            "e42096b87d90cf05fc8b254cd020b0b52f30bfff"
        ],
        [
            "absurd (z <=? y); auto.",
            "VernacExtend",
            "031700957d371c4881de0d900891e76cda02fbdb"
        ],
        [
            "apply leb_trans with x; auto.",
            "VernacExtend",
            "9b7f7c10cf2c04c3474cb9a21297ac73162a3162"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance lt_compat : Proper (eq ==> eq ==> iff) lt.",
            "VernacInstance",
            "04e2deec4194fc51245d368b9c1ad29da27fd761"
        ],
        [
            "apply proper_sym_impl_iff_2; auto with *.",
            "VernacExtend",
            "eee994524435b39e51e978935650dd48d24678a0"
        ],
        [
            "intros x x' Hx y y' Hy' H.",
            "VernacExtend",
            "eed22203ff14d249367c5b19f0aa0b56804e6643"
        ],
        [
            "unfold eq, lt, le in *.",
            "VernacExtend",
            "e970d8674220d9e150957e4ced7004bc702de69d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply leb_trans with x; auto.",
            "VernacExtend",
            "9b7f7c10cf2c04c3474cb9a21297ac73162a3162"
        ],
        [
            "apply leb_trans with y; auto.",
            "VernacExtend",
            "e42096b87d90cf05fc8b254cd020b0b52f30bfff"
        ],
        [
            "absurd (y <=? x); auto.",
            "VernacExtend",
            "53849bbad6b3acfcaf3be715035ede9c23fad7ce"
        ],
        [
            "apply leb_trans with x'; auto.",
            "VernacExtend",
            "7f1fc94cb65bf1ca41a9a3fbcd34abbfa215627d"
        ],
        [
            "apply leb_trans with y'; auto.",
            "VernacExtend",
            "63d50523e261a7dabbe1b8c5a72d9e31789336dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition le_lteq : forall x y, le x y <-> lt x y \\/ eq x y.",
            "VernacDefinition",
            "9d7c4396631e46cb72dd25844ab4429dd754eff6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold lt, eq, le.",
            "VernacExtend",
            "6d41f9658495e29292b254f9a90680041e75a7cc"
        ],
        [
            "split; [ | intuition ].",
            "VernacExtend",
            "fbf33aa8b4a9ec27458829141bc4648208997c34"
        ],
        [
            "intros LE.",
            "VernacExtend",
            "247ba2dd64491e46fb5d2dc620259eb968701e9c"
        ],
        [
            "case_eq (y <=? x); [right|left]; intuition; try discriminate.",
            "VernacExtend",
            "d13bf414547bbc25f536e7e7cb9ff338a73c14fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End TTLB_to_OTF.",
            "VernacEndSegment",
            "8581318e1d2b00cf9fd905dbe68a4b82ff36bc45"
        ]
    ],
    "proofs": [
        {
            "name": "eqb_eq",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "unfold eqb.",
                        "VernacExtend",
                        "f9e717295e72955f079840f1bebf6c7bb720ca43"
                    ]
                },
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "destruct (compare_spec x y) as [H|H|H]; split; auto; try discriminate.",
                        "VernacExtend",
                        "7a71d7e5ac5ca79353ff983a18caa83d6125adf1"
                    ]
                },
                {
                    "command": [
                        "intros EQ; rewrite EQ in H; elim (StrictOrder_Irreflexive _ H).",
                        "VernacExtend",
                        "502ff95d4221c745e04ddcd69445f6132b8252a2"
                    ]
                },
                {
                    "command": [
                        "intros EQ; rewrite EQ in H; elim (StrictOrder_Irreflexive _ H).",
                        "VernacExtend",
                        "502ff95d4221c745e04ddcd69445f6132b8252a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_lteq",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "unfold le; split; auto.",
                        "VernacExtend",
                        "a1165b08d27656c603d048a464de6df2f63e9667"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_total",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros; destruct (compare_spec x y); auto.",
                        "VernacExtend",
                        "23e74bdff37cf342be95dc186bb32a006b924951"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leb_le",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold leb.",
                        "VernacExtend",
                        "a031f9632fa7f27d9c8c5b51008ba5de99f6fbfd"
                    ]
                },
                {
                    "command": [
                        "rewrite le_lteq.",
                        "VernacExtend",
                        "47966683a5a63c6d598b8a20140ebd9b33c67bd8"
                    ]
                },
                {
                    "command": [
                        "destruct (compare_spec x y) as [EQ|LT|GT]; split; auto.",
                        "VernacExtend",
                        "a7b4d3b7fe66017ba8bfff053f99a302a5ad279d"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "intros LE.",
                        "VernacExtend",
                        "247ba2dd64491e46fb5d2dc620259eb968701e9c"
                    ]
                },
                {
                    "command": [
                        "elim (StrictOrder_Irreflexive x).",
                        "VernacExtend",
                        "dc8bdc655d9372d197b21c90756055ab6e519915"
                    ]
                },
                {
                    "command": [
                        "destruct LE as [LT|EQ].",
                        "VernacExtend",
                        "b73e6e2bec7e58cba20aa40d4c01add8c262b484"
                    ]
                },
                {
                    "command": [
                        "now transitivity y.",
                        "VernacExtend",
                        "187ae8d8d88d0750965785853b3032e23d8a85b9"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- EQ in GT.",
                        "VernacExtend",
                        "cf6992efeaa84162036b810fe9421514a3f9546d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leb_total",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 leb_le.",
                        "VernacExtend",
                        "8e2be8f00a8ff082b3ca75505f487d1426651501"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 le_lteq.",
                        "VernacExtend",
                        "aa2244d607540cd5d7973ed5d0429b2a60c69707"
                    ]
                },
                {
                    "command": [
                        "destruct (compare_spec x y); intuition.",
                        "VernacExtend",
                        "d72d5a9e4017c7eb7ec9e2764c826a03eb5242c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leb_trans",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "intros x y z.",
                        "VernacExtend",
                        "8357c7ce661033f932c65582aab008de3b5d8530"
                    ]
                },
                {
                    "command": [
                        "rewrite !leb_le, !le_lteq.",
                        "VernacExtend",
                        "bc08412452634cb7f5aa8628597bde687b60accb"
                    ]
                },
                {
                    "command": [
                        "intros [Hxy|Hxy] [Hyz|Hyz].",
                        "VernacExtend",
                        "8eab0d828a5ff2b128c7aef1cb7f31695321cf5d"
                    ]
                },
                {
                    "command": [
                        "left; transitivity y; auto.",
                        "VernacExtend",
                        "bd353c257185c7fd324e41e0e6c926d090c66303"
                    ]
                },
                {
                    "command": [
                        "left; rewrite <- Hyz; auto.",
                        "VernacExtend",
                        "5e307fd50b0581e4366e5b1aabf371f189d19786"
                    ]
                },
                {
                    "command": [
                        "left; rewrite Hxy; auto.",
                        "VernacExtend",
                        "35731bc3a1f28071bf5e7289db0e2d2c5e3c8236"
                    ]
                },
                {
                    "command": [
                        "right; transitivity y; auto.",
                        "VernacExtend",
                        "24ab5759a218f3ef903697a152bd5222ab521c30"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_spec",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold compare.",
                        "VernacExtend",
                        "b5d4704dfbc3e5e9441ee8f2b7957e022b2209cb"
                    ]
                },
                {
                    "command": [
                        "case_eq (x <=? y).",
                        "VernacExtend",
                        "44f6937cd6a7b81fb2728ccdbf68e52afc0e9d6d"
                    ]
                },
                {
                    "command": [
                        "case_eq (y <=? x).",
                        "VernacExtend",
                        "a4f2b48be95a47d7242e5eef63fbb6f8be71b327"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "split; congruence.",
                        "VernacExtend",
                        "7f007b5ce3732856c1deed66b0edcc61cdb7f2d5"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "destruct (leb_total x y); split; congruence.",
                        "VernacExtend",
                        "d618c637e050ddec95e5d63e0168cf076e075ff8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_equiv",
            "line_nb": 193,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros x; unfold eq, le.",
                        "VernacExtend",
                        "16a27fcc5557137f9cb26bbd8fb93f3f7ec044e7"
                    ]
                },
                {
                    "command": [
                        "destruct (leb_total x x); auto.",
                        "VernacExtend",
                        "6716a2e79f69883752d32237bd29aa05a642f6cc"
                    ]
                },
                {
                    "command": [
                        "intros x y; unfold eq, le.",
                        "VernacExtend",
                        "0970a6abed315a1e7db3adfc05b59e69c0770d37"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intros x y z; unfold eq, le.",
                        "VernacExtend",
                        "0209e77ad74605e61fac6042370a1c06a5160329"
                    ]
                },
                {
                    "command": [
                        "intuition; apply leb_trans with y; auto.",
                        "VernacExtend",
                        "5ea9a3266c273fb25faa6a425314b7879c7d4161"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_strorder",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold lt; red; intuition.",
                        "VernacExtend",
                        "a414fe8d3f839d3d6efd036784fe65d12d2caa54"
                    ]
                },
                {
                    "command": [
                        "intros x y z; unfold lt, le.",
                        "VernacExtend",
                        "ef899ab3e4971c0eb522d3cfc67f64d1f4c3a2a8"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply leb_trans with y; auto.",
                        "VernacExtend",
                        "e42096b87d90cf05fc8b254cd020b0b52f30bfff"
                    ]
                },
                {
                    "command": [
                        "absurd (z <=? y); auto.",
                        "VernacExtend",
                        "031700957d371c4881de0d900891e76cda02fbdb"
                    ]
                },
                {
                    "command": [
                        "apply leb_trans with x; auto.",
                        "VernacExtend",
                        "9b7f7c10cf2c04c3474cb9a21297ac73162a3162"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_compat",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "apply proper_sym_impl_iff_2; auto with *.",
                        "VernacExtend",
                        "eee994524435b39e51e978935650dd48d24678a0"
                    ]
                },
                {
                    "command": [
                        "intros x x' Hx y y' Hy' H.",
                        "VernacExtend",
                        "eed22203ff14d249367c5b19f0aa0b56804e6643"
                    ]
                },
                {
                    "command": [
                        "unfold eq, lt, le in *.",
                        "VernacExtend",
                        "e970d8674220d9e150957e4ced7004bc702de69d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply leb_trans with x; auto.",
                        "VernacExtend",
                        "9b7f7c10cf2c04c3474cb9a21297ac73162a3162"
                    ]
                },
                {
                    "command": [
                        "apply leb_trans with y; auto.",
                        "VernacExtend",
                        "e42096b87d90cf05fc8b254cd020b0b52f30bfff"
                    ]
                },
                {
                    "command": [
                        "absurd (y <=? x); auto.",
                        "VernacExtend",
                        "53849bbad6b3acfcaf3be715035ede9c23fad7ce"
                    ]
                },
                {
                    "command": [
                        "apply leb_trans with x'; auto.",
                        "VernacExtend",
                        "7f1fc94cb65bf1ca41a9a3fbcd34abbfa215627d"
                    ]
                },
                {
                    "command": [
                        "apply leb_trans with y'; auto.",
                        "VernacExtend",
                        "63d50523e261a7dabbe1b8c5a72d9e31789336dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}