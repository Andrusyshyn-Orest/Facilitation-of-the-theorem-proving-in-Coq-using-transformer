{
    "filename": "theories/Structures/Equalities.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export RelationClasses.",
            "VernacRequire",
            "d90872cb983877919d01f7c36a37f829471aaad2"
        ],
        [
            "Require Import Bool Morphisms Setoid.",
            "VernacRequire",
            "a93cfd1a565dcd2668a37bc9b8d2ac90295fc799"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Module Type Nop.",
            "VernacDeclareModuleType",
            "0d36edae51e8d8d5ac11908cb45e3eb73a804c97"
        ],
        [
            "End Nop.",
            "VernacEndSegment",
            "7fd5768f9ba77e9baef3c8e237d9aa227a34e8f2"
        ],
        [
            "Module Type Typ.",
            "VernacDeclareModuleType",
            "8996338f7b9dc531bbb3ad83cec7ac6799b75141"
        ],
        [
            "Parameter Inline(10) t : Type.",
            "VernacAssumption",
            "310f1761af791391affd320d27ca27bea3488b39"
        ],
        [
            "End Typ.",
            "VernacEndSegment",
            "f06107c30dcff9cd9466157a5ea3f4795e3acbf1"
        ],
        [
            "Module Type HasEq (Import T:Typ).",
            "VernacDeclareModuleType",
            "2694a7348297a957cd483775e3d7e9f3599ab6ce"
        ],
        [
            "Parameter Inline(30) eq : t -> t -> Prop.",
            "VernacAssumption",
            "9471bf4368f484caf34b77750aaa30ae159cfd92"
        ],
        [
            "End HasEq.",
            "VernacEndSegment",
            "116faf416ea6128288a1cc28d48f21308cc82a7a"
        ],
        [
            "Module Type Eq := Typ <+ HasEq.",
            "VernacDeclareModuleType",
            "d2f9b67500e05cb54e300714d17c64fd1db1c885"
        ],
        [
            "Module Type EqNotation (Import E:Eq).",
            "VernacDeclareModuleType",
            "eb6f127e9609f00e7ea3a35c5e89948bf99abb5d"
        ],
        [
            "Infix \"==\" := eq (at level 70, no associativity).",
            "VernacInfix",
            "4c46c7beff408e58e95449e8f7bb53589f323bc7"
        ],
        [
            "Notation \"x ~= y\" := (~eq x y) (at level 70, no associativity).",
            "VernacNotation",
            "dda2226ccef069d318aa20129f715df616ba0d65"
        ],
        [
            "End EqNotation.",
            "VernacEndSegment",
            "0360ee803a2b1882684945997b5b88bf0d4c8918"
        ],
        [
            "Module Type Eq' := Eq <+ EqNotation.",
            "VernacDeclareModuleType",
            "13da457bab06225aa63fbb3f31766b3ec33a2855"
        ],
        [
            "Module Type IsEq (Import E:Eq).",
            "VernacDeclareModuleType",
            "3f39427ba99cb8f851848e10da51d71fc2167d33"
        ],
        [
            "Declare Instance eq_equiv : Equivalence eq.",
            "VernacInstance",
            "e875a6f9536a63b81ed14df0a2be570de4344249"
        ],
        [
            "End IsEq.",
            "VernacEndSegment",
            "0658a6888554d7753fcee17b6160ac806f8a4726"
        ],
        [
            "Module Type IsEqOrig (Import E:Eq').",
            "VernacDeclareModuleType",
            "17245682ac615e8404fa38618d3b91fabe358d41"
        ],
        [
            "Axiom eq_refl : forall x : t, x==x.",
            "VernacAssumption",
            "9bbad362929167973380ef5407bd498ff490791b"
        ],
        [
            "Axiom eq_sym : forall x y : t, x==y -> y==x.",
            "VernacAssumption",
            "27e457b0408551d4ac0365c358ad8cc9c9ddcdf9"
        ],
        [
            "Axiom eq_trans : forall x y z : t, x==y -> y==z -> x==z.",
            "VernacAssumption",
            "638f4406dde345da4383827f0a58d3fc57c9984f"
        ],
        [
            "Hint Immediate eq_sym.",
            "VernacHints",
            "4db6faa458fb4c2450658cfcf1e168b35c47f082"
        ],
        [
            "Hint Resolve eq_refl eq_trans.",
            "VernacHints",
            "be689999175c4cab30d5fca6bfc7d42a3855d693"
        ],
        [
            "End IsEqOrig.",
            "VernacEndSegment",
            "32654e5276467b7bc0b1e44caecf2be5a69b4d69"
        ],
        [
            "Module Type HasEqDec (Import E:Eq').",
            "VernacDeclareModuleType",
            "baaf28ec55dc2cf194d124bcf6607424f3132341"
        ],
        [
            "Parameter eq_dec : forall x y : t, { x==y } + { ~ x==y }.",
            "VernacAssumption",
            "0ec321e8a1c72bc21c039eb2ed6178d50c00d719"
        ],
        [
            "End HasEqDec.",
            "VernacEndSegment",
            "f21a346ff56031ae50c9fd8944e24384737f0130"
        ],
        [
            "Module Type HasEqb (Import T:Typ).",
            "VernacDeclareModuleType",
            "df6ac0b4b9063e23fd29ecadc9a381dbebfc6f2a"
        ],
        [
            "Parameter Inline eqb : t -> t -> bool.",
            "VernacAssumption",
            "9b39f7916c075ad935ca201d83c69bcfa3d01316"
        ],
        [
            "End HasEqb.",
            "VernacEndSegment",
            "e9e69439160db62bf2cf5cac85b4dfd36821f8c3"
        ],
        [
            "Module Type EqbSpec (T:Typ)(X:HasEq T)(Y:HasEqb T).",
            "VernacDeclareModuleType",
            "f12196bb49c309f7d5a3b7d1bb9056e6accdc9b5"
        ],
        [
            "Parameter eqb_eq : forall x y, Y.eqb x y = true <-> X.eq x y.",
            "VernacAssumption",
            "b391941bff2d36f6db5952e834d2970e18bab96c"
        ],
        [
            "End EqbSpec.",
            "VernacEndSegment",
            "4e92564ec62edfa1e6470f740ae551956ff9dafa"
        ],
        [
            "Module Type EqbNotation (T:Typ)(E:HasEqb T).",
            "VernacDeclareModuleType",
            "90b49fb540d150650851ebd7ad66600724b88412"
        ],
        [
            "Infix \"=?\" := E.eqb (at level 70, no associativity).",
            "VernacInfix",
            "f927251728058130ea79986d7ff570c2c1167d74"
        ],
        [
            "End EqbNotation.",
            "VernacEndSegment",
            "dd3a24cabfd2d6d9ec1b6bfc6a5e2d54eca8e7c2"
        ],
        [
            "Module Type HasEqBool (E:Eq) := HasEqb E <+ EqbSpec E E.",
            "VernacDeclareModuleType",
            "14e7acb25a8042721f225d89fa7efdb9ddcb2e89"
        ],
        [
            "Module Type EqualityType := Eq <+ IsEq.",
            "VernacDeclareModuleType",
            "7250ef10d8c3a479ee80bdac55efb609f8dcb783"
        ],
        [
            "Module Type EqualityTypeOrig := Eq <+ IsEqOrig.",
            "VernacDeclareModuleType",
            "d0fd645fe3b7ac46b9757144f55e0c560102af02"
        ],
        [
            "Module Type EqualityTypeBoth <: EqualityType <: EqualityTypeOrig := Eq <+ IsEq <+ IsEqOrig.",
            "VernacDeclareModuleType",
            "00b543ba1467d917322ee0b26cc94c6118e30839"
        ],
        [
            "Module Type DecidableType <: EqualityType := Eq <+ IsEq <+ HasEqDec.",
            "VernacDeclareModuleType",
            "69d4a2a0b2d7365b6ae45f0345d0b3300f9b5d2f"
        ],
        [
            "Module Type DecidableTypeOrig <: EqualityTypeOrig := Eq <+ IsEqOrig <+ HasEqDec.",
            "VernacDeclareModuleType",
            "f5c2d235cad88d14c72b4dccf3ac9d5efaf37a54"
        ],
        [
            "Module Type DecidableTypeBoth <: DecidableType <: DecidableTypeOrig := EqualityTypeBoth <+ HasEqDec.",
            "VernacDeclareModuleType",
            "f7a75f0c96db1c676717f9292882b67d5058245a"
        ],
        [
            "Module Type BooleanEqualityType <: EqualityType := Eq <+ IsEq <+ HasEqBool.",
            "VernacDeclareModuleType",
            "928fbc9261da5bd4b651ef2c64d327c0ac682651"
        ],
        [
            "Module Type BooleanDecidableType <: DecidableType <: BooleanEqualityType := Eq <+ IsEq <+ HasEqDec <+ HasEqBool.",
            "VernacDeclareModuleType",
            "40bbb8cbbc8bf573fb49f6b7149cdf991f9779cd"
        ],
        [
            "Module Type DecidableTypeFull <: DecidableTypeBoth <: BooleanDecidableType := Eq <+ IsEq <+ IsEqOrig <+ HasEqDec <+ HasEqBool.",
            "VernacDeclareModuleType",
            "6fc62161fa8d46a11be1d0cf9892deb9d94c9019"
        ],
        [
            "Module Type EqualityType' := EqualityType <+ EqNotation.",
            "VernacDeclareModuleType",
            "23480de138c81831ddbc6726139cc57842e67d4e"
        ],
        [
            "Module Type EqualityTypeOrig' := EqualityTypeOrig <+ EqNotation.",
            "VernacDeclareModuleType",
            "30901ed85dfa5f208c7cd4922f52a8a43409fc20"
        ],
        [
            "Module Type EqualityTypeBoth' := EqualityTypeBoth <+ EqNotation.",
            "VernacDeclareModuleType",
            "3910f895b75949bcd8defaff162a4e8763e81656"
        ],
        [
            "Module Type DecidableType' := DecidableType <+ EqNotation.",
            "VernacDeclareModuleType",
            "6465f521849c2462fb78021504b8f78c1693c364"
        ],
        [
            "Module Type DecidableTypeOrig' := DecidableTypeOrig <+ EqNotation.",
            "VernacDeclareModuleType",
            "a42bce0aca86533b3f0fc977b401468ab9ca59dd"
        ],
        [
            "Module Type DecidableTypeBoth' := DecidableTypeBoth <+ EqNotation.",
            "VernacDeclareModuleType",
            "010658b0d4b3f3c27700da1d4e90c2bc7348157b"
        ],
        [
            "Module Type BooleanEqualityType' := BooleanEqualityType <+ EqNotation <+ EqbNotation.",
            "VernacDeclareModuleType",
            "ae1232ae3d29a91b7f6fb3e3c1c3079e50d3c849"
        ],
        [
            "Module Type BooleanDecidableType' := BooleanDecidableType <+ EqNotation <+ EqbNotation.",
            "VernacDeclareModuleType",
            "5af7a69de41a40be4ee0b7a2fa91fa10f1cc6a45"
        ],
        [
            "Module Type DecidableTypeFull' := DecidableTypeFull <+ EqNotation.",
            "VernacDeclareModuleType",
            "ff7e04ec29c4a084eb63fb176754cd7f9da0c234"
        ],
        [
            "Module BackportEq (E:Eq)(F:IsEq E) <: IsEqOrig E.",
            "VernacDefineModule",
            "3f407e469e2c6e6be723a0f165577f3762196246"
        ],
        [
            "Definition eq_refl := F.eq_equiv.(@Equivalence_Reflexive _ _).",
            "VernacDefinition",
            "734f85f91487dd7dc0731d6e1fadcf3dcdfea673"
        ],
        [
            "Definition eq_sym := F.eq_equiv.(@Equivalence_Symmetric _ _).",
            "VernacDefinition",
            "b889eb7c0ec957aa418b0b8b1ab77841138dddd1"
        ],
        [
            "Definition eq_trans := F.eq_equiv.(@Equivalence_Transitive _ _).",
            "VernacDefinition",
            "034fbf51e0d67e8d1969bf1b5530dc19fde60d66"
        ],
        [
            "End BackportEq.",
            "VernacEndSegment",
            "f9179a7798932d6be5c220d0b81df3012df61591"
        ],
        [
            "Module UpdateEq (E:Eq)(F:IsEqOrig E) <: IsEq E.",
            "VernacDefineModule",
            "8904e6ecfa810c911a549d95bc8445258c2d47fb"
        ],
        [
            "Instance eq_equiv : Equivalence E.eq.",
            "VernacInstance",
            "9d1b23d25274df2dd9531647b88f692dad14e8ec"
        ],
        [
            "exact (Build_Equivalence _ F.eq_refl F.eq_sym F.eq_trans).",
            "VernacExtend",
            "7002ec4d640056c3d7ba7c26d249b94673aef6b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End UpdateEq.",
            "VernacEndSegment",
            "e44025c2d5c45f12e2529aac427219647890ca22"
        ],
        [
            "Module Backport_ET (E:EqualityType) <: EqualityTypeBoth := E <+ BackportEq.",
            "VernacDefineModule",
            "d51f75397265bd0e1700b8fb13d92c1a9a1fba71"
        ],
        [
            "Module Update_ET (E:EqualityTypeOrig) <: EqualityTypeBoth := E <+ UpdateEq.",
            "VernacDefineModule",
            "5b82c0a8fe27bc3e09c9ff8ee4487699482eeab3"
        ],
        [
            "Module Backport_DT (E:DecidableType) <: DecidableTypeBoth := E <+ BackportEq.",
            "VernacDefineModule",
            "63e5d55d3385b5fcc26464ad8d65ab2e61e342d3"
        ],
        [
            "Module Update_DT (E:DecidableTypeOrig) <: DecidableTypeBoth := E <+ UpdateEq.",
            "VernacDefineModule",
            "fb7e9c5adc163428be83699a1f6767acb865b9a2"
        ],
        [
            "Module HasEqDec2Bool (E:Eq)(F:HasEqDec E) <: HasEqBool E.",
            "VernacDefineModule",
            "21c6dafe8604aef215ace341a9d923b2760e0497"
        ],
        [
            "Definition eqb x y := if F.eq_dec x y then true else false.",
            "VernacDefinition",
            "03d5941fd2cc9fd950bf54242de2020d6d5f1976"
        ],
        [
            "Lemma eqb_eq : forall x y, eqb x y = true <-> E.eq x y.",
            "VernacStartTheoremProof",
            "f644383a946e05d5dbe831f666f5ef424c9c8219"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold eqb.",
            "VernacExtend",
            "f9e717295e72955f079840f1bebf6c7bb720ca43"
        ],
        [
            "destruct F.eq_dec as [EQ|NEQ].",
            "VernacExtend",
            "5541f29766eb86a353fe0420ab4082262a38e238"
        ],
        [
            "auto with *.",
            "VernacExtend",
            "cafee3e5c160f4826f26575cc7be0078a2421ff0"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "intro EQ; elim NEQ; auto.",
            "VernacExtend",
            "fb0a3b717ea1ba0fa5724b7ad5b3ecccf4f5e4dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End HasEqDec2Bool.",
            "VernacEndSegment",
            "63e9a81f75ce4da9e78fdab1ec4a9d8c1f657854"
        ],
        [
            "Module HasEqBool2Dec (E:Eq)(F:HasEqBool E) <: HasEqDec E.",
            "VernacDefineModule",
            "152afe6f17a0f12cfc10d2cdf4654bd2090bb61c"
        ],
        [
            "Lemma eq_dec : forall x y, {E.eq x y}+{~E.eq x y}.",
            "VernacStartTheoremProof",
            "50e6763f78d26f6e0c5a9a5abf00a1ddef48ebcf"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "assert (H:=F.eqb_eq x y).",
            "VernacExtend",
            "2fa54365c1c3f9effec20a9072a1733ae4b23bb5"
        ],
        [
            "destruct (F.eqb x y); [left|right].",
            "VernacExtend",
            "f6ce0c539c0d47e968b09f7fb24dc33c3f5bffcc"
        ],
        [
            "apply -> H; auto.",
            "VernacExtend",
            "ad9d86e892b3bc083252ae2fbecb4b9f18477c09"
        ],
        [
            "intro EQ.",
            "VernacExtend",
            "b186799fb3374870aedfd37033a91c7c0a1bf973"
        ],
        [
            "apply H in EQ.",
            "VernacExtend",
            "409491882855a1b9abf7156d801324e2c05d52ae"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End HasEqBool2Dec.",
            "VernacEndSegment",
            "d2823716343991a84b5ea4e4b061329159ff2931"
        ],
        [
            "Module Dec2Bool (E:DecidableType) <: BooleanDecidableType := E <+ HasEqDec2Bool.",
            "VernacDefineModule",
            "09a9ce87a434cbba2b3b9ea3c8e129e3e0e1a5c9"
        ],
        [
            "Module Bool2Dec (E:BooleanEqualityType) <: BooleanDecidableType := E <+ HasEqBool2Dec.",
            "VernacDefineModule",
            "37ef5becb06412cf8e75986dcf8d696b70b601d4"
        ],
        [
            "Module BoolEqualityFacts (Import E : BooleanEqualityType').",
            "VernacDefineModule",
            "1fbafc85fbdd2985e9b60fffb5fd69e17895a82b"
        ],
        [
            "Instance eqb_compat : Proper (E.eq ==> E.eq ==> Logic.eq) eqb.",
            "VernacInstance",
            "882ab699a579a1b57a1e65783a8406e3308ce345"
        ],
        [
            "intros x x' Exx' y y' Eyy'.",
            "VernacExtend",
            "83e0b8d6396fa1dc82948cfe4eee6170fdf8926a"
        ],
        [
            "apply eq_true_iff_eq.",
            "VernacExtend",
            "07a4346802ec5a58927985ce984a62185d994d5f"
        ],
        [
            "now rewrite 2 eqb_eq, Exx', Eyy'.",
            "VernacExtend",
            "0e2502ae079ec06ec9a3a60d1a6330dd7ef57dbf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqb_spec x y : reflect (x==y) (x =? y).",
            "VernacStartTheoremProof",
            "ddf46652a023da97ee50c4e6d07462ff7f0f5dc6"
        ],
        [
            "apply iff_reflect.",
            "VernacExtend",
            "619faa74b763f12186eca1350028de61b0967ff0"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply eqb_eq.",
            "VernacExtend",
            "cbf22abd48fe5ed6d8818f96de68802930389538"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma eqb_neq x y : (x =? y) = false <-> x ~= y.",
            "VernacStartTheoremProof",
            "fc13f8aacb64cfa53c73e741ddc70297c3a0215f"
        ],
        [
            "now rewrite <- not_true_iff_false, eqb_eq.",
            "VernacExtend",
            "e6242ec767b9f0f4fb33493de131ba3e29f009dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqb_refl x : (x =? x) = true.",
            "VernacStartTheoremProof",
            "c2519d41782b6cb4e2dca345ce69281828299bdb"
        ],
        [
            "now apply eqb_eq.",
            "VernacExtend",
            "238eff1a464b479561b20de93fde6a4f9102d1dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eqb_sym x y : (x =? y) = (y =? x).",
            "VernacStartTheoremProof",
            "a6b5f24b8f99a8ca90f20e7206fab83f5b81cf80"
        ],
        [
            "apply eq_true_iff_eq.",
            "VernacExtend",
            "07a4346802ec5a58927985ce984a62185d994d5f"
        ],
        [
            "now rewrite 2 eqb_eq.",
            "VernacExtend",
            "e7081fcc36ebfd39d9547316292a619ceb5074bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BoolEqualityFacts.",
            "VernacEndSegment",
            "96d39de2e31a4bad234eaa17fe03d21ba2e30443"
        ],
        [
            "Module Type HasUsualEq (Import T:Typ) <: HasEq T.",
            "VernacDeclareModuleType",
            "0de5fbc7fec0b380a626ae3d57bcd5f06be1d10a"
        ],
        [
            "Definition eq := @Logic.eq t.",
            "VernacDefinition",
            "f6ac3d186f6262aa413d5862feaa3905e644b423"
        ],
        [
            "End HasUsualEq.",
            "VernacEndSegment",
            "6d84b1e98b4c31af468291b26046248eb92ccee5"
        ],
        [
            "Module Type UsualEq <: Eq := Typ <+ HasUsualEq.",
            "VernacDeclareModuleType",
            "8753f51e8d41919026b44e0b71b7c726b9e14c29"
        ],
        [
            "Module Type UsualIsEq (E:UsualEq) <: IsEq E.",
            "VernacDeclareModuleType",
            "bfc17026300399aac454b0d59b95ef777dd3c845"
        ],
        [
            "Definition eq_equiv : Equivalence E.eq := eq_equivalence.",
            "VernacDefinition",
            "2a6762716b0f19c69b4e65d5add4bf2ca83999ba"
        ],
        [
            "End UsualIsEq.",
            "VernacEndSegment",
            "a9839766bddc0834ef25c847e0d9f7763c99b67d"
        ],
        [
            "Module Type UsualIsEqOrig (E:UsualEq) <: IsEqOrig E.",
            "VernacDeclareModuleType",
            "277ef6495137446713fdc94c473cdd1fdc981dcc"
        ],
        [
            "Definition eq_refl := @Logic.eq_refl E.t.",
            "VernacDefinition",
            "f11ec3be179212fd2a27c89b47189ea6a469b69a"
        ],
        [
            "Definition eq_sym := @Logic.eq_sym E.t.",
            "VernacDefinition",
            "736e396217aec09c3e82750540c2ba52b2cf7fed"
        ],
        [
            "Definition eq_trans := @Logic.eq_trans E.t.",
            "VernacDefinition",
            "9e5ea2d73e9994fc3a5d1a985a3c804cc3275c40"
        ],
        [
            "End UsualIsEqOrig.",
            "VernacEndSegment",
            "e3f9c951963b716e5dc61c42e21a2911a175a527"
        ],
        [
            "Module Type UsualEqualityType <: EqualityType := UsualEq <+ UsualIsEq.",
            "VernacDeclareModuleType",
            "1c9939bd556f718e0416673486b9360c3f95fa1f"
        ],
        [
            "Module Type UsualDecidableType <: DecidableType := UsualEq <+ UsualIsEq <+ HasEqDec.",
            "VernacDeclareModuleType",
            "0c8556ec8ceae9b2cd7d41626872aded089f849c"
        ],
        [
            "Module Type UsualDecidableTypeOrig <: DecidableTypeOrig := UsualEq <+ UsualIsEqOrig <+ HasEqDec.",
            "VernacDeclareModuleType",
            "8b7a2ba6aa312a6aa309f4fb0d74e903d560471b"
        ],
        [
            "Module Type UsualDecidableTypeBoth <: DecidableTypeBoth := UsualEq <+ UsualIsEq <+ UsualIsEqOrig <+ HasEqDec.",
            "VernacDeclareModuleType",
            "02783c72ec531f3cef07a5f5ac2a9febdc8e8d76"
        ],
        [
            "Module Type UsualBoolEq := UsualEq <+ HasEqBool.",
            "VernacDeclareModuleType",
            "f596e401c67323bebff7d82a360f1018955277a2"
        ],
        [
            "Module Type UsualDecidableTypeFull <: DecidableTypeFull := UsualEq <+ UsualIsEq <+ UsualIsEqOrig <+ HasEqDec <+ HasEqBool.",
            "VernacDeclareModuleType",
            "c8e1e8d0f458c20d9667c50d4c908be0ec05b2be"
        ],
        [
            "Module Type MiniDecidableType.",
            "VernacDeclareModuleType",
            "d112edfe6c5d0dcd76c79e8adc01543809a0a07e"
        ],
        [
            "Include Typ.",
            "VernacInclude",
            "445dd9f48b6dbde33f65d34d48839b85e6e06082"
        ],
        [
            "Parameter eq_dec : forall x y : t, {x=y}+{~x=y}.",
            "VernacAssumption",
            "5ebbe6c7b3f6df3222d19d901bee00af05364b10"
        ],
        [
            "End MiniDecidableType.",
            "VernacEndSegment",
            "3bea174814c1b250afff3b2ccaac706f09558986"
        ],
        [
            "Module Make_UDT (M:MiniDecidableType) <: UsualDecidableTypeBoth := M <+ HasUsualEq <+ UsualIsEq <+ UsualIsEqOrig.",
            "VernacDefineModule",
            "86f68dd9d27e39ad03fd51ea01acbe281a05172b"
        ],
        [
            "Module Make_UDTF (M:UsualBoolEq) <: UsualDecidableTypeFull := M <+ UsualIsEq <+ UsualIsEqOrig <+ HasEqBool2Dec.",
            "VernacDefineModule",
            "da5358db63d64b305dc047f5aad9b8dc1a916c3a"
        ]
    ],
    "proofs": [
        {
            "name": "eq_equiv",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "exact (Build_Equivalence _ F.eq_refl F.eq_sym F.eq_trans).",
                        "VernacExtend",
                        "7002ec4d640056c3d7ba7c26d249b94673aef6b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqb_eq",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold eqb.",
                        "VernacExtend",
                        "f9e717295e72955f079840f1bebf6c7bb720ca43"
                    ]
                },
                {
                    "command": [
                        "destruct F.eq_dec as [EQ|NEQ].",
                        "VernacExtend",
                        "5541f29766eb86a353fe0420ab4082262a38e238"
                    ]
                },
                {
                    "command": [
                        "auto with *.",
                        "VernacExtend",
                        "cafee3e5c160f4826f26575cc7be0078a2421ff0"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "intro EQ; elim NEQ; auto.",
                        "VernacExtend",
                        "fb0a3b717ea1ba0fa5724b7ad5b3ecccf4f5e4dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_dec",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "assert (H:=F.eqb_eq x y).",
                        "VernacExtend",
                        "2fa54365c1c3f9effec20a9072a1733ae4b23bb5"
                    ]
                },
                {
                    "command": [
                        "destruct (F.eqb x y); [left|right].",
                        "VernacExtend",
                        "f6ce0c539c0d47e968b09f7fb24dc33c3f5bffcc"
                    ]
                },
                {
                    "command": [
                        "apply -> H; auto.",
                        "VernacExtend",
                        "ad9d86e892b3bc083252ae2fbecb4b9f18477c09"
                    ]
                },
                {
                    "command": [
                        "intro EQ.",
                        "VernacExtend",
                        "b186799fb3374870aedfd37033a91c7c0a1bf973"
                    ]
                },
                {
                    "command": [
                        "apply H in EQ.",
                        "VernacExtend",
                        "409491882855a1b9abf7156d801324e2c05d52ae"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eqb_compat",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "intros x x' Exx' y y' Eyy'.",
                        "VernacExtend",
                        "83e0b8d6396fa1dc82948cfe4eee6170fdf8926a"
                    ]
                },
                {
                    "command": [
                        "apply eq_true_iff_eq.",
                        "VernacExtend",
                        "07a4346802ec5a58927985ce984a62185d994d5f"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2 eqb_eq, Exx', Eyy'.",
                        "VernacExtend",
                        "0e2502ae079ec06ec9a3a60d1a6330dd7ef57dbf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqb_spec",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "apply iff_reflect.",
                        "VernacExtend",
                        "619faa74b763f12186eca1350028de61b0967ff0"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply eqb_eq.",
                        "VernacExtend",
                        "cbf22abd48fe5ed6d8818f96de68802930389538"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eqb_neq",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "now rewrite <- not_true_iff_false, eqb_eq.",
                        "VernacExtend",
                        "e6242ec767b9f0f4fb33493de131ba3e29f009dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqb_refl",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "now apply eqb_eq.",
                        "VernacExtend",
                        "238eff1a464b479561b20de93fde6a4f9102d1dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqb_sym",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "apply eq_true_iff_eq.",
                        "VernacExtend",
                        "07a4346802ec5a58927985ce984a62185d994d5f"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2 eqb_eq.",
                        "VernacExtend",
                        "e7081fcc36ebfd39d9547316292a619ceb5074bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}