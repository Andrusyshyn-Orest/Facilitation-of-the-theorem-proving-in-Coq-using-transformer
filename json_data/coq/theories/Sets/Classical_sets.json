{
    "filename": "theories/Sets/Classical_sets.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export Ensembles.",
            "VernacRequire",
            "28e420a8cd6ad0b629b3aed17ea481c322132121"
        ],
        [
            "Require Export Constructive_sets.",
            "VernacRequire",
            "1ab62e257413a8f4f55081d9a0217597d3378008"
        ],
        [
            "Require Export Classical.",
            "VernacRequire",
            "931639e04b7f4b817db4e158c9ff078a0a2025f4"
        ],
        [
            "Section Ensembles_classical.",
            "VernacBeginSection",
            "bb51cd47b04ea67b98b31b906c646e7f0e4dbe48"
        ],
        [
            "Variable U : Type.",
            "VernacAssumption",
            "eb05258af3da16894daf420a97be779934a15d7e"
        ],
        [
            "Lemma not_included_empty_Inhabited : forall A:Ensemble U, ~ Included U A (Empty_set U) -> Inhabited U A.",
            "VernacStartTheoremProof",
            "3d67bdcbdd65a9fb545e3835bea60e13c987a3c0"
        ],
        [
            "intros A NI.",
            "VernacExtend",
            "09f99b89a2b45a083832694ea31a665b10a92338"
        ],
        [
            "elim (not_all_ex_not U (fun x:U => ~ In U A x)).",
            "VernacExtend",
            "aa366d92b8d7a9b810278c6a35a12811ff62a933"
        ],
        [
            "intros x H; apply Inhabited_intro with x.",
            "VernacExtend",
            "8020639bd7326aaef60f2c9bbd845f0f9d38106d"
        ],
        [
            "apply NNPP; auto with sets.",
            "VernacExtend",
            "3643e6ad215fb6055b77576bbac6a34c3c366789"
        ],
        [
            "red; intro.",
            "VernacExtend",
            "12e00b6ab6f8834b6f81959ca42843abaa311f37"
        ],
        [
            "apply NI; red.",
            "VernacExtend",
            "dba0a5d1b2082533f7d6ca68a3cb9edf01819c73"
        ],
        [
            "intros x H'; elim (H x); trivial with sets.",
            "VernacExtend",
            "b3b1a7dc61424dbdce82f8c84275a920e675cb5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_empty_Inhabited : forall A:Ensemble U, A <> Empty_set U -> Inhabited U A.",
            "VernacStartTheoremProof",
            "677b69f16eea4e0bf881cd01283e08ddf590dda1"
        ],
        [
            "intros; apply not_included_empty_Inhabited.",
            "VernacExtend",
            "9378f4acf16b62472585ce6a346857c63289b961"
        ],
        [
            "red; auto with sets.",
            "VernacExtend",
            "ffc804aa8d8444e0893b4cd035cf28ddd74f74d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Inhabited_Setminus : forall X Y:Ensemble U, Included U X Y -> ~ Included U Y X -> Inhabited U (Setminus U Y X).",
            "VernacStartTheoremProof",
            "19ebc8ac995751616a33d47d0dc5857cac0d480c"
        ],
        [
            "intros X Y I NI.",
            "VernacExtend",
            "4de07568bbd72730493dbc7059461ce76d684250"
        ],
        [
            "elim (not_all_ex_not U (fun x:U => In U Y x -> In U X x) NI).",
            "VernacExtend",
            "5fc4cc449765f8a2704873e16af119dba7e99d9d"
        ],
        [
            "intros x YX.",
            "VernacExtend",
            "a2ffd7457631057572e965452784b5b3a56c7680"
        ],
        [
            "apply Inhabited_intro with x.",
            "VernacExtend",
            "72d238d5806deee498bcffa271b171015d50367c"
        ],
        [
            "apply Setminus_intro.",
            "VernacExtend",
            "e2755c9d951605a26ba0feb62b16ad59b1a6146d"
        ],
        [
            "apply not_imply_elim with (In U X x); trivial with sets.",
            "VernacExtend",
            "20a4758f671c5e0f7e687ad588f9bb9cac9e764e"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Strict_super_set_contains_new_element : forall X Y:Ensemble U, Included U X Y -> X <> Y -> Inhabited U (Setminus U Y X).",
            "VernacStartTheoremProof",
            "2d84c7993563dd3b50d64e61c621ec348b7b088a"
        ],
        [
            "auto 7 using Inhabited_Setminus with sets.",
            "VernacExtend",
            "101cba25791c8c36661b6e1ca93960e53de80eac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Subtract_intro : forall (A:Ensemble U) (x y:U), In U A y -> x <> y -> In U (Subtract U A x) y.",
            "VernacStartTheoremProof",
            "acd04902d576e0fdf9096689ad85b20f6ff11bd0"
        ],
        [
            "unfold Subtract at 1; auto with sets.",
            "VernacExtend",
            "c1271f6399461a41c784a6acecfa2acb35f881ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Subtract_intro : sets.",
            "VernacHints",
            "2eddb3f9113ff1cfb39c7c6c469fd5c4e4bbe68e"
        ],
        [
            "Lemma Subtract_inv : forall (A:Ensemble U) (x y:U), In U (Subtract U A x) y -> In U A y /\\ x <> y.",
            "VernacStartTheoremProof",
            "f2c7bd4a95b28604bc8851ce3de931aaca7a34cc"
        ],
        [
            "intros A x y H'; elim H'; auto with sets.",
            "VernacExtend",
            "d3b9a801fff0999f9e0df50501f89f87a04ac00d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Included_Strict_Included : forall X Y:Ensemble U, Included U X Y -> Strict_Included U X Y \\/ X = Y.",
            "VernacStartTheoremProof",
            "0e6a18ddefa130450feefcd5a5017d63559cecbd"
        ],
        [
            "intros X Y H'; try assumption.",
            "VernacExtend",
            "f3432c69bf19a4559c3e20fcf758b0b6309890a2"
        ],
        [
            "elim (classic (X = Y)); auto with sets.",
            "VernacExtend",
            "6b2e9f9ca0907982e1f9a46ff6aef4f0c7a798f2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Strict_Included_inv : forall X Y:Ensemble U, Strict_Included U X Y -> Included U X Y /\\ Inhabited U (Setminus U Y X).",
            "VernacStartTheoremProof",
            "3ea65d2d967c385ffb259853f0a9890c7e9de4fa"
        ],
        [
            "intros X Y H'; red in H'.",
            "VernacExtend",
            "a2bbe9a28ddbc9a96bb6365af80ec818d87117f3"
        ],
        [
            "split; [ tauto | idtac ].",
            "VernacExtend",
            "eeb813fb82348c980411a834a36457ed83056acd"
        ],
        [
            "elim H'; intros H'0 H'1; try exact H'1; clear H'.",
            "VernacExtend",
            "f3457e3ad18cb678f929f379185da1fd26a5caef"
        ],
        [
            "apply Strict_super_set_contains_new_element; auto with sets.",
            "VernacExtend",
            "0f771721b29bb1ebc2f500abea251a62bbeb9706"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_SIncl_empty : forall X:Ensemble U, ~ Strict_Included U X (Empty_set U).",
            "VernacStartTheoremProof",
            "c2f19018a3fd1f098153921dd7eefa0ba7066d9d"
        ],
        [
            "intro X; red; intro H'; try exact H'.",
            "VernacExtend",
            "46c0323aa42f672969c67b0ea4e9ae24fa76def5"
        ],
        [
            "lapply (Strict_Included_inv X (Empty_set U)); auto with sets.",
            "VernacExtend",
            "485d9bc0ea8b55e206137297b65153bb190237d5"
        ],
        [
            "intro H'0; elim H'0; intros H'1 H'2; elim H'2; clear H'0.",
            "VernacExtend",
            "b056e02d01dbf1a61e9672b882416ee9aad613df"
        ],
        [
            "intros x H'0; elim H'0.",
            "VernacExtend",
            "801ba56784b1b1211a914a1c473c8096df085520"
        ],
        [
            "intro H'3; elim H'3.",
            "VernacExtend",
            "c0333f35d37b1f8936a8a8968deeaf3c227acbce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Complement_Complement : forall A:Ensemble U, Complement U (Complement U A) = A.",
            "VernacStartTheoremProof",
            "05aaa10e7aef7e45d1f9c72ffce000b5446f462f"
        ],
        [
            "unfold Complement; intros; apply Extensionality_Ensembles; auto with sets.",
            "VernacExtend",
            "42abf9a9d5d258f9fe546cfa10d08508f7d76eef"
        ],
        [
            "red; split; auto with sets.",
            "VernacExtend",
            "9cb56462c2fcbfcfc8abadefd90bf3c0bf4cfe59"
        ],
        [
            "red; intros; apply NNPP; auto with sets.",
            "VernacExtend",
            "00f8b34ae1d1cd189f28737ff5799aceafa26f92"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Ensembles_classical.",
            "VernacEndSegment",
            "299045acd5e7cf44130ed3066e51c7beb4178ce9"
        ],
        [
            "Hint Resolve Strict_super_set_contains_new_element Subtract_intro not_SIncl_empty: sets.",
            "VernacHints",
            "bf9811f087a00a0a4c78338a86f6e2dd4ec15ebf"
        ]
    ],
    "proofs": [
        {
            "name": "not_included_empty_Inhabited",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros A NI.",
                        "VernacExtend",
                        "09f99b89a2b45a083832694ea31a665b10a92338"
                    ]
                },
                {
                    "command": [
                        "elim (not_all_ex_not U (fun x:U => ~ In U A x)).",
                        "VernacExtend",
                        "aa366d92b8d7a9b810278c6a35a12811ff62a933"
                    ]
                },
                {
                    "command": [
                        "intros x H; apply Inhabited_intro with x.",
                        "VernacExtend",
                        "8020639bd7326aaef60f2c9bbd845f0f9d38106d"
                    ]
                },
                {
                    "command": [
                        "apply NNPP; auto with sets.",
                        "VernacExtend",
                        "3643e6ad215fb6055b77576bbac6a34c3c366789"
                    ]
                },
                {
                    "command": [
                        "red; intro.",
                        "VernacExtend",
                        "12e00b6ab6f8834b6f81959ca42843abaa311f37"
                    ]
                },
                {
                    "command": [
                        "apply NI; red.",
                        "VernacExtend",
                        "dba0a5d1b2082533f7d6ca68a3cb9edf01819c73"
                    ]
                },
                {
                    "command": [
                        "intros x H'; elim (H x); trivial with sets.",
                        "VernacExtend",
                        "b3b1a7dc61424dbdce82f8c84275a920e675cb5d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_empty_Inhabited",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros; apply not_included_empty_Inhabited.",
                        "VernacExtend",
                        "9378f4acf16b62472585ce6a346857c63289b961"
                    ]
                },
                {
                    "command": [
                        "red; auto with sets.",
                        "VernacExtend",
                        "ffc804aa8d8444e0893b4cd035cf28ddd74f74d5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Inhabited_Setminus",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros X Y I NI.",
                        "VernacExtend",
                        "4de07568bbd72730493dbc7059461ce76d684250"
                    ]
                },
                {
                    "command": [
                        "elim (not_all_ex_not U (fun x:U => In U Y x -> In U X x) NI).",
                        "VernacExtend",
                        "5fc4cc449765f8a2704873e16af119dba7e99d9d"
                    ]
                },
                {
                    "command": [
                        "intros x YX.",
                        "VernacExtend",
                        "a2ffd7457631057572e965452784b5b3a56c7680"
                    ]
                },
                {
                    "command": [
                        "apply Inhabited_intro with x.",
                        "VernacExtend",
                        "72d238d5806deee498bcffa271b171015d50367c"
                    ]
                },
                {
                    "command": [
                        "apply Setminus_intro.",
                        "VernacExtend",
                        "e2755c9d951605a26ba0feb62b16ad59b1a6146d"
                    ]
                },
                {
                    "command": [
                        "apply not_imply_elim with (In U X x); trivial with sets.",
                        "VernacExtend",
                        "20a4758f671c5e0f7e687ad588f9bb9cac9e764e"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Strict_super_set_contains_new_element",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "auto 7 using Inhabited_Setminus with sets.",
                        "VernacExtend",
                        "101cba25791c8c36661b6e1ca93960e53de80eac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Subtract_intro",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "unfold Subtract at 1; auto with sets.",
                        "VernacExtend",
                        "c1271f6399461a41c784a6acecfa2acb35f881ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Subtract_inv",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros A x y H'; elim H'; auto with sets.",
                        "VernacExtend",
                        "d3b9a801fff0999f9e0df50501f89f87a04ac00d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Included_Strict_Included",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros X Y H'; try assumption.",
                        "VernacExtend",
                        "f3432c69bf19a4559c3e20fcf758b0b6309890a2"
                    ]
                },
                {
                    "command": [
                        "elim (classic (X = Y)); auto with sets.",
                        "VernacExtend",
                        "6b2e9f9ca0907982e1f9a46ff6aef4f0c7a798f2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Strict_Included_inv",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros X Y H'; red in H'.",
                        "VernacExtend",
                        "a2bbe9a28ddbc9a96bb6365af80ec818d87117f3"
                    ]
                },
                {
                    "command": [
                        "split; [ tauto | idtac ].",
                        "VernacExtend",
                        "eeb813fb82348c980411a834a36457ed83056acd"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros H'0 H'1; try exact H'1; clear H'.",
                        "VernacExtend",
                        "f3457e3ad18cb678f929f379185da1fd26a5caef"
                    ]
                },
                {
                    "command": [
                        "apply Strict_super_set_contains_new_element; auto with sets.",
                        "VernacExtend",
                        "0f771721b29bb1ebc2f500abea251a62bbeb9706"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_SIncl_empty",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "intro X; red; intro H'; try exact H'.",
                        "VernacExtend",
                        "46c0323aa42f672969c67b0ea4e9ae24fa76def5"
                    ]
                },
                {
                    "command": [
                        "lapply (Strict_Included_inv X (Empty_set U)); auto with sets.",
                        "VernacExtend",
                        "485d9bc0ea8b55e206137297b65153bb190237d5"
                    ]
                },
                {
                    "command": [
                        "intro H'0; elim H'0; intros H'1 H'2; elim H'2; clear H'0.",
                        "VernacExtend",
                        "b056e02d01dbf1a61e9672b882416ee9aad613df"
                    ]
                },
                {
                    "command": [
                        "intros x H'0; elim H'0.",
                        "VernacExtend",
                        "801ba56784b1b1211a914a1c473c8096df085520"
                    ]
                },
                {
                    "command": [
                        "intro H'3; elim H'3.",
                        "VernacExtend",
                        "c0333f35d37b1f8936a8a8968deeaf3c227acbce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Complement_Complement",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "unfold Complement; intros; apply Extensionality_Ensembles; auto with sets.",
                        "VernacExtend",
                        "42abf9a9d5d258f9fe546cfa10d08508f7d76eef"
                    ]
                },
                {
                    "command": [
                        "red; split; auto with sets.",
                        "VernacExtend",
                        "9cb56462c2fcbfcfc8abadefd90bf3c0bf4cfe59"
                    ]
                },
                {
                    "command": [
                        "red; intros; apply NNPP; auto with sets.",
                        "VernacExtend",
                        "00f8b34ae1d1cd189f28737ff5799aceafa26f92"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}