{
    "filename": "theories/Sets/Powerset_Classical_facts.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export Ensembles.",
            "VernacRequire",
            "28e420a8cd6ad0b629b3aed17ea481c322132121"
        ],
        [
            "Require Export Constructive_sets.",
            "VernacRequire",
            "1ab62e257413a8f4f55081d9a0217597d3378008"
        ],
        [
            "Require Export Relations_1.",
            "VernacRequire",
            "0a235b67d46a5e07126344dcec7eaaebb80561a3"
        ],
        [
            "Require Export Relations_1_facts.",
            "VernacRequire",
            "34a061e815312f5368cc12be7194337f5c88edf0"
        ],
        [
            "Require Export Partial_Order.",
            "VernacRequire",
            "620b892546e66787e1555b23d5ebbc6bcc2bdfdb"
        ],
        [
            "Require Export Cpo.",
            "VernacRequire",
            "e823b210d5495dae61934de781846c5f91f0ad94"
        ],
        [
            "Require Export Powerset.",
            "VernacRequire",
            "4fb4eb435f26c14af8fe29e2df323d898a6fd29a"
        ],
        [
            "Require Export Powerset_facts.",
            "VernacRequire",
            "c29c40d605abd2bf3e7bb2446860c20e47a33999"
        ],
        [
            "Require Export Classical.",
            "VernacRequire",
            "931639e04b7f4b817db4e158c9ff078a0a2025f4"
        ],
        [
            "Require Export Classical_sets.",
            "VernacRequire",
            "1fca917462e7d178d643bee043d06f12c733de74"
        ],
        [
            "Section Sets_as_an_algebra.",
            "VernacBeginSection",
            "3c8ce90743030b0bec6533872b956b56987bb69b"
        ],
        [
            "Variable U : Type.",
            "VernacAssumption",
            "eb05258af3da16894daf420a97be779934a15d7e"
        ],
        [
            "Lemma sincl_add_x : forall (A B:Ensemble U) (x:U), ~ In U A x -> Strict_Included U (Add U A x) (Add U B x) -> Strict_Included U A B.",
            "VernacStartTheoremProof",
            "8dff90b8b725b35c00a2c851ef270d39d175a744"
        ],
        [
            "intros A B x H' H'0; red.",
            "VernacExtend",
            "b1e7b9c5e98d329d274cdd7bde19e2681b07fe39"
        ],
        [
            "lapply (Strict_Included_inv U (Add U A x) (Add U B x)); auto with sets.",
            "VernacExtend",
            "4d1af5b65767aba6f812301ad2631c4938fdafc9"
        ],
        [
            "clear H'0; intro H'0; split.",
            "VernacExtend",
            "eab68c9553c23a7cddc9db46d5eb0c56d85678a0"
        ],
        [
            "apply incl_add_x with (x := x); tauto.",
            "VernacExtend",
            "9259cf89b94b7c5692314ae34af4e042784faec6"
        ],
        [
            "elim H'0; intros H'1 H'2; elim H'2; clear H'0 H'2.",
            "VernacExtend",
            "c0258b43180e68e3a0d55700cc55333c4f37f915"
        ],
        [
            "intros x0 H'0.",
            "VernacExtend",
            "8750ac3a23c686ddfa2ddb1f22acbd68bd0bdbbd"
        ],
        [
            "red; intro H'2.",
            "VernacExtend",
            "2b98b3648f4f63a08a2d4f29c7d52a262c031c9b"
        ],
        [
            "elim H'0; clear H'0.",
            "VernacExtend",
            "7762b71a83022fb4fe80efea2d0accec1dc23596"
        ],
        [
            "rewrite <- H'2; auto with sets.",
            "VernacExtend",
            "1177f0dbb42213d5eb9ce0cbb0698ccb88a84312"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incl_soustr_in : forall (X:Ensemble U) (x:U), In U X x -> Included U (Subtract U X x) X.",
            "VernacStartTheoremProof",
            "e6d57495a9ef7a07f0692ac752e1d90e84cf581c"
        ],
        [
            "intros X x H'; red.",
            "VernacExtend",
            "d1607d6c43abef5352e18e688ce2bb84d9b31309"
        ],
        [
            "intros x0 H'0; elim H'0; auto with sets.",
            "VernacExtend",
            "f797fbc10288d8435416457b9b92c97bb4f2ef4f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incl_soustr : forall (X Y:Ensemble U) (x:U), Included U X Y -> Included U (Subtract U X x) (Subtract U Y x).",
            "VernacStartTheoremProof",
            "9267ea3c109abba5e0e85c2d3d4f76b2db3c6722"
        ],
        [
            "intros X Y x H'; red.",
            "VernacExtend",
            "58ae33e91db9522d2481e046889c88d04ab0a81d"
        ],
        [
            "intros x0 H'0; elim H'0.",
            "VernacExtend",
            "5e4a7bcc0f1508ccd51d691ec0fc86e61b3564cf"
        ],
        [
            "intros H'1 H'2.",
            "VernacExtend",
            "7a23b9b623f1e0b29a054bf061a5d299d6d4f251"
        ],
        [
            "apply Subtract_intro; auto with sets.",
            "VernacExtend",
            "5703dcf4729fd4cc4047b766ee11f8184f2dffff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incl_soustr_add_l : forall (X:Ensemble U) (x:U), Included U (Subtract U (Add U X x) x) X.",
            "VernacStartTheoremProof",
            "ed114a199d3ec622aa63c8b2f633fa422b149dac"
        ],
        [
            "intros X x; red.",
            "VernacExtend",
            "6ffe94a3764a18e5f98e6d12fb856f31ab0fd452"
        ],
        [
            "intros x0 H'; elim H'; auto with sets.",
            "VernacExtend",
            "8aeef0dddaa77ea54c4247cf39c2be38fcd24edf"
        ],
        [
            "intro H'0; elim H'0; auto with sets.",
            "VernacExtend",
            "fa4ca168c0c240b17650fe3819197bf62f88a329"
        ],
        [
            "intros t H'1 H'2; elim H'2; auto with sets.",
            "VernacExtend",
            "a0984d510e3cf2fddaa3e262944129221807c638"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incl_soustr_add_r : forall (X:Ensemble U) (x:U), ~ In U X x -> Included U X (Subtract U (Add U X x) x).",
            "VernacStartTheoremProof",
            "16b6462964722aef9916a8463d0d2bf24f6b9499"
        ],
        [
            "intros X x H'; red.",
            "VernacExtend",
            "d1607d6c43abef5352e18e688ce2bb84d9b31309"
        ],
        [
            "intros x0 H'0; try assumption.",
            "VernacExtend",
            "a1fca524ae8ac7aceeac28ce713c7547de55485b"
        ],
        [
            "apply Subtract_intro; auto with sets.",
            "VernacExtend",
            "5703dcf4729fd4cc4047b766ee11f8184f2dffff"
        ],
        [
            "red; intro H'1; apply H'; rewrite H'1; auto with sets.",
            "VernacExtend",
            "3aa82a740ea337443bd87e74599a8bf3f859451a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve incl_soustr_add_r: sets.",
            "VernacHints",
            "bc921603c317b3d5e6f99f0a440b50b387928720"
        ],
        [
            "Lemma add_soustr_2 : forall (X:Ensemble U) (x:U), In U X x -> Included U X (Add U (Subtract U X x) x).",
            "VernacStartTheoremProof",
            "7aa5c0d14a5b50a013fac9fc8f9429614d42d270"
        ],
        [
            "intros X x H'; red.",
            "VernacExtend",
            "d1607d6c43abef5352e18e688ce2bb84d9b31309"
        ],
        [
            "intros x0 H'0; try assumption.",
            "VernacExtend",
            "a1fca524ae8ac7aceeac28ce713c7547de55485b"
        ],
        [
            "elim (classic (x = x0)); intro K; auto with sets.",
            "VernacExtend",
            "dfe8eb95bc739666586b4614ce2a47861f9ac4bf"
        ],
        [
            "elim K; auto with sets.",
            "VernacExtend",
            "e7a890c35d8a4f8f6b38d9621f9110f16a002e9e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_soustr_1 : forall (X:Ensemble U) (x:U), In U X x -> Included U (Add U (Subtract U X x) x) X.",
            "VernacStartTheoremProof",
            "13de4f14263e7f6c04fdbf68a202bc5c611ef53c"
        ],
        [
            "intros X x H'; red.",
            "VernacExtend",
            "d1607d6c43abef5352e18e688ce2bb84d9b31309"
        ],
        [
            "intros x0 H'0; elim H'0; auto with sets.",
            "VernacExtend",
            "f797fbc10288d8435416457b9b92c97bb4f2ef4f"
        ],
        [
            "intros y H'1; elim H'1; auto with sets.",
            "VernacExtend",
            "42eeacf79e64716ea6bf402e7995eb11ce934ff9"
        ],
        [
            "intros t H'1; try assumption.",
            "VernacExtend",
            "572190932a97c5774f6fc2044b03bdd35c702454"
        ],
        [
            "rewrite <- (Singleton_inv U x t); auto with sets.",
            "VernacExtend",
            "a9da72d5d63723ff802fdee400e0aff71b08c5b4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_soustr_xy : forall (X:Ensemble U) (x y:U), x <> y -> Subtract U (Add U X x) y = Add U (Subtract U X y) x.",
            "VernacStartTheoremProof",
            "788b4d01f8f1a98dd5aedc73a6ac0bced971626b"
        ],
        [
            "intros X x y H'; apply Extensionality_Ensembles.",
            "VernacExtend",
            "45d4c8051a78fbf5093f8260fd16b91837d0becf"
        ],
        [
            "split; red.",
            "VernacExtend",
            "e714e081737563af97516bdb614a3b3dfd1d1a88"
        ],
        [
            "intros x0 H'0; elim H'0; auto with sets.",
            "VernacExtend",
            "f797fbc10288d8435416457b9b92c97bb4f2ef4f"
        ],
        [
            "intro H'1; elim H'1.",
            "VernacExtend",
            "9513d77709c6b0b1aafc3d412f86489e9628a975"
        ],
        [
            "intros u H'2 H'3; try assumption.",
            "VernacExtend",
            "6b9be4d2352769a9b881257a4299d6259394cbb6"
        ],
        [
            "apply Add_intro1.",
            "VernacExtend",
            "fdadbaac0c740ba7fc6ac98999feeded6bc55e7e"
        ],
        [
            "apply Subtract_intro; auto with sets.",
            "VernacExtend",
            "5703dcf4729fd4cc4047b766ee11f8184f2dffff"
        ],
        [
            "intros t H'2 H'3; try assumption.",
            "VernacExtend",
            "bf86c1bdb3d5d007c3b8f4b02e5fcdee2a7404b3"
        ],
        [
            "elim (Singleton_inv U x t); auto with sets.",
            "VernacExtend",
            "fef20beebf51cde846eaf7eff1ac59fe566247b2"
        ],
        [
            "intros u H'2; try assumption.",
            "VernacExtend",
            "11e6315f604d9ecd9d0a6a00a4ca7acd69e55a8f"
        ],
        [
            "elim (Add_inv U (Subtract U X y) x u); auto with sets.",
            "VernacExtend",
            "553d906ee1b81ff9f8f1610e74f3790c2edffa68"
        ],
        [
            "intro H'0; elim H'0; auto with sets.",
            "VernacExtend",
            "fa4ca168c0c240b17650fe3819197bf62f88a329"
        ],
        [
            "intro H'0; rewrite <- H'0; auto with sets.",
            "VernacExtend",
            "fbc0854e034ba28fe9d928f06cd450ade1ec963b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incl_st_add_soustr : forall (X Y:Ensemble U) (x:U), ~ In U X x -> Strict_Included U (Add U X x) Y -> Strict_Included U X (Subtract U Y x).",
            "VernacStartTheoremProof",
            "e1046ccd5d355568da56ae0490b530feb509a873"
        ],
        [
            "intros X Y x H' H'0; apply sincl_add_x with (x := x); auto using add_soustr_1 with sets.",
            "VernacExtend",
            "32a846201d389071a4dc5b95de86109776bff037"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "elim H'0.",
            "VernacExtend",
            "18ed276c915a3d073f203332aa6c39da8c5934bf"
        ],
        [
            "intros H'1 H'2.",
            "VernacExtend",
            "7a23b9b623f1e0b29a054bf061a5d299d6d4f251"
        ],
        [
            "generalize (Inclusion_is_transitive U).",
            "VernacExtend",
            "9d6a3c21dbef3f90f77530f395c6ad67d7a4ecbf"
        ],
        [
            "intro H'4; red in H'4.",
            "VernacExtend",
            "b581e8c67c739d104449446c551728681d78ed40"
        ],
        [
            "apply H'4 with (y := Y); auto using add_soustr_2 with sets.",
            "VernacExtend",
            "4a1aedc6b90cbade02f8d7a82bbe9f0e45c122bb"
        ],
        [
            "red in H'0.",
            "VernacExtend",
            "d5049e9647c88c352fa78e07b8260e57ba8ee09f"
        ],
        [
            "elim H'0; intros H'1 H'2; try exact H'1; clear H'0.",
            "VernacExtend",
            "009c1974c4beb77ac0663a8f920abe9ecc990a79"
        ],
        [
            "red; intro H'0; apply H'2.",
            "VernacExtend",
            "05024f5a06185c7e732ff053d90655e030061501"
        ],
        [
            "rewrite H'0; auto 8 using add_soustr_xy, add_soustr_1, add_soustr_2 with sets.",
            "VernacExtend",
            "34455720f79186f47ae48760f542ff0d063cc2fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Sub_Add_new : forall (X:Ensemble U) (x:U), ~ In U X x -> X = Subtract U (Add U X x) x.",
            "VernacStartTheoremProof",
            "4a702fd60ac152a875ce2b6c2c46da169774bdf3"
        ],
        [
            "auto using incl_soustr_add_l with sets.",
            "VernacExtend",
            "a59a3f9c1a47ca8b9a0aa33f74c20bdf875afd06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Simplify_add : forall (X X0:Ensemble U) (x:U), ~ In U X x -> ~ In U X0 x -> Add U X x = Add U X0 x -> X = X0.",
            "VernacStartTheoremProof",
            "a70485beb937fbb96ece17aafd7f383cb8e8c925"
        ],
        [
            "intros X X0 x H' H'0 H'1; try assumption.",
            "VernacExtend",
            "a69ae6ab33f5931e13bf896c802a2ec37d141616"
        ],
        [
            "rewrite (Sub_Add_new X x); auto with sets.",
            "VernacExtend",
            "10ce2d371f9978e9337cdc50eb38de3635222d94"
        ],
        [
            "rewrite (Sub_Add_new X0 x); auto with sets.",
            "VernacExtend",
            "d542aec5ae25d1b6a4a3001be5d979eaf112f4e7"
        ],
        [
            "rewrite H'1; auto with sets.",
            "VernacExtend",
            "1fc0127fb0a006f7f923d9649987bc949e24174f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Included_Add : forall (X A:Ensemble U) (x:U), Included U X (Add U A x) -> Included U X A \\/ (exists A' : _, X = Add U A' x /\\ Included U A' A).",
            "VernacStartTheoremProof",
            "01209b5dbb0c672aaeb53ee2f96d20bcf5f61925"
        ],
        [
            "intros X A x H'0; try assumption.",
            "VernacExtend",
            "59b7d9221d8cc4df91159d9b7d60c17c573810a9"
        ],
        [
            "elim (classic (In U X x)).",
            "VernacExtend",
            "769010cb843ae4ca89753f70094c49f7afd1dd59"
        ],
        [
            "intro H'1; right; try assumption.",
            "VernacExtend",
            "435c2ea2f29012fd6e0b31d04f95bc6659f46b1e"
        ],
        [
            "exists (Subtract U X x).",
            "VernacExtend",
            "5e85972d983ff68711247420635271bb77287d93"
        ],
        [
            "split; auto using incl_soustr_in, add_soustr_xy, add_soustr_1, add_soustr_2 with sets.",
            "VernacExtend",
            "eb6d1ed198382b2b0524539b2ac4cad7ac4979d1"
        ],
        [
            "red in H'0.",
            "VernacExtend",
            "d5049e9647c88c352fa78e07b8260e57ba8ee09f"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x0 H'2; try assumption.",
            "VernacExtend",
            "6911cac8f5655f2cbe310c916c94c693696cb2f8"
        ],
        [
            "lapply (Subtract_inv U X x x0); auto with sets.",
            "VernacExtend",
            "59ca0ad8037ab364af790625015cf3ebd977fb1a"
        ],
        [
            "intro H'3; elim H'3; intros K K'; clear H'3.",
            "VernacExtend",
            "690eeb1d51f03fa2dd53c94f90939bc3a694bde0"
        ],
        [
            "lapply (H'0 x0); auto with sets.",
            "VernacExtend",
            "cd8d37602a06ab7002716f3ed54ec12d4ddad986"
        ],
        [
            "intro H'3; try assumption.",
            "VernacExtend",
            "a7db59f438ecbf13a028d63ee9e76eedacb9de97"
        ],
        [
            "lapply (Add_inv U A x x0); auto with sets.",
            "VernacExtend",
            "b705c10e2f035e1b2430b4d30391680de91dc639"
        ],
        [
            "intro H'4; elim H'4; [ intro H'5; try exact H'5; clear H'4 | intro H'5; clear H'4 ].",
            "VernacExtend",
            "d1b533057536eb1d866c25bc51f7414410a28f48"
        ],
        [
            "elim K'; auto with sets.",
            "VernacExtend",
            "33bfee897751387a764f0023bb527378ef6c4733"
        ],
        [
            "intro H'1; left; try assumption.",
            "VernacExtend",
            "7d429db17483bb734d786ce445d6bacaedb4edbc"
        ],
        [
            "red in H'0.",
            "VernacExtend",
            "d5049e9647c88c352fa78e07b8260e57ba8ee09f"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x0 H'2; try assumption.",
            "VernacExtend",
            "6911cac8f5655f2cbe310c916c94c693696cb2f8"
        ],
        [
            "lapply (H'0 x0); auto with sets.",
            "VernacExtend",
            "cd8d37602a06ab7002716f3ed54ec12d4ddad986"
        ],
        [
            "intro H'3; try assumption.",
            "VernacExtend",
            "a7db59f438ecbf13a028d63ee9e76eedacb9de97"
        ],
        [
            "lapply (Add_inv U A x x0); auto with sets.",
            "VernacExtend",
            "b705c10e2f035e1b2430b4d30391680de91dc639"
        ],
        [
            "intro H'4; elim H'4; [ intro H'5; try exact H'5; clear H'4 | intro H'5; clear H'4 ].",
            "VernacExtend",
            "d1b533057536eb1d866c25bc51f7414410a28f48"
        ],
        [
            "absurd (In U X x0); auto with sets.",
            "VernacExtend",
            "b786ab7447c76f5c4a3e43683e0c8afb8623c5a9"
        ],
        [
            "rewrite <- H'5; auto with sets.",
            "VernacExtend",
            "28f23fda25e8eac90c260d1528cb647bfb0dd257"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma setcover_inv : forall A x y:Ensemble U, covers (Ensemble U) (Power_set_PO U A) y x -> Strict_Included U x y /\\ (forall z:Ensemble U, Included U x z -> Included U z y -> x = z \\/ z = y).",
            "VernacStartTheoremProof",
            "4ed85d06723c050e4117d47913e7d923151709db"
        ],
        [
            "intros A x y H'; elim H'.",
            "VernacExtend",
            "9f5aaae0da728e3a46322a88b10647fd75962fc7"
        ],
        [
            "unfold Strict_Rel_of; simpl.",
            "VernacExtend",
            "fcb49401d5685915721eab82c788e65d8802a890"
        ],
        [
            "intros H'0 H'1; split; [ auto with sets | idtac ].",
            "VernacExtend",
            "bc8633ff591618369f948f41f6f005cf3260b0a6"
        ],
        [
            "intros z H'2 H'3; try assumption.",
            "VernacExtend",
            "0f364f932d37ec322b150ccdc8618510b096d833"
        ],
        [
            "elim (classic (x = z)); auto with sets.",
            "VernacExtend",
            "a69b62ae089f6b35b79b2dca940f501aee3fda87"
        ],
        [
            "intro H'4; right; try assumption.",
            "VernacExtend",
            "8eb96e8eeb5b8e12ba78627118987cc69e853d82"
        ],
        [
            "elim (classic (z = y)); auto with sets.",
            "VernacExtend",
            "a4a09987c15988e52af7b8e9093b6cb98b5325a9"
        ],
        [
            "intro H'5; try assumption.",
            "VernacExtend",
            "339cd062da34785f6642bb6e7a4e5a29022e4f23"
        ],
        [
            "elim H'1.",
            "VernacExtend",
            "adde82f993f35778617a2db796b0637a05aa745b"
        ],
        [
            "exists z; auto with sets.",
            "VernacExtend",
            "5f4590aab006ddfc20e0c4efdd3d009709d2b9b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Add_covers : forall A a:Ensemble U, Included U a A -> forall x:U, In U A x -> ~ In U a x -> covers (Ensemble U) (Power_set_PO U A) (Add U a x) a.",
            "VernacStartTheoremProof",
            "c6b7270bfbc2d0843f41a924fbe2d6bf70737215"
        ],
        [
            "intros A a H' x H'0 H'1; try assumption.",
            "VernacExtend",
            "d6a01a1f32325ecc9c6287b54736bb3bc87aad94"
        ],
        [
            "apply setcover_intro; auto with sets.",
            "VernacExtend",
            "0eb375ace779247f75ccc395400d194c514ca708"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "split; [ idtac | red; intro H'2; try exact H'2 ]; auto with sets.",
            "VernacExtend",
            "457e1cec8d7388c5c661dbab17c72083f1acd7a4"
        ],
        [
            "apply H'1.",
            "VernacExtend",
            "2b7bd50c89c5f32cbcdbf60608d222a7ec656f24"
        ],
        [
            "rewrite H'2; auto with sets.",
            "VernacExtend",
            "0d8d966804dcc92ce55161546dd0f2eac937676e"
        ],
        [
            "red; intro H'2; elim H'2; clear H'2.",
            "VernacExtend",
            "ca31859c6076b06c4398995b7ffed5846ca1f278"
        ],
        [
            "intros z H'2; elim H'2; intros H'3 H'4; try exact H'3; clear H'2.",
            "VernacExtend",
            "583d5c1edc763090aa257d37fd92eb4b11c193d4"
        ],
        [
            "lapply (Strict_Included_inv U a z); auto with sets; clear H'3.",
            "VernacExtend",
            "6f5529f03c36d2493fa574dec8e8fbf95ef2b75f"
        ],
        [
            "intro H'2; elim H'2; intros H'3 H'5; elim H'5; clear H'2 H'5.",
            "VernacExtend",
            "5e33ac284f949d35a40a97cb0e2e03ae6eb8737b"
        ],
        [
            "intros x0 H'2; elim H'2.",
            "VernacExtend",
            "f209c95567362faf9438579663201e0a104b0606"
        ],
        [
            "intros H'5 H'6; try assumption.",
            "VernacExtend",
            "430e865867d45069d1a54ea85eda323d56be9ba3"
        ],
        [
            "generalize H'4; intro K.",
            "VernacExtend",
            "ab837d6409b7e59c063bf5fda84ef5acaa76e871"
        ],
        [
            "red in H'4.",
            "VernacExtend",
            "d0b0b48062d3569d2c83c3b84a1d763e1fcd9381"
        ],
        [
            "elim H'4; intros H'8 H'9; red in H'8; clear H'4.",
            "VernacExtend",
            "81c0b551fd505a34f26d5af6a4750fb426ce27fb"
        ],
        [
            "lapply (H'8 x0); auto with sets.",
            "VernacExtend",
            "fa9a9652fadbd3677903cdfc7ad4a5038cbb7f77"
        ],
        [
            "intro H'7; try assumption.",
            "VernacExtend",
            "a08be26e919101b48af6da959ca45a53dc2f8fb9"
        ],
        [
            "elim (Add_inv U a x x0); auto with sets.",
            "VernacExtend",
            "05cac7095e9a20e08ab812998602f3262a34a5c3"
        ],
        [
            "intro H'15.",
            "VernacExtend",
            "0d51715fbbd29352d3e5b7fd9b85cf31dda91f78"
        ],
        [
            "cut (Included U (Add U a x) z).",
            "VernacExtend",
            "1755f3375d4703b5f525dfd5969d367dd8a205e1"
        ],
        [
            "intro H'10; try assumption.",
            "VernacExtend",
            "be4496be80ef3fccb145bcd4a1ee55dc48ad8b8d"
        ],
        [
            "red in K.",
            "VernacExtend",
            "ecfdcfbb1996781f436e3a9ef8845d608f0396fb"
        ],
        [
            "elim K; intros H'11 H'12; apply H'12; clear K; auto with sets.",
            "VernacExtend",
            "4e85d860a793921a7829d24537db0f092751eab5"
        ],
        [
            "rewrite H'15.",
            "VernacExtend",
            "7ca60d64337d5278cde47cc7e3fbef41341c1927"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x1 H'10; elim H'10; auto with sets.",
            "VernacExtend",
            "e29087343ea4bb1264b5ee0a423ecbaf2e99b038"
        ],
        [
            "intros x2 H'11; elim H'11; auto with sets.",
            "VernacExtend",
            "ca2d4a7a5177c69f9856314841eccb4df2ad550d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem covers_Add : forall A a a':Ensemble U, Included U a A -> Included U a' A -> covers (Ensemble U) (Power_set_PO U A) a' a -> exists x : _, a' = Add U a x /\\ In U A x /\\ ~ In U a x.",
            "VernacStartTheoremProof",
            "0b81d377feb0f79d1b859725a3ce3cda324cfb6f"
        ],
        [
            "intros A a a' H' H'0 H'1; try assumption.",
            "VernacExtend",
            "f593240f465b76a054a16b5e06e89301ee9c0b31"
        ],
        [
            "elim (setcover_inv A a a'); auto with sets.",
            "VernacExtend",
            "6de6a225f8043b75fd0ebdd26de6316245fe6102"
        ],
        [
            "intros H'6 H'7.",
            "VernacExtend",
            "3426bcb1cbf0507a08df5a3939e811df081e98a3"
        ],
        [
            "clear H'1.",
            "VernacExtend",
            "fa6db17ea680156e30374dd6ed2ac96a5a234447"
        ],
        [
            "elim (Strict_Included_inv U a a'); auto with sets.",
            "VernacExtend",
            "5a1416ed51943bfbbe29f118e52aef22935bf905"
        ],
        [
            "intros H'5 H'8; elim H'8.",
            "VernacExtend",
            "1292989c3d72f999f236b2e0abab76405540df54"
        ],
        [
            "intros x H'1; elim H'1.",
            "VernacExtend",
            "7cf6e9d1d52fb8e986ba659550969eb87fe9495e"
        ],
        [
            "intros H'2 H'3; try assumption.",
            "VernacExtend",
            "adbe0b61f42a2a296426b3cdb037e35e4912d301"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split; [ try assumption | idtac ].",
            "VernacExtend",
            "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
        ],
        [
            "clear H'8 H'1.",
            "VernacExtend",
            "cd859f02c263c860b1d54a6f37b7c03699b30c05"
        ],
        [
            "elim (H'7 (Add U a x)); auto with sets.",
            "VernacExtend",
            "e6e85e781d5734ad95cf1087f966ecc4799e49d7"
        ],
        [
            "intro H'1.",
            "VernacExtend",
            "2d0e7b3ab5d8ef3cb27772f9e59cc20e3e039534"
        ],
        [
            "absurd (a = Add U a x); auto with sets.",
            "VernacExtend",
            "1d9f9668cdafda029421a821b4443eba38618c67"
        ],
        [
            "red; intro H'8; try exact H'8.",
            "VernacExtend",
            "468f966aba33a6bb27620b636c8b2b6db49adf11"
        ],
        [
            "apply H'3.",
            "VernacExtend",
            "157087ee27cbbeee4a92c1b9743341d04271c1bb"
        ],
        [
            "rewrite H'8; auto with sets.",
            "VernacExtend",
            "96aff37ba7deb50cf4f33fbf1da2650e81c7bf6c"
        ],
        [
            "auto with sets.",
            "VernacExtend",
            "cc4a8a70363fb61833dbd374f2330c971128a364"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x0 H'1; elim H'1; auto with sets.",
            "VernacExtend",
            "44e428d76ae94865f9058751a272c2faf5201903"
        ],
        [
            "intros x1 H'8; elim H'8; auto with sets.",
            "VernacExtend",
            "66f8b88c4813441c5c41c9b2f5d33368c6beffc6"
        ],
        [
            "split; [ idtac | try assumption ].",
            "VernacExtend",
            "c51dd02c76c3fc17e5bffc3bbcf27d25c5cb3a50"
        ],
        [
            "red in H'0; auto with sets.",
            "VernacExtend",
            "6a21c7c5f1039af6679ad8ab01d47baf825e0d9b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem covers_is_Add : forall A a a':Ensemble U, Included U a A -> Included U a' A -> (covers (Ensemble U) (Power_set_PO U A) a' a <-> (exists x : _, a' = Add U a x /\\ In U A x /\\ ~ In U a x)).",
            "VernacStartTheoremProof",
            "c4b1efb6c82beb1aadf04d7e06e4a563135cf9ac"
        ],
        [
            "intros A a a' H' H'0; split; intro K.",
            "VernacExtend",
            "0f00aab7118a5bff66f54fa598c6818b9b3852c4"
        ],
        [
            "apply covers_Add with (A := A); auto with sets.",
            "VernacExtend",
            "1f021c58f73cc322e5c72d844f53387fa235c2e3"
        ],
        [
            "elim K.",
            "VernacExtend",
            "e68a339579b755eb8ab054cde49b81d900bbf5ae"
        ],
        [
            "intros x H'1; elim H'1; intros H'2 H'3; rewrite H'2; clear H'1.",
            "VernacExtend",
            "068df24cd26d8046d4e1ccdc04f714652985a0a1"
        ],
        [
            "apply Add_covers; intuition.",
            "VernacExtend",
            "48e211de739aa2b2dfaa02cced60c66ad873366c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Singleton_atomic : forall (x:U) (A:Ensemble U), In U A x -> covers (Ensemble U) (Power_set_PO U A) (Singleton U x) (Empty_set U).",
            "VernacStartTheoremProof",
            "50c06eeccc8b179c53f63571949438cef76111c9"
        ],
        [
            "intros x A H'.",
            "VernacExtend",
            "d8b6cc74059dde3746c6cc5569dc5ee51d945ed6"
        ],
        [
            "rewrite <- (Empty_set_zero' U x).",
            "VernacExtend",
            "1c1473f56105023829e61bdfd7a06ad5c84eb5e0"
        ],
        [
            "apply Add_covers; auto with sets.",
            "VernacExtend",
            "c106d40b79f97e333f0b41065702be78bde94ef9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma less_than_singleton : forall (X:Ensemble U) (x:U), Strict_Included U X (Singleton U x) -> X = Empty_set U.",
            "VernacStartTheoremProof",
            "7797d652479def6cb7bd7ba8b63388ade0583cee"
        ],
        [
            "intros X x H'; try assumption.",
            "VernacExtend",
            "6c4f95ab66449b75ffd1d0edb5941b81d1864da7"
        ],
        [
            "red in H'.",
            "VernacExtend",
            "b3f39ff59e03e63f7335587cdc4b70d75813b637"
        ],
        [
            "lapply (Singleton_atomic x (Full_set U)); [ intro H'2; try exact H'2 | apply Full_intro ].",
            "VernacExtend",
            "7df829a71c33e38774ac8b2826f9c5d60d5ea06b"
        ],
        [
            "elim H'; intros H'0 H'1; try exact H'1; clear H'.",
            "VernacExtend",
            "f3457e3ad18cb678f929f379185da1fd26a5caef"
        ],
        [
            "elim (setcover_inv (Full_set U) (Empty_set U) (Singleton U x)); [ intros H'6 H'7; try exact H'7 | idtac ]; auto with sets.",
            "VernacExtend",
            "427179950d0a4eca6d760d49ab4c9a524c8e2aa7"
        ],
        [
            "elim (H'7 X); [ intro H'5; try exact H'5 | intro H'5 | idtac | idtac ]; auto with sets.",
            "VernacExtend",
            "834422306ad9cddbc1cfc677ae1345914a884eb2"
        ],
        [
            "elim H'1; auto with sets.",
            "VernacExtend",
            "b36790e9c57e796f03f1c54b44b8bd4a1be6e6e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Sets_as_an_algebra.",
            "VernacEndSegment",
            "265b7adddceda7c4ad590ca149fa002c5556d7fd"
        ],
        [
            "Hint Resolve incl_soustr_in: sets.",
            "VernacHints",
            "18f6e90cb2ab1baa789a634680f29229b43a2c3e"
        ],
        [
            "Hint Resolve incl_soustr: sets.",
            "VernacHints",
            "f182d7bcde583e189ddd2d188239965e0db06492"
        ],
        [
            "Hint Resolve incl_soustr_add_l: sets.",
            "VernacHints",
            "3ad20fd85575c20013eded6ec0d5d965a3da83a8"
        ],
        [
            "Hint Resolve incl_soustr_add_r: sets.",
            "VernacHints",
            "bc921603c317b3d5e6f99f0a440b50b387928720"
        ],
        [
            "Hint Resolve add_soustr_1 add_soustr_2: sets.",
            "VernacHints",
            "1542b8acb5736a95e74a71e7743565b5d31e16eb"
        ],
        [
            "Hint Resolve add_soustr_xy: sets.",
            "VernacHints",
            "5113850f051b75eebd822429db09116c0c162a20"
        ]
    ],
    "proofs": [
        {
            "name": "sincl_add_x",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros A B x H' H'0; red.",
                        "VernacExtend",
                        "b1e7b9c5e98d329d274cdd7bde19e2681b07fe39"
                    ]
                },
                {
                    "command": [
                        "lapply (Strict_Included_inv U (Add U A x) (Add U B x)); auto with sets.",
                        "VernacExtend",
                        "4d1af5b65767aba6f812301ad2631c4938fdafc9"
                    ]
                },
                {
                    "command": [
                        "clear H'0; intro H'0; split.",
                        "VernacExtend",
                        "eab68c9553c23a7cddc9db46d5eb0c56d85678a0"
                    ]
                },
                {
                    "command": [
                        "apply incl_add_x with (x := x); tauto.",
                        "VernacExtend",
                        "9259cf89b94b7c5692314ae34af4e042784faec6"
                    ]
                },
                {
                    "command": [
                        "elim H'0; intros H'1 H'2; elim H'2; clear H'0 H'2.",
                        "VernacExtend",
                        "c0258b43180e68e3a0d55700cc55333c4f37f915"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'0.",
                        "VernacExtend",
                        "8750ac3a23c686ddfa2ddb1f22acbd68bd0bdbbd"
                    ]
                },
                {
                    "command": [
                        "red; intro H'2.",
                        "VernacExtend",
                        "2b98b3648f4f63a08a2d4f29c7d52a262c031c9b"
                    ]
                },
                {
                    "command": [
                        "elim H'0; clear H'0.",
                        "VernacExtend",
                        "7762b71a83022fb4fe80efea2d0accec1dc23596"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'2; auto with sets.",
                        "VernacExtend",
                        "1177f0dbb42213d5eb9ce0cbb0698ccb88a84312"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incl_soustr_in",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros X x H'; red.",
                        "VernacExtend",
                        "d1607d6c43abef5352e18e688ce2bb84d9b31309"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'0; elim H'0; auto with sets.",
                        "VernacExtend",
                        "f797fbc10288d8435416457b9b92c97bb4f2ef4f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incl_soustr",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "intros X Y x H'; red.",
                        "VernacExtend",
                        "58ae33e91db9522d2481e046889c88d04ab0a81d"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'0; elim H'0.",
                        "VernacExtend",
                        "5e4a7bcc0f1508ccd51d691ec0fc86e61b3564cf"
                    ]
                },
                {
                    "command": [
                        "intros H'1 H'2.",
                        "VernacExtend",
                        "7a23b9b623f1e0b29a054bf061a5d299d6d4f251"
                    ]
                },
                {
                    "command": [
                        "apply Subtract_intro; auto with sets.",
                        "VernacExtend",
                        "5703dcf4729fd4cc4047b766ee11f8184f2dffff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incl_soustr_add_l",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros X x; red.",
                        "VernacExtend",
                        "6ffe94a3764a18e5f98e6d12fb856f31ab0fd452"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'; elim H'; auto with sets.",
                        "VernacExtend",
                        "8aeef0dddaa77ea54c4247cf39c2be38fcd24edf"
                    ]
                },
                {
                    "command": [
                        "intro H'0; elim H'0; auto with sets.",
                        "VernacExtend",
                        "fa4ca168c0c240b17650fe3819197bf62f88a329"
                    ]
                },
                {
                    "command": [
                        "intros t H'1 H'2; elim H'2; auto with sets.",
                        "VernacExtend",
                        "a0984d510e3cf2fddaa3e262944129221807c638"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incl_soustr_add_r",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros X x H'; red.",
                        "VernacExtend",
                        "d1607d6c43abef5352e18e688ce2bb84d9b31309"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'0; try assumption.",
                        "VernacExtend",
                        "a1fca524ae8ac7aceeac28ce713c7547de55485b"
                    ]
                },
                {
                    "command": [
                        "apply Subtract_intro; auto with sets.",
                        "VernacExtend",
                        "5703dcf4729fd4cc4047b766ee11f8184f2dffff"
                    ]
                },
                {
                    "command": [
                        "red; intro H'1; apply H'; rewrite H'1; auto with sets.",
                        "VernacExtend",
                        "3aa82a740ea337443bd87e74599a8bf3f859451a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_soustr_2",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros X x H'; red.",
                        "VernacExtend",
                        "d1607d6c43abef5352e18e688ce2bb84d9b31309"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'0; try assumption.",
                        "VernacExtend",
                        "a1fca524ae8ac7aceeac28ce713c7547de55485b"
                    ]
                },
                {
                    "command": [
                        "elim (classic (x = x0)); intro K; auto with sets.",
                        "VernacExtend",
                        "dfe8eb95bc739666586b4614ce2a47861f9ac4bf"
                    ]
                },
                {
                    "command": [
                        "elim K; auto with sets.",
                        "VernacExtend",
                        "e7a890c35d8a4f8f6b38d9621f9110f16a002e9e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_soustr_1",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intros X x H'; red.",
                        "VernacExtend",
                        "d1607d6c43abef5352e18e688ce2bb84d9b31309"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'0; elim H'0; auto with sets.",
                        "VernacExtend",
                        "f797fbc10288d8435416457b9b92c97bb4f2ef4f"
                    ]
                },
                {
                    "command": [
                        "intros y H'1; elim H'1; auto with sets.",
                        "VernacExtend",
                        "42eeacf79e64716ea6bf402e7995eb11ce934ff9"
                    ]
                },
                {
                    "command": [
                        "intros t H'1; try assumption.",
                        "VernacExtend",
                        "572190932a97c5774f6fc2044b03bdd35c702454"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Singleton_inv U x t); auto with sets.",
                        "VernacExtend",
                        "a9da72d5d63723ff802fdee400e0aff71b08c5b4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_soustr_xy",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros X x y H'; apply Extensionality_Ensembles.",
                        "VernacExtend",
                        "45d4c8051a78fbf5093f8260fd16b91837d0becf"
                    ]
                },
                {
                    "command": [
                        "split; red.",
                        "VernacExtend",
                        "e714e081737563af97516bdb614a3b3dfd1d1a88"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'0; elim H'0; auto with sets.",
                        "VernacExtend",
                        "f797fbc10288d8435416457b9b92c97bb4f2ef4f"
                    ]
                },
                {
                    "command": [
                        "intro H'1; elim H'1.",
                        "VernacExtend",
                        "9513d77709c6b0b1aafc3d412f86489e9628a975"
                    ]
                },
                {
                    "command": [
                        "intros u H'2 H'3; try assumption.",
                        "VernacExtend",
                        "6b9be4d2352769a9b881257a4299d6259394cbb6"
                    ]
                },
                {
                    "command": [
                        "apply Add_intro1.",
                        "VernacExtend",
                        "fdadbaac0c740ba7fc6ac98999feeded6bc55e7e"
                    ]
                },
                {
                    "command": [
                        "apply Subtract_intro; auto with sets.",
                        "VernacExtend",
                        "5703dcf4729fd4cc4047b766ee11f8184f2dffff"
                    ]
                },
                {
                    "command": [
                        "intros t H'2 H'3; try assumption.",
                        "VernacExtend",
                        "bf86c1bdb3d5d007c3b8f4b02e5fcdee2a7404b3"
                    ]
                },
                {
                    "command": [
                        "elim (Singleton_inv U x t); auto with sets.",
                        "VernacExtend",
                        "fef20beebf51cde846eaf7eff1ac59fe566247b2"
                    ]
                },
                {
                    "command": [
                        "intros u H'2; try assumption.",
                        "VernacExtend",
                        "11e6315f604d9ecd9d0a6a00a4ca7acd69e55a8f"
                    ]
                },
                {
                    "command": [
                        "elim (Add_inv U (Subtract U X y) x u); auto with sets.",
                        "VernacExtend",
                        "553d906ee1b81ff9f8f1610e74f3790c2edffa68"
                    ]
                },
                {
                    "command": [
                        "intro H'0; elim H'0; auto with sets.",
                        "VernacExtend",
                        "fa4ca168c0c240b17650fe3819197bf62f88a329"
                    ]
                },
                {
                    "command": [
                        "intro H'0; rewrite <- H'0; auto with sets.",
                        "VernacExtend",
                        "fbc0854e034ba28fe9d928f06cd450ade1ec963b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incl_st_add_soustr",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "intros X Y x H' H'0; apply sincl_add_x with (x := x); auto using add_soustr_1 with sets.",
                        "VernacExtend",
                        "32a846201d389071a4dc5b95de86109776bff037"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "elim H'0.",
                        "VernacExtend",
                        "18ed276c915a3d073f203332aa6c39da8c5934bf"
                    ]
                },
                {
                    "command": [
                        "intros H'1 H'2.",
                        "VernacExtend",
                        "7a23b9b623f1e0b29a054bf061a5d299d6d4f251"
                    ]
                },
                {
                    "command": [
                        "generalize (Inclusion_is_transitive U).",
                        "VernacExtend",
                        "9d6a3c21dbef3f90f77530f395c6ad67d7a4ecbf"
                    ]
                },
                {
                    "command": [
                        "intro H'4; red in H'4.",
                        "VernacExtend",
                        "b581e8c67c739d104449446c551728681d78ed40"
                    ]
                },
                {
                    "command": [
                        "apply H'4 with (y := Y); auto using add_soustr_2 with sets.",
                        "VernacExtend",
                        "4a1aedc6b90cbade02f8d7a82bbe9f0e45c122bb"
                    ]
                },
                {
                    "command": [
                        "red in H'0.",
                        "VernacExtend",
                        "d5049e9647c88c352fa78e07b8260e57ba8ee09f"
                    ]
                },
                {
                    "command": [
                        "elim H'0; intros H'1 H'2; try exact H'1; clear H'0.",
                        "VernacExtend",
                        "009c1974c4beb77ac0663a8f920abe9ecc990a79"
                    ]
                },
                {
                    "command": [
                        "red; intro H'0; apply H'2.",
                        "VernacExtend",
                        "05024f5a06185c7e732ff053d90655e030061501"
                    ]
                },
                {
                    "command": [
                        "rewrite H'0; auto 8 using add_soustr_xy, add_soustr_1, add_soustr_2 with sets.",
                        "VernacExtend",
                        "34455720f79186f47ae48760f542ff0d063cc2fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Sub_Add_new",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "auto using incl_soustr_add_l with sets.",
                        "VernacExtend",
                        "a59a3f9c1a47ca8b9a0aa33f74c20bdf875afd06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Simplify_add",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intros X X0 x H' H'0 H'1; try assumption.",
                        "VernacExtend",
                        "a69ae6ab33f5931e13bf896c802a2ec37d141616"
                    ]
                },
                {
                    "command": [
                        "rewrite (Sub_Add_new X x); auto with sets.",
                        "VernacExtend",
                        "10ce2d371f9978e9337cdc50eb38de3635222d94"
                    ]
                },
                {
                    "command": [
                        "rewrite (Sub_Add_new X0 x); auto with sets.",
                        "VernacExtend",
                        "d542aec5ae25d1b6a4a3001be5d979eaf112f4e7"
                    ]
                },
                {
                    "command": [
                        "rewrite H'1; auto with sets.",
                        "VernacExtend",
                        "1fc0127fb0a006f7f923d9649987bc949e24174f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Included_Add",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "intros X A x H'0; try assumption.",
                        "VernacExtend",
                        "59b7d9221d8cc4df91159d9b7d60c17c573810a9"
                    ]
                },
                {
                    "command": [
                        "elim (classic (In U X x)).",
                        "VernacExtend",
                        "769010cb843ae4ca89753f70094c49f7afd1dd59"
                    ]
                },
                {
                    "command": [
                        "intro H'1; right; try assumption.",
                        "VernacExtend",
                        "435c2ea2f29012fd6e0b31d04f95bc6659f46b1e"
                    ]
                },
                {
                    "command": [
                        "exists (Subtract U X x).",
                        "VernacExtend",
                        "5e85972d983ff68711247420635271bb77287d93"
                    ]
                },
                {
                    "command": [
                        "split; auto using incl_soustr_in, add_soustr_xy, add_soustr_1, add_soustr_2 with sets.",
                        "VernacExtend",
                        "eb6d1ed198382b2b0524539b2ac4cad7ac4979d1"
                    ]
                },
                {
                    "command": [
                        "red in H'0.",
                        "VernacExtend",
                        "d5049e9647c88c352fa78e07b8260e57ba8ee09f"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'2; try assumption.",
                        "VernacExtend",
                        "6911cac8f5655f2cbe310c916c94c693696cb2f8"
                    ]
                },
                {
                    "command": [
                        "lapply (Subtract_inv U X x x0); auto with sets.",
                        "VernacExtend",
                        "59ca0ad8037ab364af790625015cf3ebd977fb1a"
                    ]
                },
                {
                    "command": [
                        "intro H'3; elim H'3; intros K K'; clear H'3.",
                        "VernacExtend",
                        "690eeb1d51f03fa2dd53c94f90939bc3a694bde0"
                    ]
                },
                {
                    "command": [
                        "lapply (H'0 x0); auto with sets.",
                        "VernacExtend",
                        "cd8d37602a06ab7002716f3ed54ec12d4ddad986"
                    ]
                },
                {
                    "command": [
                        "intro H'3; try assumption.",
                        "VernacExtend",
                        "a7db59f438ecbf13a028d63ee9e76eedacb9de97"
                    ]
                },
                {
                    "command": [
                        "lapply (Add_inv U A x x0); auto with sets.",
                        "VernacExtend",
                        "b705c10e2f035e1b2430b4d30391680de91dc639"
                    ]
                },
                {
                    "command": [
                        "intro H'4; elim H'4; [ intro H'5; try exact H'5; clear H'4 | intro H'5; clear H'4 ].",
                        "VernacExtend",
                        "d1b533057536eb1d866c25bc51f7414410a28f48"
                    ]
                },
                {
                    "command": [
                        "elim K'; auto with sets.",
                        "VernacExtend",
                        "33bfee897751387a764f0023bb527378ef6c4733"
                    ]
                },
                {
                    "command": [
                        "intro H'1; left; try assumption.",
                        "VernacExtend",
                        "7d429db17483bb734d786ce445d6bacaedb4edbc"
                    ]
                },
                {
                    "command": [
                        "red in H'0.",
                        "VernacExtend",
                        "d5049e9647c88c352fa78e07b8260e57ba8ee09f"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'2; try assumption.",
                        "VernacExtend",
                        "6911cac8f5655f2cbe310c916c94c693696cb2f8"
                    ]
                },
                {
                    "command": [
                        "lapply (H'0 x0); auto with sets.",
                        "VernacExtend",
                        "cd8d37602a06ab7002716f3ed54ec12d4ddad986"
                    ]
                },
                {
                    "command": [
                        "intro H'3; try assumption.",
                        "VernacExtend",
                        "a7db59f438ecbf13a028d63ee9e76eedacb9de97"
                    ]
                },
                {
                    "command": [
                        "lapply (Add_inv U A x x0); auto with sets.",
                        "VernacExtend",
                        "b705c10e2f035e1b2430b4d30391680de91dc639"
                    ]
                },
                {
                    "command": [
                        "intro H'4; elim H'4; [ intro H'5; try exact H'5; clear H'4 | intro H'5; clear H'4 ].",
                        "VernacExtend",
                        "d1b533057536eb1d866c25bc51f7414410a28f48"
                    ]
                },
                {
                    "command": [
                        "absurd (In U X x0); auto with sets.",
                        "VernacExtend",
                        "b786ab7447c76f5c4a3e43683e0c8afb8623c5a9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'5; auto with sets.",
                        "VernacExtend",
                        "28f23fda25e8eac90c260d1528cb647bfb0dd257"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "setcover_inv",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "intros A x y H'; elim H'.",
                        "VernacExtend",
                        "9f5aaae0da728e3a46322a88b10647fd75962fc7"
                    ]
                },
                {
                    "command": [
                        "unfold Strict_Rel_of; simpl.",
                        "VernacExtend",
                        "fcb49401d5685915721eab82c788e65d8802a890"
                    ]
                },
                {
                    "command": [
                        "intros H'0 H'1; split; [ auto with sets | idtac ].",
                        "VernacExtend",
                        "bc8633ff591618369f948f41f6f005cf3260b0a6"
                    ]
                },
                {
                    "command": [
                        "intros z H'2 H'3; try assumption.",
                        "VernacExtend",
                        "0f364f932d37ec322b150ccdc8618510b096d833"
                    ]
                },
                {
                    "command": [
                        "elim (classic (x = z)); auto with sets.",
                        "VernacExtend",
                        "a69b62ae089f6b35b79b2dca940f501aee3fda87"
                    ]
                },
                {
                    "command": [
                        "intro H'4; right; try assumption.",
                        "VernacExtend",
                        "8eb96e8eeb5b8e12ba78627118987cc69e853d82"
                    ]
                },
                {
                    "command": [
                        "elim (classic (z = y)); auto with sets.",
                        "VernacExtend",
                        "a4a09987c15988e52af7b8e9093b6cb98b5325a9"
                    ]
                },
                {
                    "command": [
                        "intro H'5; try assumption.",
                        "VernacExtend",
                        "339cd062da34785f6642bb6e7a4e5a29022e4f23"
                    ]
                },
                {
                    "command": [
                        "elim H'1.",
                        "VernacExtend",
                        "adde82f993f35778617a2db796b0637a05aa745b"
                    ]
                },
                {
                    "command": [
                        "exists z; auto with sets.",
                        "VernacExtend",
                        "5f4590aab006ddfc20e0c4efdd3d009709d2b9b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Add_covers",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "intros A a H' x H'0 H'1; try assumption.",
                        "VernacExtend",
                        "d6a01a1f32325ecc9c6287b54736bb3bc87aad94"
                    ]
                },
                {
                    "command": [
                        "apply setcover_intro; auto with sets.",
                        "VernacExtend",
                        "0eb375ace779247f75ccc395400d194c514ca708"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "split; [ idtac | red; intro H'2; try exact H'2 ]; auto with sets.",
                        "VernacExtend",
                        "457e1cec8d7388c5c661dbab17c72083f1acd7a4"
                    ]
                },
                {
                    "command": [
                        "apply H'1.",
                        "VernacExtend",
                        "2b7bd50c89c5f32cbcdbf60608d222a7ec656f24"
                    ]
                },
                {
                    "command": [
                        "rewrite H'2; auto with sets.",
                        "VernacExtend",
                        "0d8d966804dcc92ce55161546dd0f2eac937676e"
                    ]
                },
                {
                    "command": [
                        "red; intro H'2; elim H'2; clear H'2.",
                        "VernacExtend",
                        "ca31859c6076b06c4398995b7ffed5846ca1f278"
                    ]
                },
                {
                    "command": [
                        "intros z H'2; elim H'2; intros H'3 H'4; try exact H'3; clear H'2.",
                        "VernacExtend",
                        "583d5c1edc763090aa257d37fd92eb4b11c193d4"
                    ]
                },
                {
                    "command": [
                        "lapply (Strict_Included_inv U a z); auto with sets; clear H'3.",
                        "VernacExtend",
                        "6f5529f03c36d2493fa574dec8e8fbf95ef2b75f"
                    ]
                },
                {
                    "command": [
                        "intro H'2; elim H'2; intros H'3 H'5; elim H'5; clear H'2 H'5.",
                        "VernacExtend",
                        "5e33ac284f949d35a40a97cb0e2e03ae6eb8737b"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'2; elim H'2.",
                        "VernacExtend",
                        "f209c95567362faf9438579663201e0a104b0606"
                    ]
                },
                {
                    "command": [
                        "intros H'5 H'6; try assumption.",
                        "VernacExtend",
                        "430e865867d45069d1a54ea85eda323d56be9ba3"
                    ]
                },
                {
                    "command": [
                        "generalize H'4; intro K.",
                        "VernacExtend",
                        "ab837d6409b7e59c063bf5fda84ef5acaa76e871"
                    ]
                },
                {
                    "command": [
                        "red in H'4.",
                        "VernacExtend",
                        "d0b0b48062d3569d2c83c3b84a1d763e1fcd9381"
                    ]
                },
                {
                    "command": [
                        "elim H'4; intros H'8 H'9; red in H'8; clear H'4.",
                        "VernacExtend",
                        "81c0b551fd505a34f26d5af6a4750fb426ce27fb"
                    ]
                },
                {
                    "command": [
                        "lapply (H'8 x0); auto with sets.",
                        "VernacExtend",
                        "fa9a9652fadbd3677903cdfc7ad4a5038cbb7f77"
                    ]
                },
                {
                    "command": [
                        "intro H'7; try assumption.",
                        "VernacExtend",
                        "a08be26e919101b48af6da959ca45a53dc2f8fb9"
                    ]
                },
                {
                    "command": [
                        "elim (Add_inv U a x x0); auto with sets.",
                        "VernacExtend",
                        "05cac7095e9a20e08ab812998602f3262a34a5c3"
                    ]
                },
                {
                    "command": [
                        "intro H'15.",
                        "VernacExtend",
                        "0d51715fbbd29352d3e5b7fd9b85cf31dda91f78"
                    ]
                },
                {
                    "command": [
                        "cut (Included U (Add U a x) z).",
                        "VernacExtend",
                        "1755f3375d4703b5f525dfd5969d367dd8a205e1"
                    ]
                },
                {
                    "command": [
                        "intro H'10; try assumption.",
                        "VernacExtend",
                        "be4496be80ef3fccb145bcd4a1ee55dc48ad8b8d"
                    ]
                },
                {
                    "command": [
                        "red in K.",
                        "VernacExtend",
                        "ecfdcfbb1996781f436e3a9ef8845d608f0396fb"
                    ]
                },
                {
                    "command": [
                        "elim K; intros H'11 H'12; apply H'12; clear K; auto with sets.",
                        "VernacExtend",
                        "4e85d860a793921a7829d24537db0f092751eab5"
                    ]
                },
                {
                    "command": [
                        "rewrite H'15.",
                        "VernacExtend",
                        "7ca60d64337d5278cde47cc7e3fbef41341c1927"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x1 H'10; elim H'10; auto with sets.",
                        "VernacExtend",
                        "e29087343ea4bb1264b5ee0a423ecbaf2e99b038"
                    ]
                },
                {
                    "command": [
                        "intros x2 H'11; elim H'11; auto with sets.",
                        "VernacExtend",
                        "ca2d4a7a5177c69f9856314841eccb4df2ad550d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "covers_Add",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "intros A a a' H' H'0 H'1; try assumption.",
                        "VernacExtend",
                        "f593240f465b76a054a16b5e06e89301ee9c0b31"
                    ]
                },
                {
                    "command": [
                        "elim (setcover_inv A a a'); auto with sets.",
                        "VernacExtend",
                        "6de6a225f8043b75fd0ebdd26de6316245fe6102"
                    ]
                },
                {
                    "command": [
                        "intros H'6 H'7.",
                        "VernacExtend",
                        "3426bcb1cbf0507a08df5a3939e811df081e98a3"
                    ]
                },
                {
                    "command": [
                        "clear H'1.",
                        "VernacExtend",
                        "fa6db17ea680156e30374dd6ed2ac96a5a234447"
                    ]
                },
                {
                    "command": [
                        "elim (Strict_Included_inv U a a'); auto with sets.",
                        "VernacExtend",
                        "5a1416ed51943bfbbe29f118e52aef22935bf905"
                    ]
                },
                {
                    "command": [
                        "intros H'5 H'8; elim H'8.",
                        "VernacExtend",
                        "1292989c3d72f999f236b2e0abab76405540df54"
                    ]
                },
                {
                    "command": [
                        "intros x H'1; elim H'1.",
                        "VernacExtend",
                        "7cf6e9d1d52fb8e986ba659550969eb87fe9495e"
                    ]
                },
                {
                    "command": [
                        "intros H'2 H'3; try assumption.",
                        "VernacExtend",
                        "adbe0b61f42a2a296426b3cdb037e35e4912d301"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "split; [ try assumption | idtac ].",
                        "VernacExtend",
                        "2f3e384e84efa246ea96d2db4b31f7d148a7455c"
                    ]
                },
                {
                    "command": [
                        "clear H'8 H'1.",
                        "VernacExtend",
                        "cd859f02c263c860b1d54a6f37b7c03699b30c05"
                    ]
                },
                {
                    "command": [
                        "elim (H'7 (Add U a x)); auto with sets.",
                        "VernacExtend",
                        "e6e85e781d5734ad95cf1087f966ecc4799e49d7"
                    ]
                },
                {
                    "command": [
                        "intro H'1.",
                        "VernacExtend",
                        "2d0e7b3ab5d8ef3cb27772f9e59cc20e3e039534"
                    ]
                },
                {
                    "command": [
                        "absurd (a = Add U a x); auto with sets.",
                        "VernacExtend",
                        "1d9f9668cdafda029421a821b4443eba38618c67"
                    ]
                },
                {
                    "command": [
                        "red; intro H'8; try exact H'8.",
                        "VernacExtend",
                        "468f966aba33a6bb27620b636c8b2b6db49adf11"
                    ]
                },
                {
                    "command": [
                        "apply H'3.",
                        "VernacExtend",
                        "157087ee27cbbeee4a92c1b9743341d04271c1bb"
                    ]
                },
                {
                    "command": [
                        "rewrite H'8; auto with sets.",
                        "VernacExtend",
                        "96aff37ba7deb50cf4f33fbf1da2650e81c7bf6c"
                    ]
                },
                {
                    "command": [
                        "auto with sets.",
                        "VernacExtend",
                        "cc4a8a70363fb61833dbd374f2330c971128a364"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'1; elim H'1; auto with sets.",
                        "VernacExtend",
                        "44e428d76ae94865f9058751a272c2faf5201903"
                    ]
                },
                {
                    "command": [
                        "intros x1 H'8; elim H'8; auto with sets.",
                        "VernacExtend",
                        "66f8b88c4813441c5c41c9b2f5d33368c6beffc6"
                    ]
                },
                {
                    "command": [
                        "split; [ idtac | try assumption ].",
                        "VernacExtend",
                        "c51dd02c76c3fc17e5bffc3bbcf27d25c5cb3a50"
                    ]
                },
                {
                    "command": [
                        "red in H'0; auto with sets.",
                        "VernacExtend",
                        "6a21c7c5f1039af6679ad8ab01d47baf825e0d9b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "covers_is_Add",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "intros A a a' H' H'0; split; intro K.",
                        "VernacExtend",
                        "0f00aab7118a5bff66f54fa598c6818b9b3852c4"
                    ]
                },
                {
                    "command": [
                        "apply covers_Add with (A := A); auto with sets.",
                        "VernacExtend",
                        "1f021c58f73cc322e5c72d844f53387fa235c2e3"
                    ]
                },
                {
                    "command": [
                        "elim K.",
                        "VernacExtend",
                        "e68a339579b755eb8ab054cde49b81d900bbf5ae"
                    ]
                },
                {
                    "command": [
                        "intros x H'1; elim H'1; intros H'2 H'3; rewrite H'2; clear H'1.",
                        "VernacExtend",
                        "068df24cd26d8046d4e1ccdc04f714652985a0a1"
                    ]
                },
                {
                    "command": [
                        "apply Add_covers; intuition.",
                        "VernacExtend",
                        "48e211de739aa2b2dfaa02cced60c66ad873366c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Singleton_atomic",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "intros x A H'.",
                        "VernacExtend",
                        "d8b6cc74059dde3746c6cc5569dc5ee51d945ed6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Empty_set_zero' U x).",
                        "VernacExtend",
                        "1c1473f56105023829e61bdfd7a06ad5c84eb5e0"
                    ]
                },
                {
                    "command": [
                        "apply Add_covers; auto with sets.",
                        "VernacExtend",
                        "c106d40b79f97e333f0b41065702be78bde94ef9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "less_than_singleton",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "intros X x H'; try assumption.",
                        "VernacExtend",
                        "6c4f95ab66449b75ffd1d0edb5941b81d1864da7"
                    ]
                },
                {
                    "command": [
                        "red in H'.",
                        "VernacExtend",
                        "b3f39ff59e03e63f7335587cdc4b70d75813b637"
                    ]
                },
                {
                    "command": [
                        "lapply (Singleton_atomic x (Full_set U)); [ intro H'2; try exact H'2 | apply Full_intro ].",
                        "VernacExtend",
                        "7df829a71c33e38774ac8b2826f9c5d60d5ea06b"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros H'0 H'1; try exact H'1; clear H'.",
                        "VernacExtend",
                        "f3457e3ad18cb678f929f379185da1fd26a5caef"
                    ]
                },
                {
                    "command": [
                        "elim (setcover_inv (Full_set U) (Empty_set U) (Singleton U x)); [ intros H'6 H'7; try exact H'7 | idtac ]; auto with sets.",
                        "VernacExtend",
                        "427179950d0a4eca6d760d49ab4c9a524c8e2aa7"
                    ]
                },
                {
                    "command": [
                        "elim (H'7 X); [ intro H'5; try exact H'5 | intro H'5 | idtac | idtac ]; auto with sets.",
                        "VernacExtend",
                        "834422306ad9cddbc1cfc677ae1345914a884eb2"
                    ]
                },
                {
                    "command": [
                        "elim H'1; auto with sets.",
                        "VernacExtend",
                        "b36790e9c57e796f03f1c54b44b8bd4a1be6e6e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}