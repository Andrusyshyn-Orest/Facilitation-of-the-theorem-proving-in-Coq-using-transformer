{
    "filename": "theories/Sets/Image.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export Finite_sets.",
            "VernacRequire",
            "d8d6dffeb7f48ddf43613f5cf9081e0a08c8e4a9"
        ],
        [
            "Require Export Constructive_sets.",
            "VernacRequire",
            "1ab62e257413a8f4f55081d9a0217597d3378008"
        ],
        [
            "Require Export Classical.",
            "VernacRequire",
            "931639e04b7f4b817db4e158c9ff078a0a2025f4"
        ],
        [
            "Require Export Classical_sets.",
            "VernacRequire",
            "1fca917462e7d178d643bee043d06f12c733de74"
        ],
        [
            "Require Export Powerset.",
            "VernacRequire",
            "4fb4eb435f26c14af8fe29e2df323d898a6fd29a"
        ],
        [
            "Require Export Powerset_facts.",
            "VernacRequire",
            "c29c40d605abd2bf3e7bb2446860c20e47a33999"
        ],
        [
            "Require Export Powerset_Classical_facts.",
            "VernacRequire",
            "f1c1cbe240cf78b92f2ff2e1d3c34da0447c3b2b"
        ],
        [
            "Require Export Gt.",
            "VernacRequire",
            "30dc2c794df1101af4118a677f84c17e3db84d83"
        ],
        [
            "Require Export Lt.",
            "VernacRequire",
            "e903e9dc8ccc3536651c288b58378704da8db963"
        ],
        [
            "Require Export Le.",
            "VernacRequire",
            "441193f947c6f223b50f2cfcd76775e875e10790"
        ],
        [
            "Require Export Finite_sets_facts.",
            "VernacRequire",
            "6d6a0747489e0881225bbe7368bb865830283d61"
        ],
        [
            "Section Image.",
            "VernacBeginSection",
            "b2d4a85d0530585f40e48306f07be6fb0b63b45a"
        ],
        [
            "Variables U V : Type.",
            "VernacAssumption",
            "f94fa322eb41ac7b6acd027f6ad370c7c7ddf1f1"
        ],
        [
            "Inductive Im (X:Ensemble U) (f:U -> V) : Ensemble V := Im_intro : forall x:U, In _ X x -> forall y:V, y = f x -> In _ (Im X f) y.",
            "VernacInductive",
            "774765ed7c741ffc35fbd5c272414cee8ad887ec"
        ],
        [
            "Lemma Im_def : forall (X:Ensemble U) (f:U -> V) (x:U), In _ X x -> In _ (Im X f) (f x).",
            "VernacStartTheoremProof",
            "41154004b9d5dfc676976b6983e38bf807339e46"
        ],
        [
            "intros X f x H'; try assumption.",
            "VernacExtend",
            "173ed91af8e6e511556936eec18dd6a1be5577e8"
        ],
        [
            "apply Im_intro with (x := x); auto with sets.",
            "VernacExtend",
            "d4c1b57cf20c32d18757a25cc350d4bd626330a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Im_add : forall (X:Ensemble U) (x:U) (f:U -> V), Im (Add _ X x) f = Add _ (Im X f) (f x).",
            "VernacStartTheoremProof",
            "e3b04ba51dbf11a5c12374eb68d7060ed4d721ae"
        ],
        [
            "intros X x f.",
            "VernacExtend",
            "9ec68fefef55c91016ab4aaa8270e989edda6d28"
        ],
        [
            "apply Extensionality_Ensembles.",
            "VernacExtend",
            "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
        ],
        [
            "split; red; intros x0 H'.",
            "VernacExtend",
            "84a5f14343929d5f034b841a0f26b91f1ea558f7"
        ],
        [
            "elim H'; intros.",
            "VernacExtend",
            "de4987a1f8d8e17d770453d73ef51fb1a289f855"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "elim Add_inv with U X x x1; auto using Im_def with sets.",
            "VernacExtend",
            "d1525aa8489b05b48add5e6ac55dd43e186e6b0f"
        ],
        [
            "destruct 1; auto using Im_def with sets.",
            "VernacExtend",
            "4684d6e3ccd95a20e7d4615fb5995391bf20f99d"
        ],
        [
            "elim Add_inv with V (Im X f) (f x) x0.",
            "VernacExtend",
            "dea33511514c8b3cf95340ae7bc30a40031e0c8c"
        ],
        [
            "destruct 1 as [x0 H y H0].",
            "VernacExtend",
            "a8207ae09bbe22d2666f06a2c6bed5715af8e3f4"
        ],
        [
            "rewrite H0; auto using Im_def with sets.",
            "VernacExtend",
            "400ae3d43927989f09cdff2115a357326101250c"
        ],
        [
            "destruct 1; auto using Im_def with sets.",
            "VernacExtend",
            "4684d6e3ccd95a20e7d4615fb5995391bf20f99d"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma image_empty : forall f:U -> V, Im (Empty_set U) f = Empty_set V.",
            "VernacStartTheoremProof",
            "dbf817d46dcc9da056927cda3fbf1951ba47a783"
        ],
        [
            "intro f; try assumption.",
            "VernacExtend",
            "17121524392eb8420ab83452a4e8e8f411fbe69c"
        ],
        [
            "apply Extensionality_Ensembles.",
            "VernacExtend",
            "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
        ],
        [
            "split; auto with sets.",
            "VernacExtend",
            "e42c6be68bfd7922fd0c1cad94f27172355b3c2f"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x H'; elim H'.",
            "VernacExtend",
            "04a874befe75b11373eb176bed0b6967c9da2c0e"
        ],
        [
            "intros x0 H'0; elim H'0; auto with sets.",
            "VernacExtend",
            "f797fbc10288d8435416457b9b92c97bb4f2ef4f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma finite_image : forall (X:Ensemble U) (f:U -> V), Finite _ X -> Finite _ (Im X f).",
            "VernacStartTheoremProof",
            "442dd847c57467e7e3d71e3eba854ebe86fc83be"
        ],
        [
            "intros X f H'; elim H'.",
            "VernacExtend",
            "24c62294fed0d7a923127232776fed01882b2235"
        ],
        [
            "rewrite (image_empty f); auto with sets.",
            "VernacExtend",
            "905a7fb312b2aaa215e7bf2c9849c4d79c966c12"
        ],
        [
            "intros A H'0 H'1 x H'2; clear H' X.",
            "VernacExtend",
            "1b3449bdbf87df15181c6c58cddd77d8c2105aaa"
        ],
        [
            "rewrite (Im_add A x f); auto with sets.",
            "VernacExtend",
            "5ad7c4f1b3fd3c1367c57ea7f962694957bb61b2"
        ],
        [
            "apply Add_preserves_Finite; auto with sets.",
            "VernacExtend",
            "15fb6073c5b4ae2bd08456d56b37a018769de7f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Im_inv : forall (X:Ensemble U) (f:U -> V) (y:V), In _ (Im X f) y -> exists x : U, In _ X x /\\ f x = y.",
            "VernacStartTheoremProof",
            "8880be8e964901c1f62cf62d9d62b8741979704c"
        ],
        [
            "intros X f y H'; elim H'.",
            "VernacExtend",
            "a7e0c2e09299f1dc571b9f6b2d88f42685650941"
        ],
        [
            "intros x H'0 y0 H'1; rewrite H'1.",
            "VernacExtend",
            "07beec83db0a852ac73f1144237c2c49b886af07"
        ],
        [
            "exists x; auto with sets.",
            "VernacExtend",
            "84de534c617ae30322cea69828c06843e5da7542"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition injective (f:U -> V) := forall x y:U, f x = f y -> x = y.",
            "VernacDefinition",
            "6a052195f3f1fa8540c03042e93b2587c77e89cc"
        ],
        [
            "Lemma not_injective_elim : forall f:U -> V, ~ injective f -> exists x : _, (exists y : _, f x = f y /\\ x <> y).",
            "VernacStartTheoremProof",
            "01c3495a905a854630ed2653b49aa9c7f447943c"
        ],
        [
            "unfold injective; intros f H.",
            "VernacExtend",
            "f0211c929504e8f83b905bc8a9c26598ded25977"
        ],
        [
            "cut (exists x : _, ~ (forall y:U, f x = f y -> x = y)).",
            "VernacExtend",
            "086f2c9af2d8540103e181770ee65c8bc09bc184"
        ],
        [
            "2: apply not_all_ex_not with (P := fun x:U => forall y:U, f x = f y -> x = y); trivial with sets.",
            "VernacExtend",
            "a9649752d9a85d33243db5967019760bfc60fab4"
        ],
        [
            "destruct 1 as [x C]; exists x.",
            "VernacExtend",
            "aad70388506cdef2f6a1506cc0c665ef60e6784d"
        ],
        [
            "cut (exists y : _, ~ (f x = f y -> x = y)).",
            "VernacExtend",
            "dd74d21247461e2c463676359abf3572586326ad"
        ],
        [
            "2: apply not_all_ex_not with (P := fun y:U => f x = f y -> x = y); trivial with sets.",
            "VernacExtend",
            "d89855032d444baa75a1a9d91f29b9cb1dcf2ed4"
        ],
        [
            "destruct 1 as [y D]; exists y.",
            "VernacExtend",
            "9594a1fce0d6d223c9c7e12b9793e820843b8853"
        ],
        [
            "apply imply_to_and; trivial with sets.",
            "VernacExtend",
            "044b9749813e85fb0a3100c4e5be5d8bb9e456a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_Im_intro : forall (A:Ensemble U) (f:U -> V) (n:nat), cardinal _ A n -> exists p : nat, cardinal _ (Im A f) p.",
            "VernacStartTheoremProof",
            "39601451534a37fa7c2a16e8c4b10de4da38813c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply finite_cardinal; apply finite_image.",
            "VernacExtend",
            "e32a925cfd077b7c699b973866bfe71668b4d15a"
        ],
        [
            "apply cardinal_finite with n; trivial with sets.",
            "VernacExtend",
            "b85fdade79be1bfeebbfa6375bdc0928a516e68a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_Image_elim : forall (A:Ensemble U) (f:U -> V), injective f -> forall x:U, In _ (Im A f) (f x) -> In _ A x.",
            "VernacStartTheoremProof",
            "0459d0c3e60a78bb37cbc13a7acc5e70412ec86d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim Im_inv with A f (f x); trivial with sets.",
            "VernacExtend",
            "dcc4f5fb202d58e4e6b1d2b5d895ed374fa440ba"
        ],
        [
            "intros z C; elim C; intros InAz E.",
            "VernacExtend",
            "ce074e76f87f7b67a88c5b6052e34c12ea926c22"
        ],
        [
            "elim (H z x E); trivial with sets.",
            "VernacExtend",
            "1602a431d352ee10aa1ce599bde5985350c475d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injective_preserves_cardinal : forall (A:Ensemble U) (f:U -> V) (n:nat), injective f -> cardinal _ A n -> forall n':nat, cardinal _ (Im A f) n' -> n' = n.",
            "VernacStartTheoremProof",
            "cc010b52354dbbf990e44302dc401ae93b2a4b1f"
        ],
        [
            "induction 2 as [| A n H'0 H'1 x H'2]; auto with sets.",
            "VernacExtend",
            "bcfd989051710a07e2defb0f082590adf411ccc9"
        ],
        [
            "rewrite (image_empty f).",
            "VernacExtend",
            "42848329bcb61e1bbc5763f965558e0a6c36720f"
        ],
        [
            "intros n' CE.",
            "VernacExtend",
            "0052daaf4f385b3102bbe826d536f61161402634"
        ],
        [
            "apply cardinal_unicity with V (Empty_set V); auto with sets.",
            "VernacExtend",
            "26f670a260e2dd6f2ba2c85ab108c366834a26f3"
        ],
        [
            "intro n'.",
            "VernacExtend",
            "da4c07ef3078b0a44eb64c44004ba6f71b69a2a9"
        ],
        [
            "rewrite (Im_add A x f).",
            "VernacExtend",
            "e542c2cecffa8f0ae1b73ff3d55284c3efa0988b"
        ],
        [
            "intro H'3.",
            "VernacExtend",
            "7a52fe2aa5f8dbf5ccc908fd4ee206f9d824935d"
        ],
        [
            "elim cardinal_Im_intro with A f n; trivial with sets.",
            "VernacExtend",
            "1dd85cefe6c2f05640f85bda16586e92ca17135b"
        ],
        [
            "intros i CI.",
            "VernacExtend",
            "4a0137fc9de91448a494e397e261b748ed437ccc"
        ],
        [
            "lapply (H'1 i); trivial with sets.",
            "VernacExtend",
            "019b0e8304197233e82bc9faea87d6a76b1e0690"
        ],
        [
            "cut (~ In _ (Im A f) (f x)).",
            "VernacExtend",
            "da1747a498f3701c7fc2366b64af3b566bbfd7ff"
        ],
        [
            "intros H0 H1.",
            "VernacExtend",
            "8865a2cc8fd198c766a13e1bfccd807be0cce3f1"
        ],
        [
            "apply cardinal_unicity with V (Add _ (Im A f) (f x)); trivial with sets.",
            "VernacExtend",
            "12f48a6f0b09f759f3cabba87bc1eb4e9a9bd114"
        ],
        [
            "apply card_add; auto with sets.",
            "VernacExtend",
            "3d88bf6b10ce5808d4a9d5a2da06fa10e7f06e07"
        ],
        [
            "rewrite <- H1; trivial with sets.",
            "VernacExtend",
            "3fb35e1270e21bb1841ea47b73f0d00171985c73"
        ],
        [
            "red; intro; apply H'2.",
            "VernacExtend",
            "5c6504530c199fcced0d0932d1fa331c5caee6c2"
        ],
        [
            "apply In_Image_elim with f; trivial with sets.",
            "VernacExtend",
            "dadc9f0959c8f68205796955fa89f58ea8ec6805"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_decreases : forall (A:Ensemble U) (f:U -> V) (n:nat), cardinal U A n -> forall n':nat, cardinal V (Im A f) n' -> n' <= n.",
            "VernacStartTheoremProof",
            "3c9ae1d37492218aec04a2ab373226daec619f5f"
        ],
        [
            "induction 1 as [| A n H'0 H'1 x H'2]; auto with sets.",
            "VernacExtend",
            "b3859a6dfc18b1e3e333c0a9ca51132229fc18ef"
        ],
        [
            "rewrite (image_empty f); intros.",
            "VernacExtend",
            "01772a3605040f687e82585e253fcb576ea6f025"
        ],
        [
            "cut (n' = 0).",
            "VernacExtend",
            "f2a40564e131e506f06649d30b8611be1a87f3c9"
        ],
        [
            "intro E; rewrite E; trivial with sets.",
            "VernacExtend",
            "c0371d6b3c2172e90a57cd424f9ce7c620eec1a2"
        ],
        [
            "apply cardinal_unicity with V (Empty_set V); auto with sets.",
            "VernacExtend",
            "26f670a260e2dd6f2ba2c85ab108c366834a26f3"
        ],
        [
            "intro n'.",
            "VernacExtend",
            "da4c07ef3078b0a44eb64c44004ba6f71b69a2a9"
        ],
        [
            "rewrite (Im_add A x f).",
            "VernacExtend",
            "e542c2cecffa8f0ae1b73ff3d55284c3efa0988b"
        ],
        [
            "elim cardinal_Im_intro with A f n; trivial with sets.",
            "VernacExtend",
            "1dd85cefe6c2f05640f85bda16586e92ca17135b"
        ],
        [
            "intros p C H'3.",
            "VernacExtend",
            "d66b0a20d5cf0ff4e9d96c44008ad3a81978c448"
        ],
        [
            "apply le_trans with (S p).",
            "VernacExtend",
            "12753a2b07b0b6e6b5ffe3322145a826f41b102b"
        ],
        [
            "apply card_Add_gen with V (Im A f) (f x); trivial with sets.",
            "VernacExtend",
            "65b7dfe109db7859e8b8571671c1a9e1c5fa80d3"
        ],
        [
            "apply le_n_S; auto with sets.",
            "VernacExtend",
            "d3abf14d5fe641e28ae09b8a74d4a0d5a8637e26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Pigeonhole : forall (A:Ensemble U) (f:U -> V) (n:nat), cardinal U A n -> forall n':nat, cardinal V (Im A f) n' -> n' < n -> ~ injective f.",
            "VernacStartTheoremProof",
            "7c66cc919c1b0f1307dbca7ba6d401691005c000"
        ],
        [
            "unfold not; intros A f n CAn n' CIfn' ltn'n I.",
            "VernacExtend",
            "9850c6941b5b7cb5e347ebb63637ab065210448b"
        ],
        [
            "cut (n' = n).",
            "VernacExtend",
            "15bc69201e5fd91193ccbe614ac0e69bcc9acd08"
        ],
        [
            "intro E; generalize ltn'n; rewrite E; exact (lt_irrefl n).",
            "VernacExtend",
            "93f2eda9ef305fcfc4083c82a5a1efabf0626988"
        ],
        [
            "apply injective_preserves_cardinal with (A := A) (f := f) (n := n); trivial with sets.",
            "VernacExtend",
            "2229f2bde636f4bfe39d3f523b539259613bcfd6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Pigeonhole_principle : forall (A:Ensemble U) (f:U -> V) (n:nat), cardinal _ A n -> forall n':nat, cardinal _ (Im A f) n' -> n' < n -> exists x : _, (exists y : _, f x = f y /\\ x <> y).",
            "VernacStartTheoremProof",
            "1073cd54e1ea565410fdeea83448591ec0f67836"
        ],
        [
            "intros; apply not_injective_elim.",
            "VernacExtend",
            "8111ab48811d0157aa893a735e5848e4d19e6f3c"
        ],
        [
            "apply Pigeonhole with A n n'; trivial with sets.",
            "VernacExtend",
            "581e54e4db06dbcc79a57fa4e6de19cce6ab8dda"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Image.",
            "VernacEndSegment",
            "b3c4c5183dc74a8fbdb4487f7d6a42f64df09104"
        ],
        [
            "Hint Resolve Im_def image_empty finite_image: sets.",
            "VernacHints",
            "e92c6b60fcec6df8eca81ad44a69e0f2868eb61c"
        ]
    ],
    "proofs": [
        {
            "name": "Im_def",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros X f x H'; try assumption.",
                        "VernacExtend",
                        "173ed91af8e6e511556936eec18dd6a1be5577e8"
                    ]
                },
                {
                    "command": [
                        "apply Im_intro with (x := x); auto with sets.",
                        "VernacExtend",
                        "d4c1b57cf20c32d18757a25cc350d4bd626330a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Im_add",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros X x f.",
                        "VernacExtend",
                        "9ec68fefef55c91016ab4aaa8270e989edda6d28"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles.",
                        "VernacExtend",
                        "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
                    ]
                },
                {
                    "command": [
                        "split; red; intros x0 H'.",
                        "VernacExtend",
                        "84a5f14343929d5f034b841a0f26b91f1ea558f7"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros.",
                        "VernacExtend",
                        "de4987a1f8d8e17d770453d73ef51fb1a289f855"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "elim Add_inv with U X x x1; auto using Im_def with sets.",
                        "VernacExtend",
                        "d1525aa8489b05b48add5e6ac55dd43e186e6b0f"
                    ]
                },
                {
                    "command": [
                        "destruct 1; auto using Im_def with sets.",
                        "VernacExtend",
                        "4684d6e3ccd95a20e7d4615fb5995391bf20f99d"
                    ]
                },
                {
                    "command": [
                        "elim Add_inv with V (Im X f) (f x) x0.",
                        "VernacExtend",
                        "dea33511514c8b3cf95340ae7bc30a40031e0c8c"
                    ]
                },
                {
                    "command": [
                        "destruct 1 as [x0 H y H0].",
                        "VernacExtend",
                        "a8207ae09bbe22d2666f06a2c6bed5715af8e3f4"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; auto using Im_def with sets.",
                        "VernacExtend",
                        "400ae3d43927989f09cdff2115a357326101250c"
                    ]
                },
                {
                    "command": [
                        "destruct 1; auto using Im_def with sets.",
                        "VernacExtend",
                        "4684d6e3ccd95a20e7d4615fb5995391bf20f99d"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "image_empty",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intro f; try assumption.",
                        "VernacExtend",
                        "17121524392eb8420ab83452a4e8e8f411fbe69c"
                    ]
                },
                {
                    "command": [
                        "apply Extensionality_Ensembles.",
                        "VernacExtend",
                        "14ebb39e5dc9d0000b75509dd8308d20cba4056a"
                    ]
                },
                {
                    "command": [
                        "split; auto with sets.",
                        "VernacExtend",
                        "e42c6be68bfd7922fd0c1cad94f27172355b3c2f"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x H'; elim H'.",
                        "VernacExtend",
                        "04a874befe75b11373eb176bed0b6967c9da2c0e"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'0; elim H'0; auto with sets.",
                        "VernacExtend",
                        "f797fbc10288d8435416457b9b92c97bb4f2ef4f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "finite_image",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros X f H'; elim H'.",
                        "VernacExtend",
                        "24c62294fed0d7a923127232776fed01882b2235"
                    ]
                },
                {
                    "command": [
                        "rewrite (image_empty f); auto with sets.",
                        "VernacExtend",
                        "905a7fb312b2aaa215e7bf2c9849c4d79c966c12"
                    ]
                },
                {
                    "command": [
                        "intros A H'0 H'1 x H'2; clear H' X.",
                        "VernacExtend",
                        "1b3449bdbf87df15181c6c58cddd77d8c2105aaa"
                    ]
                },
                {
                    "command": [
                        "rewrite (Im_add A x f); auto with sets.",
                        "VernacExtend",
                        "5ad7c4f1b3fd3c1367c57ea7f962694957bb61b2"
                    ]
                },
                {
                    "command": [
                        "apply Add_preserves_Finite; auto with sets.",
                        "VernacExtend",
                        "15fb6073c5b4ae2bd08456d56b37a018769de7f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Im_inv",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "intros X f y H'; elim H'.",
                        "VernacExtend",
                        "a7e0c2e09299f1dc571b9f6b2d88f42685650941"
                    ]
                },
                {
                    "command": [
                        "intros x H'0 y0 H'1; rewrite H'1.",
                        "VernacExtend",
                        "07beec83db0a852ac73f1144237c2c49b886af07"
                    ]
                },
                {
                    "command": [
                        "exists x; auto with sets.",
                        "VernacExtend",
                        "84de534c617ae30322cea69828c06843e5da7542"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_Im_intro",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply finite_cardinal; apply finite_image.",
                        "VernacExtend",
                        "e32a925cfd077b7c699b973866bfe71668b4d15a"
                    ]
                },
                {
                    "command": [
                        "apply cardinal_finite with n; trivial with sets.",
                        "VernacExtend",
                        "b85fdade79be1bfeebbfa6375bdc0928a516e68a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_Image_elim",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim Im_inv with A f (f x); trivial with sets.",
                        "VernacExtend",
                        "dcc4f5fb202d58e4e6b1d2b5d895ed374fa440ba"
                    ]
                },
                {
                    "command": [
                        "intros z C; elim C; intros InAz E.",
                        "VernacExtend",
                        "ce074e76f87f7b67a88c5b6052e34c12ea926c22"
                    ]
                },
                {
                    "command": [
                        "elim (H z x E); trivial with sets.",
                        "VernacExtend",
                        "1602a431d352ee10aa1ce599bde5985350c475d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injective_preserves_cardinal",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "induction 2 as [| A n H'0 H'1 x H'2]; auto with sets.",
                        "VernacExtend",
                        "bcfd989051710a07e2defb0f082590adf411ccc9"
                    ]
                },
                {
                    "command": [
                        "rewrite (image_empty f).",
                        "VernacExtend",
                        "42848329bcb61e1bbc5763f965558e0a6c36720f"
                    ]
                },
                {
                    "command": [
                        "intros n' CE.",
                        "VernacExtend",
                        "0052daaf4f385b3102bbe826d536f61161402634"
                    ]
                },
                {
                    "command": [
                        "apply cardinal_unicity with V (Empty_set V); auto with sets.",
                        "VernacExtend",
                        "26f670a260e2dd6f2ba2c85ab108c366834a26f3"
                    ]
                },
                {
                    "command": [
                        "intro n'.",
                        "VernacExtend",
                        "da4c07ef3078b0a44eb64c44004ba6f71b69a2a9"
                    ]
                },
                {
                    "command": [
                        "rewrite (Im_add A x f).",
                        "VernacExtend",
                        "e542c2cecffa8f0ae1b73ff3d55284c3efa0988b"
                    ]
                },
                {
                    "command": [
                        "intro H'3.",
                        "VernacExtend",
                        "7a52fe2aa5f8dbf5ccc908fd4ee206f9d824935d"
                    ]
                },
                {
                    "command": [
                        "elim cardinal_Im_intro with A f n; trivial with sets.",
                        "VernacExtend",
                        "1dd85cefe6c2f05640f85bda16586e92ca17135b"
                    ]
                },
                {
                    "command": [
                        "intros i CI.",
                        "VernacExtend",
                        "4a0137fc9de91448a494e397e261b748ed437ccc"
                    ]
                },
                {
                    "command": [
                        "lapply (H'1 i); trivial with sets.",
                        "VernacExtend",
                        "019b0e8304197233e82bc9faea87d6a76b1e0690"
                    ]
                },
                {
                    "command": [
                        "cut (~ In _ (Im A f) (f x)).",
                        "VernacExtend",
                        "da1747a498f3701c7fc2366b64af3b566bbfd7ff"
                    ]
                },
                {
                    "command": [
                        "intros H0 H1.",
                        "VernacExtend",
                        "8865a2cc8fd198c766a13e1bfccd807be0cce3f1"
                    ]
                },
                {
                    "command": [
                        "apply cardinal_unicity with V (Add _ (Im A f) (f x)); trivial with sets.",
                        "VernacExtend",
                        "12f48a6f0b09f759f3cabba87bc1eb4e9a9bd114"
                    ]
                },
                {
                    "command": [
                        "apply card_add; auto with sets.",
                        "VernacExtend",
                        "3d88bf6b10ce5808d4a9d5a2da06fa10e7f06e07"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1; trivial with sets.",
                        "VernacExtend",
                        "3fb35e1270e21bb1841ea47b73f0d00171985c73"
                    ]
                },
                {
                    "command": [
                        "red; intro; apply H'2.",
                        "VernacExtend",
                        "5c6504530c199fcced0d0932d1fa331c5caee6c2"
                    ]
                },
                {
                    "command": [
                        "apply In_Image_elim with f; trivial with sets.",
                        "VernacExtend",
                        "dadc9f0959c8f68205796955fa89f58ea8ec6805"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_decreases",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "induction 1 as [| A n H'0 H'1 x H'2]; auto with sets.",
                        "VernacExtend",
                        "b3859a6dfc18b1e3e333c0a9ca51132229fc18ef"
                    ]
                },
                {
                    "command": [
                        "rewrite (image_empty f); intros.",
                        "VernacExtend",
                        "01772a3605040f687e82585e253fcb576ea6f025"
                    ]
                },
                {
                    "command": [
                        "cut (n' = 0).",
                        "VernacExtend",
                        "f2a40564e131e506f06649d30b8611be1a87f3c9"
                    ]
                },
                {
                    "command": [
                        "intro E; rewrite E; trivial with sets.",
                        "VernacExtend",
                        "c0371d6b3c2172e90a57cd424f9ce7c620eec1a2"
                    ]
                },
                {
                    "command": [
                        "apply cardinal_unicity with V (Empty_set V); auto with sets.",
                        "VernacExtend",
                        "26f670a260e2dd6f2ba2c85ab108c366834a26f3"
                    ]
                },
                {
                    "command": [
                        "intro n'.",
                        "VernacExtend",
                        "da4c07ef3078b0a44eb64c44004ba6f71b69a2a9"
                    ]
                },
                {
                    "command": [
                        "rewrite (Im_add A x f).",
                        "VernacExtend",
                        "e542c2cecffa8f0ae1b73ff3d55284c3efa0988b"
                    ]
                },
                {
                    "command": [
                        "elim cardinal_Im_intro with A f n; trivial with sets.",
                        "VernacExtend",
                        "1dd85cefe6c2f05640f85bda16586e92ca17135b"
                    ]
                },
                {
                    "command": [
                        "intros p C H'3.",
                        "VernacExtend",
                        "d66b0a20d5cf0ff4e9d96c44008ad3a81978c448"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (S p).",
                        "VernacExtend",
                        "12753a2b07b0b6e6b5ffe3322145a826f41b102b"
                    ]
                },
                {
                    "command": [
                        "apply card_Add_gen with V (Im A f) (f x); trivial with sets.",
                        "VernacExtend",
                        "65b7dfe109db7859e8b8571671c1a9e1c5fa80d3"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S; auto with sets.",
                        "VernacExtend",
                        "d3abf14d5fe641e28ae09b8a74d4a0d5a8637e26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pigeonhole",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "unfold not; intros A f n CAn n' CIfn' ltn'n I.",
                        "VernacExtend",
                        "9850c6941b5b7cb5e347ebb63637ab065210448b"
                    ]
                },
                {
                    "command": [
                        "cut (n' = n).",
                        "VernacExtend",
                        "15bc69201e5fd91193ccbe614ac0e69bcc9acd08"
                    ]
                },
                {
                    "command": [
                        "intro E; generalize ltn'n; rewrite E; exact (lt_irrefl n).",
                        "VernacExtend",
                        "93f2eda9ef305fcfc4083c82a5a1efabf0626988"
                    ]
                },
                {
                    "command": [
                        "apply injective_preserves_cardinal with (A := A) (f := f) (n := n); trivial with sets.",
                        "VernacExtend",
                        "2229f2bde636f4bfe39d3f523b539259613bcfd6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pigeonhole_principle",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "intros; apply not_injective_elim.",
                        "VernacExtend",
                        "8111ab48811d0157aa893a735e5848e4d19e6f3c"
                    ]
                },
                {
                    "command": [
                        "apply Pigeonhole with A n n'; trivial with sets.",
                        "VernacExtend",
                        "581e54e4db06dbcc79a57fa4e6de19cce6ab8dda"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}