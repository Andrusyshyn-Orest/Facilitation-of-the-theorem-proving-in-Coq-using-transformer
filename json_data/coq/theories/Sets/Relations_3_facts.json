{
    "filename": "theories/Sets/Relations_3_facts.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export Relations_1.",
            "VernacRequire",
            "0a235b67d46a5e07126344dcec7eaaebb80561a3"
        ],
        [
            "Require Export Relations_1_facts.",
            "VernacRequire",
            "34a061e815312f5368cc12be7194337f5c88edf0"
        ],
        [
            "Require Export Relations_2.",
            "VernacRequire",
            "d5f861e8ed7bea1336e3a47049273f449ee1654c"
        ],
        [
            "Require Export Relations_2_facts.",
            "VernacRequire",
            "7b550394fedf164fb66a2799ce8315cac988ee54"
        ],
        [
            "Require Export Relations_3.",
            "VernacRequire",
            "d03aa79aa315460c222123f80d5d6d31b1068da8"
        ],
        [
            "Theorem Rstar_imp_coherent : forall (U:Type) (R:Relation U) (x y:U), Rstar U R x y -> coherent U R x y.",
            "VernacStartTheoremProof",
            "6521008ad5c7d3dbcb385c6f3bb20df6291195c1"
        ],
        [
            "intros U R x y H'; red.",
            "VernacExtend",
            "7bfaaa8f646f6c3b0ed79cc37ac4371a3885be95"
        ],
        [
            "exists y; auto with sets.",
            "VernacExtend",
            "4a044cc836e1c944dda62c0ed41ec845edb79000"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rstar_imp_coherent.",
            "VernacHints",
            "9f376ca9fa51674b34f4e3664e46e2f90772535c"
        ],
        [
            "Theorem coherent_symmetric : forall (U:Type) (R:Relation U), Symmetric U (coherent U R).",
            "VernacStartTheoremProof",
            "4079b45104a18e30aaf4b8083d55c0fed10cf4ea"
        ],
        [
            "unfold coherent at 1.",
            "VernacExtend",
            "785660ff951412f0c77f7d5b347c28ebb3d1445c"
        ],
        [
            "intros U R; red.",
            "VernacExtend",
            "562024b2415c714527d878eb44edb42a92089c07"
        ],
        [
            "intros x y H'; elim H'.",
            "VernacExtend",
            "2884d733efba176f8edd09550b441b9f73a3602e"
        ],
        [
            "intros z H'0; exists z; tauto.",
            "VernacExtend",
            "e5d80d46cbda1f1a50c36dcc4a2bccb02dd94cdb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Strong_confluence : forall (U:Type) (R:Relation U), Strongly_confluent U R -> Confluent U R.",
            "VernacStartTheoremProof",
            "ea91b5de95b25151817a480cb9283178ff8494c2"
        ],
        [
            "intros U R H'; red.",
            "VernacExtend",
            "14600a13cb1e0c8d3fa399f0230cbd854ebeee0c"
        ],
        [
            "intro x; red; intros a b H'0.",
            "VernacExtend",
            "a28bff63178f6a319b9ab1bd7c534ead13a3446e"
        ],
        [
            "unfold coherent at 1.",
            "VernacExtend",
            "785660ff951412f0c77f7d5b347c28ebb3d1445c"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "elim H'0; clear H'0.",
            "VernacExtend",
            "7762b71a83022fb4fe80efea2d0accec1dc23596"
        ],
        [
            "intros x0 b H'1; exists b; auto with sets.",
            "VernacExtend",
            "5ac5dabb980572e2e70658f17d3f40af2439c067"
        ],
        [
            "intros x0 y z H'1 H'2 H'3 b H'4.",
            "VernacExtend",
            "6516f601c17745e806b6c2fc8ad94e096b0c76bd"
        ],
        [
            "generalize (Lemma1 U R); intro h; lapply h; [ intro H'0; generalize (H'0 x0 b); intro h0; lapply h0; [ intro H'5; generalize (H'5 y); intro h1; lapply h1; [ intro h2; elim h2; intros z0 h3; elim h3; intros H'6 H'7; clear h h0 h1 h2 h3 | clear h h0 h1 ] | clear h h0 ] | clear h ]; auto with sets.",
            "VernacExtend",
            "c283445d0ed54b9406a8987de84bd7da1e393df7"
        ],
        [
            "generalize (H'3 z0); intro h; lapply h; [ intro h0; elim h0; intros z1 h1; elim h1; intros H'8 H'9; clear h h0 h1 | clear h ]; auto with sets.",
            "VernacExtend",
            "c36193c8b5079a3618d93cdb94b1715a416ef797"
        ],
        [
            "exists z1; split; auto with sets.",
            "VernacExtend",
            "03070c0884de4267e709df82346a2c02192db6a2"
        ],
        [
            "apply Rstar_n with z0; auto with sets.",
            "VernacExtend",
            "26a45d230d1a008d0b5cf1e0b262428fe166c65a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Strong_confluence_direct : forall (U:Type) (R:Relation U), Strongly_confluent U R -> Confluent U R.",
            "VernacStartTheoremProof",
            "35c9b1e954c46aa934186e36f10ac8db6a8724b2"
        ],
        [
            "intros U R H'; red.",
            "VernacExtend",
            "14600a13cb1e0c8d3fa399f0230cbd854ebeee0c"
        ],
        [
            "intro x; red; intros a b H'0.",
            "VernacExtend",
            "a28bff63178f6a319b9ab1bd7c534ead13a3446e"
        ],
        [
            "unfold coherent at 1.",
            "VernacExtend",
            "785660ff951412f0c77f7d5b347c28ebb3d1445c"
        ],
        [
            "generalize b; clear b.",
            "VernacExtend",
            "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
        ],
        [
            "elim H'0; clear H'0.",
            "VernacExtend",
            "7762b71a83022fb4fe80efea2d0accec1dc23596"
        ],
        [
            "intros x0 b H'1; exists b; auto with sets.",
            "VernacExtend",
            "5ac5dabb980572e2e70658f17d3f40af2439c067"
        ],
        [
            "intros x0 y z H'1 H'2 H'3 b H'4.",
            "VernacExtend",
            "6516f601c17745e806b6c2fc8ad94e096b0c76bd"
        ],
        [
            "cut (ex (fun t:U => Rstar U R y t /\\ R b t)).",
            "VernacExtend",
            "79b9f4a4329d31af680847609368cb6107588bdd"
        ],
        [
            "intro h; elim h; intros t h0; elim h0; intros H'0 H'5; clear h h0.",
            "VernacExtend",
            "9ca29654bec4021f7da609a84cd7da2068bfb1e5"
        ],
        [
            "generalize (H'3 t); intro h; lapply h; [ intro h0; elim h0; intros z0 h1; elim h1; intros H'6 H'7; clear h h0 h1 | clear h ]; auto with sets.",
            "VernacExtend",
            "ba1213e14986c0b9fd46bdbb67ad91df89fdc9b2"
        ],
        [
            "exists z0; split; [ assumption | idtac ].",
            "VernacExtend",
            "ba52b4987fdb2ba2d18ad0cf805c553db01c80fb"
        ],
        [
            "apply Rstar_n with t; auto with sets.",
            "VernacExtend",
            "2f39416e44874833d82da8611d00f45f2a6f77a2"
        ],
        [
            "generalize H'1; generalize y; clear H'1.",
            "VernacExtend",
            "ebf34cebe8f79532e4913aec01319022e5667bd2"
        ],
        [
            "elim H'4.",
            "VernacExtend",
            "6b9f1f9423d39545e0007ba27d262903c68547c3"
        ],
        [
            "intros x1 y0 H'0; exists y0; auto with sets.",
            "VernacExtend",
            "560ed43810d18af11bb4bd2bbb621736da12427e"
        ],
        [
            "intros x1 y0 z0 H'0 H'1 H'5 y1 H'6.",
            "VernacExtend",
            "d0939ae46c8437214c60629f37e9b7f20d065eb5"
        ],
        [
            "red in H'.",
            "VernacExtend",
            "b3f39ff59e03e63f7335587cdc4b70d75813b637"
        ],
        [
            "generalize (H' x1 y0 y1); intro h; lapply h; [ intro H'7; lapply H'7; [ intro h0; elim h0; intros z1 h1; elim h1; intros H'8 H'9; clear h H'7 h0 h1 | clear h ] | clear h ]; auto with sets.",
            "VernacExtend",
            "d22d63a5779156cc8c9d814297c63c610a31eb4e"
        ],
        [
            "generalize (H'5 z1); intro h; lapply h; [ intro h0; elim h0; intros t h1; elim h1; intros H'7 H'10; clear h h0 h1 | clear h ]; auto with sets.",
            "VernacExtend",
            "38189c85e7f30621e64f9476ed7dce6ef8fa1004"
        ],
        [
            "exists t; split; auto with sets.",
            "VernacExtend",
            "90bb9c87619931126d91b61eee7c03c96a6ff724"
        ],
        [
            "apply Rstar_n with z1; auto with sets.",
            "VernacExtend",
            "b7a9c1e8a2695e2376ecc9c01ccb07628a16e7c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Noetherian_contains_Noetherian : forall (U:Type) (R R':Relation U), Noetherian U R -> contains U R R' -> Noetherian U R'.",
            "VernacStartTheoremProof",
            "3b50ec5c4c3e800c24d2665be6fa82ca5738d743"
        ],
        [
            "unfold Noetherian at 2.",
            "VernacExtend",
            "f09d3f6f1ba24f896bf3578c817aee734b8fe835"
        ],
        [
            "intros U R R' H' H'0 x.",
            "VernacExtend",
            "86d1f20ea35e6919751dcfbb19fbc2902d0e09ce"
        ],
        [
            "elim (H' x); auto with sets.",
            "VernacExtend",
            "b720b3204d4f5a618a2b97204ac475ee91bfc319"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Newman : forall (U:Type) (R:Relation U), Noetherian U R -> Locally_confluent U R -> Confluent U R.",
            "VernacStartTheoremProof",
            "a80eb87ae3fc89636bccbbedcd7c45cf0a459a78"
        ],
        [
            "intros U R H' H'0; red; intro x.",
            "VernacExtend",
            "8eb456fc1da00de4ec57c61b454bfb7eb8987180"
        ],
        [
            "elim (H' x); unfold confluent.",
            "VernacExtend",
            "4aaf431440fc20f07afb998474fae3af7ac19ca7"
        ],
        [
            "intros x0 H'1 H'2 y z H'3 H'4.",
            "VernacExtend",
            "ebbcc3de36b2a62be50f883fe9824bbed4f204dd"
        ],
        [
            "generalize (Rstar_cases U R x0 y); intro h; lapply h; [ intro h0; elim h0; [ clear h h0; intro h1 | intro h1; elim h1; intros u h2; elim h2; intros H'5 H'6; clear h h0 h1 h2 ] | clear h ]; auto with sets.",
            "VernacExtend",
            "145ee847d9e718b29bc3e64874f3609778238717"
        ],
        [
            "elim h1; auto with sets.",
            "VernacExtend",
            "23343aa0748a9ea6604e80278fe6b510967a9930"
        ],
        [
            "generalize (Rstar_cases U R x0 z); intro h; lapply h; [ intro h0; elim h0; [ clear h h0; intro h1 | intro h1; elim h1; intros v h2; elim h2; intros H'7 H'8; clear h h0 h1 h2 ] | clear h ]; auto with sets.",
            "VernacExtend",
            "aa5e3a920125d5c08197bf747dc3b74bfc595d20"
        ],
        [
            "elim h1; generalize coherent_symmetric; intro t; red in t; auto with sets.",
            "VernacExtend",
            "3b39ebe2a1d518b642b54f976bb07a91e56f92a3"
        ],
        [
            "unfold Locally_confluent, locally_confluent, coherent in H'0.",
            "VernacExtend",
            "a458f4287a07090d04f01a472f5e03e2fe16da92"
        ],
        [
            "generalize (H'0 x0 u v); intro h; lapply h; [ intro H'9; lapply H'9; [ intro h0; elim h0; intros t h1; elim h1; intros H'10 H'11; clear h H'9 h0 h1 | clear h ] | clear h ]; auto with sets.",
            "VernacExtend",
            "64481d276d3021372ed8e99f40498a98e4899dc4"
        ],
        [
            "clear H'0.",
            "VernacExtend",
            "e75a56fb7c522f89a156bab27b9c0ea8c0512bf6"
        ],
        [
            "unfold coherent at 1 in H'2.",
            "VernacExtend",
            "27a1ea90a54d70d7d6d404b08752a249b9087089"
        ],
        [
            "generalize (H'2 u); intro h; lapply h; [ intro H'0; generalize (H'0 y t); intro h0; lapply h0; [ intro H'9; lapply H'9; [ intro h1; elim h1; intros y1 h2; elim h2; intros H'12 H'13; clear h h0 H'9 h1 h2 | clear h h0 ] | clear h h0 ] | clear h ]; auto with sets.",
            "VernacExtend",
            "7c4a09ab3f3cf356789c97580eba07aa47252823"
        ],
        [
            "generalize Rstar_transitive; intro T; red in T.",
            "VernacExtend",
            "e7a2ef18ce9c90eb599e1242eab101acb86e6497"
        ],
        [
            "generalize (H'2 v); intro h; lapply h; [ intro H'9; generalize (H'9 y1 z); intro h0; lapply h0; [ intro H'14; lapply H'14; [ intro h1; elim h1; intros z1 h2; elim h2; intros H'15 H'16; clear h h0 H'14 h1 h2 | clear h h0 ] | clear h h0 ] | clear h ]; auto with sets.",
            "VernacExtend",
            "b92a17464b9b697d4e5eff5fcd1387eb9ae3e48b"
        ],
        [
            "red; (exists z1; split); auto with sets.",
            "VernacExtend",
            "a6dbaf63bd34654931502b45db8d11366d95c483"
        ],
        [
            "apply T with y1; auto with sets.",
            "VernacExtend",
            "593eab75cbb39c83d4a4f4d3b3f8831f9996c7d4"
        ],
        [
            "apply T with t; auto with sets.",
            "VernacExtend",
            "11b07864bc75c01f77564b425f38f08464d7592e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "Rstar_imp_coherent",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros U R x y H'; red.",
                        "VernacExtend",
                        "7bfaaa8f646f6c3b0ed79cc37ac4371a3885be95"
                    ]
                },
                {
                    "command": [
                        "exists y; auto with sets.",
                        "VernacExtend",
                        "4a044cc836e1c944dda62c0ed41ec845edb79000"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coherent_symmetric",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "unfold coherent at 1.",
                        "VernacExtend",
                        "785660ff951412f0c77f7d5b347c28ebb3d1445c"
                    ]
                },
                {
                    "command": [
                        "intros U R; red.",
                        "VernacExtend",
                        "562024b2415c714527d878eb44edb42a92089c07"
                    ]
                },
                {
                    "command": [
                        "intros x y H'; elim H'.",
                        "VernacExtend",
                        "2884d733efba176f8edd09550b441b9f73a3602e"
                    ]
                },
                {
                    "command": [
                        "intros z H'0; exists z; tauto.",
                        "VernacExtend",
                        "e5d80d46cbda1f1a50c36dcc4a2bccb02dd94cdb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Strong_confluence",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros U R H'; red.",
                        "VernacExtend",
                        "14600a13cb1e0c8d3fa399f0230cbd854ebeee0c"
                    ]
                },
                {
                    "command": [
                        "intro x; red; intros a b H'0.",
                        "VernacExtend",
                        "a28bff63178f6a319b9ab1bd7c534ead13a3446e"
                    ]
                },
                {
                    "command": [
                        "unfold coherent at 1.",
                        "VernacExtend",
                        "785660ff951412f0c77f7d5b347c28ebb3d1445c"
                    ]
                },
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "elim H'0; clear H'0.",
                        "VernacExtend",
                        "7762b71a83022fb4fe80efea2d0accec1dc23596"
                    ]
                },
                {
                    "command": [
                        "intros x0 b H'1; exists b; auto with sets.",
                        "VernacExtend",
                        "5ac5dabb980572e2e70658f17d3f40af2439c067"
                    ]
                },
                {
                    "command": [
                        "intros x0 y z H'1 H'2 H'3 b H'4.",
                        "VernacExtend",
                        "6516f601c17745e806b6c2fc8ad94e096b0c76bd"
                    ]
                },
                {
                    "command": [
                        "generalize (Lemma1 U R); intro h; lapply h; [ intro H'0; generalize (H'0 x0 b); intro h0; lapply h0; [ intro H'5; generalize (H'5 y); intro h1; lapply h1; [ intro h2; elim h2; intros z0 h3; elim h3; intros H'6 H'7; clear h h0 h1 h2 h3 | clear h h0 h1 ] | clear h h0 ] | clear h ]; auto with sets.",
                        "VernacExtend",
                        "c283445d0ed54b9406a8987de84bd7da1e393df7"
                    ]
                },
                {
                    "command": [
                        "generalize (H'3 z0); intro h; lapply h; [ intro h0; elim h0; intros z1 h1; elim h1; intros H'8 H'9; clear h h0 h1 | clear h ]; auto with sets.",
                        "VernacExtend",
                        "c36193c8b5079a3618d93cdb94b1715a416ef797"
                    ]
                },
                {
                    "command": [
                        "exists z1; split; auto with sets.",
                        "VernacExtend",
                        "03070c0884de4267e709df82346a2c02192db6a2"
                    ]
                },
                {
                    "command": [
                        "apply Rstar_n with z0; auto with sets.",
                        "VernacExtend",
                        "26a45d230d1a008d0b5cf1e0b262428fe166c65a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Strong_confluence_direct",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros U R H'; red.",
                        "VernacExtend",
                        "14600a13cb1e0c8d3fa399f0230cbd854ebeee0c"
                    ]
                },
                {
                    "command": [
                        "intro x; red; intros a b H'0.",
                        "VernacExtend",
                        "a28bff63178f6a319b9ab1bd7c534ead13a3446e"
                    ]
                },
                {
                    "command": [
                        "unfold coherent at 1.",
                        "VernacExtend",
                        "785660ff951412f0c77f7d5b347c28ebb3d1445c"
                    ]
                },
                {
                    "command": [
                        "generalize b; clear b.",
                        "VernacExtend",
                        "fe29e6bfb726c08f334570c72a0704e99bdc7fe9"
                    ]
                },
                {
                    "command": [
                        "elim H'0; clear H'0.",
                        "VernacExtend",
                        "7762b71a83022fb4fe80efea2d0accec1dc23596"
                    ]
                },
                {
                    "command": [
                        "intros x0 b H'1; exists b; auto with sets.",
                        "VernacExtend",
                        "5ac5dabb980572e2e70658f17d3f40af2439c067"
                    ]
                },
                {
                    "command": [
                        "intros x0 y z H'1 H'2 H'3 b H'4.",
                        "VernacExtend",
                        "6516f601c17745e806b6c2fc8ad94e096b0c76bd"
                    ]
                },
                {
                    "command": [
                        "cut (ex (fun t:U => Rstar U R y t /\\ R b t)).",
                        "VernacExtend",
                        "79b9f4a4329d31af680847609368cb6107588bdd"
                    ]
                },
                {
                    "command": [
                        "intro h; elim h; intros t h0; elim h0; intros H'0 H'5; clear h h0.",
                        "VernacExtend",
                        "9ca29654bec4021f7da609a84cd7da2068bfb1e5"
                    ]
                },
                {
                    "command": [
                        "generalize (H'3 t); intro h; lapply h; [ intro h0; elim h0; intros z0 h1; elim h1; intros H'6 H'7; clear h h0 h1 | clear h ]; auto with sets.",
                        "VernacExtend",
                        "ba1213e14986c0b9fd46bdbb67ad91df89fdc9b2"
                    ]
                },
                {
                    "command": [
                        "exists z0; split; [ assumption | idtac ].",
                        "VernacExtend",
                        "ba52b4987fdb2ba2d18ad0cf805c553db01c80fb"
                    ]
                },
                {
                    "command": [
                        "apply Rstar_n with t; auto with sets.",
                        "VernacExtend",
                        "2f39416e44874833d82da8611d00f45f2a6f77a2"
                    ]
                },
                {
                    "command": [
                        "generalize H'1; generalize y; clear H'1.",
                        "VernacExtend",
                        "ebf34cebe8f79532e4913aec01319022e5667bd2"
                    ]
                },
                {
                    "command": [
                        "elim H'4.",
                        "VernacExtend",
                        "6b9f1f9423d39545e0007ba27d262903c68547c3"
                    ]
                },
                {
                    "command": [
                        "intros x1 y0 H'0; exists y0; auto with sets.",
                        "VernacExtend",
                        "560ed43810d18af11bb4bd2bbb621736da12427e"
                    ]
                },
                {
                    "command": [
                        "intros x1 y0 z0 H'0 H'1 H'5 y1 H'6.",
                        "VernacExtend",
                        "d0939ae46c8437214c60629f37e9b7f20d065eb5"
                    ]
                },
                {
                    "command": [
                        "red in H'.",
                        "VernacExtend",
                        "b3f39ff59e03e63f7335587cdc4b70d75813b637"
                    ]
                },
                {
                    "command": [
                        "generalize (H' x1 y0 y1); intro h; lapply h; [ intro H'7; lapply H'7; [ intro h0; elim h0; intros z1 h1; elim h1; intros H'8 H'9; clear h H'7 h0 h1 | clear h ] | clear h ]; auto with sets.",
                        "VernacExtend",
                        "d22d63a5779156cc8c9d814297c63c610a31eb4e"
                    ]
                },
                {
                    "command": [
                        "generalize (H'5 z1); intro h; lapply h; [ intro h0; elim h0; intros t h1; elim h1; intros H'7 H'10; clear h h0 h1 | clear h ]; auto with sets.",
                        "VernacExtend",
                        "38189c85e7f30621e64f9476ed7dce6ef8fa1004"
                    ]
                },
                {
                    "command": [
                        "exists t; split; auto with sets.",
                        "VernacExtend",
                        "90bb9c87619931126d91b61eee7c03c96a6ff724"
                    ]
                },
                {
                    "command": [
                        "apply Rstar_n with z1; auto with sets.",
                        "VernacExtend",
                        "b7a9c1e8a2695e2376ecc9c01ccb07628a16e7c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Noetherian_contains_Noetherian",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "unfold Noetherian at 2.",
                        "VernacExtend",
                        "f09d3f6f1ba24f896bf3578c817aee734b8fe835"
                    ]
                },
                {
                    "command": [
                        "intros U R R' H' H'0 x.",
                        "VernacExtend",
                        "86d1f20ea35e6919751dcfbb19fbc2902d0e09ce"
                    ]
                },
                {
                    "command": [
                        "elim (H' x); auto with sets.",
                        "VernacExtend",
                        "b720b3204d4f5a618a2b97204ac475ee91bfc319"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Newman",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros U R H' H'0; red; intro x.",
                        "VernacExtend",
                        "8eb456fc1da00de4ec57c61b454bfb7eb8987180"
                    ]
                },
                {
                    "command": [
                        "elim (H' x); unfold confluent.",
                        "VernacExtend",
                        "4aaf431440fc20f07afb998474fae3af7ac19ca7"
                    ]
                },
                {
                    "command": [
                        "intros x0 H'1 H'2 y z H'3 H'4.",
                        "VernacExtend",
                        "ebbcc3de36b2a62be50f883fe9824bbed4f204dd"
                    ]
                },
                {
                    "command": [
                        "generalize (Rstar_cases U R x0 y); intro h; lapply h; [ intro h0; elim h0; [ clear h h0; intro h1 | intro h1; elim h1; intros u h2; elim h2; intros H'5 H'6; clear h h0 h1 h2 ] | clear h ]; auto with sets.",
                        "VernacExtend",
                        "145ee847d9e718b29bc3e64874f3609778238717"
                    ]
                },
                {
                    "command": [
                        "elim h1; auto with sets.",
                        "VernacExtend",
                        "23343aa0748a9ea6604e80278fe6b510967a9930"
                    ]
                },
                {
                    "command": [
                        "generalize (Rstar_cases U R x0 z); intro h; lapply h; [ intro h0; elim h0; [ clear h h0; intro h1 | intro h1; elim h1; intros v h2; elim h2; intros H'7 H'8; clear h h0 h1 h2 ] | clear h ]; auto with sets.",
                        "VernacExtend",
                        "aa5e3a920125d5c08197bf747dc3b74bfc595d20"
                    ]
                },
                {
                    "command": [
                        "elim h1; generalize coherent_symmetric; intro t; red in t; auto with sets.",
                        "VernacExtend",
                        "3b39ebe2a1d518b642b54f976bb07a91e56f92a3"
                    ]
                },
                {
                    "command": [
                        "unfold Locally_confluent, locally_confluent, coherent in H'0.",
                        "VernacExtend",
                        "a458f4287a07090d04f01a472f5e03e2fe16da92"
                    ]
                },
                {
                    "command": [
                        "generalize (H'0 x0 u v); intro h; lapply h; [ intro H'9; lapply H'9; [ intro h0; elim h0; intros t h1; elim h1; intros H'10 H'11; clear h H'9 h0 h1 | clear h ] | clear h ]; auto with sets.",
                        "VernacExtend",
                        "64481d276d3021372ed8e99f40498a98e4899dc4"
                    ]
                },
                {
                    "command": [
                        "clear H'0.",
                        "VernacExtend",
                        "e75a56fb7c522f89a156bab27b9c0ea8c0512bf6"
                    ]
                },
                {
                    "command": [
                        "unfold coherent at 1 in H'2.",
                        "VernacExtend",
                        "27a1ea90a54d70d7d6d404b08752a249b9087089"
                    ]
                },
                {
                    "command": [
                        "generalize (H'2 u); intro h; lapply h; [ intro H'0; generalize (H'0 y t); intro h0; lapply h0; [ intro H'9; lapply H'9; [ intro h1; elim h1; intros y1 h2; elim h2; intros H'12 H'13; clear h h0 H'9 h1 h2 | clear h h0 ] | clear h h0 ] | clear h ]; auto with sets.",
                        "VernacExtend",
                        "7c4a09ab3f3cf356789c97580eba07aa47252823"
                    ]
                },
                {
                    "command": [
                        "generalize Rstar_transitive; intro T; red in T.",
                        "VernacExtend",
                        "e7a2ef18ce9c90eb599e1242eab101acb86e6497"
                    ]
                },
                {
                    "command": [
                        "generalize (H'2 v); intro h; lapply h; [ intro H'9; generalize (H'9 y1 z); intro h0; lapply h0; [ intro H'14; lapply H'14; [ intro h1; elim h1; intros z1 h2; elim h2; intros H'15 H'16; clear h h0 H'14 h1 h2 | clear h h0 ] | clear h h0 ] | clear h ]; auto with sets.",
                        "VernacExtend",
                        "b92a17464b9b697d4e5eff5fcd1387eb9ae3e48b"
                    ]
                },
                {
                    "command": [
                        "red; (exists z1; split); auto with sets.",
                        "VernacExtend",
                        "a6dbaf63bd34654931502b45db8d11366d95c483"
                    ]
                },
                {
                    "command": [
                        "apply T with y1; auto with sets.",
                        "VernacExtend",
                        "593eab75cbb39c83d4a4f4d3b3f8831f9996c7d4"
                    ]
                },
                {
                    "command": [
                        "apply T with t; auto with sets.",
                        "VernacExtend",
                        "11b07864bc75c01f77564b425f38f08464d7592e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}