{
    "filename": "theories/Sets/Finite_sets_facts.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export Finite_sets.",
            "VernacRequire",
            "d8d6dffeb7f48ddf43613f5cf9081e0a08c8e4a9"
        ],
        [
            "Require Export Constructive_sets.",
            "VernacRequire",
            "1ab62e257413a8f4f55081d9a0217597d3378008"
        ],
        [
            "Require Export Classical.",
            "VernacRequire",
            "931639e04b7f4b817db4e158c9ff078a0a2025f4"
        ],
        [
            "Require Export Classical_sets.",
            "VernacRequire",
            "1fca917462e7d178d643bee043d06f12c733de74"
        ],
        [
            "Require Export Powerset.",
            "VernacRequire",
            "4fb4eb435f26c14af8fe29e2df323d898a6fd29a"
        ],
        [
            "Require Export Powerset_facts.",
            "VernacRequire",
            "c29c40d605abd2bf3e7bb2446860c20e47a33999"
        ],
        [
            "Require Export Powerset_Classical_facts.",
            "VernacRequire",
            "f1c1cbe240cf78b92f2ff2e1d3c34da0447c3b2b"
        ],
        [
            "Require Export Gt.",
            "VernacRequire",
            "30dc2c794df1101af4118a677f84c17e3db84d83"
        ],
        [
            "Require Export Lt.",
            "VernacRequire",
            "e903e9dc8ccc3536651c288b58378704da8db963"
        ],
        [
            "Section Finite_sets_facts.",
            "VernacBeginSection",
            "428771dae37319bebde54b952a4cb0b27a30990f"
        ],
        [
            "Variable U : Type.",
            "VernacAssumption",
            "eb05258af3da16894daf420a97be779934a15d7e"
        ],
        [
            "Lemma finite_cardinal : forall X:Ensemble U, Finite U X -> exists n : nat, cardinal U X n.",
            "VernacStartTheoremProof",
            "2384f162bfe1aad22474bf0f9b335c29938bc7ac"
        ],
        [
            "induction 1 as [| A _ [n H]].",
            "VernacExtend",
            "696812490780dbb61a1d506aae33e07fcdeb5bca"
        ],
        [
            "exists 0; auto with sets.",
            "VernacExtend",
            "d36e442b79b9e9041cafda807e441fae4782f75a"
        ],
        [
            "exists (S n); auto with sets.",
            "VernacExtend",
            "df6bcaac368709f927d0d485a804e68b1f0844ee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_finite : forall (X:Ensemble U) (n:nat), cardinal U X n -> Finite U X.",
            "VernacStartTheoremProof",
            "ee36f890c690ac195662d500384f0aec862f7c4c"
        ],
        [
            "induction 1; auto with sets.",
            "VernacExtend",
            "c780a9708f98fb3c375564f69afa79c808430315"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Add_preserves_Finite : forall (X:Ensemble U) (x:U), Finite U X -> Finite U (Add U X x).",
            "VernacStartTheoremProof",
            "0ee0c68e41545abf49e3ae1fa308ff867f4ace5c"
        ],
        [
            "intros X x H'.",
            "VernacExtend",
            "49f3bb544be76218c078d6fef54bdf72219d3f17"
        ],
        [
            "elim (classic (In U X x)); intro H'0; auto with sets.",
            "VernacExtend",
            "f3a4f0eb61aa1ec798296733751c6a4ca2322656"
        ],
        [
            "rewrite (Non_disjoint_union U X x); auto with sets.",
            "VernacExtend",
            "e02232e0e00f818cbc2631981986eb697a383f4c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Singleton_is_finite : forall x:U, Finite U (Singleton U x).",
            "VernacStartTheoremProof",
            "ef1f3a4a587552fb8131af0a2db39c3134aaadf2"
        ],
        [
            "intro x; rewrite <- (Empty_set_zero U (Singleton U x)).",
            "VernacExtend",
            "100c67a082e7842f1e200abd25d4358574e0e22c"
        ],
        [
            "change (Finite U (Add U (Empty_set U) x)); auto with sets.",
            "VernacExtend",
            "b441ccfeccacf7f536e25c61ff6796131c24faa0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Union_preserves_Finite : forall X Y:Ensemble U, Finite U X -> Finite U Y -> Finite U (Union U X Y).",
            "VernacStartTheoremProof",
            "175cd5e6a0477d158294f45416dd678873231987"
        ],
        [
            "intros X Y H; induction H as [|A Fin_A Hind x].",
            "VernacExtend",
            "d2041b44a6c7adb207a2b81492b7c872fe574d79"
        ],
        [
            "rewrite (Empty_set_zero U Y).",
            "VernacExtend",
            "fb1ada790c2bae1e3d73239207cfaf78ab8da7bd"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (Union_commutative U (Add U A x) Y).",
            "VernacExtend",
            "4b22c118f160d01e778f7cbdd4c5770f0ba466f1"
        ],
        [
            "rewrite <- (Union_add U Y A x).",
            "VernacExtend",
            "8841ea8bb0eca04ae7bffbf6b5d64f883605f1a0"
        ],
        [
            "rewrite (Union_commutative U Y A).",
            "VernacExtend",
            "2a235f4b994f8b2f1da08ecfbc45699dbcf10b16"
        ],
        [
            "apply Add_preserves_Finite.",
            "VernacExtend",
            "600820f0d2d139babfd3d1f73d3c72e8a7729176"
        ],
        [
            "apply Hind.",
            "VernacExtend",
            "61636ea4cd4848266d7fd895d2d8ee91453166e5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Finite_downward_closed : forall A:Ensemble U, Finite U A -> forall X:Ensemble U, Included U X A -> Finite U X.",
            "VernacStartTheoremProof",
            "342fe10b9e5ee92080746d50037a386c9ea034ef"
        ],
        [
            "intros A H'; elim H'; auto with sets.",
            "VernacExtend",
            "cdcfe67f8bf81b69a5f81d7a2767dc07e29c5ce4"
        ],
        [
            "intros X H'0.",
            "VernacExtend",
            "9bf6d0d7e94a89bd65e09c2f5dd60a370bf98ea3"
        ],
        [
            "rewrite (less_than_empty U X H'0); auto with sets.",
            "VernacExtend",
            "9bd8a57a63d2fc26feea28b8fb0816d2111073c3"
        ],
        [
            "intros; elim Included_Add with U X A0 x; auto with sets.",
            "VernacExtend",
            "21db11e3a04e7014315eec019a502f0fc7a4c329"
        ],
        [
            "destruct 1 as [A' [H5 H6]].",
            "VernacExtend",
            "e84da727aadd5f266f769f17e5e81d018a801110"
        ],
        [
            "rewrite H5; auto with sets.",
            "VernacExtend",
            "4aefd94fce35586f4e9d4abdb68e811e1cf8d7cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Intersection_preserves_finite : forall A:Ensemble U, Finite U A -> forall X:Ensemble U, Finite U (Intersection U X A).",
            "VernacStartTheoremProof",
            "f24ee1a30a48811ca1b1460c021909f73322bcf2"
        ],
        [
            "intros A H' X; apply Finite_downward_closed with A; auto with sets.",
            "VernacExtend",
            "f28ed97f7c035945055bfe6d002ce2f74add76e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinalO_empty : forall X:Ensemble U, cardinal U X 0 -> X = Empty_set U.",
            "VernacStartTheoremProof",
            "1a806f11b83133dd987271086b9c8809775e230c"
        ],
        [
            "intros X H; apply (cardinal_invert U X 0); trivial with sets.",
            "VernacExtend",
            "e72f238dd31e0e556ff29c83d2889aef0226e030"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inh_card_gt_O : forall X:Ensemble U, Inhabited U X -> forall n:nat, cardinal U X n -> n > 0.",
            "VernacStartTheoremProof",
            "b8efe761a61cb6f53f696dd48fc770eeac68ba3a"
        ],
        [
            "induction 1 as [x H'].",
            "VernacExtend",
            "9389ae8e9db3f164d1ac629ef92e2d8f5855efb2"
        ],
        [
            "intros n H'0.",
            "VernacExtend",
            "1cb824af66a4a40a6e20cd53bc1b668819d37869"
        ],
        [
            "elim (gt_O_eq n); auto with sets.",
            "VernacExtend",
            "cf95fd27f771f804a14d43ab2be91265a17ef474"
        ],
        [
            "intro H'1; generalize H'; generalize H'0.",
            "VernacExtend",
            "129506de8e5fde65efeba6880831e88aa70dc98f"
        ],
        [
            "rewrite <- H'1; intro H'2.",
            "VernacExtend",
            "b4dbf14bf1a1acf0ba88bba716705d58a349ef41"
        ],
        [
            "rewrite (cardinalO_empty X); auto with sets.",
            "VernacExtend",
            "6481b7858364ab83f513ba31bdfada382e49d19a"
        ],
        [
            "intro H'3; elim H'3.",
            "VernacExtend",
            "c0333f35d37b1f8936a8a8968deeaf3c227acbce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_soustr_1 : forall (X:Ensemble U) (n:nat), cardinal U X n -> forall x:U, In U X x -> cardinal U (Subtract U X x) (pred n).",
            "VernacStartTheoremProof",
            "d32dd909fe38488a9e1bc62c9666256eaca51d07"
        ],
        [
            "intros X n H'; elim H'.",
            "VernacExtend",
            "55022df7be77aee049ae85957dfe8538620a2c11"
        ],
        [
            "intros x H'0; elim H'0.",
            "VernacExtend",
            "801ba56784b1b1211a914a1c473c8096df085520"
        ],
        [
            "clear H' n X.",
            "VernacExtend",
            "88f5b0e36d6b3494743ec0af0405adacfa0b177a"
        ],
        [
            "intros X n H' H'0 x H'1 x0 H'2.",
            "VernacExtend",
            "7afb1d36ee2a077fbde42d74f17ba4c9e8adab5a"
        ],
        [
            "elim (classic (In U X x0)).",
            "VernacExtend",
            "ab79f403439e0d4ac0eea6309abaffc72670ea64"
        ],
        [
            "intro H'4; rewrite (add_soustr_xy U X x x0).",
            "VernacExtend",
            "d43f567ed383a3129abb31c2b7e6603c8c518275"
        ],
        [
            "elim (classic (x = x0)).",
            "VernacExtend",
            "b72b8f05980303847d93b98161957bf1b6d50730"
        ],
        [
            "intro H'5.",
            "VernacExtend",
            "666894be51237bd6295524f298f7c22d57718b2d"
        ],
        [
            "absurd (In U X x0); auto with sets.",
            "VernacExtend",
            "b786ab7447c76f5c4a3e43683e0c8afb8623c5a9"
        ],
        [
            "rewrite <- H'5; auto with sets.",
            "VernacExtend",
            "28f23fda25e8eac90c260d1528cb647bfb0dd257"
        ],
        [
            "intro H'3; try assumption.",
            "VernacExtend",
            "a7db59f438ecbf13a028d63ee9e76eedacb9de97"
        ],
        [
            "cut (S (pred n) = pred (S n)).",
            "VernacExtend",
            "d59f869326fbebf9add9d0833acb79f7d4790f49"
        ],
        [
            "intro H'5; rewrite <- H'5.",
            "VernacExtend",
            "9efbe509a1f7d70087963c9901b9a8dc457e2acc"
        ],
        [
            "apply card_add; auto with sets.",
            "VernacExtend",
            "3d88bf6b10ce5808d4a9d5a2da06fa10e7f06e07"
        ],
        [
            "red; intro H'6; elim H'6.",
            "VernacExtend",
            "1cfecf2d7e6a03a24497a0b079dad239256dcf1f"
        ],
        [
            "intros H'7 H'8; try assumption.",
            "VernacExtend",
            "addc71286fd543293abcbbe00f055a8c7639f753"
        ],
        [
            "elim H'1; auto with sets.",
            "VernacExtend",
            "b36790e9c57e796f03f1c54b44b8bd4a1be6e6e6"
        ],
        [
            "unfold pred at 2; symmetry .",
            "VernacExtend",
            "40a7f3b19cefa164f6363e492c575c2fcfa99f09"
        ],
        [
            "apply S_pred with (m := 0).",
            "VernacExtend",
            "bbe47ec91d379282bfcef6d6b9456de150470a73"
        ],
        [
            "change (n > 0).",
            "VernacExtend",
            "2d413b431b0b602fc56bd24df7d5128f37d004c3"
        ],
        [
            "apply inh_card_gt_O with (X := X); auto with sets.",
            "VernacExtend",
            "29611c7a372545bfc7a79f022177003bcf899db4"
        ],
        [
            "apply Inhabited_intro with (x := x0); auto with sets.",
            "VernacExtend",
            "b198ea4c9368c9f46ab8ba02f83ec0b78976aaa0"
        ],
        [
            "red; intro H'3.",
            "VernacExtend",
            "3d5eb80ad8fb8d6a02af0f8fd71c78828a14860f"
        ],
        [
            "apply H'1.",
            "VernacExtend",
            "2b7bd50c89c5f32cbcdbf60608d222a7ec656f24"
        ],
        [
            "elim H'3; auto with sets.",
            "VernacExtend",
            "1088e897fa78ef34eccf5c1c5e8c629ca8192165"
        ],
        [
            "rewrite H'3; auto with sets.",
            "VernacExtend",
            "713cc431721fc672652c03cce1ec22e9dffe473e"
        ],
        [
            "elim (classic (x = x0)).",
            "VernacExtend",
            "b72b8f05980303847d93b98161957bf1b6d50730"
        ],
        [
            "intro H'3; rewrite <- H'3.",
            "VernacExtend",
            "4fdd61fb4690ba5084e3a4a4d49582ec3755d815"
        ],
        [
            "cut (Subtract U (Add U X x) x = X); auto with sets.",
            "VernacExtend",
            "bacec73fa94ed5960316446564f06f41ea860927"
        ],
        [
            "intro H'4; rewrite H'4; auto with sets.",
            "VernacExtend",
            "cfe235361084194faca07a54052d38c28b469d46"
        ],
        [
            "intros H'3 H'4; try assumption.",
            "VernacExtend",
            "a6ba14b5176345b20beb8f22f52d0d1915e0abcd"
        ],
        [
            "absurd (In U (Add U X x) x0); auto with sets.",
            "VernacExtend",
            "8c885a7670e4e9321d8566224d695f5fb844dcdb"
        ],
        [
            "red; intro H'5; try exact H'5.",
            "VernacExtend",
            "d1fe54d45c112016f7a04cf73394d9b84f8b492e"
        ],
        [
            "lapply (Add_inv U X x x0); tauto.",
            "VernacExtend",
            "0c0cd76cb9c719c1571990a54b5278111ececf33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_is_functional : forall (X:Ensemble U) (c1:nat), cardinal U X c1 -> forall (Y:Ensemble U) (c2:nat), cardinal U Y c2 -> X = Y -> c1 = c2.",
            "VernacStartTheoremProof",
            "42f9de81791cdbdc92d4d6d57da0dc0dd031ad28"
        ],
        [
            "intros X c1 H'; elim H'.",
            "VernacExtend",
            "975934951c2f67b3fb7ff28e2c66c365ca3a30dc"
        ],
        [
            "intros Y c2 H'0; elim H'0; auto with sets.",
            "VernacExtend",
            "41c8000dc1570f542807f9b41a25867d42c2df01"
        ],
        [
            "intros A n H'1 H'2 x H'3 H'5.",
            "VernacExtend",
            "20bdab0ebfd070b858eb9254ee5a4285952d2757"
        ],
        [
            "elim (not_Empty_Add U A x); auto with sets.",
            "VernacExtend",
            "bf32cb1f8a1604cd2e2ca488ce95e06a199da810"
        ],
        [
            "clear H' c1 X.",
            "VernacExtend",
            "505cb7c5feeeec5cdb32a063eddb3c9b16e7f0ca"
        ],
        [
            "intros X n H' H'0 x H'1 Y c2 H'2.",
            "VernacExtend",
            "c6b97d632aa3d0a766b4cde5a897e0d7bd74cc64"
        ],
        [
            "elim H'2.",
            "VernacExtend",
            "843f6536389a5469f205c5fa0bb1d28140dd9955"
        ],
        [
            "intro H'3.",
            "VernacExtend",
            "7a52fe2aa5f8dbf5ccc908fd4ee206f9d824935d"
        ],
        [
            "elim (not_Empty_Add U X x); auto with sets.",
            "VernacExtend",
            "7d0ade182ad029202cdabb07e219d688aaf3f095"
        ],
        [
            "clear H'2 c2 Y.",
            "VernacExtend",
            "48c6de4d753932cf683aefa9b510f82c7d26b6a1"
        ],
        [
            "intros X0 c2 H'2 H'3 x0 H'4 H'5.",
            "VernacExtend",
            "44b0d24338573e140186da421bba801c5ecd3d32"
        ],
        [
            "elim (classic (In U X0 x)).",
            "VernacExtend",
            "224cdd6484529c59cd30e4cc76611597c6bfe573"
        ],
        [
            "intro H'6; apply f_equal.",
            "VernacExtend",
            "b39d449afc6ba18b45c12300a3e832d22b396a77"
        ],
        [
            "apply H'0 with (Y := Subtract U (Add U X0 x0) x).",
            "VernacExtend",
            "b982234c3be6186cb6f1b174b27dcaf3a856aa33"
        ],
        [
            "elimtype (pred (S c2) = c2); auto with sets.",
            "VernacExtend",
            "ebeec60ca947d6c1d5160823986b24a2bc99e212"
        ],
        [
            "apply card_soustr_1; auto with sets.",
            "VernacExtend",
            "def2c3b638fb675b2ce39cd492ab1e627144e092"
        ],
        [
            "rewrite <- H'5.",
            "VernacExtend",
            "84f3122cc17b69cb7da572abebae376ba1efdfbd"
        ],
        [
            "apply Sub_Add_new; auto with sets.",
            "VernacExtend",
            "b7af63e77c2b58ad2b85720950239310a8ad574f"
        ],
        [
            "elim (classic (x = x0)).",
            "VernacExtend",
            "b72b8f05980303847d93b98161957bf1b6d50730"
        ],
        [
            "intros H'6 H'7; apply f_equal.",
            "VernacExtend",
            "30826f41c0e92fa1de73d344ab78f3a70f2c929a"
        ],
        [
            "apply H'0 with (Y := X0); auto with sets.",
            "VernacExtend",
            "4c232220db550f74261a8ac18a27f133c22a9b96"
        ],
        [
            "apply Simplify_add with (x := x); auto with sets.",
            "VernacExtend",
            "57a77521ed013800a418232abf956e15df3cc212"
        ],
        [
            "pattern x at 2; rewrite H'6; auto with sets.",
            "VernacExtend",
            "67e1ca4dd33a8cc1f33e4287e371d5da9111f3dd"
        ],
        [
            "intros H'6 H'7.",
            "VernacExtend",
            "3426bcb1cbf0507a08df5a3939e811df081e98a3"
        ],
        [
            "absurd (Add U X x = Add U X0 x0); auto with sets.",
            "VernacExtend",
            "ec073f06f3e0bac1bb8a8b572b2f24af9e73e32d"
        ],
        [
            "clear H'0 H' H'3 n H'5 H'4 H'2 H'1 c2.",
            "VernacExtend",
            "374b3bef14a7a0e632b66acf108e6ea3607c0868"
        ],
        [
            "red; intro H'.",
            "VernacExtend",
            "d7b4310aa381cc10ee5052a5ad7beb20811c9bbb"
        ],
        [
            "lapply (Extension U (Add U X x) (Add U X0 x0)); auto with sets.",
            "VernacExtend",
            "d61776d569c386bf8c2a6643c360c39eb2186c6f"
        ],
        [
            "clear H'.",
            "VernacExtend",
            "053b39d0dfa861b2c59b449f4900580d7dff03b7"
        ],
        [
            "intro H'; red in H'.",
            "VernacExtend",
            "0f897e4b298cba4a4f9cc5bf5540bf8180f681c8"
        ],
        [
            "elim H'; intros H'0 H'1; red in H'0; clear H' H'1.",
            "VernacExtend",
            "a3f0218df5631261e794861bec882a920da8101f"
        ],
        [
            "absurd (In U (Add U X0 x0) x); auto with sets.",
            "VernacExtend",
            "90634bafc08544f16ef82bc8ea4b50803fe35340"
        ],
        [
            "lapply (Add_inv U X0 x0 x); [ intuition | apply (H'0 x); apply Add_intro2 ].",
            "VernacExtend",
            "797045829c913c958113e4cabff13764be24e2af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_Empty : forall m:nat, cardinal U (Empty_set U) m -> 0 = m.",
            "VernacStartTheoremProof",
            "3eb5c3cb66dab28fe3bb5f1fcdd017e4f8fabfae"
        ],
        [
            "intros m Cm; generalize (cardinal_invert U (Empty_set U) m Cm).",
            "VernacExtend",
            "339b918b362619654052e36f6d8a4a7c024e6870"
        ],
        [
            "elim m; auto with sets.",
            "VernacExtend",
            "227f560c6851fcef826f159aa30ef9a08c29d4ce"
        ],
        [
            "intros; elim H0; intros; elim H1; intros; elim H2; intros.",
            "VernacExtend",
            "c7f2362e5ab80203652cfa065b7e974bfa791b8e"
        ],
        [
            "elim (not_Empty_Add U x x0 H3).",
            "VernacExtend",
            "3e79542e5de6616cb46fdd5215b2c8d029ab25e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_unicity : forall (X:Ensemble U) (n:nat), cardinal U X n -> forall m:nat, cardinal U X m -> n = m.",
            "VernacStartTheoremProof",
            "12af2ea1aab20b6a357a1ad23fe59b738dfd6a60"
        ],
        [
            "intros; apply cardinal_is_functional with X X; auto with sets.",
            "VernacExtend",
            "9e228c9c94e65d1e18f6a36bb7cb7d1b0c843115"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma card_Add_gen : forall (A:Ensemble U) (x:U) (n n':nat), cardinal U A n -> cardinal U (Add U A x) n' -> n' <= S n.",
            "VernacStartTheoremProof",
            "1389c7255d819120edcb3fcca49a5d204de9e880"
        ],
        [
            "intros A x n n' H'.",
            "VernacExtend",
            "8276fa1a98bc0b803ce4aa165a47816d4d924603"
        ],
        [
            "elim (classic (In U A x)).",
            "VernacExtend",
            "35e3c5b81cf06921eb0eaba513c3dfbae0330c4e"
        ],
        [
            "intro H'0.",
            "VernacExtend",
            "f69826d1af10f173498d43a8d7949e3552d0301d"
        ],
        [
            "rewrite (Non_disjoint_union U A x H'0).",
            "VernacExtend",
            "b0832109869f3ab12d5b49aabd7b70757c637ae0"
        ],
        [
            "intro H'1; cut (n = n').",
            "VernacExtend",
            "8f4740fdf4584bad7f7baca5f803ecb7e38fd61f"
        ],
        [
            "intro E; rewrite E; auto with sets.",
            "VernacExtend",
            "3a278077045b8b4a62a87690d772f9cd96888f98"
        ],
        [
            "apply cardinal_unicity with A; auto with sets.",
            "VernacExtend",
            "c11aca601a836f60b044960a3c0d6c30524523db"
        ],
        [
            "intros H'0 H'1.",
            "VernacExtend",
            "35706d3de8fea2a1a8d10ba2e17f53206242f36b"
        ],
        [
            "cut (n' = S n).",
            "VernacExtend",
            "bfd32947a0cacb789f16e67e6c93bf4e8527d42b"
        ],
        [
            "intro E; rewrite E; auto with sets.",
            "VernacExtend",
            "3a278077045b8b4a62a87690d772f9cd96888f98"
        ],
        [
            "apply cardinal_unicity with (Add U A x); auto with sets.",
            "VernacExtend",
            "52b15f31f04bf82d92f76061c132ec463189c619"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incl_st_card_lt : forall (X:Ensemble U) (c1:nat), cardinal U X c1 -> forall (Y:Ensemble U) (c2:nat), cardinal U Y c2 -> Strict_Included U X Y -> c2 > c1.",
            "VernacStartTheoremProof",
            "2d12a8ecd730f25eb44e0dabc55f409519dc0f79"
        ],
        [
            "intros X c1 H'; elim H'.",
            "VernacExtend",
            "975934951c2f67b3fb7ff28e2c66c365ca3a30dc"
        ],
        [
            "intros Y c2 H'0; elim H'0; auto with sets arith.",
            "VernacExtend",
            "a4e8947f74f4d19449e4367e4f58de0dba3d8eb3"
        ],
        [
            "intro H'1.",
            "VernacExtend",
            "2d0e7b3ab5d8ef3cb27772f9e59cc20e3e039534"
        ],
        [
            "elim (Strict_Included_strict U (Empty_set U)); auto with sets arith.",
            "VernacExtend",
            "d8f17ad3f7f2b12ef4bc56a5eb1cf3feb7ba7499"
        ],
        [
            "clear H' c1 X.",
            "VernacExtend",
            "505cb7c5feeeec5cdb32a063eddb3c9b16e7f0ca"
        ],
        [
            "intros X n H' H'0 x H'1 Y c2 H'2.",
            "VernacExtend",
            "c6b97d632aa3d0a766b4cde5a897e0d7bd74cc64"
        ],
        [
            "elim H'2.",
            "VernacExtend",
            "843f6536389a5469f205c5fa0bb1d28140dd9955"
        ],
        [
            "intro H'3; elim (not_SIncl_empty U (Add U X x)); auto with sets arith.",
            "VernacExtend",
            "067a89c19214132b5f6a52dac77c84a464e2a800"
        ],
        [
            "clear H'2 c2 Y.",
            "VernacExtend",
            "48c6de4d753932cf683aefa9b510f82c7d26b6a1"
        ],
        [
            "intros X0 c2 H'2 H'3 x0 H'4 H'5; elim (classic (In U X0 x)).",
            "VernacExtend",
            "9776c974967c56f05b30ef639e971a99f48677cd"
        ],
        [
            "intro H'6; apply gt_n_S.",
            "VernacExtend",
            "7d4b00b69cf5d614541b1119258e29a1b18f5b8b"
        ],
        [
            "apply H'0 with (Y := Subtract U (Add U X0 x0) x).",
            "VernacExtend",
            "b982234c3be6186cb6f1b174b27dcaf3a856aa33"
        ],
        [
            "elimtype (pred (S c2) = c2); auto with sets arith.",
            "VernacExtend",
            "02ae501f5bf8d237c2a3ef17f26c17053e58bf16"
        ],
        [
            "apply card_soustr_1; auto with sets arith.",
            "VernacExtend",
            "c2ed2c7871d8953f57707a62fa91f492ccb7e0aa"
        ],
        [
            "apply incl_st_add_soustr; auto with sets arith.",
            "VernacExtend",
            "a4a885ec894e63e338d0d098a75ad29c9f5244b3"
        ],
        [
            "elim (classic (x = x0)).",
            "VernacExtend",
            "b72b8f05980303847d93b98161957bf1b6d50730"
        ],
        [
            "intros H'6 H'7; apply gt_n_S.",
            "VernacExtend",
            "c796db4586a986c4cd4dcacacc127f01178da8ce"
        ],
        [
            "apply H'0 with (Y := X0); auto with sets arith.",
            "VernacExtend",
            "c3292b3516e636f5d34ccbd37a294358bcaec0a9"
        ],
        [
            "apply sincl_add_x with (x := x0).",
            "VernacExtend",
            "3d838548b2778f08f4cdfe1789fe6d78cf076a58"
        ],
        [
            "rewrite <- H'6; auto with sets arith.",
            "VernacExtend",
            "a8714d19fd48d2603e999710926c126c32d5b601"
        ],
        [
            "pattern x0 at 1; rewrite <- H'6; trivial with sets arith.",
            "VernacExtend",
            "ad6abc3e0f86029de84e639d2ebb9f800bb3a6e7"
        ],
        [
            "intros H'6 H'7; red in H'5.",
            "VernacExtend",
            "9541d6b6eee4fbe0b4309a8dd950b2fca5db4eab"
        ],
        [
            "elim H'5; intros H'8 H'9; try exact H'8; clear H'5.",
            "VernacExtend",
            "c8c580338b98dda9d91051c2f6d0b945e6427567"
        ],
        [
            "red in H'8.",
            "VernacExtend",
            "ed355d305fc3ebbed6d84444c10a2c69179d9f19"
        ],
        [
            "generalize (H'8 x).",
            "VernacExtend",
            "359351707ff199af1df06a1087e364b34a55c930"
        ],
        [
            "intro H'5; lapply H'5; auto with sets arith.",
            "VernacExtend",
            "bcb2443357d8d6a92133c28867d8aa4189736cc9"
        ],
        [
            "intro H; elim Add_inv with U X0 x0 x; auto with sets arith.",
            "VernacExtend",
            "b38a22058e9fad5015fd7ece5277fb2ce3097b20"
        ],
        [
            "intro; absurd (In U X0 x); auto with sets arith.",
            "VernacExtend",
            "2e389cec4ef53f4f9ef009949f0a57201cccc3da"
        ],
        [
            "intro; absurd (x = x0); auto with sets arith.",
            "VernacExtend",
            "fd28345047769172566f589668ea26fb921d04df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma incl_card_le : forall (X Y:Ensemble U) (n m:nat), cardinal U X n -> cardinal U Y m -> Included U X Y -> n <= m.",
            "VernacStartTheoremProof",
            "2e4b4a6f7fb79da08d8ac4e673be81fd70a90613"
        ],
        [
            "intros; elim Included_Strict_Included with U X Y; auto with sets arith; intro.",
            "VernacExtend",
            "b0a58fc464f803cc5b7f3152af7c9a9b55170168"
        ],
        [
            "cut (m > n); auto with sets arith.",
            "VernacExtend",
            "2b6a1a27fa93b699af0e00046bbe4bb71ea02483"
        ],
        [
            "apply incl_st_card_lt with (X := X) (Y := Y); auto with sets arith.",
            "VernacExtend",
            "de7ecf6fa59b4d7700ebbd5f5642635f544bcf4e"
        ],
        [
            "generalize H0; rewrite <- H2; intro.",
            "VernacExtend",
            "8802d394830d4fdaec88f8cd6fd39e2dae2de86f"
        ],
        [
            "cut (n = m).",
            "VernacExtend",
            "ceefb1d8e047d8e0adaf8a86d76d0bc1bb0d21d8"
        ],
        [
            "intro E; rewrite E; auto with sets arith.",
            "VernacExtend",
            "7d3250b8d87074b8f1acb3de889ab3f6bee58a3f"
        ],
        [
            "apply cardinal_unicity with X; auto with sets arith.",
            "VernacExtend",
            "072ee67a947ab7d1fd6cfe03f3ab83487bbb03f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma G_aux : forall P:Ensemble U -> Prop, (forall X:Ensemble U, Finite U X -> (forall Y:Ensemble U, Strict_Included U Y X -> P Y) -> P X) -> P (Empty_set U).",
            "VernacStartTheoremProof",
            "1d68cc6d0380fd173cea1db972a822f1bdc5d8c6"
        ],
        [
            "intros P H'; try assumption.",
            "VernacExtend",
            "1077bbf96be377435a7371c427b14df9b7e2d10d"
        ],
        [
            "apply H'; auto with sets.",
            "VernacExtend",
            "6bba0cf77108e48efcbafad3a2d3d0e679c2cd35"
        ],
        [
            "clear H'; auto with sets.",
            "VernacExtend",
            "66be2c15e7b0ffbb051ba0b22d53bb6d814016e6"
        ],
        [
            "intros Y H'; try assumption.",
            "VernacExtend",
            "a0ed24bb5397a941637ac9036bc4f159c648a93d"
        ],
        [
            "red in H'.",
            "VernacExtend",
            "b3f39ff59e03e63f7335587cdc4b70d75813b637"
        ],
        [
            "elim H'; intros H'0 H'1; try exact H'1; clear H'.",
            "VernacExtend",
            "f3457e3ad18cb678f929f379185da1fd26a5caef"
        ],
        [
            "lapply (less_than_empty U Y); [ intro H'3; try exact H'3 | assumption ].",
            "VernacExtend",
            "7c9d62594e445b2cdf946e2edec71b64d2a726fb"
        ],
        [
            "elim H'1; auto with sets.",
            "VernacExtend",
            "b36790e9c57e796f03f1c54b44b8bd4a1be6e6e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Generalized_induction_on_finite_sets : forall P:Ensemble U -> Prop, (forall X:Ensemble U, Finite U X -> (forall Y:Ensemble U, Strict_Included U Y X -> P Y) -> P X) -> forall X:Ensemble U, Finite U X -> P X.",
            "VernacStartTheoremProof",
            "9fbd319dc5ace3316113ae57fc25b7532321bdec"
        ],
        [
            "intros P H'0 X H'1.",
            "VernacExtend",
            "321570ad77979b2ac1e3d9cfe969eb30a13a9999"
        ],
        [
            "generalize P H'0; clear H'0 P.",
            "VernacExtend",
            "832fb56af540c05ef4328f57acd0dfef0c97c0ae"
        ],
        [
            "elim H'1.",
            "VernacExtend",
            "adde82f993f35778617a2db796b0637a05aa745b"
        ],
        [
            "intros P H'0.",
            "VernacExtend",
            "f7019a44d6fa1ab1a263a9e7d121efc3a7416c1d"
        ],
        [
            "apply G_aux; auto with sets.",
            "VernacExtend",
            "ab2f59c82cf01cf951567da4c6de96650581d4eb"
        ],
        [
            "clear H'1 X.",
            "VernacExtend",
            "b73ea5474f0bb8ee602fee29b0dd846301e0bb28"
        ],
        [
            "intros A H' H'0 x H'1 P H'3.",
            "VernacExtend",
            "35e883b33a47b678a81fc197ffdde6543b486d39"
        ],
        [
            "cut (forall Y:Ensemble U, Included U Y (Add U A x) -> P Y); auto with sets.",
            "VernacExtend",
            "19b4e46023fe4db92bcc4a0dfbcec74ed3d2e41a"
        ],
        [
            "generalize H'1.",
            "VernacExtend",
            "5d66923bff7123ce6c8f7aa58b088d18d04c1f20"
        ],
        [
            "apply H'0.",
            "VernacExtend",
            "f1f7d253c59fe30c9977766a215126b9faf09097"
        ],
        [
            "intros X K H'5 L Y H'6; apply H'3; auto with sets.",
            "VernacExtend",
            "78a8ae380eec32fa7721643a19291f966b2eee27"
        ],
        [
            "apply Finite_downward_closed with (A := Add U X x); auto with sets.",
            "VernacExtend",
            "c2bd3611603369bd6c71c6cf54fc38359f3a1bfb"
        ],
        [
            "intros Y0 H'7.",
            "VernacExtend",
            "486b4ebdd8c61b5fa8454d9962cec2e55f1382bc"
        ],
        [
            "elim (Strict_inclusion_is_transitive_with_inclusion U Y0 Y (Add U X x)); auto with sets.",
            "VernacExtend",
            "afbb5727ad26fedd8da52ce42c0dda5cc09ec285"
        ],
        [
            "intros H'2 H'4.",
            "VernacExtend",
            "b41b14ccd49029281aa1c45e635c6bd3d896b147"
        ],
        [
            "elim (Included_Add U Y0 X x); [ intro H'14 | intro H'14; elim H'14; intros A' E; elim E; intros H'15 H'16; clear E H'14 | idtac ]; auto with sets.",
            "VernacExtend",
            "19a3d496b643530d8b68317bcdaf1fb95c6e5f23"
        ],
        [
            "elim (Included_Strict_Included U Y0 X); auto with sets.",
            "VernacExtend",
            "de4cb288d5659f807903bcd259af44a4da37f00f"
        ],
        [
            "intro H'9; apply H'5 with (Y := Y0); auto with sets.",
            "VernacExtend",
            "f27a10ad89cd410d39c6dbb1d29e7fc523d636aa"
        ],
        [
            "intro H'9; rewrite H'9.",
            "VernacExtend",
            "3ceb378fb212b56852fd7e73022cfa9da97cfe69"
        ],
        [
            "apply H'3; auto with sets.",
            "VernacExtend",
            "ee6e219ad57e6ae82336039514441b668950e7ca"
        ],
        [
            "intros Y1 H'8; elim H'8.",
            "VernacExtend",
            "bb9abcf9b06c5e7465dc3c07d43d6e3e158c5786"
        ],
        [
            "intros H'10 H'11; apply H'5 with (Y := Y1); auto with sets.",
            "VernacExtend",
            "3e29f3507b190ea65fff9ea2f91172fc68b4ab18"
        ],
        [
            "elim (Included_Strict_Included U A' X); auto with sets.",
            "VernacExtend",
            "e6fbb071cbeafeb946272e5ffd3e970a910bfb33"
        ],
        [
            "intro H'8; apply H'5 with (Y := A'); auto with sets.",
            "VernacExtend",
            "307e5a3aa2b3db5309fe380b3c3fada2fb2aea9d"
        ],
        [
            "rewrite <- H'15; auto with sets.",
            "VernacExtend",
            "1c8ae24a8edbdc049c891c6d5c030854282f7175"
        ],
        [
            "intro H'8.",
            "VernacExtend",
            "989414b58de416a20de69b66b948910388c71fda"
        ],
        [
            "elim H'7.",
            "VernacExtend",
            "6b5502b5765a653fb13470ed02c06973c15311c8"
        ],
        [
            "intros H'9 H'10; apply H'10 || elim H'10; try assumption.",
            "VernacExtend",
            "b745b779f809f5fcc6e452415ed43ca5cc9fb5e6"
        ],
        [
            "generalize H'6.",
            "VernacExtend",
            "823e8cd2e09959d8ac565ca3eea5fd6ca6a2735d"
        ],
        [
            "rewrite <- H'8.",
            "VernacExtend",
            "7451294d3b577094784c0c9e508a760676000f26"
        ],
        [
            "rewrite <- H'15; auto with sets.",
            "VernacExtend",
            "1c8ae24a8edbdc049c891c6d5c030854282f7175"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Finite_sets_facts.",
            "VernacEndSegment",
            "238309ba8a9544d474d8356e76acae6af50aa12e"
        ]
    ],
    "proofs": [
        {
            "name": "finite_cardinal",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "induction 1 as [| A _ [n H]].",
                        "VernacExtend",
                        "696812490780dbb61a1d506aae33e07fcdeb5bca"
                    ]
                },
                {
                    "command": [
                        "exists 0; auto with sets.",
                        "VernacExtend",
                        "d36e442b79b9e9041cafda807e441fae4782f75a"
                    ]
                },
                {
                    "command": [
                        "exists (S n); auto with sets.",
                        "VernacExtend",
                        "df6bcaac368709f927d0d485a804e68b1f0844ee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_finite",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "induction 1; auto with sets.",
                        "VernacExtend",
                        "c780a9708f98fb3c375564f69afa79c808430315"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Add_preserves_Finite",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros X x H'.",
                        "VernacExtend",
                        "49f3bb544be76218c078d6fef54bdf72219d3f17"
                    ]
                },
                {
                    "command": [
                        "elim (classic (In U X x)); intro H'0; auto with sets.",
                        "VernacExtend",
                        "f3a4f0eb61aa1ec798296733751c6a4ca2322656"
                    ]
                },
                {
                    "command": [
                        "rewrite (Non_disjoint_union U X x); auto with sets.",
                        "VernacExtend",
                        "e02232e0e00f818cbc2631981986eb697a383f4c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Singleton_is_finite",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intro x; rewrite <- (Empty_set_zero U (Singleton U x)).",
                        "VernacExtend",
                        "100c67a082e7842f1e200abd25d4358574e0e22c"
                    ]
                },
                {
                    "command": [
                        "change (Finite U (Add U (Empty_set U) x)); auto with sets.",
                        "VernacExtend",
                        "b441ccfeccacf7f536e25c61ff6796131c24faa0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Union_preserves_Finite",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros X Y H; induction H as [|A Fin_A Hind x].",
                        "VernacExtend",
                        "d2041b44a6c7adb207a2b81492b7c872fe574d79"
                    ]
                },
                {
                    "command": [
                        "rewrite (Empty_set_zero U Y).",
                        "VernacExtend",
                        "fb1ada790c2bae1e3d73239207cfaf78ab8da7bd"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (Union_commutative U (Add U A x) Y).",
                        "VernacExtend",
                        "4b22c118f160d01e778f7cbdd4c5770f0ba466f1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Union_add U Y A x).",
                        "VernacExtend",
                        "8841ea8bb0eca04ae7bffbf6b5d64f883605f1a0"
                    ]
                },
                {
                    "command": [
                        "rewrite (Union_commutative U Y A).",
                        "VernacExtend",
                        "2a235f4b994f8b2f1da08ecfbc45699dbcf10b16"
                    ]
                },
                {
                    "command": [
                        "apply Add_preserves_Finite.",
                        "VernacExtend",
                        "600820f0d2d139babfd3d1f73d3c72e8a7729176"
                    ]
                },
                {
                    "command": [
                        "apply Hind.",
                        "VernacExtend",
                        "61636ea4cd4848266d7fd895d2d8ee91453166e5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Finite_downward_closed",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros A H'; elim H'; auto with sets.",
                        "VernacExtend",
                        "cdcfe67f8bf81b69a5f81d7a2767dc07e29c5ce4"
                    ]
                },
                {
                    "command": [
                        "intros X H'0.",
                        "VernacExtend",
                        "9bf6d0d7e94a89bd65e09c2f5dd60a370bf98ea3"
                    ]
                },
                {
                    "command": [
                        "rewrite (less_than_empty U X H'0); auto with sets.",
                        "VernacExtend",
                        "9bd8a57a63d2fc26feea28b8fb0816d2111073c3"
                    ]
                },
                {
                    "command": [
                        "intros; elim Included_Add with U X A0 x; auto with sets.",
                        "VernacExtend",
                        "21db11e3a04e7014315eec019a502f0fc7a4c329"
                    ]
                },
                {
                    "command": [
                        "destruct 1 as [A' [H5 H6]].",
                        "VernacExtend",
                        "e84da727aadd5f266f769f17e5e81d018a801110"
                    ]
                },
                {
                    "command": [
                        "rewrite H5; auto with sets.",
                        "VernacExtend",
                        "4aefd94fce35586f4e9d4abdb68e811e1cf8d7cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Intersection_preserves_finite",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros A H' X; apply Finite_downward_closed with A; auto with sets.",
                        "VernacExtend",
                        "f28ed97f7c035945055bfe6d002ce2f74add76e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinalO_empty",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros X H; apply (cardinal_invert U X 0); trivial with sets.",
                        "VernacExtend",
                        "e72f238dd31e0e556ff29c83d2889aef0226e030"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inh_card_gt_O",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "induction 1 as [x H'].",
                        "VernacExtend",
                        "9389ae8e9db3f164d1ac629ef92e2d8f5855efb2"
                    ]
                },
                {
                    "command": [
                        "intros n H'0.",
                        "VernacExtend",
                        "1cb824af66a4a40a6e20cd53bc1b668819d37869"
                    ]
                },
                {
                    "command": [
                        "elim (gt_O_eq n); auto with sets.",
                        "VernacExtend",
                        "cf95fd27f771f804a14d43ab2be91265a17ef474"
                    ]
                },
                {
                    "command": [
                        "intro H'1; generalize H'; generalize H'0.",
                        "VernacExtend",
                        "129506de8e5fde65efeba6880831e88aa70dc98f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'1; intro H'2.",
                        "VernacExtend",
                        "b4dbf14bf1a1acf0ba88bba716705d58a349ef41"
                    ]
                },
                {
                    "command": [
                        "rewrite (cardinalO_empty X); auto with sets.",
                        "VernacExtend",
                        "6481b7858364ab83f513ba31bdfada382e49d19a"
                    ]
                },
                {
                    "command": [
                        "intro H'3; elim H'3.",
                        "VernacExtend",
                        "c0333f35d37b1f8936a8a8968deeaf3c227acbce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_soustr_1",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros X n H'; elim H'.",
                        "VernacExtend",
                        "55022df7be77aee049ae85957dfe8538620a2c11"
                    ]
                },
                {
                    "command": [
                        "intros x H'0; elim H'0.",
                        "VernacExtend",
                        "801ba56784b1b1211a914a1c473c8096df085520"
                    ]
                },
                {
                    "command": [
                        "clear H' n X.",
                        "VernacExtend",
                        "88f5b0e36d6b3494743ec0af0405adacfa0b177a"
                    ]
                },
                {
                    "command": [
                        "intros X n H' H'0 x H'1 x0 H'2.",
                        "VernacExtend",
                        "7afb1d36ee2a077fbde42d74f17ba4c9e8adab5a"
                    ]
                },
                {
                    "command": [
                        "elim (classic (In U X x0)).",
                        "VernacExtend",
                        "ab79f403439e0d4ac0eea6309abaffc72670ea64"
                    ]
                },
                {
                    "command": [
                        "intro H'4; rewrite (add_soustr_xy U X x x0).",
                        "VernacExtend",
                        "d43f567ed383a3129abb31c2b7e6603c8c518275"
                    ]
                },
                {
                    "command": [
                        "elim (classic (x = x0)).",
                        "VernacExtend",
                        "b72b8f05980303847d93b98161957bf1b6d50730"
                    ]
                },
                {
                    "command": [
                        "intro H'5.",
                        "VernacExtend",
                        "666894be51237bd6295524f298f7c22d57718b2d"
                    ]
                },
                {
                    "command": [
                        "absurd (In U X x0); auto with sets.",
                        "VernacExtend",
                        "b786ab7447c76f5c4a3e43683e0c8afb8623c5a9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'5; auto with sets.",
                        "VernacExtend",
                        "28f23fda25e8eac90c260d1528cb647bfb0dd257"
                    ]
                },
                {
                    "command": [
                        "intro H'3; try assumption.",
                        "VernacExtend",
                        "a7db59f438ecbf13a028d63ee9e76eedacb9de97"
                    ]
                },
                {
                    "command": [
                        "cut (S (pred n) = pred (S n)).",
                        "VernacExtend",
                        "d59f869326fbebf9add9d0833acb79f7d4790f49"
                    ]
                },
                {
                    "command": [
                        "intro H'5; rewrite <- H'5.",
                        "VernacExtend",
                        "9efbe509a1f7d70087963c9901b9a8dc457e2acc"
                    ]
                },
                {
                    "command": [
                        "apply card_add; auto with sets.",
                        "VernacExtend",
                        "3d88bf6b10ce5808d4a9d5a2da06fa10e7f06e07"
                    ]
                },
                {
                    "command": [
                        "red; intro H'6; elim H'6.",
                        "VernacExtend",
                        "1cfecf2d7e6a03a24497a0b079dad239256dcf1f"
                    ]
                },
                {
                    "command": [
                        "intros H'7 H'8; try assumption.",
                        "VernacExtend",
                        "addc71286fd543293abcbbe00f055a8c7639f753"
                    ]
                },
                {
                    "command": [
                        "elim H'1; auto with sets.",
                        "VernacExtend",
                        "b36790e9c57e796f03f1c54b44b8bd4a1be6e6e6"
                    ]
                },
                {
                    "command": [
                        "unfold pred at 2; symmetry .",
                        "VernacExtend",
                        "40a7f3b19cefa164f6363e492c575c2fcfa99f09"
                    ]
                },
                {
                    "command": [
                        "apply S_pred with (m := 0).",
                        "VernacExtend",
                        "bbe47ec91d379282bfcef6d6b9456de150470a73"
                    ]
                },
                {
                    "command": [
                        "change (n > 0).",
                        "VernacExtend",
                        "2d413b431b0b602fc56bd24df7d5128f37d004c3"
                    ]
                },
                {
                    "command": [
                        "apply inh_card_gt_O with (X := X); auto with sets.",
                        "VernacExtend",
                        "29611c7a372545bfc7a79f022177003bcf899db4"
                    ]
                },
                {
                    "command": [
                        "apply Inhabited_intro with (x := x0); auto with sets.",
                        "VernacExtend",
                        "b198ea4c9368c9f46ab8ba02f83ec0b78976aaa0"
                    ]
                },
                {
                    "command": [
                        "red; intro H'3.",
                        "VernacExtend",
                        "3d5eb80ad8fb8d6a02af0f8fd71c78828a14860f"
                    ]
                },
                {
                    "command": [
                        "apply H'1.",
                        "VernacExtend",
                        "2b7bd50c89c5f32cbcdbf60608d222a7ec656f24"
                    ]
                },
                {
                    "command": [
                        "elim H'3; auto with sets.",
                        "VernacExtend",
                        "1088e897fa78ef34eccf5c1c5e8c629ca8192165"
                    ]
                },
                {
                    "command": [
                        "rewrite H'3; auto with sets.",
                        "VernacExtend",
                        "713cc431721fc672652c03cce1ec22e9dffe473e"
                    ]
                },
                {
                    "command": [
                        "elim (classic (x = x0)).",
                        "VernacExtend",
                        "b72b8f05980303847d93b98161957bf1b6d50730"
                    ]
                },
                {
                    "command": [
                        "intro H'3; rewrite <- H'3.",
                        "VernacExtend",
                        "4fdd61fb4690ba5084e3a4a4d49582ec3755d815"
                    ]
                },
                {
                    "command": [
                        "cut (Subtract U (Add U X x) x = X); auto with sets.",
                        "VernacExtend",
                        "bacec73fa94ed5960316446564f06f41ea860927"
                    ]
                },
                {
                    "command": [
                        "intro H'4; rewrite H'4; auto with sets.",
                        "VernacExtend",
                        "cfe235361084194faca07a54052d38c28b469d46"
                    ]
                },
                {
                    "command": [
                        "intros H'3 H'4; try assumption.",
                        "VernacExtend",
                        "a6ba14b5176345b20beb8f22f52d0d1915e0abcd"
                    ]
                },
                {
                    "command": [
                        "absurd (In U (Add U X x) x0); auto with sets.",
                        "VernacExtend",
                        "8c885a7670e4e9321d8566224d695f5fb844dcdb"
                    ]
                },
                {
                    "command": [
                        "red; intro H'5; try exact H'5.",
                        "VernacExtend",
                        "d1fe54d45c112016f7a04cf73394d9b84f8b492e"
                    ]
                },
                {
                    "command": [
                        "lapply (Add_inv U X x x0); tauto.",
                        "VernacExtend",
                        "0c0cd76cb9c719c1571990a54b5278111ececf33"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_is_functional",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "intros X c1 H'; elim H'.",
                        "VernacExtend",
                        "975934951c2f67b3fb7ff28e2c66c365ca3a30dc"
                    ]
                },
                {
                    "command": [
                        "intros Y c2 H'0; elim H'0; auto with sets.",
                        "VernacExtend",
                        "41c8000dc1570f542807f9b41a25867d42c2df01"
                    ]
                },
                {
                    "command": [
                        "intros A n H'1 H'2 x H'3 H'5.",
                        "VernacExtend",
                        "20bdab0ebfd070b858eb9254ee5a4285952d2757"
                    ]
                },
                {
                    "command": [
                        "elim (not_Empty_Add U A x); auto with sets.",
                        "VernacExtend",
                        "bf32cb1f8a1604cd2e2ca488ce95e06a199da810"
                    ]
                },
                {
                    "command": [
                        "clear H' c1 X.",
                        "VernacExtend",
                        "505cb7c5feeeec5cdb32a063eddb3c9b16e7f0ca"
                    ]
                },
                {
                    "command": [
                        "intros X n H' H'0 x H'1 Y c2 H'2.",
                        "VernacExtend",
                        "c6b97d632aa3d0a766b4cde5a897e0d7bd74cc64"
                    ]
                },
                {
                    "command": [
                        "elim H'2.",
                        "VernacExtend",
                        "843f6536389a5469f205c5fa0bb1d28140dd9955"
                    ]
                },
                {
                    "command": [
                        "intro H'3.",
                        "VernacExtend",
                        "7a52fe2aa5f8dbf5ccc908fd4ee206f9d824935d"
                    ]
                },
                {
                    "command": [
                        "elim (not_Empty_Add U X x); auto with sets.",
                        "VernacExtend",
                        "7d0ade182ad029202cdabb07e219d688aaf3f095"
                    ]
                },
                {
                    "command": [
                        "clear H'2 c2 Y.",
                        "VernacExtend",
                        "48c6de4d753932cf683aefa9b510f82c7d26b6a1"
                    ]
                },
                {
                    "command": [
                        "intros X0 c2 H'2 H'3 x0 H'4 H'5.",
                        "VernacExtend",
                        "44b0d24338573e140186da421bba801c5ecd3d32"
                    ]
                },
                {
                    "command": [
                        "elim (classic (In U X0 x)).",
                        "VernacExtend",
                        "224cdd6484529c59cd30e4cc76611597c6bfe573"
                    ]
                },
                {
                    "command": [
                        "intro H'6; apply f_equal.",
                        "VernacExtend",
                        "b39d449afc6ba18b45c12300a3e832d22b396a77"
                    ]
                },
                {
                    "command": [
                        "apply H'0 with (Y := Subtract U (Add U X0 x0) x).",
                        "VernacExtend",
                        "b982234c3be6186cb6f1b174b27dcaf3a856aa33"
                    ]
                },
                {
                    "command": [
                        "elimtype (pred (S c2) = c2); auto with sets.",
                        "VernacExtend",
                        "ebeec60ca947d6c1d5160823986b24a2bc99e212"
                    ]
                },
                {
                    "command": [
                        "apply card_soustr_1; auto with sets.",
                        "VernacExtend",
                        "def2c3b638fb675b2ce39cd492ab1e627144e092"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'5.",
                        "VernacExtend",
                        "84f3122cc17b69cb7da572abebae376ba1efdfbd"
                    ]
                },
                {
                    "command": [
                        "apply Sub_Add_new; auto with sets.",
                        "VernacExtend",
                        "b7af63e77c2b58ad2b85720950239310a8ad574f"
                    ]
                },
                {
                    "command": [
                        "elim (classic (x = x0)).",
                        "VernacExtend",
                        "b72b8f05980303847d93b98161957bf1b6d50730"
                    ]
                },
                {
                    "command": [
                        "intros H'6 H'7; apply f_equal.",
                        "VernacExtend",
                        "30826f41c0e92fa1de73d344ab78f3a70f2c929a"
                    ]
                },
                {
                    "command": [
                        "apply H'0 with (Y := X0); auto with sets.",
                        "VernacExtend",
                        "4c232220db550f74261a8ac18a27f133c22a9b96"
                    ]
                },
                {
                    "command": [
                        "apply Simplify_add with (x := x); auto with sets.",
                        "VernacExtend",
                        "57a77521ed013800a418232abf956e15df3cc212"
                    ]
                },
                {
                    "command": [
                        "pattern x at 2; rewrite H'6; auto with sets.",
                        "VernacExtend",
                        "67e1ca4dd33a8cc1f33e4287e371d5da9111f3dd"
                    ]
                },
                {
                    "command": [
                        "intros H'6 H'7.",
                        "VernacExtend",
                        "3426bcb1cbf0507a08df5a3939e811df081e98a3"
                    ]
                },
                {
                    "command": [
                        "absurd (Add U X x = Add U X0 x0); auto with sets.",
                        "VernacExtend",
                        "ec073f06f3e0bac1bb8a8b572b2f24af9e73e32d"
                    ]
                },
                {
                    "command": [
                        "clear H'0 H' H'3 n H'5 H'4 H'2 H'1 c2.",
                        "VernacExtend",
                        "374b3bef14a7a0e632b66acf108e6ea3607c0868"
                    ]
                },
                {
                    "command": [
                        "red; intro H'.",
                        "VernacExtend",
                        "d7b4310aa381cc10ee5052a5ad7beb20811c9bbb"
                    ]
                },
                {
                    "command": [
                        "lapply (Extension U (Add U X x) (Add U X0 x0)); auto with sets.",
                        "VernacExtend",
                        "d61776d569c386bf8c2a6643c360c39eb2186c6f"
                    ]
                },
                {
                    "command": [
                        "clear H'.",
                        "VernacExtend",
                        "053b39d0dfa861b2c59b449f4900580d7dff03b7"
                    ]
                },
                {
                    "command": [
                        "intro H'; red in H'.",
                        "VernacExtend",
                        "0f897e4b298cba4a4f9cc5bf5540bf8180f681c8"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros H'0 H'1; red in H'0; clear H' H'1.",
                        "VernacExtend",
                        "a3f0218df5631261e794861bec882a920da8101f"
                    ]
                },
                {
                    "command": [
                        "absurd (In U (Add U X0 x0) x); auto with sets.",
                        "VernacExtend",
                        "90634bafc08544f16ef82bc8ea4b50803fe35340"
                    ]
                },
                {
                    "command": [
                        "lapply (Add_inv U X0 x0 x); [ intuition | apply (H'0 x); apply Add_intro2 ].",
                        "VernacExtend",
                        "797045829c913c958113e4cabff13764be24e2af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_Empty",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "intros m Cm; generalize (cardinal_invert U (Empty_set U) m Cm).",
                        "VernacExtend",
                        "339b918b362619654052e36f6d8a4a7c024e6870"
                    ]
                },
                {
                    "command": [
                        "elim m; auto with sets.",
                        "VernacExtend",
                        "227f560c6851fcef826f159aa30ef9a08c29d4ce"
                    ]
                },
                {
                    "command": [
                        "intros; elim H0; intros; elim H1; intros; elim H2; intros.",
                        "VernacExtend",
                        "c7f2362e5ab80203652cfa065b7e974bfa791b8e"
                    ]
                },
                {
                    "command": [
                        "elim (not_Empty_Add U x x0 H3).",
                        "VernacExtend",
                        "3e79542e5de6616cb46fdd5215b2c8d029ab25e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_unicity",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "intros; apply cardinal_is_functional with X X; auto with sets.",
                        "VernacExtend",
                        "9e228c9c94e65d1e18f6a36bb7cb7d1b0c843115"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "card_Add_gen",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "intros A x n n' H'.",
                        "VernacExtend",
                        "8276fa1a98bc0b803ce4aa165a47816d4d924603"
                    ]
                },
                {
                    "command": [
                        "elim (classic (In U A x)).",
                        "VernacExtend",
                        "35e3c5b81cf06921eb0eaba513c3dfbae0330c4e"
                    ]
                },
                {
                    "command": [
                        "intro H'0.",
                        "VernacExtend",
                        "f69826d1af10f173498d43a8d7949e3552d0301d"
                    ]
                },
                {
                    "command": [
                        "rewrite (Non_disjoint_union U A x H'0).",
                        "VernacExtend",
                        "b0832109869f3ab12d5b49aabd7b70757c637ae0"
                    ]
                },
                {
                    "command": [
                        "intro H'1; cut (n = n').",
                        "VernacExtend",
                        "8f4740fdf4584bad7f7baca5f803ecb7e38fd61f"
                    ]
                },
                {
                    "command": [
                        "intro E; rewrite E; auto with sets.",
                        "VernacExtend",
                        "3a278077045b8b4a62a87690d772f9cd96888f98"
                    ]
                },
                {
                    "command": [
                        "apply cardinal_unicity with A; auto with sets.",
                        "VernacExtend",
                        "c11aca601a836f60b044960a3c0d6c30524523db"
                    ]
                },
                {
                    "command": [
                        "intros H'0 H'1.",
                        "VernacExtend",
                        "35706d3de8fea2a1a8d10ba2e17f53206242f36b"
                    ]
                },
                {
                    "command": [
                        "cut (n' = S n).",
                        "VernacExtend",
                        "bfd32947a0cacb789f16e67e6c93bf4e8527d42b"
                    ]
                },
                {
                    "command": [
                        "intro E; rewrite E; auto with sets.",
                        "VernacExtend",
                        "3a278077045b8b4a62a87690d772f9cd96888f98"
                    ]
                },
                {
                    "command": [
                        "apply cardinal_unicity with (Add U A x); auto with sets.",
                        "VernacExtend",
                        "52b15f31f04bf82d92f76061c132ec463189c619"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incl_st_card_lt",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "intros X c1 H'; elim H'.",
                        "VernacExtend",
                        "975934951c2f67b3fb7ff28e2c66c365ca3a30dc"
                    ]
                },
                {
                    "command": [
                        "intros Y c2 H'0; elim H'0; auto with sets arith.",
                        "VernacExtend",
                        "a4e8947f74f4d19449e4367e4f58de0dba3d8eb3"
                    ]
                },
                {
                    "command": [
                        "intro H'1.",
                        "VernacExtend",
                        "2d0e7b3ab5d8ef3cb27772f9e59cc20e3e039534"
                    ]
                },
                {
                    "command": [
                        "elim (Strict_Included_strict U (Empty_set U)); auto with sets arith.",
                        "VernacExtend",
                        "d8f17ad3f7f2b12ef4bc56a5eb1cf3feb7ba7499"
                    ]
                },
                {
                    "command": [
                        "clear H' c1 X.",
                        "VernacExtend",
                        "505cb7c5feeeec5cdb32a063eddb3c9b16e7f0ca"
                    ]
                },
                {
                    "command": [
                        "intros X n H' H'0 x H'1 Y c2 H'2.",
                        "VernacExtend",
                        "c6b97d632aa3d0a766b4cde5a897e0d7bd74cc64"
                    ]
                },
                {
                    "command": [
                        "elim H'2.",
                        "VernacExtend",
                        "843f6536389a5469f205c5fa0bb1d28140dd9955"
                    ]
                },
                {
                    "command": [
                        "intro H'3; elim (not_SIncl_empty U (Add U X x)); auto with sets arith.",
                        "VernacExtend",
                        "067a89c19214132b5f6a52dac77c84a464e2a800"
                    ]
                },
                {
                    "command": [
                        "clear H'2 c2 Y.",
                        "VernacExtend",
                        "48c6de4d753932cf683aefa9b510f82c7d26b6a1"
                    ]
                },
                {
                    "command": [
                        "intros X0 c2 H'2 H'3 x0 H'4 H'5; elim (classic (In U X0 x)).",
                        "VernacExtend",
                        "9776c974967c56f05b30ef639e971a99f48677cd"
                    ]
                },
                {
                    "command": [
                        "intro H'6; apply gt_n_S.",
                        "VernacExtend",
                        "7d4b00b69cf5d614541b1119258e29a1b18f5b8b"
                    ]
                },
                {
                    "command": [
                        "apply H'0 with (Y := Subtract U (Add U X0 x0) x).",
                        "VernacExtend",
                        "b982234c3be6186cb6f1b174b27dcaf3a856aa33"
                    ]
                },
                {
                    "command": [
                        "elimtype (pred (S c2) = c2); auto with sets arith.",
                        "VernacExtend",
                        "02ae501f5bf8d237c2a3ef17f26c17053e58bf16"
                    ]
                },
                {
                    "command": [
                        "apply card_soustr_1; auto with sets arith.",
                        "VernacExtend",
                        "c2ed2c7871d8953f57707a62fa91f492ccb7e0aa"
                    ]
                },
                {
                    "command": [
                        "apply incl_st_add_soustr; auto with sets arith.",
                        "VernacExtend",
                        "a4a885ec894e63e338d0d098a75ad29c9f5244b3"
                    ]
                },
                {
                    "command": [
                        "elim (classic (x = x0)).",
                        "VernacExtend",
                        "b72b8f05980303847d93b98161957bf1b6d50730"
                    ]
                },
                {
                    "command": [
                        "intros H'6 H'7; apply gt_n_S.",
                        "VernacExtend",
                        "c796db4586a986c4cd4dcacacc127f01178da8ce"
                    ]
                },
                {
                    "command": [
                        "apply H'0 with (Y := X0); auto with sets arith.",
                        "VernacExtend",
                        "c3292b3516e636f5d34ccbd37a294358bcaec0a9"
                    ]
                },
                {
                    "command": [
                        "apply sincl_add_x with (x := x0).",
                        "VernacExtend",
                        "3d838548b2778f08f4cdfe1789fe6d78cf076a58"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'6; auto with sets arith.",
                        "VernacExtend",
                        "a8714d19fd48d2603e999710926c126c32d5b601"
                    ]
                },
                {
                    "command": [
                        "pattern x0 at 1; rewrite <- H'6; trivial with sets arith.",
                        "VernacExtend",
                        "ad6abc3e0f86029de84e639d2ebb9f800bb3a6e7"
                    ]
                },
                {
                    "command": [
                        "intros H'6 H'7; red in H'5.",
                        "VernacExtend",
                        "9541d6b6eee4fbe0b4309a8dd950b2fca5db4eab"
                    ]
                },
                {
                    "command": [
                        "elim H'5; intros H'8 H'9; try exact H'8; clear H'5.",
                        "VernacExtend",
                        "c8c580338b98dda9d91051c2f6d0b945e6427567"
                    ]
                },
                {
                    "command": [
                        "red in H'8.",
                        "VernacExtend",
                        "ed355d305fc3ebbed6d84444c10a2c69179d9f19"
                    ]
                },
                {
                    "command": [
                        "generalize (H'8 x).",
                        "VernacExtend",
                        "359351707ff199af1df06a1087e364b34a55c930"
                    ]
                },
                {
                    "command": [
                        "intro H'5; lapply H'5; auto with sets arith.",
                        "VernacExtend",
                        "bcb2443357d8d6a92133c28867d8aa4189736cc9"
                    ]
                },
                {
                    "command": [
                        "intro H; elim Add_inv with U X0 x0 x; auto with sets arith.",
                        "VernacExtend",
                        "b38a22058e9fad5015fd7ece5277fb2ce3097b20"
                    ]
                },
                {
                    "command": [
                        "intro; absurd (In U X0 x); auto with sets arith.",
                        "VernacExtend",
                        "2e389cec4ef53f4f9ef009949f0a57201cccc3da"
                    ]
                },
                {
                    "command": [
                        "intro; absurd (x = x0); auto with sets arith.",
                        "VernacExtend",
                        "fd28345047769172566f589668ea26fb921d04df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "incl_card_le",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "intros; elim Included_Strict_Included with U X Y; auto with sets arith; intro.",
                        "VernacExtend",
                        "b0a58fc464f803cc5b7f3152af7c9a9b55170168"
                    ]
                },
                {
                    "command": [
                        "cut (m > n); auto with sets arith.",
                        "VernacExtend",
                        "2b6a1a27fa93b699af0e00046bbe4bb71ea02483"
                    ]
                },
                {
                    "command": [
                        "apply incl_st_card_lt with (X := X) (Y := Y); auto with sets arith.",
                        "VernacExtend",
                        "de7ecf6fa59b4d7700ebbd5f5642635f544bcf4e"
                    ]
                },
                {
                    "command": [
                        "generalize H0; rewrite <- H2; intro.",
                        "VernacExtend",
                        "8802d394830d4fdaec88f8cd6fd39e2dae2de86f"
                    ]
                },
                {
                    "command": [
                        "cut (n = m).",
                        "VernacExtend",
                        "ceefb1d8e047d8e0adaf8a86d76d0bc1bb0d21d8"
                    ]
                },
                {
                    "command": [
                        "intro E; rewrite E; auto with sets arith.",
                        "VernacExtend",
                        "7d3250b8d87074b8f1acb3de889ab3f6bee58a3f"
                    ]
                },
                {
                    "command": [
                        "apply cardinal_unicity with X; auto with sets arith.",
                        "VernacExtend",
                        "072ee67a947ab7d1fd6cfe03f3ab83487bbb03f8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "G_aux",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "intros P H'; try assumption.",
                        "VernacExtend",
                        "1077bbf96be377435a7371c427b14df9b7e2d10d"
                    ]
                },
                {
                    "command": [
                        "apply H'; auto with sets.",
                        "VernacExtend",
                        "6bba0cf77108e48efcbafad3a2d3d0e679c2cd35"
                    ]
                },
                {
                    "command": [
                        "clear H'; auto with sets.",
                        "VernacExtend",
                        "66be2c15e7b0ffbb051ba0b22d53bb6d814016e6"
                    ]
                },
                {
                    "command": [
                        "intros Y H'; try assumption.",
                        "VernacExtend",
                        "a0ed24bb5397a941637ac9036bc4f159c648a93d"
                    ]
                },
                {
                    "command": [
                        "red in H'.",
                        "VernacExtend",
                        "b3f39ff59e03e63f7335587cdc4b70d75813b637"
                    ]
                },
                {
                    "command": [
                        "elim H'; intros H'0 H'1; try exact H'1; clear H'.",
                        "VernacExtend",
                        "f3457e3ad18cb678f929f379185da1fd26a5caef"
                    ]
                },
                {
                    "command": [
                        "lapply (less_than_empty U Y); [ intro H'3; try exact H'3 | assumption ].",
                        "VernacExtend",
                        "7c9d62594e445b2cdf946e2edec71b64d2a726fb"
                    ]
                },
                {
                    "command": [
                        "elim H'1; auto with sets.",
                        "VernacExtend",
                        "b36790e9c57e796f03f1c54b44b8bd4a1be6e6e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Generalized_induction_on_finite_sets",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "intros P H'0 X H'1.",
                        "VernacExtend",
                        "321570ad77979b2ac1e3d9cfe969eb30a13a9999"
                    ]
                },
                {
                    "command": [
                        "generalize P H'0; clear H'0 P.",
                        "VernacExtend",
                        "832fb56af540c05ef4328f57acd0dfef0c97c0ae"
                    ]
                },
                {
                    "command": [
                        "elim H'1.",
                        "VernacExtend",
                        "adde82f993f35778617a2db796b0637a05aa745b"
                    ]
                },
                {
                    "command": [
                        "intros P H'0.",
                        "VernacExtend",
                        "f7019a44d6fa1ab1a263a9e7d121efc3a7416c1d"
                    ]
                },
                {
                    "command": [
                        "apply G_aux; auto with sets.",
                        "VernacExtend",
                        "ab2f59c82cf01cf951567da4c6de96650581d4eb"
                    ]
                },
                {
                    "command": [
                        "clear H'1 X.",
                        "VernacExtend",
                        "b73ea5474f0bb8ee602fee29b0dd846301e0bb28"
                    ]
                },
                {
                    "command": [
                        "intros A H' H'0 x H'1 P H'3.",
                        "VernacExtend",
                        "35e883b33a47b678a81fc197ffdde6543b486d39"
                    ]
                },
                {
                    "command": [
                        "cut (forall Y:Ensemble U, Included U Y (Add U A x) -> P Y); auto with sets.",
                        "VernacExtend",
                        "19b4e46023fe4db92bcc4a0dfbcec74ed3d2e41a"
                    ]
                },
                {
                    "command": [
                        "generalize H'1.",
                        "VernacExtend",
                        "5d66923bff7123ce6c8f7aa58b088d18d04c1f20"
                    ]
                },
                {
                    "command": [
                        "apply H'0.",
                        "VernacExtend",
                        "f1f7d253c59fe30c9977766a215126b9faf09097"
                    ]
                },
                {
                    "command": [
                        "intros X K H'5 L Y H'6; apply H'3; auto with sets.",
                        "VernacExtend",
                        "78a8ae380eec32fa7721643a19291f966b2eee27"
                    ]
                },
                {
                    "command": [
                        "apply Finite_downward_closed with (A := Add U X x); auto with sets.",
                        "VernacExtend",
                        "c2bd3611603369bd6c71c6cf54fc38359f3a1bfb"
                    ]
                },
                {
                    "command": [
                        "intros Y0 H'7.",
                        "VernacExtend",
                        "486b4ebdd8c61b5fa8454d9962cec2e55f1382bc"
                    ]
                },
                {
                    "command": [
                        "elim (Strict_inclusion_is_transitive_with_inclusion U Y0 Y (Add U X x)); auto with sets.",
                        "VernacExtend",
                        "afbb5727ad26fedd8da52ce42c0dda5cc09ec285"
                    ]
                },
                {
                    "command": [
                        "intros H'2 H'4.",
                        "VernacExtend",
                        "b41b14ccd49029281aa1c45e635c6bd3d896b147"
                    ]
                },
                {
                    "command": [
                        "elim (Included_Add U Y0 X x); [ intro H'14 | intro H'14; elim H'14; intros A' E; elim E; intros H'15 H'16; clear E H'14 | idtac ]; auto with sets.",
                        "VernacExtend",
                        "19a3d496b643530d8b68317bcdaf1fb95c6e5f23"
                    ]
                },
                {
                    "command": [
                        "elim (Included_Strict_Included U Y0 X); auto with sets.",
                        "VernacExtend",
                        "de4cb288d5659f807903bcd259af44a4da37f00f"
                    ]
                },
                {
                    "command": [
                        "intro H'9; apply H'5 with (Y := Y0); auto with sets.",
                        "VernacExtend",
                        "f27a10ad89cd410d39c6dbb1d29e7fc523d636aa"
                    ]
                },
                {
                    "command": [
                        "intro H'9; rewrite H'9.",
                        "VernacExtend",
                        "3ceb378fb212b56852fd7e73022cfa9da97cfe69"
                    ]
                },
                {
                    "command": [
                        "apply H'3; auto with sets.",
                        "VernacExtend",
                        "ee6e219ad57e6ae82336039514441b668950e7ca"
                    ]
                },
                {
                    "command": [
                        "intros Y1 H'8; elim H'8.",
                        "VernacExtend",
                        "bb9abcf9b06c5e7465dc3c07d43d6e3e158c5786"
                    ]
                },
                {
                    "command": [
                        "intros H'10 H'11; apply H'5 with (Y := Y1); auto with sets.",
                        "VernacExtend",
                        "3e29f3507b190ea65fff9ea2f91172fc68b4ab18"
                    ]
                },
                {
                    "command": [
                        "elim (Included_Strict_Included U A' X); auto with sets.",
                        "VernacExtend",
                        "e6fbb071cbeafeb946272e5ffd3e970a910bfb33"
                    ]
                },
                {
                    "command": [
                        "intro H'8; apply H'5 with (Y := A'); auto with sets.",
                        "VernacExtend",
                        "307e5a3aa2b3db5309fe380b3c3fada2fb2aea9d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'15; auto with sets.",
                        "VernacExtend",
                        "1c8ae24a8edbdc049c891c6d5c030854282f7175"
                    ]
                },
                {
                    "command": [
                        "intro H'8.",
                        "VernacExtend",
                        "989414b58de416a20de69b66b948910388c71fda"
                    ]
                },
                {
                    "command": [
                        "elim H'7.",
                        "VernacExtend",
                        "6b5502b5765a653fb13470ed02c06973c15311c8"
                    ]
                },
                {
                    "command": [
                        "intros H'9 H'10; apply H'10 || elim H'10; try assumption.",
                        "VernacExtend",
                        "b745b779f809f5fcc6e452415ed43ca5cc9fb5e6"
                    ]
                },
                {
                    "command": [
                        "generalize H'6.",
                        "VernacExtend",
                        "823e8cd2e09959d8ac565ca3eea5fd6ca6a2735d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'8.",
                        "VernacExtend",
                        "7451294d3b577094784c0c9e508a760676000f26"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H'15; auto with sets.",
                        "VernacExtend",
                        "1c8ae24a8edbdc049c891c6d5c030854282f7175"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}