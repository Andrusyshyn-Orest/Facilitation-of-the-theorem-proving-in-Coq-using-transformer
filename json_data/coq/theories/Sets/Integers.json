{
    "filename": "theories/Sets/Integers.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export Finite_sets.",
            "VernacRequire",
            "d8d6dffeb7f48ddf43613f5cf9081e0a08c8e4a9"
        ],
        [
            "Require Export Constructive_sets.",
            "VernacRequire",
            "1ab62e257413a8f4f55081d9a0217597d3378008"
        ],
        [
            "Require Export Classical.",
            "VernacRequire",
            "931639e04b7f4b817db4e158c9ff078a0a2025f4"
        ],
        [
            "Require Export Classical_sets.",
            "VernacRequire",
            "1fca917462e7d178d643bee043d06f12c733de74"
        ],
        [
            "Require Export Powerset.",
            "VernacRequire",
            "4fb4eb435f26c14af8fe29e2df323d898a6fd29a"
        ],
        [
            "Require Export Powerset_facts.",
            "VernacRequire",
            "c29c40d605abd2bf3e7bb2446860c20e47a33999"
        ],
        [
            "Require Export Powerset_Classical_facts.",
            "VernacRequire",
            "f1c1cbe240cf78b92f2ff2e1d3c34da0447c3b2b"
        ],
        [
            "Require Export Gt.",
            "VernacRequire",
            "30dc2c794df1101af4118a677f84c17e3db84d83"
        ],
        [
            "Require Export Lt.",
            "VernacRequire",
            "e903e9dc8ccc3536651c288b58378704da8db963"
        ],
        [
            "Require Export Le.",
            "VernacRequire",
            "441193f947c6f223b50f2cfcd76775e875e10790"
        ],
        [
            "Require Export Finite_sets_facts.",
            "VernacRequire",
            "6d6a0747489e0881225bbe7368bb865830283d61"
        ],
        [
            "Require Export Image.",
            "VernacRequire",
            "b46876ca633def59064e90059d265292b3980304"
        ],
        [
            "Require Export Infinite_sets.",
            "VernacRequire",
            "1d0bf9e28cae702a7f6fc4dac628b33705b1a8b4"
        ],
        [
            "Require Export Compare_dec.",
            "VernacRequire",
            "07740b4f9d7a269077d4962024b3c9137fa46a8d"
        ],
        [
            "Require Export Relations_1.",
            "VernacRequire",
            "0a235b67d46a5e07126344dcec7eaaebb80561a3"
        ],
        [
            "Require Export Partial_Order.",
            "VernacRequire",
            "620b892546e66787e1555b23d5ebbc6bcc2bdfdb"
        ],
        [
            "Require Export Cpo.",
            "VernacRequire",
            "e823b210d5495dae61934de781846c5f91f0ad94"
        ],
        [
            "Section Integers_sect.",
            "VernacBeginSection",
            "0b17afadde219b59b0e80d611a75191d6f17d22f"
        ],
        [
            "Inductive Integers : Ensemble nat := Integers_defn : forall x:nat, In nat Integers x.",
            "VernacInductive",
            "dc4cf4b021fb36d558998f9aff1dad5fc5b77669"
        ],
        [
            "Lemma le_reflexive : Reflexive nat le.",
            "VernacStartTheoremProof",
            "de3307e3783326f9db05249eb546f85492b51826"
        ],
        [
            "red; auto with arith.",
            "VernacExtend",
            "b6148c3128bd5a05c0c06f7c904a35d91e2ea214"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_antisym : Antisymmetric nat le.",
            "VernacStartTheoremProof",
            "775f9ec863cbc8119f8783d3cb85cc87cc8ada04"
        ],
        [
            "red; intros x y H H'; rewrite (le_antisym x y); auto.",
            "VernacExtend",
            "20317e5a811570833106aa93f1d877d9b81e994d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_trans : Transitive nat le.",
            "VernacStartTheoremProof",
            "c2a5d0463afc07596ca26990b6c131ff9ae69d6a"
        ],
        [
            "red; intros; apply le_trans with y; auto.",
            "VernacExtend",
            "9e1e13c26acb271c5ee502e184e00adc891796b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_Order : Order nat le.",
            "VernacStartTheoremProof",
            "c62be09047c4e1a92a59b860644186270ea5e00d"
        ],
        [
            "split; [exact le_reflexive | exact le_trans | exact le_antisym].",
            "VernacExtend",
            "6b46200a27cc9e175d22aade4d84686414762951"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma triv_nat : forall n:nat, In nat Integers n.",
            "VernacStartTheoremProof",
            "7a6c4e6973d11b8f149582bbb2a813a772b8858e"
        ],
        [
            "exact Integers_defn.",
            "VernacExtend",
            "ad8e8437d6bdd8c8b7b9939a92b478c459f47fb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition nat_po : PO nat.",
            "VernacDefinition",
            "63220e9e483d3757a84a1a7508945da4e1fd0a4f"
        ],
        [
            "apply Definition_of_PO with (Carrier_of := Integers) (Rel_of := le); auto with sets arith.",
            "VernacExtend",
            "e10d6bdca3a5938b3d29e90083e9e7e4b0245373"
        ],
        [
            "apply Inhabited_intro with (x := 0).",
            "VernacExtend",
            "3a55a1103a50ed0f1f95af66ff7940b7979613b1"
        ],
        [
            "apply Integers_defn.",
            "VernacExtend",
            "8aac8cd0c2d7b9868e573963a2e2006d28bf1530"
        ],
        [
            "exact le_Order.",
            "VernacExtend",
            "298ad97054cba183b90f54681e8cec9226c14a91"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma le_total_order : Totally_ordered nat nat_po Integers.",
            "VernacStartTheoremProof",
            "84137737a9a8ea5568b8a1e3fdfcd9f449d8cad7"
        ],
        [
            "apply Totally_ordered_definition.",
            "VernacExtend",
            "7d2af2789a7aee0d7ab40279d2edf224f0f9a5e9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros H' x y H'0.",
            "VernacExtend",
            "a71201fa588ff7473d4173ef34f9f5d23e2bcb6e"
        ],
        [
            "elim le_or_lt with (n := x) (m := y).",
            "VernacExtend",
            "f0de111c9b214b9be4beb920f0f4050e566e5c06"
        ],
        [
            "intro H'1; left; auto with sets arith.",
            "VernacExtend",
            "441f18acfd3a65637c48a105b1c4926cac56908d"
        ],
        [
            "intro H'1; right.",
            "VernacExtend",
            "672341b646e3e829b011b7ee0b0530d4bb9eea6b"
        ],
        [
            "cut (y <= x); auto with sets arith.",
            "VernacExtend",
            "fddb5c49b6b8d042dee15f586d75ae36c5e30db9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Finite_subset_has_lub : forall X:Ensemble nat, Finite nat X -> exists m : nat, Upper_Bound nat nat_po X m.",
            "VernacStartTheoremProof",
            "c6c5bbcd8dd98044c92b46e0e4dddc5f354e98bf"
        ],
        [
            "intros X H'; elim H'.",
            "VernacExtend",
            "6bf53d9cb263699242b4d3a7fddacdbf5fb32e61"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "apply Upper_Bound_definition.",
            "VernacExtend",
            "4080551c5531117d6af046b96d6abf019e49b7a7"
        ],
        [
            "unfold nat_po.",
            "VernacExtend",
            "13abe43fd6427ac7af4215b484f88da1c2c0091e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply triv_nat.",
            "VernacExtend",
            "d5a69943b202279162623e29e6cdd5a872d5bb85"
        ],
        [
            "intros y H'0; elim H'0; auto with sets arith.",
            "VernacExtend",
            "b58667db9abf545c578b0ccee65a1bfdf12f0410"
        ],
        [
            "intros A H'0 H'1 x H'2; try assumption.",
            "VernacExtend",
            "7be60ad7aac1ced25acc1de36baeda4898de0b53"
        ],
        [
            "elim H'1; intros x0 H'3; clear H'1.",
            "VernacExtend",
            "def8c1596a012dae41b4a3c2cc8d3e890aab3f9a"
        ],
        [
            "elim le_total_order.",
            "VernacExtend",
            "bf3076138b975d3ebc8182b9bf6da1f0e545d37e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intro H'1; try assumption.",
            "VernacExtend",
            "eb42ce71203d052f18d36e0a005185a014cf4e05"
        ],
        [
            "lapply H'1; [ intro H'4; idtac | try assumption ]; auto with sets arith.",
            "VernacExtend",
            "a26efa323e55ee1f5c39cc8314630f31b70df1c0"
        ],
        [
            "generalize (H'4 x0 x).",
            "VernacExtend",
            "ea244a52d36438c5c6ede8e515dae9ac3b60555e"
        ],
        [
            "clear H'4.",
            "VernacExtend",
            "438a3aed9c118899d040b942cc0e621a740b01f1"
        ],
        [
            "clear H'1.",
            "VernacExtend",
            "fa6db17ea680156e30374dd6ed2ac96a5a234447"
        ],
        [
            "intro H'1; lapply H'1; [ intro H'4; elim H'4; [ intro H'5; try exact H'5; clear H'4 H'1 | intro H'5; clear H'4 H'1 ] | clear H'1 ].",
            "VernacExtend",
            "cf07846af9cff9c95b1d88f00caf4a86c4620a9d"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "apply Upper_Bound_definition.",
            "VernacExtend",
            "4080551c5531117d6af046b96d6abf019e49b7a7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply triv_nat.",
            "VernacExtend",
            "d5a69943b202279162623e29e6cdd5a872d5bb85"
        ],
        [
            "intros y H'1; elim H'1.",
            "VernacExtend",
            "02be2f950a660c5daa088fd66a1991ba7d310913"
        ],
        [
            "generalize le_trans.",
            "VernacExtend",
            "709245a40ef56d78b5e293a7b8d04801f4afa0e2"
        ],
        [
            "intro H'4; red in H'4.",
            "VernacExtend",
            "b581e8c67c739d104449446c551728681d78ed40"
        ],
        [
            "intros x1 H'6; try assumption.",
            "VernacExtend",
            "51d3bc1e93dfe91095283c7dab38d21666260b7a"
        ],
        [
            "apply H'4 with (y := x0).",
            "VernacExtend",
            "15ce3d86ce1d2550f6ee9353c486bd9a54bf652c"
        ],
        [
            "elim H'3; simpl; auto with sets arith.",
            "VernacExtend",
            "011a02bf040e2de88c36cad5cb411322f8578f63"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros x1 H'4; elim H'4.",
            "VernacExtend",
            "6caad9055b64dbef453a0e531790e78fc40b3d43"
        ],
        [
            "unfold nat_po; simpl; trivial.",
            "VernacExtend",
            "3cf9ab0e6a7192e0e442593189f8af7a95f7641b"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "apply Upper_Bound_definition.",
            "VernacExtend",
            "4080551c5531117d6af046b96d6abf019e49b7a7"
        ],
        [
            "unfold nat_po.",
            "VernacExtend",
            "13abe43fd6427ac7af4215b484f88da1c2c0091e"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply triv_nat.",
            "VernacExtend",
            "d5a69943b202279162623e29e6cdd5a872d5bb85"
        ],
        [
            "intros y H'1; elim H'1.",
            "VernacExtend",
            "02be2f950a660c5daa088fd66a1991ba7d310913"
        ],
        [
            "intros x1 H'4; try assumption.",
            "VernacExtend",
            "743ceef047c8098d91fbb1e5dacd28430687a479"
        ],
        [
            "elim H'3; simpl; auto with sets arith.",
            "VernacExtend",
            "011a02bf040e2de88c36cad5cb411322f8578f63"
        ],
        [
            "intros x1 H'4; elim H'4; auto with sets arith.",
            "VernacExtend",
            "701c85d46c084d3471116c69a407319739457130"
        ],
        [
            "red.",
            "VernacExtend",
            "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
        ],
        [
            "intros x1 H'1; elim H'1; apply triv_nat.",
            "VernacExtend",
            "1fdc84766c3f43b91ced88f840da1683cc380288"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Integers_has_no_ub : ~ (exists m : nat, Upper_Bound nat nat_po Integers m).",
            "VernacStartTheoremProof",
            "400ebb13a60c1bc6e27e58673343c2f1b92e5f08"
        ],
        [
            "red; intro H'; elim H'.",
            "VernacExtend",
            "3f32ff15eb86734e88e21947fd541d41909cebde"
        ],
        [
            "intros x H'0.",
            "VernacExtend",
            "e0fa2426b28413682676d18f3b761c8af158dd4e"
        ],
        [
            "elim H'0; intros H'1 H'2.",
            "VernacExtend",
            "ffdee4294b67ea6c1bfb1ba8f7a6e02aaab070a2"
        ],
        [
            "cut (In nat Integers (S x)).",
            "VernacExtend",
            "09b73fd9336fb61bb243b57cb4603eb5fe72c192"
        ],
        [
            "intro H'3.",
            "VernacExtend",
            "7a52fe2aa5f8dbf5ccc908fd4ee206f9d824935d"
        ],
        [
            "specialize H'2 with (y := S x); lapply H'2; [ intro H'5; clear H'2 | try assumption; clear H'2 ].",
            "VernacExtend",
            "4eab19a6e4e40840c8fa8b3eee93ba20fabf90bf"
        ],
        [
            "simpl in H'5.",
            "VernacExtend",
            "f97cbf2089e544d31dd13391c32d183b0d54178f"
        ],
        [
            "absurd (S x <= x); auto with arith.",
            "VernacExtend",
            "ca3c8ec590a04d0fe57bbfd60c3a34b3ee33588b"
        ],
        [
            "apply triv_nat.",
            "VernacExtend",
            "d5a69943b202279162623e29e6cdd5a872d5bb85"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Integers_infinite : ~ Finite nat Integers.",
            "VernacStartTheoremProof",
            "09684ee1eb4f29cbf29908d3e5d31af9e387319e"
        ],
        [
            "generalize Integers_has_no_ub.",
            "VernacExtend",
            "3e7f44c3a1063cade10f75efef3df9434a1fadb6"
        ],
        [
            "intro H'; red; intro H'0; try exact H'0.",
            "VernacExtend",
            "4dfa8ad0350fe6066560ae811f8cae7a85aaa585"
        ],
        [
            "apply H'.",
            "VernacExtend",
            "b9f7b1afd5784d2a6d1eac6189a3bdc5f0119ad0"
        ],
        [
            "apply Finite_subset_has_lub; auto with sets arith.",
            "VernacExtend",
            "30d0cfbb882ea7c5c57ce70487bc888e3cabd5af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Integers_sect.",
            "VernacEndSegment",
            "1312e2f95afd15de2be12fcfbd01bfbdef208353"
        ]
    ],
    "proofs": [
        {
            "name": "le_reflexive",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "red; auto with arith.",
                        "VernacExtend",
                        "b6148c3128bd5a05c0c06f7c904a35d91e2ea214"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_antisym",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "red; intros x y H H'; rewrite (le_antisym x y); auto.",
                        "VernacExtend",
                        "20317e5a811570833106aa93f1d877d9b81e994d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_trans",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "red; intros; apply le_trans with y; auto.",
                        "VernacExtend",
                        "9e1e13c26acb271c5ee502e184e00adc891796b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_Order",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "split; [exact le_reflexive | exact le_trans | exact le_antisym].",
                        "VernacExtend",
                        "6b46200a27cc9e175d22aade4d84686414762951"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "triv_nat",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "exact Integers_defn.",
                        "VernacExtend",
                        "ad8e8437d6bdd8c8b7b9939a92b478c459f47fb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat_po",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "apply Definition_of_PO with (Carrier_of := Integers) (Rel_of := le); auto with sets arith.",
                        "VernacExtend",
                        "e10d6bdca3a5938b3d29e90083e9e7e4b0245373"
                    ]
                },
                {
                    "command": [
                        "apply Inhabited_intro with (x := 0).",
                        "VernacExtend",
                        "3a55a1103a50ed0f1f95af66ff7940b7979613b1"
                    ]
                },
                {
                    "command": [
                        "apply Integers_defn.",
                        "VernacExtend",
                        "8aac8cd0c2d7b9868e573963a2e2006d28bf1530"
                    ]
                },
                {
                    "command": [
                        "exact le_Order.",
                        "VernacExtend",
                        "298ad97054cba183b90f54681e8cec9226c14a91"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "le_total_order",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "apply Totally_ordered_definition.",
                        "VernacExtend",
                        "7d2af2789a7aee0d7ab40279d2edf224f0f9a5e9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros H' x y H'0.",
                        "VernacExtend",
                        "a71201fa588ff7473d4173ef34f9f5d23e2bcb6e"
                    ]
                },
                {
                    "command": [
                        "elim le_or_lt with (n := x) (m := y).",
                        "VernacExtend",
                        "f0de111c9b214b9be4beb920f0f4050e566e5c06"
                    ]
                },
                {
                    "command": [
                        "intro H'1; left; auto with sets arith.",
                        "VernacExtend",
                        "441f18acfd3a65637c48a105b1c4926cac56908d"
                    ]
                },
                {
                    "command": [
                        "intro H'1; right.",
                        "VernacExtend",
                        "672341b646e3e829b011b7ee0b0530d4bb9eea6b"
                    ]
                },
                {
                    "command": [
                        "cut (y <= x); auto with sets arith.",
                        "VernacExtend",
                        "fddb5c49b6b8d042dee15f586d75ae36c5e30db9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Finite_subset_has_lub",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros X H'; elim H'.",
                        "VernacExtend",
                        "6bf53d9cb263699242b4d3a7fddacdbf5fb32e61"
                    ]
                },
                {
                    "command": [
                        "exists 0.",
                        "VernacExtend",
                        "b12b8acd7a1526ef0683513a127984e4864502d9"
                    ]
                },
                {
                    "command": [
                        "apply Upper_Bound_definition.",
                        "VernacExtend",
                        "4080551c5531117d6af046b96d6abf019e49b7a7"
                    ]
                },
                {
                    "command": [
                        "unfold nat_po.",
                        "VernacExtend",
                        "13abe43fd6427ac7af4215b484f88da1c2c0091e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply triv_nat.",
                        "VernacExtend",
                        "d5a69943b202279162623e29e6cdd5a872d5bb85"
                    ]
                },
                {
                    "command": [
                        "intros y H'0; elim H'0; auto with sets arith.",
                        "VernacExtend",
                        "b58667db9abf545c578b0ccee65a1bfdf12f0410"
                    ]
                },
                {
                    "command": [
                        "intros A H'0 H'1 x H'2; try assumption.",
                        "VernacExtend",
                        "7be60ad7aac1ced25acc1de36baeda4898de0b53"
                    ]
                },
                {
                    "command": [
                        "elim H'1; intros x0 H'3; clear H'1.",
                        "VernacExtend",
                        "def8c1596a012dae41b4a3c2cc8d3e890aab3f9a"
                    ]
                },
                {
                    "command": [
                        "elim le_total_order.",
                        "VernacExtend",
                        "bf3076138b975d3ebc8182b9bf6da1f0e545d37e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intro H'1; try assumption.",
                        "VernacExtend",
                        "eb42ce71203d052f18d36e0a005185a014cf4e05"
                    ]
                },
                {
                    "command": [
                        "lapply H'1; [ intro H'4; idtac | try assumption ]; auto with sets arith.",
                        "VernacExtend",
                        "a26efa323e55ee1f5c39cc8314630f31b70df1c0"
                    ]
                },
                {
                    "command": [
                        "generalize (H'4 x0 x).",
                        "VernacExtend",
                        "ea244a52d36438c5c6ede8e515dae9ac3b60555e"
                    ]
                },
                {
                    "command": [
                        "clear H'4.",
                        "VernacExtend",
                        "438a3aed9c118899d040b942cc0e621a740b01f1"
                    ]
                },
                {
                    "command": [
                        "clear H'1.",
                        "VernacExtend",
                        "fa6db17ea680156e30374dd6ed2ac96a5a234447"
                    ]
                },
                {
                    "command": [
                        "intro H'1; lapply H'1; [ intro H'4; elim H'4; [ intro H'5; try exact H'5; clear H'4 H'1 | intro H'5; clear H'4 H'1 ] | clear H'1 ].",
                        "VernacExtend",
                        "cf07846af9cff9c95b1d88f00caf4a86c4620a9d"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "apply Upper_Bound_definition.",
                        "VernacExtend",
                        "4080551c5531117d6af046b96d6abf019e49b7a7"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply triv_nat.",
                        "VernacExtend",
                        "d5a69943b202279162623e29e6cdd5a872d5bb85"
                    ]
                },
                {
                    "command": [
                        "intros y H'1; elim H'1.",
                        "VernacExtend",
                        "02be2f950a660c5daa088fd66a1991ba7d310913"
                    ]
                },
                {
                    "command": [
                        "generalize le_trans.",
                        "VernacExtend",
                        "709245a40ef56d78b5e293a7b8d04801f4afa0e2"
                    ]
                },
                {
                    "command": [
                        "intro H'4; red in H'4.",
                        "VernacExtend",
                        "b581e8c67c739d104449446c551728681d78ed40"
                    ]
                },
                {
                    "command": [
                        "intros x1 H'6; try assumption.",
                        "VernacExtend",
                        "51d3bc1e93dfe91095283c7dab38d21666260b7a"
                    ]
                },
                {
                    "command": [
                        "apply H'4 with (y := x0).",
                        "VernacExtend",
                        "15ce3d86ce1d2550f6ee9353c486bd9a54bf652c"
                    ]
                },
                {
                    "command": [
                        "elim H'3; simpl; auto with sets arith.",
                        "VernacExtend",
                        "011a02bf040e2de88c36cad5cb411322f8578f63"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros x1 H'4; elim H'4.",
                        "VernacExtend",
                        "6caad9055b64dbef453a0e531790e78fc40b3d43"
                    ]
                },
                {
                    "command": [
                        "unfold nat_po; simpl; trivial.",
                        "VernacExtend",
                        "3cf9ab0e6a7192e0e442593189f8af7a95f7641b"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "apply Upper_Bound_definition.",
                        "VernacExtend",
                        "4080551c5531117d6af046b96d6abf019e49b7a7"
                    ]
                },
                {
                    "command": [
                        "unfold nat_po.",
                        "VernacExtend",
                        "13abe43fd6427ac7af4215b484f88da1c2c0091e"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply triv_nat.",
                        "VernacExtend",
                        "d5a69943b202279162623e29e6cdd5a872d5bb85"
                    ]
                },
                {
                    "command": [
                        "intros y H'1; elim H'1.",
                        "VernacExtend",
                        "02be2f950a660c5daa088fd66a1991ba7d310913"
                    ]
                },
                {
                    "command": [
                        "intros x1 H'4; try assumption.",
                        "VernacExtend",
                        "743ceef047c8098d91fbb1e5dacd28430687a479"
                    ]
                },
                {
                    "command": [
                        "elim H'3; simpl; auto with sets arith.",
                        "VernacExtend",
                        "011a02bf040e2de88c36cad5cb411322f8578f63"
                    ]
                },
                {
                    "command": [
                        "intros x1 H'4; elim H'4; auto with sets arith.",
                        "VernacExtend",
                        "701c85d46c084d3471116c69a407319739457130"
                    ]
                },
                {
                    "command": [
                        "red.",
                        "VernacExtend",
                        "95a3fb9e13ce19fdc8e335912fb83e57a9512b14"
                    ]
                },
                {
                    "command": [
                        "intros x1 H'1; elim H'1; apply triv_nat.",
                        "VernacExtend",
                        "1fdc84766c3f43b91ced88f840da1683cc380288"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Integers_has_no_ub",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "red; intro H'; elim H'.",
                        "VernacExtend",
                        "3f32ff15eb86734e88e21947fd541d41909cebde"
                    ]
                },
                {
                    "command": [
                        "intros x H'0.",
                        "VernacExtend",
                        "e0fa2426b28413682676d18f3b761c8af158dd4e"
                    ]
                },
                {
                    "command": [
                        "elim H'0; intros H'1 H'2.",
                        "VernacExtend",
                        "ffdee4294b67ea6c1bfb1ba8f7a6e02aaab070a2"
                    ]
                },
                {
                    "command": [
                        "cut (In nat Integers (S x)).",
                        "VernacExtend",
                        "09b73fd9336fb61bb243b57cb4603eb5fe72c192"
                    ]
                },
                {
                    "command": [
                        "intro H'3.",
                        "VernacExtend",
                        "7a52fe2aa5f8dbf5ccc908fd4ee206f9d824935d"
                    ]
                },
                {
                    "command": [
                        "specialize H'2 with (y := S x); lapply H'2; [ intro H'5; clear H'2 | try assumption; clear H'2 ].",
                        "VernacExtend",
                        "4eab19a6e4e40840c8fa8b3eee93ba20fabf90bf"
                    ]
                },
                {
                    "command": [
                        "simpl in H'5.",
                        "VernacExtend",
                        "f97cbf2089e544d31dd13391c32d183b0d54178f"
                    ]
                },
                {
                    "command": [
                        "absurd (S x <= x); auto with arith.",
                        "VernacExtend",
                        "ca3c8ec590a04d0fe57bbfd60c3a34b3ee33588b"
                    ]
                },
                {
                    "command": [
                        "apply triv_nat.",
                        "VernacExtend",
                        "d5a69943b202279162623e29e6cdd5a872d5bb85"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Integers_infinite",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "generalize Integers_has_no_ub.",
                        "VernacExtend",
                        "3e7f44c3a1063cade10f75efef3df9434a1fadb6"
                    ]
                },
                {
                    "command": [
                        "intro H'; red; intro H'0; try exact H'0.",
                        "VernacExtend",
                        "4dfa8ad0350fe6066560ae811f8cae7a85aaa585"
                    ]
                },
                {
                    "command": [
                        "apply H'.",
                        "VernacExtend",
                        "b9f7b1afd5784d2a6d1eac6189a3bdc5f0119ad0"
                    ]
                },
                {
                    "command": [
                        "apply Finite_subset_has_lub; auto with sets arith.",
                        "VernacExtend",
                        "30d0cfbb882ea7c5c57ce70487bc888e3cabd5af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}