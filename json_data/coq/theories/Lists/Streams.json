{
    "filename": "theories/Lists/Streams.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Section Streams.",
            "VernacBeginSection",
            "f35fdfac9a71a124da8d3fe8e09f7534f8788893"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "CoInductive Stream : Type := Cons : A -> Stream -> Stream.",
            "VernacInductive",
            "80efc8b5ed295e5b6be1dae92f9d240f21595e92"
        ],
        [
            "Definition hd (x:Stream) := match x with | Cons a _ => a end.",
            "VernacDefinition",
            "6cf8132dae763b459a812255f7412f38530f9025"
        ],
        [
            "Definition tl (x:Stream) := match x with | Cons _ s => s end.",
            "VernacDefinition",
            "87dbfc1467166251a9735cbaba3e469d0583dd81"
        ],
        [
            "Fixpoint Str_nth_tl (n:nat) (s:Stream) : Stream := match n with | O => s | S m => Str_nth_tl m (tl s) end.",
            "VernacFixpoint",
            "05746be525f1eba58f3ed488047c1dc97a5ad84c"
        ],
        [
            "Definition Str_nth (n:nat) (s:Stream) : A := hd (Str_nth_tl n s).",
            "VernacDefinition",
            "d8281fd40526dd05854900233e15c7fee7817fb1"
        ],
        [
            "Lemma unfold_Stream : forall x:Stream, x = match x with | Cons a s => Cons a s end.",
            "VernacStartTheoremProof",
            "23d160d700c5eef8fe1c9982299373c72064a7ff"
        ],
        [
            "intro x.",
            "VernacExtend",
            "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
        ],
        [
            "case x.",
            "VernacExtend",
            "ff73d135d2805abb527daeb7acd470185a7b2435"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tl_nth_tl : forall (n:nat) (s:Stream), tl (Str_nth_tl n s) = Str_nth_tl n (tl s).",
            "VernacStartTheoremProof",
            "8c810449a45827c245346d17ddfc5a403725f6ba"
        ],
        [
            "simple induction n; simpl; auto.",
            "VernacExtend",
            "7aa32e5c5d106f2146e90df6c18f4e9e786206f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve tl_nth_tl: datatypes.",
            "VernacHints",
            "d1244d8caa67f86eb6d261d75787a1b13010c61e"
        ],
        [
            "Lemma Str_nth_tl_plus : forall (n m:nat) (s:Stream), Str_nth_tl n (Str_nth_tl m s) = Str_nth_tl (n + m) s.",
            "VernacStartTheoremProof",
            "18d97623a6f9826585e52436d3b87626f4b5b1da"
        ],
        [
            "simple induction n; simpl; intros; auto with datatypes.",
            "VernacExtend",
            "aa50b47a80a13a7179546cb2fd11853ae88da7ef"
        ],
        [
            "rewrite <- H.",
            "VernacExtend",
            "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
        ],
        [
            "rewrite tl_nth_tl; trivial with datatypes.",
            "VernacExtend",
            "0bbb5746113aedde57721ee75e5b1d1257f1fc66"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Str_nth_plus : forall (n m:nat) (s:Stream), Str_nth n (Str_nth_tl m s) = Str_nth (n + m) s.",
            "VernacStartTheoremProof",
            "05d5799fb5806281077295f6970891d80b147079"
        ],
        [
            "intros; unfold Str_nth; rewrite Str_nth_tl_plus; trivial with datatypes.",
            "VernacExtend",
            "0127a5b40a25380323a2539fba090383b5337fb5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "CoInductive EqSt (s1 s2: Stream) : Prop := eqst : hd s1 = hd s2 -> EqSt (tl s1) (tl s2) -> EqSt s1 s2.",
            "VernacInductive",
            "8199fb8ce093b72ad1ac5af937b4916fb5739a3e"
        ],
        [
            "Ltac coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ].",
            "VernacExtend",
            "015e26de31aa670df7c504f94c4783cd207c7938"
        ],
        [
            "Theorem EqSt_reflex : forall s:Stream, EqSt s s.",
            "VernacStartTheoremProof",
            "5bf41ea9d44aeb786beb02578795b2cc793ad809"
        ],
        [
            "coinduction EqSt_reflex.",
            "VernacExtend",
            "42e1f143bd28878324d9bfa02e71a5fe861f087b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem sym_EqSt : forall s1 s2:Stream, EqSt s1 s2 -> EqSt s2 s1.",
            "VernacStartTheoremProof",
            "e3b5f6ce96d014c2cb49e8aa502acab86090e826"
        ],
        [
            "coinduction Eq_sym.",
            "VernacExtend",
            "16dc2de9e6f4c2908f2eba687cbde04ee67db449"
        ],
        [
            "case H; intros; symmetry ; assumption.",
            "VernacExtend",
            "2b6f07f0fb05c66f1c2a5290f799b2c6125c8d2c"
        ],
        [
            "case H; intros; assumption.",
            "VernacExtend",
            "7b64c0927954be803127a366ff6b688b9aea7f3a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem trans_EqSt : forall s1 s2 s3:Stream, EqSt s1 s2 -> EqSt s2 s3 -> EqSt s1 s3.",
            "VernacStartTheoremProof",
            "8cbc48163ac1822e8143674c31fd3bd8a42c0d36"
        ],
        [
            "coinduction Eq_trans.",
            "VernacExtend",
            "048390bae050aff058a3e3f6ecd3de515698b0d2"
        ],
        [
            "transitivity (hd s2).",
            "VernacExtend",
            "0fca5958df25436aa6afc8861a51a84f3d4ca412"
        ],
        [
            "case H; intros; assumption.",
            "VernacExtend",
            "7b64c0927954be803127a366ff6b688b9aea7f3a"
        ],
        [
            "case H0; intros; assumption.",
            "VernacExtend",
            "8925ba6b55b2962e0ba51907600f0436e68379a4"
        ],
        [
            "apply (Eq_trans (tl s1) (tl s2) (tl s3)).",
            "VernacExtend",
            "314cd439bcf5a1bc1beec81963b1c903f8b2758f"
        ],
        [
            "case H; trivial with datatypes.",
            "VernacExtend",
            "048b302541fc34a9f8741e00719f9c1e903d945a"
        ],
        [
            "case H0; trivial with datatypes.",
            "VernacExtend",
            "ee317a147d3bc72278d571e9faad23673f97653d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem eqst_ntheq : forall (n:nat) (s1 s2:Stream), EqSt s1 s2 -> Str_nth n s1 = Str_nth n s2.",
            "VernacStartTheoremProof",
            "aa7082b3924f82c22d4f63634fc96aa03a5ec144"
        ],
        [
            "unfold Str_nth; simple induction n.",
            "VernacExtend",
            "8fd56f2adc484e41af56912e10076e62bcf0f4f7"
        ],
        [
            "intros s1 s2 H; case H; trivial with datatypes.",
            "VernacExtend",
            "23f2fea72f47edb5ee36b0a3cd09b28c9f31c754"
        ],
        [
            "intros m hypind.",
            "VernacExtend",
            "a274e4cff77932a4fa8544d5f09bb298016efda9"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros s1 s2 H.",
            "VernacExtend",
            "482ea2fb3eb5848ce31c92ca334f0d12de905359"
        ],
        [
            "apply hypind.",
            "VernacExtend",
            "566adbb71e2afb882650d08071f461ec384385b4"
        ],
        [
            "case H; trivial with datatypes.",
            "VernacExtend",
            "048b302541fc34a9f8741e00719f9c1e903d945a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ntheq_eqst : forall s1 s2:Stream, (forall n:nat, Str_nth n s1 = Str_nth n s2) -> EqSt s1 s2.",
            "VernacStartTheoremProof",
            "b4ee1dc0311b9caaeca39ad78367e9b9dc42f270"
        ],
        [
            "coinduction Equiv2.",
            "VernacExtend",
            "47e8e90b0beb1a053562283b39168690ae48f751"
        ],
        [
            "apply (H 0).",
            "VernacExtend",
            "cc56f7af58151156b23d20c04e581f3ebba30e0a"
        ],
        [
            "intros n; apply (H (S n)).",
            "VernacExtend",
            "0cb71104102ae7efdf7ac352e2e6b5eb7aa26ce6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Stream_Properties.",
            "VernacBeginSection",
            "97951cbd81fa2d7f4a038a04a4acc465bbdf15b4"
        ],
        [
            "Variable P : Stream -> Prop.",
            "VernacAssumption",
            "9bdfb0048f0720f8e4b8de3f5d9c6dfef9279852"
        ],
        [
            "Inductive Exists ( x: Stream ) : Prop := | Here : P x -> Exists x | Further : Exists (tl x) -> Exists x.",
            "VernacInductive",
            "5e3e0e7462a29097918fd49588812f8669a2a39e"
        ],
        [
            "CoInductive ForAll (x: Stream) : Prop := HereAndFurther : P x -> ForAll (tl x) -> ForAll x.",
            "VernacInductive",
            "798c06aef55a376cba5105879f0946e64969eae4"
        ],
        [
            "Lemma ForAll_Str_nth_tl : forall m x, ForAll x -> ForAll (Str_nth_tl m x).",
            "VernacStartTheoremProof",
            "1197488929f3e7d8f1e3eb6a38225f75348d48c2"
        ],
        [
            "induction m.",
            "VernacExtend",
            "6f6279e892ad221278939a9b429a59edaeeb1676"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "intros x [_ H].",
            "VernacExtend",
            "dad83e9e397cfc3ef2483813059c8d97ee4be6fa"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply IHm.",
            "VernacExtend",
            "aa76f2273bef46821b36b49418f7132330cc05f1"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Co_Induction_ForAll.",
            "VernacBeginSection",
            "264c576e5ba87ad066546392af0fe4801e11fcef"
        ],
        [
            "Variable Inv : Stream -> Prop.",
            "VernacAssumption",
            "208ad147cf7f5e2fe154d36eefe487be52f48e10"
        ],
        [
            "Hypothesis InvThenP : forall x:Stream, Inv x -> P x.",
            "VernacAssumption",
            "143686fff4e25f85bc7915b5310d0b9fdee42af4"
        ],
        [
            "Hypothesis InvIsStable : forall x:Stream, Inv x -> Inv (tl x).",
            "VernacAssumption",
            "45fed575f8f53a94bffb31d0de731e551f62e400"
        ],
        [
            "Theorem ForAll_coind : forall x:Stream, Inv x -> ForAll x.",
            "VernacStartTheoremProof",
            "0698b1d791fa3f54b1ed3b42686c2e4c0ce926e8"
        ],
        [
            "coinduction ForAll_coind; auto.",
            "VernacExtend",
            "9e04c60c29c51ecf05432f2dad79ec2c42beddf9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Co_Induction_ForAll.",
            "VernacEndSegment",
            "f333914d6f9c7a0e9ae03cfba04488b029cf73dc"
        ],
        [
            "End Stream_Properties.",
            "VernacEndSegment",
            "2c8b502755af702b37e768fb2471954330942b44"
        ],
        [
            "End Streams.",
            "VernacEndSegment",
            "5ae6089e1eefd480feafebb42c758a388afdb787"
        ],
        [
            "Section Map.",
            "VernacBeginSection",
            "12ca5ab2f7de3292eec6072cc06769cd51c25553"
        ],
        [
            "Variables A B : Type.",
            "VernacAssumption",
            "b4e42fd426c23cd1c77c79fc26c25f95338235a5"
        ],
        [
            "Variable f : A -> B.",
            "VernacAssumption",
            "3004efd9a4fde9fa8a2da5ba1f90ed0ede9c0963"
        ],
        [
            "CoFixpoint map (s:Stream A) : Stream B := Cons (f (hd s)) (map (tl s)).",
            "VernacCoFixpoint",
            "92f15dc6aea19b8b36c81348f4ce6f37c608c381"
        ],
        [
            "Lemma Str_nth_tl_map : forall n s, Str_nth_tl n (map s)= map (Str_nth_tl n s).",
            "VernacStartTheoremProof",
            "0e9db543a9569f50f20c8da3d935c279e3b96f03"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros s.",
            "VernacExtend",
            "f24a724dc5e422652c0513af3278d221ab4df04a"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Str_nth_map : forall n s, Str_nth n (map s)= f (Str_nth n s).",
            "VernacStartTheoremProof",
            "970e6f22a7481c314f31cfbe95299dbf23bfda0f"
        ],
        [
            "intros n s.",
            "VernacExtend",
            "19ee1c5eb0ca91118b5c9f7a34ea7439ff376600"
        ],
        [
            "unfold Str_nth.",
            "VernacExtend",
            "c14272f4c4a99f01f6803f444ae7dfc9fb26c47e"
        ],
        [
            "rewrite Str_nth_tl_map.",
            "VernacExtend",
            "6342eab9ba7831dc247e45e118d8951c57c31377"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ForAll_map : forall (P:Stream B -> Prop) (S:Stream A), ForAll (fun s => P (map s)) S <-> ForAll P (map S).",
            "VernacStartTheoremProof",
            "6d4964d015a8800974df4c66680dabbf911d30a6"
        ],
        [
            "intros P S.",
            "VernacExtend",
            "53ca4c335d39956139101fb9515839151c138346"
        ],
        [
            "split; generalize S; clear S; cofix ForAll_map; intros S; constructor; destruct H as [H0 H]; firstorder.",
            "VernacExtend",
            "1f5ebf49465cf98319ee9e9b48f7f87e06599501"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Exists_map : forall (P:Stream B -> Prop) (S:Stream A), Exists (fun s => P (map s)) S -> Exists P (map S).",
            "VernacStartTheoremProof",
            "db3820a8fce52db2dd9132a1ea0254e4d3834306"
        ],
        [
            "intros P S H.",
            "VernacExtend",
            "0d59718a82b41cdb73261c0b4e1b41abfe2a0f0b"
        ],
        [
            "(induction H;[left|right]); firstorder.",
            "VernacExtend",
            "fcc581f3ea928af1c132ebe12583860e668ceec3"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Map.",
            "VernacEndSegment",
            "8fa7735d92e76131e10c5cfe95a2247db65a4b9f"
        ],
        [
            "Section Constant_Stream.",
            "VernacBeginSection",
            "49f447735558f4703660ec55e4aba2760732bfbf"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Variable a : A.",
            "VernacAssumption",
            "6f1bcddbd7f216ffdcede2ecefedf4bb55c8864e"
        ],
        [
            "CoFixpoint const : Stream A := Cons a const.",
            "VernacCoFixpoint",
            "91ca693511f0269e19258b9e22130074f8103f9c"
        ],
        [
            "End Constant_Stream.",
            "VernacEndSegment",
            "3e376be09462e9ff2d2fd9fb2ae2aee5ad6eb10c"
        ],
        [
            "Section Zip.",
            "VernacBeginSection",
            "847b9bcfe56522bd6491c29c12dc9c8db56b9042"
        ],
        [
            "Variable A B C : Type.",
            "VernacAssumption",
            "b984fd511dd9c74615ca3bfe47bac591ca7927d3"
        ],
        [
            "Variable f: A -> B -> C.",
            "VernacAssumption",
            "43e9c5907ad5d67097b95e0b8d029e9dfccd8592"
        ],
        [
            "CoFixpoint zipWith (a:Stream A) (b:Stream B) : Stream C := Cons (f (hd a) (hd b)) (zipWith (tl a) (tl b)).",
            "VernacCoFixpoint",
            "5ad0a028a81ed7fbcfd78764617cb23d90415712"
        ],
        [
            "Lemma Str_nth_tl_zipWith : forall n (a:Stream A) (b:Stream B), Str_nth_tl n (zipWith a b)= zipWith (Str_nth_tl n a) (Str_nth_tl n b).",
            "VernacStartTheoremProof",
            "178ba7bc17a90af0bcf2de913fe04d1132db6076"
        ],
        [
            "induction n.",
            "VernacExtend",
            "7f3faa2a3277e3553406d09101130efcb1764494"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros [x xs] [y ys].",
            "VernacExtend",
            "c6be14619d25359b94c1f2529bab0876362086c0"
        ],
        [
            "unfold Str_nth in *.",
            "VernacExtend",
            "9a0e6784f285cec3cdea11e4050b8f56501b555c"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Str_nth_zipWith : forall n (a:Stream A) (b:Stream B), Str_nth n (zipWith a b)= f (Str_nth n a) (Str_nth n b).",
            "VernacStartTheoremProof",
            "69cb863c1e5b7400a352dbdb19cdbe8c34401ce7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Str_nth.",
            "VernacExtend",
            "c14272f4c4a99f01f6803f444ae7dfc9fb26c47e"
        ],
        [
            "rewrite Str_nth_tl_zipWith.",
            "VernacExtend",
            "2e77977ad8040c8b496773f2e5a4ae1113990e61"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Zip.",
            "VernacEndSegment",
            "68443f4f1a81bbd1c36cf72b046763e456bb2a9f"
        ],
        [
            "Unset Implicit Arguments.",
            "VernacUnsetOption",
            "cacc0f023301fae157e1bbb31e84419045fc8198"
        ]
    ],
    "proofs": [
        {
            "name": "unfold_Stream",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intro x.",
                        "VernacExtend",
                        "f7163633eedf12f483fa0d8c0c119dd59431ca1e"
                    ]
                },
                {
                    "command": [
                        "case x.",
                        "VernacExtend",
                        "ff73d135d2805abb527daeb7acd470185a7b2435"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tl_nth_tl",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "simple induction n; simpl; auto.",
                        "VernacExtend",
                        "7aa32e5c5d106f2146e90df6c18f4e9e786206f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Str_nth_tl_plus",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "simple induction n; simpl; intros; auto with datatypes.",
                        "VernacExtend",
                        "aa50b47a80a13a7179546cb2fd11853ae88da7ef"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H.",
                        "VernacExtend",
                        "95b84807b4afb2ef79b7cc04a1c91a4e3a502e47"
                    ]
                },
                {
                    "command": [
                        "rewrite tl_nth_tl; trivial with datatypes.",
                        "VernacExtend",
                        "0bbb5746113aedde57721ee75e5b1d1257f1fc66"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Str_nth_plus",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros; unfold Str_nth; rewrite Str_nth_tl_plus; trivial with datatypes.",
                        "VernacExtend",
                        "0127a5b40a25380323a2539fba090383b5337fb5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EqSt_reflex",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "coinduction EqSt_reflex.",
                        "VernacExtend",
                        "42e1f143bd28878324d9bfa02e71a5fe861f087b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sym_EqSt",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "coinduction Eq_sym.",
                        "VernacExtend",
                        "16dc2de9e6f4c2908f2eba687cbde04ee67db449"
                    ]
                },
                {
                    "command": [
                        "case H; intros; symmetry ; assumption.",
                        "VernacExtend",
                        "2b6f07f0fb05c66f1c2a5290f799b2c6125c8d2c"
                    ]
                },
                {
                    "command": [
                        "case H; intros; assumption.",
                        "VernacExtend",
                        "7b64c0927954be803127a366ff6b688b9aea7f3a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trans_EqSt",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "coinduction Eq_trans.",
                        "VernacExtend",
                        "048390bae050aff058a3e3f6ecd3de515698b0d2"
                    ]
                },
                {
                    "command": [
                        "transitivity (hd s2).",
                        "VernacExtend",
                        "0fca5958df25436aa6afc8861a51a84f3d4ca412"
                    ]
                },
                {
                    "command": [
                        "case H; intros; assumption.",
                        "VernacExtend",
                        "7b64c0927954be803127a366ff6b688b9aea7f3a"
                    ]
                },
                {
                    "command": [
                        "case H0; intros; assumption.",
                        "VernacExtend",
                        "8925ba6b55b2962e0ba51907600f0436e68379a4"
                    ]
                },
                {
                    "command": [
                        "apply (Eq_trans (tl s1) (tl s2) (tl s3)).",
                        "VernacExtend",
                        "314cd439bcf5a1bc1beec81963b1c903f8b2758f"
                    ]
                },
                {
                    "command": [
                        "case H; trivial with datatypes.",
                        "VernacExtend",
                        "048b302541fc34a9f8741e00719f9c1e903d945a"
                    ]
                },
                {
                    "command": [
                        "case H0; trivial with datatypes.",
                        "VernacExtend",
                        "ee317a147d3bc72278d571e9faad23673f97653d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqst_ntheq",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "unfold Str_nth; simple induction n.",
                        "VernacExtend",
                        "8fd56f2adc484e41af56912e10076e62bcf0f4f7"
                    ]
                },
                {
                    "command": [
                        "intros s1 s2 H; case H; trivial with datatypes.",
                        "VernacExtend",
                        "23f2fea72f47edb5ee36b0a3cd09b28c9f31c754"
                    ]
                },
                {
                    "command": [
                        "intros m hypind.",
                        "VernacExtend",
                        "a274e4cff77932a4fa8544d5f09bb298016efda9"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros s1 s2 H.",
                        "VernacExtend",
                        "482ea2fb3eb5848ce31c92ca334f0d12de905359"
                    ]
                },
                {
                    "command": [
                        "apply hypind.",
                        "VernacExtend",
                        "566adbb71e2afb882650d08071f461ec384385b4"
                    ]
                },
                {
                    "command": [
                        "case H; trivial with datatypes.",
                        "VernacExtend",
                        "048b302541fc34a9f8741e00719f9c1e903d945a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ntheq_eqst",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "coinduction Equiv2.",
                        "VernacExtend",
                        "47e8e90b0beb1a053562283b39168690ae48f751"
                    ]
                },
                {
                    "command": [
                        "apply (H 0).",
                        "VernacExtend",
                        "cc56f7af58151156b23d20c04e581f3ebba30e0a"
                    ]
                },
                {
                    "command": [
                        "intros n; apply (H (S n)).",
                        "VernacExtend",
                        "0cb71104102ae7efdf7ac352e2e6b5eb7aa26ce6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ForAll_Str_nth_tl",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "induction m.",
                        "VernacExtend",
                        "6f6279e892ad221278939a9b429a59edaeeb1676"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "intros x [_ H].",
                        "VernacExtend",
                        "dad83e9e397cfc3ef2483813059c8d97ee4be6fa"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply IHm.",
                        "VernacExtend",
                        "aa76f2273bef46821b36b49418f7132330cc05f1"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ForAll_coind",
            "line_nb": 75,
            "steps": [
                {
                    "command": [
                        "coinduction ForAll_coind; auto.",
                        "VernacExtend",
                        "9e04c60c29c51ecf05432f2dad79ec2c42beddf9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Str_nth_tl_map",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "intros s.",
                        "VernacExtend",
                        "f24a724dc5e422652c0513af3278d221ab4df04a"
                    ]
                },
                {
                    "command": [
                        "apply IHn.",
                        "VernacExtend",
                        "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Str_nth_map",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros n s.",
                        "VernacExtend",
                        "19ee1c5eb0ca91118b5c9f7a34ea7439ff376600"
                    ]
                },
                {
                    "command": [
                        "unfold Str_nth.",
                        "VernacExtend",
                        "c14272f4c4a99f01f6803f444ae7dfc9fb26c47e"
                    ]
                },
                {
                    "command": [
                        "rewrite Str_nth_tl_map.",
                        "VernacExtend",
                        "6342eab9ba7831dc247e45e118d8951c57c31377"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ForAll_map",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "intros P S.",
                        "VernacExtend",
                        "53ca4c335d39956139101fb9515839151c138346"
                    ]
                },
                {
                    "command": [
                        "split; generalize S; clear S; cofix ForAll_map; intros S; constructor; destruct H as [H0 H]; firstorder.",
                        "VernacExtend",
                        "1f5ebf49465cf98319ee9e9b48f7f87e06599501"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Exists_map",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "intros P S H.",
                        "VernacExtend",
                        "0d59718a82b41cdb73261c0b4e1b41abfe2a0f0b"
                    ]
                },
                {
                    "command": [
                        "(induction H;[left|right]); firstorder.",
                        "VernacExtend",
                        "fcc581f3ea928af1c132ebe12583860e668ceec3"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Str_nth_tl_zipWith",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "induction n.",
                        "VernacExtend",
                        "7f3faa2a3277e3553406d09101130efcb1764494"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros [x xs] [y ys].",
                        "VernacExtend",
                        "c6be14619d25359b94c1f2529bab0876362086c0"
                    ]
                },
                {
                    "command": [
                        "unfold Str_nth in *.",
                        "VernacExtend",
                        "9a0e6784f285cec3cdea11e4050b8f56501b555c"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "apply IHn.",
                        "VernacExtend",
                        "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Str_nth_zipWith",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Str_nth.",
                        "VernacExtend",
                        "c14272f4c4a99f01f6803f444ae7dfc9fb26c47e"
                    ]
                },
                {
                    "command": [
                        "rewrite Str_nth_tl_zipWith.",
                        "VernacExtend",
                        "2e77977ad8040c8b496773f2e5a4ae1113990e61"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}