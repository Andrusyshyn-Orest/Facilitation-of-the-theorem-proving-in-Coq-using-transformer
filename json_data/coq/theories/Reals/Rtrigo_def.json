{
    "filename": "theories/Reals/Rtrigo_def.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Rbase Rfunctions SeqSeries Rtrigo_fun Max.",
            "VernacRequire",
            "527a18b1ada390e6162df79c122bbec96b84719c"
        ],
        [
            "Local Open Scope R_scope.",
            "VernacOpenCloseScope",
            "b005c72bb3303e031b42be04be04c87c005faa38"
        ],
        [
            "Definition exp_in (x l:R) : Prop := infinite_sum (fun i:nat => / INR (fact i) * x ^ i) l.",
            "VernacDefinition",
            "ca0661b6a9e46b55eef040c923bd0547b0cb17bc"
        ],
        [
            "Lemma exp_cof_no_R0 : forall n:nat, / INR (fact n) <> 0.",
            "VernacStartTheoremProof",
            "01cf6b05370eae0d4df57c6d46ed58829be120cc"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply Rinv_neq_0_compat.",
            "VernacExtend",
            "f2f8681c7dbf9047cfba9a279da441217a933f75"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exist_exp : forall x:R, { l:R | exp_in x l }.",
            "VernacStartTheoremProof",
            "7d3cf448ec1d4311387894e8f39ad310a6a81c7b"
        ],
        [
            "intro; generalize (Alembert_C3 (fun n:nat => / INR (fact n)) x exp_cof_no_R0 Alembert_exp).",
            "VernacExtend",
            "5072ac9b43348c01cdb83b17095abd1e147ff10a"
        ],
        [
            "unfold Pser, exp_in.",
            "VernacExtend",
            "80c0db7898aeb01b427b0751167bbe80fa2be22d"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition exp (x:R) : R := proj1_sig (exist_exp x).",
            "VernacDefinition",
            "5d69d0eca3349eb9e4ec50d2815154165a7b5077"
        ],
        [
            "Lemma pow_i : forall i:nat, (0 < i)%nat -> 0 ^ i = 0.",
            "VernacStartTheoremProof",
            "7f8d8c3d473d0c0eba7d10b8dece21e03a0d67a0"
        ],
        [
            "intros; apply pow_ne_zero.",
            "VernacExtend",
            "8078cd979df742e9612fa1afe8037a1b67453d6e"
        ],
        [
            "red; intro; rewrite H0 in H; elim (lt_irrefl _ H).",
            "VernacExtend",
            "c854ace4eaa4380c1114f0f210d51544233a91ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exist_exp0 : { l:R | exp_in 0 l }.",
            "VernacStartTheoremProof",
            "db97493717b609d8abe04974b05feeae217cd95d"
        ],
        [
            "exists 1.",
            "VernacExtend",
            "18eb310858be5acae7304d0d9ed33063568db310"
        ],
        [
            "unfold exp_in; unfold infinite_sum; intros.",
            "VernacExtend",
            "1f5ec7879a12a79f91869bad599f3be890f312e6"
        ],
        [
            "exists 0%nat.",
            "VernacExtend",
            "ecf2e229db1efa1d9dec061865f354468879442a"
        ],
        [
            "intros; replace (sum_f_R0 (fun i:nat => / INR (fact i) * 0 ^ i) n) with 1.",
            "VernacExtend",
            "f3e5c426ec2469cc53a791b6c4099849cce05488"
        ],
        [
            "unfold R_dist; replace (1 - 1) with 0; [ rewrite Rabs_R0; assumption | ring ].",
            "VernacExtend",
            "7bec6c18e71719956a58cc0784d173885289599a"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "simpl; rewrite Rinv_1; ring.",
            "VernacExtend",
            "d1d62b7d8e2beef7ceaafa1947a50333ec971405"
        ],
        [
            "rewrite tech5.",
            "VernacExtend",
            "9868999d015d8d25987acdadb308fadae9d59e4a"
        ],
        [
            "rewrite <- Hrecn.",
            "VernacExtend",
            "bdd629bae13c11ffa6cdec8d998f9fe961b49ae7"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "unfold ge; apply le_O_n.",
            "VernacExtend",
            "bf10b52bec5a357299a9895e3e830c8e01037b6a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma exp_0 : exp 0 = 1.",
            "VernacStartTheoremProof",
            "45aa6ad41ae6bc538f45178e6d0c4892db051fbb"
        ],
        [
            "cut (exp_in 0 (exp 0)).",
            "VernacExtend",
            "ab3a6a6cd740f4544e03f0153b3b3c0b9804c620"
        ],
        [
            "cut (exp_in 0 1).",
            "VernacExtend",
            "1122270d24cf1b5ba8257e44907e5a75f188c136"
        ],
        [
            "unfold exp_in; intros; eapply uniqueness_sum.",
            "VernacExtend",
            "20d71b4287a7b8ff82fec40f7f2892072fc55494"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "exact (proj2_sig exist_exp0).",
            "VernacExtend",
            "48f2a4b11a2df46d4631e38327164cee0a587fc4"
        ],
        [
            "exact (proj2_sig (exist_exp 0)).",
            "VernacExtend",
            "a7513b1d0df96c262f1a102c1451c832dd902677"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cosh (x:R) : R := (exp x + exp (- x)) / 2.",
            "VernacDefinition",
            "638ab9865891d921f043b770385416a682d977a7"
        ],
        [
            "Definition sinh (x:R) : R := (exp x - exp (- x)) / 2.",
            "VernacDefinition",
            "441e3ac5d3d9328f6c4cb4915ee89ad5079daa8d"
        ],
        [
            "Definition tanh (x:R) : R := sinh x / cosh x.",
            "VernacDefinition",
            "c6e897a16e12c1042de2e26d5ba8a0c0a1123b72"
        ],
        [
            "Lemma cosh_0 : cosh 0 = 1.",
            "VernacStartTheoremProof",
            "54a6af0409980d4c7c43825c96fb307cfe6e2368"
        ],
        [
            "unfold cosh; rewrite Ropp_0; rewrite exp_0.",
            "VernacExtend",
            "4c0e17ed6ddac70622c0ceb4b0fe0ea664bc17a5"
        ],
        [
            "unfold Rdiv; rewrite <- Rinv_r_sym; [ reflexivity | discrR ].",
            "VernacExtend",
            "5d7f8ade14efd5a9a6525e62f970ffa8c99e14a8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sinh_0 : sinh 0 = 0.",
            "VernacStartTheoremProof",
            "a4830bc020b4ba23eee93efa07d085e2da04d790"
        ],
        [
            "unfold sinh; rewrite Ropp_0; rewrite exp_0.",
            "VernacExtend",
            "65bfaffb5595f894a6e1f2e8dafff98d9ffc693a"
        ],
        [
            "unfold Rminus, Rdiv; rewrite Rplus_opp_r; apply Rmult_0_l.",
            "VernacExtend",
            "146113d834fe75ebae8213bdd8aae499ef049782"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cos_n (n:nat) : R := (-1) ^ n / INR (fact (2 * n)).",
            "VernacDefinition",
            "4c62fe37bf074994627b97c6807fddda4129a659"
        ],
        [
            "Lemma simpl_cos_n : forall n:nat, cos_n (S n) / cos_n n = - / INR (2 * S n * (2 * n + 1)).",
            "VernacStartTheoremProof",
            "c116aa7f446bc5354045784e802e9142239861aa"
        ],
        [
            "intro; unfold cos_n; replace (S n) with (n + 1)%nat; [ idtac | ring ].",
            "VernacExtend",
            "b0d7020ff78f8c90277dfdac7e775e8605c56a9b"
        ],
        [
            "rewrite pow_add; unfold Rdiv; rewrite Rinv_mult_distr.",
            "VernacExtend",
            "03201033f4a9cf31febc83b51825fb515c590578"
        ],
        [
            "rewrite Rinv_involutive.",
            "VernacExtend",
            "422941d9f5ab1f835c6b4368750431aa4fff0509"
        ],
        [
            "replace ((-1) ^ n * (-1) ^ 1 * / INR (fact (2 * (n + 1))) * (/ (-1) ^ n * INR (fact (2 * n)))) with ((-1) ^ n * / (-1) ^ n * / INR (fact (2 * (n + 1))) * INR (fact (2 * n)) * (-1) ^ 1); [ idtac | ring ].",
            "VernacExtend",
            "3e318679b20f5317f773efeeccd265ad1715ca24"
        ],
        [
            "rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "2ca74255a63c294f9442d956f32a2e3784636efb"
        ],
        [
            "rewrite Rmult_1_l; unfold pow; rewrite Rmult_1_r.",
            "VernacExtend",
            "a053a8c09407c6370746f6c68d3ac4f65be360f3"
        ],
        [
            "replace (2 * (n + 1))%nat with (S (S (2 * n))); [ idtac | ring ].",
            "VernacExtend",
            "bb10b967339d063147656a5456a4f888795f50fd"
        ],
        [
            "do 2 rewrite fact_simpl; do 2 rewrite mult_INR; repeat rewrite Rinv_mult_distr; try (apply not_O_INR; discriminate).",
            "VernacExtend",
            "e8646e14b621a2f1313b6ce1863b4ec6e7508228"
        ],
        [
            "rewrite <- (Rmult_comm (-1)).",
            "VernacExtend",
            "64d17231a2f5a03efe319d0dd7d3ace235228b0c"
        ],
        [
            "repeat rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "0f4bb007eb96bbced433cf0b5f61451a3af2510c"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "replace (S (2 * n)) with (2 * n + 1)%nat; [ idtac | ring ].",
            "VernacExtend",
            "444a6719ed395a1754d8e1b94c6ab89d51cf092e"
        ],
        [
            "rewrite mult_INR; rewrite Rinv_mult_distr.",
            "VernacExtend",
            "3fa22169534b1beed81bc2fb26a4958ea67cb9b8"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "replace (2 * n + 1)%nat with (S (2 * n)); [ apply not_O_INR; discriminate | ring ].",
            "VernacExtend",
            "1e2f0413c81833e0c4295b1aab929e3816f19726"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply prod_neq_R0; [ apply not_O_INR; discriminate | apply INR_fact_neq_0 ].",
            "VernacExtend",
            "10e8ff097b1cf0335576b76db5560167216dc18f"
        ],
        [
            "apply pow_nonzero; discrR.",
            "VernacExtend",
            "174877181c67a09e2e68285a2475567f220a254e"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply pow_nonzero; discrR.",
            "VernacExtend",
            "174877181c67a09e2e68285a2475567f220a254e"
        ],
        [
            "apply Rinv_neq_0_compat; apply INR_fact_neq_0.",
            "VernacExtend",
            "1742a1970e2bd84f0fd2145213af0978df013d33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma archimed_cor1 : forall eps:R, 0 < eps -> exists N : nat, / INR N < eps /\\ (0 < N)%nat.",
            "VernacStartTheoremProof",
            "4a2e7899429957a4fede915243857503a360a020"
        ],
        [
            "intros; cut (/ eps < IZR (up (/ eps))).",
            "VernacExtend",
            "acf6b90b2a425c7e67346d0ed6749314ff356ff2"
        ],
        [
            "intro; cut (0 <= up (/ eps))%Z.",
            "VernacExtend",
            "f423e18793db57b9ec8b3ab77d4ce5d55e7654f6"
        ],
        [
            "intro; assert (H2 := IZN _ H1); elim H2; intros; exists (max x 1).",
            "VernacExtend",
            "caf9f330dc6e12bbdb2882a6b238186e5d819dcd"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "cut (0 < IZR (Z.of_nat x)).",
            "VernacExtend",
            "28526b97334c9dc7992860be8b57910e274a268a"
        ],
        [
            "intro; rewrite INR_IZR_INZ; apply Rle_lt_trans with (/ IZR (Z.of_nat x)).",
            "VernacExtend",
            "a5069e7c9d3566227e7a265e4c5009e5df44914d"
        ],
        [
            "apply Rmult_le_reg_l with (IZR (Z.of_nat x)).",
            "VernacExtend",
            "bbfe9aa1d979df51712afd3ff4edddc9b80de0b2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- Rinv_r_sym; [ idtac | red; intro; rewrite H5 in H4; elim (Rlt_irrefl _ H4) ].",
            "VernacExtend",
            "3e9c6aa9f74bb589a5e4827dcc94b282967f7fac"
        ],
        [
            "apply Rmult_le_reg_l with (IZR (Z.of_nat (max x 1))).",
            "VernacExtend",
            "4953d76fdc3c79c07a4383a8d50c122e08e7fc53"
        ],
        [
            "apply Rlt_le_trans with (IZR (Z.of_nat x)).",
            "VernacExtend",
            "76656a4af2651987eba3e0e95f9dbe89d7698799"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat rewrite <- INR_IZR_INZ; apply le_INR; apply le_max_l.",
            "VernacExtend",
            "90393d38f40f61b5cd191f48635f68b18c07fe32"
        ],
        [
            "rewrite Rmult_1_r; rewrite (Rmult_comm (IZR (Z.of_nat (max x 1)))); rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "12b1ba5037383c57584080ebe06092aee7754bcd"
        ],
        [
            "rewrite Rmult_1_r; repeat rewrite <- INR_IZR_INZ; apply le_INR; apply le_max_l.",
            "VernacExtend",
            "c138625692293ae34380d55d8d2b4427f07b042a"
        ],
        [
            "rewrite <- INR_IZR_INZ; apply not_O_INR.",
            "VernacExtend",
            "32dc71bcc9161aee15b51cf1d3a70d779c741772"
        ],
        [
            "red; intro; assert (H6 := le_max_r x 1); cut (0 < 1)%nat; [ intro | apply lt_O_Sn ]; assert (H8 := lt_le_trans _ _ _ H7 H6); rewrite H5 in H8; elim (lt_irrefl _ H8).",
            "VernacExtend",
            "98f9e167de255e3c21071e45e6a00b71f7cd8847"
        ],
        [
            "pattern eps at 1; rewrite <- Rinv_involutive.",
            "VernacExtend",
            "666c626a051beec8777c71f612f14b22c14b03b0"
        ],
        [
            "apply Rinv_lt_contravar.",
            "VernacExtend",
            "39f1015e834f9c2b39a61c50e6b9c8cf8a29f32a"
        ],
        [
            "apply Rmult_lt_0_compat; [ apply Rinv_0_lt_compat; assumption | assumption ].",
            "VernacExtend",
            "3a7855b1a252ef772dbddafb3e711c6847919c9a"
        ],
        [
            "rewrite H3 in H0; assumption.",
            "VernacExtend",
            "bae1deeede51c573de148b383d3af6515056863b"
        ],
        [
            "red; intro; rewrite H5 in H; elim (Rlt_irrefl _ H).",
            "VernacExtend",
            "616c3b1a3f566a8d1078a2c6e798264affa5f2e1"
        ],
        [
            "apply Rlt_trans with (/ eps).",
            "VernacExtend",
            "cd6a6c5f7cd4a63d798b8ab928ec1b130992b315"
        ],
        [
            "apply Rinv_0_lt_compat; assumption.",
            "VernacExtend",
            "7c8a6c48f8e12a680ed85ee789a9c10a10ee8701"
        ],
        [
            "rewrite H3 in H0; assumption.",
            "VernacExtend",
            "bae1deeede51c573de148b383d3af6515056863b"
        ],
        [
            "apply lt_le_trans with 1%nat; [ apply lt_O_Sn | apply le_max_r ].",
            "VernacExtend",
            "77168fdbde4dc984c631656718a1270cee502ce2"
        ],
        [
            "apply le_IZR; left; apply Rlt_trans with (/ eps); [ apply Rinv_0_lt_compat; assumption | assumption ].",
            "VernacExtend",
            "316856efd6b3dbdc083a44a9f9fbc38cdb8274ec"
        ],
        [
            "assert (H0 := archimed (/ eps)).",
            "VernacExtend",
            "3622310eb30578cf952f52a2406e97a5f6314b48"
        ],
        [
            "elim H0; intros; assumption.",
            "VernacExtend",
            "93aaa20e409e093c318ed7f35309abbda4e55e01"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Alembert_cos : Un_cv (fun n:nat => Rabs (cos_n (S n) / cos_n n)) 0.",
            "VernacStartTheoremProof",
            "fb4d8f0233711aac1139d780b4ee25769cf516be"
        ],
        [
            "unfold Un_cv; intros.",
            "VernacExtend",
            "d818b162942323e4a80090d71a38ad8ae04fd3d0"
        ],
        [
            "assert (H0 := archimed_cor1 eps H).",
            "VernacExtend",
            "701fe75de8df2b9def94135328dcb36a26670912"
        ],
        [
            "elim H0; intros; exists x.",
            "VernacExtend",
            "b1672a9ed1508dd87456566a3e3a3ce8c16eaf8b"
        ],
        [
            "intros; rewrite simpl_cos_n; unfold R_dist; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; rewrite Rabs_Rabsolu; rewrite Rabs_Ropp; rewrite Rabs_right.",
            "VernacExtend",
            "4fed0b040346e4425ad0c938cdb26f3d87520f3e"
        ],
        [
            "rewrite mult_INR; rewrite Rinv_mult_distr.",
            "VernacExtend",
            "3fa22169534b1beed81bc2fb26a4958ea67cb9b8"
        ],
        [
            "cut (/ INR (2 * S n) < 1).",
            "VernacExtend",
            "d47f46705d520c272498e95b1aac8d41f0349c10"
        ],
        [
            "intro; cut (/ INR (2 * n + 1) < eps).",
            "VernacExtend",
            "8464b81a4f420f3329f3c59d5cdf693c95ce8d82"
        ],
        [
            "intro; rewrite <- (Rmult_1_l eps).",
            "VernacExtend",
            "0bc36a56f9df71454abd5ce5df648bcafaad2df6"
        ],
        [
            "apply Rmult_gt_0_lt_compat; try assumption.",
            "VernacExtend",
            "2989629cb78e709932759b33ea103ec46c1155ac"
        ],
        [
            "change (0 < / INR (2 * n + 1)); apply Rinv_0_lt_compat; apply lt_INR_0.",
            "VernacExtend",
            "1f4951e7a515504d9a505f8ad125c9512c954a54"
        ],
        [
            "replace (2 * n + 1)%nat with (S (2 * n)); [ apply lt_O_Sn | ring ].",
            "VernacExtend",
            "b367689d116ed1bc2d0cb723b894c97f048e4c86"
        ],
        [
            "apply Rlt_0_1.",
            "VernacExtend",
            "c3f675388bf844e0740197fd71afa66e5eef091d"
        ],
        [
            "cut (x < 2 * n + 1)%nat.",
            "VernacExtend",
            "31d2385f126f7166d0b3d247bede46827181570d"
        ],
        [
            "intro; assert (H5 := lt_INR _ _ H4).",
            "VernacExtend",
            "5e40f8cd16806badcdde9f577e20a705d99c3948"
        ],
        [
            "apply Rlt_trans with (/ INR x).",
            "VernacExtend",
            "196ebde2dd37d2afe7fe83dcf0b500b2c478cf36"
        ],
        [
            "apply Rinv_lt_contravar.",
            "VernacExtend",
            "39f1015e834f9c2b39a61c50e6b9c8cf8a29f32a"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "apply lt_INR_0.",
            "VernacExtend",
            "a1a2187f5724bf22725bfafeaf648a30dcb1f835"
        ],
        [
            "elim H1; intros; assumption.",
            "VernacExtend",
            "cc00e4116d0aefea281577ea01f1c22b86beb4e0"
        ],
        [
            "apply lt_INR_0; replace (2 * n + 1)%nat with (S (2 * n)); [ apply lt_O_Sn | ring ].",
            "VernacExtend",
            "8cfb6c225dc33c63ee4430dc98d3b16f876313ac"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H1; intros; assumption.",
            "VernacExtend",
            "cc00e4116d0aefea281577ea01f1c22b86beb4e0"
        ],
        [
            "apply lt_le_trans with (S n).",
            "VernacExtend",
            "5fec0a44392331de58bc37930bfc25efcf1ab543"
        ],
        [
            "unfold ge in H2; apply le_lt_n_Sm; assumption.",
            "VernacExtend",
            "d7d85d54bb7d1062b09eed7e0e2eb8a8a3decf2e"
        ],
        [
            "replace (2 * n + 1)%nat with (S (2 * n)) by ring.",
            "VernacExtend",
            "2838152e5e2bcb76e3328871deb204bc4120e225"
        ],
        [
            "apply le_n_S; apply le_n_2n.",
            "VernacExtend",
            "75bc18471efd66f259a53ebe8ca159a77bb482ae"
        ],
        [
            "apply Rmult_lt_reg_l with (INR (2 * S n)).",
            "VernacExtend",
            "2aa6c9338de89978ce3361cb52713a818437d32f"
        ],
        [
            "apply lt_INR_0; replace (2 * S n)%nat with (S (S (2 * n))).",
            "VernacExtend",
            "b57de6e56002cb86f7443cb00f360b2af74ca478"
        ],
        [
            "apply lt_O_Sn.",
            "VernacExtend",
            "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
        ],
        [
            "replace (S n) with (n + 1)%nat by ring.",
            "VernacExtend",
            "bcd699a55a2e7483177ccaa397d489cd995f668d"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "2ca74255a63c294f9442d956f32a2e3784636efb"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "apply (lt_INR 1).",
            "VernacExtend",
            "8398fda7d44df13e6bbde31a1080b92043325f58"
        ],
        [
            "replace (2 * S n)%nat with (S (S (2 * n))).",
            "VernacExtend",
            "0e979a91e133bbb49e0c693ceaa8b83423f512bf"
        ],
        [
            "apply lt_n_S; apply lt_O_Sn.",
            "VernacExtend",
            "1fcedea1516f721bb01bcc6754efbe06ee0b354a"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "replace (2 * n + 1)%nat with (S (2 * n)); [ apply not_O_INR; discriminate | ring ].",
            "VernacExtend",
            "1e2f0413c81833e0c4295b1aab929e3816f19726"
        ],
        [
            "apply Rle_ge; left; apply Rinv_0_lt_compat.",
            "VernacExtend",
            "9aca125a862c4aeaf2f8b7a5d7b68f1d6c559062"
        ],
        [
            "apply lt_INR_0.",
            "VernacExtend",
            "a1a2187f5724bf22725bfafeaf648a30dcb1f835"
        ],
        [
            "replace (2 * S n * (2 * n + 1))%nat with (2 + (4 * (n * n) + 6 * n))%nat by ring.",
            "VernacExtend",
            "f67494cf5ba40ae6a94c7d3171b16d80f9f7e646"
        ],
        [
            "apply lt_O_Sn.",
            "VernacExtend",
            "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cosn_no_R0 : forall n:nat, cos_n n <> 0.",
            "VernacStartTheoremProof",
            "97082ab13a5b3bc20552beeb178c7dc9860dcd1c"
        ],
        [
            "intro; unfold cos_n; unfold Rdiv; apply prod_neq_R0.",
            "VernacExtend",
            "97f8c3b4746b4921ed1ba5519f629128cb0ceac1"
        ],
        [
            "apply pow_nonzero; discrR.",
            "VernacExtend",
            "174877181c67a09e2e68285a2475567f220a254e"
        ],
        [
            "apply Rinv_neq_0_compat.",
            "VernacExtend",
            "f2f8681c7dbf9047cfba9a279da441217a933f75"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cos_in (x l:R) : Prop := infinite_sum (fun i:nat => cos_n i * x ^ i) l.",
            "VernacDefinition",
            "69b672806e167674d1ff47f0377759219984d676"
        ],
        [
            "Lemma exist_cos : forall x:R, { l:R | cos_in x l }.",
            "VernacStartTheoremProof",
            "6f297e0c2f54357966f7d5fcb6176455acf790ea"
        ],
        [
            "intro; generalize (Alembert_C3 cos_n x cosn_no_R0 Alembert_cos).",
            "VernacExtend",
            "ebaa936d37d33a80f8b94569d1bbdac1cdac7837"
        ],
        [
            "unfold Pser, cos_in; trivial.",
            "VernacExtend",
            "4086e703e628f28e926e098fff274ac4f1de8cf8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cos (x:R) : R := let (a,_) := exist_cos (Rsqr x) in a.",
            "VernacDefinition",
            "8100c19dc97b802a56ac7b3b828ee0ce353bcb5e"
        ],
        [
            "Definition sin_n (n:nat) : R := (-1) ^ n / INR (fact (2 * n + 1)).",
            "VernacDefinition",
            "fa664b3801c9d15fc1b146c6497a27537966baae"
        ],
        [
            "Lemma simpl_sin_n : forall n:nat, sin_n (S n) / sin_n n = - / INR ((2 * S n + 1) * (2 * S n)).",
            "VernacStartTheoremProof",
            "bc1f0e059a22ada1297941401b440eec8f944e0c"
        ],
        [
            "intro; unfold sin_n; replace (S n) with (n + 1)%nat; [ idtac | ring ].",
            "VernacExtend",
            "373e1e30d77d8ff6a60059b94bbdaf53b7306f07"
        ],
        [
            "rewrite pow_add; unfold Rdiv; rewrite Rinv_mult_distr.",
            "VernacExtend",
            "03201033f4a9cf31febc83b51825fb515c590578"
        ],
        [
            "rewrite Rinv_involutive.",
            "VernacExtend",
            "422941d9f5ab1f835c6b4368750431aa4fff0509"
        ],
        [
            "replace ((-1) ^ n * (-1) ^ 1 * / INR (fact (2 * (n + 1) + 1)) * (/ (-1) ^ n * INR (fact (2 * n + 1)))) with ((-1) ^ n * / (-1) ^ n * / INR (fact (2 * (n + 1) + 1)) * INR (fact (2 * n + 1)) * (-1) ^ 1); [ idtac | ring ].",
            "VernacExtend",
            "29b46562c99fe2320b3b194c2cb383174aa2392f"
        ],
        [
            "rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "2ca74255a63c294f9442d956f32a2e3784636efb"
        ],
        [
            "rewrite Rmult_1_l; unfold pow; rewrite Rmult_1_r; replace (2 * (n + 1) + 1)%nat with (S (S (2 * n + 1))).",
            "VernacExtend",
            "85ee9541069fbbe82cc41c6b7ce33843d39e319d"
        ],
        [
            "do 2 rewrite fact_simpl; do 2 rewrite mult_INR; repeat rewrite Rinv_mult_distr.",
            "VernacExtend",
            "241739d3d58f26c8300f1da430792fad7ec5abe2"
        ],
        [
            "rewrite <- (Rmult_comm (-1)); repeat rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "a2ff41cd3c5ff12e293728f873473eff473a05d5"
        ],
        [
            "rewrite Rmult_1_r; replace (S (2 * n + 1)) with (2 * (n + 1))%nat.",
            "VernacExtend",
            "7eae1eaeb785aa6c68ecc127f68ec1bbef5751bc"
        ],
        [
            "repeat rewrite mult_INR; repeat rewrite Rinv_mult_distr.",
            "VernacExtend",
            "64b4b737607745bcbcd4dd3f9252e348f631bf07"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "replace (n + 1)%nat with (S n); [ apply not_O_INR; discriminate | ring ].",
            "VernacExtend",
            "2a6bdd4b799978bde5b44ea12159e11262ccb2ab"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "apply prod_neq_R0.",
            "VernacExtend",
            "4e401b99cc3c24b61ca502aa7107071c427501ea"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "replace (n + 1)%nat with (S n); [ apply not_O_INR; discriminate | ring ].",
            "VernacExtend",
            "2a6bdd4b799978bde5b44ea12159e11262ccb2ab"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "replace (n + 1)%nat with (S n); [ apply not_O_INR; discriminate | ring ].",
            "VernacExtend",
            "2a6bdd4b799978bde5b44ea12159e11262ccb2ab"
        ],
        [
            "rewrite mult_plus_distr_l; cut (forall n:nat, S n = (n + 1)%nat).",
            "VernacExtend",
            "d0d7b55e501e28d98a7168fe9d1375ed5d0adfa0"
        ],
        [
            "intros; rewrite (H (2 * n + 1)%nat).",
            "VernacExtend",
            "6509b227bcaf524cdfade56cffb1a956e4af17dd"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "intros; ring.",
            "VernacExtend",
            "a0e0ba17c737405b1d4c2a120d3717441df76616"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "apply prod_neq_R0; [ apply not_O_INR; discriminate | apply INR_fact_neq_0 ].",
            "VernacExtend",
            "10e8ff097b1cf0335576b76db5560167216dc18f"
        ],
        [
            "cut (forall n:nat, S (S n) = (n + 2)%nat); [ intros; rewrite (H (2 * n + 1)%nat); ring | intros; ring ].",
            "VernacExtend",
            "f8dc56ccb422262fb1e70aa324202a185bff7ad5"
        ],
        [
            "apply pow_nonzero; discrR.",
            "VernacExtend",
            "174877181c67a09e2e68285a2475567f220a254e"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply pow_nonzero; discrR.",
            "VernacExtend",
            "174877181c67a09e2e68285a2475567f220a254e"
        ],
        [
            "apply Rinv_neq_0_compat; apply INR_fact_neq_0.",
            "VernacExtend",
            "1742a1970e2bd84f0fd2145213af0978df013d33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Alembert_sin : Un_cv (fun n:nat => Rabs (sin_n (S n) / sin_n n)) 0.",
            "VernacStartTheoremProof",
            "e69a695851e3958cd0dae9ffa49e416fbb0159ea"
        ],
        [
            "unfold Un_cv; intros; assert (H0 := archimed_cor1 eps H).",
            "VernacExtend",
            "e36dd3447d35b078028f55d9e0b15aabf80ae02a"
        ],
        [
            "elim H0; intros; exists x.",
            "VernacExtend",
            "b1672a9ed1508dd87456566a3e3a3ce8c16eaf8b"
        ],
        [
            "intros; rewrite simpl_sin_n; unfold R_dist; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; rewrite Rabs_Rabsolu; rewrite Rabs_Ropp; rewrite Rabs_right.",
            "VernacExtend",
            "cb49c763f07a5c8ec9e4a3c7db01bada88c9a115"
        ],
        [
            "rewrite mult_INR; rewrite Rinv_mult_distr.",
            "VernacExtend",
            "3fa22169534b1beed81bc2fb26a4958ea67cb9b8"
        ],
        [
            "cut (/ INR (2 * S n) < 1).",
            "VernacExtend",
            "d47f46705d520c272498e95b1aac8d41f0349c10"
        ],
        [
            "intro; cut (/ INR (2 * S n + 1) < eps).",
            "VernacExtend",
            "577a6f868038b2ed59f6a7047e0443c65f8446a0"
        ],
        [
            "intro; rewrite <- (Rmult_1_l eps); rewrite (Rmult_comm (/ INR (2 * S n + 1))); apply Rmult_gt_0_lt_compat; try assumption.",
            "VernacExtend",
            "2fbe97290683b423bd99d995f4e8b55b211669df"
        ],
        [
            "change (0 < / INR (2 * S n + 1)); apply Rinv_0_lt_compat; apply lt_INR_0; replace (2 * S n + 1)%nat with (S (2 * S n)); [ apply lt_O_Sn | ring ].",
            "VernacExtend",
            "74c0cbfa89b7c05fb41113192d2c463ac6b39811"
        ],
        [
            "apply Rlt_0_1.",
            "VernacExtend",
            "c3f675388bf844e0740197fd71afa66e5eef091d"
        ],
        [
            "cut (x < 2 * S n + 1)%nat.",
            "VernacExtend",
            "1051661846619c65d16feba26a8c5cd7d5359096"
        ],
        [
            "intro; assert (H5 := lt_INR _ _ H4); apply Rlt_trans with (/ INR x).",
            "VernacExtend",
            "18b9c30cec4270ebca53a069eff69a5719b7d026"
        ],
        [
            "apply Rinv_lt_contravar.",
            "VernacExtend",
            "39f1015e834f9c2b39a61c50e6b9c8cf8a29f32a"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "apply lt_INR_0; elim H1; intros; assumption.",
            "VernacExtend",
            "0be9ceb96806f8d25ea9e7071c492c03e8046869"
        ],
        [
            "apply lt_INR_0; replace (2 * S n + 1)%nat with (S (2 * S n)); [ apply lt_O_Sn | ring ].",
            "VernacExtend",
            "18e495cbc88b2d73589449eaeb79d3f24f04d412"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H1; intros; assumption.",
            "VernacExtend",
            "cc00e4116d0aefea281577ea01f1c22b86beb4e0"
        ],
        [
            "apply lt_le_trans with (S n).",
            "VernacExtend",
            "5fec0a44392331de58bc37930bfc25efcf1ab543"
        ],
        [
            "unfold ge in H2; apply le_lt_n_Sm; assumption.",
            "VernacExtend",
            "d7d85d54bb7d1062b09eed7e0e2eb8a8a3decf2e"
        ],
        [
            "replace (2 * S n + 1)%nat with (S (2 * S n)) by ring.",
            "VernacExtend",
            "f59d30aea0c155543886542b6e87d12c3424af13"
        ],
        [
            "apply le_S; apply le_n_2n.",
            "VernacExtend",
            "78aaed42b2064e8cdb00224641bb1d823dadf0b0"
        ],
        [
            "apply Rmult_lt_reg_l with (INR (2 * S n)).",
            "VernacExtend",
            "2aa6c9338de89978ce3361cb52713a818437d32f"
        ],
        [
            "apply lt_INR_0; replace (2 * S n)%nat with (S (S (2 * n))); [ apply lt_O_Sn | ring ].",
            "VernacExtend",
            "f97850d6e853046ea961501512c0ad6f4fbb3a1c"
        ],
        [
            "rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "2ca74255a63c294f9442d956f32a2e3784636efb"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "apply (lt_INR 1).",
            "VernacExtend",
            "8398fda7d44df13e6bbde31a1080b92043325f58"
        ],
        [
            "replace (2 * S n)%nat with (S (S (2 * n))).",
            "VernacExtend",
            "0e979a91e133bbb49e0c693ceaa8b83423f512bf"
        ],
        [
            "apply lt_n_S; apply lt_O_Sn.",
            "VernacExtend",
            "1fcedea1516f721bb01bcc6754efbe06ee0b354a"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "left; apply Rinv_0_lt_compat.",
            "VernacExtend",
            "64bd47bec4cb8a2d680f2c36fbfbd1b81db97d1a"
        ],
        [
            "apply lt_INR_0.",
            "VernacExtend",
            "a1a2187f5724bf22725bfafeaf648a30dcb1f835"
        ],
        [
            "replace ((2 * S n + 1) * (2 * S n))%nat with (6 + (4 * (n * n) + 10 * n))%nat by ring.",
            "VernacExtend",
            "18b29dd8bee24f019df845be37db966b9a287d25"
        ],
        [
            "apply lt_O_Sn.",
            "VernacExtend",
            "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sin_no_R0 : forall n:nat, sin_n n <> 0.",
            "VernacStartTheoremProof",
            "bb4f9312474944a2d9f4eb609cbdbbafa617a763"
        ],
        [
            "intro; unfold sin_n; unfold Rdiv; apply prod_neq_R0.",
            "VernacExtend",
            "4a509b6a64a3438739d6a61d35ca63103da944c8"
        ],
        [
            "apply pow_nonzero; discrR.",
            "VernacExtend",
            "174877181c67a09e2e68285a2475567f220a254e"
        ],
        [
            "apply Rinv_neq_0_compat; apply INR_fact_neq_0.",
            "VernacExtend",
            "1742a1970e2bd84f0fd2145213af0978df013d33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition sin_in (x l:R) : Prop := infinite_sum (fun i:nat => sin_n i * x ^ i) l.",
            "VernacDefinition",
            "d602df407071818d3a345235188722aeddf63711"
        ],
        [
            "Lemma exist_sin : forall x:R, { l:R | sin_in x l }.",
            "VernacStartTheoremProof",
            "c31cea14f98d18a9ea610791a45ad6da108a93d0"
        ],
        [
            "intro; generalize (Alembert_C3 sin_n x sin_no_R0 Alembert_sin).",
            "VernacExtend",
            "3bc22a718d2866e1d0229cbc6abb77c251774047"
        ],
        [
            "unfold Pser, sin_n; trivial.",
            "VernacExtend",
            "0542e680bb9fdfbd83fe71b65eb2d5e156fede3f"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition sin (x:R) : R := let (a,_) := exist_sin (Rsqr x) in x * a.",
            "VernacDefinition",
            "605b64bb6c0acb6c45455f6089e51afcfb564947"
        ],
        [
            "Lemma cos_sym : forall x:R, cos x = cos (- x).",
            "VernacStartTheoremProof",
            "968d5fb7112d873657e110af2f1a7477e5f76dcb"
        ],
        [
            "intros; unfold cos; replace (Rsqr (- x)) with (Rsqr x).",
            "VernacExtend",
            "3a57d1b8a81164cbaf0ddc9ce9cf17c040c87b29"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply Rsqr_neg.",
            "VernacExtend",
            "5dacfd5b9f2bf3987380c07d13113f83e1131a0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sin_antisym : forall x:R, sin (- x) = - sin x.",
            "VernacStartTheoremProof",
            "a6e84957dc7f817ab5d4bb4b1bea16ec35b53d88"
        ],
        [
            "intro; unfold sin; replace (Rsqr (- x)) with (Rsqr x); [ idtac | apply Rsqr_neg ].",
            "VernacExtend",
            "1a96041f603b6fc24028516c56ed5b2da09a00bb"
        ],
        [
            "case (exist_sin (Rsqr x)); intros; ring.",
            "VernacExtend",
            "9c0b8e252fda82742245dfba10ca04f1fd133edd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sin_0 : sin 0 = 0.",
            "VernacStartTheoremProof",
            "e3db9b8c753864477ce05f56525338cbb9985065"
        ],
        [
            "unfold sin; case (exist_sin (Rsqr 0)).",
            "VernacExtend",
            "1db59e5ce0b1437654391057d66e8ad8e91f02f2"
        ],
        [
            "intros; ring.",
            "VernacExtend",
            "a0e0ba17c737405b1d4c2a120d3717441df76616"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exist_cos0 : { l:R | cos_in 0 l }.",
            "VernacStartTheoremProof",
            "b2f1fe5abbace0a53e6b705385e4c26fca6267f5"
        ],
        [
            "exists 1.",
            "VernacExtend",
            "18eb310858be5acae7304d0d9ed33063568db310"
        ],
        [
            "unfold cos_in; unfold infinite_sum; intros; exists 0%nat.",
            "VernacExtend",
            "367c2a78aab0309b5227a9c6eeadd4d13f288626"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold R_dist.",
            "VernacExtend",
            "9d14879a55d02ad54565968e31b64da7aeb66d97"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "unfold cos_n; simpl.",
            "VernacExtend",
            "7c38035d8edc3e3e7570d5e65a1a4c00a2b2ce62"
        ],
        [
            "unfold Rdiv; rewrite Rinv_1.",
            "VernacExtend",
            "0f5a39a3484074cabdf25501bc7598fafc00fe9b"
        ],
        [
            "do 2 rewrite Rmult_1_r.",
            "VernacExtend",
            "d057c98120a170d66059b76e7294aa10d6c2070c"
        ],
        [
            "unfold Rminus; rewrite Rplus_opp_r; rewrite Rabs_R0; assumption.",
            "VernacExtend",
            "c1de84b8ec8a6c422226e5ca95d3db00e63bd56e"
        ],
        [
            "rewrite tech5.",
            "VernacExtend",
            "9868999d015d8d25987acdadb308fadae9d59e4a"
        ],
        [
            "replace (cos_n (S n) * 0 ^ S n) with 0.",
            "VernacExtend",
            "c9ae42aa43cac4db18846f30ceff7d6437168f11"
        ],
        [
            "rewrite Rplus_0_r.",
            "VernacExtend",
            "d5c1fdd9d1c31f6ede268b5fbee697b051ea4fe2"
        ],
        [
            "apply Hrecn; unfold ge; apply le_O_n.",
            "VernacExtend",
            "1d1e2b66dee0929c21a58edaa0d5cb55bd3e3746"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma cos_0 : cos 0 = 1.",
            "VernacStartTheoremProof",
            "53e287b0a216d691e9894ced8b92b7644e39cbbe"
        ],
        [
            "cut (cos_in 0 (cos 0)).",
            "VernacExtend",
            "c28fad2f8fd0207b84590cd359d3a981549d22f6"
        ],
        [
            "cut (cos_in 0 1).",
            "VernacExtend",
            "f807f177577d6e2a25717065dbbe1ad124a7dc1e"
        ],
        [
            "unfold cos_in; intros; eapply uniqueness_sum.",
            "VernacExtend",
            "f0ab8ec28c790adce9efbbfc8d7829ddc605c908"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "exact (proj2_sig exist_cos0).",
            "VernacExtend",
            "72383b7040b97702c090541105ccc34213eb2a0e"
        ],
        [
            "assert (H := proj2_sig (exist_cos (Rsqr 0))); unfold cos; pattern 0 at 1; replace 0 with (Rsqr 0); [ exact H | apply Rsqr_0 ].",
            "VernacExtend",
            "16cff49568b92558390d4d3ed4cf46a674dd2706"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "exp_cof_no_R0",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_neq_0_compat.",
                        "VernacExtend",
                        "f2f8681c7dbf9047cfba9a279da441217a933f75"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exist_exp",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intro; generalize (Alembert_C3 (fun n:nat => / INR (fact n)) x exp_cof_no_R0 Alembert_exp).",
                        "VernacExtend",
                        "5072ac9b43348c01cdb83b17095abd1e147ff10a"
                    ]
                },
                {
                    "command": [
                        "unfold Pser, exp_in.",
                        "VernacExtend",
                        "80c0db7898aeb01b427b0751167bbe80fa2be22d"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "pow_i",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "intros; apply pow_ne_zero.",
                        "VernacExtend",
                        "8078cd979df742e9612fa1afe8037a1b67453d6e"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H0 in H; elim (lt_irrefl _ H).",
                        "VernacExtend",
                        "c854ace4eaa4380c1114f0f210d51544233a91ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exist_exp0",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "exists 1.",
                        "VernacExtend",
                        "18eb310858be5acae7304d0d9ed33063568db310"
                    ]
                },
                {
                    "command": [
                        "unfold exp_in; unfold infinite_sum; intros.",
                        "VernacExtend",
                        "1f5ec7879a12a79f91869bad599f3be890f312e6"
                    ]
                },
                {
                    "command": [
                        "exists 0%nat.",
                        "VernacExtend",
                        "ecf2e229db1efa1d9dec061865f354468879442a"
                    ]
                },
                {
                    "command": [
                        "intros; replace (sum_f_R0 (fun i:nat => / INR (fact i) * 0 ^ i) n) with 1.",
                        "VernacExtend",
                        "f3e5c426ec2469cc53a791b6c4099849cce05488"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist; replace (1 - 1) with 0; [ rewrite Rabs_R0; assumption | ring ].",
                        "VernacExtend",
                        "7bec6c18e71719956a58cc0784d173885289599a"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Rinv_1; ring.",
                        "VernacExtend",
                        "d1d62b7d8e2beef7ceaafa1947a50333ec971405"
                    ]
                },
                {
                    "command": [
                        "rewrite tech5.",
                        "VernacExtend",
                        "9868999d015d8d25987acdadb308fadae9d59e4a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hrecn.",
                        "VernacExtend",
                        "bdd629bae13c11ffa6cdec8d998f9fe961b49ae7"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "unfold ge; apply le_O_n.",
                        "VernacExtend",
                        "bf10b52bec5a357299a9895e3e830c8e01037b6a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "cosh_0",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "unfold cosh; rewrite Ropp_0; rewrite exp_0.",
                        "VernacExtend",
                        "4c0e17ed6ddac70622c0ceb4b0fe0ea664bc17a5"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite <- Rinv_r_sym; [ reflexivity | discrR ].",
                        "VernacExtend",
                        "5d7f8ade14efd5a9a6525e62f970ffa8c99e14a8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sinh_0",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "unfold sinh; rewrite Ropp_0; rewrite exp_0.",
                        "VernacExtend",
                        "65bfaffb5595f894a6e1f2e8dafff98d9ffc693a"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus, Rdiv; rewrite Rplus_opp_r; apply Rmult_0_l.",
                        "VernacExtend",
                        "146113d834fe75ebae8213bdd8aae499ef049782"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "simpl_cos_n",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intro; unfold cos_n; replace (S n) with (n + 1)%nat; [ idtac | ring ].",
                        "VernacExtend",
                        "b0d7020ff78f8c90277dfdac7e775e8605c56a9b"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_add; unfold Rdiv; rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "03201033f4a9cf31febc83b51825fb515c590578"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_involutive.",
                        "VernacExtend",
                        "422941d9f5ab1f835c6b4368750431aa4fff0509"
                    ]
                },
                {
                    "command": [
                        "replace ((-1) ^ n * (-1) ^ 1 * / INR (fact (2 * (n + 1))) * (/ (-1) ^ n * INR (fact (2 * n)))) with ((-1) ^ n * / (-1) ^ n * / INR (fact (2 * (n + 1))) * INR (fact (2 * n)) * (-1) ^ 1); [ idtac | ring ].",
                        "VernacExtend",
                        "3e318679b20f5317f773efeeccd265ad1715ca24"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "2ca74255a63c294f9442d956f32a2e3784636efb"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l; unfold pow; rewrite Rmult_1_r.",
                        "VernacExtend",
                        "a053a8c09407c6370746f6c68d3ac4f65be360f3"
                    ]
                },
                {
                    "command": [
                        "replace (2 * (n + 1))%nat with (S (S (2 * n))); [ idtac | ring ].",
                        "VernacExtend",
                        "bb10b967339d063147656a5456a4f888795f50fd"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite fact_simpl; do 2 rewrite mult_INR; repeat rewrite Rinv_mult_distr; try (apply not_O_INR; discriminate).",
                        "VernacExtend",
                        "e8646e14b621a2f1313b6ce1863b4ec6e7508228"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_comm (-1)).",
                        "VernacExtend",
                        "64d17231a2f5a03efe319d0dd7d3ace235228b0c"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "0f4bb007eb96bbced433cf0b5f61451a3af2510c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "replace (S (2 * n)) with (2 * n + 1)%nat; [ idtac | ring ].",
                        "VernacExtend",
                        "444a6719ed395a1754d8e1b94c6ab89d51cf092e"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_INR; rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "3fa22169534b1beed81bc2fb26a4958ea67cb9b8"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "replace (2 * n + 1)%nat with (S (2 * n)); [ apply not_O_INR; discriminate | ring ].",
                        "VernacExtend",
                        "1e2f0413c81833e0c4295b1aab929e3816f19726"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply prod_neq_R0; [ apply not_O_INR; discriminate | apply INR_fact_neq_0 ].",
                        "VernacExtend",
                        "10e8ff097b1cf0335576b76db5560167216dc18f"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero; discrR.",
                        "VernacExtend",
                        "174877181c67a09e2e68285a2475567f220a254e"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero; discrR.",
                        "VernacExtend",
                        "174877181c67a09e2e68285a2475567f220a254e"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_neq_0_compat; apply INR_fact_neq_0.",
                        "VernacExtend",
                        "1742a1970e2bd84f0fd2145213af0978df013d33"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "archimed_cor1",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros; cut (/ eps < IZR (up (/ eps))).",
                        "VernacExtend",
                        "acf6b90b2a425c7e67346d0ed6749314ff356ff2"
                    ]
                },
                {
                    "command": [
                        "intro; cut (0 <= up (/ eps))%Z.",
                        "VernacExtend",
                        "f423e18793db57b9ec8b3ab77d4ce5d55e7654f6"
                    ]
                },
                {
                    "command": [
                        "intro; assert (H2 := IZN _ H1); elim H2; intros; exists (max x 1).",
                        "VernacExtend",
                        "caf9f330dc6e12bbdb2882a6b238186e5d819dcd"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "cut (0 < IZR (Z.of_nat x)).",
                        "VernacExtend",
                        "28526b97334c9dc7992860be8b57910e274a268a"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite INR_IZR_INZ; apply Rle_lt_trans with (/ IZR (Z.of_nat x)).",
                        "VernacExtend",
                        "a5069e7c9d3566227e7a265e4c5009e5df44914d"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_reg_l with (IZR (Z.of_nat x)).",
                        "VernacExtend",
                        "bbfe9aa1d979df51712afd3ff4edddc9b80de0b2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_r_sym; [ idtac | red; intro; rewrite H5 in H4; elim (Rlt_irrefl _ H4) ].",
                        "VernacExtend",
                        "3e9c6aa9f74bb589a5e4827dcc94b282967f7fac"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_reg_l with (IZR (Z.of_nat (max x 1))).",
                        "VernacExtend",
                        "4953d76fdc3c79c07a4383a8d50c122e08e7fc53"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (IZR (Z.of_nat x)).",
                        "VernacExtend",
                        "76656a4af2651987eba3e0e95f9dbe89d7698799"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- INR_IZR_INZ; apply le_INR; apply le_max_l.",
                        "VernacExtend",
                        "90393d38f40f61b5cd191f48635f68b18c07fe32"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; rewrite (Rmult_comm (IZR (Z.of_nat (max x 1)))); rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "12b1ba5037383c57584080ebe06092aee7754bcd"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; repeat rewrite <- INR_IZR_INZ; apply le_INR; apply le_max_l.",
                        "VernacExtend",
                        "c138625692293ae34380d55d8d2b4427f07b042a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- INR_IZR_INZ; apply not_O_INR.",
                        "VernacExtend",
                        "32dc71bcc9161aee15b51cf1d3a70d779c741772"
                    ]
                },
                {
                    "command": [
                        "red; intro; assert (H6 := le_max_r x 1); cut (0 < 1)%nat; [ intro | apply lt_O_Sn ]; assert (H8 := lt_le_trans _ _ _ H7 H6); rewrite H5 in H8; elim (lt_irrefl _ H8).",
                        "VernacExtend",
                        "98f9e167de255e3c21071e45e6a00b71f7cd8847"
                    ]
                },
                {
                    "command": [
                        "pattern eps at 1; rewrite <- Rinv_involutive.",
                        "VernacExtend",
                        "666c626a051beec8777c71f612f14b22c14b03b0"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_lt_contravar.",
                        "VernacExtend",
                        "39f1015e834f9c2b39a61c50e6b9c8cf8a29f32a"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat; [ apply Rinv_0_lt_compat; assumption | assumption ].",
                        "VernacExtend",
                        "3a7855b1a252ef772dbddafb3e711c6847919c9a"
                    ]
                },
                {
                    "command": [
                        "rewrite H3 in H0; assumption.",
                        "VernacExtend",
                        "bae1deeede51c573de148b383d3af6515056863b"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H5 in H; elim (Rlt_irrefl _ H).",
                        "VernacExtend",
                        "616c3b1a3f566a8d1078a2c6e798264affa5f2e1"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (/ eps).",
                        "VernacExtend",
                        "cd6a6c5f7cd4a63d798b8ab928ec1b130992b315"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; assumption.",
                        "VernacExtend",
                        "7c8a6c48f8e12a680ed85ee789a9c10a10ee8701"
                    ]
                },
                {
                    "command": [
                        "rewrite H3 in H0; assumption.",
                        "VernacExtend",
                        "bae1deeede51c573de148b383d3af6515056863b"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with 1%nat; [ apply lt_O_Sn | apply le_max_r ].",
                        "VernacExtend",
                        "77168fdbde4dc984c631656718a1270cee502ce2"
                    ]
                },
                {
                    "command": [
                        "apply le_IZR; left; apply Rlt_trans with (/ eps); [ apply Rinv_0_lt_compat; assumption | assumption ].",
                        "VernacExtend",
                        "316856efd6b3dbdc083a44a9f9fbc38cdb8274ec"
                    ]
                },
                {
                    "command": [
                        "assert (H0 := archimed (/ eps)).",
                        "VernacExtend",
                        "3622310eb30578cf952f52a2406e97a5f6314b48"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros; assumption.",
                        "VernacExtend",
                        "93aaa20e409e093c318ed7f35309abbda4e55e01"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Alembert_cos",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "unfold Un_cv; intros.",
                        "VernacExtend",
                        "d818b162942323e4a80090d71a38ad8ae04fd3d0"
                    ]
                },
                {
                    "command": [
                        "assert (H0 := archimed_cor1 eps H).",
                        "VernacExtend",
                        "701fe75de8df2b9def94135328dcb36a26670912"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros; exists x.",
                        "VernacExtend",
                        "b1672a9ed1508dd87456566a3e3a3ce8c16eaf8b"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite simpl_cos_n; unfold R_dist; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; rewrite Rabs_Rabsolu; rewrite Rabs_Ropp; rewrite Rabs_right.",
                        "VernacExtend",
                        "4fed0b040346e4425ad0c938cdb26f3d87520f3e"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_INR; rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "3fa22169534b1beed81bc2fb26a4958ea67cb9b8"
                    ]
                },
                {
                    "command": [
                        "cut (/ INR (2 * S n) < 1).",
                        "VernacExtend",
                        "d47f46705d520c272498e95b1aac8d41f0349c10"
                    ]
                },
                {
                    "command": [
                        "intro; cut (/ INR (2 * n + 1) < eps).",
                        "VernacExtend",
                        "8464b81a4f420f3329f3c59d5cdf693c95ce8d82"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite <- (Rmult_1_l eps).",
                        "VernacExtend",
                        "0bc36a56f9df71454abd5ce5df648bcafaad2df6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_gt_0_lt_compat; try assumption.",
                        "VernacExtend",
                        "2989629cb78e709932759b33ea103ec46c1155ac"
                    ]
                },
                {
                    "command": [
                        "change (0 < / INR (2 * n + 1)); apply Rinv_0_lt_compat; apply lt_INR_0.",
                        "VernacExtend",
                        "1f4951e7a515504d9a505f8ad125c9512c954a54"
                    ]
                },
                {
                    "command": [
                        "replace (2 * n + 1)%nat with (S (2 * n)); [ apply lt_O_Sn | ring ].",
                        "VernacExtend",
                        "b367689d116ed1bc2d0cb723b894c97f048e4c86"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_0_1.",
                        "VernacExtend",
                        "c3f675388bf844e0740197fd71afa66e5eef091d"
                    ]
                },
                {
                    "command": [
                        "cut (x < 2 * n + 1)%nat.",
                        "VernacExtend",
                        "31d2385f126f7166d0b3d247bede46827181570d"
                    ]
                },
                {
                    "command": [
                        "intro; assert (H5 := lt_INR _ _ H4).",
                        "VernacExtend",
                        "5e40f8cd16806badcdde9f577e20a705d99c3948"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (/ INR x).",
                        "VernacExtend",
                        "196ebde2dd37d2afe7fe83dcf0b500b2c478cf36"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_lt_contravar.",
                        "VernacExtend",
                        "39f1015e834f9c2b39a61c50e6b9c8cf8a29f32a"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "apply lt_INR_0.",
                        "VernacExtend",
                        "a1a2187f5724bf22725bfafeaf648a30dcb1f835"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros; assumption.",
                        "VernacExtend",
                        "cc00e4116d0aefea281577ea01f1c22b86beb4e0"
                    ]
                },
                {
                    "command": [
                        "apply lt_INR_0; replace (2 * n + 1)%nat with (S (2 * n)); [ apply lt_O_Sn | ring ].",
                        "VernacExtend",
                        "8cfb6c225dc33c63ee4430dc98d3b16f876313ac"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros; assumption.",
                        "VernacExtend",
                        "cc00e4116d0aefea281577ea01f1c22b86beb4e0"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (S n).",
                        "VernacExtend",
                        "5fec0a44392331de58bc37930bfc25efcf1ab543"
                    ]
                },
                {
                    "command": [
                        "unfold ge in H2; apply le_lt_n_Sm; assumption.",
                        "VernacExtend",
                        "d7d85d54bb7d1062b09eed7e0e2eb8a8a3decf2e"
                    ]
                },
                {
                    "command": [
                        "replace (2 * n + 1)%nat with (S (2 * n)) by ring.",
                        "VernacExtend",
                        "2838152e5e2bcb76e3328871deb204bc4120e225"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S; apply le_n_2n.",
                        "VernacExtend",
                        "75bc18471efd66f259a53ebe8ca159a77bb482ae"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (INR (2 * S n)).",
                        "VernacExtend",
                        "2aa6c9338de89978ce3361cb52713a818437d32f"
                    ]
                },
                {
                    "command": [
                        "apply lt_INR_0; replace (2 * S n)%nat with (S (S (2 * n))).",
                        "VernacExtend",
                        "b57de6e56002cb86f7443cb00f360b2af74ca478"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_Sn.",
                        "VernacExtend",
                        "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
                    ]
                },
                {
                    "command": [
                        "replace (S n) with (n + 1)%nat by ring.",
                        "VernacExtend",
                        "bcd699a55a2e7483177ccaa397d489cd995f668d"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "2ca74255a63c294f9442d956f32a2e3784636efb"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "apply (lt_INR 1).",
                        "VernacExtend",
                        "8398fda7d44df13e6bbde31a1080b92043325f58"
                    ]
                },
                {
                    "command": [
                        "replace (2 * S n)%nat with (S (S (2 * n))).",
                        "VernacExtend",
                        "0e979a91e133bbb49e0c693ceaa8b83423f512bf"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_S; apply lt_O_Sn.",
                        "VernacExtend",
                        "1fcedea1516f721bb01bcc6754efbe06ee0b354a"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "replace (2 * n + 1)%nat with (S (2 * n)); [ apply not_O_INR; discriminate | ring ].",
                        "VernacExtend",
                        "1e2f0413c81833e0c4295b1aab929e3816f19726"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; left; apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "9aca125a862c4aeaf2f8b7a5d7b68f1d6c559062"
                    ]
                },
                {
                    "command": [
                        "apply lt_INR_0.",
                        "VernacExtend",
                        "a1a2187f5724bf22725bfafeaf648a30dcb1f835"
                    ]
                },
                {
                    "command": [
                        "replace (2 * S n * (2 * n + 1))%nat with (2 + (4 * (n * n) + 6 * n))%nat by ring.",
                        "VernacExtend",
                        "f67494cf5ba40ae6a94c7d3171b16d80f9f7e646"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_Sn.",
                        "VernacExtend",
                        "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cosn_no_R0",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "intro; unfold cos_n; unfold Rdiv; apply prod_neq_R0.",
                        "VernacExtend",
                        "97f8c3b4746b4921ed1ba5519f629128cb0ceac1"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero; discrR.",
                        "VernacExtend",
                        "174877181c67a09e2e68285a2475567f220a254e"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_neq_0_compat.",
                        "VernacExtend",
                        "f2f8681c7dbf9047cfba9a279da441217a933f75"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exist_cos",
            "line_nb": 162,
            "steps": [
                {
                    "command": [
                        "intro; generalize (Alembert_C3 cos_n x cosn_no_R0 Alembert_cos).",
                        "VernacExtend",
                        "ebaa936d37d33a80f8b94569d1bbdac1cdac7837"
                    ]
                },
                {
                    "command": [
                        "unfold Pser, cos_in; trivial.",
                        "VernacExtend",
                        "4086e703e628f28e926e098fff274ac4f1de8cf8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "simpl_sin_n",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "intro; unfold sin_n; replace (S n) with (n + 1)%nat; [ idtac | ring ].",
                        "VernacExtend",
                        "373e1e30d77d8ff6a60059b94bbdaf53b7306f07"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_add; unfold Rdiv; rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "03201033f4a9cf31febc83b51825fb515c590578"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_involutive.",
                        "VernacExtend",
                        "422941d9f5ab1f835c6b4368750431aa4fff0509"
                    ]
                },
                {
                    "command": [
                        "replace ((-1) ^ n * (-1) ^ 1 * / INR (fact (2 * (n + 1) + 1)) * (/ (-1) ^ n * INR (fact (2 * n + 1)))) with ((-1) ^ n * / (-1) ^ n * / INR (fact (2 * (n + 1) + 1)) * INR (fact (2 * n + 1)) * (-1) ^ 1); [ idtac | ring ].",
                        "VernacExtend",
                        "29b46562c99fe2320b3b194c2cb383174aa2392f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "2ca74255a63c294f9442d956f32a2e3784636efb"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l; unfold pow; rewrite Rmult_1_r; replace (2 * (n + 1) + 1)%nat with (S (S (2 * n + 1))).",
                        "VernacExtend",
                        "85ee9541069fbbe82cc41c6b7ce33843d39e319d"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite fact_simpl; do 2 rewrite mult_INR; repeat rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "241739d3d58f26c8300f1da430792fad7ec5abe2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_comm (-1)); repeat rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "a2ff41cd3c5ff12e293728f873473eff473a05d5"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; replace (S (2 * n + 1)) with (2 * (n + 1))%nat.",
                        "VernacExtend",
                        "7eae1eaeb785aa6c68ecc127f68ec1bbef5751bc"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_INR; repeat rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "64b4b737607745bcbcd4dd3f9252e348f631bf07"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "replace (n + 1)%nat with (S n); [ apply not_O_INR; discriminate | ring ].",
                        "VernacExtend",
                        "2a6bdd4b799978bde5b44ea12159e11262ccb2ab"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "apply prod_neq_R0.",
                        "VernacExtend",
                        "4e401b99cc3c24b61ca502aa7107071c427501ea"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "replace (n + 1)%nat with (S n); [ apply not_O_INR; discriminate | ring ].",
                        "VernacExtend",
                        "2a6bdd4b799978bde5b44ea12159e11262ccb2ab"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "replace (n + 1)%nat with (S n); [ apply not_O_INR; discriminate | ring ].",
                        "VernacExtend",
                        "2a6bdd4b799978bde5b44ea12159e11262ccb2ab"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_plus_distr_l; cut (forall n:nat, S n = (n + 1)%nat).",
                        "VernacExtend",
                        "d0d7b55e501e28d98a7168fe9d1375ed5d0adfa0"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite (H (2 * n + 1)%nat).",
                        "VernacExtend",
                        "6509b227bcaf524cdfade56cffb1a956e4af17dd"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "intros; ring.",
                        "VernacExtend",
                        "a0e0ba17c737405b1d4c2a120d3717441df76616"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "apply prod_neq_R0; [ apply not_O_INR; discriminate | apply INR_fact_neq_0 ].",
                        "VernacExtend",
                        "10e8ff097b1cf0335576b76db5560167216dc18f"
                    ]
                },
                {
                    "command": [
                        "cut (forall n:nat, S (S n) = (n + 2)%nat); [ intros; rewrite (H (2 * n + 1)%nat); ring | intros; ring ].",
                        "VernacExtend",
                        "f8dc56ccb422262fb1e70aa324202a185bff7ad5"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero; discrR.",
                        "VernacExtend",
                        "174877181c67a09e2e68285a2475567f220a254e"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero; discrR.",
                        "VernacExtend",
                        "174877181c67a09e2e68285a2475567f220a254e"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_neq_0_compat; apply INR_fact_neq_0.",
                        "VernacExtend",
                        "1742a1970e2bd84f0fd2145213af0978df013d33"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Alembert_sin",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "unfold Un_cv; intros; assert (H0 := archimed_cor1 eps H).",
                        "VernacExtend",
                        "e36dd3447d35b078028f55d9e0b15aabf80ae02a"
                    ]
                },
                {
                    "command": [
                        "elim H0; intros; exists x.",
                        "VernacExtend",
                        "b1672a9ed1508dd87456566a3e3a3ce8c16eaf8b"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite simpl_sin_n; unfold R_dist; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; rewrite Rabs_Rabsolu; rewrite Rabs_Ropp; rewrite Rabs_right.",
                        "VernacExtend",
                        "cb49c763f07a5c8ec9e4a3c7db01bada88c9a115"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_INR; rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "3fa22169534b1beed81bc2fb26a4958ea67cb9b8"
                    ]
                },
                {
                    "command": [
                        "cut (/ INR (2 * S n) < 1).",
                        "VernacExtend",
                        "d47f46705d520c272498e95b1aac8d41f0349c10"
                    ]
                },
                {
                    "command": [
                        "intro; cut (/ INR (2 * S n + 1) < eps).",
                        "VernacExtend",
                        "577a6f868038b2ed59f6a7047e0443c65f8446a0"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite <- (Rmult_1_l eps); rewrite (Rmult_comm (/ INR (2 * S n + 1))); apply Rmult_gt_0_lt_compat; try assumption.",
                        "VernacExtend",
                        "2fbe97290683b423bd99d995f4e8b55b211669df"
                    ]
                },
                {
                    "command": [
                        "change (0 < / INR (2 * S n + 1)); apply Rinv_0_lt_compat; apply lt_INR_0; replace (2 * S n + 1)%nat with (S (2 * S n)); [ apply lt_O_Sn | ring ].",
                        "VernacExtend",
                        "74c0cbfa89b7c05fb41113192d2c463ac6b39811"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_0_1.",
                        "VernacExtend",
                        "c3f675388bf844e0740197fd71afa66e5eef091d"
                    ]
                },
                {
                    "command": [
                        "cut (x < 2 * S n + 1)%nat.",
                        "VernacExtend",
                        "1051661846619c65d16feba26a8c5cd7d5359096"
                    ]
                },
                {
                    "command": [
                        "intro; assert (H5 := lt_INR _ _ H4); apply Rlt_trans with (/ INR x).",
                        "VernacExtend",
                        "18b9c30cec4270ebca53a069eff69a5719b7d026"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_lt_contravar.",
                        "VernacExtend",
                        "39f1015e834f9c2b39a61c50e6b9c8cf8a29f32a"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "apply lt_INR_0; elim H1; intros; assumption.",
                        "VernacExtend",
                        "0be9ceb96806f8d25ea9e7071c492c03e8046869"
                    ]
                },
                {
                    "command": [
                        "apply lt_INR_0; replace (2 * S n + 1)%nat with (S (2 * S n)); [ apply lt_O_Sn | ring ].",
                        "VernacExtend",
                        "18e495cbc88b2d73589449eaeb79d3f24f04d412"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros; assumption.",
                        "VernacExtend",
                        "cc00e4116d0aefea281577ea01f1c22b86beb4e0"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (S n).",
                        "VernacExtend",
                        "5fec0a44392331de58bc37930bfc25efcf1ab543"
                    ]
                },
                {
                    "command": [
                        "unfold ge in H2; apply le_lt_n_Sm; assumption.",
                        "VernacExtend",
                        "d7d85d54bb7d1062b09eed7e0e2eb8a8a3decf2e"
                    ]
                },
                {
                    "command": [
                        "replace (2 * S n + 1)%nat with (S (2 * S n)) by ring.",
                        "VernacExtend",
                        "f59d30aea0c155543886542b6e87d12c3424af13"
                    ]
                },
                {
                    "command": [
                        "apply le_S; apply le_n_2n.",
                        "VernacExtend",
                        "78aaed42b2064e8cdb00224641bb1d823dadf0b0"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (INR (2 * S n)).",
                        "VernacExtend",
                        "2aa6c9338de89978ce3361cb52713a818437d32f"
                    ]
                },
                {
                    "command": [
                        "apply lt_INR_0; replace (2 * S n)%nat with (S (S (2 * n))); [ apply lt_O_Sn | ring ].",
                        "VernacExtend",
                        "f97850d6e853046ea961501512c0ad6f4fbb3a1c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "2ca74255a63c294f9442d956f32a2e3784636efb"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "apply (lt_INR 1).",
                        "VernacExtend",
                        "8398fda7d44df13e6bbde31a1080b92043325f58"
                    ]
                },
                {
                    "command": [
                        "replace (2 * S n)%nat with (S (S (2 * n))).",
                        "VernacExtend",
                        "0e979a91e133bbb49e0c693ceaa8b83423f512bf"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_S; apply lt_O_Sn.",
                        "VernacExtend",
                        "1fcedea1516f721bb01bcc6754efbe06ee0b354a"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "left; apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "64bd47bec4cb8a2d680f2c36fbfbd1b81db97d1a"
                    ]
                },
                {
                    "command": [
                        "apply lt_INR_0.",
                        "VernacExtend",
                        "a1a2187f5724bf22725bfafeaf648a30dcb1f835"
                    ]
                },
                {
                    "command": [
                        "replace ((2 * S n + 1) * (2 * S n))%nat with (6 + (4 * (n * n) + 10 * n))%nat by ring.",
                        "VernacExtend",
                        "18b29dd8bee24f019df845be37db966b9a287d25"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_Sn.",
                        "VernacExtend",
                        "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sin_no_R0",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "intro; unfold sin_n; unfold Rdiv; apply prod_neq_R0.",
                        "VernacExtend",
                        "4a509b6a64a3438739d6a61d35ca63103da944c8"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero; discrR.",
                        "VernacExtend",
                        "174877181c67a09e2e68285a2475567f220a254e"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_neq_0_compat; apply INR_fact_neq_0.",
                        "VernacExtend",
                        "1742a1970e2bd84f0fd2145213af0978df013d33"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exist_sin",
            "line_nb": 247,
            "steps": [
                {
                    "command": [
                        "intro; generalize (Alembert_C3 sin_n x sin_no_R0 Alembert_sin).",
                        "VernacExtend",
                        "3bc22a718d2866e1d0229cbc6abb77c251774047"
                    ]
                },
                {
                    "command": [
                        "unfold Pser, sin_n; trivial.",
                        "VernacExtend",
                        "0542e680bb9fdfbd83fe71b65eb2d5e156fede3f"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "cos_sym",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "intros; unfold cos; replace (Rsqr (- x)) with (Rsqr x).",
                        "VernacExtend",
                        "3a57d1b8a81164cbaf0ddc9ce9cf17c040c87b29"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply Rsqr_neg.",
                        "VernacExtend",
                        "5dacfd5b9f2bf3987380c07d13113f83e1131a0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sin_antisym",
            "line_nb": 257,
            "steps": [
                {
                    "command": [
                        "intro; unfold sin; replace (Rsqr (- x)) with (Rsqr x); [ idtac | apply Rsqr_neg ].",
                        "VernacExtend",
                        "1a96041f603b6fc24028516c56ed5b2da09a00bb"
                    ]
                },
                {
                    "command": [
                        "case (exist_sin (Rsqr x)); intros; ring.",
                        "VernacExtend",
                        "9c0b8e252fda82742245dfba10ca04f1fd133edd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sin_0",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "unfold sin; case (exist_sin (Rsqr 0)).",
                        "VernacExtend",
                        "1db59e5ce0b1437654391057d66e8ad8e91f02f2"
                    ]
                },
                {
                    "command": [
                        "intros; ring.",
                        "VernacExtend",
                        "a0e0ba17c737405b1d4c2a120d3717441df76616"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exist_cos0",
            "line_nb": 265,
            "steps": [
                {
                    "command": [
                        "exists 1.",
                        "VernacExtend",
                        "18eb310858be5acae7304d0d9ed33063568db310"
                    ]
                },
                {
                    "command": [
                        "unfold cos_in; unfold infinite_sum; intros; exists 0%nat.",
                        "VernacExtend",
                        "367c2a78aab0309b5227a9c6eeadd4d13f288626"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist.",
                        "VernacExtend",
                        "9d14879a55d02ad54565968e31b64da7aeb66d97"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "unfold cos_n; simpl.",
                        "VernacExtend",
                        "7c38035d8edc3e3e7570d5e65a1a4c00a2b2ce62"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite Rinv_1.",
                        "VernacExtend",
                        "0f5a39a3484074cabdf25501bc7598fafc00fe9b"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d057c98120a170d66059b76e7294aa10d6c2070c"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus; rewrite Rplus_opp_r; rewrite Rabs_R0; assumption.",
                        "VernacExtend",
                        "c1de84b8ec8a6c422226e5ca95d3db00e63bd56e"
                    ]
                },
                {
                    "command": [
                        "rewrite tech5.",
                        "VernacExtend",
                        "9868999d015d8d25987acdadb308fadae9d59e4a"
                    ]
                },
                {
                    "command": [
                        "replace (cos_n (S n) * 0 ^ S n) with 0.",
                        "VernacExtend",
                        "c9ae42aa43cac4db18846f30ceff7d6437168f11"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r.",
                        "VernacExtend",
                        "d5c1fdd9d1c31f6ede268b5fbee697b051ea4fe2"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn; unfold ge; apply le_O_n.",
                        "VernacExtend",
                        "1d1e2b66dee0929c21a58edaa0d5cb55bd3e3746"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}