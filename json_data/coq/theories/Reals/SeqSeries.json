{
    "filename": "theories/Reals/SeqSeries.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Rbase.",
            "VernacRequire",
            "c0a8d81b170d4ed8309a8632a3cac35f6cba016a"
        ],
        [
            "Require Import Rfunctions.",
            "VernacRequire",
            "e0ba64ca9fd07e0fc91c59b7bf007fb29a662a86"
        ],
        [
            "Require Import Max.",
            "VernacRequire",
            "163f8b04f9c5ff0ff8fe9ce4c762873ab613a3fa"
        ],
        [
            "Require Export Rseries.",
            "VernacRequire",
            "099015ecf8259341e9e44fa468420e7e154e38c0"
        ],
        [
            "Require Export SeqProp.",
            "VernacRequire",
            "b3034a4d5641f87755c333ff9e6aa9aa15fa37b3"
        ],
        [
            "Require Export Rcomplete.",
            "VernacRequire",
            "ce33dcd552dcea59609af71a36284d646af7079b"
        ],
        [
            "Require Export PartSum.",
            "VernacRequire",
            "8be676057fe19d6f78dc0975ac63b6d537f8e558"
        ],
        [
            "Require Export AltSeries.",
            "VernacRequire",
            "6f2835d410c2c976f7a8c1b4b49342c264a6fe70"
        ],
        [
            "Require Export Binomial.",
            "VernacRequire",
            "a32e21c5eb8f9f7499402679ab53bb170b70f6ad"
        ],
        [
            "Require Export Rsigma.",
            "VernacRequire",
            "9ab7f21d3c2d0c6738ce9f5dfd05b275333f098c"
        ],
        [
            "Require Export Rprod.",
            "VernacRequire",
            "e089fed9d28f489e1660f92550c437e3b9b5c889"
        ],
        [
            "Require Export Cauchy_prod.",
            "VernacRequire",
            "51f7cba4d6c16905b6ba29fb16fd431151aa93d6"
        ],
        [
            "Require Export Alembert.",
            "VernacRequire",
            "277a920d94d508105af8f74b179b8402bb357387"
        ],
        [
            "Local Open Scope R_scope.",
            "VernacOpenCloseScope",
            "b005c72bb3303e031b42be04be04c87c005faa38"
        ],
        [
            "Lemma sum_maj1 : forall (fn:nat -> R -> R) (An:nat -> R) (x l1 l2:R) (N:nat), Un_cv (fun n:nat => SP fn n x) l1 -> Un_cv (fun n:nat => sum_f_R0 An n) l2 -> (forall n:nat, Rabs (fn n x) <= An n) -> Rabs (l1 - SP fn N x) <= l2 - sum_f_R0 An N.",
            "VernacStartTheoremProof",
            "d91245ab9704929da020202af513f8314e8c880b"
        ],
        [
            "intros; cut { l:R | Un_cv (fun n => sum_f_R0 (fun l => fn (S N + l)%nat x) n) l }.",
            "VernacExtend",
            "4452367a75ab2226915b0ba51044f9396ef331ff"
        ],
        [
            "intro X; cut { l:R | Un_cv (fun n => sum_f_R0 (fun l => An (S N + l)%nat) n) l }.",
            "VernacExtend",
            "40ac1912c3f5d7b8323d7b97d02e3f7e9a1f1462"
        ],
        [
            "intro X0; elim X; intros l1N H2.",
            "VernacExtend",
            "8543b34008160912eeb6bbdaf4d4ec3cfb67f07c"
        ],
        [
            "elim X0; intros l2N H3.",
            "VernacExtend",
            "cee26114cde338659e9d216f94f3492a26b46d01"
        ],
        [
            "cut (l1 - SP fn N x = l1N).",
            "VernacExtend",
            "02028b34a9272e086fffb4b5806e02905a9f79bd"
        ],
        [
            "intro; cut (l2 - sum_f_R0 An N = l2N).",
            "VernacExtend",
            "b8e8bc6392e1281a5f729fba16605633c7f8f259"
        ],
        [
            "intro; rewrite H4; rewrite H5.",
            "VernacExtend",
            "000b6a2756cdd72d99ec9003e24311d586f02d86"
        ],
        [
            "apply sum_cv_maj with (fun l:nat => An (S N + l)%nat) (fun (l:nat) (x:R) => fn (S N + l)%nat x) x.",
            "VernacExtend",
            "0900be016b957742a7d9f09c8c145d177073044c"
        ],
        [
            "unfold SP; apply H2.",
            "VernacExtend",
            "09a37379c147f9f31cb8be607cf4b5c853ced36a"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "intros; apply H1.",
            "VernacExtend",
            "312b6712f38e160adb0dc9f9059cdcab75ee81df"
        ],
        [
            "symmetry ; eapply UL_sequence.",
            "VernacExtend",
            "f2988fc92e3da471a1c08d44f1918dc9303214f9"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "unfold Un_cv in H0; unfold Un_cv; intros; elim (H0 eps H5); intros N0 H6.",
            "VernacExtend",
            "af9a2a879c113193e85712160976878267d08bb4"
        ],
        [
            "unfold R_dist in H6; exists N0; intros.",
            "VernacExtend",
            "e68532d982ffd7b0e86fc2cda4481b296cbaefd5"
        ],
        [
            "unfold R_dist; replace (sum_f_R0 (fun l:nat => An (S N + l)%nat) n - (l2 - sum_f_R0 An N)) with (sum_f_R0 An N + sum_f_R0 (fun l:nat => An (S N + l)%nat) n - l2); [ idtac | ring ].",
            "VernacExtend",
            "0d14c41c247ca6b45419bc3574a0517a6f46facc"
        ],
        [
            "replace (sum_f_R0 An N + sum_f_R0 (fun l:nat => An (S N + l)%nat) n) with (sum_f_R0 An (S (N + n))).",
            "VernacExtend",
            "ed263d2cfc5f2254cea75d4b28f50cd27e01349a"
        ],
        [
            "apply H6; unfold ge; apply le_trans with n.",
            "VernacExtend",
            "e8dc5f14af607ac7d08f57cb85f116961f13c0c2"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply le_trans with (N + n)%nat.",
            "VernacExtend",
            "8ec7bd9c46fc91a78be148d176013383584ecb49"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "apply le_n_Sn.",
            "VernacExtend",
            "7889648199cacb866ef42ba6b4c4192f713b44f4"
        ],
        [
            "cut (0 <= N)%nat.",
            "VernacExtend",
            "39ac9cf49f3c6f052d775c77fb680dec4164f5c2"
        ],
        [
            "cut (N < S (N + n))%nat.",
            "VernacExtend",
            "c9dde05fe59903aec19567651b17fad831b1355c"
        ],
        [
            "intros; assert (H10 := sigma_split An H9 H8).",
            "VernacExtend",
            "3b6be08df7e91d69b7b9bad3d1b290196c376b21"
        ],
        [
            "unfold sigma in H10.",
            "VernacExtend",
            "3cf3979e48db6098b305eeb5a68072f4ac587f43"
        ],
        [
            "do 2 rewrite <- minus_n_O in H10.",
            "VernacExtend",
            "e2f0779c1b25ccb400250939b4858823fa00460b"
        ],
        [
            "replace (sum_f_R0 An (S (N + n))) with (sum_f_R0 (fun k:nat => An (0 + k)%nat) (S (N + n))).",
            "VernacExtend",
            "52a185014e56e98f4cc3aa4297125d6f94c5bae2"
        ],
        [
            "replace (sum_f_R0 An N) with (sum_f_R0 (fun k:nat => An (0 + k)%nat) N).",
            "VernacExtend",
            "364835b14a0e9ad97e3c56343b62ec9c47060626"
        ],
        [
            "cut ((S (N + n) - S N)%nat = n).",
            "VernacExtend",
            "0c18b8eddcf1268b7fc45f08c5a95937359b3481"
        ],
        [
            "intro; rewrite H11 in H10.",
            "VernacExtend",
            "696c8fe72203220c7f48f942b78d09423118702e"
        ],
        [
            "apply H10.",
            "VernacExtend",
            "169c3dd7a02593ce4f62696429eb3c1035f98388"
        ],
        [
            "apply INR_eq; rewrite minus_INR.",
            "VernacExtend",
            "25698c3a4da84ad9f290c4488878edb103723110"
        ],
        [
            "do 2 rewrite S_INR; rewrite plus_INR; ring.",
            "VernacExtend",
            "e27955581433e879411a82a2ede0896fb4812486"
        ],
        [
            "apply le_n_S; apply le_plus_l.",
            "VernacExtend",
            "20f6a81d8a533e10f0a5fc3c70bd07c3063732c7"
        ],
        [
            "apply sum_eq; intros.",
            "VernacExtend",
            "507f6828620591e6e18a46dcd737cd32eff30125"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply sum_eq; intros.",
            "VernacExtend",
            "507f6828620591e6e18a46dcd737cd32eff30125"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply le_lt_n_Sm; apply le_plus_l.",
            "VernacExtend",
            "227fd22785e04ef1c9cc217f5f430e5cff045bb1"
        ],
        [
            "apply le_O_n.",
            "VernacExtend",
            "7fa25714b3e362fc6548cec817a7c173238f4970"
        ],
        [
            "symmetry ; eapply UL_sequence.",
            "VernacExtend",
            "f2988fc92e3da471a1c08d44f1918dc9303214f9"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "unfold Un_cv in H; unfold Un_cv; intros.",
            "VernacExtend",
            "30a3b8790878d9129f1fd279e989a140483faeba"
        ],
        [
            "elim (H eps H4); intros N0 H5.",
            "VernacExtend",
            "e44e584e9dd076e399ad762c183890a11744ccbd"
        ],
        [
            "unfold R_dist in H5; exists N0; intros.",
            "VernacExtend",
            "82b348e2b1e3357b24c7e119e828fb1daceff601"
        ],
        [
            "unfold R_dist, SP; replace (sum_f_R0 (fun l:nat => fn (S N + l)%nat x) n - (l1 - sum_f_R0 (fun k:nat => fn k x) N)) with (sum_f_R0 (fun k:nat => fn k x) N + sum_f_R0 (fun l:nat => fn (S N + l)%nat x) n - l1); [ idtac | ring ].",
            "VernacExtend",
            "9c4b948eaea69c894ebfac34b66c1d2ffe899540"
        ],
        [
            "replace (sum_f_R0 (fun k:nat => fn k x) N + sum_f_R0 (fun l:nat => fn (S N + l)%nat x) n) with (sum_f_R0 (fun k:nat => fn k x) (S (N + n))).",
            "VernacExtend",
            "2a7f7e12200bf47b61fe1cc1da60dee25ee1bde5"
        ],
        [
            "unfold SP in H5; apply H5; unfold ge; apply le_trans with n.",
            "VernacExtend",
            "f572e87d1ebd9da0d3c8301df621de4a1bf0e633"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply le_trans with (N + n)%nat.",
            "VernacExtend",
            "8ec7bd9c46fc91a78be148d176013383584ecb49"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "apply le_n_Sn.",
            "VernacExtend",
            "7889648199cacb866ef42ba6b4c4192f713b44f4"
        ],
        [
            "cut (0 <= N)%nat.",
            "VernacExtend",
            "39ac9cf49f3c6f052d775c77fb680dec4164f5c2"
        ],
        [
            "cut (N < S (N + n))%nat.",
            "VernacExtend",
            "c9dde05fe59903aec19567651b17fad831b1355c"
        ],
        [
            "intros; assert (H9 := sigma_split (fun k:nat => fn k x) H8 H7).",
            "VernacExtend",
            "08b7ec7fa875c38b11ee946d3d4a15be8a8a55e5"
        ],
        [
            "unfold sigma in H9.",
            "VernacExtend",
            "a999aad1d3b1ea3b9a696e4768c982f3659a6d8e"
        ],
        [
            "do 2 rewrite <- minus_n_O in H9.",
            "VernacExtend",
            "c68bb3a6894a55c6948890770b447c0072344844"
        ],
        [
            "replace (sum_f_R0 (fun k:nat => fn k x) (S (N + n))) with (sum_f_R0 (fun k:nat => fn (0 + k)%nat x) (S (N + n))).",
            "VernacExtend",
            "2abb1f033982357ea7efbf56b1e63d1628218d23"
        ],
        [
            "replace (sum_f_R0 (fun k:nat => fn k x) N) with (sum_f_R0 (fun k:nat => fn (0 + k)%nat x) N).",
            "VernacExtend",
            "b13ab0c0b766c8393c7befecc9aabbd468749892"
        ],
        [
            "cut ((S (N + n) - S N)%nat = n).",
            "VernacExtend",
            "0c18b8eddcf1268b7fc45f08c5a95937359b3481"
        ],
        [
            "intro; rewrite H10 in H9.",
            "VernacExtend",
            "e4b2b3290be5c87a7f7e61ed31dcb4b6a461347d"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply INR_eq; rewrite minus_INR.",
            "VernacExtend",
            "25698c3a4da84ad9f290c4488878edb103723110"
        ],
        [
            "do 2 rewrite S_INR; rewrite plus_INR; ring.",
            "VernacExtend",
            "e27955581433e879411a82a2ede0896fb4812486"
        ],
        [
            "apply le_n_S; apply le_plus_l.",
            "VernacExtend",
            "20f6a81d8a533e10f0a5fc3c70bd07c3063732c7"
        ],
        [
            "apply sum_eq; intros.",
            "VernacExtend",
            "507f6828620591e6e18a46dcd737cd32eff30125"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply sum_eq; intros.",
            "VernacExtend",
            "507f6828620591e6e18a46dcd737cd32eff30125"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply le_lt_n_Sm.",
            "VernacExtend",
            "f92329fc5a21d6fff46401efc5d5a45be946b12c"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "apply le_O_n.",
            "VernacExtend",
            "7fa25714b3e362fc6548cec817a7c173238f4970"
        ],
        [
            "exists (l2 - sum_f_R0 An N).",
            "VernacExtend",
            "30b6aae03420e39ff6aa661e0bd26451adbb8016"
        ],
        [
            "unfold Un_cv in H0; unfold Un_cv; intros.",
            "VernacExtend",
            "144df048859d1028fdb4918a4713f5bc24ca0295"
        ],
        [
            "elim (H0 eps H2); intros N0 H3.",
            "VernacExtend",
            "54ee9589b6ec0515cbbdde4aa5226514eec395af"
        ],
        [
            "unfold R_dist in H3; exists N0; intros.",
            "VernacExtend",
            "8dbb430f60931ef0104e852c9a992bbf0638a406"
        ],
        [
            "unfold R_dist; replace (sum_f_R0 (fun l:nat => An (S N + l)%nat) n - (l2 - sum_f_R0 An N)) with (sum_f_R0 An N + sum_f_R0 (fun l:nat => An (S N + l)%nat) n - l2); [ idtac | ring ].",
            "VernacExtend",
            "0d14c41c247ca6b45419bc3574a0517a6f46facc"
        ],
        [
            "replace (sum_f_R0 An N + sum_f_R0 (fun l:nat => An (S N + l)%nat) n) with (sum_f_R0 An (S (N + n))).",
            "VernacExtend",
            "ed263d2cfc5f2254cea75d4b28f50cd27e01349a"
        ],
        [
            "apply H3; unfold ge; apply le_trans with n.",
            "VernacExtend",
            "5ef1be69099fc9a03c8b614b33659c04aee8f3a7"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply le_trans with (N + n)%nat.",
            "VernacExtend",
            "8ec7bd9c46fc91a78be148d176013383584ecb49"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "apply le_n_Sn.",
            "VernacExtend",
            "7889648199cacb866ef42ba6b4c4192f713b44f4"
        ],
        [
            "cut (0 <= N)%nat.",
            "VernacExtend",
            "39ac9cf49f3c6f052d775c77fb680dec4164f5c2"
        ],
        [
            "cut (N < S (N + n))%nat.",
            "VernacExtend",
            "c9dde05fe59903aec19567651b17fad831b1355c"
        ],
        [
            "intros; assert (H7 := sigma_split An H6 H5).",
            "VernacExtend",
            "72b883a4ce5f7051e0f9f56a68c9551cd1d94d13"
        ],
        [
            "unfold sigma in H7.",
            "VernacExtend",
            "023ab166ade0cbb65c0aebbe0f4f8b2881cacbaf"
        ],
        [
            "do 2 rewrite <- minus_n_O in H7.",
            "VernacExtend",
            "893b2365aa62299bf568fce138b95841e80e0add"
        ],
        [
            "replace (sum_f_R0 An (S (N + n))) with (sum_f_R0 (fun k:nat => An (0 + k)%nat) (S (N + n))).",
            "VernacExtend",
            "52a185014e56e98f4cc3aa4297125d6f94c5bae2"
        ],
        [
            "replace (sum_f_R0 An N) with (sum_f_R0 (fun k:nat => An (0 + k)%nat) N).",
            "VernacExtend",
            "364835b14a0e9ad97e3c56343b62ec9c47060626"
        ],
        [
            "cut ((S (N + n) - S N)%nat = n).",
            "VernacExtend",
            "0c18b8eddcf1268b7fc45f08c5a95937359b3481"
        ],
        [
            "intro; rewrite H8 in H7.",
            "VernacExtend",
            "2a1d187e98c245c1a44483b3ba313fc4bf3e887e"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply INR_eq; rewrite minus_INR.",
            "VernacExtend",
            "25698c3a4da84ad9f290c4488878edb103723110"
        ],
        [
            "do 2 rewrite S_INR; rewrite plus_INR; ring.",
            "VernacExtend",
            "e27955581433e879411a82a2ede0896fb4812486"
        ],
        [
            "apply le_n_S; apply le_plus_l.",
            "VernacExtend",
            "20f6a81d8a533e10f0a5fc3c70bd07c3063732c7"
        ],
        [
            "apply sum_eq; intros.",
            "VernacExtend",
            "507f6828620591e6e18a46dcd737cd32eff30125"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply sum_eq; intros.",
            "VernacExtend",
            "507f6828620591e6e18a46dcd737cd32eff30125"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply le_lt_n_Sm.",
            "VernacExtend",
            "f92329fc5a21d6fff46401efc5d5a45be946b12c"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "apply le_O_n.",
            "VernacExtend",
            "7fa25714b3e362fc6548cec817a7c173238f4970"
        ],
        [
            "exists (l1 - SP fn N x).",
            "VernacExtend",
            "2a310e79bac9e0729ede63c2cebab19f6334f466"
        ],
        [
            "unfold Un_cv in H; unfold Un_cv; intros.",
            "VernacExtend",
            "30a3b8790878d9129f1fd279e989a140483faeba"
        ],
        [
            "elim (H eps H2); intros N0 H3.",
            "VernacExtend",
            "b1c423579d7ca943164dd2efc2b1529130cd7c07"
        ],
        [
            "unfold R_dist in H3; exists N0; intros.",
            "VernacExtend",
            "8dbb430f60931ef0104e852c9a992bbf0638a406"
        ],
        [
            "unfold R_dist, SP.",
            "VernacExtend",
            "a975e746f08e774edc6c0f2a1ffde45046c54379"
        ],
        [
            "replace (sum_f_R0 (fun l:nat => fn (S N + l)%nat x) n - (l1 - sum_f_R0 (fun k:nat => fn k x) N)) with (sum_f_R0 (fun k:nat => fn k x) N + sum_f_R0 (fun l:nat => fn (S N + l)%nat x) n - l1); [ idtac | ring ].",
            "VernacExtend",
            "a1c94bc8a47ac7a215991e7ef779232a03ab6148"
        ],
        [
            "replace (sum_f_R0 (fun k:nat => fn k x) N + sum_f_R0 (fun l:nat => fn (S N + l)%nat x) n) with (sum_f_R0 (fun k:nat => fn k x) (S (N + n))).",
            "VernacExtend",
            "2a7f7e12200bf47b61fe1cc1da60dee25ee1bde5"
        ],
        [
            "unfold SP in H3; apply H3.",
            "VernacExtend",
            "0600dcfe3f41bd954bfe78f7bbd66d235e196247"
        ],
        [
            "unfold ge; apply le_trans with n.",
            "VernacExtend",
            "bf970b3455c6e9c3bf954a54ca27cb9a0fade2ea"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "apply le_trans with (N + n)%nat.",
            "VernacExtend",
            "8ec7bd9c46fc91a78be148d176013383584ecb49"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "apply le_n_Sn.",
            "VernacExtend",
            "7889648199cacb866ef42ba6b4c4192f713b44f4"
        ],
        [
            "cut (0 <= N)%nat.",
            "VernacExtend",
            "39ac9cf49f3c6f052d775c77fb680dec4164f5c2"
        ],
        [
            "cut (N < S (N + n))%nat.",
            "VernacExtend",
            "c9dde05fe59903aec19567651b17fad831b1355c"
        ],
        [
            "intros; assert (H7 := sigma_split (fun k:nat => fn k x) H6 H5).",
            "VernacExtend",
            "8d1407dfc7bb8cd9b13f082374e118b22371c893"
        ],
        [
            "unfold sigma in H7.",
            "VernacExtend",
            "023ab166ade0cbb65c0aebbe0f4f8b2881cacbaf"
        ],
        [
            "do 2 rewrite <- minus_n_O in H7.",
            "VernacExtend",
            "893b2365aa62299bf568fce138b95841e80e0add"
        ],
        [
            "replace (sum_f_R0 (fun k:nat => fn k x) (S (N + n))) with (sum_f_R0 (fun k:nat => fn (0 + k)%nat x) (S (N + n))).",
            "VernacExtend",
            "2abb1f033982357ea7efbf56b1e63d1628218d23"
        ],
        [
            "replace (sum_f_R0 (fun k:nat => fn k x) N) with (sum_f_R0 (fun k:nat => fn (0 + k)%nat x) N).",
            "VernacExtend",
            "b13ab0c0b766c8393c7befecc9aabbd468749892"
        ],
        [
            "cut ((S (N + n) - S N)%nat = n).",
            "VernacExtend",
            "0c18b8eddcf1268b7fc45f08c5a95937359b3481"
        ],
        [
            "intro; rewrite H8 in H7.",
            "VernacExtend",
            "2a1d187e98c245c1a44483b3ba313fc4bf3e887e"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply INR_eq; rewrite minus_INR.",
            "VernacExtend",
            "25698c3a4da84ad9f290c4488878edb103723110"
        ],
        [
            "do 2 rewrite S_INR; rewrite plus_INR; ring.",
            "VernacExtend",
            "e27955581433e879411a82a2ede0896fb4812486"
        ],
        [
            "apply le_n_S; apply le_plus_l.",
            "VernacExtend",
            "20f6a81d8a533e10f0a5fc3c70bd07c3063732c7"
        ],
        [
            "apply sum_eq; intros.",
            "VernacExtend",
            "507f6828620591e6e18a46dcd737cd32eff30125"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply sum_eq; intros.",
            "VernacExtend",
            "507f6828620591e6e18a46dcd737cd32eff30125"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply le_lt_n_Sm.",
            "VernacExtend",
            "f92329fc5a21d6fff46401efc5d5a45be946b12c"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "apply le_O_n.",
            "VernacExtend",
            "7fa25714b3e362fc6548cec817a7c173238f4970"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rseries_CV_comp : forall An Bn:nat -> R, (forall n:nat, 0 <= An n <= Bn n) -> { l:R | Un_cv (fun N:nat => sum_f_R0 Bn N) l } -> { l:R | Un_cv (fun N:nat => sum_f_R0 An N) l }.",
            "VernacStartTheoremProof",
            "cc432d2a93035a86832de38ec922e459ee77e7b2"
        ],
        [
            "intros An Bn H X; apply cv_cauchy_2.",
            "VernacExtend",
            "f900fb18dd9b00289848f9478edef233274af0c9"
        ],
        [
            "assert (H0 := cv_cauchy_1 _ X).",
            "VernacExtend",
            "c78b6d38a215a135c0c4884f99da5e0fd859965f"
        ],
        [
            "unfold Cauchy_crit_series; unfold Cauchy_crit.",
            "VernacExtend",
            "23ef85f5e43536b79eb7d529d23962b4b49f1cf0"
        ],
        [
            "intros; elim (H0 eps H1); intros.",
            "VernacExtend",
            "ffc5d9ecc4912eb622da966c504157c4b6500c16"
        ],
        [
            "exists x; intros.",
            "VernacExtend",
            "630f24a2d635df94b063a62023a90567ef134b19"
        ],
        [
            "cut (R_dist (sum_f_R0 An n) (sum_f_R0 An m) <= R_dist (sum_f_R0 Bn n) (sum_f_R0 Bn m)).",
            "VernacExtend",
            "ccb8e26aa4693347a0a96e7e50df9c4ab98abbeb"
        ],
        [
            "intro; apply Rle_lt_trans with (R_dist (sum_f_R0 Bn n) (sum_f_R0 Bn m)).",
            "VernacExtend",
            "d8f4e27fe94a7643833b34c8c5eb4b576481d360"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H2; assumption.",
            "VernacExtend",
            "4a9f5fcfe7fc430a6576d9298552b6fe2f8ad298"
        ],
        [
            "destruct (lt_eq_lt_dec n m) as [[| -> ]|].",
            "VernacExtend",
            "0675e8452fba108dc1d092ce88adcb27ae1da3c3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (tech2 An n m); [ idtac | assumption ].",
            "VernacExtend",
            "4df428b0a9f56d5068ea6b10c2772868a46be2a7"
        ],
        [
            "rewrite (tech2 Bn n m); [ idtac | assumption ].",
            "VernacExtend",
            "90808d8d05ac3b004e39e6fcb183aff29995934d"
        ],
        [
            "unfold R_dist; unfold Rminus; do 2 rewrite Ropp_plus_distr; do 2 rewrite <- Rplus_assoc; do 2 rewrite Rplus_opp_r; do 2 rewrite Rplus_0_l; do 2 rewrite Rabs_Ropp; repeat rewrite Rabs_right.",
            "VernacExtend",
            "b1fed5e0a53db7473f278f1ac19adb5d3ea1d689"
        ],
        [
            "apply sum_Rle; intros.",
            "VernacExtend",
            "668f6d7df52d77d7b4bd38f921a56709dac6c0c0"
        ],
        [
            "elim (H (S n + n0)%nat); intros H7 H8.",
            "VernacExtend",
            "e13abc77806aa3a8b9681c11d700e0d670323b2e"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "apply Rle_ge; apply cond_pos_sum; intro.",
            "VernacExtend",
            "459146f4bf211f8c66f4f893eed05ded51ea5f1a"
        ],
        [
            "elim (H (S n + n0)%nat); intros.",
            "VernacExtend",
            "be52a573d4356048f922c0df9d0968107e472b46"
        ],
        [
            "apply Rle_trans with (An (S n + n0)%nat); assumption.",
            "VernacExtend",
            "f3d4ece21aa7e30690bd726cf6b6ee9aabadf0c2"
        ],
        [
            "apply Rle_ge; apply cond_pos_sum; intro.",
            "VernacExtend",
            "459146f4bf211f8c66f4f893eed05ded51ea5f1a"
        ],
        [
            "elim (H (S n + n0)%nat); intros; assumption.",
            "VernacExtend",
            "c460fab26f64d410cf2974de2be060b25f057cb7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold R_dist; unfold Rminus; do 2 rewrite Rplus_opp_r; rewrite Rabs_R0; right; reflexivity.",
            "VernacExtend",
            "a04ac1da001e44d173b536b182da103fa2d316bd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite (tech2 An m n); [ idtac | assumption ].",
            "VernacExtend",
            "cc4acd6cbfdf3c2b01db63479557cc691a331ee3"
        ],
        [
            "rewrite (tech2 Bn m n); [ idtac | assumption ].",
            "VernacExtend",
            "9b537df3027562d907e0c841434bb04a94c8a89d"
        ],
        [
            "unfold R_dist; unfold Rminus; do 2 rewrite Rplus_assoc; rewrite (Rplus_comm (sum_f_R0 An m)); rewrite (Rplus_comm (sum_f_R0 Bn m)); do 2 rewrite Rplus_assoc; do 2 rewrite Rplus_opp_l; do 2 rewrite Rplus_0_r; repeat rewrite Rabs_right.",
            "VernacExtend",
            "d6b16f260cebe0642c24db555fc5ba6b59ed65e5"
        ],
        [
            "apply sum_Rle; intros.",
            "VernacExtend",
            "668f6d7df52d77d7b4bd38f921a56709dac6c0c0"
        ],
        [
            "elim (H (S m + n0)%nat); intros H7 H8; apply H8.",
            "VernacExtend",
            "8cc9024af29f17695849e8e657edcd80f4d3beb2"
        ],
        [
            "apply Rle_ge; apply cond_pos_sum; intro.",
            "VernacExtend",
            "459146f4bf211f8c66f4f893eed05ded51ea5f1a"
        ],
        [
            "elim (H (S m + n0)%nat); intros.",
            "VernacExtend",
            "4771dadc8dc6821ffc10a9734897a52b14e6db3b"
        ],
        [
            "apply Rle_trans with (An (S m + n0)%nat); assumption.",
            "VernacExtend",
            "eca3d5095b23710f3e9dfa893420b66d0f6af470"
        ],
        [
            "apply Rle_ge.",
            "VernacExtend",
            "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
        ],
        [
            "apply cond_pos_sum; intro.",
            "VernacExtend",
            "68ffe4cee7418286dbcad9ce962dc3a163a5ead7"
        ],
        [
            "elim (H (S m + n0)%nat); intros; assumption.",
            "VernacExtend",
            "9da62892fe0bf88c2017ea0332e8c9c9703c70d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cesaro : forall (An Bn:nat -> R) (l:R), Un_cv Bn l -> (forall n:nat, 0 < An n) -> cv_infty (fun n:nat => sum_f_R0 An n) -> Un_cv (fun n:nat => sum_f_R0 (fun k:nat => An k * Bn k) n / sum_f_R0 An n) l.",
            "VernacStartTheoremProof",
            "7984d11826869c69ddde5c0452c915a75bc30bcc"
        ],
        [
            "Proof with trivial.",
            "VernacProof",
            "9268eeb221b2345d40e3f4fe2ce96e852cc5a7fc"
        ],
        [
            "unfold Un_cv; intros; assert (H3 : forall n:nat, 0 < sum_f_R0 An n)...",
            "VernacExtend",
            "721ad5204aa7125651da17a4072306d95b4af844"
        ],
        [
            "intro; apply tech1...",
            "VernacExtend",
            "84ab417ab3eb336d4de2cd9251dcd2896af2f547"
        ],
        [
            "assert (H4 : forall n:nat, sum_f_R0 An n <> 0)...",
            "VernacExtend",
            "cf87dfea9c2ae4934fc678c44ccc44b748a64aed"
        ],
        [
            "intro; red; intro; assert (H5 := H3 n); rewrite H4 in H5; elim (Rlt_irrefl _ H5)...",
            "VernacExtend",
            "c7a6394e730fea166bb2cddd62df923ab58a1626"
        ],
        [
            "assert (H5 := cv_infty_cv_R0 _ H4 H1); assert (H6 : 0 < eps / 2)...",
            "VernacExtend",
            "3ca9967eb41a017631236dd952a6c22b07e01430"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat...",
            "VernacExtend",
            "895df3bb166c1bf051c00262b6a723decbb5bda5"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup...",
            "VernacExtend",
            "e60295c54f8aa92902f639c623ae12bc433a85fa"
        ],
        [
            "elim (H _ H6); clear H; intros N1 H; set (C := Rabs (sum_f_R0 (fun k:nat => An k * (Bn k - l)) N1)); assert (H7 : exists N : nat, (forall n:nat, (N <= n)%nat -> C / sum_f_R0 An n < eps / 2))...",
            "VernacExtend",
            "a3383a9ff1d1aa40add12a5945d6318e4ce18f3c"
        ],
        [
            "case (Req_dec C 0); intro...",
            "VernacExtend",
            "e6ab9e9f5f74635bd91d24a80b185a55509e0c5d"
        ],
        [
            "exists 0%nat; intros...",
            "VernacExtend",
            "f02d4d9227355698d193deb00de31b7d869abfa5"
        ],
        [
            "rewrite H7; unfold Rdiv; rewrite Rmult_0_l; apply Rmult_lt_0_compat...",
            "VernacExtend",
            "dff218e221e44dd4df1b2b54a0874e3458684b1a"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup...",
            "VernacExtend",
            "e60295c54f8aa92902f639c623ae12bc433a85fa"
        ],
        [
            "assert (H8 : 0 < eps / (2 * Rabs C))...",
            "VernacExtend",
            "c405b3b6444e55334e17bb511e5a9e4292cf802a"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat...",
            "VernacExtend",
            "895df3bb166c1bf051c00262b6a723decbb5bda5"
        ],
        [
            "apply Rinv_0_lt_compat; apply Rmult_lt_0_compat...",
            "VernacExtend",
            "6f2507ac7ed5cb443eb91028c6d1bea9fd1ab680"
        ],
        [
            "prove_sup...",
            "VernacExtend",
            "25baf1a969d84bbdb0a70524cef9c17cf1bb3d6b"
        ],
        [
            "apply Rabs_pos_lt...",
            "VernacExtend",
            "e8adfc7f065ba6022e5d122ebea7fd6461f8cb84"
        ],
        [
            "elim (H5 _ H8); intros; exists x; intros; assert (H11 := H9 _ H10); unfold R_dist in H11; unfold Rminus in H11; rewrite Ropp_0 in H11; rewrite Rplus_0_r in H11...",
            "VernacExtend",
            "3e4649369413a0bdc5f41fdc39b365573c3f6a35"
        ],
        [
            "apply Rle_lt_trans with (Rabs (C / sum_f_R0 An n))...",
            "VernacExtend",
            "f9f9c0040042b1c48eb41650d6709e188360508e"
        ],
        [
            "apply RRle_abs...",
            "VernacExtend",
            "31925733ae60732cbba01cc894b768e5af6a55cb"
        ],
        [
            "unfold Rdiv; rewrite Rabs_mult; apply Rmult_lt_reg_l with (/ Rabs C)...",
            "VernacExtend",
            "692aa3db4a149b2bdc4d93912d9d4730a165cceb"
        ],
        [
            "apply Rinv_0_lt_compat; apply Rabs_pos_lt...",
            "VernacExtend",
            "e436077e1be177e4d668ef7af5006ef0f910b4b2"
        ],
        [
            "rewrite <- Rmult_assoc; rewrite <- Rinv_l_sym...",
            "VernacExtend",
            "2747aedc2903a8155ce252bae1bf832efba1b26f"
        ],
        [
            "rewrite Rmult_1_l; replace (/ Rabs C * (eps * / 2)) with (eps / (2 * Rabs C))...",
            "VernacExtend",
            "09082353a89ad06dc4aa72162633ff6f6ea87cba"
        ],
        [
            "unfold Rdiv; rewrite Rinv_mult_distr...",
            "VernacExtend",
            "bdc78ac808df7db98aad81967b8477f95bedd714"
        ],
        [
            "ring...",
            "VernacExtend",
            "1ba409b27e9f97c74f4dc663370ed436d64ac388"
        ],
        [
            "discrR...",
            "VernacExtend",
            "1d84d56ab750a265209e2ba036b3c6b486c246ee"
        ],
        [
            "apply Rabs_no_R0...",
            "VernacExtend",
            "69726e3de32f73cb7235379c55401d15ee87ab2e"
        ],
        [
            "apply Rabs_no_R0...",
            "VernacExtend",
            "69726e3de32f73cb7235379c55401d15ee87ab2e"
        ],
        [
            "elim H7; clear H7; intros N2 H7; set (N := max N1 N2); exists (S N); intros; unfold R_dist; replace (sum_f_R0 (fun k:nat => An k * Bn k) n / sum_f_R0 An n - l) with (sum_f_R0 (fun k:nat => An k * (Bn k - l)) n / sum_f_R0 An n)...",
            "VernacExtend",
            "be849c9e9e8a92563828d83190fd48b64c963109"
        ],
        [
            "assert (H9 : (N1 < n)%nat)...",
            "VernacExtend",
            "0f76cbfb4aaab6d65c54f067f8065ec8522dd908"
        ],
        [
            "apply lt_le_trans with (S N)...",
            "VernacExtend",
            "8119bd83e9273dea51a5b04923c29392f6b0707f"
        ],
        [
            "apply le_lt_n_Sm; unfold N; apply le_max_l...",
            "VernacExtend",
            "4c5992112dfa9331baf751f3e1c9bdfc0b57bd85"
        ],
        [
            "rewrite (tech2 (fun k:nat => An k * (Bn k - l)) _ _ H9); unfold Rdiv; rewrite Rmult_plus_distr_r; apply Rle_lt_trans with (Rabs (sum_f_R0 (fun k:nat => An k * (Bn k - l)) N1 / sum_f_R0 An n) + Rabs (sum_f_R0 (fun i:nat => An (S N1 + i)%nat * (Bn (S N1 + i)%nat - l)) (n - S N1) / sum_f_R0 An n))...",
            "VernacExtend",
            "0267b58d176ce00a98f546b902b8504fb1439832"
        ],
        [
            "apply Rabs_triang...",
            "VernacExtend",
            "e236503449c4860e7360492eae058d175d12a8c9"
        ],
        [
            "rewrite (double_var eps); apply Rplus_lt_compat...",
            "VernacExtend",
            "cbe8d4822549c397ed6c2e0dc0dc70f2c8bd06dd"
        ],
        [
            "unfold Rdiv; rewrite Rabs_mult; fold C; rewrite Rabs_right...",
            "VernacExtend",
            "45ba4179d01702cb48d659f8df141fba7967bc13"
        ],
        [
            "apply (H7 n); apply le_trans with (S N)...",
            "VernacExtend",
            "785caa7f06f5d55873226bf5e69dbb2ae779fd6c"
        ],
        [
            "apply le_trans with N; [ unfold N; apply le_max_r | apply le_n_Sn ]...",
            "VernacExtend",
            "f94a193a1a6c90ba8c3db9b60b5165a590c173ce"
        ],
        [
            "apply Rle_ge; left; apply Rinv_0_lt_compat...",
            "VernacExtend",
            "4134df911cbeb202ef95986a0ded59d9ea839f80"
        ],
        [
            "unfold R_dist in H; unfold Rdiv; rewrite Rabs_mult; rewrite (Rabs_right (/ sum_f_R0 An n))...",
            "VernacExtend",
            "e647657b1227cb6f5258c37e0459e0f80372354f"
        ],
        [
            "apply Rle_lt_trans with (sum_f_R0 (fun i:nat => Rabs (An (S N1 + i)%nat * (Bn (S N1 + i)%nat - l))) (n - S N1) * / sum_f_R0 An n)...",
            "VernacExtend",
            "634e89394961c90cac32b9d12321a5b741ada5c1"
        ],
        [
            "do 2 rewrite <- (Rmult_comm (/ sum_f_R0 An n)); apply Rmult_le_compat_l...",
            "VernacExtend",
            "ee3ffd52be87d05460204b7dffd62d3c4ee38f0c"
        ],
        [
            "left; apply Rinv_0_lt_compat...",
            "VernacExtend",
            "ae0432c8866161083425b3bd7c6a2c482feec5cb"
        ],
        [
            "apply (Rsum_abs (fun i:nat => An (S N1 + i)%nat * (Bn (S N1 + i)%nat - l)) (n - S N1))...",
            "VernacExtend",
            "1436038135b3de9570805c14b5f8fbd37ec00c78"
        ],
        [
            "apply Rle_lt_trans with (sum_f_R0 (fun i:nat => An (S N1 + i)%nat * (eps / 2)) (n - S N1) * / sum_f_R0 An n)...",
            "VernacExtend",
            "f981cfcdfec06d40aa8d027411db6609fde08507"
        ],
        [
            "do 2 rewrite <- (Rmult_comm (/ sum_f_R0 An n)); apply Rmult_le_compat_l...",
            "VernacExtend",
            "ee3ffd52be87d05460204b7dffd62d3c4ee38f0c"
        ],
        [
            "left; apply Rinv_0_lt_compat...",
            "VernacExtend",
            "ae0432c8866161083425b3bd7c6a2c482feec5cb"
        ],
        [
            "apply sum_Rle; intros; rewrite Rabs_mult; pattern (An (S N1 + n0)%nat) at 2; rewrite <- (Rabs_right (An (S N1 + n0)%nat))...",
            "VernacExtend",
            "8ea3e4261f196b676e2aefc0da3457d15e06e756"
        ],
        [
            "apply Rmult_le_compat_l...",
            "VernacExtend",
            "b53c1ba4682835e32d8b6fe37f18309b5664d49a"
        ],
        [
            "apply Rabs_pos...",
            "VernacExtend",
            "7c4e865b18ddcaa2266c6c65195c056c9a79ac3e"
        ],
        [
            "left; apply H; unfold ge; apply le_trans with (S N1); [ apply le_n_Sn | apply le_plus_l ]...",
            "VernacExtend",
            "d8a7cdc21bbc0f33d084d42d422e6bc0d5be3e96"
        ],
        [
            "apply Rle_ge; left...",
            "VernacExtend",
            "f478d7659e3004500bd8c01eef5bbaeda80f4eb9"
        ],
        [
            "rewrite <- (scal_sum (fun i:nat => An (S N1 + i)%nat) (n - S N1) (eps / 2)); unfold Rdiv; repeat rewrite Rmult_assoc; apply Rmult_lt_compat_l...",
            "VernacExtend",
            "e9f1744bdde93b001aad7fb19f4def5984455891"
        ],
        [
            "pattern (/ 2) at 2; rewrite <- Rmult_1_r; apply Rmult_lt_compat_l...",
            "VernacExtend",
            "8de347d3f6eac75e7b71e25f350c08404a9d6055"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup...",
            "VernacExtend",
            "e60295c54f8aa92902f639c623ae12bc433a85fa"
        ],
        [
            "rewrite Rmult_comm; apply Rmult_lt_reg_l with (sum_f_R0 An n)...",
            "VernacExtend",
            "c8aaf24990dd60fcb142015ca6ab76d851c025dc"
        ],
        [
            "rewrite <- Rmult_assoc; rewrite <- Rinv_r_sym...",
            "VernacExtend",
            "a59392b60af8cf5478bd2711c4d37c1a4f4f32ad"
        ],
        [
            "rewrite Rmult_1_l; rewrite Rmult_1_r; rewrite (tech2 An N1 n)...",
            "VernacExtend",
            "c634bfadd8fb8d3643b09c08f2a46bdc13e2e712"
        ],
        [
            "rewrite Rplus_comm; pattern (sum_f_R0 (fun i:nat => An (S N1 + i)%nat) (n - S N1)) at 1; rewrite <- Rplus_0_r; apply Rplus_lt_compat_l...",
            "VernacExtend",
            "2a05728d6e748b310f5faa98bb79c056b140a50c"
        ],
        [
            "apply Rle_ge; left; apply Rinv_0_lt_compat...",
            "VernacExtend",
            "4134df911cbeb202ef95986a0ded59d9ea839f80"
        ],
        [
            "replace (sum_f_R0 (fun k:nat => An k * (Bn k - l)) n) with (sum_f_R0 (fun k:nat => An k * Bn k) n + sum_f_R0 (fun k:nat => An k * - l) n)...",
            "VernacExtend",
            "3595d500592956dab9c5f1ca047b5ce1d2bca54e"
        ],
        [
            "rewrite <- (scal_sum An n (- l)); field...",
            "VernacExtend",
            "faf337507d10bd5bfd204d6811d0d396edca53d6"
        ],
        [
            "rewrite <- plus_sum; apply sum_eq; intros; ring...",
            "VernacExtend",
            "4138977c372f39a9c5628295f79e43068d9836f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Cesaro_1 : forall (An:nat -> R) (l:R), Un_cv An l -> Un_cv (fun n:nat => sum_f_R0 An (pred n) / INR n) l.",
            "VernacStartTheoremProof",
            "8027b19f487f8e5e02768efc5a088f2035d712cb"
        ],
        [
            "Proof with trivial.",
            "VernacProof",
            "9268eeb221b2345d40e3f4fe2ce96e852cc5a7fc"
        ],
        [
            "intros Bn l H; set (An := fun _:nat => 1)...",
            "VernacExtend",
            "95453fa6086d6f119a308ea2aa0e608a2ef07a90"
        ],
        [
            "assert (H0 : forall n:nat, 0 < An n)...",
            "VernacExtend",
            "9be3add4cb790202f9438eb6d4a0c24309f5c248"
        ],
        [
            "intro; unfold An; apply Rlt_0_1...",
            "VernacExtend",
            "5ff331efb19b36d2c3860a49122baad14d8298e3"
        ],
        [
            "assert (H1 : forall n:nat, 0 < sum_f_R0 An n)...",
            "VernacExtend",
            "95a626432add9889a306c18ee51ebfba3b9b24d2"
        ],
        [
            "intro; apply tech1...",
            "VernacExtend",
            "84ab417ab3eb336d4de2cd9251dcd2896af2f547"
        ],
        [
            "assert (H2 : cv_infty (fun n:nat => sum_f_R0 An n))...",
            "VernacExtend",
            "4a470996bd0f3d28f9f983752c9f00217934d1ca"
        ],
        [
            "unfold cv_infty; intro; destruct (Rle_dec M 0) as [Hle|Hnle]...",
            "VernacExtend",
            "f1b8dc35abb550070d14ad58285e4e68d466c98c"
        ],
        [
            "exists 0%nat; intros; apply Rle_lt_trans with 0...",
            "VernacExtend",
            "0fc53419473cf039fd49344daee6b004435bbd29"
        ],
        [
            "assert (H2 : 0 < M)...",
            "VernacExtend",
            "4c407594aeeb700f17864473b348b3a9713d8e1c"
        ],
        [
            "auto with real...",
            "VernacExtend",
            "13746b6b7edb07293a38578505f6478f48bafeb7"
        ],
        [
            "clear Hnle; set (m := up M); elim (archimed M); intros; assert (H5 : (0 <= m)%Z)...",
            "VernacExtend",
            "48d3ca63be5596f590fc4fa070d4404f974893f1"
        ],
        [
            "apply le_IZR; unfold m; simpl; left; apply Rlt_trans with M...",
            "VernacExtend",
            "d3326548b079ac38b0d5aedf763064fb8d6bc848"
        ],
        [
            "elim (IZN _ H5); intros; exists x; intros; unfold An; rewrite sum_cte; rewrite Rmult_1_l; apply Rlt_trans with (IZR (up M))...",
            "VernacExtend",
            "6078b4e5a3ddbe33233a2654a1ee9a8980d54fa4"
        ],
        [
            "apply Rle_lt_trans with (INR x)...",
            "VernacExtend",
            "1487dd705256c162b2649cf72e8637e4b7ed2a33"
        ],
        [
            "rewrite INR_IZR_INZ; fold m; rewrite <- H6; right...",
            "VernacExtend",
            "0864cf09f9bc93965284ca8b945460fe42a4d040"
        ],
        [
            "apply lt_INR; apply le_lt_n_Sm...",
            "VernacExtend",
            "da97aa1daf9c158b9b38f5b0a3ec0d645b1235a9"
        ],
        [
            "assert (H3 := Cesaro _ _ _ H H0 H2)...",
            "VernacExtend",
            "a8d3e92d69acfaec983fd9200a4d17b0a1fcb727"
        ],
        [
            "unfold Un_cv; unfold Un_cv in H3; intros; elim (H3 _ H4); intros; exists (S x); intros; unfold R_dist; unfold R_dist in H5; apply Rle_lt_trans with (Rabs (sum_f_R0 (fun k:nat => An k * Bn k) (pred n) / sum_f_R0 An (pred n) - l))...",
            "VernacExtend",
            "6f76bc972fbddfb21c2aad49b18736da6f7f43cf"
        ],
        [
            "right; replace (sum_f_R0 Bn (pred n) / INR n - l) with (sum_f_R0 (fun k:nat => An k * Bn k) (pred n) / sum_f_R0 An (pred n) - l)...",
            "VernacExtend",
            "a18f6758f8799a54e238f9681c928d00a9f1cac1"
        ],
        [
            "unfold Rminus; do 2 rewrite <- (Rplus_comm (- l)); apply Rplus_eq_compat_l...",
            "VernacExtend",
            "061423c401bd10380466ad5186e9b327a6260f53"
        ],
        [
            "unfold An; replace (sum_f_R0 (fun k:nat => 1 * Bn k) (pred n)) with (sum_f_R0 Bn (pred n))...",
            "VernacExtend",
            "f3463407b97e7ca215743b0a7f33ab9f14b12947"
        ],
        [
            "rewrite sum_cte; rewrite Rmult_1_l; replace (S (pred n)) with n...",
            "VernacExtend",
            "ff7b802b7210274336a758ea292fe66d2b499501"
        ],
        [
            "apply S_pred with 0%nat; apply lt_le_trans with (S x)...",
            "VernacExtend",
            "8a0881dac3525f6f4874a67bdb6821cbf790c72e"
        ],
        [
            "apply lt_O_Sn...",
            "VernacExtend",
            "b96635113ec3ed77eb934eab54f70f3e47cc8736"
        ],
        [
            "apply sum_eq; intros; ring...",
            "VernacExtend",
            "69feb6324a688c00c9d800150e88032a6ced9589"
        ],
        [
            "apply H5; unfold ge; apply le_S_n; replace (S (pred n)) with n...",
            "VernacExtend",
            "3e33704cdfe9f1a52f22a434a6a4dd7e6410cc03"
        ],
        [
            "apply S_pred with 0%nat; apply lt_le_trans with (S x)...",
            "VernacExtend",
            "8a0881dac3525f6f4874a67bdb6821cbf790c72e"
        ],
        [
            "apply lt_O_Sn...",
            "VernacExtend",
            "b96635113ec3ed77eb934eab54f70f3e47cc8736"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "Rseries_CV_comp",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "intros An Bn H X; apply cv_cauchy_2.",
                        "VernacExtend",
                        "f900fb18dd9b00289848f9478edef233274af0c9"
                    ]
                },
                {
                    "command": [
                        "assert (H0 := cv_cauchy_1 _ X).",
                        "VernacExtend",
                        "c78b6d38a215a135c0c4884f99da5e0fd859965f"
                    ]
                },
                {
                    "command": [
                        "unfold Cauchy_crit_series; unfold Cauchy_crit.",
                        "VernacExtend",
                        "23ef85f5e43536b79eb7d529d23962b4b49f1cf0"
                    ]
                },
                {
                    "command": [
                        "intros; elim (H0 eps H1); intros.",
                        "VernacExtend",
                        "ffc5d9ecc4912eb622da966c504157c4b6500c16"
                    ]
                },
                {
                    "command": [
                        "exists x; intros.",
                        "VernacExtend",
                        "630f24a2d635df94b063a62023a90567ef134b19"
                    ]
                },
                {
                    "command": [
                        "cut (R_dist (sum_f_R0 An n) (sum_f_R0 An m) <= R_dist (sum_f_R0 Bn n) (sum_f_R0 Bn m)).",
                        "VernacExtend",
                        "ccb8e26aa4693347a0a96e7e50df9c4ab98abbeb"
                    ]
                },
                {
                    "command": [
                        "intro; apply Rle_lt_trans with (R_dist (sum_f_R0 Bn n) (sum_f_R0 Bn m)).",
                        "VernacExtend",
                        "d8f4e27fe94a7643833b34c8c5eb4b576481d360"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H2; assumption.",
                        "VernacExtend",
                        "4a9f5fcfe7fc430a6576d9298552b6fe2f8ad298"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_eq_lt_dec n m) as [[| -> ]|].",
                        "VernacExtend",
                        "0675e8452fba108dc1d092ce88adcb27ae1da3c3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech2 An n m); [ idtac | assumption ].",
                        "VernacExtend",
                        "4df428b0a9f56d5068ea6b10c2772868a46be2a7"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech2 Bn n m); [ idtac | assumption ].",
                        "VernacExtend",
                        "90808d8d05ac3b004e39e6fcb183aff29995934d"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist; unfold Rminus; do 2 rewrite Ropp_plus_distr; do 2 rewrite <- Rplus_assoc; do 2 rewrite Rplus_opp_r; do 2 rewrite Rplus_0_l; do 2 rewrite Rabs_Ropp; repeat rewrite Rabs_right.",
                        "VernacExtend",
                        "b1fed5e0a53db7473f278f1ac19adb5d3ea1d689"
                    ]
                },
                {
                    "command": [
                        "apply sum_Rle; intros.",
                        "VernacExtend",
                        "668f6d7df52d77d7b4bd38f921a56709dac6c0c0"
                    ]
                },
                {
                    "command": [
                        "elim (H (S n + n0)%nat); intros H7 H8.",
                        "VernacExtend",
                        "e13abc77806aa3a8b9681c11d700e0d670323b2e"
                    ]
                },
                {
                    "command": [
                        "apply H8.",
                        "VernacExtend",
                        "2014720df0411c2963f20792fe424080d05f44aa"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply cond_pos_sum; intro.",
                        "VernacExtend",
                        "459146f4bf211f8c66f4f893eed05ded51ea5f1a"
                    ]
                },
                {
                    "command": [
                        "elim (H (S n + n0)%nat); intros.",
                        "VernacExtend",
                        "be52a573d4356048f922c0df9d0968107e472b46"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (An (S n + n0)%nat); assumption.",
                        "VernacExtend",
                        "f3d4ece21aa7e30690bd726cf6b6ee9aabadf0c2"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply cond_pos_sum; intro.",
                        "VernacExtend",
                        "459146f4bf211f8c66f4f893eed05ded51ea5f1a"
                    ]
                },
                {
                    "command": [
                        "elim (H (S n + n0)%nat); intros; assumption.",
                        "VernacExtend",
                        "c460fab26f64d410cf2974de2be060b25f057cb7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist; unfold Rminus; do 2 rewrite Rplus_opp_r; rewrite Rabs_R0; right; reflexivity.",
                        "VernacExtend",
                        "a04ac1da001e44d173b536b182da103fa2d316bd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech2 An m n); [ idtac | assumption ].",
                        "VernacExtend",
                        "cc4acd6cbfdf3c2b01db63479557cc691a331ee3"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech2 Bn m n); [ idtac | assumption ].",
                        "VernacExtend",
                        "9b537df3027562d907e0c841434bb04a94c8a89d"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist; unfold Rminus; do 2 rewrite Rplus_assoc; rewrite (Rplus_comm (sum_f_R0 An m)); rewrite (Rplus_comm (sum_f_R0 Bn m)); do 2 rewrite Rplus_assoc; do 2 rewrite Rplus_opp_l; do 2 rewrite Rplus_0_r; repeat rewrite Rabs_right.",
                        "VernacExtend",
                        "d6b16f260cebe0642c24db555fc5ba6b59ed65e5"
                    ]
                },
                {
                    "command": [
                        "apply sum_Rle; intros.",
                        "VernacExtend",
                        "668f6d7df52d77d7b4bd38f921a56709dac6c0c0"
                    ]
                },
                {
                    "command": [
                        "elim (H (S m + n0)%nat); intros H7 H8; apply H8.",
                        "VernacExtend",
                        "8cc9024af29f17695849e8e657edcd80f4d3beb2"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply cond_pos_sum; intro.",
                        "VernacExtend",
                        "459146f4bf211f8c66f4f893eed05ded51ea5f1a"
                    ]
                },
                {
                    "command": [
                        "elim (H (S m + n0)%nat); intros.",
                        "VernacExtend",
                        "4771dadc8dc6821ffc10a9734897a52b14e6db3b"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (An (S m + n0)%nat); assumption.",
                        "VernacExtend",
                        "eca3d5095b23710f3e9dfa893420b66d0f6af470"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge.",
                        "VernacExtend",
                        "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos_sum; intro.",
                        "VernacExtend",
                        "68ffe4cee7418286dbcad9ce962dc3a163a5ead7"
                    ]
                },
                {
                    "command": [
                        "elim (H (S m + n0)%nat); intros; assumption.",
                        "VernacExtend",
                        "9da62892fe0bf88c2017ea0332e8c9c9703c70d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}