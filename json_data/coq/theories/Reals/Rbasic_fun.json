{
    "filename": "theories/Reals/Rbasic_fun.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Rbase.",
            "VernacRequire",
            "c0a8d81b170d4ed8309a8632a3cac35f6cba016a"
        ],
        [
            "Require Import R_Ifp.",
            "VernacRequire",
            "36311e39d39a203ce2519370f00f94f549f34b43"
        ],
        [
            "Require Import Lra.",
            "VernacRequire",
            "6dd90563c90485cd5a8a8b957af14c96d3b4cbc1"
        ],
        [
            "Local Open Scope R_scope.",
            "VernacOpenCloseScope",
            "b005c72bb3303e031b42be04be04c87c005faa38"
        ],
        [
            "Implicit Type r : R.",
            "VernacReserve",
            "8735558f556e62eb49eeadfa3082792221cf37f3"
        ],
        [
            "Definition Rmin (x y:R) : R := match Rle_dec x y with | left _ => x | right _ => y end.",
            "VernacDefinition",
            "f8f5cd3065ad71823b67584afa0901d6399729b8"
        ],
        [
            "Lemma Rmin_case : forall r1 r2 (P:R -> Type), P r1 -> P r2 -> P (Rmin r1 r2).",
            "VernacStartTheoremProof",
            "80a2ac61b26f8188fdab619a041cbd02467e5e69"
        ],
        [
            "intros r1 r2 P H1 H2; unfold Rmin; case (Rle_dec r1 r2); auto.",
            "VernacExtend",
            "87b0ac7e31dea8f2e9a45cb55ae04b8c0cb03edd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmin_case_strong : forall r1 r2 (P:R -> Type), (r1 <= r2 -> P r1) -> (r2 <= r1 -> P r2) -> P (Rmin r1 r2).",
            "VernacStartTheoremProof",
            "9b966196a413d248d52e435788c8d89c45fc38e9"
        ],
        [
            "intros r1 r2 P H1 H2; unfold Rmin; destruct (Rle_dec r1 r2); auto with real.",
            "VernacExtend",
            "143c037a8afe025df2650403865b25131a19d5f7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmin_Rgt_l : forall r1 r2 r, Rmin r1 r2 > r -> r1 > r /\\ r2 > r.",
            "VernacStartTheoremProof",
            "a4b0ac0eeddfb5332c377e06970cee7fc7b1b392"
        ],
        [
            "intros r1 r2 r; unfold Rmin; case (Rle_dec r1 r2) as [Hle|Hnle]; intros.",
            "VernacExtend",
            "7fb315effccb0744a7610df44753ac648cfc3b45"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Rgt; exact (Rlt_le_trans r r1 r2 H Hle).",
            "VernacExtend",
            "826fbb7499a3b781e26c901442a557c8b0991b1a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "generalize (Rnot_le_lt r1 r2 Hnle); intro; exact (Rgt_trans r1 r2 r H0 H).",
            "VernacExtend",
            "5fae78dff23732f43a129500dbbb17d8b8b027b0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmin_Rgt_r : forall r1 r2 r, r1 > r /\\ r2 > r -> Rmin r1 r2 > r.",
            "VernacStartTheoremProof",
            "77331654110a8a50f4bb788c4eef2a19171a0609"
        ],
        [
            "intros; unfold Rmin; case (Rle_dec r1 r2); elim H; clear H; intros; assumption.",
            "VernacExtend",
            "a1d5a7b650ff638adbaf39d9438e2df4e57cbec3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmin_Rgt : forall r1 r2 r, Rmin r1 r2 > r <-> r1 > r /\\ r2 > r.",
            "VernacStartTheoremProof",
            "9d626a0402d182371b1438bf0460f98f86606080"
        ],
        [
            "intros; split.",
            "VernacExtend",
            "786909835bea92a2bb1ac0d0634a6eb379d5f275"
        ],
        [
            "exact (Rmin_Rgt_l r1 r2 r).",
            "VernacExtend",
            "71723866f71e780073a9cb489b69a5d542655bde"
        ],
        [
            "exact (Rmin_Rgt_r r1 r2 r).",
            "VernacExtend",
            "0909cc7f9237e0460e1a9807c45d9dac5bb357be"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmin_l : forall x y:R, Rmin x y <= x.",
            "VernacStartTheoremProof",
            "ce733bcd01ebac4e9de78dcc9a757774abf802c8"
        ],
        [
            "intros; unfold Rmin; case (Rle_dec x y); intro H1; [ right; reflexivity | auto with real ].",
            "VernacExtend",
            "7fc30fb1b6b81c4d0d6751ba387f7904365a5a54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmin_r : forall x y:R, Rmin x y <= y.",
            "VernacStartTheoremProof",
            "738dfa61c5d87a6b3028126b03b3368aef148efc"
        ],
        [
            "intros; unfold Rmin; case (Rle_dec x y); intro H1; [ assumption | auto with real ].",
            "VernacExtend",
            "7d82f4806e7ae3ddb690d3945eb590fa1ad1b636"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmin_left : forall x y, x <= y -> Rmin x y = x.",
            "VernacStartTheoremProof",
            "f4857e45f7ebd8618237157d82559d6ca35d2457"
        ],
        [
            "intros; apply Rmin_case_strong; auto using Rle_antisym.",
            "VernacExtend",
            "3016274f9568b0c98f8547c68fdf797728c3ca8b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmin_right : forall x y, y <= x -> Rmin x y = y.",
            "VernacStartTheoremProof",
            "bfb1c1b390aefdf8bb75037432bad1ecd39836a9"
        ],
        [
            "intros; apply Rmin_case_strong; auto using Rle_antisym.",
            "VernacExtend",
            "3016274f9568b0c98f8547c68fdf797728c3ca8b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rle_min_compat_r : forall x y z, x <= y -> Rmin x z <= Rmin y z.",
            "VernacStartTheoremProof",
            "fd3770afd53665a12ae1551f4db8cfc7282f03d2"
        ],
        [
            "intros; do 2 (apply Rmin_case_strong; intro); eauto using Rle_trans, Rle_refl.",
            "VernacExtend",
            "c3e24b159627b21a8526d5cd92f3947d898f83af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rle_min_compat_l : forall x y z, x <= y -> Rmin z x <= Rmin z y.",
            "VernacStartTheoremProof",
            "d2087cc2aba7683bd82aee959630a16ad3b4628f"
        ],
        [
            "intros; do 2 (apply Rmin_case_strong; intro); eauto using Rle_trans, Rle_refl.",
            "VernacExtend",
            "c3e24b159627b21a8526d5cd92f3947d898f83af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmin_comm : forall x y:R, Rmin x y = Rmin y x.",
            "VernacStartTheoremProof",
            "43cf967f09d10ae9c639bcdcdf1b701b387d6efe"
        ],
        [
            "intros; unfold Rmin; case (Rle_dec x y); case (Rle_dec y x); intros; try reflexivity || (apply Rle_antisym; assumption || auto with real).",
            "VernacExtend",
            "d3ea06ef54abbc92f24871d8afc61a47e679b7a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmin_stable_in_posreal : forall x y:posreal, 0 < Rmin x y.",
            "VernacStartTheoremProof",
            "f69f4cff84fe660938210fc71ee2c30417a9b1b0"
        ],
        [
            "intros; apply Rmin_Rgt_r; split; [ apply (cond_pos x) | apply (cond_pos y) ].",
            "VernacExtend",
            "44b0ca77d05052d3560e6d829bc307ceb8a14b57"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmin_pos : forall x y:R, 0 < x -> 0 < y -> 0 < Rmin x y.",
            "VernacStartTheoremProof",
            "a0be32b2fcbc26b4054f576f2dcaa3df5c4302b9"
        ],
        [
            "intros; unfold Rmin.",
            "VernacExtend",
            "74d3dc110c0611d213b6767e44a6e6b372915e92"
        ],
        [
            "case (Rle_dec x y); intro; assumption.",
            "VernacExtend",
            "b0bfdebc82ddbaee83d9a9e25ea25c22ea2bd0fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmin_glb : forall x y z:R, z <= x -> z <= y -> z <= Rmin x y.",
            "VernacStartTheoremProof",
            "c179e5832e9d7db213805e7f05a051ed3ba3064b"
        ],
        [
            "intros; unfold Rmin; case (Rle_dec x y); intro; assumption.",
            "VernacExtend",
            "90eca8e3e1ce5c32ac9756f83e5d3674bdccd725"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmin_glb_lt : forall x y z:R, z < x -> z < y -> z < Rmin x y.",
            "VernacStartTheoremProof",
            "34d65737f0bad5c51a0917b0345bd003a42522d5"
        ],
        [
            "intros; unfold Rmin; case (Rle_dec x y); intro; assumption.",
            "VernacExtend",
            "90eca8e3e1ce5c32ac9756f83e5d3674bdccd725"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Rmax (x y:R) : R := match Rle_dec x y with | left _ => y | right _ => x end.",
            "VernacDefinition",
            "7b1ab4e4787d4b20d047adba403d4c5d8385135d"
        ],
        [
            "Lemma Rmax_case : forall r1 r2 (P:R -> Type), P r1 -> P r2 -> P (Rmax r1 r2).",
            "VernacStartTheoremProof",
            "9f632d1b56a8cc108ba998b2cfb24a920ff4e505"
        ],
        [
            "intros r1 r2 P H1 H2; unfold Rmax; case (Rle_dec r1 r2); auto.",
            "VernacExtend",
            "a45181e1b9876ae6433076fa1dba06b221f5e5e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmax_case_strong : forall r1 r2 (P:R -> Type), (r2 <= r1 -> P r1) -> (r1 <= r2 -> P r2) -> P (Rmax r1 r2).",
            "VernacStartTheoremProof",
            "617cd166ca9623634a8abcc2f083b5899cd1c095"
        ],
        [
            "intros r1 r2 P H1 H2; unfold Rmax; case (Rle_dec r1 r2); auto with real.",
            "VernacExtend",
            "d4be66d450327efb773f3f4b269d31d2e871fbd7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmax_Rle : forall r1 r2 r, r <= Rmax r1 r2 <-> r <= r1 \\/ r <= r2.",
            "VernacStartTheoremProof",
            "9b209cc85352f9b907082649eeec77198c8a7d27"
        ],
        [
            "intros; split.",
            "VernacExtend",
            "786909835bea92a2bb1ac0d0634a6eb379d5f275"
        ],
        [
            "unfold Rmax; case (Rle_dec r1 r2); intros; auto.",
            "VernacExtend",
            "cd83e7fd361785fc836d9d03cff99cddd4cb6c20"
        ],
        [
            "intro; unfold Rmax; case (Rle_dec r1 r2) as [|Hnle]; elim H; clear H; intros; auto.",
            "VernacExtend",
            "c7ea6bf10cd01ee1a2504a9e78f4e3504f68d263"
        ],
        [
            "apply (Rle_trans r r1 r2); auto.",
            "VernacExtend",
            "8d007e1286a9b25ccd657da81d54e39bfc4a9723"
        ],
        [
            "generalize (Rnot_le_lt r1 r2 Hnle); clear Hnle; intro; unfold Rgt in H0; apply (Rlt_le r r1 (Rle_lt_trans r r2 r1 H H0)).",
            "VernacExtend",
            "76c9d3aca22ed11989cb1f16a088729233cd714d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmax_comm : forall x y:R, Rmax x y = Rmax y x.",
            "VernacStartTheoremProof",
            "3b02c36e8984ba33dedaebc034ec8c12a947457c"
        ],
        [
            "intros p q; unfold Rmax; case (Rle_dec p q); case (Rle_dec q p); auto; intros H1 H2; apply Rle_antisym; auto with real.",
            "VernacExtend",
            "2fcc298c48d80878d9c187ed9ffbb069458bd642"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation RmaxSym := Rmax_comm (only parsing).",
            "VernacSyntacticDefinition",
            "74a0c8a3db8035378cd93f5743c6ef9ce16cb24e"
        ],
        [
            "Lemma Rmax_l : forall x y:R, x <= Rmax x y.",
            "VernacStartTheoremProof",
            "877fe8a4ffea0cfc0c5ebd5580324f79467b8289"
        ],
        [
            "intros; unfold Rmax; case (Rle_dec x y); intro H1; [ assumption | auto with real ].",
            "VernacExtend",
            "7cd042de664e05dfef87d62d3c233c0a093ecb54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmax_r : forall x y:R, y <= Rmax x y.",
            "VernacStartTheoremProof",
            "ae81e0999fadeb270930a17abff3ba2840e30182"
        ],
        [
            "intros; unfold Rmax; case (Rle_dec x y); intro H1; [ right; reflexivity | auto with real ].",
            "VernacExtend",
            "e7333c0d98e9cb0f902d5e84b7c0712c86cac56f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation RmaxLess1 := Rmax_l (only parsing).",
            "VernacSyntacticDefinition",
            "9f5c368a4badfdc5c23c75fece04da3ac3bce599"
        ],
        [
            "Notation RmaxLess2 := Rmax_r (only parsing).",
            "VernacSyntacticDefinition",
            "d5352244d8e907accb49dfdeeff83cee1bdaae65"
        ],
        [
            "Lemma Rmax_left : forall x y, y <= x -> Rmax x y = x.",
            "VernacStartTheoremProof",
            "2cd94b1331a39106dc1a68e5355ef71d09c727ee"
        ],
        [
            "intros; apply Rmax_case_strong; auto using Rle_antisym.",
            "VernacExtend",
            "8405deea2e42759fd6e3a237cea6eecfedf80378"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmax_right : forall x y, x <= y -> Rmax x y = y.",
            "VernacStartTheoremProof",
            "1f9e3fe8c90c9d7d253e30b535dda08138346d21"
        ],
        [
            "intros; apply Rmax_case_strong; auto using Rle_antisym.",
            "VernacExtend",
            "8405deea2e42759fd6e3a237cea6eecfedf80378"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rle_max_compat_r : forall x y z, x <= y -> Rmax x z <= Rmax y z.",
            "VernacStartTheoremProof",
            "a0314f99a46a360f96e4c114030890cc429f1713"
        ],
        [
            "intros; do 2 (apply Rmax_case_strong; intro); eauto using Rle_trans, Rle_refl.",
            "VernacExtend",
            "5bf04bcea49794dba9054ae7c22c2841f2bf290b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rle_max_compat_l : forall x y z, x <= y -> Rmax z x <= Rmax z y.",
            "VernacStartTheoremProof",
            "9b8caa4bcecbf5ac0bc4d2df72e1642c987f3282"
        ],
        [
            "intros; do 2 (apply Rmax_case_strong; intro); eauto using Rle_trans, Rle_refl.",
            "VernacExtend",
            "5bf04bcea49794dba9054ae7c22c2841f2bf290b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RmaxRmult : forall (p q:R) r, 0 <= r -> Rmax (r * p) (r * q) = r * Rmax p q.",
            "VernacStartTheoremProof",
            "80236439aaca82b2bc224f0f5528704e8c7414c1"
        ],
        [
            "intros p q r H; unfold Rmax.",
            "VernacExtend",
            "44574a121e450ce14cc464180a1a6d4f78902db9"
        ],
        [
            "case (Rle_dec p q); case (Rle_dec (r * p) (r * q)); auto; intros H1 H2; auto.",
            "VernacExtend",
            "4c40ce67fbe9932abdf295c6be68480ebc8690ab"
        ],
        [
            "case H; intros E1.",
            "VernacExtend",
            "efd4593f53e5eda92fdfdf9fdc55db15ae90c594"
        ],
        [
            "case H1; auto with real.",
            "VernacExtend",
            "6caae5709fe0d47b8468bf88b45d292d48db1607"
        ],
        [
            "rewrite <- E1; repeat rewrite Rmult_0_l; auto.",
            "VernacExtend",
            "082da5ea9d4280801824d0518fe3618d5e88b56f"
        ],
        [
            "case H; intros E1.",
            "VernacExtend",
            "efd4593f53e5eda92fdfdf9fdc55db15ae90c594"
        ],
        [
            "case H2; auto with real.",
            "VernacExtend",
            "687e078841f5214db3f57230b6792c68c43016c2"
        ],
        [
            "apply Rmult_le_reg_l with (r := r); auto.",
            "VernacExtend",
            "637685e051aa5cc73e441b8602b2ab19411c4be6"
        ],
        [
            "rewrite <- E1; repeat rewrite Rmult_0_l; auto.",
            "VernacExtend",
            "082da5ea9d4280801824d0518fe3618d5e88b56f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmax_stable_in_negreal : forall x y:negreal, Rmax x y < 0.",
            "VernacStartTheoremProof",
            "40ae31ad2e5553450a233900985c1c843873b9e7"
        ],
        [
            "intros; unfold Rmax; case (Rle_dec x y); intro; [ apply (cond_neg y) | apply (cond_neg x) ].",
            "VernacExtend",
            "f7b5cc12b39818431a8d96ca6b972bfcc5f94cc9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmax_lub : forall x y z:R, x <= z -> y <= z -> Rmax x y <= z.",
            "VernacStartTheoremProof",
            "fc6d7e1fa4bb115f2cdae0eb79b601f41d8472c8"
        ],
        [
            "intros; unfold Rmax; case (Rle_dec x y); intro; assumption.",
            "VernacExtend",
            "5b65eb666c8b8089786d68fc7c7edaa90bfdc499"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmax_lub_lt : forall x y z:R, x < z -> y < z -> Rmax x y < z.",
            "VernacStartTheoremProof",
            "338a7418574a625df34f9a698f699083ecb262e0"
        ],
        [
            "intros; unfold Rmax; case (Rle_dec x y); intro; assumption.",
            "VernacExtend",
            "5b65eb666c8b8089786d68fc7c7edaa90bfdc499"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmax_Rlt : forall x y z, Rmax x y < z <-> x < z /\\ y < z.",
            "VernacStartTheoremProof",
            "9ed359bf994f82f6ace0ce28e3028a6a2582b3bb"
        ],
        [
            "intros x y z; split.",
            "VernacExtend",
            "40660c006ed5e7ee7a0461ee8369d20ced109998"
        ],
        [
            "unfold Rmax; case (Rle_dec x y).",
            "VernacExtend",
            "a41bc26b2a072c44a900092f422f56bbe6afaa8d"
        ],
        [
            "intros xy yz; split;[apply Rle_lt_trans with y|]; assumption.",
            "VernacExtend",
            "6ab68708e759b3db1a924c7dd53f613e62ce08e9"
        ],
        [
            "intros xz xy; split;[|apply Rlt_trans with x;[apply Rnot_le_gt|]];assumption.",
            "VernacExtend",
            "798aa4a854428aa359e500a8014ccaf6bf5b218a"
        ],
        [
            "intros [h h']; apply Rmax_lub_lt; assumption.",
            "VernacExtend",
            "9d3f320e8c27f5d618a4165df12b54e533dbe638"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmax_neg : forall x y:R, x < 0 -> y < 0 -> Rmax x y < 0.",
            "VernacStartTheoremProof",
            "63ed2dcd280e465bccde449bf48d39873dd55d82"
        ],
        [
            "intros; unfold Rmax.",
            "VernacExtend",
            "ea2551a5c2a8c8eb60eb711c2ffcb560da1232de"
        ],
        [
            "case (Rle_dec x y); intro; assumption.",
            "VernacExtend",
            "b0bfdebc82ddbaee83d9a9e25ea25c22ea2bd0fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rcase_abs : forall r, {r < 0} + {r >= 0}.",
            "VernacStartTheoremProof",
            "b61aa206ff26bb4d325cdaedc372e8ba305e006b"
        ],
        [
            "intro; generalize (Rle_dec 0 r); intro X; elim X; intro H; clear X.",
            "VernacExtend",
            "63c93f8bc49bd4ec95a685addcefcdd64f0591cd"
        ],
        [
            "right; apply (Rle_ge 0 r H).",
            "VernacExtend",
            "291f891c437f655b1e7a3d65dec2c0c2b919342b"
        ],
        [
            "left; fold (0 > r); apply (Rnot_le_lt 0 r H).",
            "VernacExtend",
            "89647b052b10bb290b712bd7d8245ce56f9757cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Rabs r : R := match Rcase_abs r with | left _ => - r | right _ => r end.",
            "VernacDefinition",
            "374320c5c1c7afc157b213d5296538eee06a176c"
        ],
        [
            "Lemma Rabs_R0 : Rabs 0 = 0.",
            "VernacStartTheoremProof",
            "8998bc20f2d2bc461ce51acba1effc69784855a9"
        ],
        [
            "unfold Rabs; case (Rcase_abs 0); auto; intro.",
            "VernacExtend",
            "b4147284c6f0f66309fb259fdb558d8b79c77579"
        ],
        [
            "generalize (Rlt_irrefl 0); intro; exfalso; auto.",
            "VernacExtend",
            "faeec90489ec3d0d111c56e5096fbb577a539723"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_R1 : Rabs 1 = 1.",
            "VernacStartTheoremProof",
            "44e256245aa47242d4a5d798d7160fcddee9d9c3"
        ],
        [
            "unfold Rabs; case (Rcase_abs 1); auto with real.",
            "VernacExtend",
            "b722cc232c7372f3e35c2dfc5fdbfa7cf310bd83"
        ],
        [
            "intros H; absurd (1 < 0); auto with real.",
            "VernacExtend",
            "da029c1c6921eee83724eb21b6fb53ad1811b09f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_no_R0 : forall r, r <> 0 -> Rabs r <> 0.",
            "VernacStartTheoremProof",
            "498cbd58361af8b3190ce4de031d5814afaebee2"
        ],
        [
            "intros; unfold Rabs; case (Rcase_abs r); intro; auto.",
            "VernacExtend",
            "e775c54bb84cdfbc4699097a95cb0238ba980d9c"
        ],
        [
            "apply Ropp_neq_0_compat; auto.",
            "VernacExtend",
            "0ee5c4d073f33a6be1bf9a1d2bfcb6182561af2d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_left : forall r, r < 0 -> Rabs r = - r.",
            "VernacStartTheoremProof",
            "fc11a2da32f4d7af91991c2f432b954ce44c2b1b"
        ],
        [
            "intros; unfold Rabs; case (Rcase_abs r); trivial; intro; absurd (r >= 0).",
            "VernacExtend",
            "82dd647deff77825ace36b23add70aec637d7727"
        ],
        [
            "exact (Rlt_not_ge r 0 H).",
            "VernacExtend",
            "b35cabc7e9a110d055f5bf37d2b5050b95f0528a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_right : forall r, r >= 0 -> Rabs r = r.",
            "VernacStartTheoremProof",
            "5ceaa7457b0ce981469219e5168778e300e62395"
        ],
        [
            "intros; unfold Rabs; case (Rcase_abs r) as [Hlt|Hge].",
            "VernacExtend",
            "44b7b300fb70d85c2f93791b2ab7c73c0f4bcb03"
        ],
        [
            "absurd (r >= 0).",
            "VernacExtend",
            "14498789c46193e1c4f8cef74d5e8840db1de9ce"
        ],
        [
            "exact (Rlt_not_ge r 0 Hlt).",
            "VernacExtend",
            "a225ba9771eb2b5644791588c62075536451bb2f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_left1 : forall a:R, a <= 0 -> Rabs a = - a.",
            "VernacStartTheoremProof",
            "513053b12b732ca5879c27d8addd897bb758342a"
        ],
        [
            "intros a H; case H; intros H1.",
            "VernacExtend",
            "7ff3cc78dc8ff9e3c8bd48e6d164fed7ecf3f376"
        ],
        [
            "apply Rabs_left; auto.",
            "VernacExtend",
            "89484c58961ef5b69dcb0bc77e45bad782de0a67"
        ],
        [
            "rewrite H1; simpl; rewrite Rabs_right; auto with real.",
            "VernacExtend",
            "0912db36fe488f59945228d30139e2989f9c79db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_pos : forall x:R, 0 <= Rabs x.",
            "VernacStartTheoremProof",
            "e17115a1a689e624f515d559aafce74c9643b76d"
        ],
        [
            "intros; unfold Rabs; case (Rcase_abs x) as [Hlt|Hge].",
            "VernacExtend",
            "b398d7abf331e5ef4700eba56e06b80c4b849dfa"
        ],
        [
            "generalize (Ropp_lt_gt_contravar x 0 Hlt); intro; unfold Rgt in H; rewrite Ropp_0 in H; left; assumption.",
            "VernacExtend",
            "8fed61bae8dca11789873958b717bde2e2bb14c8"
        ],
        [
            "apply Rge_le; assumption.",
            "VernacExtend",
            "6cfd2327efee85b0a83bce52034072669204f4d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rle_abs : forall x:R, x <= Rabs x.",
            "VernacStartTheoremProof",
            "c39fd9d4998ed986f95e5078eb38d37fa04c0233"
        ],
        [
            "intro; unfold Rabs; case (Rcase_abs x); intros; lra.",
            "VernacExtend",
            "188cf2bf0c463051716fa1f973460fc8ec92237d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition RRle_abs := Rle_abs.",
            "VernacDefinition",
            "6bab63d1439572e61157040fd87f44090a491fa0"
        ],
        [
            "Lemma Rabs_le : forall a b, -b <= a <= b -> Rabs a <= b.",
            "VernacStartTheoremProof",
            "070dd67cad73b7640c13523bb3be8e482e2e78a4"
        ],
        [
            "intros a b; unfold Rabs; case Rcase_abs.",
            "VernacExtend",
            "4c3b1171ebc3bb4b7dfdcc5c67b89bd0dc7f314f"
        ],
        [
            "intros _ [it _]; apply Ropp_le_cancel; rewrite Ropp_involutive; exact it.",
            "VernacExtend",
            "3b9ad885b68c08c93b0cb4bcb357ae6a14cb4585"
        ],
        [
            "intros _ [_ it]; exact it.",
            "VernacExtend",
            "691b348b3b996204070a4602ad7954c4aeb3aca2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_pos_eq : forall x:R, 0 <= x -> Rabs x = x.",
            "VernacStartTheoremProof",
            "45e447c48ff1ce441286427c57d7551ce6a60ab9"
        ],
        [
            "intros; unfold Rabs; case (Rcase_abs x) as [Hlt|Hge]; [ generalize (Rgt_not_le 0 x Hlt); intro; exfalso; auto | trivial ].",
            "VernacExtend",
            "17356bb2af68b96710568542934d0e3cf7f55ff9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_Rabsolu : forall x:R, Rabs (Rabs x) = Rabs x.",
            "VernacStartTheoremProof",
            "c1a0ebb3c07d929eeab58eaa4f785c69258605a6"
        ],
        [
            "intro; apply (Rabs_pos_eq (Rabs x) (Rabs_pos x)).",
            "VernacExtend",
            "8d1cfecaa88fcbdffe8d73d50f69dbce4eb0237b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_pos_lt : forall x:R, x <> 0 -> 0 < Rabs x.",
            "VernacStartTheoremProof",
            "5cad3fd2b72424b94d44f504585e9eacc0e22224"
        ],
        [
            "intros; destruct (Rabs_pos x) as [|Heq]; auto.",
            "VernacExtend",
            "3bf06c4de81d19f242f01e52e8e0568a7708ef2f"
        ],
        [
            "apply Rabs_no_R0 in H; symmetry in Heq; contradiction.",
            "VernacExtend",
            "2825ddf6764af1cbef6bed37b11fdc86ca2535ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_minus_sym : forall x y:R, Rabs (x - y) = Rabs (y - x).",
            "VernacStartTheoremProof",
            "bdb3057262527ff70a59b11bcf09ccfb3f0386f7"
        ],
        [
            "intros; unfold Rabs; case (Rcase_abs (x - y)) as [Hlt|Hge]; case (Rcase_abs (y - x)) as [Hlt'|Hge'].",
            "VernacExtend",
            "7bbc929dc2a8403a644337075ae502d057f56a88"
        ],
        [
            "apply Rminus_lt, Rlt_asym in Hlt; apply Rminus_lt in Hlt'; contradiction.",
            "VernacExtend",
            "d937b220d71f0f4ba4a2321de881b1981c97d20c"
        ],
        [
            "rewrite (Ropp_minus_distr x y); trivial.",
            "VernacExtend",
            "00236b99bb2685595d7b4023ccb8c1c93e79cf2c"
        ],
        [
            "rewrite (Ropp_minus_distr y x); trivial.",
            "VernacExtend",
            "4fd50694bbfea61bf39f6d65e1fd8d74c13b8939"
        ],
        [
            "destruct Hge; destruct Hge'.",
            "VernacExtend",
            "7760634d640499c9ca1f8073dba1c0ee4b383504"
        ],
        [
            "apply Ropp_lt_gt_0_contravar in H; rewrite (Ropp_minus_distr x y) in H; apply Rlt_asym in H0; contradiction.",
            "VernacExtend",
            "2885458fd67ad8b04deaa2eddc5e7ba118613a02"
        ],
        [
            "apply Rminus_diag_uniq in H0 as ->; trivial.",
            "VernacExtend",
            "2b92800f318ce06311be8ac3f8f2369a27fbc29c"
        ],
        [
            "apply Rminus_diag_uniq in H as ->; trivial.",
            "VernacExtend",
            "329a7788c33c90527b66c886c8841d00e25408a9"
        ],
        [
            "apply Rminus_diag_uniq in H0 as ->; trivial.",
            "VernacExtend",
            "2b92800f318ce06311be8ac3f8f2369a27fbc29c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_mult : forall x y:R, Rabs (x * y) = Rabs x * Rabs y.",
            "VernacStartTheoremProof",
            "c1c6fa32da476b8837d5dc4b995589e62d1a8af5"
        ],
        [
            "intros; unfold Rabs; case (Rcase_abs (x * y)) as [Hlt|Hge]; case (Rcase_abs x) as [Hltx|Hgex]; case (Rcase_abs y) as [Hlty|Hgey]; auto.",
            "VernacExtend",
            "14b51dd402e173808336120ab7f238fb98f49e39"
        ],
        [
            "apply Rmult_lt_gt_compat_neg_l with (r:=x), Rlt_asym in Hlty; trivial.",
            "VernacExtend",
            "62ffb2d32efe0864d6936575bb32faa59a31d1f4"
        ],
        [
            "rewrite Rmult_0_r in Hlty; contradiction.",
            "VernacExtend",
            "c75a381e3a7c4361f5a9a5b320fab75eb74adb82"
        ],
        [
            "rewrite (Ropp_mult_distr_l_reverse x y); trivial.",
            "VernacExtend",
            "b930a6e8a1cf52fce2db26d49dd3002573838fbb"
        ],
        [
            "rewrite (Rmult_comm x (- y)); rewrite (Ropp_mult_distr_l_reverse y x); rewrite (Rmult_comm x y); trivial.",
            "VernacExtend",
            "cd223e714ba272d5c4af223b1d0867e0ea29cc5e"
        ],
        [
            "destruct Hgex as [| ->], Hgey as [| ->].",
            "VernacExtend",
            "bc7683e9a552f4dc70c7e1da799424032dabbd34"
        ],
        [
            "apply Rmult_lt_compat_l with (r:=x), Rlt_asym in H0; trivial.",
            "VernacExtend",
            "6049fc3518383d3a5fd54a69a8780d5a1ba7d2db"
        ],
        [
            "rewrite Rmult_0_r in H0; contradiction.",
            "VernacExtend",
            "ee634c84d7035391b3005ec32adcb3d0576e8f44"
        ],
        [
            "rewrite Rmult_0_r in Hlt; contradiction (Rlt_irrefl 0).",
            "VernacExtend",
            "616c064066fa01bfba1f205e3c200c13715aa4ec"
        ],
        [
            "rewrite Rmult_0_l in Hlt; contradiction (Rlt_irrefl 0).",
            "VernacExtend",
            "29a1140f5f3a2eb194e88563fbd2ae44d0e9186e"
        ],
        [
            "rewrite Rmult_0_l in Hlt; contradiction (Rlt_irrefl 0).",
            "VernacExtend",
            "29a1140f5f3a2eb194e88563fbd2ae44d0e9186e"
        ],
        [
            "rewrite (Rmult_opp_opp x y); trivial.",
            "VernacExtend",
            "21c116eab4c5b2b9c5ab86fd444b9c2f00e5ebfb"
        ],
        [
            "destruct Hge.",
            "VernacExtend",
            "d1d8bb468128c04c799ac198e528c5d74f888769"
        ],
        [
            "destruct Hgey.",
            "VernacExtend",
            "1d25c17165d97848d36fde733cfcfe6edc0c3427"
        ],
        [
            "apply Rmult_lt_compat_r with (r:=y), Rlt_asym in Hltx; trivial.",
            "VernacExtend",
            "ef117e2664282508d4490452c8be0e3e2357e971"
        ],
        [
            "rewrite Rmult_0_l in Hltx; contradiction.",
            "VernacExtend",
            "07aa1990d5661a4b2836f4a26cc688a8690c10b7"
        ],
        [
            "rewrite H0, Rmult_0_r in H; contradiction (Rlt_irrefl 0).",
            "VernacExtend",
            "c15ed71034b48969fff05b2627385097cdfeeff2"
        ],
        [
            "rewrite <- Ropp_mult_distr_l, H, Ropp_0; trivial.",
            "VernacExtend",
            "4a62bcba2c1b8ad136a0bfa4420b91468d318f9e"
        ],
        [
            "destruct Hge.",
            "VernacExtend",
            "d1d8bb468128c04c799ac198e528c5d74f888769"
        ],
        [
            "destruct Hgex.",
            "VernacExtend",
            "95122757520c071560576876617568232b5c2dca"
        ],
        [
            "apply Rmult_lt_compat_l with (r:=x), Rlt_asym in Hlty; trivial.",
            "VernacExtend",
            "4e5e44f9bd7972ca723feedb7a29b76dc43efbfb"
        ],
        [
            "rewrite Rmult_0_r in Hlty; contradiction.",
            "VernacExtend",
            "c75a381e3a7c4361f5a9a5b320fab75eb74adb82"
        ],
        [
            "rewrite H0, 2!Rmult_0_l; trivial.",
            "VernacExtend",
            "509c1a32608fdf57fea6e663b52f73fb14517e37"
        ],
        [
            "rewrite <- Ropp_mult_distr_r, H, Ropp_0; trivial.",
            "VernacExtend",
            "b95fe97d5feb90566977f955fecc30b05332f1ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_Rinv : forall r, r <> 0 -> Rabs (/ r) = / Rabs r.",
            "VernacStartTheoremProof",
            "139bb0522accc9efc69e705cfa085cf6b96c8389"
        ],
        [
            "intro; unfold Rabs; case (Rcase_abs r) as [Hlt|Hge]; case (Rcase_abs (/ r)) as [Hlt'|Hge']; auto; intros.",
            "VernacExtend",
            "5e3d9205c69afef1560db90e2972a6d9dbcfd126"
        ],
        [
            "apply Ropp_inv_permute; auto.",
            "VernacExtend",
            "f1814a65a11e867e794988d6256d668a88c8ca5b"
        ],
        [
            "rewrite <- Ropp_inv_permute; trivial.",
            "VernacExtend",
            "e4c24b39861227acbaebe7ef19f05aa45a3fabbb"
        ],
        [
            "destruct Hge' as [| ->].",
            "VernacExtend",
            "a995442b9dffc4933af93f9e57b8a53f5788b502"
        ],
        [
            "apply Rinv_lt_0_compat, Rlt_asym in Hlt; contradiction.",
            "VernacExtend",
            "eed35345a93fe058ce08d023966dd3658fcd42b4"
        ],
        [
            "rewrite Ropp_0; trivial.",
            "VernacExtend",
            "3d9ff84b6b1014d13c9c2f11c1304a86e846f741"
        ],
        [
            "destruct Hge as [| ->].",
            "VernacExtend",
            "33d108ce65f14bbfe81facbe101b11cea158e4f1"
        ],
        [
            "apply Rinv_0_lt_compat, Rlt_asym in H0; contradiction.",
            "VernacExtend",
            "5a57a20f4f830c97bfbe1ee0e817323dc0ee1730"
        ],
        [
            "contradiction (refl_equal 0).",
            "VernacExtend",
            "87eb1e696e44559042f7fbaae61ebe484cc72144"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_Ropp : forall x:R, Rabs (- x) = Rabs x.",
            "VernacStartTheoremProof",
            "7c3451da4b3e0dbbc8be820832282a5734df75bd"
        ],
        [
            "intro; replace (-x) with (-1 * x) by ring.",
            "VernacExtend",
            "86e9dc1bbd1b2763fa2ea9956074e5f4da3cbdd8"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "replace (Rabs (-1)) with 1.",
            "VernacExtend",
            "6e3337e831454b049e8e800b68869b2fc45d1ed1"
        ],
        [
            "apply Rmult_1_l.",
            "VernacExtend",
            "959b7f02068b29f8617e378fce47501de4230f61"
        ],
        [
            "unfold Rabs; case (Rcase_abs (-1)).",
            "VernacExtend",
            "4abc05c91ad107e59d1dd4e2f7931192994c79da"
        ],
        [
            "intro; ring.",
            "VernacExtend",
            "a63cb55c0d6dc7f5f40d630fd18daddefae14d26"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "intro H0; apply Ropp_ge_cancel in H0.",
            "VernacExtend",
            "24757c770440e09ba94a548a732ae643e4e3290d"
        ],
        [
            "elim (Rge_not_lt _ _ H0).",
            "VernacExtend",
            "30ebec69606b42fe0c702fef83af416135b0f9a0"
        ],
        [
            "apply Rlt_0_1.",
            "VernacExtend",
            "c3f675388bf844e0740197fd71afa66e5eef091d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_triang : forall a b:R, Rabs (a + b) <= Rabs a + Rabs b.",
            "VernacStartTheoremProof",
            "63ab863c8310d1a04e22215388381d9fce6e49b7"
        ],
        [
            "intros a b; unfold Rabs; case (Rcase_abs (a + b)) as [Hlt|Hge]; case (Rcase_abs a) as [Hlta|Hgea]; case (Rcase_abs b) as [Hltb|Hgeb].",
            "VernacExtend",
            "3a6cd0d7c2d6cc0302b8285c7eb46270d4b99790"
        ],
        [
            "apply (Req_le (- (a + b)) (- a + - b)); rewrite (Ropp_plus_distr a b); reflexivity.",
            "VernacExtend",
            "cde3e9426f891a068aded2b0e8816122d3aaf353"
        ],
        [
            "rewrite (Ropp_plus_distr a b); apply (Rplus_le_compat_l (- a) (- b) b); unfold Rle; elim Hgeb; intro.",
            "VernacExtend",
            "248c0e1747f6d8e9f88ad0d4f0cfe02f833c9a72"
        ],
        [
            "left; unfold Rgt in H; generalize (Rplus_lt_compat_l (- b) 0 b H); intro; elim (Rplus_ne (- b)); intros v w; rewrite v in H0; clear v w; rewrite (Rplus_opp_l b) in H0; apply (Rlt_trans (- b) 0 b H0 H).",
            "VernacExtend",
            "6ee73d39c1f48df1dc0a0e2cb57b86cb3471763f"
        ],
        [
            "right; rewrite H; apply Ropp_0.",
            "VernacExtend",
            "f8b987cb4bcaa689010d519bf25cba19a21189a4"
        ],
        [
            "rewrite (Ropp_plus_distr a b); rewrite (Rplus_comm (- a) (- b)); rewrite (Rplus_comm a (- b)); apply (Rplus_le_compat_l (- b) (- a) a); unfold Rle; elim Hgea; intro.",
            "VernacExtend",
            "0b9f69729363f02465f25a05d20066abf1b8824f"
        ],
        [
            "left; unfold Rgt in H; generalize (Rplus_lt_compat_l (- a) 0 a H); intro; elim (Rplus_ne (- a)); intros v w; rewrite v in H0; clear v w; rewrite (Rplus_opp_l a) in H0; apply (Rlt_trans (- a) 0 a H0 H).",
            "VernacExtend",
            "158e23e417a5112a310e1edcabbbf688998cddb0"
        ],
        [
            "right; rewrite H; apply Ropp_0.",
            "VernacExtend",
            "f8b987cb4bcaa689010d519bf25cba19a21189a4"
        ],
        [
            "exfalso; generalize (Rplus_ge_compat_l a b 0 Hgeb); intro; elim (Rplus_ne a); intros v w; rewrite v in H; clear v w; generalize (Rge_trans (a + b) a 0 H Hgea); intro; clear H; unfold Rge in H0; elim H0; intro; clear H0.",
            "VernacExtend",
            "709ecb25165d1150f9b4a2c76c5760cb7de16b79"
        ],
        [
            "unfold Rgt in H; generalize (Rlt_asym (a + b) 0 Hlt); intro; auto.",
            "VernacExtend",
            "b3c1133f77fe8a838d30946bc6f42e80c34a4c23"
        ],
        [
            "absurd (a + b = 0); auto.",
            "VernacExtend",
            "5a43be6b8d46274085fd0c175376d6b333b9a8af"
        ],
        [
            "apply (Rlt_dichotomy_converse (a + b) 0); left; assumption.",
            "VernacExtend",
            "b63454ff2ec64212863b1e55fafd8c928cf6eba9"
        ],
        [
            "exfalso; generalize (Rplus_lt_compat_l a b 0 Hltb); intro; elim (Rplus_ne a); intros v w; rewrite v in H; clear v w; generalize (Rlt_trans (a + b) a 0 H Hlta); intro; clear H; destruct Hge.",
            "VernacExtend",
            "4758eb909be3a7a5c15d7ab85eea1e1cb9268d26"
        ],
        [
            "unfold Rgt in H; generalize (Rlt_trans (a + b) 0 (a + b) H0 H); intro; apply (Rlt_irrefl (a + b)); assumption.",
            "VernacExtend",
            "13ff5f5f01a4eb616381bfff7eb2af2f0838f938"
        ],
        [
            "rewrite H in H0; apply (Rlt_irrefl 0); assumption.",
            "VernacExtend",
            "a772becb225752d5c6d0afaf7e9f27643101cae7"
        ],
        [
            "rewrite (Rplus_comm a b); rewrite (Rplus_comm (- a) b); apply (Rplus_le_compat_l b a (- a)); apply (Rminus_le a (- a)); unfold Rminus; rewrite (Ropp_involutive a); generalize (Rplus_lt_compat_l a a 0 Hlta); clear Hge Hgeb; intro; elim (Rplus_ne a); intros v w; rewrite v in H; clear v w; generalize (Rlt_trans (a + a) a 0 H Hlta); intro; apply (Rlt_le (a + a) 0 H0).",
            "VernacExtend",
            "758402fbf632eaeef84234072ce655170b67e94f"
        ],
        [
            "apply (Rplus_le_compat_l a b (- b)); apply (Rminus_le b (- b)); unfold Rminus; rewrite (Ropp_involutive b); generalize (Rplus_lt_compat_l b b 0 Hltb); clear Hge Hgea; intro; elim (Rplus_ne b); intros v w; rewrite v in H; clear v w; generalize (Rlt_trans (b + b) b 0 H Hltb); intro; apply (Rlt_le (b + b) 0 H0).",
            "VernacExtend",
            "ba30286b0eb11dfc601e567058d1e16070a25dad"
        ],
        [
            "unfold Rle; right; reflexivity.",
            "VernacExtend",
            "37eaf209423ac00245c2153d226a7b1dc91b2dc6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_triang_inv : forall a b:R, Rabs a - Rabs b <= Rabs (a - b).",
            "VernacStartTheoremProof",
            "f895022202fa51a01d5aa19855b4d2d61e186b1c"
        ],
        [
            "intros; apply (Rplus_le_reg_l (Rabs b) (Rabs a - Rabs b) (Rabs (a - b))); unfold Rminus; rewrite <- (Rplus_assoc (Rabs b) (Rabs a) (- Rabs b)); rewrite (Rplus_comm (Rabs b) (Rabs a)); rewrite (Rplus_assoc (Rabs a) (Rabs b) (- Rabs b)); rewrite (Rplus_opp_r (Rabs b)); rewrite (proj1 (Rplus_ne (Rabs a))); replace (Rabs a) with (Rabs (a + 0)).",
            "VernacExtend",
            "dd49d79925e8336ca01263ddabbbaf4fc1934b5b"
        ],
        [
            "rewrite <- (Rplus_opp_r b); rewrite <- (Rplus_assoc a b (- b)); rewrite (Rplus_comm a b); rewrite (Rplus_assoc b a (- b)).",
            "VernacExtend",
            "9d7d4d6ea8bd2041295d825f7abda381002cd02b"
        ],
        [
            "exact (Rabs_triang b (a + - b)).",
            "VernacExtend",
            "7492d031e68e0dae319126277b61dc3990c4343d"
        ],
        [
            "rewrite (proj1 (Rplus_ne a)); trivial.",
            "VernacExtend",
            "dd860f51ac3252bb1416be6c77675189cbf852d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_triang_inv2 : forall a b:R, Rabs (Rabs a - Rabs b) <= Rabs (a - b).",
            "VernacStartTheoremProof",
            "8104549e5b2e872022c341032750b43c91924af5"
        ],
        [
            "cut (forall a b:R, Rabs b <= Rabs a -> Rabs (Rabs a - Rabs b) <= Rabs (a - b)).",
            "VernacExtend",
            "ca9eb979bae5ed0c729f276ef2b65df055d23023"
        ],
        [
            "intros; destruct (Rtotal_order (Rabs a) (Rabs b)) as [Hlt| [Heq| Hgt]].",
            "VernacExtend",
            "66d8558e1bb0d6e4b55eed28076008270d1126a8"
        ],
        [
            "rewrite <- (Rabs_Ropp (Rabs a - Rabs b)); rewrite <- (Rabs_Ropp (a - b)); do 2 rewrite Ropp_minus_distr.",
            "VernacExtend",
            "7386d9c26910512188140d0b11044ae64a48b5ed"
        ],
        [
            "apply H; left; assumption.",
            "VernacExtend",
            "717136e2410106e97ec2ed4bfa4bdcb83ad4e48c"
        ],
        [
            "rewrite Heq; unfold Rminus; rewrite Rplus_opp_r; rewrite Rabs_R0; apply Rabs_pos.",
            "VernacExtend",
            "fecd0ccfd00f6ef729c1fd5a6dfa6f5c162a2907"
        ],
        [
            "apply H; left; assumption.",
            "VernacExtend",
            "717136e2410106e97ec2ed4bfa4bdcb83ad4e48c"
        ],
        [
            "intros; replace (Rabs (Rabs a - Rabs b)) with (Rabs a - Rabs b).",
            "VernacExtend",
            "c8de728427d89507778743b9d45e5209c5a829b4"
        ],
        [
            "apply Rabs_triang_inv.",
            "VernacExtend",
            "94c787885c8134a096c52441bd6a492bcd493d00"
        ],
        [
            "rewrite (Rabs_right (Rabs a - Rabs b)); [ reflexivity | apply Rle_ge; apply Rplus_le_reg_l with (Rabs b); rewrite Rplus_0_r; replace (Rabs b + (Rabs a - Rabs b)) with (Rabs a); [ assumption | ring ] ].",
            "VernacExtend",
            "fe781032eb9eb3ce8457ca254c3dfb6c957376ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_def1 : forall x a:R, x < a -> - a < x -> Rabs x < a.",
            "VernacStartTheoremProof",
            "c649b798c12b3c7620d528371dd33467582cbac3"
        ],
        [
            "unfold Rabs; intros; case (Rcase_abs x); intro.",
            "VernacExtend",
            "e6eec4006b3a9f8f4f1f3188f03a911324d232bf"
        ],
        [
            "generalize (Ropp_lt_gt_contravar (- a) x H0); unfold Rgt; rewrite Ropp_involutive; intro; assumption.",
            "VernacExtend",
            "3a8cb4e3a87543238be7435f8250e5766577bab9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_def2 : forall x a:R, Rabs x < a -> x < a /\\ - a < x.",
            "VernacStartTheoremProof",
            "71ed4feebcb25e6938a3c377f2be16464cf0b8b8"
        ],
        [
            "unfold Rabs; intro x; case (Rcase_abs x) as [Hlt|Hge]; intros.",
            "VernacExtend",
            "004492c01f16e60571b2deed0a4bbb4981f8fe70"
        ],
        [
            "generalize (Ropp_gt_lt_0_contravar x Hlt); unfold Rgt; intro; generalize (Rlt_trans 0 (- x) a H0 H); intro; split.",
            "VernacExtend",
            "e41e0a27329521a1969ce03b944f648359c4f9e1"
        ],
        [
            "apply (Rlt_trans x 0 a Hlt H1).",
            "VernacExtend",
            "5144b4ec3ceb0a6f2c8ef986cbb615ee942962cc"
        ],
        [
            "generalize (Ropp_lt_gt_contravar (- x) a H); rewrite (Ropp_involutive x); unfold Rgt; trivial.",
            "VernacExtend",
            "319551fdb2eeb66e119ddb2f822e7c87b31c60df"
        ],
        [
            "fold (a > x) in H; generalize (Rgt_ge_trans a x 0 H Hge); intro; generalize (Ropp_lt_gt_0_contravar a H0); intro; fold (0 > - a); generalize (Rge_gt_trans x 0 (- a) Hge H1); unfold Rgt; intro; split; assumption.",
            "VernacExtend",
            "14512b0395f280435be49fc20f42801db2f02748"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RmaxAbs : forall (p q:R) r, p <= q -> q <= r -> Rabs q <= Rmax (Rabs p) (Rabs r).",
            "VernacStartTheoremProof",
            "7c0efcb5c110401ddd99aabc038031dc62456c2d"
        ],
        [
            "intros p q r H' H'0; case (Rle_or_lt 0 p); intros H'1.",
            "VernacExtend",
            "5966dde112dd50a5fe429660b27b0ab8cabf990a"
        ],
        [
            "repeat rewrite Rabs_right; auto with real.",
            "VernacExtend",
            "acbc524ee08d51df0747101f806570b23d1c2cd0"
        ],
        [
            "apply Rle_trans with r; auto with real.",
            "VernacExtend",
            "b9d69bb8a32d2fa4dcfedbb4f9e240535d8d36e6"
        ],
        [
            "apply RmaxLess2; auto.",
            "VernacExtend",
            "ff1ccb5209443da694006020f75938d81e022790"
        ],
        [
            "apply Rge_trans with p; auto with real; apply Rge_trans with q; auto with real.",
            "VernacExtend",
            "95c09b3520f8a9b86467a9a5fab81ecf71142216"
        ],
        [
            "apply Rge_trans with p; auto with real.",
            "VernacExtend",
            "b079ec260306de9193264e3f3d3f55a6a10d13d3"
        ],
        [
            "rewrite (Rabs_left p); auto.",
            "VernacExtend",
            "a806e6c59770a3ad545e1012bd7cb62ab8abb1c6"
        ],
        [
            "case (Rle_or_lt 0 q); intros H'2.",
            "VernacExtend",
            "c795b87af97e787699f0965560de4b0822e3acd8"
        ],
        [
            "repeat rewrite Rabs_right; auto with real.",
            "VernacExtend",
            "acbc524ee08d51df0747101f806570b23d1c2cd0"
        ],
        [
            "apply Rle_trans with r; auto.",
            "VernacExtend",
            "b82523ba2d15acc91f81ad5a067aef1041318d13"
        ],
        [
            "apply RmaxLess2; auto.",
            "VernacExtend",
            "ff1ccb5209443da694006020f75938d81e022790"
        ],
        [
            "apply Rge_trans with q; auto with real.",
            "VernacExtend",
            "ed2d5295692c2f9582b028f152a36f201c464f6c"
        ],
        [
            "rewrite (Rabs_left q); auto.",
            "VernacExtend",
            "89f1c5e1b413514dca5d289f5425ba67916826f5"
        ],
        [
            "case (Rle_or_lt 0 r); intros H'3.",
            "VernacExtend",
            "9019e663c064a8093fa884fe0b53bd83c6fba54b"
        ],
        [
            "repeat rewrite Rabs_right; auto with real.",
            "VernacExtend",
            "acbc524ee08d51df0747101f806570b23d1c2cd0"
        ],
        [
            "apply Rle_trans with (- p); auto with real.",
            "VernacExtend",
            "ac3b3ce22feb7b86611d2ae89ef21502cef7909c"
        ],
        [
            "apply RmaxLess1; auto.",
            "VernacExtend",
            "503232233912d33b93dc36366787b8296209e8a4"
        ],
        [
            "rewrite (Rabs_left r); auto.",
            "VernacExtend",
            "0c747f7088a980d600eadcb4dd4748c86cec4e3e"
        ],
        [
            "apply Rle_trans with (- p); auto with real.",
            "VernacExtend",
            "ac3b3ce22feb7b86611d2ae89ef21502cef7909c"
        ],
        [
            "apply RmaxLess1; auto.",
            "VernacExtend",
            "503232233912d33b93dc36366787b8296209e8a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_Zabs : forall z:Z, Rabs (IZR z) = IZR (Z.abs z).",
            "VernacStartTheoremProof",
            "451ff13e09c9f7252021f42fa10cdfc586d86560"
        ],
        [
            "intros z; case z; unfold Z.abs.",
            "VernacExtend",
            "f7d61d882f337f59895fdccfa4cb44635901ff6e"
        ],
        [
            "apply Rabs_R0.",
            "VernacExtend",
            "6609b4ab82fe57e983c51e226262c9d533442a79"
        ],
        [
            "now intros p0; apply Rabs_pos_eq, (IZR_le 0).",
            "VernacExtend",
            "7b68521c54e4fbbcb0ca919909f7414bca12a39e"
        ],
        [
            "unfold IZR at 1.",
            "VernacExtend",
            "dd6068e3864bbcaa16d0ade2ea9bd17e7bf6a743"
        ],
        [
            "intros p0; rewrite Rabs_Ropp.",
            "VernacExtend",
            "4dd7007e5d5a01e566c063c0a92d85fa2fa3bdfb"
        ],
        [
            "now apply Rabs_pos_eq, (IZR_le 0).",
            "VernacExtend",
            "5029f8f42761269ad0d69d24b20668adc342782c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma abs_IZR : forall z, IZR (Z.abs z) = Rabs (IZR z).",
            "VernacStartTheoremProof",
            "712059092f0e953fc3bdbd462851e18d182dc555"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "now rewrite Rabs_Zabs.",
            "VernacExtend",
            "c1076e788f01640c2fb958e22e51a97a7b10f19e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ropp_Rmax : forall x y, - Rmax x y = Rmin (-x) (-y).",
            "VernacStartTheoremProof",
            "0283fd702dde34725eec6e5c561f24e407c4427c"
        ],
        [
            "intros x y; apply Rmax_case_strong.",
            "VernacExtend",
            "41e8a1acf783b37a9c18755b7ecd6b76c5b2b7e6"
        ],
        [
            "now intros w; rewrite Rmin_left;[ | apply Rge_le, Ropp_le_ge_contravar].",
            "VernacExtend",
            "4ce556b3155bc7761c835db06b4c3e78197622f8"
        ],
        [
            "now intros w; rewrite Rmin_right; [ | apply Rge_le, Ropp_le_ge_contravar].",
            "VernacExtend",
            "1239cb2f885c4ae5c9d1603d1ceb4bfb5d94324a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Ropp_Rmin : forall x y, - Rmin x y = Rmax (-x) (-y).",
            "VernacStartTheoremProof",
            "f1099dd60d0502c7bc4f52f1a7385de204058e22"
        ],
        [
            "intros x y; apply Rmin_case_strong.",
            "VernacExtend",
            "7d3e080648dfaa5a0e1990012781d4ae6874fe38"
        ],
        [
            "now intros w; rewrite Rmax_left;[ | apply Rge_le, Ropp_le_ge_contravar].",
            "VernacExtend",
            "93b20fe5f3ab08294d0d156eef7f352b8e4e0e2e"
        ],
        [
            "now intros w; rewrite Rmax_right; [ | apply Rge_le, Ropp_le_ge_contravar].",
            "VernacExtend",
            "4298fc1cab3fbabf2bcd733a6aa9411323a8b082"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmax_assoc : forall a b c, Rmax a (Rmax b c) = Rmax (Rmax a b) c.",
            "VernacStartTheoremProof",
            "9a36e6b2aefb9af00ea5f564febd8a929ab847d9"
        ],
        [
            "intros a b c.",
            "VernacExtend",
            "1dd2f7025da4079bca622e8e5d0b458a19953dcc"
        ],
        [
            "unfold Rmax; destruct (Rle_dec b c); destruct (Rle_dec a b); destruct (Rle_dec a c); destruct (Rle_dec b c); auto with real; match goal with | id : ~ ?x <= ?y, id2 : ?x <= ?z |- _ => case id; apply Rle_trans with z; auto with real | id : ~ ?x <= ?y, id2 : ~ ?z <= ?x |- _ => case id; apply Rle_trans with z; auto with real end.",
            "VernacExtend",
            "b70075d0bdfd6126f4f66346bcb8925e8c453b43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rminmax : forall a b, Rmin a b <= Rmax a b.",
            "VernacStartTheoremProof",
            "121d9dbc3624e7e33e28003504aa7e618c0bc14c"
        ],
        [
            "intros a b; destruct (Rle_dec a b).",
            "VernacExtend",
            "f0095ba2e24689f33f9c9718c898287de05a4024"
        ],
        [
            "rewrite Rmin_left, Rmax_right; assumption.",
            "VernacExtend",
            "d53709c19c8b948b63facf419351666dddadf2db"
        ],
        [
            "now rewrite Rmin_right, Rmax_left; assumption || apply Rlt_le, Rnot_le_gt.",
            "VernacExtend",
            "7472d1d4fd15e669b34ff304c60e22eec56f09f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rmin_assoc : forall x y z, Rmin x (Rmin y z) = Rmin (Rmin x y) z.",
            "VernacStartTheoremProof",
            "4d91adcf1a5c0c1da47484efbb8ba54d2d5c23dc"
        ],
        [
            "intros a b c.",
            "VernacExtend",
            "1dd2f7025da4079bca622e8e5d0b458a19953dcc"
        ],
        [
            "unfold Rmin; destruct (Rle_dec b c); destruct (Rle_dec a b); destruct (Rle_dec a c); destruct (Rle_dec b c); auto with real; match goal with | id : ~ ?x <= ?y, id2 : ?x <= ?z |- _ => case id; apply Rle_trans with z; auto with real | id : ~ ?x <= ?y, id2 : ~ ?z <= ?x |- _ => case id; apply Rle_trans with z; auto with real end.",
            "VernacExtend",
            "033e493ca91e0307fdf76e67cfb655deb95c6045"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "Rmin_case",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros r1 r2 P H1 H2; unfold Rmin; case (Rle_dec r1 r2); auto.",
                        "VernacExtend",
                        "87b0ac7e31dea8f2e9a45cb55ae04b8c0cb03edd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_case_strong",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros r1 r2 P H1 H2; unfold Rmin; destruct (Rle_dec r1 r2); auto with real.",
                        "VernacExtend",
                        "143c037a8afe025df2650403865b25131a19d5f7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_Rgt_l",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros r1 r2 r; unfold Rmin; case (Rle_dec r1 r2) as [Hle|Hnle]; intros.",
                        "VernacExtend",
                        "7fb315effccb0744a7610df44753ac648cfc3b45"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold Rgt; exact (Rlt_le_trans r r1 r2 H Hle).",
                        "VernacExtend",
                        "826fbb7499a3b781e26c901442a557c8b0991b1a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "generalize (Rnot_le_lt r1 r2 Hnle); intro; exact (Rgt_trans r1 r2 r H0 H).",
                        "VernacExtend",
                        "5fae78dff23732f43a129500dbbb17d8b8b027b0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_Rgt_r",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rmin; case (Rle_dec r1 r2); elim H; clear H; intros; assumption.",
                        "VernacExtend",
                        "a1d5a7b650ff638adbaf39d9438e2df4e57cbec3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_Rgt",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros; split.",
                        "VernacExtend",
                        "786909835bea92a2bb1ac0d0634a6eb379d5f275"
                    ]
                },
                {
                    "command": [
                        "exact (Rmin_Rgt_l r1 r2 r).",
                        "VernacExtend",
                        "71723866f71e780073a9cb489b69a5d542655bde"
                    ]
                },
                {
                    "command": [
                        "exact (Rmin_Rgt_r r1 r2 r).",
                        "VernacExtend",
                        "0909cc7f9237e0460e1a9807c45d9dac5bb357be"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_l",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rmin; case (Rle_dec x y); intro H1; [ right; reflexivity | auto with real ].",
                        "VernacExtend",
                        "7fc30fb1b6b81c4d0d6751ba387f7904365a5a54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_r",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rmin; case (Rle_dec x y); intro H1; [ assumption | auto with real ].",
                        "VernacExtend",
                        "7d82f4806e7ae3ddb690d3945eb590fa1ad1b636"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_left",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros; apply Rmin_case_strong; auto using Rle_antisym.",
                        "VernacExtend",
                        "3016274f9568b0c98f8547c68fdf797728c3ca8b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_right",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "intros; apply Rmin_case_strong; auto using Rle_antisym.",
                        "VernacExtend",
                        "3016274f9568b0c98f8547c68fdf797728c3ca8b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_min_compat_r",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros; do 2 (apply Rmin_case_strong; intro); eauto using Rle_trans, Rle_refl.",
                        "VernacExtend",
                        "c3e24b159627b21a8526d5cd92f3947d898f83af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_min_compat_l",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros; do 2 (apply Rmin_case_strong; intro); eauto using Rle_trans, Rle_refl.",
                        "VernacExtend",
                        "c3e24b159627b21a8526d5cd92f3947d898f83af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_comm",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rmin; case (Rle_dec x y); case (Rle_dec y x); intros; try reflexivity || (apply Rle_antisym; assumption || auto with real).",
                        "VernacExtend",
                        "d3ea06ef54abbc92f24871d8afc61a47e679b7a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_stable_in_posreal",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "intros; apply Rmin_Rgt_r; split; [ apply (cond_pos x) | apply (cond_pos y) ].",
                        "VernacExtend",
                        "44b0ca77d05052d3560e6d829bc307ceb8a14b57"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_pos",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rmin.",
                        "VernacExtend",
                        "74d3dc110c0611d213b6767e44a6e6b372915e92"
                    ]
                },
                {
                    "command": [
                        "case (Rle_dec x y); intro; assumption.",
                        "VernacExtend",
                        "b0bfdebc82ddbaee83d9a9e25ea25c22ea2bd0fb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_glb",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rmin; case (Rle_dec x y); intro; assumption.",
                        "VernacExtend",
                        "90eca8e3e1ce5c32ac9756f83e5d3674bdccd725"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_glb_lt",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rmin; case (Rle_dec x y); intro; assumption.",
                        "VernacExtend",
                        "90eca8e3e1ce5c32ac9756f83e5d3674bdccd725"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_case",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros r1 r2 P H1 H2; unfold Rmax; case (Rle_dec r1 r2); auto.",
                        "VernacExtend",
                        "a45181e1b9876ae6433076fa1dba06b221f5e5e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_case_strong",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros r1 r2 P H1 H2; unfold Rmax; case (Rle_dec r1 r2); auto with real.",
                        "VernacExtend",
                        "d4be66d450327efb773f3f4b269d31d2e871fbd7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_Rle",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "intros; split.",
                        "VernacExtend",
                        "786909835bea92a2bb1ac0d0634a6eb379d5f275"
                    ]
                },
                {
                    "command": [
                        "unfold Rmax; case (Rle_dec r1 r2); intros; auto.",
                        "VernacExtend",
                        "cd83e7fd361785fc836d9d03cff99cddd4cb6c20"
                    ]
                },
                {
                    "command": [
                        "intro; unfold Rmax; case (Rle_dec r1 r2) as [|Hnle]; elim H; clear H; intros; auto.",
                        "VernacExtend",
                        "c7ea6bf10cd01ee1a2504a9e78f4e3504f68d263"
                    ]
                },
                {
                    "command": [
                        "apply (Rle_trans r r1 r2); auto.",
                        "VernacExtend",
                        "8d007e1286a9b25ccd657da81d54e39bfc4a9723"
                    ]
                },
                {
                    "command": [
                        "generalize (Rnot_le_lt r1 r2 Hnle); clear Hnle; intro; unfold Rgt in H0; apply (Rlt_le r r1 (Rle_lt_trans r r2 r1 H H0)).",
                        "VernacExtend",
                        "76c9d3aca22ed11989cb1f16a088729233cd714d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_comm",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "intros p q; unfold Rmax; case (Rle_dec p q); case (Rle_dec q p); auto; intros H1 H2; apply Rle_antisym; auto with real.",
                        "VernacExtend",
                        "2fcc298c48d80878d9c187ed9ffbb069458bd642"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_l",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rmax; case (Rle_dec x y); intro H1; [ assumption | auto with real ].",
                        "VernacExtend",
                        "7cd042de664e05dfef87d62d3c233c0a093ecb54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_r",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rmax; case (Rle_dec x y); intro H1; [ right; reflexivity | auto with real ].",
                        "VernacExtend",
                        "e7333c0d98e9cb0f902d5e84b7c0712c86cac56f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_left",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "intros; apply Rmax_case_strong; auto using Rle_antisym.",
                        "VernacExtend",
                        "8405deea2e42759fd6e3a237cea6eecfedf80378"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_right",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros; apply Rmax_case_strong; auto using Rle_antisym.",
                        "VernacExtend",
                        "8405deea2e42759fd6e3a237cea6eecfedf80378"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_max_compat_r",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "intros; do 2 (apply Rmax_case_strong; intro); eauto using Rle_trans, Rle_refl.",
                        "VernacExtend",
                        "5bf04bcea49794dba9054ae7c22c2841f2bf290b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_max_compat_l",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "intros; do 2 (apply Rmax_case_strong; intro); eauto using Rle_trans, Rle_refl.",
                        "VernacExtend",
                        "5bf04bcea49794dba9054ae7c22c2841f2bf290b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RmaxRmult",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intros p q r H; unfold Rmax.",
                        "VernacExtend",
                        "44574a121e450ce14cc464180a1a6d4f78902db9"
                    ]
                },
                {
                    "command": [
                        "case (Rle_dec p q); case (Rle_dec (r * p) (r * q)); auto; intros H1 H2; auto.",
                        "VernacExtend",
                        "4c40ce67fbe9932abdf295c6be68480ebc8690ab"
                    ]
                },
                {
                    "command": [
                        "case H; intros E1.",
                        "VernacExtend",
                        "efd4593f53e5eda92fdfdf9fdc55db15ae90c594"
                    ]
                },
                {
                    "command": [
                        "case H1; auto with real.",
                        "VernacExtend",
                        "6caae5709fe0d47b8468bf88b45d292d48db1607"
                    ]
                },
                {
                    "command": [
                        "rewrite <- E1; repeat rewrite Rmult_0_l; auto.",
                        "VernacExtend",
                        "082da5ea9d4280801824d0518fe3618d5e88b56f"
                    ]
                },
                {
                    "command": [
                        "case H; intros E1.",
                        "VernacExtend",
                        "efd4593f53e5eda92fdfdf9fdc55db15ae90c594"
                    ]
                },
                {
                    "command": [
                        "case H2; auto with real.",
                        "VernacExtend",
                        "687e078841f5214db3f57230b6792c68c43016c2"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_reg_l with (r := r); auto.",
                        "VernacExtend",
                        "637685e051aa5cc73e441b8602b2ab19411c4be6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- E1; repeat rewrite Rmult_0_l; auto.",
                        "VernacExtend",
                        "082da5ea9d4280801824d0518fe3618d5e88b56f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_stable_in_negreal",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rmax; case (Rle_dec x y); intro; [ apply (cond_neg y) | apply (cond_neg x) ].",
                        "VernacExtend",
                        "f7b5cc12b39818431a8d96ca6b972bfcc5f94cc9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_lub",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rmax; case (Rle_dec x y); intro; assumption.",
                        "VernacExtend",
                        "5b65eb666c8b8089786d68fc7c7edaa90bfdc499"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_lub_lt",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rmax; case (Rle_dec x y); intro; assumption.",
                        "VernacExtend",
                        "5b65eb666c8b8089786d68fc7c7edaa90bfdc499"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_Rlt",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "intros x y z; split.",
                        "VernacExtend",
                        "40660c006ed5e7ee7a0461ee8369d20ced109998"
                    ]
                },
                {
                    "command": [
                        "unfold Rmax; case (Rle_dec x y).",
                        "VernacExtend",
                        "a41bc26b2a072c44a900092f422f56bbe6afaa8d"
                    ]
                },
                {
                    "command": [
                        "intros xy yz; split;[apply Rle_lt_trans with y|]; assumption.",
                        "VernacExtend",
                        "6ab68708e759b3db1a924c7dd53f613e62ce08e9"
                    ]
                },
                {
                    "command": [
                        "intros xz xy; split;[|apply Rlt_trans with x;[apply Rnot_le_gt|]];assumption.",
                        "VernacExtend",
                        "798aa4a854428aa359e500a8014ccaf6bf5b218a"
                    ]
                },
                {
                    "command": [
                        "intros [h h']; apply Rmax_lub_lt; assumption.",
                        "VernacExtend",
                        "9d3f320e8c27f5d618a4165df12b54e533dbe638"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_neg",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rmax.",
                        "VernacExtend",
                        "ea2551a5c2a8c8eb60eb711c2ffcb560da1232de"
                    ]
                },
                {
                    "command": [
                        "case (Rle_dec x y); intro; assumption.",
                        "VernacExtend",
                        "b0bfdebc82ddbaee83d9a9e25ea25c22ea2bd0fb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rcase_abs",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "intro; generalize (Rle_dec 0 r); intro X; elim X; intro H; clear X.",
                        "VernacExtend",
                        "63c93f8bc49bd4ec95a685addcefcdd64f0591cd"
                    ]
                },
                {
                    "command": [
                        "right; apply (Rle_ge 0 r H).",
                        "VernacExtend",
                        "291f891c437f655b1e7a3d65dec2c0c2b919342b"
                    ]
                },
                {
                    "command": [
                        "left; fold (0 > r); apply (Rnot_le_lt 0 r H).",
                        "VernacExtend",
                        "89647b052b10bb290b712bd7d8245ce56f9757cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_R0",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "unfold Rabs; case (Rcase_abs 0); auto; intro.",
                        "VernacExtend",
                        "b4147284c6f0f66309fb259fdb558d8b79c77579"
                    ]
                },
                {
                    "command": [
                        "generalize (Rlt_irrefl 0); intro; exfalso; auto.",
                        "VernacExtend",
                        "faeec90489ec3d0d111c56e5096fbb577a539723"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_R1",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "unfold Rabs; case (Rcase_abs 1); auto with real.",
                        "VernacExtend",
                        "b722cc232c7372f3e35c2dfc5fdbfa7cf310bd83"
                    ]
                },
                {
                    "command": [
                        "intros H; absurd (1 < 0); auto with real.",
                        "VernacExtend",
                        "da029c1c6921eee83724eb21b6fb53ad1811b09f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_no_R0",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rabs; case (Rcase_abs r); intro; auto.",
                        "VernacExtend",
                        "e775c54bb84cdfbc4699097a95cb0238ba980d9c"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_neq_0_compat; auto.",
                        "VernacExtend",
                        "0ee5c4d073f33a6be1bf9a1d2bfcb6182561af2d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_left",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rabs; case (Rcase_abs r); trivial; intro; absurd (r >= 0).",
                        "VernacExtend",
                        "82dd647deff77825ace36b23add70aec637d7727"
                    ]
                },
                {
                    "command": [
                        "exact (Rlt_not_ge r 0 H).",
                        "VernacExtend",
                        "b35cabc7e9a110d055f5bf37d2b5050b95f0528a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_right",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rabs; case (Rcase_abs r) as [Hlt|Hge].",
                        "VernacExtend",
                        "44b7b300fb70d85c2f93791b2ab7c73c0f4bcb03"
                    ]
                },
                {
                    "command": [
                        "absurd (r >= 0).",
                        "VernacExtend",
                        "14498789c46193e1c4f8cef74d5e8840db1de9ce"
                    ]
                },
                {
                    "command": [
                        "exact (Rlt_not_ge r 0 Hlt).",
                        "VernacExtend",
                        "a225ba9771eb2b5644791588c62075536451bb2f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_left1",
            "line_nb": 162,
            "steps": [
                {
                    "command": [
                        "intros a H; case H; intros H1.",
                        "VernacExtend",
                        "7ff3cc78dc8ff9e3c8bd48e6d164fed7ecf3f376"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_left; auto.",
                        "VernacExtend",
                        "89484c58961ef5b69dcb0bc77e45bad782de0a67"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; simpl; rewrite Rabs_right; auto with real.",
                        "VernacExtend",
                        "0912db36fe488f59945228d30139e2989f9c79db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_pos",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rabs; case (Rcase_abs x) as [Hlt|Hge].",
                        "VernacExtend",
                        "b398d7abf331e5ef4700eba56e06b80c4b849dfa"
                    ]
                },
                {
                    "command": [
                        "generalize (Ropp_lt_gt_contravar x 0 Hlt); intro; unfold Rgt in H; rewrite Ropp_0 in H; left; assumption.",
                        "VernacExtend",
                        "8fed61bae8dca11789873958b717bde2e2bb14c8"
                    ]
                },
                {
                    "command": [
                        "apply Rge_le; assumption.",
                        "VernacExtend",
                        "6cfd2327efee85b0a83bce52034072669204f4d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_abs",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "intro; unfold Rabs; case (Rcase_abs x); intros; lra.",
                        "VernacExtend",
                        "188cf2bf0c463051716fa1f973460fc8ec92237d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_le",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "intros a b; unfold Rabs; case Rcase_abs.",
                        "VernacExtend",
                        "4c3b1171ebc3bb4b7dfdcc5c67b89bd0dc7f314f"
                    ]
                },
                {
                    "command": [
                        "intros _ [it _]; apply Ropp_le_cancel; rewrite Ropp_involutive; exact it.",
                        "VernacExtend",
                        "3b9ad885b68c08c93b0cb4bcb357ae6a14cb4585"
                    ]
                },
                {
                    "command": [
                        "intros _ [_ it]; exact it.",
                        "VernacExtend",
                        "691b348b3b996204070a4602ad7954c4aeb3aca2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_pos_eq",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rabs; case (Rcase_abs x) as [Hlt|Hge]; [ generalize (Rgt_not_le 0 x Hlt); intro; exfalso; auto | trivial ].",
                        "VernacExtend",
                        "17356bb2af68b96710568542934d0e3cf7f55ff9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_Rabsolu",
            "line_nb": 184,
            "steps": [
                {
                    "command": [
                        "intro; apply (Rabs_pos_eq (Rabs x) (Rabs_pos x)).",
                        "VernacExtend",
                        "8d1cfecaa88fcbdffe8d73d50f69dbce4eb0237b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_pos_lt",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "intros; destruct (Rabs_pos x) as [|Heq]; auto.",
                        "VernacExtend",
                        "3bf06c4de81d19f242f01e52e8e0568a7708ef2f"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0 in H; symmetry in Heq; contradiction.",
                        "VernacExtend",
                        "2825ddf6764af1cbef6bed37b11fdc86ca2535ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_minus_sym",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rabs; case (Rcase_abs (x - y)) as [Hlt|Hge]; case (Rcase_abs (y - x)) as [Hlt'|Hge'].",
                        "VernacExtend",
                        "7bbc929dc2a8403a644337075ae502d057f56a88"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt, Rlt_asym in Hlt; apply Rminus_lt in Hlt'; contradiction.",
                        "VernacExtend",
                        "d937b220d71f0f4ba4a2321de881b1981c97d20c"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ropp_minus_distr x y); trivial.",
                        "VernacExtend",
                        "00236b99bb2685595d7b4023ccb8c1c93e79cf2c"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ropp_minus_distr y x); trivial.",
                        "VernacExtend",
                        "4fd50694bbfea61bf39f6d65e1fd8d74c13b8939"
                    ]
                },
                {
                    "command": [
                        "destruct Hge; destruct Hge'.",
                        "VernacExtend",
                        "7760634d640499c9ca1f8073dba1c0ee4b383504"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_lt_gt_0_contravar in H; rewrite (Ropp_minus_distr x y) in H; apply Rlt_asym in H0; contradiction.",
                        "VernacExtend",
                        "2885458fd67ad8b04deaa2eddc5e7ba118613a02"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_diag_uniq in H0 as ->; trivial.",
                        "VernacExtend",
                        "2b92800f318ce06311be8ac3f8f2369a27fbc29c"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_diag_uniq in H as ->; trivial.",
                        "VernacExtend",
                        "329a7788c33c90527b66c886c8841d00e25408a9"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_diag_uniq in H0 as ->; trivial.",
                        "VernacExtend",
                        "2b92800f318ce06311be8ac3f8f2369a27fbc29c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_mult",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rabs; case (Rcase_abs (x * y)) as [Hlt|Hge]; case (Rcase_abs x) as [Hltx|Hgex]; case (Rcase_abs y) as [Hlty|Hgey]; auto.",
                        "VernacExtend",
                        "14b51dd402e173808336120ab7f238fb98f49e39"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_gt_compat_neg_l with (r:=x), Rlt_asym in Hlty; trivial.",
                        "VernacExtend",
                        "62ffb2d32efe0864d6936575bb32faa59a31d1f4"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_r in Hlty; contradiction.",
                        "VernacExtend",
                        "c75a381e3a7c4361f5a9a5b320fab75eb74adb82"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ropp_mult_distr_l_reverse x y); trivial.",
                        "VernacExtend",
                        "b930a6e8a1cf52fce2db26d49dd3002573838fbb"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm x (- y)); rewrite (Ropp_mult_distr_l_reverse y x); rewrite (Rmult_comm x y); trivial.",
                        "VernacExtend",
                        "cd223e714ba272d5c4af223b1d0867e0ea29cc5e"
                    ]
                },
                {
                    "command": [
                        "destruct Hgex as [| ->], Hgey as [| ->].",
                        "VernacExtend",
                        "bc7683e9a552f4dc70c7e1da799424032dabbd34"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_l with (r:=x), Rlt_asym in H0; trivial.",
                        "VernacExtend",
                        "6049fc3518383d3a5fd54a69a8780d5a1ba7d2db"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_r in H0; contradiction.",
                        "VernacExtend",
                        "ee634c84d7035391b3005ec32adcb3d0576e8f44"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_r in Hlt; contradiction (Rlt_irrefl 0).",
                        "VernacExtend",
                        "616c064066fa01bfba1f205e3c200c13715aa4ec"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l in Hlt; contradiction (Rlt_irrefl 0).",
                        "VernacExtend",
                        "29a1140f5f3a2eb194e88563fbd2ae44d0e9186e"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l in Hlt; contradiction (Rlt_irrefl 0).",
                        "VernacExtend",
                        "29a1140f5f3a2eb194e88563fbd2ae44d0e9186e"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_opp_opp x y); trivial.",
                        "VernacExtend",
                        "21c116eab4c5b2b9c5ab86fd444b9c2f00e5ebfb"
                    ]
                },
                {
                    "command": [
                        "destruct Hge.",
                        "VernacExtend",
                        "d1d8bb468128c04c799ac198e528c5d74f888769"
                    ]
                },
                {
                    "command": [
                        "destruct Hgey.",
                        "VernacExtend",
                        "1d25c17165d97848d36fde733cfcfe6edc0c3427"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_r with (r:=y), Rlt_asym in Hltx; trivial.",
                        "VernacExtend",
                        "ef117e2664282508d4490452c8be0e3e2357e971"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l in Hltx; contradiction.",
                        "VernacExtend",
                        "07aa1990d5661a4b2836f4a26cc688a8690c10b7"
                    ]
                },
                {
                    "command": [
                        "rewrite H0, Rmult_0_r in H; contradiction (Rlt_irrefl 0).",
                        "VernacExtend",
                        "c15ed71034b48969fff05b2627385097cdfeeff2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_mult_distr_l, H, Ropp_0; trivial.",
                        "VernacExtend",
                        "4a62bcba2c1b8ad136a0bfa4420b91468d318f9e"
                    ]
                },
                {
                    "command": [
                        "destruct Hge.",
                        "VernacExtend",
                        "d1d8bb468128c04c799ac198e528c5d74f888769"
                    ]
                },
                {
                    "command": [
                        "destruct Hgex.",
                        "VernacExtend",
                        "95122757520c071560576876617568232b5c2dca"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_l with (r:=x), Rlt_asym in Hlty; trivial.",
                        "VernacExtend",
                        "4e5e44f9bd7972ca723feedb7a29b76dc43efbfb"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_r in Hlty; contradiction.",
                        "VernacExtend",
                        "c75a381e3a7c4361f5a9a5b320fab75eb74adb82"
                    ]
                },
                {
                    "command": [
                        "rewrite H0, 2!Rmult_0_l; trivial.",
                        "VernacExtend",
                        "509c1a32608fdf57fea6e663b52f73fb14517e37"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_mult_distr_r, H, Ropp_0; trivial.",
                        "VernacExtend",
                        "b95fe97d5feb90566977f955fecc30b05332f1ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_Rinv",
            "line_nb": 228,
            "steps": [
                {
                    "command": [
                        "intro; unfold Rabs; case (Rcase_abs r) as [Hlt|Hge]; case (Rcase_abs (/ r)) as [Hlt'|Hge']; auto; intros.",
                        "VernacExtend",
                        "5e3d9205c69afef1560db90e2972a6d9dbcfd126"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_inv_permute; auto.",
                        "VernacExtend",
                        "f1814a65a11e867e794988d6256d668a88c8ca5b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_inv_permute; trivial.",
                        "VernacExtend",
                        "e4c24b39861227acbaebe7ef19f05aa45a3fabbb"
                    ]
                },
                {
                    "command": [
                        "destruct Hge' as [| ->].",
                        "VernacExtend",
                        "a995442b9dffc4933af93f9e57b8a53f5788b502"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_lt_0_compat, Rlt_asym in Hlt; contradiction.",
                        "VernacExtend",
                        "eed35345a93fe058ce08d023966dd3658fcd42b4"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_0; trivial.",
                        "VernacExtend",
                        "3d9ff84b6b1014d13c9c2f11c1304a86e846f741"
                    ]
                },
                {
                    "command": [
                        "destruct Hge as [| ->].",
                        "VernacExtend",
                        "33d108ce65f14bbfe81facbe101b11cea158e4f1"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat, Rlt_asym in H0; contradiction.",
                        "VernacExtend",
                        "5a57a20f4f830c97bfbe1ee0e817323dc0ee1730"
                    ]
                },
                {
                    "command": [
                        "contradiction (refl_equal 0).",
                        "VernacExtend",
                        "87eb1e696e44559042f7fbaae61ebe484cc72144"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_Ropp",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "intro; replace (-x) with (-1 * x) by ring.",
                        "VernacExtend",
                        "86e9dc1bbd1b2763fa2ea9956074e5f4da3cbdd8"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "replace (Rabs (-1)) with 1.",
                        "VernacExtend",
                        "6e3337e831454b049e8e800b68869b2fc45d1ed1"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_1_l.",
                        "VernacExtend",
                        "959b7f02068b29f8617e378fce47501de4230f61"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs; case (Rcase_abs (-1)).",
                        "VernacExtend",
                        "4abc05c91ad107e59d1dd4e2f7931192994c79da"
                    ]
                },
                {
                    "command": [
                        "intro; ring.",
                        "VernacExtend",
                        "a63cb55c0d6dc7f5f40d630fd18daddefae14d26"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0.",
                        "VernacExtend",
                        "9b57276282263b89d6671472ad672c5763b57b55"
                    ]
                },
                {
                    "command": [
                        "intro H0; apply Ropp_ge_cancel in H0.",
                        "VernacExtend",
                        "24757c770440e09ba94a548a732ae643e4e3290d"
                    ]
                },
                {
                    "command": [
                        "elim (Rge_not_lt _ _ H0).",
                        "VernacExtend",
                        "30ebec69606b42fe0c702fef83af416135b0f9a0"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_0_1.",
                        "VernacExtend",
                        "c3f675388bf844e0740197fd71afa66e5eef091d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_triang",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "intros a b; unfold Rabs; case (Rcase_abs (a + b)) as [Hlt|Hge]; case (Rcase_abs a) as [Hlta|Hgea]; case (Rcase_abs b) as [Hltb|Hgeb].",
                        "VernacExtend",
                        "3a6cd0d7c2d6cc0302b8285c7eb46270d4b99790"
                    ]
                },
                {
                    "command": [
                        "apply (Req_le (- (a + b)) (- a + - b)); rewrite (Ropp_plus_distr a b); reflexivity.",
                        "VernacExtend",
                        "cde3e9426f891a068aded2b0e8816122d3aaf353"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ropp_plus_distr a b); apply (Rplus_le_compat_l (- a) (- b) b); unfold Rle; elim Hgeb; intro.",
                        "VernacExtend",
                        "248c0e1747f6d8e9f88ad0d4f0cfe02f833c9a72"
                    ]
                },
                {
                    "command": [
                        "left; unfold Rgt in H; generalize (Rplus_lt_compat_l (- b) 0 b H); intro; elim (Rplus_ne (- b)); intros v w; rewrite v in H0; clear v w; rewrite (Rplus_opp_l b) in H0; apply (Rlt_trans (- b) 0 b H0 H).",
                        "VernacExtend",
                        "6ee73d39c1f48df1dc0a0e2cb57b86cb3471763f"
                    ]
                },
                {
                    "command": [
                        "right; rewrite H; apply Ropp_0.",
                        "VernacExtend",
                        "f8b987cb4bcaa689010d519bf25cba19a21189a4"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ropp_plus_distr a b); rewrite (Rplus_comm (- a) (- b)); rewrite (Rplus_comm a (- b)); apply (Rplus_le_compat_l (- b) (- a) a); unfold Rle; elim Hgea; intro.",
                        "VernacExtend",
                        "0b9f69729363f02465f25a05d20066abf1b8824f"
                    ]
                },
                {
                    "command": [
                        "left; unfold Rgt in H; generalize (Rplus_lt_compat_l (- a) 0 a H); intro; elim (Rplus_ne (- a)); intros v w; rewrite v in H0; clear v w; rewrite (Rplus_opp_l a) in H0; apply (Rlt_trans (- a) 0 a H0 H).",
                        "VernacExtend",
                        "158e23e417a5112a310e1edcabbbf688998cddb0"
                    ]
                },
                {
                    "command": [
                        "right; rewrite H; apply Ropp_0.",
                        "VernacExtend",
                        "f8b987cb4bcaa689010d519bf25cba19a21189a4"
                    ]
                },
                {
                    "command": [
                        "exfalso; generalize (Rplus_ge_compat_l a b 0 Hgeb); intro; elim (Rplus_ne a); intros v w; rewrite v in H; clear v w; generalize (Rge_trans (a + b) a 0 H Hgea); intro; clear H; unfold Rge in H0; elim H0; intro; clear H0.",
                        "VernacExtend",
                        "709ecb25165d1150f9b4a2c76c5760cb7de16b79"
                    ]
                },
                {
                    "command": [
                        "unfold Rgt in H; generalize (Rlt_asym (a + b) 0 Hlt); intro; auto.",
                        "VernacExtend",
                        "b3c1133f77fe8a838d30946bc6f42e80c34a4c23"
                    ]
                },
                {
                    "command": [
                        "absurd (a + b = 0); auto.",
                        "VernacExtend",
                        "5a43be6b8d46274085fd0c175376d6b333b9a8af"
                    ]
                },
                {
                    "command": [
                        "apply (Rlt_dichotomy_converse (a + b) 0); left; assumption.",
                        "VernacExtend",
                        "b63454ff2ec64212863b1e55fafd8c928cf6eba9"
                    ]
                },
                {
                    "command": [
                        "exfalso; generalize (Rplus_lt_compat_l a b 0 Hltb); intro; elim (Rplus_ne a); intros v w; rewrite v in H; clear v w; generalize (Rlt_trans (a + b) a 0 H Hlta); intro; clear H; destruct Hge.",
                        "VernacExtend",
                        "4758eb909be3a7a5c15d7ab85eea1e1cb9268d26"
                    ]
                },
                {
                    "command": [
                        "unfold Rgt in H; generalize (Rlt_trans (a + b) 0 (a + b) H0 H); intro; apply (Rlt_irrefl (a + b)); assumption.",
                        "VernacExtend",
                        "13ff5f5f01a4eb616381bfff7eb2af2f0838f938"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0; apply (Rlt_irrefl 0); assumption.",
                        "VernacExtend",
                        "a772becb225752d5c6d0afaf7e9f27643101cae7"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rplus_comm a b); rewrite (Rplus_comm (- a) b); apply (Rplus_le_compat_l b a (- a)); apply (Rminus_le a (- a)); unfold Rminus; rewrite (Ropp_involutive a); generalize (Rplus_lt_compat_l a a 0 Hlta); clear Hge Hgeb; intro; elim (Rplus_ne a); intros v w; rewrite v in H; clear v w; generalize (Rlt_trans (a + a) a 0 H Hlta); intro; apply (Rlt_le (a + a) 0 H0).",
                        "VernacExtend",
                        "758402fbf632eaeef84234072ce655170b67e94f"
                    ]
                },
                {
                    "command": [
                        "apply (Rplus_le_compat_l a b (- b)); apply (Rminus_le b (- b)); unfold Rminus; rewrite (Ropp_involutive b); generalize (Rplus_lt_compat_l b b 0 Hltb); clear Hge Hgea; intro; elim (Rplus_ne b); intros v w; rewrite v in H; clear v w; generalize (Rlt_trans (b + b) b 0 H Hltb); intro; apply (Rlt_le (b + b) 0 H0).",
                        "VernacExtend",
                        "ba30286b0eb11dfc601e567058d1e16070a25dad"
                    ]
                },
                {
                    "command": [
                        "unfold Rle; right; reflexivity.",
                        "VernacExtend",
                        "37eaf209423ac00245c2153d226a7b1dc91b2dc6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_triang_inv",
            "line_nb": 271,
            "steps": [
                {
                    "command": [
                        "intros; apply (Rplus_le_reg_l (Rabs b) (Rabs a - Rabs b) (Rabs (a - b))); unfold Rminus; rewrite <- (Rplus_assoc (Rabs b) (Rabs a) (- Rabs b)); rewrite (Rplus_comm (Rabs b) (Rabs a)); rewrite (Rplus_assoc (Rabs a) (Rabs b) (- Rabs b)); rewrite (Rplus_opp_r (Rabs b)); rewrite (proj1 (Rplus_ne (Rabs a))); replace (Rabs a) with (Rabs (a + 0)).",
                        "VernacExtend",
                        "dd49d79925e8336ca01263ddabbbaf4fc1934b5b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rplus_opp_r b); rewrite <- (Rplus_assoc a b (- b)); rewrite (Rplus_comm a b); rewrite (Rplus_assoc b a (- b)).",
                        "VernacExtend",
                        "9d7d4d6ea8bd2041295d825f7abda381002cd02b"
                    ]
                },
                {
                    "command": [
                        "exact (Rabs_triang b (a + - b)).",
                        "VernacExtend",
                        "7492d031e68e0dae319126277b61dc3990c4343d"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (Rplus_ne a)); trivial.",
                        "VernacExtend",
                        "dd860f51ac3252bb1416be6c77675189cbf852d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_triang_inv2",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "cut (forall a b:R, Rabs b <= Rabs a -> Rabs (Rabs a - Rabs b) <= Rabs (a - b)).",
                        "VernacExtend",
                        "ca9eb979bae5ed0c729f276ef2b65df055d23023"
                    ]
                },
                {
                    "command": [
                        "intros; destruct (Rtotal_order (Rabs a) (Rabs b)) as [Hlt| [Heq| Hgt]].",
                        "VernacExtend",
                        "66d8558e1bb0d6e4b55eed28076008270d1126a8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rabs_Ropp (Rabs a - Rabs b)); rewrite <- (Rabs_Ropp (a - b)); do 2 rewrite Ropp_minus_distr.",
                        "VernacExtend",
                        "7386d9c26910512188140d0b11044ae64a48b5ed"
                    ]
                },
                {
                    "command": [
                        "apply H; left; assumption.",
                        "VernacExtend",
                        "717136e2410106e97ec2ed4bfa4bdcb83ad4e48c"
                    ]
                },
                {
                    "command": [
                        "rewrite Heq; unfold Rminus; rewrite Rplus_opp_r; rewrite Rabs_R0; apply Rabs_pos.",
                        "VernacExtend",
                        "fecd0ccfd00f6ef729c1fd5a6dfa6f5c162a2907"
                    ]
                },
                {
                    "command": [
                        "apply H; left; assumption.",
                        "VernacExtend",
                        "717136e2410106e97ec2ed4bfa4bdcb83ad4e48c"
                    ]
                },
                {
                    "command": [
                        "intros; replace (Rabs (Rabs a - Rabs b)) with (Rabs a - Rabs b).",
                        "VernacExtend",
                        "c8de728427d89507778743b9d45e5209c5a829b4"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_triang_inv.",
                        "VernacExtend",
                        "94c787885c8134a096c52441bd6a492bcd493d00"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_right (Rabs a - Rabs b)); [ reflexivity | apply Rle_ge; apply Rplus_le_reg_l with (Rabs b); rewrite Rplus_0_r; replace (Rabs b + (Rabs a - Rabs b)) with (Rabs a); [ assumption | ring ] ].",
                        "VernacExtend",
                        "fe781032eb9eb3ce8457ca254c3dfb6c957376ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_def1",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "unfold Rabs; intros; case (Rcase_abs x); intro.",
                        "VernacExtend",
                        "e6eec4006b3a9f8f4f1f3188f03a911324d232bf"
                    ]
                },
                {
                    "command": [
                        "generalize (Ropp_lt_gt_contravar (- a) x H0); unfold Rgt; rewrite Ropp_involutive; intro; assumption.",
                        "VernacExtend",
                        "3a8cb4e3a87543238be7435f8250e5766577bab9"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_def2",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "unfold Rabs; intro x; case (Rcase_abs x) as [Hlt|Hge]; intros.",
                        "VernacExtend",
                        "004492c01f16e60571b2deed0a4bbb4981f8fe70"
                    ]
                },
                {
                    "command": [
                        "generalize (Ropp_gt_lt_0_contravar x Hlt); unfold Rgt; intro; generalize (Rlt_trans 0 (- x) a H0 H); intro; split.",
                        "VernacExtend",
                        "e41e0a27329521a1969ce03b944f648359c4f9e1"
                    ]
                },
                {
                    "command": [
                        "apply (Rlt_trans x 0 a Hlt H1).",
                        "VernacExtend",
                        "5144b4ec3ceb0a6f2c8ef986cbb615ee942962cc"
                    ]
                },
                {
                    "command": [
                        "generalize (Ropp_lt_gt_contravar (- x) a H); rewrite (Ropp_involutive x); unfold Rgt; trivial.",
                        "VernacExtend",
                        "319551fdb2eeb66e119ddb2f822e7c87b31c60df"
                    ]
                },
                {
                    "command": [
                        "fold (a > x) in H; generalize (Rgt_ge_trans a x 0 H Hge); intro; generalize (Ropp_lt_gt_0_contravar a H0); intro; fold (0 > - a); generalize (Rge_gt_trans x 0 (- a) Hge H1); unfold Rgt; intro; split; assumption.",
                        "VernacExtend",
                        "14512b0395f280435be49fc20f42801db2f02748"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RmaxAbs",
            "line_nb": 300,
            "steps": [
                {
                    "command": [
                        "intros p q r H' H'0; case (Rle_or_lt 0 p); intros H'1.",
                        "VernacExtend",
                        "5966dde112dd50a5fe429660b27b0ab8cabf990a"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rabs_right; auto with real.",
                        "VernacExtend",
                        "acbc524ee08d51df0747101f806570b23d1c2cd0"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with r; auto with real.",
                        "VernacExtend",
                        "b9d69bb8a32d2fa4dcfedbb4f9e240535d8d36e6"
                    ]
                },
                {
                    "command": [
                        "apply RmaxLess2; auto.",
                        "VernacExtend",
                        "ff1ccb5209443da694006020f75938d81e022790"
                    ]
                },
                {
                    "command": [
                        "apply Rge_trans with p; auto with real; apply Rge_trans with q; auto with real.",
                        "VernacExtend",
                        "95c09b3520f8a9b86467a9a5fab81ecf71142216"
                    ]
                },
                {
                    "command": [
                        "apply Rge_trans with p; auto with real.",
                        "VernacExtend",
                        "b079ec260306de9193264e3f3d3f55a6a10d13d3"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_left p); auto.",
                        "VernacExtend",
                        "a806e6c59770a3ad545e1012bd7cb62ab8abb1c6"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt 0 q); intros H'2.",
                        "VernacExtend",
                        "c795b87af97e787699f0965560de4b0822e3acd8"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rabs_right; auto with real.",
                        "VernacExtend",
                        "acbc524ee08d51df0747101f806570b23d1c2cd0"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with r; auto.",
                        "VernacExtend",
                        "b82523ba2d15acc91f81ad5a067aef1041318d13"
                    ]
                },
                {
                    "command": [
                        "apply RmaxLess2; auto.",
                        "VernacExtend",
                        "ff1ccb5209443da694006020f75938d81e022790"
                    ]
                },
                {
                    "command": [
                        "apply Rge_trans with q; auto with real.",
                        "VernacExtend",
                        "ed2d5295692c2f9582b028f152a36f201c464f6c"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_left q); auto.",
                        "VernacExtend",
                        "89f1c5e1b413514dca5d289f5425ba67916826f5"
                    ]
                },
                {
                    "command": [
                        "case (Rle_or_lt 0 r); intros H'3.",
                        "VernacExtend",
                        "9019e663c064a8093fa884fe0b53bd83c6fba54b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rabs_right; auto with real.",
                        "VernacExtend",
                        "acbc524ee08d51df0747101f806570b23d1c2cd0"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (- p); auto with real.",
                        "VernacExtend",
                        "ac3b3ce22feb7b86611d2ae89ef21502cef7909c"
                    ]
                },
                {
                    "command": [
                        "apply RmaxLess1; auto.",
                        "VernacExtend",
                        "503232233912d33b93dc36366787b8296209e8a4"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_left r); auto.",
                        "VernacExtend",
                        "0c747f7088a980d600eadcb4dd4748c86cec4e3e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (- p); auto with real.",
                        "VernacExtend",
                        "ac3b3ce22feb7b86611d2ae89ef21502cef7909c"
                    ]
                },
                {
                    "command": [
                        "apply RmaxLess1; auto.",
                        "VernacExtend",
                        "503232233912d33b93dc36366787b8296209e8a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_Zabs",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "intros z; case z; unfold Z.abs.",
                        "VernacExtend",
                        "f7d61d882f337f59895fdccfa4cb44635901ff6e"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_R0.",
                        "VernacExtend",
                        "6609b4ab82fe57e983c51e226262c9d533442a79"
                    ]
                },
                {
                    "command": [
                        "now intros p0; apply Rabs_pos_eq, (IZR_le 0).",
                        "VernacExtend",
                        "7b68521c54e4fbbcb0ca919909f7414bca12a39e"
                    ]
                },
                {
                    "command": [
                        "unfold IZR at 1.",
                        "VernacExtend",
                        "dd6068e3864bbcaa16d0ade2ea9bd17e7bf6a743"
                    ]
                },
                {
                    "command": [
                        "intros p0; rewrite Rabs_Ropp.",
                        "VernacExtend",
                        "4dd7007e5d5a01e566c063c0a92d85fa2fa3bdfb"
                    ]
                },
                {
                    "command": [
                        "now apply Rabs_pos_eq, (IZR_le 0).",
                        "VernacExtend",
                        "5029f8f42761269ad0d69d24b20668adc342782c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "abs_IZR",
            "line_nb": 330,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rabs_Zabs.",
                        "VernacExtend",
                        "c1076e788f01640c2fb958e22e51a97a7b10f19e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ropp_Rmax",
            "line_nb": 334,
            "steps": [
                {
                    "command": [
                        "intros x y; apply Rmax_case_strong.",
                        "VernacExtend",
                        "41e8a1acf783b37a9c18755b7ecd6b76c5b2b7e6"
                    ]
                },
                {
                    "command": [
                        "now intros w; rewrite Rmin_left;[ | apply Rge_le, Ropp_le_ge_contravar].",
                        "VernacExtend",
                        "4ce556b3155bc7761c835db06b4c3e78197622f8"
                    ]
                },
                {
                    "command": [
                        "now intros w; rewrite Rmin_right; [ | apply Rge_le, Ropp_le_ge_contravar].",
                        "VernacExtend",
                        "1239cb2f885c4ae5c9d1603d1ceb4bfb5d94324a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Ropp_Rmin",
            "line_nb": 339,
            "steps": [
                {
                    "command": [
                        "intros x y; apply Rmin_case_strong.",
                        "VernacExtend",
                        "7d3e080648dfaa5a0e1990012781d4ae6874fe38"
                    ]
                },
                {
                    "command": [
                        "now intros w; rewrite Rmax_left;[ | apply Rge_le, Ropp_le_ge_contravar].",
                        "VernacExtend",
                        "93b20fe5f3ab08294d0d156eef7f352b8e4e0e2e"
                    ]
                },
                {
                    "command": [
                        "now intros w; rewrite Rmax_right; [ | apply Rge_le, Ropp_le_ge_contravar].",
                        "VernacExtend",
                        "4298fc1cab3fbabf2bcd733a6aa9411323a8b082"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmax_assoc",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "intros a b c.",
                        "VernacExtend",
                        "1dd2f7025da4079bca622e8e5d0b458a19953dcc"
                    ]
                },
                {
                    "command": [
                        "unfold Rmax; destruct (Rle_dec b c); destruct (Rle_dec a b); destruct (Rle_dec a c); destruct (Rle_dec b c); auto with real; match goal with | id : ~ ?x <= ?y, id2 : ?x <= ?z |- _ => case id; apply Rle_trans with z; auto with real | id : ~ ?x <= ?y, id2 : ~ ?z <= ?x |- _ => case id; apply Rle_trans with z; auto with real end.",
                        "VernacExtend",
                        "b70075d0bdfd6126f4f66346bcb8925e8c453b43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rminmax",
            "line_nb": 348,
            "steps": [
                {
                    "command": [
                        "intros a b; destruct (Rle_dec a b).",
                        "VernacExtend",
                        "f0095ba2e24689f33f9c9718c898287de05a4024"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmin_left, Rmax_right; assumption.",
                        "VernacExtend",
                        "d53709c19c8b948b63facf419351666dddadf2db"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rmin_right, Rmax_left; assumption || apply Rlt_le, Rnot_le_gt.",
                        "VernacExtend",
                        "7472d1d4fd15e669b34ff304c60e22eec56f09f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rmin_assoc",
            "line_nb": 353,
            "steps": [
                {
                    "command": [
                        "intros a b c.",
                        "VernacExtend",
                        "1dd2f7025da4079bca622e8e5d0b458a19953dcc"
                    ]
                },
                {
                    "command": [
                        "unfold Rmin; destruct (Rle_dec b c); destruct (Rle_dec a b); destruct (Rle_dec a c); destruct (Rle_dec b c); auto with real; match goal with | id : ~ ?x <= ?y, id2 : ?x <= ?z |- _ => case id; apply Rle_trans with z; auto with real | id : ~ ?x <= ?y, id2 : ~ ?z <= ?x |- _ => case id; apply Rle_trans with z; auto with real end.",
                        "VernacExtend",
                        "033e493ca91e0307fdf76e67cfb655deb95c6045"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}