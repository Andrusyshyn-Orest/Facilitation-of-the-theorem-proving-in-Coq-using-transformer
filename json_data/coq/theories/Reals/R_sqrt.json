{
    "filename": "theories/Reals/R_sqrt.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Rbase.",
            "VernacRequire",
            "c0a8d81b170d4ed8309a8632a3cac35f6cba016a"
        ],
        [
            "Require Import Rfunctions.",
            "VernacRequire",
            "e0ba64ca9fd07e0fc91c59b7bf007fb29a662a86"
        ],
        [
            "Require Import Rsqrt_def.",
            "VernacRequire",
            "28c3be7cfff2bf04fe4d6c4d3b3b78af95c5424a"
        ],
        [
            "Local Open Scope R_scope.",
            "VernacOpenCloseScope",
            "b005c72bb3303e031b42be04be04c87c005faa38"
        ],
        [
            "Definition sqrt (x:R) : R := match Rcase_abs x with | left _ => 0 | right a => Rsqrt (mknonnegreal x (Rge_le _ _ a)) end.",
            "VernacDefinition",
            "afae43a7621986d70845aae977fd6c77ecfb9341"
        ],
        [
            "Lemma sqrt_pos : forall x : R, 0 <= sqrt x.",
            "VernacStartTheoremProof",
            "519d94eb09f399cc9463380257827ffcdef91c4c"
        ],
        [
            "intros x.",
            "VernacExtend",
            "596d66edc70dae19981ed74f103fc0a865aec92c"
        ],
        [
            "unfold sqrt.",
            "VernacExtend",
            "71ef64092f0003bcdade22760b25585d0190003b"
        ],
        [
            "destruct (Rcase_abs x) as [H|H].",
            "VernacExtend",
            "f4c19f6675f75c71ce0caee450f5ec4a7d527e92"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "apply Rsqrt_positivity.",
            "VernacExtend",
            "c089a16cf41c581e86d723b7996d69567c3bf3f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_positivity : forall x:R, 0 <= x -> 0 <= sqrt x.",
            "VernacStartTheoremProof",
            "cf3c23c119281105507323b87542675b8460e04b"
        ],
        [
            "intros x _.",
            "VernacExtend",
            "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
        ],
        [
            "apply sqrt_pos.",
            "VernacExtend",
            "8013846f769de514ba1120cf1bfee7fe3207e68d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_sqrt : forall x:R, 0 <= x -> sqrt x * sqrt x = x.",
            "VernacStartTheoremProof",
            "fb6fa035ceabd7c3d1601253f2cb0a20eca5e655"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold sqrt.",
            "VernacExtend",
            "71ef64092f0003bcdade22760b25585d0190003b"
        ],
        [
            "case (Rcase_abs x) as [Hlt|Hge].",
            "VernacExtend",
            "4eb15dc440e78fefe1e5a6269a235ac699970391"
        ],
        [
            "elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)).",
            "VernacExtend",
            "a5dd22f6e440147e5448c0a7936ff400a1d02567"
        ],
        [
            "rewrite Rsqrt_Rsqrt; reflexivity.",
            "VernacExtend",
            "876a88c4c04a37f9c5efdb518b7b73530669184f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_0 : sqrt 0 = 0.",
            "VernacStartTheoremProof",
            "a5724267db7eb197d392b4ad2c6c7c98af91ce71"
        ],
        [
            "apply Rsqr_eq_0; unfold Rsqr; apply sqrt_sqrt; right; reflexivity.",
            "VernacExtend",
            "e11a7ed2c59fa88513d57ea608379e9dde7dee4d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_1 : sqrt 1 = 1.",
            "VernacStartTheoremProof",
            "4b4c486fe6dea95a7d731ab534136e32eac5a4cd"
        ],
        [
            "apply (Rsqr_inj (sqrt 1) 1); [ apply sqrt_positivity; left | left | unfold Rsqr; rewrite sqrt_sqrt; [ ring | left ] ]; apply Rlt_0_1.",
            "VernacExtend",
            "fff03e6854e8958ed7cca09a3baf9ea74f5d3dce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_eq_0 : forall x:R, 0 <= x -> sqrt x = 0 -> x = 0.",
            "VernacStartTheoremProof",
            "db4fcd87ba6e0eb6fd598b7026b3e06880cc51b7"
        ],
        [
            "intros; cut (Rsqr (sqrt x) = 0).",
            "VernacExtend",
            "25f10ed0a08db582f1b420faaa711464d66f90bd"
        ],
        [
            "intro; unfold Rsqr in H1; rewrite sqrt_sqrt in H1; assumption.",
            "VernacExtend",
            "4d518fc5900cecdc026b36e1c3333a9e95f4b275"
        ],
        [
            "rewrite H0; apply Rsqr_0.",
            "VernacExtend",
            "60b7d0278230113d45378740ffcd9b64e30cb915"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_lem_0 : forall x y:R, 0 <= x -> 0 <= y -> sqrt x = y -> y * y = x.",
            "VernacStartTheoremProof",
            "46090bffa2d37ca977a4c8052b015b0deb99b93c"
        ],
        [
            "intros; rewrite <- H1; apply (sqrt_sqrt x H).",
            "VernacExtend",
            "efa9f70091266828afbf49f450a61e366e9a8589"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_lem_1 : forall x y:R, 0 <= x -> 0 <= y -> y * y = x -> sqrt x = y.",
            "VernacStartTheoremProof",
            "7c0537be5eb4f8b1e7906619823abf80ffd93f54"
        ],
        [
            "intros; apply Rsqr_inj; [ apply (sqrt_positivity x H) | assumption | unfold Rsqr; rewrite H1; apply (sqrt_sqrt x H) ].",
            "VernacExtend",
            "80b385c38abf3c3dbda8293e1395e590082d21ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_def : forall x:R, 0 <= x -> sqrt x * sqrt x = x.",
            "VernacStartTheoremProof",
            "f2b36a7bdc1c5288a28a4428a9d45b7825ac8d4e"
        ],
        [
            "intros; apply (sqrt_sqrt x H).",
            "VernacExtend",
            "25ac85526f7bced46a67a8f01b6e2b4f94cd303a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_square : forall x:R, 0 <= x -> sqrt (x * x) = x.",
            "VernacStartTheoremProof",
            "6113e9201598fee17d3e5dbb9ed402ef9d93064f"
        ],
        [
            "intros; apply (Rsqr_inj (sqrt (Rsqr x)) x (sqrt_positivity (Rsqr x) (Rle_0_sqr x)) H); unfold Rsqr; apply (sqrt_sqrt (Rsqr x) (Rle_0_sqr x)).",
            "VernacExtend",
            "85f3d93c84b976ff56b676936c6e78928e79ea6b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_Rsqr : forall x:R, 0 <= x -> sqrt (Rsqr x) = x.",
            "VernacStartTheoremProof",
            "397b0eaec0e12000f34bc200043ab626a2a08771"
        ],
        [
            "intros; unfold Rsqr; apply sqrt_square; assumption.",
            "VernacExtend",
            "a53cb694c4a283b55ff41ba62dd7f381fa2a9804"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_pow2 : forall x, 0 <= x -> sqrt (x ^ 2) = x.",
            "VernacStartTheoremProof",
            "30473837bb35b3af82df3b28ede34925a0dbffbc"
        ],
        [
            "intros; simpl; rewrite Rmult_1_r, sqrt_square; auto.",
            "VernacExtend",
            "f1db296ce60b071778ebe03eaa77beca2d5b7da5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_Rsqr_abs : forall x:R, sqrt (Rsqr x) = Rabs x.",
            "VernacStartTheoremProof",
            "888741821f939ce1e2e0b1eecef572047a9fd800"
        ],
        [
            "intro x; rewrite Rsqr_abs; apply sqrt_Rsqr; apply Rabs_pos.",
            "VernacExtend",
            "19dd6a58835f565a0eab8a84791d7071c6563830"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rsqr_sqrt : forall x:R, 0 <= x -> Rsqr (sqrt x) = x.",
            "VernacStartTheoremProof",
            "3e2820a24f3fde0502035ffff144ac0e3f85d562"
        ],
        [
            "intros x H1; unfold Rsqr; apply (sqrt_sqrt x H1).",
            "VernacExtend",
            "12fbf8543c77163a6ba76886ab513b00aadf250b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_mult_alt : forall x y : R, 0 <= x -> sqrt (x * y) = sqrt x * sqrt y.",
            "VernacStartTheoremProof",
            "50f0eef9d94dd32e382d8f854135745a3525b73c"
        ],
        [
            "intros x y Hx.",
            "VernacExtend",
            "1897c0b7177276da8beec0f41bc059408ef7b497"
        ],
        [
            "unfold sqrt at 3.",
            "VernacExtend",
            "1a098638b720637c7460fb92eb3ae24cd562612e"
        ],
        [
            "destruct (Rcase_abs y) as [Hy|Hy].",
            "VernacExtend",
            "e18900e39614e46c2cb4da1e398ae4210a0c4de8"
        ],
        [
            "rewrite Rmult_0_r.",
            "VernacExtend",
            "b528602a1e730e82684da4ab7d2073ddaf5ebdb0"
        ],
        [
            "destruct Hx as [Hx'|Hx'].",
            "VernacExtend",
            "89eeef0e7e135f50114f86340ce715ff03dae45c"
        ],
        [
            "unfold sqrt.",
            "VernacExtend",
            "71ef64092f0003bcdade22760b25585d0190003b"
        ],
        [
            "destruct (Rcase_abs (x * y)) as [Hxy|Hxy].",
            "VernacExtend",
            "c46bcb4359a3e7867e937f267349698c8bb7334d"
        ],
        [
            "apply eq_refl.",
            "VernacExtend",
            "7c24386880b38fe6934d624f41ac1fd4ba47d797"
        ],
        [
            "elim Rge_not_lt with (1 := Hxy).",
            "VernacExtend",
            "dfce90932da2239978914dae770c033953913c70"
        ],
        [
            "rewrite <- (Rmult_0_r x).",
            "VernacExtend",
            "cdf4542c8a7b2b51d5c2b1511221c0440602c7c3"
        ],
        [
            "now apply Rmult_lt_compat_l.",
            "VernacExtend",
            "96fc7ba97bff2b0615046e2fc30be14d2bd47b73"
        ],
        [
            "rewrite <- Hx', Rmult_0_l.",
            "VernacExtend",
            "58ee7cfdc5bfa85011a6ed1b7d8cef9011a0e607"
        ],
        [
            "exact sqrt_0.",
            "VernacExtend",
            "a98b160232fb59556fc15457ffff5446b45c6389"
        ],
        [
            "apply Rsqr_inj.",
            "VernacExtend",
            "7bdfb7b89c00cd6f3819fc1496b24bee0d9b32ea"
        ],
        [
            "apply sqrt_pos.",
            "VernacExtend",
            "8013846f769de514ba1120cf1bfee7fe3207e68d"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "apply sqrt_pos.",
            "VernacExtend",
            "8013846f769de514ba1120cf1bfee7fe3207e68d"
        ],
        [
            "apply Rsqrt_positivity.",
            "VernacExtend",
            "c089a16cf41c581e86d723b7996d69567c3bf3f3"
        ],
        [
            "rewrite Rsqr_mult, 2!Rsqr_sqrt.",
            "VernacExtend",
            "cc8979df7f39f9588ce1371c8347e4db5ba8f86d"
        ],
        [
            "unfold Rsqr.",
            "VernacExtend",
            "ee8c595e99ab49bf64a7e1aaaa8933ba6a0b0354"
        ],
        [
            "now rewrite Rsqrt_Rsqrt.",
            "VernacExtend",
            "bfce699e7455e8cd122775fe9314e84de2b8916c"
        ],
        [
            "exact Hx.",
            "VernacExtend",
            "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "exact Hx.",
            "VernacExtend",
            "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
        ],
        [
            "now apply Rge_le.",
            "VernacExtend",
            "a9d375e1f97c153d1fcc15fabbf40ef83aa1533a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_mult : forall x y:R, 0 <= x -> 0 <= y -> sqrt (x * y) = sqrt x * sqrt y.",
            "VernacStartTheoremProof",
            "729ff76788a076779db1b9e78aff3ece2c002635"
        ],
        [
            "intros x y Hx _.",
            "VernacExtend",
            "36a5b9f0cc7251fe0252d3689d056032d9e5f50b"
        ],
        [
            "now apply sqrt_mult_alt.",
            "VernacExtend",
            "d1a419438a48885958fa5c2d36cef7af03442058"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_lt_R0 : forall x:R, 0 < x -> 0 < sqrt x.",
            "VernacStartTheoremProof",
            "cdbafadc199e743b50705119688d98eb952b0715"
        ],
        [
            "intros x H1; apply Rsqr_incrst_0; [ rewrite Rsqr_0; rewrite Rsqr_sqrt; [ assumption | left; assumption ] | right; reflexivity | apply (sqrt_positivity x (Rlt_le 0 x H1)) ].",
            "VernacExtend",
            "2c6996e51265c70b9eb80d954b06bc9743545784"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rlt_mult_inv_pos : forall x y:R, 0 < x -> 0 < y -> 0 < x * / y.",
            "VernacStartTheoremProof",
            "8ee96dc54117f23ae40465d0729f421da60f5914"
        ],
        [
            "intros x y H H0; try assumption.",
            "VernacExtend",
            "1f41d2f1c984b4f5beed2920dff3c9f3b5bd5226"
        ],
        [
            "replace 0 with (x * 0).",
            "VernacExtend",
            "8f50074f2abeaaf32fb83df976c806d31cc0219c"
        ],
        [
            "apply Rmult_lt_compat_l; auto with real.",
            "VernacExtend",
            "3e7233511306c2ec2fb512cc9cfd2a7990f1f973"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rle_mult_inv_pos : forall x y:R, 0 <= x -> 0 < y -> 0 <= x * / y.",
            "VernacStartTheoremProof",
            "a7b43d8cfab7565718b7ac6d500ed75b32aeef5b"
        ],
        [
            "intros x y H H0; try assumption.",
            "VernacExtend",
            "1f41d2f1c984b4f5beed2920dff3c9f3b5bd5226"
        ],
        [
            "case H; intros.",
            "VernacExtend",
            "5c1fb684f521eaf2dc536a242d9fcc76d93c85b6"
        ],
        [
            "red; left.",
            "VernacExtend",
            "0ec32f14dbeb07cb15689a8bf7128bb3050e2315"
        ],
        [
            "apply Rlt_mult_inv_pos; auto with real.",
            "VernacExtend",
            "8cc5b7dd03824bd2837885b5194eadc6c9f6e428"
        ],
        [
            "rewrite <- H1.",
            "VernacExtend",
            "b8b417d956609d1854d18921f25bc0ffae73a74e"
        ],
        [
            "red; right; ring.",
            "VernacExtend",
            "aa4cff584addd221aa4c6eb9aabd928a0037e953"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_div_alt : forall x y : R, 0 < y -> sqrt (x / y) = sqrt x / sqrt y.",
            "VernacStartTheoremProof",
            "4090d25fd268d1132e211edc65e34e0acc45d1b5"
        ],
        [
            "intros x y Hy.",
            "VernacExtend",
            "9aceb5b83b96a49d50c37137afc3ee554735fdf3"
        ],
        [
            "unfold sqrt at 2.",
            "VernacExtend",
            "40b98875f69dd6fb4cfc67c225d23b0cde72f86b"
        ],
        [
            "destruct (Rcase_abs x) as [Hx|Hx].",
            "VernacExtend",
            "46050b72b19634f867951da323e8f2bfd81f6e9d"
        ],
        [
            "unfold Rdiv.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "rewrite Rmult_0_l.",
            "VernacExtend",
            "198c4e4c2aa27e6987cc5bebc1444c8d76760541"
        ],
        [
            "unfold sqrt.",
            "VernacExtend",
            "71ef64092f0003bcdade22760b25585d0190003b"
        ],
        [
            "destruct (Rcase_abs (x * / y)) as [Hxy|Hxy].",
            "VernacExtend",
            "27df14fa215f75f50483bb99777588afeacda037"
        ],
        [
            "apply eq_refl.",
            "VernacExtend",
            "7c24386880b38fe6934d624f41ac1fd4ba47d797"
        ],
        [
            "elim Rge_not_lt with (1 := Hxy).",
            "VernacExtend",
            "dfce90932da2239978914dae770c033953913c70"
        ],
        [
            "apply Rmult_lt_reg_r with y.",
            "VernacExtend",
            "74e5f920ac6ee8cd374cc2235147eadde9a64792"
        ],
        [
            "exact Hy.",
            "VernacExtend",
            "def2ddcf2b089fdcc58626c840dcc230a388ad11"
        ],
        [
            "rewrite Rmult_assoc, Rinv_l, Rmult_1_r, Rmult_0_l.",
            "VernacExtend",
            "72b0d9ff42a4953374d5f83225af62e2152e483b"
        ],
        [
            "exact Hx.",
            "VernacExtend",
            "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
        ],
        [
            "now apply Rgt_not_eq.",
            "VernacExtend",
            "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
        ],
        [
            "set (Hx' := Rge_le x 0 Hx).",
            "VernacExtend",
            "9235e4a5b9da26a34556dd3531f302a16fe7d821"
        ],
        [
            "clearbody Hx'.",
            "VernacExtend",
            "c250ba108e413cf8531f1c69e1a5ce4eee50b9ba"
        ],
        [
            "clear Hx.",
            "VernacExtend",
            "314f2dd08c56e12784d701709c171b860f652dc1"
        ],
        [
            "apply Rsqr_inj.",
            "VernacExtend",
            "7bdfb7b89c00cd6f3819fc1496b24bee0d9b32ea"
        ],
        [
            "apply sqrt_pos.",
            "VernacExtend",
            "8013846f769de514ba1120cf1bfee7fe3207e68d"
        ],
        [
            "apply Rle_mult_inv_pos.",
            "VernacExtend",
            "771e46fbb6c7dab0f0544ab69a443b7eaeb4dea8"
        ],
        [
            "apply Rsqrt_positivity.",
            "VernacExtend",
            "c089a16cf41c581e86d723b7996d69567c3bf3f3"
        ],
        [
            "now apply sqrt_lt_R0.",
            "VernacExtend",
            "c6e1277262c6aaa8acb574d7d75e10953268faa4"
        ],
        [
            "rewrite Rsqr_div, 2!Rsqr_sqrt.",
            "VernacExtend",
            "0c9b069d6c7e1075ce4884eb5bb5c659f3234cf2"
        ],
        [
            "unfold Rsqr.",
            "VernacExtend",
            "ee8c595e99ab49bf64a7e1aaaa8933ba6a0b0354"
        ],
        [
            "now rewrite Rsqrt_Rsqrt.",
            "VernacExtend",
            "bfce699e7455e8cd122775fe9314e84de2b8916c"
        ],
        [
            "now apply Rlt_le.",
            "VernacExtend",
            "3fa67bbd472123a7abc1f777aecc643fb3862e46"
        ],
        [
            "now apply Rle_mult_inv_pos.",
            "VernacExtend",
            "3e5622030621ea72cc87e9048a3b56b624ba4ad9"
        ],
        [
            "apply Rgt_not_eq.",
            "VernacExtend",
            "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
        ],
        [
            "now apply sqrt_lt_R0.",
            "VernacExtend",
            "c6e1277262c6aaa8acb574d7d75e10953268faa4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_div : forall x y:R, 0 <= x -> 0 < y -> sqrt (x / y) = sqrt x / sqrt y.",
            "VernacStartTheoremProof",
            "e9749ee76adcd9f412fe1776826d8454efc505cd"
        ],
        [
            "intros x y _ H.",
            "VernacExtend",
            "1b9e63db1248517266d3510a9ce6b7fac1380851"
        ],
        [
            "now apply sqrt_div_alt.",
            "VernacExtend",
            "87197777cc1c00fd0b09d0f83fb12370ccbe5055"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_lt_0_alt : forall x y : R, sqrt x < sqrt y -> x < y.",
            "VernacStartTheoremProof",
            "8a4bac1d43cfdb2e3b8bb2458a30e61596048610"
        ],
        [
            "intros x y.",
            "VernacExtend",
            "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
        ],
        [
            "unfold sqrt at 2.",
            "VernacExtend",
            "40b98875f69dd6fb4cfc67c225d23b0cde72f86b"
        ],
        [
            "destruct (Rcase_abs y) as [Hy|Hy].",
            "VernacExtend",
            "e18900e39614e46c2cb4da1e398ae4210a0c4de8"
        ],
        [
            "intros Hx.",
            "VernacExtend",
            "9276b72df3a882c9b4b954c90d9e870c80a906fc"
        ],
        [
            "elim Rlt_not_le with (1 := Hx).",
            "VernacExtend",
            "58f61b9167ea4bd16a23de47ef13adf959c0e975"
        ],
        [
            "apply sqrt_pos.",
            "VernacExtend",
            "8013846f769de514ba1120cf1bfee7fe3207e68d"
        ],
        [
            "set (Hy' := Rge_le y 0 Hy).",
            "VernacExtend",
            "707773ea1ddb27db8c236b6100021db0ddfb80db"
        ],
        [
            "clearbody Hy'.",
            "VernacExtend",
            "9f8ba76fb3fdfe3311216f3ce4b0041f8d3c709d"
        ],
        [
            "clear Hy.",
            "VernacExtend",
            "3bea37436535702bd1dd03697252cf9c45c6e48d"
        ],
        [
            "unfold sqrt.",
            "VernacExtend",
            "71ef64092f0003bcdade22760b25585d0190003b"
        ],
        [
            "destruct (Rcase_abs x) as [Hx|Hx].",
            "VernacExtend",
            "46050b72b19634f867951da323e8f2bfd81f6e9d"
        ],
        [
            "intros _.",
            "VernacExtend",
            "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
        ],
        [
            "now apply Rlt_le_trans with R0.",
            "VernacExtend",
            "9762221e4da496d52ec8f7c1ecd21dee9b2058dc"
        ],
        [
            "intros Hxy.",
            "VernacExtend",
            "1b46c68dc8fbe16f0f7f65835f5cba74ed8f8cae"
        ],
        [
            "apply Rsqr_incrst_1 in Hxy ; try apply Rsqrt_positivity.",
            "VernacExtend",
            "d33cbf06178b7d78e93321806c62355f3777c00e"
        ],
        [
            "unfold Rsqr in Hxy.",
            "VernacExtend",
            "be8b5e3dbb0108d3ebcfde6b7f728129191a875b"
        ],
        [
            "now rewrite 2!Rsqrt_Rsqrt in Hxy.",
            "VernacExtend",
            "a9402473cd2f310943f789f8e28d685db25676ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_lt_0 : forall x y:R, 0 <= x -> 0 <= y -> sqrt x < sqrt y -> x < y.",
            "VernacStartTheoremProof",
            "10fbe557a05da468a721730eeabb88e94e458517"
        ],
        [
            "intros x y _ _.",
            "VernacExtend",
            "a9d5ff0b4941c54fbc1dbd1f83b1bc92549f70af"
        ],
        [
            "apply sqrt_lt_0_alt.",
            "VernacExtend",
            "eb4d7b3ae7884db1af964a149e53043b55037717"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_lt_1_alt : forall x y : R, 0 <= x < y -> sqrt x < sqrt y.",
            "VernacStartTheoremProof",
            "0c3fd174cff205b72a3ab9e5366443a5a5d6758a"
        ],
        [
            "intros x y (Hx, Hxy).",
            "VernacExtend",
            "2f79096576065a4d8c0aaf5ecb64184cd1eb0b60"
        ],
        [
            "apply Rsqr_incrst_0 ; try apply sqrt_pos.",
            "VernacExtend",
            "f50acba4f31eaf2dd83af6c5cf18d1881aef90a6"
        ],
        [
            "rewrite 2!Rsqr_sqrt.",
            "VernacExtend",
            "a26035a02eb19c65d146db4b99255fcb998b1e51"
        ],
        [
            "exact Hxy.",
            "VernacExtend",
            "6ba9fbd4bf2b620bf4ba04417b1324eb48d923d7"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "now apply Rle_lt_trans with x.",
            "VernacExtend",
            "b8ead94118320135b3512914fe2cad52d6d87827"
        ],
        [
            "exact Hx.",
            "VernacExtend",
            "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_lt_1 : forall x y:R, 0 <= x -> 0 <= y -> x < y -> sqrt x < sqrt y.",
            "VernacStartTheoremProof",
            "3c518cd597277dbb99ae24e53f989c6c9be1eccf"
        ],
        [
            "intros x y Hx _ Hxy.",
            "VernacExtend",
            "dbe718835d552323b8398e76b17446f444c5a421"
        ],
        [
            "apply sqrt_lt_1_alt.",
            "VernacExtend",
            "45b4cd2388d55c8102fb6e671b5e2b84734b7c99"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_le_0 : forall x y:R, 0 <= x -> 0 <= y -> sqrt x <= sqrt y -> x <= y.",
            "VernacStartTheoremProof",
            "a93b0fc9e230109723e312fdd10687476ef1e7f7"
        ],
        [
            "intros x y H1 H2 H3; generalize (Rsqr_incr_1 (sqrt x) (sqrt y) H3 (sqrt_positivity x H1) (sqrt_positivity y H2)); intro H4; rewrite (Rsqr_sqrt x H1) in H4; rewrite (Rsqr_sqrt y H2) in H4; assumption.",
            "VernacExtend",
            "910fc190fa02085eeb1b09d1d3748cd105e09fd5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_le_1_alt : forall x y : R, x <= y -> sqrt x <= sqrt y.",
            "VernacStartTheoremProof",
            "f86d335456eecfffa9385e76e2c9ce19746de108"
        ],
        [
            "intros x y [Hxy|Hxy].",
            "VernacExtend",
            "d21bb7ef5f343ac803b70b72301163dd8b9970a7"
        ],
        [
            "destruct (Rle_or_lt 0 x) as [Hx|Hx].",
            "VernacExtend",
            "a3770c27b57432695451ec9185f3f15f3759c589"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "apply sqrt_lt_1_alt.",
            "VernacExtend",
            "45b4cd2388d55c8102fb6e671b5e2b84734b7c99"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "unfold sqrt at 1.",
            "VernacExtend",
            "1ef01bb8aecc28211424839bb4ab638b62c5a156"
        ],
        [
            "destruct (Rcase_abs x) as [Hx'|Hx'].",
            "VernacExtend",
            "7b48d5f5a5109281cdac24190d8cc1d2b426cef0"
        ],
        [
            "apply sqrt_pos.",
            "VernacExtend",
            "8013846f769de514ba1120cf1bfee7fe3207e68d"
        ],
        [
            "now elim Rge_not_lt with (1 := Hx').",
            "VernacExtend",
            "472c75bb3edb5423c402f2feacc4a15ac9cea044"
        ],
        [
            "rewrite Hxy.",
            "VernacExtend",
            "d3b02e14eceb680d6ea962ead2cb32634a781bf3"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_le_1 : forall x y:R, 0 <= x -> 0 <= y -> x <= y -> sqrt x <= sqrt y.",
            "VernacStartTheoremProof",
            "6bc5f74a20100c9b9b94d49e5c2f6acafa512cac"
        ],
        [
            "intros x y _ _ Hxy.",
            "VernacExtend",
            "3a54e38e37a8a7a5cf6ac9569b64d32bdd822db8"
        ],
        [
            "now apply sqrt_le_1_alt.",
            "VernacExtend",
            "fd5df348e1bd0143ad53109d0334ac3027fe2ce9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_inj : forall x y:R, 0 <= x -> 0 <= y -> sqrt x = sqrt y -> x = y.",
            "VernacStartTheoremProof",
            "30b35925f42ade2bdca8ed447b41151ad3836a51"
        ],
        [
            "intros; cut (Rsqr (sqrt x) = Rsqr (sqrt y)).",
            "VernacExtend",
            "404cd4e220a5ecf8e3bd34fe5cf391312a3fe9e5"
        ],
        [
            "intro; rewrite (Rsqr_sqrt x H) in H2; rewrite (Rsqr_sqrt y H0) in H2; assumption.",
            "VernacExtend",
            "31889d8bbd3965ddd5f4ebc239d4769149c0f937"
        ],
        [
            "rewrite H1; reflexivity.",
            "VernacExtend",
            "78cd8a23170465d8fbd1f52e805fd4772133410f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_less_alt : forall x : R, 1 < x -> sqrt x < x.",
            "VernacStartTheoremProof",
            "5b4efd6cf0bd2632c4a88e601bcd02ec57d8e117"
        ],
        [
            "intros x Hx.",
            "VernacExtend",
            "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
        ],
        [
            "assert (Hx1 := Rle_lt_trans _ _ _ Rle_0_1 Hx).",
            "VernacExtend",
            "797a14209759148e4b5f415db7f8b8c305ff7378"
        ],
        [
            "assert (Hx2 := Rlt_le _ _ Hx1).",
            "VernacExtend",
            "44206371f5324510331ab403b17123b1afdd74fb"
        ],
        [
            "apply Rsqr_incrst_0 ; trivial.",
            "VernacExtend",
            "f5d8dd0c4e228a9542d78abe58f887596885a146"
        ],
        [
            "rewrite Rsqr_sqrt ; trivial.",
            "VernacExtend",
            "80cc0f71b36edbea044a10741f80c23fd5dd19f7"
        ],
        [
            "rewrite <- (Rmult_1_l x) at 1.",
            "VernacExtend",
            "17b9925865f51616845fabac69308c7e18460ead"
        ],
        [
            "now apply Rmult_lt_compat_r.",
            "VernacExtend",
            "4453db6cea943776585898a2266890c705eb57f1"
        ],
        [
            "apply sqrt_pos.",
            "VernacExtend",
            "8013846f769de514ba1120cf1bfee7fe3207e68d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_less : forall x:R, 0 <= x -> 1 < x -> sqrt x < x.",
            "VernacStartTheoremProof",
            "9fa03c0c5a64d0c050a7b51eff432cfa05aff19c"
        ],
        [
            "intros x _.",
            "VernacExtend",
            "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
        ],
        [
            "apply sqrt_less_alt.",
            "VernacExtend",
            "eb5c3c9ed6807b7aa717092a204d01b0c221c574"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_more : forall x:R, 0 < x -> x < 1 -> x < sqrt x.",
            "VernacStartTheoremProof",
            "80d96f9a967779df3342832a3296338723781823"
        ],
        [
            "intros x H1 H2; generalize (sqrt_lt_1 x 1 (Rlt_le 0 x H1) (Rlt_le 0 1 Rlt_0_1) H2); intro H3; rewrite sqrt_1 in H3; generalize (Rmult_ne (sqrt x)); intro H4; elim H4; intros H5 H6; rewrite <- H5; pattern x at 1; rewrite <- (sqrt_def x (Rlt_le 0 x H1)); apply (Rmult_lt_compat_l (sqrt x) (sqrt x) 1 (sqrt_lt_R0 x H1) H3).",
            "VernacExtend",
            "00beeb72f8824cc8a80b149f2760e312c1d80180"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sqrt_cauchy : forall a b c d:R, a * c + b * d <= sqrt (Rsqr a + Rsqr b) * sqrt (Rsqr c + Rsqr d).",
            "VernacStartTheoremProof",
            "31b158212e59e78966db3a180cd59ddfc0e71332"
        ],
        [
            "intros a b c d; apply Rsqr_incr_0_var; [ rewrite Rsqr_mult; repeat rewrite Rsqr_sqrt; unfold Rsqr; [ replace ((a * c + b * d) * (a * c + b * d)) with (a * a * c * c + b * b * d * d + 2 * a * b * c * d); [ replace ((a * a + b * b) * (c * c + d * d)) with (a * a * c * c + b * b * d * d + (a * a * d * d + b * b * c * c)); [ apply Rplus_le_compat_l; replace (a * a * d * d + b * b * c * c) with (2 * a * b * c * d + (a * a * d * d + b * b * c * c - 2 * a * b * c * d)); [ pattern (2 * a * b * c * d) at 1; rewrite <- Rplus_0_r; apply Rplus_le_compat_l; replace (a * a * d * d + b * b * c * c - 2 * a * b * c * d) with (Rsqr (a * d - b * c)); [ apply Rle_0_sqr | unfold Rsqr; ring ] | ring ] | ring ] | ring ] | apply (Rplus_le_le_0_compat (Rsqr c) (Rsqr d) (Rle_0_sqr c) (Rle_0_sqr d)) | apply (Rplus_le_le_0_compat (Rsqr a) (Rsqr b) (Rle_0_sqr a) (Rle_0_sqr b)) ] | apply Rmult_le_pos; apply sqrt_positivity; apply Rplus_le_le_0_compat; apply Rle_0_sqr ].",
            "VernacExtend",
            "92bf323da5a5f690933df06cda9e971b7020a920"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Delta (a:nonzeroreal) (b c:R) : R := Rsqr b - 4 * a * c.",
            "VernacDefinition",
            "d11232a21fb9fb316155e4ad1b794314f23b080f"
        ],
        [
            "Definition Delta_is_pos (a:nonzeroreal) (b c:R) : Prop := 0 <= Delta a b c.",
            "VernacDefinition",
            "58d4c16d6eebe166aa5473acb94540483f976559"
        ],
        [
            "Definition sol_x1 (a:nonzeroreal) (b c:R) : R := (- b + sqrt (Delta a b c)) / (2 * a).",
            "VernacDefinition",
            "d001d0edf0736c969c2a2b4f8fb2bc896f78eed2"
        ],
        [
            "Definition sol_x2 (a:nonzeroreal) (b c:R) : R := (- b - sqrt (Delta a b c)) / (2 * a).",
            "VernacDefinition",
            "7e5a34006c444369593017efd7a95c7dc36fa0ff"
        ],
        [
            "Lemma Rsqr_sol_eq_0_1 : forall (a:nonzeroreal) (b c x:R), Delta_is_pos a b c -> x = sol_x1 a b c \\/ x = sol_x2 a b c -> a * Rsqr x + b * x + c = 0.",
            "VernacStartTheoremProof",
            "bb02e136f2d1c00c0b56b37c7b96d38d7853efd0"
        ],
        [
            "intros; elim H0; intro.",
            "VernacExtend",
            "c71494096e4c6c2bff84aa6b16bd0a73b8daa3e0"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "unfold sol_x1, Delta, Rsqr.",
            "VernacExtend",
            "97beae872a1302a64f78ac6d71c7b9b9dfaaecca"
        ],
        [
            "field_simplify.",
            "VernacExtend",
            "69312d77240dafb89e62832bed63aad6ea572da3"
        ],
        [
            "rewrite <- (Rsqr_pow2 (sqrt _)), Rsqr_sqrt.",
            "VernacExtend",
            "09e600a2ff13edfca785f5ab43c4e86dc0d0a64d"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "apply a.",
            "VernacExtend",
            "efcb795685660eed264bd6d68e41b35603ede4a5"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply a.",
            "VernacExtend",
            "efcb795685660eed264bd6d68e41b35603ede4a5"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "unfold sol_x2, Delta, Rsqr.",
            "VernacExtend",
            "76e0476db47525aaa148fe2724dffe5b545cd3d7"
        ],
        [
            "field_simplify.",
            "VernacExtend",
            "69312d77240dafb89e62832bed63aad6ea572da3"
        ],
        [
            "rewrite <- (Rsqr_pow2 (sqrt _)), Rsqr_sqrt.",
            "VernacExtend",
            "09e600a2ff13edfca785f5ab43c4e86dc0d0a64d"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "apply a.",
            "VernacExtend",
            "efcb795685660eed264bd6d68e41b35603ede4a5"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply a.",
            "VernacExtend",
            "efcb795685660eed264bd6d68e41b35603ede4a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rsqr_sol_eq_0_0 : forall (a:nonzeroreal) (b c x:R), Delta_is_pos a b c -> a * Rsqr x + b * x + c = 0 -> x = sol_x1 a b c \\/ x = sol_x2 a b c.",
            "VernacStartTheoremProof",
            "5e29e018b3beca021db5c2472322b21ef6a52167"
        ],
        [
            "intros; rewrite (canonical_Rsqr a b c x) in H0; rewrite Rplus_comm in H0; generalize (Rplus_opp_r_uniq ((4 * a * c - Rsqr b) / (4 * a)) (a * Rsqr (x + b / (2 * a))) H0); cut (Rsqr b - 4 * a * c = Delta a b c).",
            "VernacExtend",
            "85057d17fef4b8dabcd0e818cd78c6821fbaa218"
        ],
        [
            "intro; replace (- ((4 * a * c - Rsqr b) / (4 * a))) with ((Rsqr b - 4 * a * c) / (4 * a)).",
            "VernacExtend",
            "c861a26ba8c7d1add867f58f65fcbd01e765702e"
        ],
        [
            "rewrite H1; intro; generalize (Rmult_eq_compat_l (/ a) (a * Rsqr (x + b / (2 * a))) (Delta a b c / (4 * a)) H2); replace (/ a * (a * Rsqr (x + b / (2 * a)))) with (Rsqr (x + b / (2 * a))).",
            "VernacExtend",
            "46fa3a28cb85a61e423ed89a9b6a3238d8e5b5ad"
        ],
        [
            "replace (/ a * (Delta a b c / (4 * a))) with (Rsqr (sqrt (Delta a b c) / (2 * a))).",
            "VernacExtend",
            "aa4b07bc5cddc066a5b06199d70e87c9b2fb1688"
        ],
        [
            "intro; generalize (Rsqr_eq (x + b / (2 * a)) (sqrt (Delta a b c) / (2 * a)) H3); intro; elim H4; intro.",
            "VernacExtend",
            "6efe2c6c242058eb0e86b1ffef1038b2f69efc45"
        ],
        [
            "left; unfold sol_x1; generalize (Rplus_eq_compat_l (- (b / (2 * a))) (x + b / (2 * a)) (sqrt (Delta a b c) / (2 * a)) H5); replace (- (b / (2 * a)) + (x + b / (2 * a))) with x.",
            "VernacExtend",
            "3dc32d9bfe669f7ec2234508ac3d9382932f4a5f"
        ],
        [
            "intro; rewrite H6; unfold Rdiv; ring.",
            "VernacExtend",
            "77a10ac82037951cb19de1e03440948365f909c8"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "right; unfold sol_x2; generalize (Rplus_eq_compat_l (- (b / (2 * a))) (x + b / (2 * a)) (- (sqrt (Delta a b c) / (2 * a))) H5); replace (- (b / (2 * a)) + (x + b / (2 * a))) with x.",
            "VernacExtend",
            "e4483b12102cde7545a718d336de9f4af94f9fb8"
        ],
        [
            "intro; rewrite H6; unfold Rdiv; ring.",
            "VernacExtend",
            "77a10ac82037951cb19de1e03440948365f909c8"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite Rsqr_div.",
            "VernacExtend",
            "6c6cfa93e0cd70346f8696fd27099b6b3fec2a0c"
        ],
        [
            "rewrite Rsqr_sqrt.",
            "VernacExtend",
            "8a11038a5332283dbae528e285a68e3def534ef0"
        ],
        [
            "unfold Rdiv.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "repeat rewrite Rmult_assoc.",
            "VernacExtend",
            "9a62b3359051e53192153e7bfe542316dbd712a8"
        ],
        [
            "rewrite (Rmult_comm (/ a)).",
            "VernacExtend",
            "27f2508264a8ffd01b5ca52edd57fa5773b9ad29"
        ],
        [
            "rewrite Rmult_assoc.",
            "VernacExtend",
            "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
        ],
        [
            "rewrite <- Rinv_mult_distr.",
            "VernacExtend",
            "c12ef2181b9990533ec54fcfa7a44402635ff59c"
        ],
        [
            "replace (4 * a * a) with (Rsqr (2 * a)).",
            "VernacExtend",
            "ed60fa7dcb13448c2bfc14978f3d75f49c3ac6d8"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "ring_Rsqr.",
            "VernacExtend",
            "0e9acc62ae3bad0971e29cfc72376e2b7652a3a9"
        ],
        [
            "apply prod_neq_R0; [ discrR | apply (cond_nonzero a) ].",
            "VernacExtend",
            "82f05ec863a59e0f1479a5ca7e4cdadd05b4b8b1"
        ],
        [
            "apply (cond_nonzero a).",
            "VernacExtend",
            "bb31ebf627a55c0d89429ee0f17fa350eeb80059"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply prod_neq_R0; [ discrR | apply (cond_nonzero a) ].",
            "VernacExtend",
            "82f05ec863a59e0f1479a5ca7e4cdadd05b4b8b1"
        ],
        [
            "rewrite <- Rmult_assoc; rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "eccb067dc9e836ad48bf16c61cd308004f5d6712"
        ],
        [
            "symmetry ; apply Rmult_1_l.",
            "VernacExtend",
            "b2d22ab7e5a88898908d687ccfd1df2596cb9bce"
        ],
        [
            "apply (cond_nonzero a).",
            "VernacExtend",
            "bb31ebf627a55c0d89429ee0f17fa350eeb80059"
        ],
        [
            "unfold Rdiv; rewrite <- Ropp_mult_distr_l_reverse.",
            "VernacExtend",
            "b17e46c3ae31af73f2b5640aead7600b941fb5c9"
        ],
        [
            "rewrite Ropp_minus_distr.",
            "VernacExtend",
            "03410ea29af67bdcfa7393931606c01ed23d7394"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "sqrt_pos",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros x.",
                        "VernacExtend",
                        "596d66edc70dae19981ed74f103fc0a865aec92c"
                    ]
                },
                {
                    "command": [
                        "unfold sqrt.",
                        "VernacExtend",
                        "71ef64092f0003bcdade22760b25585d0190003b"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcase_abs x) as [H|H].",
                        "VernacExtend",
                        "f4c19f6675f75c71ce0caee450f5ec4a7d527e92"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "apply Rsqrt_positivity.",
                        "VernacExtend",
                        "c089a16cf41c581e86d723b7996d69567c3bf3f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_positivity",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros x _.",
                        "VernacExtend",
                        "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_pos.",
                        "VernacExtend",
                        "8013846f769de514ba1120cf1bfee7fe3207e68d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_sqrt",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold sqrt.",
                        "VernacExtend",
                        "71ef64092f0003bcdade22760b25585d0190003b"
                    ]
                },
                {
                    "command": [
                        "case (Rcase_abs x) as [Hlt|Hge].",
                        "VernacExtend",
                        "4eb15dc440e78fefe1e5a6269a235ac699970391"
                    ]
                },
                {
                    "command": [
                        "elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)).",
                        "VernacExtend",
                        "a5dd22f6e440147e5448c0a7936ff400a1d02567"
                    ]
                },
                {
                    "command": [
                        "rewrite Rsqrt_Rsqrt; reflexivity.",
                        "VernacExtend",
                        "876a88c4c04a37f9c5efdb518b7b73530669184f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_0",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "apply Rsqr_eq_0; unfold Rsqr; apply sqrt_sqrt; right; reflexivity.",
                        "VernacExtend",
                        "e11a7ed2c59fa88513d57ea608379e9dde7dee4d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_1",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "apply (Rsqr_inj (sqrt 1) 1); [ apply sqrt_positivity; left | left | unfold Rsqr; rewrite sqrt_sqrt; [ ring | left ] ]; apply Rlt_0_1.",
                        "VernacExtend",
                        "fff03e6854e8958ed7cca09a3baf9ea74f5d3dce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_eq_0",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros; cut (Rsqr (sqrt x) = 0).",
                        "VernacExtend",
                        "25f10ed0a08db582f1b420faaa711464d66f90bd"
                    ]
                },
                {
                    "command": [
                        "intro; unfold Rsqr in H1; rewrite sqrt_sqrt in H1; assumption.",
                        "VernacExtend",
                        "4d518fc5900cecdc026b36e1c3333a9e95f4b275"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; apply Rsqr_0.",
                        "VernacExtend",
                        "60b7d0278230113d45378740ffcd9b64e30cb915"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_lem_0",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "intros; rewrite <- H1; apply (sqrt_sqrt x H).",
                        "VernacExtend",
                        "efa9f70091266828afbf49f450a61e366e9a8589"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_lem_1",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros; apply Rsqr_inj; [ apply (sqrt_positivity x H) | assumption | unfold Rsqr; rewrite H1; apply (sqrt_sqrt x H) ].",
                        "VernacExtend",
                        "80b385c38abf3c3dbda8293e1395e590082d21ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_def",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros; apply (sqrt_sqrt x H).",
                        "VernacExtend",
                        "25ac85526f7bced46a67a8f01b6e2b4f94cd303a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_square",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros; apply (Rsqr_inj (sqrt (Rsqr x)) x (sqrt_positivity (Rsqr x) (Rle_0_sqr x)) H); unfold Rsqr; apply (sqrt_sqrt (Rsqr x) (Rle_0_sqr x)).",
                        "VernacExtend",
                        "85f3d93c84b976ff56b676936c6e78928e79ea6b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_Rsqr",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rsqr; apply sqrt_square; assumption.",
                        "VernacExtend",
                        "a53cb694c4a283b55ff41ba62dd7f381fa2a9804"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_pow2",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros; simpl; rewrite Rmult_1_r, sqrt_square; auto.",
                        "VernacExtend",
                        "f1db296ce60b071778ebe03eaa77beca2d5b7da5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_Rsqr_abs",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intro x; rewrite Rsqr_abs; apply sqrt_Rsqr; apply Rabs_pos.",
                        "VernacExtend",
                        "19dd6a58835f565a0eab8a84791d7071c6563830"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rsqr_sqrt",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "intros x H1; unfold Rsqr; apply (sqrt_sqrt x H1).",
                        "VernacExtend",
                        "12fbf8543c77163a6ba76886ab513b00aadf250b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_mult_alt",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "intros x y Hx.",
                        "VernacExtend",
                        "1897c0b7177276da8beec0f41bc059408ef7b497"
                    ]
                },
                {
                    "command": [
                        "unfold sqrt at 3.",
                        "VernacExtend",
                        "1a098638b720637c7460fb92eb3ae24cd562612e"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcase_abs y) as [Hy|Hy].",
                        "VernacExtend",
                        "e18900e39614e46c2cb4da1e398ae4210a0c4de8"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_r.",
                        "VernacExtend",
                        "b528602a1e730e82684da4ab7d2073ddaf5ebdb0"
                    ]
                },
                {
                    "command": [
                        "destruct Hx as [Hx'|Hx'].",
                        "VernacExtend",
                        "89eeef0e7e135f50114f86340ce715ff03dae45c"
                    ]
                },
                {
                    "command": [
                        "unfold sqrt.",
                        "VernacExtend",
                        "71ef64092f0003bcdade22760b25585d0190003b"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcase_abs (x * y)) as [Hxy|Hxy].",
                        "VernacExtend",
                        "c46bcb4359a3e7867e937f267349698c8bb7334d"
                    ]
                },
                {
                    "command": [
                        "apply eq_refl.",
                        "VernacExtend",
                        "7c24386880b38fe6934d624f41ac1fd4ba47d797"
                    ]
                },
                {
                    "command": [
                        "elim Rge_not_lt with (1 := Hxy).",
                        "VernacExtend",
                        "dfce90932da2239978914dae770c033953913c70"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_0_r x).",
                        "VernacExtend",
                        "cdf4542c8a7b2b51d5c2b1511221c0440602c7c3"
                    ]
                },
                {
                    "command": [
                        "now apply Rmult_lt_compat_l.",
                        "VernacExtend",
                        "96fc7ba97bff2b0615046e2fc30be14d2bd47b73"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hx', Rmult_0_l.",
                        "VernacExtend",
                        "58ee7cfdc5bfa85011a6ed1b7d8cef9011a0e607"
                    ]
                },
                {
                    "command": [
                        "exact sqrt_0.",
                        "VernacExtend",
                        "a98b160232fb59556fc15457ffff5446b45c6389"
                    ]
                },
                {
                    "command": [
                        "apply Rsqr_inj.",
                        "VernacExtend",
                        "7bdfb7b89c00cd6f3819fc1496b24bee0d9b32ea"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_pos.",
                        "VernacExtend",
                        "8013846f769de514ba1120cf1bfee7fe3207e68d"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_pos.",
                        "VernacExtend",
                        "8013846f769de514ba1120cf1bfee7fe3207e68d"
                    ]
                },
                {
                    "command": [
                        "apply Rsqrt_positivity.",
                        "VernacExtend",
                        "c089a16cf41c581e86d723b7996d69567c3bf3f3"
                    ]
                },
                {
                    "command": [
                        "rewrite Rsqr_mult, 2!Rsqr_sqrt.",
                        "VernacExtend",
                        "cc8979df7f39f9588ce1371c8347e4db5ba8f86d"
                    ]
                },
                {
                    "command": [
                        "unfold Rsqr.",
                        "VernacExtend",
                        "ee8c595e99ab49bf64a7e1aaaa8933ba6a0b0354"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rsqrt_Rsqrt.",
                        "VernacExtend",
                        "bfce699e7455e8cd122775fe9314e84de2b8916c"
                    ]
                },
                {
                    "command": [
                        "exact Hx.",
                        "VernacExtend",
                        "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "exact Hx.",
                        "VernacExtend",
                        "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
                    ]
                },
                {
                    "command": [
                        "now apply Rge_le.",
                        "VernacExtend",
                        "a9d375e1f97c153d1fcc15fabbf40ef83aa1533a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_mult",
            "line_nb": 85,
            "steps": [
                {
                    "command": [
                        "intros x y Hx _.",
                        "VernacExtend",
                        "36a5b9f0cc7251fe0252d3689d056032d9e5f50b"
                    ]
                },
                {
                    "command": [
                        "now apply sqrt_mult_alt.",
                        "VernacExtend",
                        "d1a419438a48885958fa5c2d36cef7af03442058"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_lt_R0",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "intros x H1; apply Rsqr_incrst_0; [ rewrite Rsqr_0; rewrite Rsqr_sqrt; [ assumption | left; assumption ] | right; reflexivity | apply (sqrt_positivity x (Rlt_le 0 x H1)) ].",
                        "VernacExtend",
                        "2c6996e51265c70b9eb80d954b06bc9743545784"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_mult_inv_pos",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros x y H H0; try assumption.",
                        "VernacExtend",
                        "1f41d2f1c984b4f5beed2920dff3c9f3b5bd5226"
                    ]
                },
                {
                    "command": [
                        "replace 0 with (x * 0).",
                        "VernacExtend",
                        "8f50074f2abeaaf32fb83df976c806d31cc0219c"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_l; auto with real.",
                        "VernacExtend",
                        "3e7233511306c2ec2fb512cc9cfd2a7990f1f973"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_mult_inv_pos",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "intros x y H H0; try assumption.",
                        "VernacExtend",
                        "1f41d2f1c984b4f5beed2920dff3c9f3b5bd5226"
                    ]
                },
                {
                    "command": [
                        "case H; intros.",
                        "VernacExtend",
                        "5c1fb684f521eaf2dc536a242d9fcc76d93c85b6"
                    ]
                },
                {
                    "command": [
                        "red; left.",
                        "VernacExtend",
                        "0ec32f14dbeb07cb15689a8bf7128bb3050e2315"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_mult_inv_pos; auto with real.",
                        "VernacExtend",
                        "8cc5b7dd03824bd2837885b5194eadc6c9f6e428"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1.",
                        "VernacExtend",
                        "b8b417d956609d1854d18921f25bc0ffae73a74e"
                    ]
                },
                {
                    "command": [
                        "red; right; ring.",
                        "VernacExtend",
                        "aa4cff584addd221aa4c6eb9aabd928a0037e953"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_div_alt",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "intros x y Hy.",
                        "VernacExtend",
                        "9aceb5b83b96a49d50c37137afc3ee554735fdf3"
                    ]
                },
                {
                    "command": [
                        "unfold sqrt at 2.",
                        "VernacExtend",
                        "40b98875f69dd6fb4cfc67c225d23b0cde72f86b"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcase_abs x) as [Hx|Hx].",
                        "VernacExtend",
                        "46050b72b19634f867951da323e8f2bfd81f6e9d"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv.",
                        "VernacExtend",
                        "d9820df68a5475147f48d29acf89824b27f71597"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l.",
                        "VernacExtend",
                        "198c4e4c2aa27e6987cc5bebc1444c8d76760541"
                    ]
                },
                {
                    "command": [
                        "unfold sqrt.",
                        "VernacExtend",
                        "71ef64092f0003bcdade22760b25585d0190003b"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcase_abs (x * / y)) as [Hxy|Hxy].",
                        "VernacExtend",
                        "27df14fa215f75f50483bb99777588afeacda037"
                    ]
                },
                {
                    "command": [
                        "apply eq_refl.",
                        "VernacExtend",
                        "7c24386880b38fe6934d624f41ac1fd4ba47d797"
                    ]
                },
                {
                    "command": [
                        "elim Rge_not_lt with (1 := Hxy).",
                        "VernacExtend",
                        "dfce90932da2239978914dae770c033953913c70"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_r with y.",
                        "VernacExtend",
                        "74e5f920ac6ee8cd374cc2235147eadde9a64792"
                    ]
                },
                {
                    "command": [
                        "exact Hy.",
                        "VernacExtend",
                        "def2ddcf2b089fdcc58626c840dcc230a388ad11"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc, Rinv_l, Rmult_1_r, Rmult_0_l.",
                        "VernacExtend",
                        "72b0d9ff42a4953374d5f83225af62e2152e483b"
                    ]
                },
                {
                    "command": [
                        "exact Hx.",
                        "VernacExtend",
                        "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
                    ]
                },
                {
                    "command": [
                        "now apply Rgt_not_eq.",
                        "VernacExtend",
                        "588446d8c16d3fb2cbc3b2d779b4a87917ac8f8d"
                    ]
                },
                {
                    "command": [
                        "set (Hx' := Rge_le x 0 Hx).",
                        "VernacExtend",
                        "9235e4a5b9da26a34556dd3531f302a16fe7d821"
                    ]
                },
                {
                    "command": [
                        "clearbody Hx'.",
                        "VernacExtend",
                        "c250ba108e413cf8531f1c69e1a5ce4eee50b9ba"
                    ]
                },
                {
                    "command": [
                        "clear Hx.",
                        "VernacExtend",
                        "314f2dd08c56e12784d701709c171b860f652dc1"
                    ]
                },
                {
                    "command": [
                        "apply Rsqr_inj.",
                        "VernacExtend",
                        "7bdfb7b89c00cd6f3819fc1496b24bee0d9b32ea"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_pos.",
                        "VernacExtend",
                        "8013846f769de514ba1120cf1bfee7fe3207e68d"
                    ]
                },
                {
                    "command": [
                        "apply Rle_mult_inv_pos.",
                        "VernacExtend",
                        "771e46fbb6c7dab0f0544ab69a443b7eaeb4dea8"
                    ]
                },
                {
                    "command": [
                        "apply Rsqrt_positivity.",
                        "VernacExtend",
                        "c089a16cf41c581e86d723b7996d69567c3bf3f3"
                    ]
                },
                {
                    "command": [
                        "now apply sqrt_lt_R0.",
                        "VernacExtend",
                        "c6e1277262c6aaa8acb574d7d75e10953268faa4"
                    ]
                },
                {
                    "command": [
                        "rewrite Rsqr_div, 2!Rsqr_sqrt.",
                        "VernacExtend",
                        "0c9b069d6c7e1075ce4884eb5bb5c659f3234cf2"
                    ]
                },
                {
                    "command": [
                        "unfold Rsqr.",
                        "VernacExtend",
                        "ee8c595e99ab49bf64a7e1aaaa8933ba6a0b0354"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rsqrt_Rsqrt.",
                        "VernacExtend",
                        "bfce699e7455e8cd122775fe9314e84de2b8916c"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le.",
                        "VernacExtend",
                        "3fa67bbd472123a7abc1f777aecc643fb3862e46"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_mult_inv_pos.",
                        "VernacExtend",
                        "3e5622030621ea72cc87e9048a3b56b624ba4ad9"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq.",
                        "VernacExtend",
                        "8860a9193cfdaf1f0316f8df1f2c0781738e5ef7"
                    ]
                },
                {
                    "command": [
                        "now apply sqrt_lt_R0.",
                        "VernacExtend",
                        "c6e1277262c6aaa8acb574d7d75e10953268faa4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_div",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros x y _ H.",
                        "VernacExtend",
                        "1b9e63db1248517266d3510a9ce6b7fac1380851"
                    ]
                },
                {
                    "command": [
                        "now apply sqrt_div_alt.",
                        "VernacExtend",
                        "87197777cc1c00fd0b09d0f83fb12370ccbe5055"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_lt_0_alt",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "intros x y.",
                        "VernacExtend",
                        "be08ce6238d7df02469dd8e9e4a4f4eef3cfb51f"
                    ]
                },
                {
                    "command": [
                        "unfold sqrt at 2.",
                        "VernacExtend",
                        "40b98875f69dd6fb4cfc67c225d23b0cde72f86b"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcase_abs y) as [Hy|Hy].",
                        "VernacExtend",
                        "e18900e39614e46c2cb4da1e398ae4210a0c4de8"
                    ]
                },
                {
                    "command": [
                        "intros Hx.",
                        "VernacExtend",
                        "9276b72df3a882c9b4b954c90d9e870c80a906fc"
                    ]
                },
                {
                    "command": [
                        "elim Rlt_not_le with (1 := Hx).",
                        "VernacExtend",
                        "58f61b9167ea4bd16a23de47ef13adf959c0e975"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_pos.",
                        "VernacExtend",
                        "8013846f769de514ba1120cf1bfee7fe3207e68d"
                    ]
                },
                {
                    "command": [
                        "set (Hy' := Rge_le y 0 Hy).",
                        "VernacExtend",
                        "707773ea1ddb27db8c236b6100021db0ddfb80db"
                    ]
                },
                {
                    "command": [
                        "clearbody Hy'.",
                        "VernacExtend",
                        "9f8ba76fb3fdfe3311216f3ce4b0041f8d3c709d"
                    ]
                },
                {
                    "command": [
                        "clear Hy.",
                        "VernacExtend",
                        "3bea37436535702bd1dd03697252cf9c45c6e48d"
                    ]
                },
                {
                    "command": [
                        "unfold sqrt.",
                        "VernacExtend",
                        "71ef64092f0003bcdade22760b25585d0190003b"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcase_abs x) as [Hx|Hx].",
                        "VernacExtend",
                        "46050b72b19634f867951da323e8f2bfd81f6e9d"
                    ]
                },
                {
                    "command": [
                        "intros _.",
                        "VernacExtend",
                        "eb0e518a4896777a9a76b3ab973eaf7b4f1b52db"
                    ]
                },
                {
                    "command": [
                        "now apply Rlt_le_trans with R0.",
                        "VernacExtend",
                        "9762221e4da496d52ec8f7c1ecd21dee9b2058dc"
                    ]
                },
                {
                    "command": [
                        "intros Hxy.",
                        "VernacExtend",
                        "1b46c68dc8fbe16f0f7f65835f5cba74ed8f8cae"
                    ]
                },
                {
                    "command": [
                        "apply Rsqr_incrst_1 in Hxy ; try apply Rsqrt_positivity.",
                        "VernacExtend",
                        "d33cbf06178b7d78e93321806c62355f3777c00e"
                    ]
                },
                {
                    "command": [
                        "unfold Rsqr in Hxy.",
                        "VernacExtend",
                        "be8b5e3dbb0108d3ebcfde6b7f728129191a875b"
                    ]
                },
                {
                    "command": [
                        "now rewrite 2!Rsqrt_Rsqrt in Hxy.",
                        "VernacExtend",
                        "a9402473cd2f310943f789f8e28d685db25676ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_lt_0",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "intros x y _ _.",
                        "VernacExtend",
                        "a9d5ff0b4941c54fbc1dbd1f83b1bc92549f70af"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_lt_0_alt.",
                        "VernacExtend",
                        "eb4d7b3ae7884db1af964a149e53043b55037717"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_lt_1_alt",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "intros x y (Hx, Hxy).",
                        "VernacExtend",
                        "2f79096576065a4d8c0aaf5ecb64184cd1eb0b60"
                    ]
                },
                {
                    "command": [
                        "apply Rsqr_incrst_0 ; try apply sqrt_pos.",
                        "VernacExtend",
                        "f50acba4f31eaf2dd83af6c5cf18d1881aef90a6"
                    ]
                },
                {
                    "command": [
                        "rewrite 2!Rsqr_sqrt.",
                        "VernacExtend",
                        "a26035a02eb19c65d146db4b99255fcb998b1e51"
                    ]
                },
                {
                    "command": [
                        "exact Hxy.",
                        "VernacExtend",
                        "6ba9fbd4bf2b620bf4ba04417b1324eb48d923d7"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "now apply Rle_lt_trans with x.",
                        "VernacExtend",
                        "b8ead94118320135b3512914fe2cad52d6d87827"
                    ]
                },
                {
                    "command": [
                        "exact Hx.",
                        "VernacExtend",
                        "c13c54106cd84aeca38c2dd70bf8e46a5be5e1eb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_lt_1",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "intros x y Hx _ Hxy.",
                        "VernacExtend",
                        "dbe718835d552323b8398e76b17446f444c5a421"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_lt_1_alt.",
                        "VernacExtend",
                        "45b4cd2388d55c8102fb6e671b5e2b84734b7c99"
                    ]
                },
                {
                    "command": [
                        "now split.",
                        "VernacExtend",
                        "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_le_0",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "intros x y H1 H2 H3; generalize (Rsqr_incr_1 (sqrt x) (sqrt y) H3 (sqrt_positivity x H1) (sqrt_positivity y H2)); intro H4; rewrite (Rsqr_sqrt x H1) in H4; rewrite (Rsqr_sqrt y H2) in H4; assumption.",
                        "VernacExtend",
                        "910fc190fa02085eeb1b09d1d3748cd105e09fd5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_le_1_alt",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "intros x y [Hxy|Hxy].",
                        "VernacExtend",
                        "d21bb7ef5f343ac803b70b72301163dd8b9970a7"
                    ]
                },
                {
                    "command": [
                        "destruct (Rle_or_lt 0 x) as [Hx|Hx].",
                        "VernacExtend",
                        "a3770c27b57432695451ec9185f3f15f3759c589"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le.",
                        "VernacExtend",
                        "cdc4280500779f23bae235b94c24a4b2ea2921fe"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_lt_1_alt.",
                        "VernacExtend",
                        "45b4cd2388d55c8102fb6e671b5e2b84734b7c99"
                    ]
                },
                {
                    "command": [
                        "now split.",
                        "VernacExtend",
                        "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
                    ]
                },
                {
                    "command": [
                        "unfold sqrt at 1.",
                        "VernacExtend",
                        "1ef01bb8aecc28211424839bb4ab638b62c5a156"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcase_abs x) as [Hx'|Hx'].",
                        "VernacExtend",
                        "7b48d5f5a5109281cdac24190d8cc1d2b426cef0"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_pos.",
                        "VernacExtend",
                        "8013846f769de514ba1120cf1bfee7fe3207e68d"
                    ]
                },
                {
                    "command": [
                        "now elim Rge_not_lt with (1 := Hx').",
                        "VernacExtend",
                        "472c75bb3edb5423c402f2feacc4a15ac9cea044"
                    ]
                },
                {
                    "command": [
                        "rewrite Hxy.",
                        "VernacExtend",
                        "d3b02e14eceb680d6ea962ead2cb32634a781bf3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_le_1",
            "line_nb": 194,
            "steps": [
                {
                    "command": [
                        "intros x y _ _ Hxy.",
                        "VernacExtend",
                        "3a54e38e37a8a7a5cf6ac9569b64d32bdd822db8"
                    ]
                },
                {
                    "command": [
                        "now apply sqrt_le_1_alt.",
                        "VernacExtend",
                        "fd5df348e1bd0143ad53109d0334ac3027fe2ce9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_inj",
            "line_nb": 198,
            "steps": [
                {
                    "command": [
                        "intros; cut (Rsqr (sqrt x) = Rsqr (sqrt y)).",
                        "VernacExtend",
                        "404cd4e220a5ecf8e3bd34fe5cf391312a3fe9e5"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite (Rsqr_sqrt x H) in H2; rewrite (Rsqr_sqrt y H0) in H2; assumption.",
                        "VernacExtend",
                        "31889d8bbd3965ddd5f4ebc239d4769149c0f937"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; reflexivity.",
                        "VernacExtend",
                        "78cd8a23170465d8fbd1f52e805fd4772133410f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_less_alt",
            "line_nb": 203,
            "steps": [
                {
                    "command": [
                        "intros x Hx.",
                        "VernacExtend",
                        "4f408fcf0db2619f08da1108b4fc92384e2a5db3"
                    ]
                },
                {
                    "command": [
                        "assert (Hx1 := Rle_lt_trans _ _ _ Rle_0_1 Hx).",
                        "VernacExtend",
                        "797a14209759148e4b5f415db7f8b8c305ff7378"
                    ]
                },
                {
                    "command": [
                        "assert (Hx2 := Rlt_le _ _ Hx1).",
                        "VernacExtend",
                        "44206371f5324510331ab403b17123b1afdd74fb"
                    ]
                },
                {
                    "command": [
                        "apply Rsqr_incrst_0 ; trivial.",
                        "VernacExtend",
                        "f5d8dd0c4e228a9542d78abe58f887596885a146"
                    ]
                },
                {
                    "command": [
                        "rewrite Rsqr_sqrt ; trivial.",
                        "VernacExtend",
                        "80cc0f71b36edbea044a10741f80c23fd5dd19f7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_1_l x) at 1.",
                        "VernacExtend",
                        "17b9925865f51616845fabac69308c7e18460ead"
                    ]
                },
                {
                    "command": [
                        "now apply Rmult_lt_compat_r.",
                        "VernacExtend",
                        "4453db6cea943776585898a2266890c705eb57f1"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_pos.",
                        "VernacExtend",
                        "8013846f769de514ba1120cf1bfee7fe3207e68d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_less",
            "line_nb": 213,
            "steps": [
                {
                    "command": [
                        "intros x _.",
                        "VernacExtend",
                        "a217ac7c130d591b56438fb1fd6c2cc8c3f9de57"
                    ]
                },
                {
                    "command": [
                        "apply sqrt_less_alt.",
                        "VernacExtend",
                        "eb5c3c9ed6807b7aa717092a204d01b0c221c574"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_more",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "intros x H1 H2; generalize (sqrt_lt_1 x 1 (Rlt_le 0 x H1) (Rlt_le 0 1 Rlt_0_1) H2); intro H3; rewrite sqrt_1 in H3; generalize (Rmult_ne (sqrt x)); intro H4; elim H4; intros H5 H6; rewrite <- H5; pattern x at 1; rewrite <- (sqrt_def x (Rlt_le 0 x H1)); apply (Rmult_lt_compat_l (sqrt x) (sqrt x) 1 (sqrt_lt_R0 x H1) H3).",
                        "VernacExtend",
                        "00beeb72f8824cc8a80b149f2760e312c1d80180"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sqrt_cauchy",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "intros a b c d; apply Rsqr_incr_0_var; [ rewrite Rsqr_mult; repeat rewrite Rsqr_sqrt; unfold Rsqr; [ replace ((a * c + b * d) * (a * c + b * d)) with (a * a * c * c + b * b * d * d + 2 * a * b * c * d); [ replace ((a * a + b * b) * (c * c + d * d)) with (a * a * c * c + b * b * d * d + (a * a * d * d + b * b * c * c)); [ apply Rplus_le_compat_l; replace (a * a * d * d + b * b * c * c) with (2 * a * b * c * d + (a * a * d * d + b * b * c * c - 2 * a * b * c * d)); [ pattern (2 * a * b * c * d) at 1; rewrite <- Rplus_0_r; apply Rplus_le_compat_l; replace (a * a * d * d + b * b * c * c - 2 * a * b * c * d) with (Rsqr (a * d - b * c)); [ apply Rle_0_sqr | unfold Rsqr; ring ] | ring ] | ring ] | ring ] | apply (Rplus_le_le_0_compat (Rsqr c) (Rsqr d) (Rle_0_sqr c) (Rle_0_sqr d)) | apply (Rplus_le_le_0_compat (Rsqr a) (Rsqr b) (Rle_0_sqr a) (Rle_0_sqr b)) ] | apply Rmult_le_pos; apply sqrt_positivity; apply Rplus_le_le_0_compat; apply Rle_0_sqr ].",
                        "VernacExtend",
                        "92bf323da5a5f690933df06cda9e971b7020a920"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rsqr_sol_eq_0_1",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "intros; elim H0; intro.",
                        "VernacExtend",
                        "c71494096e4c6c2bff84aa6b16bd0a73b8daa3e0"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "unfold sol_x1, Delta, Rsqr.",
                        "VernacExtend",
                        "97beae872a1302a64f78ac6d71c7b9b9dfaaecca"
                    ]
                },
                {
                    "command": [
                        "field_simplify.",
                        "VernacExtend",
                        "69312d77240dafb89e62832bed63aad6ea572da3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rsqr_pow2 (sqrt _)), Rsqr_sqrt.",
                        "VernacExtend",
                        "09e600a2ff13edfca785f5ab43c4e86dc0d0a64d"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "apply a.",
                        "VernacExtend",
                        "efcb795685660eed264bd6d68e41b35603ede4a5"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply a.",
                        "VernacExtend",
                        "efcb795685660eed264bd6d68e41b35603ede4a5"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "unfold sol_x2, Delta, Rsqr.",
                        "VernacExtend",
                        "76e0476db47525aaa148fe2724dffe5b545cd3d7"
                    ]
                },
                {
                    "command": [
                        "field_simplify.",
                        "VernacExtend",
                        "69312d77240dafb89e62832bed63aad6ea572da3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rsqr_pow2 (sqrt _)), Rsqr_sqrt.",
                        "VernacExtend",
                        "09e600a2ff13edfca785f5ab43c4e86dc0d0a64d"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "apply a.",
                        "VernacExtend",
                        "efcb795685660eed264bd6d68e41b35603ede4a5"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply a.",
                        "VernacExtend",
                        "efcb795685660eed264bd6d68e41b35603ede4a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rsqr_sol_eq_0_0",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "intros; rewrite (canonical_Rsqr a b c x) in H0; rewrite Rplus_comm in H0; generalize (Rplus_opp_r_uniq ((4 * a * c - Rsqr b) / (4 * a)) (a * Rsqr (x + b / (2 * a))) H0); cut (Rsqr b - 4 * a * c = Delta a b c).",
                        "VernacExtend",
                        "85057d17fef4b8dabcd0e818cd78c6821fbaa218"
                    ]
                },
                {
                    "command": [
                        "intro; replace (- ((4 * a * c - Rsqr b) / (4 * a))) with ((Rsqr b - 4 * a * c) / (4 * a)).",
                        "VernacExtend",
                        "c861a26ba8c7d1add867f58f65fcbd01e765702e"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; intro; generalize (Rmult_eq_compat_l (/ a) (a * Rsqr (x + b / (2 * a))) (Delta a b c / (4 * a)) H2); replace (/ a * (a * Rsqr (x + b / (2 * a)))) with (Rsqr (x + b / (2 * a))).",
                        "VernacExtend",
                        "46fa3a28cb85a61e423ed89a9b6a3238d8e5b5ad"
                    ]
                },
                {
                    "command": [
                        "replace (/ a * (Delta a b c / (4 * a))) with (Rsqr (sqrt (Delta a b c) / (2 * a))).",
                        "VernacExtend",
                        "aa4b07bc5cddc066a5b06199d70e87c9b2fb1688"
                    ]
                },
                {
                    "command": [
                        "intro; generalize (Rsqr_eq (x + b / (2 * a)) (sqrt (Delta a b c) / (2 * a)) H3); intro; elim H4; intro.",
                        "VernacExtend",
                        "6efe2c6c242058eb0e86b1ffef1038b2f69efc45"
                    ]
                },
                {
                    "command": [
                        "left; unfold sol_x1; generalize (Rplus_eq_compat_l (- (b / (2 * a))) (x + b / (2 * a)) (sqrt (Delta a b c) / (2 * a)) H5); replace (- (b / (2 * a)) + (x + b / (2 * a))) with x.",
                        "VernacExtend",
                        "3dc32d9bfe669f7ec2234508ac3d9382932f4a5f"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H6; unfold Rdiv; ring.",
                        "VernacExtend",
                        "77a10ac82037951cb19de1e03440948365f909c8"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "right; unfold sol_x2; generalize (Rplus_eq_compat_l (- (b / (2 * a))) (x + b / (2 * a)) (- (sqrt (Delta a b c) / (2 * a))) H5); replace (- (b / (2 * a)) + (x + b / (2 * a))) with x.",
                        "VernacExtend",
                        "e4483b12102cde7545a718d336de9f4af94f9fb8"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H6; unfold Rdiv; ring.",
                        "VernacExtend",
                        "77a10ac82037951cb19de1e03440948365f909c8"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rsqr_div.",
                        "VernacExtend",
                        "6c6cfa93e0cd70346f8696fd27099b6b3fec2a0c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rsqr_sqrt.",
                        "VernacExtend",
                        "8a11038a5332283dbae528e285a68e3def534ef0"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv.",
                        "VernacExtend",
                        "d9820df68a5475147f48d29acf89824b27f71597"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc.",
                        "VernacExtend",
                        "9a62b3359051e53192153e7bfe542316dbd712a8"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm (/ a)).",
                        "VernacExtend",
                        "27f2508264a8ffd01b5ca52edd57fa5773b9ad29"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc.",
                        "VernacExtend",
                        "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_mult_distr.",
                        "VernacExtend",
                        "c12ef2181b9990533ec54fcfa7a44402635ff59c"
                    ]
                },
                {
                    "command": [
                        "replace (4 * a * a) with (Rsqr (2 * a)).",
                        "VernacExtend",
                        "ed60fa7dcb13448c2bfc14978f3d75f49c3ac6d8"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "ring_Rsqr.",
                        "VernacExtend",
                        "0e9acc62ae3bad0971e29cfc72376e2b7652a3a9"
                    ]
                },
                {
                    "command": [
                        "apply prod_neq_R0; [ discrR | apply (cond_nonzero a) ].",
                        "VernacExtend",
                        "82f05ec863a59e0f1479a5ca7e4cdadd05b4b8b1"
                    ]
                },
                {
                    "command": [
                        "apply (cond_nonzero a).",
                        "VernacExtend",
                        "bb31ebf627a55c0d89429ee0f17fa350eeb80059"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply prod_neq_R0; [ discrR | apply (cond_nonzero a) ].",
                        "VernacExtend",
                        "82f05ec863a59e0f1479a5ca7e4cdadd05b4b8b1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_assoc; rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "eccb067dc9e836ad48bf16c61cd308004f5d6712"
                    ]
                },
                {
                    "command": [
                        "symmetry ; apply Rmult_1_l.",
                        "VernacExtend",
                        "b2d22ab7e5a88898908d687ccfd1df2596cb9bce"
                    ]
                },
                {
                    "command": [
                        "apply (cond_nonzero a).",
                        "VernacExtend",
                        "bb31ebf627a55c0d89429ee0f17fa350eeb80059"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite <- Ropp_mult_distr_l_reverse.",
                        "VernacExtend",
                        "b17e46c3ae31af73f2b5640aead7600b941fb5c9"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_minus_distr.",
                        "VernacExtend",
                        "03410ea29af67bdcfa7393931606c01ed23d7394"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}