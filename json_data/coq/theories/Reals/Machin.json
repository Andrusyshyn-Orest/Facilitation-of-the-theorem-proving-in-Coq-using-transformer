{
    "filename": "theories/Reals/Machin.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Lra.",
            "VernacRequire",
            "6dd90563c90485cd5a8a8b957af14c96d3b4cbc1"
        ],
        [
            "Require Import Rbase.",
            "VernacRequire",
            "c0a8d81b170d4ed8309a8632a3cac35f6cba016a"
        ],
        [
            "Require Import Rtrigo1.",
            "VernacRequire",
            "598baa2d58df0ffe31096944ae833778167e93eb"
        ],
        [
            "Require Import Ranalysis_reg.",
            "VernacRequire",
            "4618d6bc6e973fd059d7ae3ba7a9096fc3aa83f2"
        ],
        [
            "Require Import Rfunctions.",
            "VernacRequire",
            "e0ba64ca9fd07e0fc91c59b7bf007fb29a662a86"
        ],
        [
            "Require Import AltSeries.",
            "VernacRequire",
            "7b92e5e53fba8fd2622c769d50ccc7b0e6d4ad46"
        ],
        [
            "Require Import Rseries.",
            "VernacRequire",
            "7a432dd14e4529f426efb08dc0832c62a8dcc16b"
        ],
        [
            "Require Import SeqProp.",
            "VernacRequire",
            "a37c3bf41f1f017811a12d99565cebd0c11a7976"
        ],
        [
            "Require Import PartSum.",
            "VernacRequire",
            "615de8ef0ed75bdb68bd5486514f11be1837ffd8"
        ],
        [
            "Require Import Ratan.",
            "VernacRequire",
            "537ff9f3edb230b51441328a29bef5cb3ae354a4"
        ],
        [
            "Require Import Omega.",
            "VernacRequire",
            "72dd903de5f3320ef9d302d79812066579ed9cdb"
        ],
        [
            "Local Open Scope R_scope.",
            "VernacOpenCloseScope",
            "b005c72bb3303e031b42be04be04c87c005faa38"
        ],
        [
            "Definition atan_sub u v := (u - v)/(1 + u * v).",
            "VernacDefinition",
            "fa6b4c03eafb2d098e8d471ed71bebe27b2fb66f"
        ],
        [
            "Lemma atan_sub_correct : forall u v, 1 + u * v <> 0 -> -PI/2 < atan u - atan v < PI/2 -> -PI/2 < atan (atan_sub u v) < PI/2 -> atan u = atan v + atan (atan_sub u v).",
            "VernacStartTheoremProof",
            "4eb558b449ce33aa51a36c3488850d8f5feb1add"
        ],
        [
            "intros u v pn0 uvint aint.",
            "VernacExtend",
            "bc4ad9cd26452721abcc606691a36c02c3754da1"
        ],
        [
            "assert (cos (atan u) <> 0).",
            "VernacExtend",
            "16d33d0fe0b3b86ddd0a048fddd7ff916aca1302"
        ],
        [
            "destruct (atan_bound u); apply Rgt_not_eq, cos_gt_0; auto.",
            "VernacExtend",
            "5f08cd2fb463352ad2111becd3ffefbfe36cf0d1"
        ],
        [
            "rewrite <- Ropp_div; assumption.",
            "VernacExtend",
            "95cd8a65f7d0235519d260b0ba0a7535308618e2"
        ],
        [
            "assert (cos (atan v) <> 0).",
            "VernacExtend",
            "750bddb0566d563f1b05ba2add624d4d888a9681"
        ],
        [
            "destruct (atan_bound v); apply Rgt_not_eq, cos_gt_0; auto.",
            "VernacExtend",
            "dbe7fae7c807635ff2c4964ab734c91c4facae56"
        ],
        [
            "rewrite <- Ropp_div; assumption.",
            "VernacExtend",
            "95cd8a65f7d0235519d260b0ba0a7535308618e2"
        ],
        [
            "assert (t : forall a b c, a - b = c -> a = b + c) by (intros; subst; field).",
            "VernacExtend",
            "db367541ab264c5bfda319a4af8a7a584c939618"
        ],
        [
            "apply t, tan_is_inj; clear t; try assumption.",
            "VernacExtend",
            "9b7bec6a7928d7f29590682ac443ca5cab158d49"
        ],
        [
            "rewrite tan_minus; auto.",
            "VernacExtend",
            "c760ed5fd1ec13b2eec440bd872b9b6ceea40e64"
        ],
        [
            "rewrite !atan_right_inv; reflexivity.",
            "VernacExtend",
            "f92c8816f919cad6640f43232aeba1313bbd14c5"
        ],
        [
            "apply Rgt_not_eq, cos_gt_0; rewrite <- ?Ropp_div; tauto.",
            "VernacExtend",
            "654e6bb3d5dc501dc1d06c3a2923269ba509600d"
        ],
        [
            "rewrite !atan_right_inv; assumption.",
            "VernacExtend",
            "d5ff9506a872213153d1659659263f429b4f8e67"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech : forall x y , -1 <= x <= 1 -> -1 < y < 1 -> -PI/2 < atan x - atan y < PI/2.",
            "VernacStartTheoremProof",
            "b127f2b8da285bba7bd24cf07b4060a0d3b0baef"
        ],
        [
            "assert (ut := PI_RGT_0).",
            "VernacExtend",
            "d405cea2130da1de154e143f277d521c2647aba1"
        ],
        [
            "intros x y [xm1 x1] [ym1 y1].",
            "VernacExtend",
            "b25e17ba99db5985844467e72fb9439394bf09ec"
        ],
        [
            "assert (-(PI/4) <= atan x).",
            "VernacExtend",
            "f6dd5a213f2fc9431b2ea88f39e894524614b0df"
        ],
        [
            "destruct xm1 as [xm1 | xm1].",
            "VernacExtend",
            "a267ccb0646803ea23d1ae91ee2920754b816e68"
        ],
        [
            "rewrite <- atan_1, <- atan_opp; apply Rlt_le, atan_increasing.",
            "VernacExtend",
            "7456c3801a73832a9b85d2013541c4a448560e5f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "solve[rewrite <- xm1; change (-1) with (-(1)); rewrite atan_opp, atan_1; apply Rle_refl].",
            "VernacExtend",
            "4209864397eb80332dc2fb49b7982bfb4baca96c"
        ],
        [
            "assert (-(PI/4) < atan y).",
            "VernacExtend",
            "23f0803142dcf479a800893fa1baeebd123c4b35"
        ],
        [
            "rewrite <- atan_1, <- atan_opp; apply atan_increasing.",
            "VernacExtend",
            "d8c7836780387c403c70880e8c9957f354131b3e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assert (atan x <= PI/4).",
            "VernacExtend",
            "d294c94213038708b2c4ac1a5f47cd0125c03aa9"
        ],
        [
            "destruct x1 as [x1 | x1].",
            "VernacExtend",
            "4878727372e791caa48909cadcb73fa9f4b3294e"
        ],
        [
            "rewrite <- atan_1; apply Rlt_le, atan_increasing.",
            "VernacExtend",
            "43f22f4a511bc9e367fb4ad822ac769d5deb6402"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "solve[rewrite x1, atan_1; apply Rle_refl].",
            "VernacExtend",
            "bc39d43b6cd45308ed799a15d7e30230f50d108a"
        ],
        [
            "assert (atan y < PI/4).",
            "VernacExtend",
            "2a07cf66d46394cd2d1341e73ac9ec55eb4f5b6a"
        ],
        [
            "rewrite <- atan_1; apply atan_increasing.",
            "VernacExtend",
            "e54777476fe04987507e1d87347e863b66644502"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite Ropp_div; split; lra.",
            "VernacExtend",
            "a1d2b2925af1e1c6f6721c33242e0feeaa312867"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Machin_2_3 : PI/4 = atan(/2) + atan(/3).",
            "VernacStartTheoremProof",
            "faa7b5999272c42cd9e6cfa5f2a9bb19c2b7fe59"
        ],
        [
            "assert (utility : 0 < PI/2) by (apply PI2_RGT_0).",
            "VernacExtend",
            "012ff5348f55f5780c1e9bd703577fbd75fb7139"
        ],
        [
            "rewrite <- atan_1.",
            "VernacExtend",
            "c21d0fc63b06dae7d37c055e7bae77e7b7689816"
        ],
        [
            "rewrite (atan_sub_correct 1 (/2)).",
            "VernacExtend",
            "5c04b3f7e58bfbe7482cc22a25347717fb1deeb6"
        ],
        [
            "apply f_equal, f_equal; unfold atan_sub; field.",
            "VernacExtend",
            "866a12b5f54a5646cc8cb0b5793f3fd3f133c3a3"
        ],
        [
            "apply Rgt_not_eq; lra.",
            "VernacExtend",
            "ebc1844d8be5a9731d14a39fa51697f320e32aca"
        ],
        [
            "apply tech; try split; try lra.",
            "VernacExtend",
            "56ef3b4db3721d5a8688e07d33d736637ac24183"
        ],
        [
            "apply atan_bound.",
            "VernacExtend",
            "c433ab7ce245b5a86c9461910091f3eedbb99ac1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Machin_4_5_239 : PI/4 = 4 * atan (/5) - atan(/239).",
            "VernacStartTheoremProof",
            "c4ba8719c3ab248ccfc9047abd886889ca938bc8"
        ],
        [
            "rewrite <- atan_1.",
            "VernacExtend",
            "c21d0fc63b06dae7d37c055e7bae77e7b7689816"
        ],
        [
            "rewrite (atan_sub_correct 1 (/5)); [ | apply Rgt_not_eq; lra | apply tech; try split; lra | apply atan_bound ].",
            "VernacExtend",
            "635684b01ffdb8d32f541190a8b96fcb5b22fc0b"
        ],
        [
            "replace (4 * atan (/5) - atan (/239)) with (atan (/5) + (atan (/5) + (atan (/5) + (atan (/5) + - atan (/239))))) by ring.",
            "VernacExtend",
            "061c897a73cad916621052a22d2bc75fa7d283fb"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "replace (atan_sub 1 (/5)) with (2/3) by (unfold atan_sub; field).",
            "VernacExtend",
            "1d2f7cd6782673f49090881d1a54004912eaeefd"
        ],
        [
            "rewrite (atan_sub_correct (2/3) (/5)); [apply f_equal | apply Rgt_not_eq; lra | apply tech; try split; lra | apply atan_bound ].",
            "VernacExtend",
            "59a201f5d35ee4e18fdec1236410c51135519155"
        ],
        [
            "replace (atan_sub (2/3) (/5)) with (7/17) by (unfold atan_sub; field).",
            "VernacExtend",
            "060bcfc5a9fc3f8d368873042538aaaf05f16308"
        ],
        [
            "rewrite (atan_sub_correct (7/17) (/5)); [apply f_equal | apply Rgt_not_eq; lra | apply tech; try split; lra | apply atan_bound ].",
            "VernacExtend",
            "37dc962d5b5c4f51d5a9ef86f63497c636090f42"
        ],
        [
            "replace (atan_sub (7/17) (/5)) with (9/46) by (unfold atan_sub; field).",
            "VernacExtend",
            "cd108e01ace154c85f727d9a97922afda5390dad"
        ],
        [
            "rewrite (atan_sub_correct (9/46) (/5)); [apply f_equal | apply Rgt_not_eq; lra | apply tech; try split; lra | apply atan_bound ].",
            "VernacExtend",
            "f9ea4ccd166f85defff54ac4551bf7e90c0666de"
        ],
        [
            "rewrite <- atan_opp; apply f_equal.",
            "VernacExtend",
            "f3f78f8a41a779b6bb6589e3d62c7549c1b21536"
        ],
        [
            "unfold atan_sub; field.",
            "VernacExtend",
            "4164b015880ff0f27c152601cc7866f21b9d4831"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Machin_2_3_7 : PI/4 = 2 * atan(/3) + (atan (/7)).",
            "VernacStartTheoremProof",
            "bab024c46064e9c3e766eab79a2633b34cf752e4"
        ],
        [
            "rewrite <- atan_1.",
            "VernacExtend",
            "c21d0fc63b06dae7d37c055e7bae77e7b7689816"
        ],
        [
            "rewrite (atan_sub_correct 1 (/3)); [ | apply Rgt_not_eq; lra | apply tech; try split; lra | apply atan_bound ].",
            "VernacExtend",
            "6e2d4d7c0262f09d189d64e9fde07ffec5ce5acc"
        ],
        [
            "replace (2 * atan (/3) + atan (/7)) with (atan (/3) + (atan (/3) + atan (/7))) by ring.",
            "VernacExtend",
            "47a1c618fbbf93df5aea716da64ff6d066cc1520"
        ],
        [
            "apply f_equal.",
            "VernacExtend",
            "ba856cbef3c8e84dcef77c91c8515b497874875b"
        ],
        [
            "replace (atan_sub 1 (/3)) with (/2) by (unfold atan_sub; field).",
            "VernacExtend",
            "16f2f18a200826276a92895da452d526efdb3716"
        ],
        [
            "rewrite (atan_sub_correct (/2) (/3)); [apply f_equal | apply Rgt_not_eq; lra | apply tech; try split; lra | apply atan_bound ].",
            "VernacExtend",
            "8b046d87224241c4254968544e3d0e71241bcc11"
        ],
        [
            "apply f_equal; unfold atan_sub; field.",
            "VernacExtend",
            "0dffb49075f53dce41289f49a9240865bd274da8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition PI_2_3_7_tg n := 2 * Ratan_seq (/3) n + Ratan_seq (/7) n.",
            "VernacDefinition",
            "3ae2b7c29c436c30cebe3fbda61f80811f7d06bf"
        ],
        [
            "Lemma PI_2_3_7_ineq : forall N : nat, sum_f_R0 (tg_alt PI_2_3_7_tg) (S (2 * N)) <= PI / 4 <= sum_f_R0 (tg_alt PI_2_3_7_tg) (2 * N).",
            "VernacStartTheoremProof",
            "3ec0d60b7b1c606692e98c5cd2dbca8cbf51fc98"
        ],
        [
            "assert (dec3 : 0 <= /3 <= 1) by (split; lra).",
            "VernacExtend",
            "fc9a6c4a686a9a861137405114548b3084e851b4"
        ],
        [
            "assert (dec7 : 0 <= /7 <= 1) by (split; lra).",
            "VernacExtend",
            "3218fea2917ed680b0d27b81967b8fa96f68da3b"
        ],
        [
            "assert (decr : Un_decreasing PI_2_3_7_tg).",
            "VernacExtend",
            "8839577ce0232066e8df61ba54d7167a97652f67"
        ],
        [
            "apply Ratan_seq_decreasing in dec3.",
            "VernacExtend",
            "74326642b9fa781285f09e02a6c079d8bbdad6d1"
        ],
        [
            "apply Ratan_seq_decreasing in dec7.",
            "VernacExtend",
            "c9843eb1656ae6d0b0c9ba91672cb9a8ed6b15c0"
        ],
        [
            "intros n; apply Rplus_le_compat.",
            "VernacExtend",
            "6ad947d594937290c24e8db289a7cf1dd8b81164"
        ],
        [
            "apply Rmult_le_compat_l; [ lra | exact (dec3 n)].",
            "VernacExtend",
            "302cb9c25846b862d0290a76529ba5fb6ec9ed26"
        ],
        [
            "exact (dec7 n).",
            "VernacExtend",
            "d7977af08011a4ee60cedfa1efd95a03ee54e4dc"
        ],
        [
            "assert (cv : Un_cv PI_2_3_7_tg 0).",
            "VernacExtend",
            "1a6711de37463ee8b4af7fe611bc5709a6e3a546"
        ],
        [
            "apply Ratan_seq_converging in dec3.",
            "VernacExtend",
            "46d35d78317b0ab6008b2f108df3a0ef81270212"
        ],
        [
            "apply Ratan_seq_converging in dec7.",
            "VernacExtend",
            "18dcf3b43966ae93edf671932606ce6424a3792f"
        ],
        [
            "intros eps ep.",
            "VernacExtend",
            "af89a53f4fae9477ea82d9a2bc893f64250db095"
        ],
        [
            "assert (ep' : 0 < eps /3) by lra.",
            "VernacExtend",
            "f0d63e18f7b25932a8663419c616c6730281af93"
        ],
        [
            "destruct (dec3 _ ep') as [N1 Pn1]; destruct (dec7 _ ep') as [N2 Pn2].",
            "VernacExtend",
            "5b0363145af0512f0c9191bed7e60d69d70ad064"
        ],
        [
            "exists (N1 + N2)%nat; intros n Nn.",
            "VernacExtend",
            "c06069d378d3bffae9edbfa30244fc3f481a9ddb"
        ],
        [
            "unfold PI_2_3_7_tg.",
            "VernacExtend",
            "e511d94f631609875df93e786ad3b7089e2adb47"
        ],
        [
            "rewrite <- (Rplus_0_l 0).",
            "VernacExtend",
            "b4f6e30bb97556b68566d133279e496054a7a01a"
        ],
        [
            "apply Rle_lt_trans with (1 := R_dist_plus (2 * Ratan_seq (/3) n) 0 (Ratan_seq (/7) n) 0).",
            "VernacExtend",
            "2c806996aaf2207b85b2d41cde748bd87112d04e"
        ],
        [
            "replace eps with (2 * eps/3 + eps/3) by field.",
            "VernacExtend",
            "951093453febacf3912b44b86af850736a953d00"
        ],
        [
            "apply Rplus_lt_compat.",
            "VernacExtend",
            "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
        ],
        [
            "unfold R_dist, Rminus, Rdiv.",
            "VernacExtend",
            "d18be0311ac73baf3ad2d588cca77fd6b4bdbe00"
        ],
        [
            "rewrite <- (Rmult_0_r 2), <- Ropp_mult_distr_r_reverse.",
            "VernacExtend",
            "c571ce63202824ef47dd58d0fcd2c29b419e840f"
        ],
        [
            "rewrite <- Rmult_plus_distr_l, Rabs_mult, (Rabs_pos_eq 2);[|lra].",
            "VernacExtend",
            "051c0affb465b6f83bc11a9fad0c4340a3ba039c"
        ],
        [
            "rewrite Rmult_assoc; apply Rmult_lt_compat_l;[lra | ].",
            "VernacExtend",
            "0e90fe27b4e4c7e3c9d0a72c7769992826e1be7b"
        ],
        [
            "apply (Pn1 n); omega.",
            "VernacExtend",
            "90df3d18dedeb1f5b7e5690866df9a3ea1c1e3d7"
        ],
        [
            "apply (Pn2 n); omega.",
            "VernacExtend",
            "16e7a0eba020bc7c06c0d6645db3224aa1e9e6e3"
        ],
        [
            "rewrite Machin_2_3_7.",
            "VernacExtend",
            "112f0cbd01c35afd50cdaad149295c33d780ff6c"
        ],
        [
            "rewrite !atan_eq_ps_atan; try (split; lra).",
            "VernacExtend",
            "1cd9bc0076f705312aeec89a5f5e35a7c83ec1cb"
        ],
        [
            "unfold ps_atan; destruct (in_int (/3)); destruct (in_int (/7)); try match goal with id : ~ _ |- _ => case id; split; lra end.",
            "VernacExtend",
            "cd2f465af36bc35dbb08b9a0381f319337c9abfe"
        ],
        [
            "destruct (ps_atan_exists_1 (/3)) as [v3 Pv3].",
            "VernacExtend",
            "e55ba0402c92ad2e3ae56d57031624c2c1358d3c"
        ],
        [
            "destruct (ps_atan_exists_1 (/7)) as [v7 Pv7].",
            "VernacExtend",
            "5ed2b047bd9211311c10a9d6e1585eb1d3b7b1fe"
        ],
        [
            "assert (main : Un_cv (sum_f_R0 (tg_alt PI_2_3_7_tg)) (2 * v3 + v7)).",
            "VernacExtend",
            "df02e5f7c27b10daeb4ea5c3a6a72cc25f3a4c13"
        ],
        [
            "assert (main :Un_cv (fun n => 2 * sum_f_R0 (tg_alt (Ratan_seq (/3))) n + sum_f_R0 (tg_alt (Ratan_seq (/7))) n) (2 * v3 + v7)).",
            "VernacExtend",
            "e4c2ce6d9963bf420f484dc12f8b9808af082203"
        ],
        [
            "apply CV_plus;[ | assumption].",
            "VernacExtend",
            "cb517fb667de86e6e5b8b6f5ce56d27597dbd2fa"
        ],
        [
            "apply CV_mult;[ | assumption].",
            "VernacExtend",
            "7f65904717bc65729979ce6f564e0453d1e58d1f"
        ],
        [
            "exists 0%nat; intros; rewrite R_dist_eq; assumption.",
            "VernacExtend",
            "700d6586a8118e541daef8fdae7086a7e3ef23d1"
        ],
        [
            "apply Un_cv_ext with (2 := main).",
            "VernacExtend",
            "8a195ccbdd9ff91d1e352afd8d37d1df425fd230"
        ],
        [
            "intros n; rewrite scal_sum, <- plus_sum; apply sum_eq; intros.",
            "VernacExtend",
            "aef47c96ceb176088c62896d6579bf3b8b010a41"
        ],
        [
            "rewrite Rmult_comm; unfold PI_2_3_7_tg, tg_alt; field.",
            "VernacExtend",
            "871fd8438cb5cca51091c1184226872481624afa"
        ],
        [
            "intros N; apply (alternated_series_ineq _ _ _ decr cv main).",
            "VernacExtend",
            "5c57735b520fcb7e0aff410d592f822c1ff23284"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "atan_sub_correct",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros u v pn0 uvint aint.",
                        "VernacExtend",
                        "bc4ad9cd26452721abcc606691a36c02c3754da1"
                    ]
                },
                {
                    "command": [
                        "assert (cos (atan u) <> 0).",
                        "VernacExtend",
                        "16d33d0fe0b3b86ddd0a048fddd7ff916aca1302"
                    ]
                },
                {
                    "command": [
                        "destruct (atan_bound u); apply Rgt_not_eq, cos_gt_0; auto.",
                        "VernacExtend",
                        "5f08cd2fb463352ad2111becd3ffefbfe36cf0d1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_div; assumption.",
                        "VernacExtend",
                        "95cd8a65f7d0235519d260b0ba0a7535308618e2"
                    ]
                },
                {
                    "command": [
                        "assert (cos (atan v) <> 0).",
                        "VernacExtend",
                        "750bddb0566d563f1b05ba2add624d4d888a9681"
                    ]
                },
                {
                    "command": [
                        "destruct (atan_bound v); apply Rgt_not_eq, cos_gt_0; auto.",
                        "VernacExtend",
                        "dbe7fae7c807635ff2c4964ab734c91c4facae56"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_div; assumption.",
                        "VernacExtend",
                        "95cd8a65f7d0235519d260b0ba0a7535308618e2"
                    ]
                },
                {
                    "command": [
                        "assert (t : forall a b c, a - b = c -> a = b + c) by (intros; subst; field).",
                        "VernacExtend",
                        "db367541ab264c5bfda319a4af8a7a584c939618"
                    ]
                },
                {
                    "command": [
                        "apply t, tan_is_inj; clear t; try assumption.",
                        "VernacExtend",
                        "9b7bec6a7928d7f29590682ac443ca5cab158d49"
                    ]
                },
                {
                    "command": [
                        "rewrite tan_minus; auto.",
                        "VernacExtend",
                        "c760ed5fd1ec13b2eec440bd872b9b6ceea40e64"
                    ]
                },
                {
                    "command": [
                        "rewrite !atan_right_inv; reflexivity.",
                        "VernacExtend",
                        "f92c8816f919cad6640f43232aeba1313bbd14c5"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq, cos_gt_0; rewrite <- ?Ropp_div; tauto.",
                        "VernacExtend",
                        "654e6bb3d5dc501dc1d06c3a2923269ba509600d"
                    ]
                },
                {
                    "command": [
                        "rewrite !atan_right_inv; assumption.",
                        "VernacExtend",
                        "d5ff9506a872213153d1659659263f429b4f8e67"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "assert (ut := PI_RGT_0).",
                        "VernacExtend",
                        "d405cea2130da1de154e143f277d521c2647aba1"
                    ]
                },
                {
                    "command": [
                        "intros x y [xm1 x1] [ym1 y1].",
                        "VernacExtend",
                        "b25e17ba99db5985844467e72fb9439394bf09ec"
                    ]
                },
                {
                    "command": [
                        "assert (-(PI/4) <= atan x).",
                        "VernacExtend",
                        "f6dd5a213f2fc9431b2ea88f39e894524614b0df"
                    ]
                },
                {
                    "command": [
                        "destruct xm1 as [xm1 | xm1].",
                        "VernacExtend",
                        "a267ccb0646803ea23d1ae91ee2920754b816e68"
                    ]
                },
                {
                    "command": [
                        "rewrite <- atan_1, <- atan_opp; apply Rlt_le, atan_increasing.",
                        "VernacExtend",
                        "7456c3801a73832a9b85d2013541c4a448560e5f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "solve[rewrite <- xm1; change (-1) with (-(1)); rewrite atan_opp, atan_1; apply Rle_refl].",
                        "VernacExtend",
                        "4209864397eb80332dc2fb49b7982bfb4baca96c"
                    ]
                },
                {
                    "command": [
                        "assert (-(PI/4) < atan y).",
                        "VernacExtend",
                        "23f0803142dcf479a800893fa1baeebd123c4b35"
                    ]
                },
                {
                    "command": [
                        "rewrite <- atan_1, <- atan_opp; apply atan_increasing.",
                        "VernacExtend",
                        "d8c7836780387c403c70880e8c9957f354131b3e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assert (atan x <= PI/4).",
                        "VernacExtend",
                        "d294c94213038708b2c4ac1a5f47cd0125c03aa9"
                    ]
                },
                {
                    "command": [
                        "destruct x1 as [x1 | x1].",
                        "VernacExtend",
                        "4878727372e791caa48909cadcb73fa9f4b3294e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- atan_1; apply Rlt_le, atan_increasing.",
                        "VernacExtend",
                        "43f22f4a511bc9e367fb4ad822ac769d5deb6402"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "solve[rewrite x1, atan_1; apply Rle_refl].",
                        "VernacExtend",
                        "bc39d43b6cd45308ed799a15d7e30230f50d108a"
                    ]
                },
                {
                    "command": [
                        "assert (atan y < PI/4).",
                        "VernacExtend",
                        "2a07cf66d46394cd2d1341e73ac9ec55eb4f5b6a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- atan_1; apply atan_increasing.",
                        "VernacExtend",
                        "e54777476fe04987507e1d87347e863b66644502"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_div; split; lra.",
                        "VernacExtend",
                        "a1d2b2925af1e1c6f6721c33242e0feeaa312867"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Machin_2_3",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "assert (utility : 0 < PI/2) by (apply PI2_RGT_0).",
                        "VernacExtend",
                        "012ff5348f55f5780c1e9bd703577fbd75fb7139"
                    ]
                },
                {
                    "command": [
                        "rewrite <- atan_1.",
                        "VernacExtend",
                        "c21d0fc63b06dae7d37c055e7bae77e7b7689816"
                    ]
                },
                {
                    "command": [
                        "rewrite (atan_sub_correct 1 (/2)).",
                        "VernacExtend",
                        "5c04b3f7e58bfbe7482cc22a25347717fb1deeb6"
                    ]
                },
                {
                    "command": [
                        "apply f_equal, f_equal; unfold atan_sub; field.",
                        "VernacExtend",
                        "866a12b5f54a5646cc8cb0b5793f3fd3f133c3a3"
                    ]
                },
                {
                    "command": [
                        "apply Rgt_not_eq; lra.",
                        "VernacExtend",
                        "ebc1844d8be5a9731d14a39fa51697f320e32aca"
                    ]
                },
                {
                    "command": [
                        "apply tech; try split; try lra.",
                        "VernacExtend",
                        "56ef3b4db3721d5a8688e07d33d736637ac24183"
                    ]
                },
                {
                    "command": [
                        "apply atan_bound.",
                        "VernacExtend",
                        "c433ab7ce245b5a86c9461910091f3eedbb99ac1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Machin_4_5_239",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "rewrite <- atan_1.",
                        "VernacExtend",
                        "c21d0fc63b06dae7d37c055e7bae77e7b7689816"
                    ]
                },
                {
                    "command": [
                        "rewrite (atan_sub_correct 1 (/5)); [ | apply Rgt_not_eq; lra | apply tech; try split; lra | apply atan_bound ].",
                        "VernacExtend",
                        "635684b01ffdb8d32f541190a8b96fcb5b22fc0b"
                    ]
                },
                {
                    "command": [
                        "replace (4 * atan (/5) - atan (/239)) with (atan (/5) + (atan (/5) + (atan (/5) + (atan (/5) + - atan (/239))))) by ring.",
                        "VernacExtend",
                        "061c897a73cad916621052a22d2bc75fa7d283fb"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "replace (atan_sub 1 (/5)) with (2/3) by (unfold atan_sub; field).",
                        "VernacExtend",
                        "1d2f7cd6782673f49090881d1a54004912eaeefd"
                    ]
                },
                {
                    "command": [
                        "rewrite (atan_sub_correct (2/3) (/5)); [apply f_equal | apply Rgt_not_eq; lra | apply tech; try split; lra | apply atan_bound ].",
                        "VernacExtend",
                        "59a201f5d35ee4e18fdec1236410c51135519155"
                    ]
                },
                {
                    "command": [
                        "replace (atan_sub (2/3) (/5)) with (7/17) by (unfold atan_sub; field).",
                        "VernacExtend",
                        "060bcfc5a9fc3f8d368873042538aaaf05f16308"
                    ]
                },
                {
                    "command": [
                        "rewrite (atan_sub_correct (7/17) (/5)); [apply f_equal | apply Rgt_not_eq; lra | apply tech; try split; lra | apply atan_bound ].",
                        "VernacExtend",
                        "37dc962d5b5c4f51d5a9ef86f63497c636090f42"
                    ]
                },
                {
                    "command": [
                        "replace (atan_sub (7/17) (/5)) with (9/46) by (unfold atan_sub; field).",
                        "VernacExtend",
                        "cd108e01ace154c85f727d9a97922afda5390dad"
                    ]
                },
                {
                    "command": [
                        "rewrite (atan_sub_correct (9/46) (/5)); [apply f_equal | apply Rgt_not_eq; lra | apply tech; try split; lra | apply atan_bound ].",
                        "VernacExtend",
                        "f9ea4ccd166f85defff54ac4551bf7e90c0666de"
                    ]
                },
                {
                    "command": [
                        "rewrite <- atan_opp; apply f_equal.",
                        "VernacExtend",
                        "f3f78f8a41a779b6bb6589e3d62c7549c1b21536"
                    ]
                },
                {
                    "command": [
                        "unfold atan_sub; field.",
                        "VernacExtend",
                        "4164b015880ff0f27c152601cc7866f21b9d4831"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Machin_2_3_7",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "rewrite <- atan_1.",
                        "VernacExtend",
                        "c21d0fc63b06dae7d37c055e7bae77e7b7689816"
                    ]
                },
                {
                    "command": [
                        "rewrite (atan_sub_correct 1 (/3)); [ | apply Rgt_not_eq; lra | apply tech; try split; lra | apply atan_bound ].",
                        "VernacExtend",
                        "6e2d4d7c0262f09d189d64e9fde07ffec5ce5acc"
                    ]
                },
                {
                    "command": [
                        "replace (2 * atan (/3) + atan (/7)) with (atan (/3) + (atan (/3) + atan (/7))) by ring.",
                        "VernacExtend",
                        "47a1c618fbbf93df5aea716da64ff6d066cc1520"
                    ]
                },
                {
                    "command": [
                        "apply f_equal.",
                        "VernacExtend",
                        "ba856cbef3c8e84dcef77c91c8515b497874875b"
                    ]
                },
                {
                    "command": [
                        "replace (atan_sub 1 (/3)) with (/2) by (unfold atan_sub; field).",
                        "VernacExtend",
                        "16f2f18a200826276a92895da452d526efdb3716"
                    ]
                },
                {
                    "command": [
                        "rewrite (atan_sub_correct (/2) (/3)); [apply f_equal | apply Rgt_not_eq; lra | apply tech; try split; lra | apply atan_bound ].",
                        "VernacExtend",
                        "8b046d87224241c4254968544e3d0e71241bcc11"
                    ]
                },
                {
                    "command": [
                        "apply f_equal; unfold atan_sub; field.",
                        "VernacExtend",
                        "0dffb49075f53dce41289f49a9240865bd274da8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "PI_2_3_7_ineq",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "assert (dec3 : 0 <= /3 <= 1) by (split; lra).",
                        "VernacExtend",
                        "fc9a6c4a686a9a861137405114548b3084e851b4"
                    ]
                },
                {
                    "command": [
                        "assert (dec7 : 0 <= /7 <= 1) by (split; lra).",
                        "VernacExtend",
                        "3218fea2917ed680b0d27b81967b8fa96f68da3b"
                    ]
                },
                {
                    "command": [
                        "assert (decr : Un_decreasing PI_2_3_7_tg).",
                        "VernacExtend",
                        "8839577ce0232066e8df61ba54d7167a97652f67"
                    ]
                },
                {
                    "command": [
                        "apply Ratan_seq_decreasing in dec3.",
                        "VernacExtend",
                        "74326642b9fa781285f09e02a6c079d8bbdad6d1"
                    ]
                },
                {
                    "command": [
                        "apply Ratan_seq_decreasing in dec7.",
                        "VernacExtend",
                        "c9843eb1656ae6d0b0c9ba91672cb9a8ed6b15c0"
                    ]
                },
                {
                    "command": [
                        "intros n; apply Rplus_le_compat.",
                        "VernacExtend",
                        "6ad947d594937290c24e8db289a7cf1dd8b81164"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l; [ lra | exact (dec3 n)].",
                        "VernacExtend",
                        "302cb9c25846b862d0290a76529ba5fb6ec9ed26"
                    ]
                },
                {
                    "command": [
                        "exact (dec7 n).",
                        "VernacExtend",
                        "d7977af08011a4ee60cedfa1efd95a03ee54e4dc"
                    ]
                },
                {
                    "command": [
                        "assert (cv : Un_cv PI_2_3_7_tg 0).",
                        "VernacExtend",
                        "1a6711de37463ee8b4af7fe611bc5709a6e3a546"
                    ]
                },
                {
                    "command": [
                        "apply Ratan_seq_converging in dec3.",
                        "VernacExtend",
                        "46d35d78317b0ab6008b2f108df3a0ef81270212"
                    ]
                },
                {
                    "command": [
                        "apply Ratan_seq_converging in dec7.",
                        "VernacExtend",
                        "18dcf3b43966ae93edf671932606ce6424a3792f"
                    ]
                },
                {
                    "command": [
                        "intros eps ep.",
                        "VernacExtend",
                        "af89a53f4fae9477ea82d9a2bc893f64250db095"
                    ]
                },
                {
                    "command": [
                        "assert (ep' : 0 < eps /3) by lra.",
                        "VernacExtend",
                        "f0d63e18f7b25932a8663419c616c6730281af93"
                    ]
                },
                {
                    "command": [
                        "destruct (dec3 _ ep') as [N1 Pn1]; destruct (dec7 _ ep') as [N2 Pn2].",
                        "VernacExtend",
                        "5b0363145af0512f0c9191bed7e60d69d70ad064"
                    ]
                },
                {
                    "command": [
                        "exists (N1 + N2)%nat; intros n Nn.",
                        "VernacExtend",
                        "c06069d378d3bffae9edbfa30244fc3f481a9ddb"
                    ]
                },
                {
                    "command": [
                        "unfold PI_2_3_7_tg.",
                        "VernacExtend",
                        "e511d94f631609875df93e786ad3b7089e2adb47"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rplus_0_l 0).",
                        "VernacExtend",
                        "b4f6e30bb97556b68566d133279e496054a7a01a"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (1 := R_dist_plus (2 * Ratan_seq (/3) n) 0 (Ratan_seq (/7) n) 0).",
                        "VernacExtend",
                        "2c806996aaf2207b85b2d41cde748bd87112d04e"
                    ]
                },
                {
                    "command": [
                        "replace eps with (2 * eps/3 + eps/3) by field.",
                        "VernacExtend",
                        "951093453febacf3912b44b86af850736a953d00"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat.",
                        "VernacExtend",
                        "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist, Rminus, Rdiv.",
                        "VernacExtend",
                        "d18be0311ac73baf3ad2d588cca77fd6b4bdbe00"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_0_r 2), <- Ropp_mult_distr_r_reverse.",
                        "VernacExtend",
                        "c571ce63202824ef47dd58d0fcd2c29b419e840f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_plus_distr_l, Rabs_mult, (Rabs_pos_eq 2);[|lra].",
                        "VernacExtend",
                        "051c0affb465b6f83bc11a9fad0c4340a3ba039c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc; apply Rmult_lt_compat_l;[lra | ].",
                        "VernacExtend",
                        "0e90fe27b4e4c7e3c9d0a72c7769992826e1be7b"
                    ]
                },
                {
                    "command": [
                        "apply (Pn1 n); omega.",
                        "VernacExtend",
                        "90df3d18dedeb1f5b7e5690866df9a3ea1c1e3d7"
                    ]
                },
                {
                    "command": [
                        "apply (Pn2 n); omega.",
                        "VernacExtend",
                        "16e7a0eba020bc7c06c0d6645db3224aa1e9e6e3"
                    ]
                },
                {
                    "command": [
                        "rewrite Machin_2_3_7.",
                        "VernacExtend",
                        "112f0cbd01c35afd50cdaad149295c33d780ff6c"
                    ]
                },
                {
                    "command": [
                        "rewrite !atan_eq_ps_atan; try (split; lra).",
                        "VernacExtend",
                        "1cd9bc0076f705312aeec89a5f5e35a7c83ec1cb"
                    ]
                },
                {
                    "command": [
                        "unfold ps_atan; destruct (in_int (/3)); destruct (in_int (/7)); try match goal with id : ~ _ |- _ => case id; split; lra end.",
                        "VernacExtend",
                        "cd2f465af36bc35dbb08b9a0381f319337c9abfe"
                    ]
                },
                {
                    "command": [
                        "destruct (ps_atan_exists_1 (/3)) as [v3 Pv3].",
                        "VernacExtend",
                        "e55ba0402c92ad2e3ae56d57031624c2c1358d3c"
                    ]
                },
                {
                    "command": [
                        "destruct (ps_atan_exists_1 (/7)) as [v7 Pv7].",
                        "VernacExtend",
                        "5ed2b047bd9211311c10a9d6e1585eb1d3b7b1fe"
                    ]
                },
                {
                    "command": [
                        "assert (main : Un_cv (sum_f_R0 (tg_alt PI_2_3_7_tg)) (2 * v3 + v7)).",
                        "VernacExtend",
                        "df02e5f7c27b10daeb4ea5c3a6a72cc25f3a4c13"
                    ]
                },
                {
                    "command": [
                        "assert (main :Un_cv (fun n => 2 * sum_f_R0 (tg_alt (Ratan_seq (/3))) n + sum_f_R0 (tg_alt (Ratan_seq (/7))) n) (2 * v3 + v7)).",
                        "VernacExtend",
                        "e4c2ce6d9963bf420f484dc12f8b9808af082203"
                    ]
                },
                {
                    "command": [
                        "apply CV_plus;[ | assumption].",
                        "VernacExtend",
                        "cb517fb667de86e6e5b8b6f5ce56d27597dbd2fa"
                    ]
                },
                {
                    "command": [
                        "apply CV_mult;[ | assumption].",
                        "VernacExtend",
                        "7f65904717bc65729979ce6f564e0453d1e58d1f"
                    ]
                },
                {
                    "command": [
                        "exists 0%nat; intros; rewrite R_dist_eq; assumption.",
                        "VernacExtend",
                        "700d6586a8118e541daef8fdae7086a7e3ef23d1"
                    ]
                },
                {
                    "command": [
                        "apply Un_cv_ext with (2 := main).",
                        "VernacExtend",
                        "8a195ccbdd9ff91d1e352afd8d37d1df425fd230"
                    ]
                },
                {
                    "command": [
                        "intros n; rewrite scal_sum, <- plus_sum; apply sum_eq; intros.",
                        "VernacExtend",
                        "aef47c96ceb176088c62896d6579bf3b8b010a41"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm; unfold PI_2_3_7_tg, tg_alt; field.",
                        "VernacExtend",
                        "871fd8438cb5cca51091c1184226872481624afa"
                    ]
                },
                {
                    "command": [
                        "intros N; apply (alternated_series_ineq _ _ _ decr cv main).",
                        "VernacExtend",
                        "5c57735b520fcb7e0aff410d592f822c1ff23284"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}