{
    "filename": "theories/Reals/MVT.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Rbase.",
            "VernacRequire",
            "c0a8d81b170d4ed8309a8632a3cac35f6cba016a"
        ],
        [
            "Require Import Rfunctions.",
            "VernacRequire",
            "e0ba64ca9fd07e0fc91c59b7bf007fb29a662a86"
        ],
        [
            "Require Import Ranalysis1.",
            "VernacRequire",
            "b7df6cdb101f6571d1192419ca4168ab43a628dd"
        ],
        [
            "Require Import Rtopology.",
            "VernacRequire",
            "8512cc39b6c3782a567c91c99bdb01ec64d21c41"
        ],
        [
            "Local Open Scope R_scope.",
            "VernacOpenCloseScope",
            "b005c72bb3303e031b42be04be04c87c005faa38"
        ],
        [
            "Theorem MVT : forall (f g:R -> R) (a b:R) (pr1:forall c:R, a < c < b -> derivable_pt f c) (pr2:forall c:R, a < c < b -> derivable_pt g c), a < b -> (forall c:R, a <= c <= b -> continuity_pt f c) -> (forall c:R, a <= c <= b -> continuity_pt g c) -> exists c : R, (exists P : a < c < b, (g b - g a) * derive_pt f c (pr1 c P) = (f b - f a) * derive_pt g c (pr2 c P)).",
            "VernacStartTheoremProof",
            "69202a2cee0392927daa8e49db2ee76904c770a1"
        ],
        [
            "intros; assert (H2 := Rlt_le _ _ H).",
            "VernacExtend",
            "44a9f337f0cb14663d7f1c9343d1d3ed71368bd6"
        ],
        [
            "set (h := fun y:R => (g b - g a) * f y - (f b - f a) * g y).",
            "VernacExtend",
            "02c020b7e599dbff8ac5c106f852d10130e7056a"
        ],
        [
            "cut (forall c:R, a < c < b -> derivable_pt h c).",
            "VernacExtend",
            "3c0be65f10e30f873c01b61a52de936aaf52a159"
        ],
        [
            "intro X; cut (forall c:R, a <= c <= b -> continuity_pt h c).",
            "VernacExtend",
            "f1a13e72d5619c3964607f5f4de1d426663aa328"
        ],
        [
            "intro; assert (H4 := continuity_ab_maj h a b H2 H3).",
            "VernacExtend",
            "77cd76f0605cb9f566bd4a5815576e881efdae57"
        ],
        [
            "assert (H5 := continuity_ab_min h a b H2 H3).",
            "VernacExtend",
            "df10284a5499bd1c3294267a190eb4d3f37a530c"
        ],
        [
            "elim H4; intros Mx H6.",
            "VernacExtend",
            "8842aebd6b31fafa7de75b668ebf03c0c1645d10"
        ],
        [
            "elim H5; intros mx H7.",
            "VernacExtend",
            "39ff3143981c368c06fd585e963ae8b599b7b0d7"
        ],
        [
            "cut (h a = h b).",
            "VernacExtend",
            "93f210d8f92b31830eeec4359b39ab85cf9b3e3e"
        ],
        [
            "intro; set (M := h Mx); set (m := h mx).",
            "VernacExtend",
            "65e0044192084d03830342c1ddabdd0e4252b0ae"
        ],
        [
            "cut (forall (c:R) (P:a < c < b), derive_pt h c (X c P) = (g b - g a) * derive_pt f c (pr1 c P) - (f b - f a) * derive_pt g c (pr2 c P)).",
            "VernacExtend",
            "503afaede0b7aeec3a4e2f1a38b78c1220250e04"
        ],
        [
            "intro; case (Req_dec (h a) M); intro.",
            "VernacExtend",
            "ed4897d444ca6020fb0da8b62e092420419c6e27"
        ],
        [
            "case (Req_dec (h a) m); intro.",
            "VernacExtend",
            "7f738fba6f1573a24bd5e38d319c49e8099aca7b"
        ],
        [
            "cut (forall c:R, a <= c <= b -> h c = M).",
            "VernacExtend",
            "35727fb6a3e171b2cb65cc74b53d66fbbbaf7b8c"
        ],
        [
            "intro; cut (a < (a + b) / 2 < b).",
            "VernacExtend",
            "05675c94cc53318abc5b0d2927496048fbc87c9e"
        ],
        [
            "intro; exists ((a + b) / 2).",
            "VernacExtend",
            "aeaa52daed173a53ad9c2b0a5088128f7b04070e"
        ],
        [
            "exists H13.",
            "VernacExtend",
            "1c29bde8f789a503be69d0989d4301be4ac21a6a"
        ],
        [
            "apply Rminus_diag_uniq; rewrite <- H9; apply deriv_constant2 with a b.",
            "VernacExtend",
            "0eae19bc06a8ab4df181991cd1f289408469404d"
        ],
        [
            "elim H13; intros; assumption.",
            "VernacExtend",
            "c2834a1647253ee351d960b102c577f0693821cd"
        ],
        [
            "elim H13; intros; assumption.",
            "VernacExtend",
            "c2834a1647253ee351d960b102c577f0693821cd"
        ],
        [
            "intros; rewrite (H12 ((a + b) / 2)).",
            "VernacExtend",
            "763a877973774bbd712b1f451b3c8f9f3b15efc9"
        ],
        [
            "apply H12; split; left; assumption.",
            "VernacExtend",
            "ad210af8ec38d4c77f1f253fefdcc0e84a429fd1"
        ],
        [
            "elim H13; intros; split; left; assumption.",
            "VernacExtend",
            "d3557e2ef273fc4f15ea91c16ed6bc877808d62c"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply Rmult_lt_reg_l with 2.",
            "VernacExtend",
            "6631f3c2df4cb853b13a1c15d269a9146336e287"
        ],
        [
            "prove_sup0.",
            "VernacExtend",
            "9681c23836ca7f82fee12028ab3f984ae6ec2935"
        ],
        [
            "unfold Rdiv; rewrite <- (Rmult_comm (/ 2)); rewrite <- Rmult_assoc; rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "bb110d8377e3622749fa8b2b4653e0680d3ab799"
        ],
        [
            "rewrite Rmult_1_l; rewrite double; apply Rplus_lt_compat_l; apply H.",
            "VernacExtend",
            "b11f65d2f730f998397d33850ff6d3503de06e8c"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "apply Rmult_lt_reg_l with 2.",
            "VernacExtend",
            "6631f3c2df4cb853b13a1c15d269a9146336e287"
        ],
        [
            "prove_sup0.",
            "VernacExtend",
            "9681c23836ca7f82fee12028ab3f984ae6ec2935"
        ],
        [
            "unfold Rdiv; rewrite <- (Rmult_comm (/ 2)); rewrite <- Rmult_assoc; rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "bb110d8377e3622749fa8b2b4653e0680d3ab799"
        ],
        [
            "rewrite Rmult_1_l; rewrite Rplus_comm; rewrite double; apply Rplus_lt_compat_l; apply H.",
            "VernacExtend",
            "b2f357469748835c283a1b738f0f78e68d7534e3"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "intros; elim H6; intros H13 _.",
            "VernacExtend",
            "bf8ffcb32ccdd908bc5ad0e3417f9895cb14d00b"
        ],
        [
            "elim H7; intros H14 _.",
            "VernacExtend",
            "e9a0310735cdd06d59c24d2f187cef63f9b64b4f"
        ],
        [
            "apply Rle_antisym.",
            "VernacExtend",
            "8e9431fb6db6f151160007e68131f4f5cb1c7968"
        ],
        [
            "apply H13; apply H12.",
            "VernacExtend",
            "4578b01ff51ccb37f72e775170fc9f4133d2787e"
        ],
        [
            "rewrite H10 in H11; rewrite H11; apply H14; apply H12.",
            "VernacExtend",
            "7a8e665add2e1f69a13824ed282288a30fe28237"
        ],
        [
            "cut (a < mx < b).",
            "VernacExtend",
            "c7bb058e189d420f762b8f15692620c9d7944430"
        ],
        [
            "intro; exists mx.",
            "VernacExtend",
            "61ae5b0646520db980e2837a6e5504351c5294ab"
        ],
        [
            "exists H12.",
            "VernacExtend",
            "4c9ee97217c5fce23221665f1b8e7b31b105193d"
        ],
        [
            "apply Rminus_diag_uniq; rewrite <- H9; apply deriv_minimum with a b.",
            "VernacExtend",
            "c4cee2ed8b562492e11220843b132b79570cad45"
        ],
        [
            "elim H12; intros; assumption.",
            "VernacExtend",
            "64214aa4f2998658a38bee071de5006227dc21f0"
        ],
        [
            "elim H12; intros; assumption.",
            "VernacExtend",
            "64214aa4f2998658a38bee071de5006227dc21f0"
        ],
        [
            "intros; elim H7; intros.",
            "VernacExtend",
            "07f53c01f1c43349643a393bc2890da7cad37e2a"
        ],
        [
            "apply H15; split; left; assumption.",
            "VernacExtend",
            "4b936cc669fb9dddbe42e15f27b05ed8c072c591"
        ],
        [
            "elim H7; intros _ H12; elim H12; intros; split.",
            "VernacExtend",
            "fd2eeb97676d3222e3496095c5e05de4d2be9238"
        ],
        [
            "inversion H13.",
            "VernacExtend",
            "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "rewrite H15 in H11; elim H11; reflexivity.",
            "VernacExtend",
            "2673eea613346e6e472b43a9cf052b193c4c18a9"
        ],
        [
            "inversion H14.",
            "VernacExtend",
            "158c311bb69c3e5a75670dfcbe8f342a533b833e"
        ],
        [
            "apply H15.",
            "VernacExtend",
            "b7865067db5259eafb12346a082417ff349ca746"
        ],
        [
            "rewrite H8 in H11; rewrite <- H15 in H11; elim H11; reflexivity.",
            "VernacExtend",
            "8755bbf90094e216f3852cc64cc8ee13fe78a313"
        ],
        [
            "cut (a < Mx < b).",
            "VernacExtend",
            "780ec0dec1f605840c08a9afa58b99d1517b44f0"
        ],
        [
            "intro; exists Mx.",
            "VernacExtend",
            "f30d7187f94c600f81a56f14afe5b999005b9632"
        ],
        [
            "exists H11.",
            "VernacExtend",
            "b82b2f84d1b7acbca933c09f5da390b6293c3aee"
        ],
        [
            "apply Rminus_diag_uniq; rewrite <- H9; apply deriv_maximum with a b.",
            "VernacExtend",
            "dc0ca0c4e81838af18c1b167aa325f28ee811fd5"
        ],
        [
            "elim H11; intros; assumption.",
            "VernacExtend",
            "4603b983b724d6149694589a343a246246660a37"
        ],
        [
            "elim H11; intros; assumption.",
            "VernacExtend",
            "4603b983b724d6149694589a343a246246660a37"
        ],
        [
            "intros; elim H6; intros; apply H14.",
            "VernacExtend",
            "cb7e6b2faf10cd42f4561842c18a243b57cfd2f6"
        ],
        [
            "split; left; assumption.",
            "VernacExtend",
            "fdfa29011e9dae8a9167d139e5179b516d7a668c"
        ],
        [
            "elim H6; intros _ H11; elim H11; intros; split.",
            "VernacExtend",
            "22674be16d7c3dee515bad9e2e60ccaa01d1cdec"
        ],
        [
            "inversion H12.",
            "VernacExtend",
            "d5ec1d67ecbf066a6575bda368738e1ad0dbbc60"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "rewrite H14 in H10; elim H10; reflexivity.",
            "VernacExtend",
            "5b7db56fa812110601f6c081917c24c1e64cb1e7"
        ],
        [
            "inversion H13.",
            "VernacExtend",
            "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
        ],
        [
            "apply H14.",
            "VernacExtend",
            "315c064431a47ec3c8cc41e58a75c8eb749330ef"
        ],
        [
            "rewrite H8 in H10; rewrite <- H14 in H10; elim H10; reflexivity.",
            "VernacExtend",
            "e39d76a9cdefe1899b70b0d234ccaec13a5a4d42"
        ],
        [
            "intros; unfold h; replace (derive_pt (fun y:R => (g b - g a) * f y - (f b - f a) * g y) c (X c P)) with (derive_pt ((fct_cte (g b - g a) * f)%F - (fct_cte (f b - f a) * g)%F) c (derivable_pt_minus _ _ _ (derivable_pt_mult _ _ _ (derivable_pt_const (g b - g a) c) (pr1 c P)) (derivable_pt_mult _ _ _ (derivable_pt_const (f b - f a) c) (pr2 c P)))); [ idtac | apply pr_nu ].",
            "VernacExtend",
            "dcb4b416590757522fc2b06933c0f6f3557d8bad"
        ],
        [
            "rewrite derive_pt_minus; do 2 rewrite derive_pt_mult; do 2 rewrite derive_pt_const; do 2 rewrite Rmult_0_l; do 2 rewrite Rplus_0_l; reflexivity.",
            "VernacExtend",
            "5ba040c8725110d296174aa0c6cb310d05639e33"
        ],
        [
            "unfold h; ring.",
            "VernacExtend",
            "8bb23f7a75893495e684cba456e7ce0601caab68"
        ],
        [
            "intros; unfold h; change (continuity_pt ((fct_cte (g b - g a) * f)%F - (fct_cte (f b - f a) * g)%F) c).",
            "VernacExtend",
            "fceedf6a9b2df599763ecfd254b03077953aa93a"
        ],
        [
            "apply continuity_pt_minus; apply continuity_pt_mult.",
            "VernacExtend",
            "450080dac2ef8140d1459b8a0adc5cb47eb1dabd"
        ],
        [
            "apply derivable_continuous_pt; apply derivable_const.",
            "VernacExtend",
            "86cbf596f55d94a17141e17dc3b846e5c55bfcff"
        ],
        [
            "apply H0; apply H3.",
            "VernacExtend",
            "abe951c7aa8e96d9dbccc0ba51c55ff74f241a54"
        ],
        [
            "apply derivable_continuous_pt; apply derivable_const.",
            "VernacExtend",
            "86cbf596f55d94a17141e17dc3b846e5c55bfcff"
        ],
        [
            "apply H1; apply H3.",
            "VernacExtend",
            "df5d98df0699305aabdb74fd18378d787e775975"
        ],
        [
            "intros; change (derivable_pt ((fct_cte (g b - g a) * f)%F - (fct_cte (f b - f a) * g)%F) c).",
            "VernacExtend",
            "b21dd4f62c576c2e85e904c292d241a2d4e9a383"
        ],
        [
            "apply derivable_pt_minus; apply derivable_pt_mult.",
            "VernacExtend",
            "265904526bb681e22dc5faec6782235131c6013b"
        ],
        [
            "apply derivable_pt_const.",
            "VernacExtend",
            "5f79fec976d4bf9b10f4ae3f2bf89e7653fa9cab"
        ],
        [
            "apply (pr1 _ H3).",
            "VernacExtend",
            "b9abc1b8e0162587ac93b881250ea34721f92f44"
        ],
        [
            "apply derivable_pt_const.",
            "VernacExtend",
            "5f79fec976d4bf9b10f4ae3f2bf89e7653fa9cab"
        ],
        [
            "apply (pr2 _ H3).",
            "VernacExtend",
            "26f04d47dad61eaf9549c911f3a625a81d158b2a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MVT_cor1 : forall (f:R -> R) (a b:R) (pr:derivable f), a < b -> exists c : R, f b - f a = derive_pt f c (pr c) * (b - a) /\\ a < c < b.",
            "VernacStartTheoremProof",
            "70d25ac8cd222d98ce78bc42f675b7bdaafc13ae"
        ],
        [
            "intros f a b pr H; cut (forall c:R, a < c < b -> derivable_pt f c); [ intro X | intros; apply pr ].",
            "VernacExtend",
            "eee6989e8c8215149031f98717798c11397854c9"
        ],
        [
            "cut (forall c:R, a < c < b -> derivable_pt id c); [ intro X0 | intros; apply derivable_pt_id ].",
            "VernacExtend",
            "9c22c2740912a18fb071a277db75bfe1e5a21f92"
        ],
        [
            "cut (forall c:R, a <= c <= b -> continuity_pt f c); [ intro | intros; apply derivable_continuous_pt; apply pr ].",
            "VernacExtend",
            "4ef2f1ba31ae46d80a09d97cb6eee68edb0fff1f"
        ],
        [
            "cut (forall c:R, a <= c <= b -> continuity_pt id c); [ intro | intros; apply derivable_continuous_pt; apply derivable_id ].",
            "VernacExtend",
            "35af34957efced9e6cca17b77591ae4c72320a10"
        ],
        [
            "assert (H2 := MVT f id a b X X0 H H0 H1).",
            "VernacExtend",
            "e70a6bfe6b7c428739d8e2afb67428c4b776c461"
        ],
        [
            "destruct H2 as (c & P & H4).",
            "VernacExtend",
            "8678abd5001af5a5fecd7c81e50dd6ee014f69c9"
        ],
        [
            "exists c; split.",
            "VernacExtend",
            "3e1e8b4f017ed8d6e2ffcb1f375ef9385f5558f1"
        ],
        [
            "cut (derive_pt id c (X0 c P) = derive_pt id c (derivable_pt_id c)); [ intro H5 | apply pr_nu ].",
            "VernacExtend",
            "3602b1276f2b35d5fb2d28dc106669e93754f4ce"
        ],
        [
            "rewrite H5 in H4; rewrite (derive_pt_id c) in H4; rewrite Rmult_1_r in H4; rewrite <- H4; replace (derive_pt f c (X c P)) with (derive_pt f c (pr c)); [ idtac | apply pr_nu ]; apply Rmult_comm.",
            "VernacExtend",
            "52e80a5b3663ce0e086bea17c53b1557477cccc8"
        ],
        [
            "apply P.",
            "VernacExtend",
            "77ec7a77c147bdc26d1c81d5a9f0d33da7fe6a48"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem MVT_cor2 : forall (f f':R -> R) (a b:R), a < b -> (forall c:R, a <= c <= b -> derivable_pt_lim f c (f' c)) -> exists c : R, f b - f a = f' c * (b - a) /\\ a < c < b.",
            "VernacStartTheoremProof",
            "730878b55c9ffa2be2614a4f8e24a6f46ce0021d"
        ],
        [
            "intros f f' a b H H0; cut (forall c:R, a <= c <= b -> derivable_pt f c).",
            "VernacExtend",
            "2eec6727541cb2b939bd37ae277c5bc4a7dd108e"
        ],
        [
            "intro X; cut (forall c:R, a < c < b -> derivable_pt f c).",
            "VernacExtend",
            "bc7251123a88f7eca28ec40cacae63f74674a005"
        ],
        [
            "intro X0; cut (forall c:R, a <= c <= b -> continuity_pt f c).",
            "VernacExtend",
            "0520821a5f62581f6150eb3fe286d0033b46472a"
        ],
        [
            "intro; cut (forall c:R, a <= c <= b -> derivable_pt id c).",
            "VernacExtend",
            "895168ecc34f224369b99358335812fe16cd45fd"
        ],
        [
            "intro X1; cut (forall c:R, a < c < b -> derivable_pt id c).",
            "VernacExtend",
            "a736c89297e167b2b494cb34f59f2361f4ceab5e"
        ],
        [
            "intro X2; cut (forall c:R, a <= c <= b -> continuity_pt id c).",
            "VernacExtend",
            "c01d8494c5e3590425474923cee39bdaf816b91c"
        ],
        [
            "intro; elim (MVT f id a b X0 X2 H H1 H2); intros x (P,H3).",
            "VernacExtend",
            "d740fa174e6395b3e38045b461afffefeb694458"
        ],
        [
            "exists x; split.",
            "VernacExtend",
            "f9266ddab0754060cc1803dfa28547707d7da7dd"
        ],
        [
            "cut (derive_pt id x (X2 x P) = 1).",
            "VernacExtend",
            "b104cb26cd7057ce9d06e674ef449b28437215d2"
        ],
        [
            "cut (derive_pt f x (X0 x P) = f' x).",
            "VernacExtend",
            "5bdc82c74d63d6ec7d60d21ddd9fed0239cb05e6"
        ],
        [
            "intros; rewrite H4 in H3; rewrite H5 in H3; unfold id in H3; rewrite Rmult_1_r in H3; rewrite Rmult_comm; symmetry ; assumption.",
            "VernacExtend",
            "e0047ca2da3265a3bab55b7ba74d75c4dc93b986"
        ],
        [
            "apply derive_pt_eq_0; apply H0; elim P; intros; split; left; assumption.",
            "VernacExtend",
            "c287b6845a348d8890a864bcecc035043ff6ce2c"
        ],
        [
            "apply derive_pt_eq_0; apply derivable_pt_lim_id.",
            "VernacExtend",
            "e766ffecfb37180360d09c54b330cffeac6bb2a4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros; apply derivable_continuous_pt; apply X1; assumption.",
            "VernacExtend",
            "0126e0ec063a5d1e02bc82181690dd582ba9b211"
        ],
        [
            "intros; apply derivable_pt_id.",
            "VernacExtend",
            "938ad5252ca2e0b1fd31017c21bbeb8e37bb4503"
        ],
        [
            "intros; apply derivable_pt_id.",
            "VernacExtend",
            "938ad5252ca2e0b1fd31017c21bbeb8e37bb4503"
        ],
        [
            "intros; apply derivable_continuous_pt; apply X; assumption.",
            "VernacExtend",
            "7eceea50e72691ced4c133ab4bf8336e5c6362e0"
        ],
        [
            "intros; elim H1; intros; apply X; split; left; assumption.",
            "VernacExtend",
            "30d4952f7c950f3853e480cd3695b41336e293e0"
        ],
        [
            "intros; unfold derivable_pt; exists (f' c); apply H0; apply H1.",
            "VernacExtend",
            "a6797a61a44ac93ce4cd5aaee0464763e885facc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MVT_cor3 : forall (f f':R -> R) (a b:R), a < b -> (forall x:R, a <= x -> x <= b -> derivable_pt_lim f x (f' x)) -> exists c : R, a <= c /\\ c <= b /\\ f b = f a + f' c * (b - a).",
            "VernacStartTheoremProof",
            "4d8dfa7117d45c1404f8cf63bc4d5650b149ad19"
        ],
        [
            "intros f f' a b H H0; assert (H1 : exists c : R, f b - f a = f' c * (b - a) /\\ a < c < b); [ apply MVT_cor2; [ apply H | intros; elim H1; intros; apply (H0 _ H2 H3) ] | elim H1; intros; exists x; elim H2; intros; elim H4; intros; split; [ left; assumption | split; [ left; assumption | rewrite <- H3; ring ] ] ].",
            "VernacExtend",
            "0942efbce55ab974d9eb17f5f9e7708bd7d3e729"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rolle : forall (f:R -> R) (a b:R) (pr:forall x:R, a < x < b -> derivable_pt f x), (forall x:R, a <= x <= b -> continuity_pt f x) -> a < b -> f a = f b -> exists c : R, (exists P : a < c < b, derive_pt f c (pr c P) = 0).",
            "VernacStartTheoremProof",
            "f3913657b532c057460394a7101b5d8aede2bef2"
        ],
        [
            "intros; assert (H2 : forall x:R, a < x < b -> derivable_pt id x).",
            "VernacExtend",
            "ee2517527b7129b16baa1e36120a5802fe90b629"
        ],
        [
            "intros; apply derivable_pt_id.",
            "VernacExtend",
            "938ad5252ca2e0b1fd31017c21bbeb8e37bb4503"
        ],
        [
            "assert (H3 := MVT f id a b pr H2 H0 H); assert (H4 : forall x:R, a <= x <= b -> continuity_pt id x).",
            "VernacExtend",
            "01f0c6347a9291acd27279e51096cb934c6e24f4"
        ],
        [
            "intros; apply derivable_continuous; apply derivable_id.",
            "VernacExtend",
            "6128d5d68bbd06bbad037e48530487a799f4a767"
        ],
        [
            "destruct (H3 H4) as (c & P & H6).",
            "VernacExtend",
            "c622b7a63093e2ebcf98a609f27aad23b9d43339"
        ],
        [
            "exists c; exists P; rewrite H1 in H6.",
            "VernacExtend",
            "3271cba293b7ae7b687a3a6ccb22edb177e6ee30"
        ],
        [
            "unfold id in H6; unfold Rminus in H6; rewrite Rplus_opp_r in H6.",
            "VernacExtend",
            "b6a8adf608315c7d12c6d40496b39c043cc6f77d"
        ],
        [
            "rewrite Rmult_0_l in H6; apply Rmult_eq_reg_l with (b - a); [ rewrite Rmult_0_r; apply H6 | apply Rminus_eq_contra; red; intro H7; rewrite H7 in H0; elim (Rlt_irrefl _ H0) ].",
            "VernacExtend",
            "f84aa5ef39175532e1ecdf810ec61450189892d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nonneg_derivative_1 : forall (f:R -> R) (pr:derivable f), (forall x:R, 0 <= derive_pt f x (pr x)) -> increasing f.",
            "VernacStartTheoremProof",
            "e1f36ed2accd3f5e6a3103060b1365b6e48aab10"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold increasing.",
            "VernacExtend",
            "9b37ec9d80b1868673e2f5b18ab08c8701fd0590"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (total_order_T x y) as [[H1| ->]|H1].",
            "VernacExtend",
            "95c351a3c34d1384cf190bfe7aa781881a8c10a2"
        ],
        [
            "apply Rplus_le_reg_l with (- f x).",
            "VernacExtend",
            "b8e98b632b7c461e8cc3aa31596844af52dece6e"
        ],
        [
            "rewrite Rplus_opp_l; rewrite Rplus_comm.",
            "VernacExtend",
            "1a72df3c93b7f44d6374ba7bef62c6ff40aadc7f"
        ],
        [
            "pose proof (MVT_cor1 f _ _ pr H1) as (c & H3 & H4).",
            "VernacExtend",
            "1ce0e5d383d67a717d1fba0a4edc7e811322fdb2"
        ],
        [
            "unfold Rminus in H3.",
            "VernacExtend",
            "e4e67989aef496c4d96d632a24e0b77f66a410bb"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply Rplus_le_reg_l with x.",
            "VernacExtend",
            "622c49026c42ab907c2091be8aee4db81ba338ee"
        ],
        [
            "rewrite Rplus_0_r; replace (x + (y + - x)) with y; [ assumption | ring ].",
            "VernacExtend",
            "39ebb6e90c8e254109b0d023cab4112dcd808915"
        ],
        [
            "right; reflexivity.",
            "VernacExtend",
            "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
        ],
        [
            "elim (Rlt_irrefl _ (Rle_lt_trans _ _ _ H0 H1)).",
            "VernacExtend",
            "95e146ca4795bc73995fc26efdca9a74e73581a7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nonpos_derivative_0 : forall (f:R -> R) (pr:derivable f), decreasing f -> forall x:R, derive_pt f x (pr x) <= 0.",
            "VernacStartTheoremProof",
            "b6bc4c409334d2e537c041ceddb8c840c4622038"
        ],
        [
            "intros f pr H x; assert (H0 := H); unfold decreasing in H0; generalize (derivable_derive f x (pr x)); intro; elim H1; intros l H2.",
            "VernacExtend",
            "3f64319a35e4bbf3d6971bf2b28938621f367f6b"
        ],
        [
            "rewrite H2; case (Rtotal_order l 0); intro.",
            "VernacExtend",
            "f71ec729ccdfe21fc89d29942bbef0773cc0ac16"
        ],
        [
            "left; assumption.",
            "VernacExtend",
            "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
        ],
        [
            "elim H3; intro.",
            "VernacExtend",
            "522e36e2853ff30db9e3e0abc7a128144a4e937c"
        ],
        [
            "right; assumption.",
            "VernacExtend",
            "4b9041b9a9d920fdce6d3e18e05e4d1a743614d5"
        ],
        [
            "generalize (derive_pt_eq_1 f x l (pr x) H2); intros; cut (0 < l / 2).",
            "VernacExtend",
            "de703f56919b2316a6c3c80aa1970e2de855d204"
        ],
        [
            "intro; elim (H5 (l / 2) H6); intros delta H7; cut (delta / 2 <> 0 /\\ 0 < delta / 2 /\\ Rabs (delta / 2) < delta).",
            "VernacExtend",
            "43175cbe651f464b9f23a41816939c8bf4b12855"
        ],
        [
            "intro; decompose [and] H8; intros; generalize (H7 (delta / 2) H9 H12); cut ((f (x + delta / 2) - f x) / (delta / 2) <= 0).",
            "VernacExtend",
            "52a03dde5057a7ed143a914e0a839b11427b9a92"
        ],
        [
            "intro; cut (0 < - ((f (x + delta / 2) - f x) / (delta / 2) - l)).",
            "VernacExtend",
            "87006688eadcb3bc5716f10bdc6a1201d5262f97"
        ],
        [
            "intro; unfold Rabs; case (Rcase_abs ((f (x + delta / 2) - f x) / (delta / 2) - l)) as [Hlt|Hge].",
            "VernacExtend",
            "584328107c55fcb026a415b908b1e87625572c9c"
        ],
        [
            "intros; generalize (Rplus_lt_compat_r (- l) (- ((f (x + delta / 2) - f x) / (delta / 2) - l)) (l / 2) H14); unfold Rminus.",
            "VernacExtend",
            "a36fd0a8b98a710d4defed8b8e977958943fc3d3"
        ],
        [
            "replace (l / 2 + - l) with (- (l / 2)).",
            "VernacExtend",
            "3ed95149f6409f44e386c9ba53a955626d2675bb"
        ],
        [
            "replace (- ((f (x + delta / 2) + - f x) / (delta / 2) + - l) + - l) with (- ((f (x + delta / 2) + - f x) / (delta / 2))).",
            "VernacExtend",
            "068375af083a71b7bc551b0b0dbe949e299c1361"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "generalize (Ropp_lt_gt_contravar (- ((f (x + delta / 2) + - f x) / (delta / 2))) (- (l / 2)) H15).",
            "VernacExtend",
            "4c4fa6da82227c413957b2f3e74418ee32a3ca64"
        ],
        [
            "repeat rewrite Ropp_involutive.",
            "VernacExtend",
            "b4df30e062d1d1926156fc16d220bac84725142f"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "generalize (Rlt_trans 0 (l / 2) ((f (x + delta / 2) - f x) / (delta / 2)) H6 H16); intro.",
            "VernacExtend",
            "644319e1dff8773302d8c99c66679f762dc64358"
        ],
        [
            "elim (Rlt_irrefl 0 (Rlt_le_trans 0 ((f (x + delta / 2) - f x) / (delta / 2)) 0 H17 H10)).",
            "VernacExtend",
            "5c9133eb02d6b7065f98c6ab3f14d9bc20da4024"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "pattern l at 3; rewrite double_var.",
            "VernacExtend",
            "d25254082c5ffe1044ba1bed05f1a15d645f0aa5"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (Ropp_ge_le_contravar ((f (x + delta / 2) - f x) / (delta / 2) - l) _ Hge).",
            "VernacExtend",
            "279e2db77f7ba2aff63b38b52153be1eb6b3d537"
        ],
        [
            "rewrite Ropp_0.",
            "VernacExtend",
            "9db22f1ea38a12245c17fb1a0e93c5f55b418530"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim (Rlt_irrefl 0 (Rlt_le_trans 0 (- ((f (x + delta / 2) - f x) / (delta / 2) - l)) 0 H13 H15)).",
            "VernacExtend",
            "b05f79fec7dbc38660fb81ba8867a0f5c4571fe3"
        ],
        [
            "replace (- ((f (x + delta / 2) - f x) / (delta / 2) - l)) with ((f x - f (x + delta / 2)) / (delta / 2) + l).",
            "VernacExtend",
            "22bb9a919d092a5835c33fe57450e673b7c659d0"
        ],
        [
            "unfold Rminus.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "apply Rplus_le_lt_0_compat.",
            "VernacExtend",
            "f52234f44384644fc6f21adef182d5c4067417f5"
        ],
        [
            "unfold Rdiv; apply Rmult_le_pos.",
            "VernacExtend",
            "9295075fac998a2bbf6d97082250072803a082bc"
        ],
        [
            "cut (x <= x + delta * / 2).",
            "VernacExtend",
            "19afe99b4dd833c0689a099556ed3668dd2b0bbf"
        ],
        [
            "intro; generalize (H0 x (x + delta * / 2) H13); intro; generalize (Rplus_le_compat_l (- f (x + delta / 2)) (f (x + delta / 2)) (f x) H14); rewrite Rplus_opp_l; rewrite Rplus_comm; intro; assumption.",
            "VernacExtend",
            "b09919c80c10c9692b4a5a389b4d5df65913b707"
        ],
        [
            "pattern x at 1; rewrite <- (Rplus_0_r x); apply Rplus_le_compat_l; left; assumption.",
            "VernacExtend",
            "65711c3487505b5e7b1ee2746f7a5504ceb933c0"
        ],
        [
            "left; apply Rinv_0_lt_compat; assumption.",
            "VernacExtend",
            "2e3d876dd359094724551bd2f774f9c4a6bc3f60"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite Ropp_minus_distr.",
            "VernacExtend",
            "03410ea29af67bdcfa7393931606c01ed23d7394"
        ],
        [
            "unfold Rminus.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "rewrite (Rplus_comm l).",
            "VernacExtend",
            "dbba668978b03ba670013dd91b7d81eedaa8e76a"
        ],
        [
            "unfold Rdiv.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "rewrite <- Ropp_mult_distr_l_reverse.",
            "VernacExtend",
            "e7c61948f76e0a8897e51bfab935c33e66508906"
        ],
        [
            "rewrite Ropp_plus_distr.",
            "VernacExtend",
            "0658bf5be897ad7cda1a0e2a2d30180316272135"
        ],
        [
            "rewrite Ropp_involutive.",
            "VernacExtend",
            "ba0ab440a50f656f08837503f0228b68c9acdf87"
        ],
        [
            "rewrite (Rplus_comm (f x)).",
            "VernacExtend",
            "e90ec36adff58e9df1b7b1c09c351a19b19bc054"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "replace ((f (x + delta / 2) - f x) / (delta / 2)) with (- ((f x - f (x + delta / 2)) / (delta / 2))).",
            "VernacExtend",
            "f881b4a235d8b69b48871b9827508f9a09fc9173"
        ],
        [
            "rewrite <- Ropp_0.",
            "VernacExtend",
            "9b57276282263b89d6671472ad672c5763b57b55"
        ],
        [
            "apply Ropp_ge_le_contravar.",
            "VernacExtend",
            "2445c11f217e81db53e7f4c9cd6785fe138d34b0"
        ],
        [
            "apply Rle_ge.",
            "VernacExtend",
            "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
        ],
        [
            "unfold Rdiv; apply Rmult_le_pos.",
            "VernacExtend",
            "9295075fac998a2bbf6d97082250072803a082bc"
        ],
        [
            "cut (x <= x + delta * / 2).",
            "VernacExtend",
            "19afe99b4dd833c0689a099556ed3668dd2b0bbf"
        ],
        [
            "intro; generalize (H0 x (x + delta * / 2) H10); intro.",
            "VernacExtend",
            "9908c7a1c4fb7d646c0264e69d0aeedd18d59638"
        ],
        [
            "generalize (Rplus_le_compat_l (- f (x + delta / 2)) (f (x + delta / 2)) (f x) H13); rewrite Rplus_opp_l; rewrite Rplus_comm; intro; assumption.",
            "VernacExtend",
            "833f40368608d521345993780356c1dec216eb0a"
        ],
        [
            "pattern x at 1; rewrite <- (Rplus_0_r x); apply Rplus_le_compat_l; left; assumption.",
            "VernacExtend",
            "65711c3487505b5e7b1ee2746f7a5504ceb933c0"
        ],
        [
            "left; apply Rinv_0_lt_compat; assumption.",
            "VernacExtend",
            "2e3d876dd359094724551bd2f774f9c4a6bc3f60"
        ],
        [
            "unfold Rdiv; rewrite <- Ropp_mult_distr_l_reverse.",
            "VernacExtend",
            "b17e46c3ae31af73f2b5640aead7600b941fb5c9"
        ],
        [
            "rewrite Ropp_minus_distr.",
            "VernacExtend",
            "03410ea29af67bdcfa7393931606c01ed23d7394"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Rdiv; apply prod_neq_R0.",
            "VernacExtend",
            "bae86043f3acfd4aeb1f77f1138e1172ace3c7fa"
        ],
        [
            "generalize (cond_pos delta); intro; red; intro H9; rewrite H9 in H8; elim (Rlt_irrefl 0 H8).",
            "VernacExtend",
            "252265e60cb089b12f579766aa9cd19b92ff9fbf"
        ],
        [
            "apply Rinv_neq_0_compat; discrR.",
            "VernacExtend",
            "c996ce35ba9924ff499f316d0fb3eaf573a9e988"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat; [ apply (cond_pos delta) | apply Rinv_0_lt_compat; prove_sup0 ].",
            "VernacExtend",
            "890260abc6df9bffcdd1734d1136fd85613241e8"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "9b60731d6b608338747f09fec19f24d12baad022"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_reg_l with 2.",
            "VernacExtend",
            "f4c0b06c2efd971a65fcd955cb283b1e333171b1"
        ],
        [
            "prove_sup0.",
            "VernacExtend",
            "9681c23836ca7f82fee12028ab3f984ae6ec2935"
        ],
        [
            "rewrite <- (Rmult_comm (/ 2)); rewrite <- Rmult_assoc; rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "7c9a8333d70aa1f1e94bdb6f7bfc6755acfdb888"
        ],
        [
            "rewrite Rmult_1_l; rewrite double; pattern (pos delta) at 1; rewrite <- Rplus_0_r.",
            "VernacExtend",
            "39d0082b57aa779ac538d4258244297710d9046e"
        ],
        [
            "apply Rplus_lt_compat_l; apply (cond_pos delta).",
            "VernacExtend",
            "def4b5e6c5dd34c187b066aeaf8c3c36e8489fa0"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "apply Rle_ge; unfold Rdiv; left; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c4f2e7293d14384eae88c8c36e42d68a770ffc02"
        ],
        [
            "apply (cond_pos delta).",
            "VernacExtend",
            "a9ac22f2c61b5439eba32b380f3a496ef53ea835"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "ee74bd033c1031a79ef440e1d41037d5c9648214"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat; [ apply H4 | apply Rinv_0_lt_compat; prove_sup0 ].",
            "VernacExtend",
            "6277e2d772bc4ad92a0a735c73b30ba7853b7d5a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma increasing_decreasing_opp : forall f:R -> R, increasing f -> decreasing (- f)%F.",
            "VernacStartTheoremProof",
            "06c7544fc12559ee41b0f3621bdfc28a23cf28b8"
        ],
        [
            "unfold increasing, decreasing, opp_fct; intros; generalize (H x y H0); intro; apply Ropp_ge_le_contravar; apply Rle_ge; assumption.",
            "VernacExtend",
            "3975ee61333c9948c07f84143aa9cec0b8aa271e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nonpos_derivative_1 : forall (f:R -> R) (pr:derivable f), (forall x:R, derive_pt f x (pr x) <= 0) -> decreasing f.",
            "VernacStartTheoremProof",
            "718119fbb04211604ee299c9839729d1e68e9a1f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (forall h:R, - - f h = f h).",
            "VernacExtend",
            "a2f3de2b91591531cc8227aa18fc95a84ccb4082"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "generalize (increasing_decreasing_opp (- f)%F).",
            "VernacExtend",
            "0dac815034804ebf8ac40ebcebaabcc1e96c4c7a"
        ],
        [
            "unfold decreasing.",
            "VernacExtend",
            "92ff3d7f99ace38e3cc5149d0f01d99b55a5b18a"
        ],
        [
            "unfold opp_fct.",
            "VernacExtend",
            "4e63c1953428e7d557cffe0058417d26d5bb9bf7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (H0 x); rewrite <- (H0 y).",
            "VernacExtend",
            "cd52b397aff5ff3cebffdbe04247511e159179af"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "cut (forall x:R, 0 <= derive_pt (- f) x (derivable_opp f pr x)).",
            "VernacExtend",
            "a342b4c303c958196b587f7b0c5786161bba268a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (fun x:R => - f x) with (- f)%F; [ idtac | reflexivity ].",
            "VernacExtend",
            "5da2f688ddf8e54f65564d28d2aece4774b0cd53"
        ],
        [
            "apply (nonneg_derivative_1 (- f)%F (derivable_opp f pr) H3).",
            "VernacExtend",
            "93cf3481b10c7677483879f5947fcffb7de0c029"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (H3 := derive_pt_opp f x0 (pr x0)).",
            "VernacExtend",
            "01dba697fedabc62fc5e551cd41cc685a596ec2d"
        ],
        [
            "cut (derive_pt (- f) x0 (derivable_pt_opp f x0 (pr x0)) = derive_pt (- f) x0 (derivable_opp f pr x0)).",
            "VernacExtend",
            "2a2f2a694231d157238f3323d050de25aaf64c82"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite <- H4.",
            "VernacExtend",
            "15801069338f53d2cf64b6951fc88c5758e631f8"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "rewrite <- Ropp_0; apply Ropp_ge_le_contravar; apply Rle_ge; apply (H x0).",
            "VernacExtend",
            "210bc5c8c68b8f40641f6475f682521b1ec59538"
        ],
        [
            "apply pr_nu.",
            "VernacExtend",
            "27d728315a307c47080f48762476ff3ac618b9c5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro; ring.",
            "VernacExtend",
            "a63cb55c0d6dc7f5f40d630fd18daddefae14d26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma positive_derivative : forall (f:R -> R) (pr:derivable f), (forall x:R, 0 < derive_pt f x (pr x)) -> strict_increasing f.",
            "VernacStartTheoremProof",
            "6dadfa119ead597542a285fcfa593b5c4d493562"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold strict_increasing.",
            "VernacExtend",
            "c51a52678f385b9ce88636434fa341620c80f439"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Rplus_lt_reg_l with (- f x).",
            "VernacExtend",
            "696b73624761fd88e7b462bb79df9cec34cf0c30"
        ],
        [
            "rewrite Rplus_opp_l; rewrite Rplus_comm.",
            "VernacExtend",
            "1a72df3c93b7f44d6374ba7bef62c6ff40aadc7f"
        ],
        [
            "assert (H1 := MVT_cor1 f _ _ pr H0).",
            "VernacExtend",
            "9bffe36d668a30303a22216a91f9293883c334e7"
        ],
        [
            "elim H1; intros.",
            "VernacExtend",
            "6b7bcf9d739b14ca3a09271e2c3493e16c5e2914"
        ],
        [
            "elim H2; intros.",
            "VernacExtend",
            "1fdc85439644114ac67a1ade25e79a4d8c3588d6"
        ],
        [
            "unfold Rminus in H3.",
            "VernacExtend",
            "e4e67989aef496c4d96d632a24e0b77f66a410bb"
        ],
        [
            "rewrite H3.",
            "VernacExtend",
            "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply Rplus_lt_reg_l with x.",
            "VernacExtend",
            "f6abc10f7ad01cb714b4cff3f6e97f6bde56f912"
        ],
        [
            "rewrite Rplus_0_r; replace (x + (y + - x)) with y; [ assumption | ring ].",
            "VernacExtend",
            "39ebb6e90c8e254109b0d023cab4112dcd808915"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma strictincreasing_strictdecreasing_opp : forall f:R -> R, strict_increasing f -> strict_decreasing (- f)%F.",
            "VernacStartTheoremProof",
            "e35a3f6225e3ad3b45106280dc47797631dca568"
        ],
        [
            "unfold strict_increasing, strict_decreasing, opp_fct; intros; generalize (H x y H0); intro; apply Ropp_lt_gt_contravar; assumption.",
            "VernacExtend",
            "9480a5eadf75b2a74ed28eaee7c4299a1f45f2f8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma negative_derivative : forall (f:R -> R) (pr:derivable f), (forall x:R, derive_pt f x (pr x) < 0) -> strict_decreasing f.",
            "VernacStartTheoremProof",
            "0322a9219bc4a3e7be52b78f8859fa577bd75e3a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (forall h:R, - - f h = f h).",
            "VernacExtend",
            "a2f3de2b91591531cc8227aa18fc95a84ccb4082"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (strictincreasing_strictdecreasing_opp (- f)%F).",
            "VernacExtend",
            "867d2e3d90d85658010fe27ae91d0df3e071d484"
        ],
        [
            "unfold strict_decreasing, opp_fct.",
            "VernacExtend",
            "961def1cdfa1091acc6f358ff9f879f9030cbb5f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- (H0 x).",
            "VernacExtend",
            "93c6f187af8c2ba6f176f5994a977dc58f977757"
        ],
        [
            "rewrite <- (H0 y).",
            "VernacExtend",
            "449311ecb56fb33b439baafafe27bff0a83eff04"
        ],
        [
            "apply H1; [ idtac | assumption ].",
            "VernacExtend",
            "4d089e883863d3b8d6ff99b6bde51eed86c78c36"
        ],
        [
            "cut (forall x:R, 0 < derive_pt (- f) x (derivable_opp f pr x)).",
            "VernacExtend",
            "ef266531b2dafc6b182c3a914956dd314925612b"
        ],
        [
            "intros; eapply positive_derivative; apply H3.",
            "VernacExtend",
            "b64c349ac14da8c0fc26f1ff3606d10b5df788fe"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (H3 := derive_pt_opp f x0 (pr x0)).",
            "VernacExtend",
            "01dba697fedabc62fc5e551cd41cc685a596ec2d"
        ],
        [
            "cut (derive_pt (- f) x0 (derivable_pt_opp f x0 (pr x0)) = derive_pt (- f) x0 (derivable_opp f pr x0)).",
            "VernacExtend",
            "2a2f2a694231d157238f3323d050de25aaf64c82"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite <- H4; rewrite H3.",
            "VernacExtend",
            "4e04639cdaa857bcef6dffe690e5416d4dbc1fd8"
        ],
        [
            "rewrite <- Ropp_0; apply Ropp_lt_gt_contravar; apply (H x0).",
            "VernacExtend",
            "cf8134d8fabf62b76d5bf350a0990d35fe36375f"
        ],
        [
            "apply pr_nu.",
            "VernacExtend",
            "27d728315a307c47080f48762476ff3ac618b9c5"
        ],
        [
            "intro; ring.",
            "VernacExtend",
            "a63cb55c0d6dc7f5f40d630fd18daddefae14d26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma null_derivative_0 : forall (f:R -> R) (pr:derivable f), constant f -> forall x:R, derive_pt f x (pr x) = 0.",
            "VernacStartTheoremProof",
            "31733e52689361e9f0de52f2cb95209a97fa7a3c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold constant in H.",
            "VernacExtend",
            "6f9df4d3e4f3444572e4bc4542d66c46ed55ef81"
        ],
        [
            "apply derive_pt_eq_0.",
            "VernacExtend",
            "51058b8a093c0f27b9e5415ebebae2ac17b3e5a3"
        ],
        [
            "intros; exists (mkposreal 1 Rlt_0_1); simpl; intros.",
            "VernacExtend",
            "40bb887090e9f00e0574e851411873dd59edfaa9"
        ],
        [
            "rewrite (H x (x + h)); unfold Rminus; unfold Rdiv; rewrite Rplus_opp_r; rewrite Rmult_0_l; rewrite Rplus_opp_r; rewrite Rabs_R0; assumption.",
            "VernacExtend",
            "4115cae095b453480cc997145dee1ae62cad5972"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma increasing_decreasing : forall f:R -> R, increasing f -> decreasing f -> constant f.",
            "VernacStartTheoremProof",
            "22488356efa8fb72c3cc2171f5b193be7212b610"
        ],
        [
            "unfold increasing, decreasing, constant; intros; case (Rtotal_order x y); intro.",
            "VernacExtend",
            "9d16523bd5a0605d1b5474a64c5c1271f7a20379"
        ],
        [
            "generalize (Rlt_le x y H1); intro; apply (Rle_antisym (f x) (f y) (H x y H2) (H0 x y H2)).",
            "VernacExtend",
            "8394de8943ff28b9dab62433b65ab3ebe62cc008"
        ],
        [
            "elim H1; intro.",
            "VernacExtend",
            "69e6dce0928c10bc8e91776963343c6dbf299832"
        ],
        [
            "rewrite H2; reflexivity.",
            "VernacExtend",
            "9c790f3e50b805b4cc946f2fcb63d8cdc82863fa"
        ],
        [
            "generalize (Rlt_le y x H2); intro; symmetry ; apply (Rle_antisym (f y) (f x) (H y x H3) (H0 y x H3)).",
            "VernacExtend",
            "3951dd921b5c25fa88fb018a21273a078df92610"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma null_derivative_1 : forall (f:R -> R) (pr:derivable f), (forall x:R, derive_pt f x (pr x) = 0) -> constant f.",
            "VernacStartTheoremProof",
            "fabfb7855f8a8bbe3095c9903fb764dfac268765"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (forall x:R, derive_pt f x (pr x) <= 0).",
            "VernacExtend",
            "cd1b6ad0eeb09f15c12cc7087b2716dbf92204cb"
        ],
        [
            "cut (forall x:R, 0 <= derive_pt f x (pr x)).",
            "VernacExtend",
            "8b2478a1d292c938f2f841c0d8fc750921f3b5b8"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (H2 := nonneg_derivative_1 f pr H0).",
            "VernacExtend",
            "e8c1c0262ddbbe76a1a362fd151b559f736192c0"
        ],
        [
            "assert (H3 := nonpos_derivative_1 f pr H1).",
            "VernacExtend",
            "45721ab8a5d2ca3c55a3505040f85900f42fa385"
        ],
        [
            "apply increasing_decreasing; assumption.",
            "VernacExtend",
            "6bda90a99ce026e6fee33240fe20a4a3734ecad7"
        ],
        [
            "intro; right; symmetry ; apply (H x).",
            "VernacExtend",
            "6be6c391a423330e30a054824a8762db9d5593d7"
        ],
        [
            "intro; right; apply (H x).",
            "VernacExtend",
            "17537435d989d00a63ac19aaf686f8c329b42112"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derive_increasing_interv_ax : forall (a b:R) (f:R -> R) (pr:derivable f), a < b -> ((forall t:R, a < t < b -> 0 < derive_pt f t (pr t)) -> forall x y:R, a <= x <= b -> a <= y <= b -> x < y -> f x < f y) /\\ ((forall t:R, a < t < b -> 0 <= derive_pt f t (pr t)) -> forall x y:R, a <= x <= b -> a <= y <= b -> x < y -> f x <= f y).",
            "VernacStartTheoremProof",
            "5d996a9efd083df6d1d09d83dc601885c2253d46"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "apply Rplus_lt_reg_l with (- f x).",
            "VernacExtend",
            "696b73624761fd88e7b462bb79df9cec34cf0c30"
        ],
        [
            "rewrite Rplus_opp_l; rewrite Rplus_comm.",
            "VernacExtend",
            "1a72df3c93b7f44d6374ba7bef62c6ff40aadc7f"
        ],
        [
            "assert (H4 := MVT_cor1 f _ _ pr H3).",
            "VernacExtend",
            "4eb7279ec92531c510fbe5ffbdd0baae539af9c5"
        ],
        [
            "elim H4; intros.",
            "VernacExtend",
            "ef88f175449d4af46e0685700665ce0cdf3e5695"
        ],
        [
            "elim H5; intros.",
            "VernacExtend",
            "f57064d2371d46c709230830a90015bd814391ac"
        ],
        [
            "unfold Rminus in H6.",
            "VernacExtend",
            "641049f82b5907f6225878bf4b148ab21bc7c751"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "elim H7; intros.",
            "VernacExtend",
            "956dd7e65e2cd7d13be3c454bb1595163c16ef21"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "elim H1; intros.",
            "VernacExtend",
            "6b7bcf9d739b14ca3a09271e2c3493e16c5e2914"
        ],
        [
            "apply Rle_lt_trans with x; assumption.",
            "VernacExtend",
            "04fc5f0e34bb831d7f7e5d7f4cd7373f03a09917"
        ],
        [
            "elim H2; intros.",
            "VernacExtend",
            "1fdc85439644114ac67a1ade25e79a4d8c3588d6"
        ],
        [
            "apply Rlt_le_trans with y; assumption.",
            "VernacExtend",
            "c2722fc36d73448250b34c6072fd30f0a8a96fb8"
        ],
        [
            "apply Rplus_lt_reg_l with x.",
            "VernacExtend",
            "f6abc10f7ad01cb714b4cff3f6e97f6bde56f912"
        ],
        [
            "rewrite Rplus_0_r; replace (x + (y + - x)) with y; [ assumption | ring ].",
            "VernacExtend",
            "39ebb6e90c8e254109b0d023cab4112dcd808915"
        ],
        [
            "apply Rplus_le_reg_l with (- f x).",
            "VernacExtend",
            "b8e98b632b7c461e8cc3aa31596844af52dece6e"
        ],
        [
            "rewrite Rplus_opp_l; rewrite Rplus_comm.",
            "VernacExtend",
            "1a72df3c93b7f44d6374ba7bef62c6ff40aadc7f"
        ],
        [
            "assert (H4 := MVT_cor1 f _ _ pr H3).",
            "VernacExtend",
            "4eb7279ec92531c510fbe5ffbdd0baae539af9c5"
        ],
        [
            "elim H4; intros.",
            "VernacExtend",
            "ef88f175449d4af46e0685700665ce0cdf3e5695"
        ],
        [
            "elim H5; intros.",
            "VernacExtend",
            "f57064d2371d46c709230830a90015bd814391ac"
        ],
        [
            "unfold Rminus in H6.",
            "VernacExtend",
            "641049f82b5907f6225878bf4b148ab21bc7c751"
        ],
        [
            "rewrite H6.",
            "VernacExtend",
            "ff6a429844c59cba51300abb872460dbdbab812d"
        ],
        [
            "apply Rmult_le_pos.",
            "VernacExtend",
            "e03207c3cef85471384dc0906485b056bc83a80a"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "elim H7; intros.",
            "VernacExtend",
            "956dd7e65e2cd7d13be3c454bb1595163c16ef21"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "elim H1; intros.",
            "VernacExtend",
            "6b7bcf9d739b14ca3a09271e2c3493e16c5e2914"
        ],
        [
            "apply Rle_lt_trans with x; assumption.",
            "VernacExtend",
            "04fc5f0e34bb831d7f7e5d7f4cd7373f03a09917"
        ],
        [
            "elim H2; intros.",
            "VernacExtend",
            "1fdc85439644114ac67a1ade25e79a4d8c3588d6"
        ],
        [
            "apply Rlt_le_trans with y; assumption.",
            "VernacExtend",
            "c2722fc36d73448250b34c6072fd30f0a8a96fb8"
        ],
        [
            "apply Rplus_le_reg_l with x.",
            "VernacExtend",
            "622c49026c42ab907c2091be8aee4db81ba338ee"
        ],
        [
            "rewrite Rplus_0_r; replace (x + (y + - x)) with y; [ left; assumption | ring ].",
            "VernacExtend",
            "4f6643abc02efe0af6e1337c1b48444ef3e67182"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derive_increasing_interv : forall (a b:R) (f:R -> R) (pr:derivable f), a < b -> (forall t:R, a < t < b -> 0 < derive_pt f t (pr t)) -> forall x y:R, a <= x <= b -> a <= y <= b -> x < y -> f x < f y.",
            "VernacStartTheoremProof",
            "4d2a38f7f331228ce85de36574e74cf33abc6027"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (derive_increasing_interv_ax a b f pr H); intro.",
            "VernacExtend",
            "890eaf14d6be7b15eb45779c65d5d019af9b5b60"
        ],
        [
            "elim H4; intros H5 _; apply (H5 H0 x y H1 H2 H3).",
            "VernacExtend",
            "0dbe86c42d021e29ac4ce6e01e65de09c560fae6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derive_increasing_interv_var : forall (a b:R) (f:R -> R) (pr:derivable f), a < b -> (forall t:R, a < t < b -> 0 <= derive_pt f t (pr t)) -> forall x y:R, a <= x <= b -> a <= y <= b -> x < y -> f x <= f y.",
            "VernacStartTheoremProof",
            "13bac58f9ba1d23447ff66a2b23837c5ab009b26"
        ],
        [
            "intros a b f pr H H0 x y H1 H2 H3; generalize (derive_increasing_interv_ax a b f pr H); intro; elim H4; intros _ H5; apply (H5 H0 x y H1 H2 H3).",
            "VernacExtend",
            "0a8ad2c199260a08c41b182c7a5aad1f14b18fc8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem IAF : forall (f:R -> R) (a b k:R) (pr:derivable f), a <= b -> (forall c:R, a <= c <= b -> derive_pt f c (pr c) <= k) -> f b - f a <= k * (b - a).",
            "VernacStartTheoremProof",
            "4e9ec02f4ae82b82212d1fa347236dd35a053fdb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (total_order_T a b) as [[H1| -> ]|H1].",
            "VernacExtend",
            "f1e437238c2a7144656b50013658f922b2914559"
        ],
        [
            "pose proof (MVT_cor1 f _ _ pr H1) as (c & -> & H4).",
            "VernacExtend",
            "4a61b4348abcc84fab7526241be8cdb263a6bbc7"
        ],
        [
            "do 2 rewrite <- (Rmult_comm (b - a)).",
            "VernacExtend",
            "bbb1ca492fbdab6683d50da45beaa33767298e1e"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply Rplus_le_reg_l with a; rewrite Rplus_0_r.",
            "VernacExtend",
            "35ac637deb996c04104a901fc6b603ec41fc36d3"
        ],
        [
            "replace (a + (b - a)) with b; [ assumption | ring ].",
            "VernacExtend",
            "6bbbac1bf30af7868caf02d17e67cafe499c6dcb"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "elim H4; intros.",
            "VernacExtend",
            "ef88f175449d4af46e0685700665ce0cdf3e5695"
        ],
        [
            "split; left; assumption.",
            "VernacExtend",
            "fdfa29011e9dae8a9167d139e5179b516d7a668c"
        ],
        [
            "unfold Rminus; do 2 rewrite Rplus_opp_r.",
            "VernacExtend",
            "f1d748bbd380138bc1168fe5ecd4f86c24c6665c"
        ],
        [
            "rewrite Rmult_0_r; right; reflexivity.",
            "VernacExtend",
            "bb98639eb10cc1f9e2e1f078a112d1c7297f3d56"
        ],
        [
            "elim (Rlt_irrefl _ (Rle_lt_trans _ _ _ H H1)).",
            "VernacExtend",
            "330cd7c5b5d6784aa7b9dda55cce635cbe4a53c0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma IAF_var : forall (f g:R -> R) (a b:R) (pr1:derivable f) (pr2:derivable g), a <= b -> (forall c:R, a <= c <= b -> derive_pt g c (pr2 c) <= derive_pt f c (pr1 c)) -> g b - g a <= f b - f a.",
            "VernacStartTheoremProof",
            "8c111f4eecde12672b7a3b3268cb84277fe0f2b9"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (derivable (g - f)).",
            "VernacExtend",
            "dd014c4fa58b9aa477f281051f57f05aa3d8b1e2"
        ],
        [
            "intro X.",
            "VernacExtend",
            "c93bbb51ef8637991b4239865469e36d8e520337"
        ],
        [
            "cut (forall c:R, a <= c <= b -> derive_pt (g - f) c (X c) <= 0).",
            "VernacExtend",
            "d287cf59f6c3a6130b16791e8bf45666b959aaf1"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "assert (H2 := IAF (g - f)%F a b 0 X H H1).",
            "VernacExtend",
            "8e065a4655c37a96dc14f09c4fe169f26e493fb5"
        ],
        [
            "rewrite Rmult_0_l in H2; unfold minus_fct in H2.",
            "VernacExtend",
            "33cec75677c2d47c3d13b2f2d72ce2f47d892588"
        ],
        [
            "apply Rplus_le_reg_l with (- f b + f a).",
            "VernacExtend",
            "0fdcdc6bda22121dbc81195e4bad52f8ee4344e3"
        ],
        [
            "replace (- f b + f a + (f b - f a)) with 0; [ idtac | ring ].",
            "VernacExtend",
            "661e09f523d7b954fde16be37a0beffc1076b84d"
        ],
        [
            "replace (- f b + f a + (g b - g a)) with (g b - f b - (g a - f a)); [ apply H2 | ring ].",
            "VernacExtend",
            "17867779b51a97cb0b5cf3ed3679ae6d70779dc1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (derive_pt (g - f) c (X c) = derive_pt (g - f) c (derivable_pt_minus _ _ _ (pr2 c) (pr1 c))).",
            "VernacExtend",
            "8682b73c7bf20ccb92dbd847474b6c73bcdd5a3b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "rewrite derive_pt_minus.",
            "VernacExtend",
            "7b5b7977d9cc568b30e4a6ba97f4178cfcc372af"
        ],
        [
            "apply Rplus_le_reg_l with (derive_pt f c (pr1 c)).",
            "VernacExtend",
            "c9ebe4c76a8bfb2ef832128140de3b2620f74155"
        ],
        [
            "rewrite Rplus_0_r.",
            "VernacExtend",
            "d5c1fdd9d1c31f6ede268b5fbee697b051ea4fe2"
        ],
        [
            "replace (derive_pt f c (pr1 c) + (derive_pt g c (pr2 c) - derive_pt f c (pr1 c))) with (derive_pt g c (pr2 c)); [ idtac | ring ].",
            "VernacExtend",
            "fba7a3b3bf2173d6d565f5f0da54a4eca2d7db9c"
        ],
        [
            "apply H0; assumption.",
            "VernacExtend",
            "6b55086dea19d45e0fd04d897d6b583689aff105"
        ],
        [
            "apply pr_nu.",
            "VernacExtend",
            "27d728315a307c47080f48762476ff3ac618b9c5"
        ],
        [
            "apply derivable_minus; assumption.",
            "VernacExtend",
            "400859cbbb8976b981fa5ad0d8216739663b6e66"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma null_derivative_loc : forall (f:R -> R) (a b:R) (pr:forall x:R, a < x < b -> derivable_pt f x), (forall x:R, a <= x <= b -> continuity_pt f x) -> (forall (x:R) (P:a < x < b), derive_pt f x (pr x P) = 0) -> constant_D_eq f (fun x:R => a <= x <= b) (f a).",
            "VernacStartTheoremProof",
            "ac84f30cb181de59dd23cd9b0635050f6b4bf39d"
        ],
        [
            "intros; unfold constant_D_eq; intros; destruct (total_order_T a b) as [[Hlt|Heq]|Hgt].",
            "VernacExtend",
            "e3d1a6fb98c938d7340ae1bdb5a8e9774addad74"
        ],
        [
            "assert (H2 : forall y:R, a < y < x -> derivable_pt id y).",
            "VernacExtend",
            "e8046ffc85a265970038fbd8dd1b02cfb60a5073"
        ],
        [
            "intros; apply derivable_pt_id.",
            "VernacExtend",
            "938ad5252ca2e0b1fd31017c21bbeb8e37bb4503"
        ],
        [
            "assert (H3 : forall y:R, a <= y <= x -> continuity_pt id y).",
            "VernacExtend",
            "c8950df58356c548751b3429904b1d60815d4280"
        ],
        [
            "intros; apply derivable_continuous; apply derivable_id.",
            "VernacExtend",
            "6128d5d68bbd06bbad037e48530487a799f4a767"
        ],
        [
            "assert (H4 : forall y:R, a < y < x -> derivable_pt f y).",
            "VernacExtend",
            "feb267d79fe33cd53843d888153590834a1a72cc"
        ],
        [
            "intros; apply pr; elim H4; intros; split.",
            "VernacExtend",
            "be056280be3172f677f29370bdd914e8bf9c3bad"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H1; intros; apply Rlt_le_trans with x; assumption.",
            "VernacExtend",
            "e8a928fc1b312e0197222a72646251511bfb78fe"
        ],
        [
            "assert (H5 : forall y:R, a <= y <= x -> continuity_pt f y).",
            "VernacExtend",
            "655f684d50683bd1dd593cad7f325759e27aaea5"
        ],
        [
            "intros; apply H; elim H5; intros; split.",
            "VernacExtend",
            "297d823c8d21ce2b5c129b5c122fa98519b0fdc8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "elim H1; intros; apply Rle_trans with x; assumption.",
            "VernacExtend",
            "7ed257b18385a1a89aebd54f52d9a35fbe576367"
        ],
        [
            "elim H1; clear H1; intros; elim H1; clear H1; intro.",
            "VernacExtend",
            "43dde522c3a4b53da7c6aec976791a32c4bfe6ad"
        ],
        [
            "assert (H7 := MVT f id a x H4 H2 H1 H5 H3).",
            "VernacExtend",
            "cf400d55cbed742e2069983ca2adbc0f3f7ef863"
        ],
        [
            "destruct H7 as (c & P & H9).",
            "VernacExtend",
            "6cc3ab0e5e85c9b2f5452c8e9d0f36d698f56aff"
        ],
        [
            "assert (H10 : a < c < b).",
            "VernacExtend",
            "94938f12d4ddcc78b3dbf4b2db8cbc0260a449b7"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply P.",
            "VernacExtend",
            "77ec7a77c147bdc26d1c81d5a9f0d33da7fe6a48"
        ],
        [
            "apply Rlt_le_trans with x; [apply P|assumption].",
            "VernacExtend",
            "aa7afa5e438e131fea52577de98d0f3b472d9036"
        ],
        [
            "assert (H11 : derive_pt f c (H4 c P) = 0).",
            "VernacExtend",
            "4253ca2c728cdaf301dc09354219533b3a32695a"
        ],
        [
            "replace (derive_pt f c (H4 c P)) with (derive_pt f c (pr c H10)); [ apply H0 | apply pr_nu ].",
            "VernacExtend",
            "d29328f10d659cc05c88b9fff2de9a365994fd4e"
        ],
        [
            "assert (H12 : derive_pt id c (H2 c P) = 1).",
            "VernacExtend",
            "3f84e32d7036efc42b2ecfac89455bc63719f823"
        ],
        [
            "apply derive_pt_eq_0; apply derivable_pt_lim_id.",
            "VernacExtend",
            "e766ffecfb37180360d09c54b330cffeac6bb2a4"
        ],
        [
            "rewrite H11 in H9; rewrite H12 in H9; rewrite Rmult_0_r in H9; rewrite Rmult_1_r in H9; apply Rminus_diag_uniq; symmetry ; assumption.",
            "VernacExtend",
            "baacd4b9d1a6b6f85bf79891616b8300d172d209"
        ],
        [
            "rewrite H1; reflexivity.",
            "VernacExtend",
            "78cd8a23170465d8fbd1f52e805fd4772133410f"
        ],
        [
            "assert (H2 : x = a).",
            "VernacExtend",
            "aef13442e01260e48d825188237fbce0a8469227"
        ],
        [
            "rewrite <- Heq in H1; elim H1; intros; apply Rle_antisym; assumption.",
            "VernacExtend",
            "d8200d439594df392af0a2004a4732ecc48f8f41"
        ],
        [
            "rewrite H2; reflexivity.",
            "VernacExtend",
            "9c790f3e50b805b4cc946f2fcb63d8cdc82863fa"
        ],
        [
            "elim H1; intros; elim (Rlt_irrefl _ (Rle_lt_trans _ _ _ (Rle_trans _ _ _ H2 H3) Hgt)).",
            "VernacExtend",
            "188756c8e09ed3827eb8d76def4ce90b07a59299"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma antiderivative_Ucte : forall (f g1 g2:R -> R) (a b:R), antiderivative f g1 a b -> antiderivative f g2 a b -> exists c : R, (forall x:R, a <= x <= b -> g1 x = g2 x + c).",
            "VernacStartTheoremProof",
            "cb3a998b46a025fe09f0114f57cc89a5c787e1dc"
        ],
        [
            "unfold antiderivative; intros; elim H; clear H; intros; elim H0; clear H0; intros H0 _; exists (g1 a - g2 a); intros; assert (H3 : forall x:R, a <= x <= b -> derivable_pt g1 x).",
            "VernacExtend",
            "fcdc6a7a92aabd2a15de82a0eac5f5b7bd7ec1b8"
        ],
        [
            "intros; unfold derivable_pt; exists (f x0); elim (H x0 H3); intros; eapply derive_pt_eq_1; symmetry ; apply H4.",
            "VernacExtend",
            "563192e5cfc3906d9307f168cffca8b3b1df5ff7"
        ],
        [
            "assert (H4 : forall x:R, a <= x <= b -> derivable_pt g2 x).",
            "VernacExtend",
            "0f6521bce9d345e71245edfb1c1050fad2dbf90a"
        ],
        [
            "intros; unfold derivable_pt; exists (f x0); elim (H0 x0 H4); intros; eapply derive_pt_eq_1; symmetry ; apply H5.",
            "VernacExtend",
            "43e20908a2a6072be20502ee020af7cf3c0c071c"
        ],
        [
            "assert (H5 : forall x:R, a < x < b -> derivable_pt (g1 - g2) x).",
            "VernacExtend",
            "ce34694102a41bfbbadc7d17a347e3a19f4485ee"
        ],
        [
            "intros; elim H5; intros; apply derivable_pt_minus; [ apply H3; split; left; assumption | apply H4; split; left; assumption ].",
            "VernacExtend",
            "d37d6e53180cb693ce5c6c68946ea8341d31ef1b"
        ],
        [
            "assert (H6 : forall x:R, a <= x <= b -> continuity_pt (g1 - g2) x).",
            "VernacExtend",
            "fb2e04b8004c2f69600316d213ed95c4dc9d7ef9"
        ],
        [
            "intros; apply derivable_continuous_pt; apply derivable_pt_minus; [ apply H3 | apply H4 ]; assumption.",
            "VernacExtend",
            "87f9f8aa5951751a45a0ab8a989d73dced09c8d3"
        ],
        [
            "assert (H7 : forall (x:R) (P:a < x < b), derive_pt (g1 - g2) x (H5 x P) = 0).",
            "VernacExtend",
            "e5fda7c668fd389a557ce8bfa3f06c8634d91091"
        ],
        [
            "intros; elim P; intros; apply derive_pt_eq_0; replace 0 with (f x0 - f x0); [ idtac | ring ].",
            "VernacExtend",
            "f2075d6b6c56ba6689666ce13a163a35bcd136c5"
        ],
        [
            "assert (H9 : a <= x0 <= b).",
            "VernacExtend",
            "5fc963368d437fc47c75a178dc668ec1b42ae9cd"
        ],
        [
            "split; left; assumption.",
            "VernacExtend",
            "fdfa29011e9dae8a9167d139e5179b516d7a668c"
        ],
        [
            "apply derivable_pt_lim_minus; [ elim (H _ H9) | elim (H0 _ H9) ]; intros; eapply derive_pt_eq_1; symmetry ; apply H10.",
            "VernacExtend",
            "0b154d86b68c6145a1e2334d14cc1b107dd56fac"
        ],
        [
            "assert (H8 := null_derivative_loc (g1 - g2)%F a b H5 H6 H7); unfold constant_D_eq in H8; assert (H9 := H8 _ H2); unfold minus_fct in H9; rewrite <- H9; ring.",
            "VernacExtend",
            "4da0132643ac33b6be486e2ae71602b6b501f610"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MVT_abs : forall (f f' : R -> R) (a b : R), (forall c : R, Rmin a b <= c <= Rmax a b -> derivable_pt_lim f c (f' c)) -> exists c : R, Rabs (f b - f a) = Rabs (f' c) * Rabs (b - a) /\\ Rmin a b <= c <= Rmax a b.",
            "VernacStartTheoremProof",
            "51401356962278f3e8f9d27c862eb5f5084f230e"
        ],
        [
            "intros f f' a b.",
            "VernacExtend",
            "d0906bbfe7e0fae8839274b4300cba8c88473be3"
        ],
        [
            "destruct (Rle_dec a b) as [aleb | blta].",
            "VernacExtend",
            "a9dd12174ddf5011ba49454d9177003b45011686"
        ],
        [
            "destruct (Req_dec a b) as [ab | anb].",
            "VernacExtend",
            "a5fa72f3986e1d45f4d2aabbf9f6f8a39a6d84fc"
        ],
        [
            "unfold Rminus; intros _; exists a; split.",
            "VernacExtend",
            "46d052d169deb8b6be040c2e991c77fef9af6a4d"
        ],
        [
            "now rewrite <- ab, !Rplus_opp_r, Rabs_R0, Rmult_0_r.",
            "VernacExtend",
            "b0ee984aa17397fbe324a31cca22f18ae8740b5e"
        ],
        [
            "split;[apply Rmin_l | apply Rmax_l].",
            "VernacExtend",
            "5e7b9c459c91530b5c5bd99571c165a8390b70ee"
        ],
        [
            "rewrite Rmax_right, Rmin_left; auto; intros derv.",
            "VernacExtend",
            "e7437eeed91c943710d5daff591be9bfccacbad3"
        ],
        [
            "destruct (MVT_cor2 f f' a b) as [c [hc intc]]; [destruct aleb;[assumption | contradiction] | apply derv | ].",
            "VernacExtend",
            "4663496de18ee50f321c13e5986240cfa8a368c8"
        ],
        [
            "exists c; rewrite hc, Rabs_mult;split; [reflexivity | unfold Rle; tauto].",
            "VernacExtend",
            "b7274b4563ace854c8414f605bdeb687086e1425"
        ],
        [
            "assert (b < a) by (apply Rnot_le_gt; assumption).",
            "VernacExtend",
            "ecb36126e1435003467ea31cbb69068e3dc4cfe9"
        ],
        [
            "assert (b <= a) by (apply Rlt_le; assumption).",
            "VernacExtend",
            "1b752a4a8898a5822999c7f58b71b4789d6a91fb"
        ],
        [
            "rewrite Rmax_left, Rmin_right; try assumption; intros derv.",
            "VernacExtend",
            "88905f656979cc4fcc2ac7080b062035bd32cfe9"
        ],
        [
            "destruct (MVT_cor2 f f' b a) as [c [hc intc]]; [assumption | apply derv | ].",
            "VernacExtend",
            "6bd3336e80307dd620b9507fe4b8a79f379a1fe1"
        ],
        [
            "exists c; rewrite <- Rabs_Ropp, Ropp_minus_distr, hc, Rabs_mult.",
            "VernacExtend",
            "79dcce9d4e50145469ee3bfa26491b8669fde24c"
        ],
        [
            "split;[now rewrite <- (Rabs_Ropp (b - a)), Ropp_minus_distr| unfold Rle; tauto].",
            "VernacExtend",
            "d64d31626693e994cdda829673fdbe90ad466e01"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "MVT",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros; assert (H2 := Rlt_le _ _ H).",
                        "VernacExtend",
                        "44a9f337f0cb14663d7f1c9343d1d3ed71368bd6"
                    ]
                },
                {
                    "command": [
                        "set (h := fun y:R => (g b - g a) * f y - (f b - f a) * g y).",
                        "VernacExtend",
                        "02c020b7e599dbff8ac5c106f852d10130e7056a"
                    ]
                },
                {
                    "command": [
                        "cut (forall c:R, a < c < b -> derivable_pt h c).",
                        "VernacExtend",
                        "3c0be65f10e30f873c01b61a52de936aaf52a159"
                    ]
                },
                {
                    "command": [
                        "intro X; cut (forall c:R, a <= c <= b -> continuity_pt h c).",
                        "VernacExtend",
                        "f1a13e72d5619c3964607f5f4de1d426663aa328"
                    ]
                },
                {
                    "command": [
                        "intro; assert (H4 := continuity_ab_maj h a b H2 H3).",
                        "VernacExtend",
                        "77cd76f0605cb9f566bd4a5815576e881efdae57"
                    ]
                },
                {
                    "command": [
                        "assert (H5 := continuity_ab_min h a b H2 H3).",
                        "VernacExtend",
                        "df10284a5499bd1c3294267a190eb4d3f37a530c"
                    ]
                },
                {
                    "command": [
                        "elim H4; intros Mx H6.",
                        "VernacExtend",
                        "8842aebd6b31fafa7de75b668ebf03c0c1645d10"
                    ]
                },
                {
                    "command": [
                        "elim H5; intros mx H7.",
                        "VernacExtend",
                        "39ff3143981c368c06fd585e963ae8b599b7b0d7"
                    ]
                },
                {
                    "command": [
                        "cut (h a = h b).",
                        "VernacExtend",
                        "93f210d8f92b31830eeec4359b39ab85cf9b3e3e"
                    ]
                },
                {
                    "command": [
                        "intro; set (M := h Mx); set (m := h mx).",
                        "VernacExtend",
                        "65e0044192084d03830342c1ddabdd0e4252b0ae"
                    ]
                },
                {
                    "command": [
                        "cut (forall (c:R) (P:a < c < b), derive_pt h c (X c P) = (g b - g a) * derive_pt f c (pr1 c P) - (f b - f a) * derive_pt g c (pr2 c P)).",
                        "VernacExtend",
                        "503afaede0b7aeec3a4e2f1a38b78c1220250e04"
                    ]
                },
                {
                    "command": [
                        "intro; case (Req_dec (h a) M); intro.",
                        "VernacExtend",
                        "ed4897d444ca6020fb0da8b62e092420419c6e27"
                    ]
                },
                {
                    "command": [
                        "case (Req_dec (h a) m); intro.",
                        "VernacExtend",
                        "7f738fba6f1573a24bd5e38d319c49e8099aca7b"
                    ]
                },
                {
                    "command": [
                        "cut (forall c:R, a <= c <= b -> h c = M).",
                        "VernacExtend",
                        "35727fb6a3e171b2cb65cc74b53d66fbbbaf7b8c"
                    ]
                },
                {
                    "command": [
                        "intro; cut (a < (a + b) / 2 < b).",
                        "VernacExtend",
                        "05675c94cc53318abc5b0d2927496048fbc87c9e"
                    ]
                },
                {
                    "command": [
                        "intro; exists ((a + b) / 2).",
                        "VernacExtend",
                        "aeaa52daed173a53ad9c2b0a5088128f7b04070e"
                    ]
                },
                {
                    "command": [
                        "exists H13.",
                        "VernacExtend",
                        "1c29bde8f789a503be69d0989d4301be4ac21a6a"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_diag_uniq; rewrite <- H9; apply deriv_constant2 with a b.",
                        "VernacExtend",
                        "0eae19bc06a8ab4df181991cd1f289408469404d"
                    ]
                },
                {
                    "command": [
                        "elim H13; intros; assumption.",
                        "VernacExtend",
                        "c2834a1647253ee351d960b102c577f0693821cd"
                    ]
                },
                {
                    "command": [
                        "elim H13; intros; assumption.",
                        "VernacExtend",
                        "c2834a1647253ee351d960b102c577f0693821cd"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite (H12 ((a + b) / 2)).",
                        "VernacExtend",
                        "763a877973774bbd712b1f451b3c8f9f3b15efc9"
                    ]
                },
                {
                    "command": [
                        "apply H12; split; left; assumption.",
                        "VernacExtend",
                        "ad210af8ec38d4c77f1f253fefdcc0e84a429fd1"
                    ]
                },
                {
                    "command": [
                        "elim H13; intros; split; left; assumption.",
                        "VernacExtend",
                        "d3557e2ef273fc4f15ea91c16ed6bc877808d62c"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with 2.",
                        "VernacExtend",
                        "6631f3c2df4cb853b13a1c15d269a9146336e287"
                    ]
                },
                {
                    "command": [
                        "prove_sup0.",
                        "VernacExtend",
                        "9681c23836ca7f82fee12028ab3f984ae6ec2935"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite <- (Rmult_comm (/ 2)); rewrite <- Rmult_assoc; rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "bb110d8377e3622749fa8b2b4653e0680d3ab799"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l; rewrite double; apply Rplus_lt_compat_l; apply H.",
                        "VernacExtend",
                        "b11f65d2f730f998397d33850ff6d3503de06e8c"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with 2.",
                        "VernacExtend",
                        "6631f3c2df4cb853b13a1c15d269a9146336e287"
                    ]
                },
                {
                    "command": [
                        "prove_sup0.",
                        "VernacExtend",
                        "9681c23836ca7f82fee12028ab3f984ae6ec2935"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite <- (Rmult_comm (/ 2)); rewrite <- Rmult_assoc; rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "bb110d8377e3622749fa8b2b4653e0680d3ab799"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l; rewrite Rplus_comm; rewrite double; apply Rplus_lt_compat_l; apply H.",
                        "VernacExtend",
                        "b2f357469748835c283a1b738f0f78e68d7534e3"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "intros; elim H6; intros H13 _.",
                        "VernacExtend",
                        "bf8ffcb32ccdd908bc5ad0e3417f9895cb14d00b"
                    ]
                },
                {
                    "command": [
                        "elim H7; intros H14 _.",
                        "VernacExtend",
                        "e9a0310735cdd06d59c24d2f187cef63f9b64b4f"
                    ]
                },
                {
                    "command": [
                        "apply Rle_antisym.",
                        "VernacExtend",
                        "8e9431fb6db6f151160007e68131f4f5cb1c7968"
                    ]
                },
                {
                    "command": [
                        "apply H13; apply H12.",
                        "VernacExtend",
                        "4578b01ff51ccb37f72e775170fc9f4133d2787e"
                    ]
                },
                {
                    "command": [
                        "rewrite H10 in H11; rewrite H11; apply H14; apply H12.",
                        "VernacExtend",
                        "7a8e665add2e1f69a13824ed282288a30fe28237"
                    ]
                },
                {
                    "command": [
                        "cut (a < mx < b).",
                        "VernacExtend",
                        "c7bb058e189d420f762b8f15692620c9d7944430"
                    ]
                },
                {
                    "command": [
                        "intro; exists mx.",
                        "VernacExtend",
                        "61ae5b0646520db980e2837a6e5504351c5294ab"
                    ]
                },
                {
                    "command": [
                        "exists H12.",
                        "VernacExtend",
                        "4c9ee97217c5fce23221665f1b8e7b31b105193d"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_diag_uniq; rewrite <- H9; apply deriv_minimum with a b.",
                        "VernacExtend",
                        "c4cee2ed8b562492e11220843b132b79570cad45"
                    ]
                },
                {
                    "command": [
                        "elim H12; intros; assumption.",
                        "VernacExtend",
                        "64214aa4f2998658a38bee071de5006227dc21f0"
                    ]
                },
                {
                    "command": [
                        "elim H12; intros; assumption.",
                        "VernacExtend",
                        "64214aa4f2998658a38bee071de5006227dc21f0"
                    ]
                },
                {
                    "command": [
                        "intros; elim H7; intros.",
                        "VernacExtend",
                        "07f53c01f1c43349643a393bc2890da7cad37e2a"
                    ]
                },
                {
                    "command": [
                        "apply H15; split; left; assumption.",
                        "VernacExtend",
                        "4b936cc669fb9dddbe42e15f27b05ed8c072c591"
                    ]
                },
                {
                    "command": [
                        "elim H7; intros _ H12; elim H12; intros; split.",
                        "VernacExtend",
                        "fd2eeb97676d3222e3496095c5e05de4d2be9238"
                    ]
                },
                {
                    "command": [
                        "inversion H13.",
                        "VernacExtend",
                        "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
                    ]
                },
                {
                    "command": [
                        "apply H15.",
                        "VernacExtend",
                        "b7865067db5259eafb12346a082417ff349ca746"
                    ]
                },
                {
                    "command": [
                        "rewrite H15 in H11; elim H11; reflexivity.",
                        "VernacExtend",
                        "2673eea613346e6e472b43a9cf052b193c4c18a9"
                    ]
                },
                {
                    "command": [
                        "inversion H14.",
                        "VernacExtend",
                        "158c311bb69c3e5a75670dfcbe8f342a533b833e"
                    ]
                },
                {
                    "command": [
                        "apply H15.",
                        "VernacExtend",
                        "b7865067db5259eafb12346a082417ff349ca746"
                    ]
                },
                {
                    "command": [
                        "rewrite H8 in H11; rewrite <- H15 in H11; elim H11; reflexivity.",
                        "VernacExtend",
                        "8755bbf90094e216f3852cc64cc8ee13fe78a313"
                    ]
                },
                {
                    "command": [
                        "cut (a < Mx < b).",
                        "VernacExtend",
                        "780ec0dec1f605840c08a9afa58b99d1517b44f0"
                    ]
                },
                {
                    "command": [
                        "intro; exists Mx.",
                        "VernacExtend",
                        "f30d7187f94c600f81a56f14afe5b999005b9632"
                    ]
                },
                {
                    "command": [
                        "exists H11.",
                        "VernacExtend",
                        "b82b2f84d1b7acbca933c09f5da390b6293c3aee"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_diag_uniq; rewrite <- H9; apply deriv_maximum with a b.",
                        "VernacExtend",
                        "dc0ca0c4e81838af18c1b167aa325f28ee811fd5"
                    ]
                },
                {
                    "command": [
                        "elim H11; intros; assumption.",
                        "VernacExtend",
                        "4603b983b724d6149694589a343a246246660a37"
                    ]
                },
                {
                    "command": [
                        "elim H11; intros; assumption.",
                        "VernacExtend",
                        "4603b983b724d6149694589a343a246246660a37"
                    ]
                },
                {
                    "command": [
                        "intros; elim H6; intros; apply H14.",
                        "VernacExtend",
                        "cb7e6b2faf10cd42f4561842c18a243b57cfd2f6"
                    ]
                },
                {
                    "command": [
                        "split; left; assumption.",
                        "VernacExtend",
                        "fdfa29011e9dae8a9167d139e5179b516d7a668c"
                    ]
                },
                {
                    "command": [
                        "elim H6; intros _ H11; elim H11; intros; split.",
                        "VernacExtend",
                        "22674be16d7c3dee515bad9e2e60ccaa01d1cdec"
                    ]
                },
                {
                    "command": [
                        "inversion H12.",
                        "VernacExtend",
                        "d5ec1d67ecbf066a6575bda368738e1ad0dbbc60"
                    ]
                },
                {
                    "command": [
                        "apply H14.",
                        "VernacExtend",
                        "315c064431a47ec3c8cc41e58a75c8eb749330ef"
                    ]
                },
                {
                    "command": [
                        "rewrite H14 in H10; elim H10; reflexivity.",
                        "VernacExtend",
                        "5b7db56fa812110601f6c081917c24c1e64cb1e7"
                    ]
                },
                {
                    "command": [
                        "inversion H13.",
                        "VernacExtend",
                        "27efe9cf9a2ba9e973e327b699f8e7fc2156191e"
                    ]
                },
                {
                    "command": [
                        "apply H14.",
                        "VernacExtend",
                        "315c064431a47ec3c8cc41e58a75c8eb749330ef"
                    ]
                },
                {
                    "command": [
                        "rewrite H8 in H10; rewrite <- H14 in H10; elim H10; reflexivity.",
                        "VernacExtend",
                        "e39d76a9cdefe1899b70b0d234ccaec13a5a4d42"
                    ]
                },
                {
                    "command": [
                        "intros; unfold h; replace (derive_pt (fun y:R => (g b - g a) * f y - (f b - f a) * g y) c (X c P)) with (derive_pt ((fct_cte (g b - g a) * f)%F - (fct_cte (f b - f a) * g)%F) c (derivable_pt_minus _ _ _ (derivable_pt_mult _ _ _ (derivable_pt_const (g b - g a) c) (pr1 c P)) (derivable_pt_mult _ _ _ (derivable_pt_const (f b - f a) c) (pr2 c P)))); [ idtac | apply pr_nu ].",
                        "VernacExtend",
                        "dcb4b416590757522fc2b06933c0f6f3557d8bad"
                    ]
                },
                {
                    "command": [
                        "rewrite derive_pt_minus; do 2 rewrite derive_pt_mult; do 2 rewrite derive_pt_const; do 2 rewrite Rmult_0_l; do 2 rewrite Rplus_0_l; reflexivity.",
                        "VernacExtend",
                        "5ba040c8725110d296174aa0c6cb310d05639e33"
                    ]
                },
                {
                    "command": [
                        "unfold h; ring.",
                        "VernacExtend",
                        "8bb23f7a75893495e684cba456e7ce0601caab68"
                    ]
                },
                {
                    "command": [
                        "intros; unfold h; change (continuity_pt ((fct_cte (g b - g a) * f)%F - (fct_cte (f b - f a) * g)%F) c).",
                        "VernacExtend",
                        "fceedf6a9b2df599763ecfd254b03077953aa93a"
                    ]
                },
                {
                    "command": [
                        "apply continuity_pt_minus; apply continuity_pt_mult.",
                        "VernacExtend",
                        "450080dac2ef8140d1459b8a0adc5cb47eb1dabd"
                    ]
                },
                {
                    "command": [
                        "apply derivable_continuous_pt; apply derivable_const.",
                        "VernacExtend",
                        "86cbf596f55d94a17141e17dc3b846e5c55bfcff"
                    ]
                },
                {
                    "command": [
                        "apply H0; apply H3.",
                        "VernacExtend",
                        "abe951c7aa8e96d9dbccc0ba51c55ff74f241a54"
                    ]
                },
                {
                    "command": [
                        "apply derivable_continuous_pt; apply derivable_const.",
                        "VernacExtend",
                        "86cbf596f55d94a17141e17dc3b846e5c55bfcff"
                    ]
                },
                {
                    "command": [
                        "apply H1; apply H3.",
                        "VernacExtend",
                        "df5d98df0699305aabdb74fd18378d787e775975"
                    ]
                },
                {
                    "command": [
                        "intros; change (derivable_pt ((fct_cte (g b - g a) * f)%F - (fct_cte (f b - f a) * g)%F) c).",
                        "VernacExtend",
                        "b21dd4f62c576c2e85e904c292d241a2d4e9a383"
                    ]
                },
                {
                    "command": [
                        "apply derivable_pt_minus; apply derivable_pt_mult.",
                        "VernacExtend",
                        "265904526bb681e22dc5faec6782235131c6013b"
                    ]
                },
                {
                    "command": [
                        "apply derivable_pt_const.",
                        "VernacExtend",
                        "5f79fec976d4bf9b10f4ae3f2bf89e7653fa9cab"
                    ]
                },
                {
                    "command": [
                        "apply (pr1 _ H3).",
                        "VernacExtend",
                        "b9abc1b8e0162587ac93b881250ea34721f92f44"
                    ]
                },
                {
                    "command": [
                        "apply derivable_pt_const.",
                        "VernacExtend",
                        "5f79fec976d4bf9b10f4ae3f2bf89e7653fa9cab"
                    ]
                },
                {
                    "command": [
                        "apply (pr2 _ H3).",
                        "VernacExtend",
                        "26f04d47dad61eaf9549c911f3a625a81d158b2a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MVT_cor1",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "intros f a b pr H; cut (forall c:R, a < c < b -> derivable_pt f c); [ intro X | intros; apply pr ].",
                        "VernacExtend",
                        "eee6989e8c8215149031f98717798c11397854c9"
                    ]
                },
                {
                    "command": [
                        "cut (forall c:R, a < c < b -> derivable_pt id c); [ intro X0 | intros; apply derivable_pt_id ].",
                        "VernacExtend",
                        "9c22c2740912a18fb071a277db75bfe1e5a21f92"
                    ]
                },
                {
                    "command": [
                        "cut (forall c:R, a <= c <= b -> continuity_pt f c); [ intro | intros; apply derivable_continuous_pt; apply pr ].",
                        "VernacExtend",
                        "4ef2f1ba31ae46d80a09d97cb6eee68edb0fff1f"
                    ]
                },
                {
                    "command": [
                        "cut (forall c:R, a <= c <= b -> continuity_pt id c); [ intro | intros; apply derivable_continuous_pt; apply derivable_id ].",
                        "VernacExtend",
                        "35af34957efced9e6cca17b77591ae4c72320a10"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := MVT f id a b X X0 H H0 H1).",
                        "VernacExtend",
                        "e70a6bfe6b7c428739d8e2afb67428c4b776c461"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as (c & P & H4).",
                        "VernacExtend",
                        "8678abd5001af5a5fecd7c81e50dd6ee014f69c9"
                    ]
                },
                {
                    "command": [
                        "exists c; split.",
                        "VernacExtend",
                        "3e1e8b4f017ed8d6e2ffcb1f375ef9385f5558f1"
                    ]
                },
                {
                    "command": [
                        "cut (derive_pt id c (X0 c P) = derive_pt id c (derivable_pt_id c)); [ intro H5 | apply pr_nu ].",
                        "VernacExtend",
                        "3602b1276f2b35d5fb2d28dc106669e93754f4ce"
                    ]
                },
                {
                    "command": [
                        "rewrite H5 in H4; rewrite (derive_pt_id c) in H4; rewrite Rmult_1_r in H4; rewrite <- H4; replace (derive_pt f c (X c P)) with (derive_pt f c (pr c)); [ idtac | apply pr_nu ]; apply Rmult_comm.",
                        "VernacExtend",
                        "52e80a5b3663ce0e086bea17c53b1557477cccc8"
                    ]
                },
                {
                    "command": [
                        "apply P.",
                        "VernacExtend",
                        "77ec7a77c147bdc26d1c81d5a9f0d33da7fe6a48"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MVT_cor2",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "intros f f' a b H H0; cut (forall c:R, a <= c <= b -> derivable_pt f c).",
                        "VernacExtend",
                        "2eec6727541cb2b939bd37ae277c5bc4a7dd108e"
                    ]
                },
                {
                    "command": [
                        "intro X; cut (forall c:R, a < c < b -> derivable_pt f c).",
                        "VernacExtend",
                        "bc7251123a88f7eca28ec40cacae63f74674a005"
                    ]
                },
                {
                    "command": [
                        "intro X0; cut (forall c:R, a <= c <= b -> continuity_pt f c).",
                        "VernacExtend",
                        "0520821a5f62581f6150eb3fe286d0033b46472a"
                    ]
                },
                {
                    "command": [
                        "intro; cut (forall c:R, a <= c <= b -> derivable_pt id c).",
                        "VernacExtend",
                        "895168ecc34f224369b99358335812fe16cd45fd"
                    ]
                },
                {
                    "command": [
                        "intro X1; cut (forall c:R, a < c < b -> derivable_pt id c).",
                        "VernacExtend",
                        "a736c89297e167b2b494cb34f59f2361f4ceab5e"
                    ]
                },
                {
                    "command": [
                        "intro X2; cut (forall c:R, a <= c <= b -> continuity_pt id c).",
                        "VernacExtend",
                        "c01d8494c5e3590425474923cee39bdaf816b91c"
                    ]
                },
                {
                    "command": [
                        "intro; elim (MVT f id a b X0 X2 H H1 H2); intros x (P,H3).",
                        "VernacExtend",
                        "d740fa174e6395b3e38045b461afffefeb694458"
                    ]
                },
                {
                    "command": [
                        "exists x; split.",
                        "VernacExtend",
                        "f9266ddab0754060cc1803dfa28547707d7da7dd"
                    ]
                },
                {
                    "command": [
                        "cut (derive_pt id x (X2 x P) = 1).",
                        "VernacExtend",
                        "b104cb26cd7057ce9d06e674ef449b28437215d2"
                    ]
                },
                {
                    "command": [
                        "cut (derive_pt f x (X0 x P) = f' x).",
                        "VernacExtend",
                        "5bdc82c74d63d6ec7d60d21ddd9fed0239cb05e6"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite H4 in H3; rewrite H5 in H3; unfold id in H3; rewrite Rmult_1_r in H3; rewrite Rmult_comm; symmetry ; assumption.",
                        "VernacExtend",
                        "e0047ca2da3265a3bab55b7ba74d75c4dc93b986"
                    ]
                },
                {
                    "command": [
                        "apply derive_pt_eq_0; apply H0; elim P; intros; split; left; assumption.",
                        "VernacExtend",
                        "c287b6845a348d8890a864bcecc035043ff6ce2c"
                    ]
                },
                {
                    "command": [
                        "apply derive_pt_eq_0; apply derivable_pt_lim_id.",
                        "VernacExtend",
                        "e766ffecfb37180360d09c54b330cffeac6bb2a4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros; apply derivable_continuous_pt; apply X1; assumption.",
                        "VernacExtend",
                        "0126e0ec063a5d1e02bc82181690dd582ba9b211"
                    ]
                },
                {
                    "command": [
                        "intros; apply derivable_pt_id.",
                        "VernacExtend",
                        "938ad5252ca2e0b1fd31017c21bbeb8e37bb4503"
                    ]
                },
                {
                    "command": [
                        "intros; apply derivable_pt_id.",
                        "VernacExtend",
                        "938ad5252ca2e0b1fd31017c21bbeb8e37bb4503"
                    ]
                },
                {
                    "command": [
                        "intros; apply derivable_continuous_pt; apply X; assumption.",
                        "VernacExtend",
                        "7eceea50e72691ced4c133ab4bf8336e5c6362e0"
                    ]
                },
                {
                    "command": [
                        "intros; elim H1; intros; apply X; split; left; assumption.",
                        "VernacExtend",
                        "30d4952f7c950f3853e480cd3695b41336e293e0"
                    ]
                },
                {
                    "command": [
                        "intros; unfold derivable_pt; exists (f' c); apply H0; apply H1.",
                        "VernacExtend",
                        "a6797a61a44ac93ce4cd5aaee0464763e885facc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MVT_cor3",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "intros f f' a b H H0; assert (H1 : exists c : R, f b - f a = f' c * (b - a) /\\ a < c < b); [ apply MVT_cor2; [ apply H | intros; elim H1; intros; apply (H0 _ H2 H3) ] | elim H1; intros; exists x; elim H2; intros; elim H4; intros; split; [ left; assumption | split; [ left; assumption | rewrite <- H3; ring ] ] ].",
                        "VernacExtend",
                        "0942efbce55ab974d9eb17f5f9e7708bd7d3e729"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rolle",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "intros; assert (H2 : forall x:R, a < x < b -> derivable_pt id x).",
                        "VernacExtend",
                        "ee2517527b7129b16baa1e36120a5802fe90b629"
                    ]
                },
                {
                    "command": [
                        "intros; apply derivable_pt_id.",
                        "VernacExtend",
                        "938ad5252ca2e0b1fd31017c21bbeb8e37bb4503"
                    ]
                },
                {
                    "command": [
                        "assert (H3 := MVT f id a b pr H2 H0 H); assert (H4 : forall x:R, a <= x <= b -> continuity_pt id x).",
                        "VernacExtend",
                        "01f0c6347a9291acd27279e51096cb934c6e24f4"
                    ]
                },
                {
                    "command": [
                        "intros; apply derivable_continuous; apply derivable_id.",
                        "VernacExtend",
                        "6128d5d68bbd06bbad037e48530487a799f4a767"
                    ]
                },
                {
                    "command": [
                        "destruct (H3 H4) as (c & P & H6).",
                        "VernacExtend",
                        "c622b7a63093e2ebcf98a609f27aad23b9d43339"
                    ]
                },
                {
                    "command": [
                        "exists c; exists P; rewrite H1 in H6.",
                        "VernacExtend",
                        "3271cba293b7ae7b687a3a6ccb22edb177e6ee30"
                    ]
                },
                {
                    "command": [
                        "unfold id in H6; unfold Rminus in H6; rewrite Rplus_opp_r in H6.",
                        "VernacExtend",
                        "b6a8adf608315c7d12c6d40496b39c043cc6f77d"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l in H6; apply Rmult_eq_reg_l with (b - a); [ rewrite Rmult_0_r; apply H6 | apply Rminus_eq_contra; red; intro H7; rewrite H7 in H0; elim (Rlt_irrefl _ H0) ].",
                        "VernacExtend",
                        "f84aa5ef39175532e1ecdf810ec61450189892d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nonneg_derivative_1",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold increasing.",
                        "VernacExtend",
                        "9b37ec9d80b1868673e2f5b18ab08c8701fd0590"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (total_order_T x y) as [[H1| ->]|H1].",
                        "VernacExtend",
                        "95c351a3c34d1384cf190bfe7aa781881a8c10a2"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (- f x).",
                        "VernacExtend",
                        "b8e98b632b7c461e8cc3aa31596844af52dece6e"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_opp_l; rewrite Rplus_comm.",
                        "VernacExtend",
                        "1a72df3c93b7f44d6374ba7bef62c6ff40aadc7f"
                    ]
                },
                {
                    "command": [
                        "pose proof (MVT_cor1 f _ _ pr H1) as (c & H3 & H4).",
                        "VernacExtend",
                        "1ce0e5d383d67a717d1fba0a4edc7e811322fdb2"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus in H3.",
                        "VernacExtend",
                        "e4e67989aef496c4d96d632a24e0b77f66a410bb"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with x.",
                        "VernacExtend",
                        "622c49026c42ab907c2091be8aee4db81ba338ee"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; replace (x + (y + - x)) with y; [ assumption | ring ].",
                        "VernacExtend",
                        "39ebb6e90c8e254109b0d023cab4112dcd808915"
                    ]
                },
                {
                    "command": [
                        "right; reflexivity.",
                        "VernacExtend",
                        "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
                    ]
                },
                {
                    "command": [
                        "elim (Rlt_irrefl _ (Rle_lt_trans _ _ _ H0 H1)).",
                        "VernacExtend",
                        "95e146ca4795bc73995fc26efdca9a74e73581a7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nonpos_derivative_0",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "intros f pr H x; assert (H0 := H); unfold decreasing in H0; generalize (derivable_derive f x (pr x)); intro; elim H1; intros l H2.",
                        "VernacExtend",
                        "3f64319a35e4bbf3d6971bf2b28938621f367f6b"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; case (Rtotal_order l 0); intro.",
                        "VernacExtend",
                        "f71ec729ccdfe21fc89d29942bbef0773cc0ac16"
                    ]
                },
                {
                    "command": [
                        "left; assumption.",
                        "VernacExtend",
                        "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
                    ]
                },
                {
                    "command": [
                        "elim H3; intro.",
                        "VernacExtend",
                        "522e36e2853ff30db9e3e0abc7a128144a4e937c"
                    ]
                },
                {
                    "command": [
                        "right; assumption.",
                        "VernacExtend",
                        "4b9041b9a9d920fdce6d3e18e05e4d1a743614d5"
                    ]
                },
                {
                    "command": [
                        "generalize (derive_pt_eq_1 f x l (pr x) H2); intros; cut (0 < l / 2).",
                        "VernacExtend",
                        "de703f56919b2316a6c3c80aa1970e2de855d204"
                    ]
                },
                {
                    "command": [
                        "intro; elim (H5 (l / 2) H6); intros delta H7; cut (delta / 2 <> 0 /\\ 0 < delta / 2 /\\ Rabs (delta / 2) < delta).",
                        "VernacExtend",
                        "43175cbe651f464b9f23a41816939c8bf4b12855"
                    ]
                },
                {
                    "command": [
                        "intro; decompose [and] H8; intros; generalize (H7 (delta / 2) H9 H12); cut ((f (x + delta / 2) - f x) / (delta / 2) <= 0).",
                        "VernacExtend",
                        "52a03dde5057a7ed143a914e0a839b11427b9a92"
                    ]
                },
                {
                    "command": [
                        "intro; cut (0 < - ((f (x + delta / 2) - f x) / (delta / 2) - l)).",
                        "VernacExtend",
                        "87006688eadcb3bc5716f10bdc6a1201d5262f97"
                    ]
                },
                {
                    "command": [
                        "intro; unfold Rabs; case (Rcase_abs ((f (x + delta / 2) - f x) / (delta / 2) - l)) as [Hlt|Hge].",
                        "VernacExtend",
                        "584328107c55fcb026a415b908b1e87625572c9c"
                    ]
                },
                {
                    "command": [
                        "intros; generalize (Rplus_lt_compat_r (- l) (- ((f (x + delta / 2) - f x) / (delta / 2) - l)) (l / 2) H14); unfold Rminus.",
                        "VernacExtend",
                        "a36fd0a8b98a710d4defed8b8e977958943fc3d3"
                    ]
                },
                {
                    "command": [
                        "replace (l / 2 + - l) with (- (l / 2)).",
                        "VernacExtend",
                        "3ed95149f6409f44e386c9ba53a955626d2675bb"
                    ]
                },
                {
                    "command": [
                        "replace (- ((f (x + delta / 2) + - f x) / (delta / 2) + - l) + - l) with (- ((f (x + delta / 2) + - f x) / (delta / 2))).",
                        "VernacExtend",
                        "068375af083a71b7bc551b0b0dbe949e299c1361"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "generalize (Ropp_lt_gt_contravar (- ((f (x + delta / 2) + - f x) / (delta / 2))) (- (l / 2)) H15).",
                        "VernacExtend",
                        "4c4fa6da82227c413957b2f3e74418ee32a3ca64"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Ropp_involutive.",
                        "VernacExtend",
                        "b4df30e062d1d1926156fc16d220bac84725142f"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "generalize (Rlt_trans 0 (l / 2) ((f (x + delta / 2) - f x) / (delta / 2)) H6 H16); intro.",
                        "VernacExtend",
                        "644319e1dff8773302d8c99c66679f762dc64358"
                    ]
                },
                {
                    "command": [
                        "elim (Rlt_irrefl 0 (Rlt_le_trans 0 ((f (x + delta / 2) - f x) / (delta / 2)) 0 H17 H10)).",
                        "VernacExtend",
                        "5c9133eb02d6b7065f98c6ab3f14d9bc20da4024"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "pattern l at 3; rewrite double_var.",
                        "VernacExtend",
                        "d25254082c5ffe1044ba1bed05f1a15d645f0aa5"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (Ropp_ge_le_contravar ((f (x + delta / 2) - f x) / (delta / 2) - l) _ Hge).",
                        "VernacExtend",
                        "279e2db77f7ba2aff63b38b52153be1eb6b3d537"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_0.",
                        "VernacExtend",
                        "9db22f1ea38a12245c17fb1a0e93c5f55b418530"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim (Rlt_irrefl 0 (Rlt_le_trans 0 (- ((f (x + delta / 2) - f x) / (delta / 2) - l)) 0 H13 H15)).",
                        "VernacExtend",
                        "b05f79fec7dbc38660fb81ba8867a0f5c4571fe3"
                    ]
                },
                {
                    "command": [
                        "replace (- ((f (x + delta / 2) - f x) / (delta / 2) - l)) with ((f x - f (x + delta / 2)) / (delta / 2) + l).",
                        "VernacExtend",
                        "22bb9a919d092a5835c33fe57450e673b7c659d0"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus.",
                        "VernacExtend",
                        "be913ef3bb9103a3081d46d811769f83edb6f7a5"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_lt_0_compat.",
                        "VernacExtend",
                        "f52234f44384644fc6f21adef182d5c4067417f5"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_le_pos.",
                        "VernacExtend",
                        "9295075fac998a2bbf6d97082250072803a082bc"
                    ]
                },
                {
                    "command": [
                        "cut (x <= x + delta * / 2).",
                        "VernacExtend",
                        "19afe99b4dd833c0689a099556ed3668dd2b0bbf"
                    ]
                },
                {
                    "command": [
                        "intro; generalize (H0 x (x + delta * / 2) H13); intro; generalize (Rplus_le_compat_l (- f (x + delta / 2)) (f (x + delta / 2)) (f x) H14); rewrite Rplus_opp_l; rewrite Rplus_comm; intro; assumption.",
                        "VernacExtend",
                        "b09919c80c10c9692b4a5a389b4d5df65913b707"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1; rewrite <- (Rplus_0_r x); apply Rplus_le_compat_l; left; assumption.",
                        "VernacExtend",
                        "65711c3487505b5e7b1ee2746f7a5504ceb933c0"
                    ]
                },
                {
                    "command": [
                        "left; apply Rinv_0_lt_compat; assumption.",
                        "VernacExtend",
                        "2e3d876dd359094724551bd2f774f9c4a6bc3f60"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_minus_distr.",
                        "VernacExtend",
                        "03410ea29af67bdcfa7393931606c01ed23d7394"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus.",
                        "VernacExtend",
                        "be913ef3bb9103a3081d46d811769f83edb6f7a5"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rplus_comm l).",
                        "VernacExtend",
                        "dbba668978b03ba670013dd91b7d81eedaa8e76a"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv.",
                        "VernacExtend",
                        "d9820df68a5475147f48d29acf89824b27f71597"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_mult_distr_l_reverse.",
                        "VernacExtend",
                        "e7c61948f76e0a8897e51bfab935c33e66508906"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_plus_distr.",
                        "VernacExtend",
                        "0658bf5be897ad7cda1a0e2a2d30180316272135"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_involutive.",
                        "VernacExtend",
                        "ba0ab440a50f656f08837503f0228b68c9acdf87"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rplus_comm (f x)).",
                        "VernacExtend",
                        "e90ec36adff58e9df1b7b1c09c351a19b19bc054"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "replace ((f (x + delta / 2) - f x) / (delta / 2)) with (- ((f x - f (x + delta / 2)) / (delta / 2))).",
                        "VernacExtend",
                        "f881b4a235d8b69b48871b9827508f9a09fc9173"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0.",
                        "VernacExtend",
                        "9b57276282263b89d6671472ad672c5763b57b55"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_ge_le_contravar.",
                        "VernacExtend",
                        "2445c11f217e81db53e7f4c9cd6785fe138d34b0"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge.",
                        "VernacExtend",
                        "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_le_pos.",
                        "VernacExtend",
                        "9295075fac998a2bbf6d97082250072803a082bc"
                    ]
                },
                {
                    "command": [
                        "cut (x <= x + delta * / 2).",
                        "VernacExtend",
                        "19afe99b4dd833c0689a099556ed3668dd2b0bbf"
                    ]
                },
                {
                    "command": [
                        "intro; generalize (H0 x (x + delta * / 2) H10); intro.",
                        "VernacExtend",
                        "9908c7a1c4fb7d646c0264e69d0aeedd18d59638"
                    ]
                },
                {
                    "command": [
                        "generalize (Rplus_le_compat_l (- f (x + delta / 2)) (f (x + delta / 2)) (f x) H13); rewrite Rplus_opp_l; rewrite Rplus_comm; intro; assumption.",
                        "VernacExtend",
                        "833f40368608d521345993780356c1dec216eb0a"
                    ]
                },
                {
                    "command": [
                        "pattern x at 1; rewrite <- (Rplus_0_r x); apply Rplus_le_compat_l; left; assumption.",
                        "VernacExtend",
                        "65711c3487505b5e7b1ee2746f7a5504ceb933c0"
                    ]
                },
                {
                    "command": [
                        "left; apply Rinv_0_lt_compat; assumption.",
                        "VernacExtend",
                        "2e3d876dd359094724551bd2f774f9c4a6bc3f60"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite <- Ropp_mult_distr_l_reverse.",
                        "VernacExtend",
                        "b17e46c3ae31af73f2b5640aead7600b941fb5c9"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_minus_distr.",
                        "VernacExtend",
                        "03410ea29af67bdcfa7393931606c01ed23d7394"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply prod_neq_R0.",
                        "VernacExtend",
                        "bae86043f3acfd4aeb1f77f1138e1172ace3c7fa"
                    ]
                },
                {
                    "command": [
                        "generalize (cond_pos delta); intro; red; intro H9; rewrite H9 in H8; elim (Rlt_irrefl 0 H8).",
                        "VernacExtend",
                        "252265e60cb089b12f579766aa9cd19b92ff9fbf"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_neq_0_compat; discrR.",
                        "VernacExtend",
                        "c996ce35ba9924ff499f316d0fb3eaf573a9e988"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat; [ apply (cond_pos delta) | apply Rinv_0_lt_compat; prove_sup0 ].",
                        "VernacExtend",
                        "890260abc6df9bffcdd1734d1136fd85613241e8"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right.",
                        "VernacExtend",
                        "9b60731d6b608338747f09fec19f24d12baad022"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_reg_l with 2.",
                        "VernacExtend",
                        "f4c0b06c2efd971a65fcd955cb283b1e333171b1"
                    ]
                },
                {
                    "command": [
                        "prove_sup0.",
                        "VernacExtend",
                        "9681c23836ca7f82fee12028ab3f984ae6ec2935"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_comm (/ 2)); rewrite <- Rmult_assoc; rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "7c9a8333d70aa1f1e94bdb6f7bfc6755acfdb888"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l; rewrite double; pattern (pos delta) at 1; rewrite <- Rplus_0_r.",
                        "VernacExtend",
                        "39d0082b57aa779ac538d4258244297710d9046e"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l; apply (cond_pos delta).",
                        "VernacExtend",
                        "def4b5e6c5dd34c187b066aeaf8c3c36e8489fa0"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; unfold Rdiv; left; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c4f2e7293d14384eae88c8c36e42d68a770ffc02"
                    ]
                },
                {
                    "command": [
                        "apply (cond_pos delta).",
                        "VernacExtend",
                        "a9ac22f2c61b5439eba32b380f3a496ef53ea835"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "ee74bd033c1031a79ef440e1d41037d5c9648214"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat; [ apply H4 | apply Rinv_0_lt_compat; prove_sup0 ].",
                        "VernacExtend",
                        "6277e2d772bc4ad92a0a735c73b30ba7853b7d5a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "increasing_decreasing_opp",
            "line_nb": 232,
            "steps": [
                {
                    "command": [
                        "unfold increasing, decreasing, opp_fct; intros; generalize (H x y H0); intro; apply Ropp_ge_le_contravar; apply Rle_ge; assumption.",
                        "VernacExtend",
                        "3975ee61333c9948c07f84143aa9cec0b8aa271e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nonpos_derivative_1",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (forall h:R, - - f h = f h).",
                        "VernacExtend",
                        "a2f3de2b91591531cc8227aa18fc95a84ccb4082"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "generalize (increasing_decreasing_opp (- f)%F).",
                        "VernacExtend",
                        "0dac815034804ebf8ac40ebcebaabcc1e96c4c7a"
                    ]
                },
                {
                    "command": [
                        "unfold decreasing.",
                        "VernacExtend",
                        "92ff3d7f99ace38e3cc5149d0f01d99b55a5b18a"
                    ]
                },
                {
                    "command": [
                        "unfold opp_fct.",
                        "VernacExtend",
                        "4e63c1953428e7d557cffe0058417d26d5bb9bf7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (H0 x); rewrite <- (H0 y).",
                        "VernacExtend",
                        "cd52b397aff5ff3cebffdbe04247511e159179af"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "cut (forall x:R, 0 <= derive_pt (- f) x (derivable_opp f pr x)).",
                        "VernacExtend",
                        "a342b4c303c958196b587f7b0c5786161bba268a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (fun x:R => - f x) with (- f)%F; [ idtac | reflexivity ].",
                        "VernacExtend",
                        "5da2f688ddf8e54f65564d28d2aece4774b0cd53"
                    ]
                },
                {
                    "command": [
                        "apply (nonneg_derivative_1 (- f)%F (derivable_opp f pr) H3).",
                        "VernacExtend",
                        "93cf3481b10c7677483879f5947fcffb7de0c029"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (H3 := derive_pt_opp f x0 (pr x0)).",
                        "VernacExtend",
                        "01dba697fedabc62fc5e551cd41cc685a596ec2d"
                    ]
                },
                {
                    "command": [
                        "cut (derive_pt (- f) x0 (derivable_pt_opp f x0 (pr x0)) = derive_pt (- f) x0 (derivable_opp f pr x0)).",
                        "VernacExtend",
                        "2a2f2a694231d157238f3323d050de25aaf64c82"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H4.",
                        "VernacExtend",
                        "15801069338f53d2cf64b6951fc88c5758e631f8"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0; apply Ropp_ge_le_contravar; apply Rle_ge; apply (H x0).",
                        "VernacExtend",
                        "210bc5c8c68b8f40641f6475f682521b1ec59538"
                    ]
                },
                {
                    "command": [
                        "apply pr_nu.",
                        "VernacExtend",
                        "27d728315a307c47080f48762476ff3ac618b9c5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro; ring.",
                        "VernacExtend",
                        "a63cb55c0d6dc7f5f40d630fd18daddefae14d26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "positive_derivative",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold strict_increasing.",
                        "VernacExtend",
                        "c51a52678f385b9ce88636434fa341620c80f439"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with (- f x).",
                        "VernacExtend",
                        "696b73624761fd88e7b462bb79df9cec34cf0c30"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_opp_l; rewrite Rplus_comm.",
                        "VernacExtend",
                        "1a72df3c93b7f44d6374ba7bef62c6ff40aadc7f"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := MVT_cor1 f _ _ pr H0).",
                        "VernacExtend",
                        "9bffe36d668a30303a22216a91f9293883c334e7"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros.",
                        "VernacExtend",
                        "6b7bcf9d739b14ca3a09271e2c3493e16c5e2914"
                    ]
                },
                {
                    "command": [
                        "elim H2; intros.",
                        "VernacExtend",
                        "1fdc85439644114ac67a1ade25e79a4d8c3588d6"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus in H3.",
                        "VernacExtend",
                        "e4e67989aef496c4d96d632a24e0b77f66a410bb"
                    ]
                },
                {
                    "command": [
                        "rewrite H3.",
                        "VernacExtend",
                        "c5485dd62873b0ea9ab7d37c26265fb7eea7e9ba"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with x.",
                        "VernacExtend",
                        "f6abc10f7ad01cb714b4cff3f6e97f6bde56f912"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; replace (x + (y + - x)) with y; [ assumption | ring ].",
                        "VernacExtend",
                        "39ebb6e90c8e254109b0d023cab4112dcd808915"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "strictincreasing_strictdecreasing_opp",
            "line_nb": 276,
            "steps": [
                {
                    "command": [
                        "unfold strict_increasing, strict_decreasing, opp_fct; intros; generalize (H x y H0); intro; apply Ropp_lt_gt_contravar; assumption.",
                        "VernacExtend",
                        "9480a5eadf75b2a74ed28eaee7c4299a1f45f2f8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "negative_derivative",
            "line_nb": 279,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (forall h:R, - - f h = f h).",
                        "VernacExtend",
                        "a2f3de2b91591531cc8227aa18fc95a84ccb4082"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (strictincreasing_strictdecreasing_opp (- f)%F).",
                        "VernacExtend",
                        "867d2e3d90d85658010fe27ae91d0df3e071d484"
                    ]
                },
                {
                    "command": [
                        "unfold strict_decreasing, opp_fct.",
                        "VernacExtend",
                        "961def1cdfa1091acc6f358ff9f879f9030cbb5f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (H0 x).",
                        "VernacExtend",
                        "93c6f187af8c2ba6f176f5994a977dc58f977757"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (H0 y).",
                        "VernacExtend",
                        "449311ecb56fb33b439baafafe27bff0a83eff04"
                    ]
                },
                {
                    "command": [
                        "apply H1; [ idtac | assumption ].",
                        "VernacExtend",
                        "4d089e883863d3b8d6ff99b6bde51eed86c78c36"
                    ]
                },
                {
                    "command": [
                        "cut (forall x:R, 0 < derive_pt (- f) x (derivable_opp f pr x)).",
                        "VernacExtend",
                        "ef266531b2dafc6b182c3a914956dd314925612b"
                    ]
                },
                {
                    "command": [
                        "intros; eapply positive_derivative; apply H3.",
                        "VernacExtend",
                        "b64c349ac14da8c0fc26f1ff3606d10b5df788fe"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (H3 := derive_pt_opp f x0 (pr x0)).",
                        "VernacExtend",
                        "01dba697fedabc62fc5e551cd41cc685a596ec2d"
                    ]
                },
                {
                    "command": [
                        "cut (derive_pt (- f) x0 (derivable_pt_opp f x0 (pr x0)) = derive_pt (- f) x0 (derivable_opp f pr x0)).",
                        "VernacExtend",
                        "2a2f2a694231d157238f3323d050de25aaf64c82"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H4; rewrite H3.",
                        "VernacExtend",
                        "4e04639cdaa857bcef6dffe690e5416d4dbc1fd8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ropp_0; apply Ropp_lt_gt_contravar; apply (H x0).",
                        "VernacExtend",
                        "cf8134d8fabf62b76d5bf350a0990d35fe36375f"
                    ]
                },
                {
                    "command": [
                        "apply pr_nu.",
                        "VernacExtend",
                        "27d728315a307c47080f48762476ff3ac618b9c5"
                    ]
                },
                {
                    "command": [
                        "intro; ring.",
                        "VernacExtend",
                        "a63cb55c0d6dc7f5f40d630fd18daddefae14d26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "null_derivative_0",
            "line_nb": 300,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold constant in H.",
                        "VernacExtend",
                        "6f9df4d3e4f3444572e4bc4542d66c46ed55ef81"
                    ]
                },
                {
                    "command": [
                        "apply derive_pt_eq_0.",
                        "VernacExtend",
                        "51058b8a093c0f27b9e5415ebebae2ac17b3e5a3"
                    ]
                },
                {
                    "command": [
                        "intros; exists (mkposreal 1 Rlt_0_1); simpl; intros.",
                        "VernacExtend",
                        "40bb887090e9f00e0574e851411873dd59edfaa9"
                    ]
                },
                {
                    "command": [
                        "rewrite (H x (x + h)); unfold Rminus; unfold Rdiv; rewrite Rplus_opp_r; rewrite Rmult_0_l; rewrite Rplus_opp_r; rewrite Rabs_R0; assumption.",
                        "VernacExtend",
                        "4115cae095b453480cc997145dee1ae62cad5972"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "increasing_decreasing",
            "line_nb": 307,
            "steps": [
                {
                    "command": [
                        "unfold increasing, decreasing, constant; intros; case (Rtotal_order x y); intro.",
                        "VernacExtend",
                        "9d16523bd5a0605d1b5474a64c5c1271f7a20379"
                    ]
                },
                {
                    "command": [
                        "generalize (Rlt_le x y H1); intro; apply (Rle_antisym (f x) (f y) (H x y H2) (H0 x y H2)).",
                        "VernacExtend",
                        "8394de8943ff28b9dab62433b65ab3ebe62cc008"
                    ]
                },
                {
                    "command": [
                        "elim H1; intro.",
                        "VernacExtend",
                        "69e6dce0928c10bc8e91776963343c6dbf299832"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; reflexivity.",
                        "VernacExtend",
                        "9c790f3e50b805b4cc946f2fcb63d8cdc82863fa"
                    ]
                },
                {
                    "command": [
                        "generalize (Rlt_le y x H2); intro; symmetry ; apply (Rle_antisym (f y) (f x) (H y x H3) (H0 y x H3)).",
                        "VernacExtend",
                        "3951dd921b5c25fa88fb018a21273a078df92610"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "null_derivative_1",
            "line_nb": 314,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (forall x:R, derive_pt f x (pr x) <= 0).",
                        "VernacExtend",
                        "cd1b6ad0eeb09f15c12cc7087b2716dbf92204cb"
                    ]
                },
                {
                    "command": [
                        "cut (forall x:R, 0 <= derive_pt f x (pr x)).",
                        "VernacExtend",
                        "8b2478a1d292c938f2f841c0d8fc750921f3b5b8"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := nonneg_derivative_1 f pr H0).",
                        "VernacExtend",
                        "e8c1c0262ddbbe76a1a362fd151b559f736192c0"
                    ]
                },
                {
                    "command": [
                        "assert (H3 := nonpos_derivative_1 f pr H1).",
                        "VernacExtend",
                        "45721ab8a5d2ca3c55a3505040f85900f42fa385"
                    ]
                },
                {
                    "command": [
                        "apply increasing_decreasing; assumption.",
                        "VernacExtend",
                        "6bda90a99ce026e6fee33240fe20a4a3734ecad7"
                    ]
                },
                {
                    "command": [
                        "intro; right; symmetry ; apply (H x).",
                        "VernacExtend",
                        "6be6c391a423330e30a054824a8762db9d5593d7"
                    ]
                },
                {
                    "command": [
                        "intro; right; apply (H x).",
                        "VernacExtend",
                        "17537435d989d00a63ac19aaf686f8c329b42112"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derive_increasing_interv_ax",
            "line_nb": 325,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with (- f x).",
                        "VernacExtend",
                        "696b73624761fd88e7b462bb79df9cec34cf0c30"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_opp_l; rewrite Rplus_comm.",
                        "VernacExtend",
                        "1a72df3c93b7f44d6374ba7bef62c6ff40aadc7f"
                    ]
                },
                {
                    "command": [
                        "assert (H4 := MVT_cor1 f _ _ pr H3).",
                        "VernacExtend",
                        "4eb7279ec92531c510fbe5ffbdd0baae539af9c5"
                    ]
                },
                {
                    "command": [
                        "elim H4; intros.",
                        "VernacExtend",
                        "ef88f175449d4af46e0685700665ce0cdf3e5695"
                    ]
                },
                {
                    "command": [
                        "elim H5; intros.",
                        "VernacExtend",
                        "f57064d2371d46c709230830a90015bd814391ac"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus in H6.",
                        "VernacExtend",
                        "641049f82b5907f6225878bf4b148ab21bc7c751"
                    ]
                },
                {
                    "command": [
                        "rewrite H6.",
                        "VernacExtend",
                        "ff6a429844c59cba51300abb872460dbdbab812d"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "elim H7; intros.",
                        "VernacExtend",
                        "956dd7e65e2cd7d13be3c454bb1595163c16ef21"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros.",
                        "VernacExtend",
                        "6b7bcf9d739b14ca3a09271e2c3493e16c5e2914"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with x; assumption.",
                        "VernacExtend",
                        "04fc5f0e34bb831d7f7e5d7f4cd7373f03a09917"
                    ]
                },
                {
                    "command": [
                        "elim H2; intros.",
                        "VernacExtend",
                        "1fdc85439644114ac67a1ade25e79a4d8c3588d6"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with y; assumption.",
                        "VernacExtend",
                        "c2722fc36d73448250b34c6072fd30f0a8a96fb8"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with x.",
                        "VernacExtend",
                        "f6abc10f7ad01cb714b4cff3f6e97f6bde56f912"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; replace (x + (y + - x)) with y; [ assumption | ring ].",
                        "VernacExtend",
                        "39ebb6e90c8e254109b0d023cab4112dcd808915"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (- f x).",
                        "VernacExtend",
                        "b8e98b632b7c461e8cc3aa31596844af52dece6e"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_opp_l; rewrite Rplus_comm.",
                        "VernacExtend",
                        "1a72df3c93b7f44d6374ba7bef62c6ff40aadc7f"
                    ]
                },
                {
                    "command": [
                        "assert (H4 := MVT_cor1 f _ _ pr H3).",
                        "VernacExtend",
                        "4eb7279ec92531c510fbe5ffbdd0baae539af9c5"
                    ]
                },
                {
                    "command": [
                        "elim H4; intros.",
                        "VernacExtend",
                        "ef88f175449d4af46e0685700665ce0cdf3e5695"
                    ]
                },
                {
                    "command": [
                        "elim H5; intros.",
                        "VernacExtend",
                        "f57064d2371d46c709230830a90015bd814391ac"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus in H6.",
                        "VernacExtend",
                        "641049f82b5907f6225878bf4b148ab21bc7c751"
                    ]
                },
                {
                    "command": [
                        "rewrite H6.",
                        "VernacExtend",
                        "ff6a429844c59cba51300abb872460dbdbab812d"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_pos.",
                        "VernacExtend",
                        "e03207c3cef85471384dc0906485b056bc83a80a"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "elim H7; intros.",
                        "VernacExtend",
                        "956dd7e65e2cd7d13be3c454bb1595163c16ef21"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros.",
                        "VernacExtend",
                        "6b7bcf9d739b14ca3a09271e2c3493e16c5e2914"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with x; assumption.",
                        "VernacExtend",
                        "04fc5f0e34bb831d7f7e5d7f4cd7373f03a09917"
                    ]
                },
                {
                    "command": [
                        "elim H2; intros.",
                        "VernacExtend",
                        "1fdc85439644114ac67a1ade25e79a4d8c3588d6"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with y; assumption.",
                        "VernacExtend",
                        "c2722fc36d73448250b34c6072fd30f0a8a96fb8"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with x.",
                        "VernacExtend",
                        "622c49026c42ab907c2091be8aee4db81ba338ee"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; replace (x + (y + - x)) with y; [ left; assumption | ring ].",
                        "VernacExtend",
                        "4f6643abc02efe0af6e1337c1b48444ef3e67182"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derive_increasing_interv",
            "line_nb": 363,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (derive_increasing_interv_ax a b f pr H); intro.",
                        "VernacExtend",
                        "890eaf14d6be7b15eb45779c65d5d019af9b5b60"
                    ]
                },
                {
                    "command": [
                        "elim H4; intros H5 _; apply (H5 H0 x y H1 H2 H3).",
                        "VernacExtend",
                        "0dbe86c42d021e29ac4ce6e01e65de09c560fae6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derive_increasing_interv_var",
            "line_nb": 368,
            "steps": [
                {
                    "command": [
                        "intros a b f pr H H0 x y H1 H2 H3; generalize (derive_increasing_interv_ax a b f pr H); intro; elim H4; intros _ H5; apply (H5 H0 x y H1 H2 H3).",
                        "VernacExtend",
                        "0a8ad2c199260a08c41b182c7a5aad1f14b18fc8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "IAF",
            "line_nb": 371,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (total_order_T a b) as [[H1| -> ]|H1].",
                        "VernacExtend",
                        "f1e437238c2a7144656b50013658f922b2914559"
                    ]
                },
                {
                    "command": [
                        "pose proof (MVT_cor1 f _ _ pr H1) as (c & -> & H4).",
                        "VernacExtend",
                        "4a61b4348abcc84fab7526241be8cdb263a6bbc7"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- (Rmult_comm (b - a)).",
                        "VernacExtend",
                        "bbb1ca492fbdab6683d50da45beaa33767298e1e"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with a; rewrite Rplus_0_r.",
                        "VernacExtend",
                        "35ac637deb996c04104a901fc6b603ec41fc36d3"
                    ]
                },
                {
                    "command": [
                        "replace (a + (b - a)) with b; [ assumption | ring ].",
                        "VernacExtend",
                        "6bbbac1bf30af7868caf02d17e67cafe499c6dcb"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "elim H4; intros.",
                        "VernacExtend",
                        "ef88f175449d4af46e0685700665ce0cdf3e5695"
                    ]
                },
                {
                    "command": [
                        "split; left; assumption.",
                        "VernacExtend",
                        "fdfa29011e9dae8a9167d139e5179b516d7a668c"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus; do 2 rewrite Rplus_opp_r.",
                        "VernacExtend",
                        "f1d748bbd380138bc1168fe5ecd4f86c24c6665c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_r; right; reflexivity.",
                        "VernacExtend",
                        "bb98639eb10cc1f9e2e1f078a112d1c7297f3d56"
                    ]
                },
                {
                    "command": [
                        "elim (Rlt_irrefl _ (Rle_lt_trans _ _ _ H H1)).",
                        "VernacExtend",
                        "330cd7c5b5d6784aa7b9dda55cce635cbe4a53c0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "IAF_var",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (derivable (g - f)).",
                        "VernacExtend",
                        "dd014c4fa58b9aa477f281051f57f05aa3d8b1e2"
                    ]
                },
                {
                    "command": [
                        "intro X.",
                        "VernacExtend",
                        "c93bbb51ef8637991b4239865469e36d8e520337"
                    ]
                },
                {
                    "command": [
                        "cut (forall c:R, a <= c <= b -> derive_pt (g - f) c (X c) <= 0).",
                        "VernacExtend",
                        "d287cf59f6c3a6130b16791e8bf45666b959aaf1"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "assert (H2 := IAF (g - f)%F a b 0 X H H1).",
                        "VernacExtend",
                        "8e065a4655c37a96dc14f09c4fe169f26e493fb5"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_l in H2; unfold minus_fct in H2.",
                        "VernacExtend",
                        "33cec75677c2d47c3d13b2f2d72ce2f47d892588"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (- f b + f a).",
                        "VernacExtend",
                        "0fdcdc6bda22121dbc81195e4bad52f8ee4344e3"
                    ]
                },
                {
                    "command": [
                        "replace (- f b + f a + (f b - f a)) with 0; [ idtac | ring ].",
                        "VernacExtend",
                        "661e09f523d7b954fde16be37a0beffc1076b84d"
                    ]
                },
                {
                    "command": [
                        "replace (- f b + f a + (g b - g a)) with (g b - f b - (g a - f a)); [ apply H2 | ring ].",
                        "VernacExtend",
                        "17867779b51a97cb0b5cf3ed3679ae6d70779dc1"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (derive_pt (g - f) c (X c) = derive_pt (g - f) c (derivable_pt_minus _ _ _ (pr2 c) (pr1 c))).",
                        "VernacExtend",
                        "8682b73c7bf20ccb92dbd847474b6c73bcdd5a3b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "rewrite derive_pt_minus.",
                        "VernacExtend",
                        "7b5b7977d9cc568b30e4a6ba97f4178cfcc372af"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (derive_pt f c (pr1 c)).",
                        "VernacExtend",
                        "c9ebe4c76a8bfb2ef832128140de3b2620f74155"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r.",
                        "VernacExtend",
                        "d5c1fdd9d1c31f6ede268b5fbee697b051ea4fe2"
                    ]
                },
                {
                    "command": [
                        "replace (derive_pt f c (pr1 c) + (derive_pt g c (pr2 c) - derive_pt f c (pr1 c))) with (derive_pt g c (pr2 c)); [ idtac | ring ].",
                        "VernacExtend",
                        "fba7a3b3bf2173d6d565f5f0da54a4eca2d7db9c"
                    ]
                },
                {
                    "command": [
                        "apply H0; assumption.",
                        "VernacExtend",
                        "6b55086dea19d45e0fd04d897d6b583689aff105"
                    ]
                },
                {
                    "command": [
                        "apply pr_nu.",
                        "VernacExtend",
                        "27d728315a307c47080f48762476ff3ac618b9c5"
                    ]
                },
                {
                    "command": [
                        "apply derivable_minus; assumption.",
                        "VernacExtend",
                        "400859cbbb8976b981fa5ad0d8216739663b6e66"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "null_derivative_loc",
            "line_nb": 409,
            "steps": [
                {
                    "command": [
                        "intros; unfold constant_D_eq; intros; destruct (total_order_T a b) as [[Hlt|Heq]|Hgt].",
                        "VernacExtend",
                        "e3d1a6fb98c938d7340ae1bdb5a8e9774addad74"
                    ]
                },
                {
                    "command": [
                        "assert (H2 : forall y:R, a < y < x -> derivable_pt id y).",
                        "VernacExtend",
                        "e8046ffc85a265970038fbd8dd1b02cfb60a5073"
                    ]
                },
                {
                    "command": [
                        "intros; apply derivable_pt_id.",
                        "VernacExtend",
                        "938ad5252ca2e0b1fd31017c21bbeb8e37bb4503"
                    ]
                },
                {
                    "command": [
                        "assert (H3 : forall y:R, a <= y <= x -> continuity_pt id y).",
                        "VernacExtend",
                        "c8950df58356c548751b3429904b1d60815d4280"
                    ]
                },
                {
                    "command": [
                        "intros; apply derivable_continuous; apply derivable_id.",
                        "VernacExtend",
                        "6128d5d68bbd06bbad037e48530487a799f4a767"
                    ]
                },
                {
                    "command": [
                        "assert (H4 : forall y:R, a < y < x -> derivable_pt f y).",
                        "VernacExtend",
                        "feb267d79fe33cd53843d888153590834a1a72cc"
                    ]
                },
                {
                    "command": [
                        "intros; apply pr; elim H4; intros; split.",
                        "VernacExtend",
                        "be056280be3172f677f29370bdd914e8bf9c3bad"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros; apply Rlt_le_trans with x; assumption.",
                        "VernacExtend",
                        "e8a928fc1b312e0197222a72646251511bfb78fe"
                    ]
                },
                {
                    "command": [
                        "assert (H5 : forall y:R, a <= y <= x -> continuity_pt f y).",
                        "VernacExtend",
                        "655f684d50683bd1dd593cad7f325759e27aaea5"
                    ]
                },
                {
                    "command": [
                        "intros; apply H; elim H5; intros; split.",
                        "VernacExtend",
                        "297d823c8d21ce2b5c129b5c122fa98519b0fdc8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros; apply Rle_trans with x; assumption.",
                        "VernacExtend",
                        "7ed257b18385a1a89aebd54f52d9a35fbe576367"
                    ]
                },
                {
                    "command": [
                        "elim H1; clear H1; intros; elim H1; clear H1; intro.",
                        "VernacExtend",
                        "43dde522c3a4b53da7c6aec976791a32c4bfe6ad"
                    ]
                },
                {
                    "command": [
                        "assert (H7 := MVT f id a x H4 H2 H1 H5 H3).",
                        "VernacExtend",
                        "cf400d55cbed742e2069983ca2adbc0f3f7ef863"
                    ]
                },
                {
                    "command": [
                        "destruct H7 as (c & P & H9).",
                        "VernacExtend",
                        "6cc3ab0e5e85c9b2f5452c8e9d0f36d698f56aff"
                    ]
                },
                {
                    "command": [
                        "assert (H10 : a < c < b).",
                        "VernacExtend",
                        "94938f12d4ddcc78b3dbf4b2db8cbc0260a449b7"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply P.",
                        "VernacExtend",
                        "77ec7a77c147bdc26d1c81d5a9f0d33da7fe6a48"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with x; [apply P|assumption].",
                        "VernacExtend",
                        "aa7afa5e438e131fea52577de98d0f3b472d9036"
                    ]
                },
                {
                    "command": [
                        "assert (H11 : derive_pt f c (H4 c P) = 0).",
                        "VernacExtend",
                        "4253ca2c728cdaf301dc09354219533b3a32695a"
                    ]
                },
                {
                    "command": [
                        "replace (derive_pt f c (H4 c P)) with (derive_pt f c (pr c H10)); [ apply H0 | apply pr_nu ].",
                        "VernacExtend",
                        "d29328f10d659cc05c88b9fff2de9a365994fd4e"
                    ]
                },
                {
                    "command": [
                        "assert (H12 : derive_pt id c (H2 c P) = 1).",
                        "VernacExtend",
                        "3f84e32d7036efc42b2ecfac89455bc63719f823"
                    ]
                },
                {
                    "command": [
                        "apply derive_pt_eq_0; apply derivable_pt_lim_id.",
                        "VernacExtend",
                        "e766ffecfb37180360d09c54b330cffeac6bb2a4"
                    ]
                },
                {
                    "command": [
                        "rewrite H11 in H9; rewrite H12 in H9; rewrite Rmult_0_r in H9; rewrite Rmult_1_r in H9; apply Rminus_diag_uniq; symmetry ; assumption.",
                        "VernacExtend",
                        "baacd4b9d1a6b6f85bf79891616b8300d172d209"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; reflexivity.",
                        "VernacExtend",
                        "78cd8a23170465d8fbd1f52e805fd4772133410f"
                    ]
                },
                {
                    "command": [
                        "assert (H2 : x = a).",
                        "VernacExtend",
                        "aef13442e01260e48d825188237fbce0a8469227"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Heq in H1; elim H1; intros; apply Rle_antisym; assumption.",
                        "VernacExtend",
                        "d8200d439594df392af0a2004a4732ecc48f8f41"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; reflexivity.",
                        "VernacExtend",
                        "9c790f3e50b805b4cc946f2fcb63d8cdc82863fa"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros; elim (Rlt_irrefl _ (Rle_lt_trans _ _ _ (Rle_trans _ _ _ H2 H3) Hgt)).",
                        "VernacExtend",
                        "188756c8e09ed3827eb8d76def4ce90b07a59299"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "antiderivative_Ucte",
            "line_nb": 441,
            "steps": [
                {
                    "command": [
                        "unfold antiderivative; intros; elim H; clear H; intros; elim H0; clear H0; intros H0 _; exists (g1 a - g2 a); intros; assert (H3 : forall x:R, a <= x <= b -> derivable_pt g1 x).",
                        "VernacExtend",
                        "fcdc6a7a92aabd2a15de82a0eac5f5b7bd7ec1b8"
                    ]
                },
                {
                    "command": [
                        "intros; unfold derivable_pt; exists (f x0); elim (H x0 H3); intros; eapply derive_pt_eq_1; symmetry ; apply H4.",
                        "VernacExtend",
                        "563192e5cfc3906d9307f168cffca8b3b1df5ff7"
                    ]
                },
                {
                    "command": [
                        "assert (H4 : forall x:R, a <= x <= b -> derivable_pt g2 x).",
                        "VernacExtend",
                        "0f6521bce9d345e71245edfb1c1050fad2dbf90a"
                    ]
                },
                {
                    "command": [
                        "intros; unfold derivable_pt; exists (f x0); elim (H0 x0 H4); intros; eapply derive_pt_eq_1; symmetry ; apply H5.",
                        "VernacExtend",
                        "43e20908a2a6072be20502ee020af7cf3c0c071c"
                    ]
                },
                {
                    "command": [
                        "assert (H5 : forall x:R, a < x < b -> derivable_pt (g1 - g2) x).",
                        "VernacExtend",
                        "ce34694102a41bfbbadc7d17a347e3a19f4485ee"
                    ]
                },
                {
                    "command": [
                        "intros; elim H5; intros; apply derivable_pt_minus; [ apply H3; split; left; assumption | apply H4; split; left; assumption ].",
                        "VernacExtend",
                        "d37d6e53180cb693ce5c6c68946ea8341d31ef1b"
                    ]
                },
                {
                    "command": [
                        "assert (H6 : forall x:R, a <= x <= b -> continuity_pt (g1 - g2) x).",
                        "VernacExtend",
                        "fb2e04b8004c2f69600316d213ed95c4dc9d7ef9"
                    ]
                },
                {
                    "command": [
                        "intros; apply derivable_continuous_pt; apply derivable_pt_minus; [ apply H3 | apply H4 ]; assumption.",
                        "VernacExtend",
                        "87f9f8aa5951751a45a0ab8a989d73dced09c8d3"
                    ]
                },
                {
                    "command": [
                        "assert (H7 : forall (x:R) (P:a < x < b), derive_pt (g1 - g2) x (H5 x P) = 0).",
                        "VernacExtend",
                        "e5fda7c668fd389a557ce8bfa3f06c8634d91091"
                    ]
                },
                {
                    "command": [
                        "intros; elim P; intros; apply derive_pt_eq_0; replace 0 with (f x0 - f x0); [ idtac | ring ].",
                        "VernacExtend",
                        "f2075d6b6c56ba6689666ce13a163a35bcd136c5"
                    ]
                },
                {
                    "command": [
                        "assert (H9 : a <= x0 <= b).",
                        "VernacExtend",
                        "5fc963368d437fc47c75a178dc668ec1b42ae9cd"
                    ]
                },
                {
                    "command": [
                        "split; left; assumption.",
                        "VernacExtend",
                        "fdfa29011e9dae8a9167d139e5179b516d7a668c"
                    ]
                },
                {
                    "command": [
                        "apply derivable_pt_lim_minus; [ elim (H _ H9) | elim (H0 _ H9) ]; intros; eapply derive_pt_eq_1; symmetry ; apply H10.",
                        "VernacExtend",
                        "0b154d86b68c6145a1e2334d14cc1b107dd56fac"
                    ]
                },
                {
                    "command": [
                        "assert (H8 := null_derivative_loc (g1 - g2)%F a b H5 H6 H7); unfold constant_D_eq in H8; assert (H9 := H8 _ H2); unfold minus_fct in H9; rewrite <- H9; ring.",
                        "VernacExtend",
                        "4da0132643ac33b6be486e2ae71602b6b501f610"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MVT_abs",
            "line_nb": 457,
            "steps": [
                {
                    "command": [
                        "intros f f' a b.",
                        "VernacExtend",
                        "d0906bbfe7e0fae8839274b4300cba8c88473be3"
                    ]
                },
                {
                    "command": [
                        "destruct (Rle_dec a b) as [aleb | blta].",
                        "VernacExtend",
                        "a9dd12174ddf5011ba49454d9177003b45011686"
                    ]
                },
                {
                    "command": [
                        "destruct (Req_dec a b) as [ab | anb].",
                        "VernacExtend",
                        "a5fa72f3986e1d45f4d2aabbf9f6f8a39a6d84fc"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus; intros _; exists a; split.",
                        "VernacExtend",
                        "46d052d169deb8b6be040c2e991c77fef9af6a4d"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- ab, !Rplus_opp_r, Rabs_R0, Rmult_0_r.",
                        "VernacExtend",
                        "b0ee984aa17397fbe324a31cca22f18ae8740b5e"
                    ]
                },
                {
                    "command": [
                        "split;[apply Rmin_l | apply Rmax_l].",
                        "VernacExtend",
                        "5e7b9c459c91530b5c5bd99571c165a8390b70ee"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmax_right, Rmin_left; auto; intros derv.",
                        "VernacExtend",
                        "e7437eeed91c943710d5daff591be9bfccacbad3"
                    ]
                },
                {
                    "command": [
                        "destruct (MVT_cor2 f f' a b) as [c [hc intc]]; [destruct aleb;[assumption | contradiction] | apply derv | ].",
                        "VernacExtend",
                        "4663496de18ee50f321c13e5986240cfa8a368c8"
                    ]
                },
                {
                    "command": [
                        "exists c; rewrite hc, Rabs_mult;split; [reflexivity | unfold Rle; tauto].",
                        "VernacExtend",
                        "b7274b4563ace854c8414f605bdeb687086e1425"
                    ]
                },
                {
                    "command": [
                        "assert (b < a) by (apply Rnot_le_gt; assumption).",
                        "VernacExtend",
                        "ecb36126e1435003467ea31cbb69068e3dc4cfe9"
                    ]
                },
                {
                    "command": [
                        "assert (b <= a) by (apply Rlt_le; assumption).",
                        "VernacExtend",
                        "1b752a4a8898a5822999c7f58b71b4789d6a91fb"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmax_left, Rmin_right; try assumption; intros derv.",
                        "VernacExtend",
                        "88905f656979cc4fcc2ac7080b062035bd32cfe9"
                    ]
                },
                {
                    "command": [
                        "destruct (MVT_cor2 f f' b a) as [c [hc intc]]; [assumption | apply derv | ].",
                        "VernacExtend",
                        "6bd3336e80307dd620b9507fe4b8a79f379a1fe1"
                    ]
                },
                {
                    "command": [
                        "exists c; rewrite <- Rabs_Ropp, Ropp_minus_distr, hc, Rabs_mult.",
                        "VernacExtend",
                        "79dcce9d4e50145469ee3bfa26491b8669fde24c"
                    ]
                },
                {
                    "command": [
                        "split;[now rewrite <- (Rabs_Ropp (b - a)), Ropp_minus_distr| unfold Rle; tauto].",
                        "VernacExtend",
                        "d64d31626693e994cdda829673fdbe90ad466e01"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}