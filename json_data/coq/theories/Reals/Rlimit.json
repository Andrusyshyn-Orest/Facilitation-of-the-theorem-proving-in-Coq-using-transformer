{
    "filename": "theories/Reals/Rlimit.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Rbase.",
            "VernacRequire",
            "c0a8d81b170d4ed8309a8632a3cac35f6cba016a"
        ],
        [
            "Require Import Rfunctions.",
            "VernacRequire",
            "e0ba64ca9fd07e0fc91c59b7bf007fb29a662a86"
        ],
        [
            "Require Import Lra.",
            "VernacRequire",
            "6dd90563c90485cd5a8a8b957af14c96d3b4cbc1"
        ],
        [
            "Local Open Scope R_scope.",
            "VernacOpenCloseScope",
            "b005c72bb3303e031b42be04be04c87c005faa38"
        ],
        [
            "Lemma eps2_Rgt_R0 : forall eps:R, eps > 0 -> eps * / 2 > 0.",
            "VernacStartTheoremProof",
            "1d7b794753c7ae3f2b623f3499a45d44d6fe71fd"
        ],
        [
            "intros; lra.",
            "VernacExtend",
            "449a153f406381cfb8ab107f551a2c789b996417"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eps2 : forall eps:R, eps * / 2 + eps * / 2 = eps.",
            "VernacStartTheoremProof",
            "8a099b11bd6fca3dafd5701ee682a97ebb2414b1"
        ],
        [
            "intro esp.",
            "VernacExtend",
            "44a252ca08abd075bc73038af20947686a74d873"
        ],
        [
            "apply eq_sym, double_var.",
            "VernacExtend",
            "a896ef7eb889d055ecf9c346d836b101f7121d88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eps4 : forall eps:R, eps * / (2 + 2) + eps * / (2 + 2) = eps * / 2.",
            "VernacStartTheoremProof",
            "73f386b4f25ea90949ddd1863a25886b58a41fd9"
        ],
        [
            "intro eps.",
            "VernacExtend",
            "b42d0ea9456b250f48ba89774547c32f3d7b0434"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rlt_eps2_eps : forall eps:R, eps > 0 -> eps * / 2 < eps.",
            "VernacStartTheoremProof",
            "cbe01034e0c9f9eba4fbb30af2a74a62b535bd94"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rlt_eps4_eps : forall eps:R, eps > 0 -> eps * / (2 + 2) < eps.",
            "VernacStartTheoremProof",
            "f664990fdcdb5d4e47555c6d36c5763089eb9b64"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "lra.",
            "VernacExtend",
            "c37bca18aec699b6843eab75e25df2491e3b9848"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma prop_eps : forall r:R, (forall eps:R, eps > 0 -> r < eps) -> r <= 0.",
            "VernacStartTheoremProof",
            "6aa70aca53e2e521eb7e26f428ed8beead2bc170"
        ],
        [
            "intros; elim (Rtotal_order r 0); intro.",
            "VernacExtend",
            "473616a04d6e6020479965611446757901397f46"
        ],
        [
            "apply Rlt_le; assumption.",
            "VernacExtend",
            "6ea46b5e4ad6d15cd718025b7aa100abf346a511"
        ],
        [
            "elim H0; intro.",
            "VernacExtend",
            "8b90d3170291d75c22593a28bbba0a2c88c6fd14"
        ],
        [
            "apply Req_le; assumption.",
            "VernacExtend",
            "e22c9fa8ec81a5958ba47788878537f1455e7d75"
        ],
        [
            "clear H0; generalize (H r H1); intro; generalize (Rlt_irrefl r); intro; exfalso; auto.",
            "VernacExtend",
            "4d9c61ee7b202b5a83436172ab0b9d24574f0078"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mul_factor (l l':R) := / (1 + (Rabs l + Rabs l')).",
            "VernacDefinition",
            "f3877cdedff8e09999ddb7f5e94ce7dc63fffdda"
        ],
        [
            "Lemma mul_factor_wd : forall l l':R, 1 + (Rabs l + Rabs l') <> 0.",
            "VernacStartTheoremProof",
            "65423df69a39b6d01e823ec34bfd62ab6d7105d7"
        ],
        [
            "intros; rewrite (Rplus_comm 1 (Rabs l + Rabs l')); apply tech_Rplus.",
            "VernacExtend",
            "931b33545f7f68b8bddfe14b6f36e76966b32b00"
        ],
        [
            "cut (Rabs (l + l') <= Rabs l + Rabs l').",
            "VernacExtend",
            "7571388ddb727ed6b8cd9f721cb9309661f3df10"
        ],
        [
            "cut (0 <= Rabs (l + l')).",
            "VernacExtend",
            "300b919d26838719e2faca8eebeb4f664a744b27"
        ],
        [
            "exact (Rle_trans _ _ _).",
            "VernacExtend",
            "e61e713d75bf32f59476495ff406222777deab13"
        ],
        [
            "exact (Rabs_pos (l + l')).",
            "VernacExtend",
            "3259039746ce5aa05139b874b253e19a2912368b"
        ],
        [
            "exact (Rabs_triang _ _).",
            "VernacExtend",
            "72c4e464bade3a647b678c1b89eeb3de8842c86a"
        ],
        [
            "exact Rlt_0_1.",
            "VernacExtend",
            "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_factor_gt : forall eps l l':R, eps > 0 -> eps * mul_factor l l' > 0.",
            "VernacStartTheoremProof",
            "d580321fbb2bb0ecef31edb5e486af97e9301a1d"
        ],
        [
            "intros; unfold Rgt; rewrite <- (Rmult_0_r eps); apply Rmult_lt_compat_l.",
            "VernacExtend",
            "622224dad2513c6e0dba21394a4b7858dbb7029d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold mul_factor; apply Rinv_0_lt_compat; cut (1 <= 1 + (Rabs l + Rabs l')).",
            "VernacExtend",
            "3ec250d0ff3f49a2af9ca15dd424c88882fc0225"
        ],
        [
            "cut (0 < 1).",
            "VernacExtend",
            "60a163697ea9261acfc067aafc0d7b9a807dcd64"
        ],
        [
            "exact (Rlt_le_trans _ _ _).",
            "VernacExtend",
            "15771f7c30133e3a0c0e3da042cc6a65cdd17cd5"
        ],
        [
            "exact Rlt_0_1.",
            "VernacExtend",
            "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
        ],
        [
            "replace (1 <= 1 + (Rabs l + Rabs l')) with (1 + 0 <= 1 + (Rabs l + Rabs l')).",
            "VernacExtend",
            "e55c8f955e2311860a055fc4e5d38e8fc889c560"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "cut (Rabs (l + l') <= Rabs l + Rabs l').",
            "VernacExtend",
            "7571388ddb727ed6b8cd9f721cb9309661f3df10"
        ],
        [
            "cut (0 <= Rabs (l + l')).",
            "VernacExtend",
            "300b919d26838719e2faca8eebeb4f664a744b27"
        ],
        [
            "exact (Rle_trans _ _ _).",
            "VernacExtend",
            "e61e713d75bf32f59476495ff406222777deab13"
        ],
        [
            "exact (Rabs_pos _).",
            "VernacExtend",
            "00122d7c76080e32f423a5e3209eeaeccf6408a4"
        ],
        [
            "exact (Rabs_triang _ _).",
            "VernacExtend",
            "72c4e464bade3a647b678c1b89eeb3de8842c86a"
        ],
        [
            "rewrite (proj1 (Rplus_ne 1)); trivial.",
            "VernacExtend",
            "6cb6b2f22f935dc420857f3df8beffc4e44acb2e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mul_factor_gt_f : forall eps l l':R, eps > 0 -> Rmin 1 (eps * mul_factor l l') > 0.",
            "VernacStartTheoremProof",
            "1ca5dbe906ec89d8ed100f319a8b8dac3ad1f258"
        ],
        [
            "intros; apply Rmin_Rgt_r; split.",
            "VernacExtend",
            "cd2e630bea0619793156ff1d50b8ce4c0f96d099"
        ],
        [
            "exact Rlt_0_1.",
            "VernacExtend",
            "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
        ],
        [
            "exact (mul_factor_gt eps l l' H).",
            "VernacExtend",
            "067eaceeb5df818e4a50efac4aa6bc6b25a82012"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Record Metric_Space : Type := {Base : Type; dist : Base -> Base -> R; dist_pos : forall x y:Base, dist x y >= 0; dist_sym : forall x y:Base, dist x y = dist y x; dist_refl : forall x y:Base, dist x y = 0 <-> x = y; dist_tri : forall x y z:Base, dist x y <= dist x z + dist z y}.",
            "VernacInductive",
            "102defef11e081cb5e3913a31a750a042638434c"
        ],
        [
            "Definition limit_in (X X':Metric_Space) (f:Base X -> Base X') (D:Base X -> Prop) (x0:Base X) (l:Base X') := forall eps:R, eps > 0 -> exists alp : R, alp > 0 /\\ (forall x:Base X, D x /\\ X.(dist) x x0 < alp -> X'.(dist) (f x) l < eps).",
            "VernacDefinition",
            "5c99c44d3821e598efb8231a939610198e257f83"
        ],
        [
            "Definition R_met : Metric_Space := Build_Metric_Space R R_dist R_dist_pos R_dist_sym R_dist_refl R_dist_tri.",
            "VernacDefinition",
            "9bb927335568c20fbbfcd99133e9fd82e0f788cc"
        ],
        [
            "Declare Equivalent Keys dist R_dist.",
            "VernacExtend",
            "adc47c2373a88f19598fb4b5a9aa28eaca3d10bb"
        ],
        [
            "Definition Dgf (Df Dg:R -> Prop) (f:R -> R) (x:R) := Df x /\\ Dg (f x).",
            "VernacDefinition",
            "ea695edbf605ba4e5c80a2a9d907f8a77970a3a0"
        ],
        [
            "Definition limit1_in (f:R -> R) (D:R -> Prop) (l x0:R) : Prop := limit_in R_met R_met f D x0 l.",
            "VernacDefinition",
            "9ae1df6db5ee9eb05eef27fc13d5a876f1179ab7"
        ],
        [
            "Lemma tech_limit : forall (f:R -> R) (D:R -> Prop) (l x0:R), D x0 -> limit1_in f D l x0 -> l = f x0.",
            "VernacStartTheoremProof",
            "ae63b2479c98fb24a1076c4ff1bc1902f6d78f5b"
        ],
        [
            "intros f D l x0 H H0.",
            "VernacExtend",
            "3d2849fcd86f763c1ab46496810f092e0e9ae158"
        ],
        [
            "case (Rabs_pos (f x0 - l)); intros H1.",
            "VernacExtend",
            "544bf4cbae0c281e64df344458d89f7c3123f1b9"
        ],
        [
            "absurd (R_met.(@dist) (f x0) l < R_met.(@dist) (f x0) l).",
            "VernacExtend",
            "c31716bcc50924ada3bf3ace4c42b2add673cba6"
        ],
        [
            "apply Rlt_irrefl.",
            "VernacExtend",
            "2987b5b4da9cd6a04e9f73b1f733706ed6db7363"
        ],
        [
            "case (H0 (R_met.(@dist) (f x0) l)); auto.",
            "VernacExtend",
            "f84acfb1b070b8cec2c40d555cafd41e5986106e"
        ],
        [
            "intros alpha1 [H2 H3]; apply H3; auto; split; auto.",
            "VernacExtend",
            "1628400bdfc372d5c17f141f21ac2e52e3997395"
        ],
        [
            "case (dist_refl R_met x0 x0); intros Hr1 Hr2; rewrite Hr2; auto.",
            "VernacExtend",
            "ae5be49ed131fcf892b76307df3e2cc0bae41872"
        ],
        [
            "case (dist_refl R_met (f x0) l); intros Hr1 Hr2; symmetry; auto.",
            "VernacExtend",
            "c3222875d43b113cda0cf70dd434d1fbc3557e18"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_limit_contr : forall (f:R -> R) (D:R -> Prop) (l x0:R), D x0 -> l <> f x0 -> ~ limit1_in f D l x0.",
            "VernacStartTheoremProof",
            "a7a07286a32b577c05704153874f215a64457666"
        ],
        [
            "intros; generalize (tech_limit f D l x0); tauto.",
            "VernacExtend",
            "efc64eb70b8828a3b48f6f1da4245732ff3d4bd2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lim_x : forall (D:R -> Prop) (x0:R), limit1_in (fun x:R => x) D x0 x0.",
            "VernacStartTheoremProof",
            "11b9919dd4bf29c2662cf991e00cadf5f9d38d35"
        ],
        [
            "unfold limit1_in; unfold limit_in; simpl; intros; split with eps; split; auto; intros; elim H0; intros; auto.",
            "VernacExtend",
            "53ae70d64849dab27fc996f84e9c14564e0412b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limit_plus : forall (f g:R -> R) (D:R -> Prop) (l l' x0:R), limit1_in f D l x0 -> limit1_in g D l' x0 -> limit1_in (fun x:R => f x + g x) D (l + l') x0.",
            "VernacStartTheoremProof",
            "2fa0603a659bf67fea56ce115b7f2f7c9a99b76e"
        ],
        [
            "intros; unfold limit1_in; unfold limit_in; simpl; intros; elim (H (eps * / 2) (eps2_Rgt_R0 eps H1)); elim (H0 (eps * / 2) (eps2_Rgt_R0 eps H1)); simpl; clear H H0; intros; elim H; elim H0; clear H H0; intros; split with (Rmin x1 x); split.",
            "VernacExtend",
            "8641d8741f110fa2582337685702c35ea6e2c274"
        ],
        [
            "exact (Rmin_Rgt_r x1 x 0 (conj H H2)).",
            "VernacExtend",
            "e99db27d163ad71d8faaf334a98c7e3b5a529fa9"
        ],
        [
            "intros; elim H4; clear H4; intros; cut (R_dist (f x2) l + R_dist (g x2) l' < eps).",
            "VernacExtend",
            "76f2c997cccb4c3df97a95e8aff76df6c96f0a26"
        ],
        [
            "cut (R_dist (f x2 + g x2) (l + l') <= R_dist (f x2) l + R_dist (g x2) l').",
            "VernacExtend",
            "2d6b1b9685383c3f83206010af4d9653a69fadbf"
        ],
        [
            "exact (Rle_lt_trans _ _ _).",
            "VernacExtend",
            "6f670bc776343411ecf689b97a5561e39ef26817"
        ],
        [
            "exact (R_dist_plus _ _ _ _).",
            "VernacExtend",
            "d0a4607fb9803eb217f7c0698a1fe2e6adbb0de4"
        ],
        [
            "elim (Rmin_Rgt_l x1 x (R_dist x2 x0) H5); clear H5; intros.",
            "VernacExtend",
            "fd66860212ad22974dbace29115e6caf8c5ef803"
        ],
        [
            "generalize (H3 x2 (conj H4 H6)); generalize (H0 x2 (conj H4 H5)); intros; replace eps with (eps * / 2 + eps * / 2).",
            "VernacExtend",
            "3a6f655f064b68294b2ec252c4b68ec58c087600"
        ],
        [
            "exact (Rplus_lt_compat _ _ _ _ H7 H8).",
            "VernacExtend",
            "dab89028a803cfc34c1ecfb56daa93f27d297267"
        ],
        [
            "exact (eps2 eps).",
            "VernacExtend",
            "d41ea4c667c49b1b4f6d0e4615f09c5ac6c38e90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limit_Ropp : forall (f:R -> R) (D:R -> Prop) (l x0:R), limit1_in f D l x0 -> limit1_in (fun x:R => - f x) D (- l) x0.",
            "VernacStartTheoremProof",
            "7307e23bb8aecafc476e4eac01ba2cac6aba9253"
        ],
        [
            "unfold limit1_in; unfold limit_in; simpl; intros; elim (H eps H0); clear H; intros; elim H; clear H; intros; split with x; split; auto; intros; generalize (H1 x1 H2); clear H1; intro; unfold R_dist; unfold Rminus; rewrite (Ropp_involutive l); rewrite (Rplus_comm (- f x1) l); fold (l - f x1); fold (R_dist l (f x1)); rewrite R_dist_sym; assumption.",
            "VernacExtend",
            "4af798edfcd6c185223d07d30c764dd8129b475e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limit_minus : forall (f g:R -> R) (D:R -> Prop) (l l' x0:R), limit1_in f D l x0 -> limit1_in g D l' x0 -> limit1_in (fun x:R => f x - g x) D (l - l') x0.",
            "VernacStartTheoremProof",
            "f9ba5a81ef6c8a1ac015ca097a0946da19a76301"
        ],
        [
            "intros; unfold Rminus; generalize (limit_Ropp g D l' x0 H0); intro; exact (limit_plus f (fun x:R => - g x) D l (- l') x0 H H1).",
            "VernacExtend",
            "b1aa89f5eb23050fe6f26629286cc86c835cb740"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limit_free : forall (f:R -> R) (D:R -> Prop) (x x0:R), limit1_in (fun h:R => f x) D (f x) x0.",
            "VernacStartTheoremProof",
            "54e894ba11ceecba0f681d007950baa8efe9b791"
        ],
        [
            "unfold limit1_in; unfold limit_in; simpl; intros; split with eps; split; auto; intros; elim (R_dist_refl (f x) (f x)); intros a b; rewrite (b (eq_refl (f x))); unfold Rgt in H; assumption.",
            "VernacExtend",
            "874108014b62d6a7022654bcd3d4932305cd6675"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limit_mul : forall (f g:R -> R) (D:R -> Prop) (l l' x0:R), limit1_in f D l x0 -> limit1_in g D l' x0 -> limit1_in (fun x:R => f x * g x) D (l * l') x0.",
            "VernacStartTheoremProof",
            "5fd5772f5be6056c3551f9cd7ce90e4f717a41eb"
        ],
        [
            "intros; unfold limit1_in; unfold limit_in; simpl; intros; elim (H (Rmin 1 (eps * mul_factor l l')) (mul_factor_gt_f eps l l' H1)); elim (H0 (eps * mul_factor l l') (mul_factor_gt eps l l' H1)); clear H H0; simpl; intros; elim H; elim H0; clear H H0; intros; split with (Rmin x1 x); split.",
            "VernacExtend",
            "79ae919f9006a28e60e319d944d1ac668c72eef4"
        ],
        [
            "exact (Rmin_Rgt_r x1 x 0 (conj H H2)).",
            "VernacExtend",
            "e99db27d163ad71d8faaf334a98c7e3b5a529fa9"
        ],
        [
            "intros; elim H4; clear H4; intros; unfold R_dist; replace (f x2 * g x2 - l * l') with (f x2 * (g x2 - l') + l' * (f x2 - l)).",
            "VernacExtend",
            "6677394633cf0a77b677f6480223be2690a5f173"
        ],
        [
            "cut (Rabs (f x2 * (g x2 - l')) + Rabs (l' * (f x2 - l)) < eps).",
            "VernacExtend",
            "7b61c9f1d82bc9d42af6c0ac560c34ddaf07c41b"
        ],
        [
            "cut (Rabs (f x2 * (g x2 - l') + l' * (f x2 - l)) <= Rabs (f x2 * (g x2 - l')) + Rabs (l' * (f x2 - l))).",
            "VernacExtend",
            "279c61bbbd135eed64db29ca88fcd896d11f1e3f"
        ],
        [
            "exact (Rle_lt_trans _ _ _).",
            "VernacExtend",
            "6f670bc776343411ecf689b97a5561e39ef26817"
        ],
        [
            "exact (Rabs_triang _ _).",
            "VernacExtend",
            "72c4e464bade3a647b678c1b89eeb3de8842c86a"
        ],
        [
            "rewrite (Rabs_mult (f x2) (g x2 - l')); rewrite (Rabs_mult l' (f x2 - l)); cut ((1 + Rabs l) * (eps * mul_factor l l') + Rabs l' * (eps * mul_factor l l') <= eps).",
            "VernacExtend",
            "621ee942b5f02daccde46d6837f339d3a4090493"
        ],
        [
            "cut (Rabs (f x2) * Rabs (g x2 - l') + Rabs l' * Rabs (f x2 - l) < (1 + Rabs l) * (eps * mul_factor l l') + Rabs l' * (eps * mul_factor l l')).",
            "VernacExtend",
            "bef47522a486e42fe9054ea5bba06daffb426baf"
        ],
        [
            "exact (Rlt_le_trans _ _ _).",
            "VernacExtend",
            "15771f7c30133e3a0c0e3da042cc6a65cdd17cd5"
        ],
        [
            "elim (Rmin_Rgt_l x1 x (R_dist x2 x0) H5); clear H5; intros; generalize (H0 x2 (conj H4 H5)); intro; generalize (Rmin_Rgt_l _ _ _ H7); intro; elim H8; intros; clear H0 H8; apply Rplus_lt_le_compat.",
            "VernacExtend",
            "a54d09c1388dcabdc90a5e379a9509d17fc54383"
        ],
        [
            "apply Rmult_ge_0_gt_0_lt_compat.",
            "VernacExtend",
            "e65f855ed459b5d681e964b5278eae5b57d6cbc7"
        ],
        [
            "apply Rle_ge.",
            "VernacExtend",
            "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
        ],
        [
            "exact (Rabs_pos (g x2 - l')).",
            "VernacExtend",
            "253b96dca74d75582e24979feae212227229fccf"
        ],
        [
            "rewrite (Rplus_comm 1 (Rabs l)); unfold Rgt; apply Rle_lt_0_plus_1; exact (Rabs_pos l).",
            "VernacExtend",
            "af0f30b09a91daba67bfc8bac59b6c34c6f32e45"
        ],
        [
            "unfold R_dist in H9; apply (Rplus_lt_reg_l (- Rabs l) (Rabs (f x2)) (1 + Rabs l)).",
            "VernacExtend",
            "88866ce23d037a171b521605401348f53a618e8a"
        ],
        [
            "rewrite <- (Rplus_assoc (- Rabs l) 1 (Rabs l)); rewrite (Rplus_comm (- Rabs l) 1); rewrite (Rplus_assoc 1 (- Rabs l) (Rabs l)); rewrite (Rplus_opp_l (Rabs l)); rewrite (proj1 (Rplus_ne 1)); rewrite (Rplus_comm (- Rabs l) (Rabs (f x2))); generalize H9; cut (Rabs (f x2) - Rabs l <= Rabs (f x2 - l)).",
            "VernacExtend",
            "edd76ae17896656c4ff007873117424b71c49edd"
        ],
        [
            "exact (Rle_lt_trans _ _ _).",
            "VernacExtend",
            "6f670bc776343411ecf689b97a5561e39ef26817"
        ],
        [
            "exact (Rabs_triang_inv _ _).",
            "VernacExtend",
            "7d018d4b34e6765461d9135566f9fb1a88bf3577"
        ],
        [
            "generalize (H3 x2 (conj H4 H6)); trivial.",
            "VernacExtend",
            "053bd9f9eb1c3f6676b2391dcdfe0f2e45d5c8d6"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "exact (Rabs_pos l').",
            "VernacExtend",
            "808b4b04105c3844892ac16f0823ed2f9d516b68"
        ],
        [
            "unfold Rle; left; assumption.",
            "VernacExtend",
            "ce88e8570715d2b8a0121a6f5d39eb91b24ad7b7"
        ],
        [
            "rewrite (Rmult_comm (1 + Rabs l) (eps * mul_factor l l')); rewrite (Rmult_comm (Rabs l') (eps * mul_factor l l')); rewrite <- (Rmult_plus_distr_l (eps * mul_factor l l') (1 + Rabs l) (Rabs l')) ; rewrite (Rmult_assoc eps (mul_factor l l') (1 + Rabs l + Rabs l')); rewrite (Rplus_assoc 1 (Rabs l) (Rabs l')); unfold mul_factor; rewrite (Rinv_l (1 + (Rabs l + Rabs l')) (mul_factor_wd l l')); rewrite (proj1 (Rmult_ne eps)); apply Req_le; trivial.",
            "VernacExtend",
            "ddf4c3dd2b14ec6e6480549ad3188435d7cef9ce"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition adhDa (D:R -> Prop) (a:R) : Prop := forall alp:R, alp > 0 -> exists x : R, D x /\\ R_dist x a < alp.",
            "VernacDefinition",
            "16e9336e71fbfcc11f8dd3e23684e40e99c13e50"
        ],
        [
            "Lemma single_limit : forall (f:R -> R) (D:R -> Prop) (l l' x0:R), adhDa D x0 -> limit1_in f D l x0 -> limit1_in f D l' x0 -> l = l'.",
            "VernacStartTheoremProof",
            "fa4444915d1dff7d2c38a45d4ed43896c28d23ef"
        ],
        [
            "unfold limit1_in; unfold limit_in; intros.",
            "VernacExtend",
            "e444171ccf93377945668a1b8379b18151c85ecb"
        ],
        [
            "simpl in *.",
            "VernacExtend",
            "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
        ],
        [
            "cut (forall eps:R, eps > 0 -> dist R_met l l' < 2 * eps).",
            "VernacExtend",
            "16e2fe49928e2568b7cbadb4a9871eac83dbd948"
        ],
        [
            "clear H0 H1; unfold dist in |- *; unfold R_met; unfold R_dist in |- *; unfold Rabs; case (Rcase_abs (l - l')) as [Hlt|Hge]; intros.",
            "VernacExtend",
            "6ca0998f44efca1a7baad12c64f89a420e88f7a0"
        ],
        [
            "cut (forall eps:R, eps > 0 -> - (l - l') < eps).",
            "VernacExtend",
            "4b36f7af9fee3f05b01e0e4b3f0dc7bbd17fad24"
        ],
        [
            "intro; generalize (prop_eps (- (l - l')) H1); intro; generalize (Ropp_gt_lt_0_contravar (l - l') Hlt); intro; unfold Rgt in H3; generalize (Rgt_not_le (- (l - l')) 0 H3); intro; exfalso; auto.",
            "VernacExtend",
            "cb9a76daf83a6cfafeab16744ff95a52241b01c4"
        ],
        [
            "intros; cut (eps * / 2 > 0).",
            "VernacExtend",
            "e998c9a9ed7b5a99d5f79c214da8b73d05e34539"
        ],
        [
            "intro; generalize (H0 (eps * / 2) H2); rewrite (Rmult_comm eps (/ 2)); rewrite <- (Rmult_assoc 2 (/ 2) eps); rewrite (Rinv_r 2).",
            "VernacExtend",
            "bd443b46fb5252398c81b7485fa2c2136d5d034a"
        ],
        [
            "elim (Rmult_ne eps); intros a b; rewrite b; clear a b; trivial.",
            "VernacExtend",
            "8232061891cee60a9c1de8e4c3a8444dd2ce3225"
        ],
        [
            "apply (Rlt_dichotomy_converse 2 0); right; generalize Rlt_0_1; intro; unfold Rgt; generalize (Rplus_lt_compat_l 1 0 1 H3); intro; elim (Rplus_ne 1); intros a b; rewrite a in H4; clear a b; apply (Rlt_trans 0 1 2 H3 H4).",
            "VernacExtend",
            "20a9fcad299493b06bca659bd35819ed18eeeebb"
        ],
        [
            "unfold Rgt; unfold Rgt in H1; rewrite (Rmult_comm eps (/ 2)); rewrite <- (Rmult_0_r (/ 2)); apply (Rmult_lt_compat_l (/ 2) 0 eps); auto.",
            "VernacExtend",
            "9dbd699153008926ca83214c205376a5df144845"
        ],
        [
            "apply (Rinv_0_lt_compat 2); cut (1 < 2).",
            "VernacExtend",
            "93acb3f3ad306edd11af7d801b1cefbde8fa596c"
        ],
        [
            "intro; apply (Rlt_trans 0 1 2 Rlt_0_1 H2).",
            "VernacExtend",
            "83860a9182a8835f85cdb52328c4959344a28755"
        ],
        [
            "generalize (Rplus_lt_compat_l 1 0 1 Rlt_0_1); elim (Rplus_ne 1); intros a b; rewrite a; clear a b; trivial.",
            "VernacExtend",
            "d8ca27486e17f8c8e21cdcc1e89b62d5b9a307d2"
        ],
        [
            "cut (forall eps:R, eps > 0 -> l - l' < eps).",
            "VernacExtend",
            "3eb2862ab4eb4870f38a17c1bfa571249723e1ce"
        ],
        [
            "intro; generalize (prop_eps (l - l') H1); intro; elim (Rle_le_eq (l - l') 0); intros a b; clear b; apply (Rminus_diag_uniq l l'); apply a; split.",
            "VernacExtend",
            "9c29406ef665f3a7b41848bd8dd9ed9ee6cb9936"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply (Rge_le (l - l') 0 Hge).",
            "VernacExtend",
            "ecdd6197797fd61ef9755e3f1e333fc8717eb611"
        ],
        [
            "intros; cut (eps * / 2 > 0).",
            "VernacExtend",
            "e998c9a9ed7b5a99d5f79c214da8b73d05e34539"
        ],
        [
            "intro; generalize (H0 (eps * / 2) H2); rewrite (Rmult_comm eps (/ 2)); rewrite <- (Rmult_assoc 2 (/ 2) eps); rewrite (Rinv_r 2).",
            "VernacExtend",
            "bd443b46fb5252398c81b7485fa2c2136d5d034a"
        ],
        [
            "elim (Rmult_ne eps); intros a b; rewrite b; clear a b; trivial.",
            "VernacExtend",
            "8232061891cee60a9c1de8e4c3a8444dd2ce3225"
        ],
        [
            "apply (Rlt_dichotomy_converse 2 0); right; generalize Rlt_0_1; intro; unfold Rgt; generalize (Rplus_lt_compat_l 1 0 1 H3); intro; elim (Rplus_ne 1); intros a b; rewrite a in H4; clear a b; apply (Rlt_trans 0 1 2 H3 H4).",
            "VernacExtend",
            "20a9fcad299493b06bca659bd35819ed18eeeebb"
        ],
        [
            "unfold Rgt; unfold Rgt in H1; rewrite (Rmult_comm eps (/ 2)); rewrite <- (Rmult_0_r (/ 2)); apply (Rmult_lt_compat_l (/ 2) 0 eps); auto.",
            "VernacExtend",
            "9dbd699153008926ca83214c205376a5df144845"
        ],
        [
            "apply (Rinv_0_lt_compat 2); cut (1 < 2).",
            "VernacExtend",
            "93acb3f3ad306edd11af7d801b1cefbde8fa596c"
        ],
        [
            "intro; apply (Rlt_trans 0 1 2 Rlt_0_1 H2).",
            "VernacExtend",
            "83860a9182a8835f85cdb52328c4959344a28755"
        ],
        [
            "generalize (Rplus_lt_compat_l 1 0 1 Rlt_0_1); elim (Rplus_ne 1); intros a b; rewrite a; clear a b; trivial.",
            "VernacExtend",
            "d8ca27486e17f8c8e21cdcc1e89b62d5b9a307d2"
        ],
        [
            "intros; unfold adhDa in H; elim (H0 eps H2); intros; elim (H1 eps H2); intros; clear H0 H1; elim H3; elim H4; clear H3 H4; intros; simpl; simpl in H1, H4; generalize (Rmin_Rgt x x1 0); intro; elim H5; intros; clear H5; elim (H (Rmin x x1) (H7 (conj H3 H0))); intros; elim H5; intros; clear H5 H H6 H7; generalize (Rmin_Rgt x x1 (R_dist x2 x0)); intro; elim H; intros; clear H H6; unfold Rgt in H5; elim (H5 H9); intros; clear H5 H9; generalize (H1 x2 (conj H8 H6)); generalize (H4 x2 (conj H8 H)); clear H8 H H6 H1 H4 H0 H3; intros; generalize (Rplus_lt_compat (R_dist (f x2) l) eps (R_dist (f x2) l') eps H H0); unfold R_dist; intros; rewrite (Rabs_minus_sym (f x2) l) in H1; rewrite (Rmult_comm 2 eps); replace (eps *2) with (eps + eps) by ring; generalize (R_dist_tri l l' (f x2)); unfold R_dist; intros; apply (Rle_lt_trans (Rabs (l - l')) (Rabs (l - f x2) + Rabs (f x2 - l')) (eps + eps) H3 H1).",
            "VernacExtend",
            "ae7804dd93f74aa461c505c318c9ae21c306940e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limit_comp : forall (f g:R -> R) (Df Dg:R -> Prop) (l l' x0:R), limit1_in f Df l x0 -> limit1_in g Dg l' l -> limit1_in (fun x:R => g (f x)) (Dgf Df Dg f) l' x0.",
            "VernacStartTheoremProof",
            "c8d243b58a476d96bded49640b885420b2379eb3"
        ],
        [
            "unfold limit1_in, limit_in, Dgf; simpl.",
            "VernacExtend",
            "a23547146d3d53d99ed5816d4b6ae669d865db37"
        ],
        [
            "intros f g Df Dg l l' x0 Hf Hg eps eps_pos.",
            "VernacExtend",
            "44045c555aac625d3fe5980a60cd34d73346fdf7"
        ],
        [
            "elim (Hg eps eps_pos).",
            "VernacExtend",
            "cf9187215e839c250dd467ec245b27338773b4f0"
        ],
        [
            "intros alpg lg.",
            "VernacExtend",
            "a67447cc82d729eecdaf92c4e0fe337c38ff82c2"
        ],
        [
            "elim (Hf alpg).",
            "VernacExtend",
            "d358aca9a06b19de26395c1886b1a84edf6c3c65"
        ],
        [
            "2: tauto.",
            "VernacExtend",
            "077986baac886d0c08735079b0450cedae08620b"
        ],
        [
            "intros alpf lf.",
            "VernacExtend",
            "ebc8d6f965bf5cc090022593222872b296509550"
        ],
        [
            "exists alpf.",
            "VernacExtend",
            "98013d34091ada656eed0918fa9f552c5b9957ce"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma limit_inv : forall (f:R -> R) (D:R -> Prop) (l x0:R), limit1_in f D l x0 -> l <> 0 -> limit1_in (fun x:R => / f x) D (/ l) x0.",
            "VernacStartTheoremProof",
            "330838122e00073dd1848ddc50bcd6d7779b4ebb"
        ],
        [
            "unfold limit1_in; unfold limit_in; simpl; unfold R_dist; intros; elim (H (Rabs l / 2)).",
            "VernacExtend",
            "73f69e871e26ff5f852e01b91dfa59d825c81888"
        ],
        [
            "intros delta1 H2; elim (H (eps * (Rsqr l / 2))).",
            "VernacExtend",
            "e981daf0ba86f6347b35c1ba5c56c9bc92352b96"
        ],
        [
            "intros delta2 H3; elim H2; elim H3; intros; exists (Rmin delta1 delta2); split.",
            "VernacExtend",
            "4616691f27c495f9e82ade6bf95f3dc79a62584d"
        ],
        [
            "unfold Rmin; case (Rle_dec delta1 delta2); intro; assumption.",
            "VernacExtend",
            "feac66627daefed9871c8a5070e97d8865253eae"
        ],
        [
            "intro; generalize (H5 x); clear H5; intro H5; generalize (H7 x); clear H7; intro H7; intro H10; elim H10; intros; cut (D x /\\ Rabs (x - x0) < delta1).",
            "VernacExtend",
            "c48104454b215c05d2944b35237652db03221808"
        ],
        [
            "cut (D x /\\ Rabs (x - x0) < delta2).",
            "VernacExtend",
            "e9220165f05ca6624641078c582143388bdce40b"
        ],
        [
            "intros; generalize (H5 H11); clear H5; intro H5; generalize (H7 H12); clear H7; intro H7; generalize (Rabs_triang_inv l (f x)); intro; rewrite Rabs_minus_sym in H7; generalize (Rle_lt_trans (Rabs l - Rabs (f x)) (Rabs (l - f x)) (Rabs l / 2) H13 H7); intro; generalize (Rplus_lt_compat_l (Rabs (f x) - Rabs l / 2) (Rabs l - Rabs (f x)) (Rabs l / 2) H14); replace (Rabs (f x) - Rabs l / 2 + (Rabs l - Rabs (f x))) with (Rabs l / 2).",
            "VernacExtend",
            "d6af5dad98496d3a9c9b82aae18a9bde066d993c"
        ],
        [
            "unfold Rminus; rewrite Rplus_assoc; rewrite Rplus_opp_l; rewrite Rplus_0_r; intro; cut (f x <> 0).",
            "VernacExtend",
            "e433fd1b2bd13ab0fdb5a1886344198862b9b1b9"
        ],
        [
            "intro; replace (/ f x + - / l) with ((l - f x) * / (l * f x)).",
            "VernacExtend",
            "2fe215d9b18837f4bda63a3829d7031f2fd6c466"
        ],
        [
            "rewrite Rabs_mult; rewrite Rabs_Rinv.",
            "VernacExtend",
            "d835e004c37b1f8150c99978a324ec95eb699f47"
        ],
        [
            "cut (/ Rabs (l * f x) < 2 / Rsqr l).",
            "VernacExtend",
            "1aee1f5b45c24c741bad2f098421dbf0719fa10a"
        ],
        [
            "intro; rewrite Rabs_minus_sym in H5; cut (0 <= / Rabs (l * f x)).",
            "VernacExtend",
            "960912276f408d1c538a8c9a78c3135be1eb458f"
        ],
        [
            "intro; generalize (Rmult_le_0_lt_compat (Rabs (l - f x)) (eps * (Rsqr l / 2)) (/ Rabs (l * f x)) (2 / Rsqr l) (Rabs_pos (l - f x)) H18 H5 H17); replace (eps * (Rsqr l / 2) * (2 / Rsqr l)) with eps.",
            "VernacExtend",
            "1a56977c602e8a8ee63a0bbfa0efe3fb6af307e0"
        ],
        [
            "intro; assumption.",
            "VernacExtend",
            "551ec2015f4dd20223b70c4f4cd79f05302e6cf6"
        ],
        [
            "unfold Rdiv; unfold Rsqr; rewrite Rinv_mult_distr.",
            "VernacExtend",
            "96a99d06acb07d370a2350e13457e02d3214bca3"
        ],
        [
            "repeat rewrite Rmult_assoc.",
            "VernacExtend",
            "9a62b3359051e53192153e7bfe542316dbd712a8"
        ],
        [
            "rewrite (Rmult_comm l).",
            "VernacExtend",
            "5ebbefa10fe923df1b883a7f2fb1c2570db34fc4"
        ],
        [
            "repeat rewrite Rmult_assoc.",
            "VernacExtend",
            "9a62b3359051e53192153e7bfe542316dbd712a8"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "rewrite (Rmult_comm l).",
            "VernacExtend",
            "5ebbefa10fe923df1b883a7f2fb1c2570db34fc4"
        ],
        [
            "repeat rewrite Rmult_assoc.",
            "VernacExtend",
            "9a62b3359051e53192153e7bfe542316dbd712a8"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "rewrite Rmult_1_r; reflexivity.",
            "VernacExtend",
            "48cf3ea63852e7c9eb06f376d7f6115fee3b3148"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "exact H0.",
            "VernacExtend",
            "3920fece303e3c4728f9cdc71daff99239237dbd"
        ],
        [
            "left; apply Rinv_0_lt_compat; apply Rabs_pos_lt; apply prod_neq_R0; assumption.",
            "VernacExtend",
            "96c6fc272aa85dfa5614451924167f946bf32c8f"
        ],
        [
            "rewrite Rmult_comm; rewrite Rabs_mult; rewrite Rinv_mult_distr.",
            "VernacExtend",
            "f7ad0ae15031d5d1a8ee2966fe111cc7941236d3"
        ],
        [
            "rewrite (Rsqr_abs l); unfold Rsqr; unfold Rdiv; rewrite Rinv_mult_distr.",
            "VernacExtend",
            "c3edc4ba334939cf211f0025a76d161b23d4b783"
        ],
        [
            "repeat rewrite <- Rmult_assoc; apply Rmult_lt_compat_r.",
            "VernacExtend",
            "239bbda145c577ca6e730b3c54f181c1144e579a"
        ],
        [
            "apply Rinv_0_lt_compat; apply Rabs_pos_lt; assumption.",
            "VernacExtend",
            "e4c91a40f2fa1c87312f044d164ffed2c6475792"
        ],
        [
            "apply Rmult_lt_reg_l with (Rabs (f x) * Rabs l * / 2).",
            "VernacExtend",
            "555c551bfe98abd07a5fc1e8d4e9c15da6eb26d4"
        ],
        [
            "repeat apply Rmult_lt_0_compat.",
            "VernacExtend",
            "fbf27bd9d083b541c05452c398f83000dae05970"
        ],
        [
            "apply Rabs_pos_lt; assumption.",
            "VernacExtend",
            "1143a29168ffe77f62e90c548869eca12a54b7db"
        ],
        [
            "apply Rabs_pos_lt; assumption.",
            "VernacExtend",
            "1143a29168ffe77f62e90c548869eca12a54b7db"
        ],
        [
            "apply Rinv_0_lt_compat; cut (0%nat <> 2%nat); [ intro H17; generalize (lt_INR_0 2 (neq_O_lt 2 H17)); unfold INR; intro H18; assumption | discriminate ].",
            "VernacExtend",
            "393a569f0fb01f2a1951fb9dc73140c5c788346d"
        ],
        [
            "replace (Rabs (f x) * Rabs l * / 2 * / Rabs (f x)) with (Rabs l / 2).",
            "VernacExtend",
            "e5018fda6e91ad690746cf5061dac269e8a291ad"
        ],
        [
            "replace (Rabs (f x) * Rabs l * / 2 * (2 * / Rabs l)) with (Rabs (f x)).",
            "VernacExtend",
            "f26973e125a58592f911d6abda97a4609288699a"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "repeat rewrite Rmult_assoc.",
            "VernacExtend",
            "9a62b3359051e53192153e7bfe542316dbd712a8"
        ],
        [
            "rewrite (Rmult_comm (Rabs l)).",
            "VernacExtend",
            "dc3479599c7f9ec139e8493525463de6393b737a"
        ],
        [
            "repeat rewrite Rmult_assoc.",
            "VernacExtend",
            "9a62b3359051e53192153e7bfe542316dbd712a8"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "rewrite Rmult_1_r; reflexivity.",
            "VernacExtend",
            "48cf3ea63852e7c9eb06f376d7f6115fee3b3148"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "apply Rabs_no_R0.",
            "VernacExtend",
            "8d37b098d9cb0f050cfd8b29c49d318c2b960566"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold Rdiv.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "repeat rewrite Rmult_assoc.",
            "VernacExtend",
            "9a62b3359051e53192153e7bfe542316dbd712a8"
        ],
        [
            "rewrite (Rmult_comm (Rabs (f x))).",
            "VernacExtend",
            "9f4bb203f3feaa5db60b3d7b1fdb9f365b210dd7"
        ],
        [
            "repeat rewrite Rmult_assoc.",
            "VernacExtend",
            "9a62b3359051e53192153e7bfe542316dbd712a8"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply Rabs_no_R0; assumption.",
            "VernacExtend",
            "919603fae9f5552a2987bbb604439a06966af0d9"
        ],
        [
            "apply Rabs_no_R0; assumption.",
            "VernacExtend",
            "919603fae9f5552a2987bbb604439a06966af0d9"
        ],
        [
            "apply Rabs_no_R0; assumption.",
            "VernacExtend",
            "919603fae9f5552a2987bbb604439a06966af0d9"
        ],
        [
            "apply Rabs_no_R0; assumption.",
            "VernacExtend",
            "919603fae9f5552a2987bbb604439a06966af0d9"
        ],
        [
            "apply Rabs_no_R0; assumption.",
            "VernacExtend",
            "919603fae9f5552a2987bbb604439a06966af0d9"
        ],
        [
            "apply prod_neq_R0; assumption.",
            "VernacExtend",
            "680f594f854a1838d82542e91066d23de34b831d"
        ],
        [
            "rewrite (Rinv_mult_distr _ _ H0 H16).",
            "VernacExtend",
            "820170fc47d4f52b4060d415a3e1edff16d4b44a"
        ],
        [
            "unfold Rminus; rewrite Rmult_plus_distr_r.",
            "VernacExtend",
            "cc160f91e13b56268b09b8d15d95271d67b8e35a"
        ],
        [
            "rewrite <- Rmult_assoc.",
            "VernacExtend",
            "34da3c50cde53c179a4908b1329a459071245c05"
        ],
        [
            "rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "2ca74255a63c294f9442d956f32a2e3784636efb"
        ],
        [
            "rewrite Rmult_1_l.",
            "VernacExtend",
            "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
        ],
        [
            "rewrite Ropp_mult_distr_l_reverse.",
            "VernacExtend",
            "1d14afaf59b9fd90d930059e8d15a46d6c95c450"
        ],
        [
            "rewrite (Rmult_comm (f x)).",
            "VernacExtend",
            "88d88d9056e2bb58547db0a8741011d3462d962c"
        ],
        [
            "rewrite Rmult_assoc.",
            "VernacExtend",
            "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "red; intro; rewrite H16 in H15; rewrite Rabs_R0 in H15; cut (0 < Rabs l / 2).",
            "VernacExtend",
            "a3d3b6d254a2ef754edabf5cd8a7cfe75325f405"
        ],
        [
            "intro; elim (Rlt_irrefl 0 (Rlt_trans 0 (Rabs l / 2) 0 H17 H15)).",
            "VernacExtend",
            "ae9406bb7f03d1e994c25538221ab4fc00cd1d4e"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "7122edbd68559f255bfed03dc640472ed14eb4ef"
        ],
        [
            "apply Rabs_pos_lt; assumption.",
            "VernacExtend",
            "1143a29168ffe77f62e90c548869eca12a54b7db"
        ],
        [
            "apply Rinv_0_lt_compat; cut (0%nat <> 2%nat); [ intro H17; generalize (lt_INR_0 2 (neq_O_lt 2 H17)); unfold INR; intro; assumption | discriminate ].",
            "VernacExtend",
            "a018418d4d49f2f999ca0861cc5452153ec2415b"
        ],
        [
            "pattern (Rabs l) at 3; rewrite double_var.",
            "VernacExtend",
            "59c298ae5d6f8111cc205300dc26dda68fb085f3"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "split; [ assumption | apply Rlt_le_trans with (Rmin delta1 delta2); [ assumption | apply Rmin_r ] ].",
            "VernacExtend",
            "cd66344bba734fd2017946b83d914a0e38988636"
        ],
        [
            "split; [ assumption | apply Rlt_le_trans with (Rmin delta1 delta2); [ assumption | apply Rmin_l ] ].",
            "VernacExtend",
            "701a697f09dc543c4a1a6a83310a2f79a0ad67b8"
        ],
        [
            "change (0 < eps * (Rsqr l / 2)); unfold Rdiv; repeat rewrite Rmult_assoc; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "e95bbec2135005bae515d1a657578b19058864f2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "apply Rsqr_pos_lt; assumption.",
            "VernacExtend",
            "35b1f2163e2b1006316370c816c9da4ca5d64b49"
        ],
        [
            "apply Rinv_0_lt_compat; cut (0%nat <> 2%nat); [ intro H3; generalize (lt_INR_0 2 (neq_O_lt 2 H3)); unfold INR; intro; assumption | discriminate ].",
            "VernacExtend",
            "387d9eddca8859aa223d3d03ec20513d8085e557"
        ],
        [
            "change (0 < Rabs l / 2); unfold Rdiv; apply Rmult_lt_0_compat; [ apply Rabs_pos_lt; assumption | apply Rinv_0_lt_compat; cut (0%nat <> 2%nat); [ intro H3; generalize (lt_INR_0 2 (neq_O_lt 2 H3)); unfold INR; intro; assumption | discriminate ] ].",
            "VernacExtend",
            "feb8653674f59e21cbef37ffabec01e604d50129"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "eps2_Rgt_R0",
            "line_nb": 4,
            "steps": [
                {
                    "command": [
                        "intros; lra.",
                        "VernacExtend",
                        "449a153f406381cfb8ab107f551a2c789b996417"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eps2",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intro esp.",
                        "VernacExtend",
                        "44a252ca08abd075bc73038af20947686a74d873"
                    ]
                },
                {
                    "command": [
                        "apply eq_sym, double_var.",
                        "VernacExtend",
                        "a896ef7eb889d055ecf9c346d836b101f7121d88"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eps4",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intro eps.",
                        "VernacExtend",
                        "b42d0ea9456b250f48ba89774547c32f3d7b0434"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_eps2_eps",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_eps4_eps",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "lra.",
                        "VernacExtend",
                        "c37bca18aec699b6843eab75e25df2491e3b9848"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prop_eps",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros; elim (Rtotal_order r 0); intro.",
                        "VernacExtend",
                        "473616a04d6e6020479965611446757901397f46"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; assumption.",
                        "VernacExtend",
                        "6ea46b5e4ad6d15cd718025b7aa100abf346a511"
                    ]
                },
                {
                    "command": [
                        "elim H0; intro.",
                        "VernacExtend",
                        "8b90d3170291d75c22593a28bbba0a2c88c6fd14"
                    ]
                },
                {
                    "command": [
                        "apply Req_le; assumption.",
                        "VernacExtend",
                        "e22c9fa8ec81a5958ba47788878537f1455e7d75"
                    ]
                },
                {
                    "command": [
                        "clear H0; generalize (H r H1); intro; generalize (Rlt_irrefl r); intro; exfalso; auto.",
                        "VernacExtend",
                        "4d9c61ee7b202b5a83436172ab0b9d24574f0078"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_factor_wd",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "intros; rewrite (Rplus_comm 1 (Rabs l + Rabs l')); apply tech_Rplus.",
                        "VernacExtend",
                        "931b33545f7f68b8bddfe14b6f36e76966b32b00"
                    ]
                },
                {
                    "command": [
                        "cut (Rabs (l + l') <= Rabs l + Rabs l').",
                        "VernacExtend",
                        "7571388ddb727ed6b8cd9f721cb9309661f3df10"
                    ]
                },
                {
                    "command": [
                        "cut (0 <= Rabs (l + l')).",
                        "VernacExtend",
                        "300b919d26838719e2faca8eebeb4f664a744b27"
                    ]
                },
                {
                    "command": [
                        "exact (Rle_trans _ _ _).",
                        "VernacExtend",
                        "e61e713d75bf32f59476495ff406222777deab13"
                    ]
                },
                {
                    "command": [
                        "exact (Rabs_pos (l + l')).",
                        "VernacExtend",
                        "3259039746ce5aa05139b874b253e19a2912368b"
                    ]
                },
                {
                    "command": [
                        "exact (Rabs_triang _ _).",
                        "VernacExtend",
                        "72c4e464bade3a647b678c1b89eeb3de8842c86a"
                    ]
                },
                {
                    "command": [
                        "exact Rlt_0_1.",
                        "VernacExtend",
                        "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_factor_gt",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rgt; rewrite <- (Rmult_0_r eps); apply Rmult_lt_compat_l.",
                        "VernacExtend",
                        "622224dad2513c6e0dba21394a4b7858dbb7029d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold mul_factor; apply Rinv_0_lt_compat; cut (1 <= 1 + (Rabs l + Rabs l')).",
                        "VernacExtend",
                        "3ec250d0ff3f49a2af9ca15dd424c88882fc0225"
                    ]
                },
                {
                    "command": [
                        "cut (0 < 1).",
                        "VernacExtend",
                        "60a163697ea9261acfc067aafc0d7b9a807dcd64"
                    ]
                },
                {
                    "command": [
                        "exact (Rlt_le_trans _ _ _).",
                        "VernacExtend",
                        "15771f7c30133e3a0c0e3da042cc6a65cdd17cd5"
                    ]
                },
                {
                    "command": [
                        "exact Rlt_0_1.",
                        "VernacExtend",
                        "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
                    ]
                },
                {
                    "command": [
                        "replace (1 <= 1 + (Rabs l + Rabs l')) with (1 + 0 <= 1 + (Rabs l + Rabs l')).",
                        "VernacExtend",
                        "e55c8f955e2311860a055fc4e5d38e8fc889c560"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "cut (Rabs (l + l') <= Rabs l + Rabs l').",
                        "VernacExtend",
                        "7571388ddb727ed6b8cd9f721cb9309661f3df10"
                    ]
                },
                {
                    "command": [
                        "cut (0 <= Rabs (l + l')).",
                        "VernacExtend",
                        "300b919d26838719e2faca8eebeb4f664a744b27"
                    ]
                },
                {
                    "command": [
                        "exact (Rle_trans _ _ _).",
                        "VernacExtend",
                        "e61e713d75bf32f59476495ff406222777deab13"
                    ]
                },
                {
                    "command": [
                        "exact (Rabs_pos _).",
                        "VernacExtend",
                        "00122d7c76080e32f423a5e3209eeaeccf6408a4"
                    ]
                },
                {
                    "command": [
                        "exact (Rabs_triang _ _).",
                        "VernacExtend",
                        "72c4e464bade3a647b678c1b89eeb3de8842c86a"
                    ]
                },
                {
                    "command": [
                        "rewrite (proj1 (Rplus_ne 1)); trivial.",
                        "VernacExtend",
                        "6cb6b2f22f935dc420857f3df8beffc4e44acb2e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mul_factor_gt_f",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros; apply Rmin_Rgt_r; split.",
                        "VernacExtend",
                        "cd2e630bea0619793156ff1d50b8ce4c0f96d099"
                    ]
                },
                {
                    "command": [
                        "exact Rlt_0_1.",
                        "VernacExtend",
                        "8bcad5468a1cd57cf91a54b9c96750052bda60a0"
                    ]
                },
                {
                    "command": [
                        "exact (mul_factor_gt eps l l' H).",
                        "VernacExtend",
                        "067eaceeb5df818e4a50efac4aa6bc6b25a82012"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_limit",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intros f D l x0 H H0.",
                        "VernacExtend",
                        "3d2849fcd86f763c1ab46496810f092e0e9ae158"
                    ]
                },
                {
                    "command": [
                        "case (Rabs_pos (f x0 - l)); intros H1.",
                        "VernacExtend",
                        "544bf4cbae0c281e64df344458d89f7c3123f1b9"
                    ]
                },
                {
                    "command": [
                        "absurd (R_met.(@dist) (f x0) l < R_met.(@dist) (f x0) l).",
                        "VernacExtend",
                        "c31716bcc50924ada3bf3ace4c42b2add673cba6"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_irrefl.",
                        "VernacExtend",
                        "2987b5b4da9cd6a04e9f73b1f733706ed6db7363"
                    ]
                },
                {
                    "command": [
                        "case (H0 (R_met.(@dist) (f x0) l)); auto.",
                        "VernacExtend",
                        "f84acfb1b070b8cec2c40d555cafd41e5986106e"
                    ]
                },
                {
                    "command": [
                        "intros alpha1 [H2 H3]; apply H3; auto; split; auto.",
                        "VernacExtend",
                        "1628400bdfc372d5c17f141f21ac2e52e3997395"
                    ]
                },
                {
                    "command": [
                        "case (dist_refl R_met x0 x0); intros Hr1 Hr2; rewrite Hr2; auto.",
                        "VernacExtend",
                        "ae5be49ed131fcf892b76307df3e2cc0bae41872"
                    ]
                },
                {
                    "command": [
                        "case (dist_refl R_met (f x0) l); intros Hr1 Hr2; symmetry; auto.",
                        "VernacExtend",
                        "c3222875d43b113cda0cf70dd434d1fbc3557e18"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_limit_contr",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "intros; generalize (tech_limit f D l x0); tauto.",
                        "VernacExtend",
                        "efc64eb70b8828a3b48f6f1da4245732ff3d4bd2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lim_x",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "unfold limit1_in; unfold limit_in; simpl; intros; split with eps; split; auto; intros; elim H0; intros; auto.",
                        "VernacExtend",
                        "53ae70d64849dab27fc996f84e9c14564e0412b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limit_plus",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros; unfold limit1_in; unfold limit_in; simpl; intros; elim (H (eps * / 2) (eps2_Rgt_R0 eps H1)); elim (H0 (eps * / 2) (eps2_Rgt_R0 eps H1)); simpl; clear H H0; intros; elim H; elim H0; clear H H0; intros; split with (Rmin x1 x); split.",
                        "VernacExtend",
                        "8641d8741f110fa2582337685702c35ea6e2c274"
                    ]
                },
                {
                    "command": [
                        "exact (Rmin_Rgt_r x1 x 0 (conj H H2)).",
                        "VernacExtend",
                        "e99db27d163ad71d8faaf334a98c7e3b5a529fa9"
                    ]
                },
                {
                    "command": [
                        "intros; elim H4; clear H4; intros; cut (R_dist (f x2) l + R_dist (g x2) l' < eps).",
                        "VernacExtend",
                        "76f2c997cccb4c3df97a95e8aff76df6c96f0a26"
                    ]
                },
                {
                    "command": [
                        "cut (R_dist (f x2 + g x2) (l + l') <= R_dist (f x2) l + R_dist (g x2) l').",
                        "VernacExtend",
                        "2d6b1b9685383c3f83206010af4d9653a69fadbf"
                    ]
                },
                {
                    "command": [
                        "exact (Rle_lt_trans _ _ _).",
                        "VernacExtend",
                        "6f670bc776343411ecf689b97a5561e39ef26817"
                    ]
                },
                {
                    "command": [
                        "exact (R_dist_plus _ _ _ _).",
                        "VernacExtend",
                        "d0a4607fb9803eb217f7c0698a1fe2e6adbb0de4"
                    ]
                },
                {
                    "command": [
                        "elim (Rmin_Rgt_l x1 x (R_dist x2 x0) H5); clear H5; intros.",
                        "VernacExtend",
                        "fd66860212ad22974dbace29115e6caf8c5ef803"
                    ]
                },
                {
                    "command": [
                        "generalize (H3 x2 (conj H4 H6)); generalize (H0 x2 (conj H4 H5)); intros; replace eps with (eps * / 2 + eps * / 2).",
                        "VernacExtend",
                        "3a6f655f064b68294b2ec252c4b68ec58c087600"
                    ]
                },
                {
                    "command": [
                        "exact (Rplus_lt_compat _ _ _ _ H7 H8).",
                        "VernacExtend",
                        "dab89028a803cfc34c1ecfb56daa93f27d297267"
                    ]
                },
                {
                    "command": [
                        "exact (eps2 eps).",
                        "VernacExtend",
                        "d41ea4c667c49b1b4f6d0e4615f09c5ac6c38e90"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limit_Ropp",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "unfold limit1_in; unfold limit_in; simpl; intros; elim (H eps H0); clear H; intros; elim H; clear H; intros; split with x; split; auto; intros; generalize (H1 x1 H2); clear H1; intro; unfold R_dist; unfold Rminus; rewrite (Ropp_involutive l); rewrite (Rplus_comm (- f x1) l); fold (l - f x1); fold (R_dist l (f x1)); rewrite R_dist_sym; assumption.",
                        "VernacExtend",
                        "4af798edfcd6c185223d07d30c764dd8129b475e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limit_minus",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rminus; generalize (limit_Ropp g D l' x0 H0); intro; exact (limit_plus f (fun x:R => - g x) D l (- l') x0 H H1).",
                        "VernacExtend",
                        "b1aa89f5eb23050fe6f26629286cc86c835cb740"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limit_free",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "unfold limit1_in; unfold limit_in; simpl; intros; split with eps; split; auto; intros; elim (R_dist_refl (f x) (f x)); intros a b; rewrite (b (eq_refl (f x))); unfold Rgt in H; assumption.",
                        "VernacExtend",
                        "874108014b62d6a7022654bcd3d4932305cd6675"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limit_mul",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intros; unfold limit1_in; unfold limit_in; simpl; intros; elim (H (Rmin 1 (eps * mul_factor l l')) (mul_factor_gt_f eps l l' H1)); elim (H0 (eps * mul_factor l l') (mul_factor_gt eps l l' H1)); clear H H0; simpl; intros; elim H; elim H0; clear H H0; intros; split with (Rmin x1 x); split.",
                        "VernacExtend",
                        "79ae919f9006a28e60e319d944d1ac668c72eef4"
                    ]
                },
                {
                    "command": [
                        "exact (Rmin_Rgt_r x1 x 0 (conj H H2)).",
                        "VernacExtend",
                        "e99db27d163ad71d8faaf334a98c7e3b5a529fa9"
                    ]
                },
                {
                    "command": [
                        "intros; elim H4; clear H4; intros; unfold R_dist; replace (f x2 * g x2 - l * l') with (f x2 * (g x2 - l') + l' * (f x2 - l)).",
                        "VernacExtend",
                        "6677394633cf0a77b677f6480223be2690a5f173"
                    ]
                },
                {
                    "command": [
                        "cut (Rabs (f x2 * (g x2 - l')) + Rabs (l' * (f x2 - l)) < eps).",
                        "VernacExtend",
                        "7b61c9f1d82bc9d42af6c0ac560c34ddaf07c41b"
                    ]
                },
                {
                    "command": [
                        "cut (Rabs (f x2 * (g x2 - l') + l' * (f x2 - l)) <= Rabs (f x2 * (g x2 - l')) + Rabs (l' * (f x2 - l))).",
                        "VernacExtend",
                        "279c61bbbd135eed64db29ca88fcd896d11f1e3f"
                    ]
                },
                {
                    "command": [
                        "exact (Rle_lt_trans _ _ _).",
                        "VernacExtend",
                        "6f670bc776343411ecf689b97a5561e39ef26817"
                    ]
                },
                {
                    "command": [
                        "exact (Rabs_triang _ _).",
                        "VernacExtend",
                        "72c4e464bade3a647b678c1b89eeb3de8842c86a"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_mult (f x2) (g x2 - l')); rewrite (Rabs_mult l' (f x2 - l)); cut ((1 + Rabs l) * (eps * mul_factor l l') + Rabs l' * (eps * mul_factor l l') <= eps).",
                        "VernacExtend",
                        "621ee942b5f02daccde46d6837f339d3a4090493"
                    ]
                },
                {
                    "command": [
                        "cut (Rabs (f x2) * Rabs (g x2 - l') + Rabs l' * Rabs (f x2 - l) < (1 + Rabs l) * (eps * mul_factor l l') + Rabs l' * (eps * mul_factor l l')).",
                        "VernacExtend",
                        "bef47522a486e42fe9054ea5bba06daffb426baf"
                    ]
                },
                {
                    "command": [
                        "exact (Rlt_le_trans _ _ _).",
                        "VernacExtend",
                        "15771f7c30133e3a0c0e3da042cc6a65cdd17cd5"
                    ]
                },
                {
                    "command": [
                        "elim (Rmin_Rgt_l x1 x (R_dist x2 x0) H5); clear H5; intros; generalize (H0 x2 (conj H4 H5)); intro; generalize (Rmin_Rgt_l _ _ _ H7); intro; elim H8; intros; clear H0 H8; apply Rplus_lt_le_compat.",
                        "VernacExtend",
                        "a54d09c1388dcabdc90a5e379a9509d17fc54383"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_ge_0_gt_0_lt_compat.",
                        "VernacExtend",
                        "e65f855ed459b5d681e964b5278eae5b57d6cbc7"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge.",
                        "VernacExtend",
                        "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
                    ]
                },
                {
                    "command": [
                        "exact (Rabs_pos (g x2 - l')).",
                        "VernacExtend",
                        "253b96dca74d75582e24979feae212227229fccf"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rplus_comm 1 (Rabs l)); unfold Rgt; apply Rle_lt_0_plus_1; exact (Rabs_pos l).",
                        "VernacExtend",
                        "af0f30b09a91daba67bfc8bac59b6c34c6f32e45"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist in H9; apply (Rplus_lt_reg_l (- Rabs l) (Rabs (f x2)) (1 + Rabs l)).",
                        "VernacExtend",
                        "88866ce23d037a171b521605401348f53a618e8a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rplus_assoc (- Rabs l) 1 (Rabs l)); rewrite (Rplus_comm (- Rabs l) 1); rewrite (Rplus_assoc 1 (- Rabs l) (Rabs l)); rewrite (Rplus_opp_l (Rabs l)); rewrite (proj1 (Rplus_ne 1)); rewrite (Rplus_comm (- Rabs l) (Rabs (f x2))); generalize H9; cut (Rabs (f x2) - Rabs l <= Rabs (f x2 - l)).",
                        "VernacExtend",
                        "edd76ae17896656c4ff007873117424b71c49edd"
                    ]
                },
                {
                    "command": [
                        "exact (Rle_lt_trans _ _ _).",
                        "VernacExtend",
                        "6f670bc776343411ecf689b97a5561e39ef26817"
                    ]
                },
                {
                    "command": [
                        "exact (Rabs_triang_inv _ _).",
                        "VernacExtend",
                        "7d018d4b34e6765461d9135566f9fb1a88bf3577"
                    ]
                },
                {
                    "command": [
                        "generalize (H3 x2 (conj H4 H6)); trivial.",
                        "VernacExtend",
                        "053bd9f9eb1c3f6676b2391dcdfe0f2e45d5c8d6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "exact (Rabs_pos l').",
                        "VernacExtend",
                        "808b4b04105c3844892ac16f0823ed2f9d516b68"
                    ]
                },
                {
                    "command": [
                        "unfold Rle; left; assumption.",
                        "VernacExtend",
                        "ce88e8570715d2b8a0121a6f5d39eb91b24ad7b7"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm (1 + Rabs l) (eps * mul_factor l l')); rewrite (Rmult_comm (Rabs l') (eps * mul_factor l l')); rewrite <- (Rmult_plus_distr_l (eps * mul_factor l l') (1 + Rabs l) (Rabs l')) ; rewrite (Rmult_assoc eps (mul_factor l l') (1 + Rabs l + Rabs l')); rewrite (Rplus_assoc 1 (Rabs l) (Rabs l')); unfold mul_factor; rewrite (Rinv_l (1 + (Rabs l + Rabs l')) (mul_factor_wd l l')); rewrite (proj1 (Rmult_ne eps)); apply Req_le; trivial.",
                        "VernacExtend",
                        "ddf4c3dd2b14ec6e6480549ad3188435d7cef9ce"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "single_limit",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "unfold limit1_in; unfold limit_in; intros.",
                        "VernacExtend",
                        "e444171ccf93377945668a1b8379b18151c85ecb"
                    ]
                },
                {
                    "command": [
                        "simpl in *.",
                        "VernacExtend",
                        "5f89d9715fcf9b11bc0d0aadc658e9b10c47b606"
                    ]
                },
                {
                    "command": [
                        "cut (forall eps:R, eps > 0 -> dist R_met l l' < 2 * eps).",
                        "VernacExtend",
                        "16e2fe49928e2568b7cbadb4a9871eac83dbd948"
                    ]
                },
                {
                    "command": [
                        "clear H0 H1; unfold dist in |- *; unfold R_met; unfold R_dist in |- *; unfold Rabs; case (Rcase_abs (l - l')) as [Hlt|Hge]; intros.",
                        "VernacExtend",
                        "6ca0998f44efca1a7baad12c64f89a420e88f7a0"
                    ]
                },
                {
                    "command": [
                        "cut (forall eps:R, eps > 0 -> - (l - l') < eps).",
                        "VernacExtend",
                        "4b36f7af9fee3f05b01e0e4b3f0dc7bbd17fad24"
                    ]
                },
                {
                    "command": [
                        "intro; generalize (prop_eps (- (l - l')) H1); intro; generalize (Ropp_gt_lt_0_contravar (l - l') Hlt); intro; unfold Rgt in H3; generalize (Rgt_not_le (- (l - l')) 0 H3); intro; exfalso; auto.",
                        "VernacExtend",
                        "cb9a76daf83a6cfafeab16744ff95a52241b01c4"
                    ]
                },
                {
                    "command": [
                        "intros; cut (eps * / 2 > 0).",
                        "VernacExtend",
                        "e998c9a9ed7b5a99d5f79c214da8b73d05e34539"
                    ]
                },
                {
                    "command": [
                        "intro; generalize (H0 (eps * / 2) H2); rewrite (Rmult_comm eps (/ 2)); rewrite <- (Rmult_assoc 2 (/ 2) eps); rewrite (Rinv_r 2).",
                        "VernacExtend",
                        "bd443b46fb5252398c81b7485fa2c2136d5d034a"
                    ]
                },
                {
                    "command": [
                        "elim (Rmult_ne eps); intros a b; rewrite b; clear a b; trivial.",
                        "VernacExtend",
                        "8232061891cee60a9c1de8e4c3a8444dd2ce3225"
                    ]
                },
                {
                    "command": [
                        "apply (Rlt_dichotomy_converse 2 0); right; generalize Rlt_0_1; intro; unfold Rgt; generalize (Rplus_lt_compat_l 1 0 1 H3); intro; elim (Rplus_ne 1); intros a b; rewrite a in H4; clear a b; apply (Rlt_trans 0 1 2 H3 H4).",
                        "VernacExtend",
                        "20a9fcad299493b06bca659bd35819ed18eeeebb"
                    ]
                },
                {
                    "command": [
                        "unfold Rgt; unfold Rgt in H1; rewrite (Rmult_comm eps (/ 2)); rewrite <- (Rmult_0_r (/ 2)); apply (Rmult_lt_compat_l (/ 2) 0 eps); auto.",
                        "VernacExtend",
                        "9dbd699153008926ca83214c205376a5df144845"
                    ]
                },
                {
                    "command": [
                        "apply (Rinv_0_lt_compat 2); cut (1 < 2).",
                        "VernacExtend",
                        "93acb3f3ad306edd11af7d801b1cefbde8fa596c"
                    ]
                },
                {
                    "command": [
                        "intro; apply (Rlt_trans 0 1 2 Rlt_0_1 H2).",
                        "VernacExtend",
                        "83860a9182a8835f85cdb52328c4959344a28755"
                    ]
                },
                {
                    "command": [
                        "generalize (Rplus_lt_compat_l 1 0 1 Rlt_0_1); elim (Rplus_ne 1); intros a b; rewrite a; clear a b; trivial.",
                        "VernacExtend",
                        "d8ca27486e17f8c8e21cdcc1e89b62d5b9a307d2"
                    ]
                },
                {
                    "command": [
                        "cut (forall eps:R, eps > 0 -> l - l' < eps).",
                        "VernacExtend",
                        "3eb2862ab4eb4870f38a17c1bfa571249723e1ce"
                    ]
                },
                {
                    "command": [
                        "intro; generalize (prop_eps (l - l') H1); intro; elim (Rle_le_eq (l - l') 0); intros a b; clear b; apply (Rminus_diag_uniq l l'); apply a; split.",
                        "VernacExtend",
                        "9c29406ef665f3a7b41848bd8dd9ed9ee6cb9936"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply (Rge_le (l - l') 0 Hge).",
                        "VernacExtend",
                        "ecdd6197797fd61ef9755e3f1e333fc8717eb611"
                    ]
                },
                {
                    "command": [
                        "intros; cut (eps * / 2 > 0).",
                        "VernacExtend",
                        "e998c9a9ed7b5a99d5f79c214da8b73d05e34539"
                    ]
                },
                {
                    "command": [
                        "intro; generalize (H0 (eps * / 2) H2); rewrite (Rmult_comm eps (/ 2)); rewrite <- (Rmult_assoc 2 (/ 2) eps); rewrite (Rinv_r 2).",
                        "VernacExtend",
                        "bd443b46fb5252398c81b7485fa2c2136d5d034a"
                    ]
                },
                {
                    "command": [
                        "elim (Rmult_ne eps); intros a b; rewrite b; clear a b; trivial.",
                        "VernacExtend",
                        "8232061891cee60a9c1de8e4c3a8444dd2ce3225"
                    ]
                },
                {
                    "command": [
                        "apply (Rlt_dichotomy_converse 2 0); right; generalize Rlt_0_1; intro; unfold Rgt; generalize (Rplus_lt_compat_l 1 0 1 H3); intro; elim (Rplus_ne 1); intros a b; rewrite a in H4; clear a b; apply (Rlt_trans 0 1 2 H3 H4).",
                        "VernacExtend",
                        "20a9fcad299493b06bca659bd35819ed18eeeebb"
                    ]
                },
                {
                    "command": [
                        "unfold Rgt; unfold Rgt in H1; rewrite (Rmult_comm eps (/ 2)); rewrite <- (Rmult_0_r (/ 2)); apply (Rmult_lt_compat_l (/ 2) 0 eps); auto.",
                        "VernacExtend",
                        "9dbd699153008926ca83214c205376a5df144845"
                    ]
                },
                {
                    "command": [
                        "apply (Rinv_0_lt_compat 2); cut (1 < 2).",
                        "VernacExtend",
                        "93acb3f3ad306edd11af7d801b1cefbde8fa596c"
                    ]
                },
                {
                    "command": [
                        "intro; apply (Rlt_trans 0 1 2 Rlt_0_1 H2).",
                        "VernacExtend",
                        "83860a9182a8835f85cdb52328c4959344a28755"
                    ]
                },
                {
                    "command": [
                        "generalize (Rplus_lt_compat_l 1 0 1 Rlt_0_1); elim (Rplus_ne 1); intros a b; rewrite a; clear a b; trivial.",
                        "VernacExtend",
                        "d8ca27486e17f8c8e21cdcc1e89b62d5b9a307d2"
                    ]
                },
                {
                    "command": [
                        "intros; unfold adhDa in H; elim (H0 eps H2); intros; elim (H1 eps H2); intros; clear H0 H1; elim H3; elim H4; clear H3 H4; intros; simpl; simpl in H1, H4; generalize (Rmin_Rgt x x1 0); intro; elim H5; intros; clear H5; elim (H (Rmin x x1) (H7 (conj H3 H0))); intros; elim H5; intros; clear H5 H H6 H7; generalize (Rmin_Rgt x x1 (R_dist x2 x0)); intro; elim H; intros; clear H H6; unfold Rgt in H5; elim (H5 H9); intros; clear H5 H9; generalize (H1 x2 (conj H8 H6)); generalize (H4 x2 (conj H8 H)); clear H8 H H6 H1 H4 H0 H3; intros; generalize (Rplus_lt_compat (R_dist (f x2) l) eps (R_dist (f x2) l') eps H H0); unfold R_dist; intros; rewrite (Rabs_minus_sym (f x2) l) in H1; rewrite (Rmult_comm 2 eps); replace (eps *2) with (eps + eps) by ring; generalize (R_dist_tri l l' (f x2)); unfold R_dist; intros; apply (Rle_lt_trans (Rabs (l - l')) (Rabs (l - f x2) + Rabs (f x2 - l')) (eps + eps) H3 H1).",
                        "VernacExtend",
                        "ae7804dd93f74aa461c505c318c9ae21c306940e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "limit_inv",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "unfold limit1_in; unfold limit_in; simpl; unfold R_dist; intros; elim (H (Rabs l / 2)).",
                        "VernacExtend",
                        "73f69e871e26ff5f852e01b91dfa59d825c81888"
                    ]
                },
                {
                    "command": [
                        "intros delta1 H2; elim (H (eps * (Rsqr l / 2))).",
                        "VernacExtend",
                        "e981daf0ba86f6347b35c1ba5c56c9bc92352b96"
                    ]
                },
                {
                    "command": [
                        "intros delta2 H3; elim H2; elim H3; intros; exists (Rmin delta1 delta2); split.",
                        "VernacExtend",
                        "4616691f27c495f9e82ade6bf95f3dc79a62584d"
                    ]
                },
                {
                    "command": [
                        "unfold Rmin; case (Rle_dec delta1 delta2); intro; assumption.",
                        "VernacExtend",
                        "feac66627daefed9871c8a5070e97d8865253eae"
                    ]
                },
                {
                    "command": [
                        "intro; generalize (H5 x); clear H5; intro H5; generalize (H7 x); clear H7; intro H7; intro H10; elim H10; intros; cut (D x /\\ Rabs (x - x0) < delta1).",
                        "VernacExtend",
                        "c48104454b215c05d2944b35237652db03221808"
                    ]
                },
                {
                    "command": [
                        "cut (D x /\\ Rabs (x - x0) < delta2).",
                        "VernacExtend",
                        "e9220165f05ca6624641078c582143388bdce40b"
                    ]
                },
                {
                    "command": [
                        "intros; generalize (H5 H11); clear H5; intro H5; generalize (H7 H12); clear H7; intro H7; generalize (Rabs_triang_inv l (f x)); intro; rewrite Rabs_minus_sym in H7; generalize (Rle_lt_trans (Rabs l - Rabs (f x)) (Rabs (l - f x)) (Rabs l / 2) H13 H7); intro; generalize (Rplus_lt_compat_l (Rabs (f x) - Rabs l / 2) (Rabs l - Rabs (f x)) (Rabs l / 2) H14); replace (Rabs (f x) - Rabs l / 2 + (Rabs l - Rabs (f x))) with (Rabs l / 2).",
                        "VernacExtend",
                        "d6af5dad98496d3a9c9b82aae18a9bde066d993c"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus; rewrite Rplus_assoc; rewrite Rplus_opp_l; rewrite Rplus_0_r; intro; cut (f x <> 0).",
                        "VernacExtend",
                        "e433fd1b2bd13ab0fdb5a1886344198862b9b1b9"
                    ]
                },
                {
                    "command": [
                        "intro; replace (/ f x + - / l) with ((l - f x) * / (l * f x)).",
                        "VernacExtend",
                        "2fe215d9b18837f4bda63a3829d7031f2fd6c466"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult; rewrite Rabs_Rinv.",
                        "VernacExtend",
                        "d835e004c37b1f8150c99978a324ec95eb699f47"
                    ]
                },
                {
                    "command": [
                        "cut (/ Rabs (l * f x) < 2 / Rsqr l).",
                        "VernacExtend",
                        "1aee1f5b45c24c741bad2f098421dbf0719fa10a"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite Rabs_minus_sym in H5; cut (0 <= / Rabs (l * f x)).",
                        "VernacExtend",
                        "960912276f408d1c538a8c9a78c3135be1eb458f"
                    ]
                },
                {
                    "command": [
                        "intro; generalize (Rmult_le_0_lt_compat (Rabs (l - f x)) (eps * (Rsqr l / 2)) (/ Rabs (l * f x)) (2 / Rsqr l) (Rabs_pos (l - f x)) H18 H5 H17); replace (eps * (Rsqr l / 2) * (2 / Rsqr l)) with eps.",
                        "VernacExtend",
                        "1a56977c602e8a8ee63a0bbfa0efe3fb6af307e0"
                    ]
                },
                {
                    "command": [
                        "intro; assumption.",
                        "VernacExtend",
                        "551ec2015f4dd20223b70c4f4cd79f05302e6cf6"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; unfold Rsqr; rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "96a99d06acb07d370a2350e13457e02d3214bca3"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc.",
                        "VernacExtend",
                        "9a62b3359051e53192153e7bfe542316dbd712a8"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm l).",
                        "VernacExtend",
                        "5ebbefa10fe923df1b883a7f2fb1c2570db34fc4"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc.",
                        "VernacExtend",
                        "9a62b3359051e53192153e7bfe542316dbd712a8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm l).",
                        "VernacExtend",
                        "5ebbefa10fe923df1b883a7f2fb1c2570db34fc4"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc.",
                        "VernacExtend",
                        "9a62b3359051e53192153e7bfe542316dbd712a8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; reflexivity.",
                        "VernacExtend",
                        "48cf3ea63852e7c9eb06f376d7f6115fee3b3148"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "exact H0.",
                        "VernacExtend",
                        "3920fece303e3c4728f9cdc71daff99239237dbd"
                    ]
                },
                {
                    "command": [
                        "left; apply Rinv_0_lt_compat; apply Rabs_pos_lt; apply prod_neq_R0; assumption.",
                        "VernacExtend",
                        "96c6fc272aa85dfa5614451924167f946bf32c8f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm; rewrite Rabs_mult; rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "f7ad0ae15031d5d1a8ee2966fe111cc7941236d3"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rsqr_abs l); unfold Rsqr; unfold Rdiv; rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "c3edc4ba334939cf211f0025a76d161b23d4b783"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- Rmult_assoc; apply Rmult_lt_compat_r.",
                        "VernacExtend",
                        "239bbda145c577ca6e730b3c54f181c1144e579a"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply Rabs_pos_lt; assumption.",
                        "VernacExtend",
                        "e4c91a40f2fa1c87312f044d164ffed2c6475792"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (Rabs (f x) * Rabs l * / 2).",
                        "VernacExtend",
                        "555c551bfe98abd07a5fc1e8d4e9c15da6eb26d4"
                    ]
                },
                {
                    "command": [
                        "repeat apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "fbf27bd9d083b541c05452c398f83000dae05970"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos_lt; assumption.",
                        "VernacExtend",
                        "1143a29168ffe77f62e90c548869eca12a54b7db"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos_lt; assumption.",
                        "VernacExtend",
                        "1143a29168ffe77f62e90c548869eca12a54b7db"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; cut (0%nat <> 2%nat); [ intro H17; generalize (lt_INR_0 2 (neq_O_lt 2 H17)); unfold INR; intro H18; assumption | discriminate ].",
                        "VernacExtend",
                        "393a569f0fb01f2a1951fb9dc73140c5c788346d"
                    ]
                },
                {
                    "command": [
                        "replace (Rabs (f x) * Rabs l * / 2 * / Rabs (f x)) with (Rabs l / 2).",
                        "VernacExtend",
                        "e5018fda6e91ad690746cf5061dac269e8a291ad"
                    ]
                },
                {
                    "command": [
                        "replace (Rabs (f x) * Rabs l * / 2 * (2 * / Rabs l)) with (Rabs (f x)).",
                        "VernacExtend",
                        "f26973e125a58592f911d6abda97a4609288699a"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc.",
                        "VernacExtend",
                        "9a62b3359051e53192153e7bfe542316dbd712a8"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm (Rabs l)).",
                        "VernacExtend",
                        "dc3479599c7f9ec139e8493525463de6393b737a"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc.",
                        "VernacExtend",
                        "9a62b3359051e53192153e7bfe542316dbd712a8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; reflexivity.",
                        "VernacExtend",
                        "48cf3ea63852e7c9eb06f376d7f6115fee3b3148"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0.",
                        "VernacExtend",
                        "8d37b098d9cb0f050cfd8b29c49d318c2b960566"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv.",
                        "VernacExtend",
                        "d9820df68a5475147f48d29acf89824b27f71597"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc.",
                        "VernacExtend",
                        "9a62b3359051e53192153e7bfe542316dbd712a8"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm (Rabs (f x))).",
                        "VernacExtend",
                        "9f4bb203f3feaa5db60b3d7b1fdb9f365b210dd7"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc.",
                        "VernacExtend",
                        "9a62b3359051e53192153e7bfe542316dbd712a8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0; assumption.",
                        "VernacExtend",
                        "919603fae9f5552a2987bbb604439a06966af0d9"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0; assumption.",
                        "VernacExtend",
                        "919603fae9f5552a2987bbb604439a06966af0d9"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0; assumption.",
                        "VernacExtend",
                        "919603fae9f5552a2987bbb604439a06966af0d9"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0; assumption.",
                        "VernacExtend",
                        "919603fae9f5552a2987bbb604439a06966af0d9"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0; assumption.",
                        "VernacExtend",
                        "919603fae9f5552a2987bbb604439a06966af0d9"
                    ]
                },
                {
                    "command": [
                        "apply prod_neq_R0; assumption.",
                        "VernacExtend",
                        "680f594f854a1838d82542e91066d23de34b831d"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rinv_mult_distr _ _ H0 H16).",
                        "VernacExtend",
                        "820170fc47d4f52b4060d415a3e1edff16d4b44a"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus; rewrite Rmult_plus_distr_r.",
                        "VernacExtend",
                        "cc160f91e13b56268b09b8d15d95271d67b8e35a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_assoc.",
                        "VernacExtend",
                        "34da3c50cde53c179a4908b1329a459071245c05"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "2ca74255a63c294f9442d956f32a2e3784636efb"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l.",
                        "VernacExtend",
                        "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
                    ]
                },
                {
                    "command": [
                        "rewrite Ropp_mult_distr_l_reverse.",
                        "VernacExtend",
                        "1d14afaf59b9fd90d930059e8d15a46d6c95c450"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm (f x)).",
                        "VernacExtend",
                        "88d88d9056e2bb58547db0a8741011d3462d962c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc.",
                        "VernacExtend",
                        "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H16 in H15; rewrite Rabs_R0 in H15; cut (0 < Rabs l / 2).",
                        "VernacExtend",
                        "a3d3b6d254a2ef754edabf5cd8a7cfe75325f405"
                    ]
                },
                {
                    "command": [
                        "intro; elim (Rlt_irrefl 0 (Rlt_trans 0 (Rabs l / 2) 0 H17 H15)).",
                        "VernacExtend",
                        "ae9406bb7f03d1e994c25538221ab4fc00cd1d4e"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "7122edbd68559f255bfed03dc640472ed14eb4ef"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos_lt; assumption.",
                        "VernacExtend",
                        "1143a29168ffe77f62e90c548869eca12a54b7db"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; cut (0%nat <> 2%nat); [ intro H17; generalize (lt_INR_0 2 (neq_O_lt 2 H17)); unfold INR; intro; assumption | discriminate ].",
                        "VernacExtend",
                        "a018418d4d49f2f999ca0861cc5452153ec2415b"
                    ]
                },
                {
                    "command": [
                        "pattern (Rabs l) at 3; rewrite double_var.",
                        "VernacExtend",
                        "59c298ae5d6f8111cc205300dc26dda68fb085f3"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "split; [ assumption | apply Rlt_le_trans with (Rmin delta1 delta2); [ assumption | apply Rmin_r ] ].",
                        "VernacExtend",
                        "cd66344bba734fd2017946b83d914a0e38988636"
                    ]
                },
                {
                    "command": [
                        "split; [ assumption | apply Rlt_le_trans with (Rmin delta1 delta2); [ assumption | apply Rmin_l ] ].",
                        "VernacExtend",
                        "701a697f09dc543c4a1a6a83310a2f79a0ad67b8"
                    ]
                },
                {
                    "command": [
                        "change (0 < eps * (Rsqr l / 2)); unfold Rdiv; repeat rewrite Rmult_assoc; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "e95bbec2135005bae515d1a657578b19058864f2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "apply Rsqr_pos_lt; assumption.",
                        "VernacExtend",
                        "35b1f2163e2b1006316370c816c9da4ca5d64b49"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; cut (0%nat <> 2%nat); [ intro H3; generalize (lt_INR_0 2 (neq_O_lt 2 H3)); unfold INR; intro; assumption | discriminate ].",
                        "VernacExtend",
                        "387d9eddca8859aa223d3d03ec20513d8085e557"
                    ]
                },
                {
                    "command": [
                        "change (0 < Rabs l / 2); unfold Rdiv; apply Rmult_lt_0_compat; [ apply Rabs_pos_lt; assumption | apply Rinv_0_lt_compat; cut (0%nat <> 2%nat); [ intro H3; generalize (lt_INR_0 2 (neq_O_lt 2 H3)); unfold INR; intro; assumption | discriminate ] ].",
                        "VernacExtend",
                        "feb8653674f59e21cbef37ffabec01e604d50129"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}