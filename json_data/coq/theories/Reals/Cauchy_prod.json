{
    "filename": "theories/Reals/Cauchy_prod.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Rbase.",
            "VernacRequire",
            "c0a8d81b170d4ed8309a8632a3cac35f6cba016a"
        ],
        [
            "Require Import Rfunctions.",
            "VernacRequire",
            "e0ba64ca9fd07e0fc91c59b7bf007fb29a662a86"
        ],
        [
            "Require Import Rseries.",
            "VernacRequire",
            "7a432dd14e4529f426efb08dc0832c62a8dcc16b"
        ],
        [
            "Require Import PartSum.",
            "VernacRequire",
            "615de8ef0ed75bdb68bd5486514f11be1837ffd8"
        ],
        [
            "Local Open Scope R_scope.",
            "VernacOpenCloseScope",
            "b005c72bb3303e031b42be04be04c87c005faa38"
        ],
        [
            "Lemma sum_N_predN : forall (An:nat -> R) (N:nat), (0 < N)%nat -> sum_f_R0 An N = sum_f_R0 An (pred N) + An N.",
            "VernacStartTheoremProof",
            "94a8597845233d6bed6c2411e0fe622e30c7d79a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace N with (S (pred N)).",
            "VernacExtend",
            "99733a630d25f8ff432da9092d59a1b3b11a7c3a"
        ],
        [
            "rewrite tech5.",
            "VernacExtend",
            "9868999d015d8d25987acdadb308fadae9d59e4a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "symmetry ; apply S_pred with 0%nat; assumption.",
            "VernacExtend",
            "07c00048f97977d2afec3560fb2e41ccdd392a6f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_plus : forall (An Bn:nat -> R) (N:nat), sum_f_R0 (fun l:nat => An l + Bn l) N = sum_f_R0 An N + sum_f_R0 Bn N.",
            "VernacStartTheoremProof",
            "16085a56298c4bf87ee0ad9e6a58d35dbe0e4db3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction N as [| N HrecN].",
            "VernacExtend",
            "af1041d02474f2c80c55a680ec1503779a0c4570"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "do 3 rewrite tech5.",
            "VernacExtend",
            "23ea81233a31d6ed959c1235d13ff41d19b57e1e"
        ],
        [
            "rewrite HrecN; ring.",
            "VernacExtend",
            "c3d38cbb2b9c501eb438afe8f05fcc984069166b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cauchy_finite : forall (An Bn:nat -> R) (N:nat), (0 < N)%nat -> sum_f_R0 An N * sum_f_R0 Bn N = sum_f_R0 (fun k:nat => sum_f_R0 (fun p:nat => An p * Bn (k - p)%nat) k) N + sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (l + k)) * Bn (N - l)%nat) (pred (N - k))) (pred N).",
            "VernacStartTheoremProof",
            "791dbbf28cf9a0d5c65620956e32d0cb469fb047"
        ],
        [
            "intros; induction N as [| N HrecN].",
            "VernacExtend",
            "176c4a7e299087f2a01baed2bde05aa27663e10d"
        ],
        [
            "elim (lt_irrefl _ H).",
            "VernacExtend",
            "fc90b77317c333bc64634f7cf1eecc8648bc7dc4"
        ],
        [
            "cut (N = 0%nat \\/ (0 < N)%nat).",
            "VernacExtend",
            "746da4531ecefb4fc2faa845b4657eadd8c6af3a"
        ],
        [
            "intro; elim H0; intro.",
            "VernacExtend",
            "80080ee26acf8bd4a9a5fd9e7b831121caff4c52"
        ],
        [
            "rewrite H1; simpl; ring.",
            "VernacExtend",
            "61be09738116290a883a11c8607e6499bb1e38e4"
        ],
        [
            "replace (pred (S N)) with (S (pred N)).",
            "VernacExtend",
            "ff317f871b70ce5b7372c0de0deb3d28258e609d"
        ],
        [
            "do 5 rewrite tech5.",
            "VernacExtend",
            "e1924823b450fe9498839c08e394ada803a16d09"
        ],
        [
            "rewrite Rmult_plus_distr_r; rewrite Rmult_plus_distr_l; rewrite (HrecN H1).",
            "VernacExtend",
            "ab95cac50d6af94dbc8fdc4691343b154470a9fb"
        ],
        [
            "repeat rewrite Rplus_assoc; apply Rplus_eq_compat_l.",
            "VernacExtend",
            "206b04797f7aa5293bd60a3d97dc301ce3c8df3f"
        ],
        [
            "replace (pred (S N - S (pred N))) with 0%nat.",
            "VernacExtend",
            "33faeb98fe15682cee72b6824182f48aed81560a"
        ],
        [
            "rewrite Rmult_plus_distr_l; replace (sum_f_R0 (fun l:nat => An (S (l + S (pred N))) * Bn (S N - l)%nat) 0) with (An (S N) * Bn (S N)).",
            "VernacExtend",
            "92f180b2de653512973b2cc645797ca589ea8b9b"
        ],
        [
            "repeat rewrite <- Rplus_assoc; do 2 rewrite <- (Rplus_comm (An (S N) * Bn (S N))); repeat rewrite Rplus_assoc; apply Rplus_eq_compat_l.",
            "VernacExtend",
            "5d58a1e3a67ac7693acb9904ee87f3ee7e88f276"
        ],
        [
            "rewrite <- minus_n_n; cut (N = 1%nat \\/ (2 <= N)%nat).",
            "VernacExtend",
            "bab422ce774a5ee38d2ca7ee77d09770bf56380b"
        ],
        [
            "intro; elim H2; intro.",
            "VernacExtend",
            "384707c7c85dc8c066104724fd997dc455dd8eef"
        ],
        [
            "rewrite H3; simpl; ring.",
            "VernacExtend",
            "f233ce6e6f924664860fb42747800c18664051ed"
        ],
        [
            "replace (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (l + k)) * Bn (N - l)%nat) (pred (N - k))) (pred N)) with (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (pred (N - k)))) (pred (pred N)) + sum_f_R0 (fun l:nat => An (S l) * Bn (N - l)%nat) (pred N)).",
            "VernacExtend",
            "4eeff98461e26514355eb2accfa27a63b2a4cff4"
        ],
        [
            "replace (sum_f_R0 (fun p:nat => An p * Bn (S N - p)%nat) N) with (sum_f_R0 (fun l:nat => An (S l) * Bn (N - l)%nat) (pred N) + An 0%nat * Bn (S N)).",
            "VernacExtend",
            "d56a6e2f2604eaeaa812761f8a16ec7316b96c77"
        ],
        [
            "repeat rewrite <- Rplus_assoc; rewrite <- (Rplus_comm (sum_f_R0 (fun l:nat => An (S l) * Bn (N - l)%nat) (pred N))) ; repeat rewrite Rplus_assoc; apply Rplus_eq_compat_l.",
            "VernacExtend",
            "a0bdc79d2c79eccccd2b4c102d155dc7021918af"
        ],
        [
            "replace (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (l + k)) * Bn (S N - l)%nat) (pred (S N - k))) (pred N)) with (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (N - k))) (pred N) + Bn (S N) * sum_f_R0 (fun l:nat => An (S l)) (pred N)).",
            "VernacExtend",
            "7b28bd8e28353b1ff95d33d2874b3cc7d5dfc45f"
        ],
        [
            "rewrite (decomp_sum An N H1); rewrite Rmult_plus_distr_r; repeat rewrite <- Rplus_assoc; rewrite <- (Rplus_comm (An 0%nat * Bn (S N))); repeat rewrite Rplus_assoc; apply Rplus_eq_compat_l.",
            "VernacExtend",
            "79628aab1d6211fde1acdfdaddb1c25bdfc04fbf"
        ],
        [
            "repeat rewrite <- Rplus_assoc; rewrite <- (Rplus_comm (sum_f_R0 (fun i:nat => An (S i)) (pred N) * Bn (S N))) ; rewrite <- (Rplus_comm (Bn (S N) * sum_f_R0 (fun i:nat => An (S i)) (pred N))) ; rewrite (Rmult_comm (Bn (S N))); repeat rewrite Rplus_assoc; apply Rplus_eq_compat_l.",
            "VernacExtend",
            "1787286d3df3ad9f25084201484c2960b00fab5a"
        ],
        [
            "replace (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (N - k))) (pred N)) with (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (pred (N - k)))) (pred (pred N)) + An (S N) * sum_f_R0 (fun l:nat => Bn (S l)) (pred N)).",
            "VernacExtend",
            "5c5587d9936577fc8e55ecc46d9c408a35198bb2"
        ],
        [
            "rewrite (decomp_sum Bn N H1); rewrite Rmult_plus_distr_l.",
            "VernacExtend",
            "e4b2f7f18249d0f80b58190584b11cf084bbcf3b"
        ],
        [
            "set (Z := sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (pred (N - k)))) (pred (pred N))); set (Z2 := sum_f_R0 (fun i:nat => Bn (S i)) (pred N)); ring.",
            "VernacExtend",
            "748fe474b3e36771b2ca9d0440c348ac54dbdbf4"
        ],
        [
            "rewrite (sum_N_predN (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (N - k))) (pred N)).",
            "VernacExtend",
            "5f90fe4d970ab3031eb3e8f6ad35e08d5b693c56"
        ],
        [
            "replace (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (N - k))) (pred (pred N))) with (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (pred (N - k))) + An (S N) * Bn (S k)) ( pred (pred N))).",
            "VernacExtend",
            "4d290cc50dd8f9e69c03d1c981a9db7f4d2c4777"
        ],
        [
            "rewrite (sum_plus (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (pred (N - k)))) (fun k:nat => An (S N) * Bn (S k)) (pred (pred N))).",
            "VernacExtend",
            "4e47d1fe048055c3471aba6c232da849973885c7"
        ],
        [
            "repeat rewrite Rplus_assoc; apply Rplus_eq_compat_l.",
            "VernacExtend",
            "206b04797f7aa5293bd60a3d97dc301ce3c8df3f"
        ],
        [
            "replace (pred (N - pred N)) with 0%nat.",
            "VernacExtend",
            "d54f7786cc57aa115cb9bbf1eac598d43ce1d4a4"
        ],
        [
            "simpl; rewrite <- minus_n_O.",
            "VernacExtend",
            "01fdaf043608b16e5861e8f2b8dc024641f2d4ef"
        ],
        [
            "replace (S (pred N)) with N.",
            "VernacExtend",
            "5293ec68c572bfb88c819313ab56352614474e6f"
        ],
        [
            "replace (sum_f_R0 (fun k:nat => An (S N) * Bn (S k)) (pred (pred N))) with (sum_f_R0 (fun k:nat => Bn (S k) * An (S N)) (pred (pred N))).",
            "VernacExtend",
            "87aae2630b619fe0e76cb29019aaf1769f5aa6ee"
        ],
        [
            "rewrite <- (scal_sum (fun l:nat => Bn (S l)) (pred (pred N)) (An (S N))); rewrite (sum_N_predN (fun l:nat => Bn (S l)) (pred N)).",
            "VernacExtend",
            "94fc1f2432ab4fbd7e4e9a7e4a2603550507ddf7"
        ],
        [
            "replace (S (pred N)) with N.",
            "VernacExtend",
            "5293ec68c572bfb88c819313ab56352614474e6f"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply S_pred with 0%nat; assumption.",
            "VernacExtend",
            "b39660ec3a92df9aac441f5d4480a21443485407"
        ],
        [
            "apply lt_pred; apply lt_le_trans with 2%nat; [ apply lt_n_Sn | assumption ].",
            "VernacExtend",
            "1b297b588b5bf252343375148fc5462a95f6575c"
        ],
        [
            "apply sum_eq; intros; apply Rmult_comm.",
            "VernacExtend",
            "9a4c3da8cd66d70176d28c2d5fb1d1c1499a817e"
        ],
        [
            "apply S_pred with 0%nat; assumption.",
            "VernacExtend",
            "b39660ec3a92df9aac441f5d4480a21443485407"
        ],
        [
            "replace (N - pred N)%nat with 1%nat.",
            "VernacExtend",
            "0f9d4335c9632b485a10dbc0a2c37be556e9f828"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "pattern N at 1; replace N with (S (pred N)).",
            "VernacExtend",
            "2d6d66bb6fe54d4da13b9d36e93fc9c37c440e96"
        ],
        [
            "rewrite <- minus_Sn_m.",
            "VernacExtend",
            "808a21c00826f53fd5122068d41d20a5b1758aff"
        ],
        [
            "rewrite <- minus_n_n; reflexivity.",
            "VernacExtend",
            "c3299baf15066e33ce4b4f186e78bbee78a9b5a4"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "symmetry ; apply S_pred with 0%nat; assumption.",
            "VernacExtend",
            "07c00048f97977d2afec3560fb2e41ccdd392a6f"
        ],
        [
            "apply sum_eq; intros; rewrite (sum_N_predN (fun l:nat => An (S (S (l + i))) * Bn (N - l)%nat) (pred (N - i))).",
            "VernacExtend",
            "3a72906d888db54852ab2dc3237d4e487580bde2"
        ],
        [
            "replace (S (S (pred (N - i) + i))) with (S N).",
            "VernacExtend",
            "bad7dbfb194a2375ab0c5c92620fee05a3d3485f"
        ],
        [
            "replace (N - pred (N - i))%nat with (S i).",
            "VernacExtend",
            "84e2ded16b5054602229bb23ef589578652480f9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "rewrite pred_of_minus; apply INR_eq; repeat rewrite minus_INR.",
            "VernacExtend",
            "55af9b8912f5a3ae4b8c6ebdd86b2a20932ce925"
        ],
        [
            "rewrite S_INR; simpl; ring.",
            "VernacExtend",
            "dcab20eca31a3b21105ac307662de9cc8f3f0037"
        ],
        [
            "apply le_trans with (pred (pred N)).",
            "VernacExtend",
            "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_trans with (pred N); apply le_pred_n.",
            "VernacExtend",
            "b520acd03ab27b1c9138989ef945d961ed58ac0b"
        ],
        [
            "apply INR_le; rewrite minus_INR.",
            "VernacExtend",
            "2ec6951d1461ea9bcefb8e986173e3751d8606d1"
        ],
        [
            "apply Rplus_le_reg_l with (INR i - 1).",
            "VernacExtend",
            "c30e76b4a91086ca0199f96b57bf43a1bb55a3e1"
        ],
        [
            "replace (INR i - 1 + INR 1) with (INR i); [ idtac | simpl; ring ].",
            "VernacExtend",
            "e848fffb5773724a47e0ce5ab8f230e7afe696d5"
        ],
        [
            "replace (INR i - 1 + (INR N - INR i)) with (INR N - INR 1); [ idtac | simpl; ring ].",
            "VernacExtend",
            "27f7f6d08c98f18a11a447696ac0d083edb6bac6"
        ],
        [
            "rewrite <- minus_INR.",
            "VernacExtend",
            "899d74f5164e38a4aebf8a66e6f3059a51d72d9d"
        ],
        [
            "apply le_INR; apply le_trans with (pred (pred N)).",
            "VernacExtend",
            "9cef385950f1b3043650c4d6f2bc0ca1ea8a2edb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- pred_of_minus; apply le_pred_n.",
            "VernacExtend",
            "aa44a67cf6cbc2a50bc7a99de0819a4e4294dba5"
        ],
        [
            "apply le_trans with 2%nat.",
            "VernacExtend",
            "c7397b14fc4ee575ccb2a22f04d5a5da73efd266"
        ],
        [
            "apply le_n_Sn.",
            "VernacExtend",
            "7889648199cacb866ef42ba6b4c4192f713b44f4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_trans with (pred (pred N)).",
            "VernacExtend",
            "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_trans with (pred N); apply le_pred_n.",
            "VernacExtend",
            "b520acd03ab27b1c9138989ef945d961ed58ac0b"
        ],
        [
            "rewrite <- pred_of_minus.",
            "VernacExtend",
            "9363a753855cabde849bf5dab4137e9e3b63aba2"
        ],
        [
            "apply le_trans with (pred N).",
            "VernacExtend",
            "697c3ad137583470120c22c967822257191966c3"
        ],
        [
            "apply le_S_n.",
            "VernacExtend",
            "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
        ],
        [
            "replace (S (pred N)) with N.",
            "VernacExtend",
            "5293ec68c572bfb88c819313ab56352614474e6f"
        ],
        [
            "replace (S (pred (N - i))) with (N - i)%nat.",
            "VernacExtend",
            "c6af4c7cac66a10578553100b7388371e02a318c"
        ],
        [
            "apply (fun p n m:nat => plus_le_reg_l n m p) with i; rewrite le_plus_minus_r.",
            "VernacExtend",
            "b127e34fcb3d057fc97f5773ee11ae5c3f861719"
        ],
        [
            "apply le_plus_r.",
            "VernacExtend",
            "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
        ],
        [
            "apply le_trans with (pred (pred N)); [ assumption | apply le_trans with (pred N); apply le_pred_n ].",
            "VernacExtend",
            "bbd2c392beb8be6a3b925b203ee58c9ef600a1c8"
        ],
        [
            "apply S_pred with 0%nat.",
            "VernacExtend",
            "d8063149a7685a2b3101abaef06920345a705a6d"
        ],
        [
            "apply plus_lt_reg_l with i; rewrite le_plus_minus_r.",
            "VernacExtend",
            "17cf99acf632fbfcc150d6b62a09364d7ee082fd"
        ],
        [
            "replace (i + 0)%nat with i; [ idtac | ring ].",
            "VernacExtend",
            "e36e421f9befaf3c9df04abbe937e241f8e4e088"
        ],
        [
            "apply le_lt_trans with (pred (pred N)); [ assumption | apply lt_trans with (pred N); apply lt_pred_n_n ].",
            "VernacExtend",
            "2bb6c3251a47dec936e3811093a5247c872d6f3f"
        ],
        [
            "apply lt_S_n.",
            "VernacExtend",
            "0207638f6e9dea4c2a8a3945f23446b376d8318e"
        ],
        [
            "replace (S (pred N)) with N.",
            "VernacExtend",
            "5293ec68c572bfb88c819313ab56352614474e6f"
        ],
        [
            "apply lt_le_trans with 2%nat.",
            "VernacExtend",
            "d8316a470ddd4095f135a570a1663f1ddbf1ece5"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply S_pred with 0%nat; assumption.",
            "VernacExtend",
            "b39660ec3a92df9aac441f5d4480a21443485407"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_trans with (pred (pred N)).",
            "VernacExtend",
            "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_trans with (pred N); apply le_pred_n.",
            "VernacExtend",
            "b520acd03ab27b1c9138989ef945d961ed58ac0b"
        ],
        [
            "apply S_pred with 0%nat; assumption.",
            "VernacExtend",
            "b39660ec3a92df9aac441f5d4480a21443485407"
        ],
        [
            "apply le_pred_n.",
            "VernacExtend",
            "fdeb9a08434ca2997b985c79da33d20299a259d6"
        ],
        [
            "apply INR_eq; rewrite pred_of_minus; do 3 rewrite S_INR; rewrite plus_INR; repeat rewrite minus_INR.",
            "VernacExtend",
            "58b0592f688c11b534e18f474ae3c4412ccbba5d"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "apply le_trans with (pred (pred N)).",
            "VernacExtend",
            "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_trans with (pred N); apply le_pred_n.",
            "VernacExtend",
            "b520acd03ab27b1c9138989ef945d961ed58ac0b"
        ],
        [
            "apply INR_le.",
            "VernacExtend",
            "a01548465e326a7bda672bd697c8e9a5ea63ea76"
        ],
        [
            "rewrite minus_INR.",
            "VernacExtend",
            "ddd12a81f335f5d6f0801c4603d2cacfd18f2ab8"
        ],
        [
            "apply Rplus_le_reg_l with (INR i - 1).",
            "VernacExtend",
            "c30e76b4a91086ca0199f96b57bf43a1bb55a3e1"
        ],
        [
            "replace (INR i - 1 + INR 1) with (INR i); [ idtac | simpl; ring ].",
            "VernacExtend",
            "e848fffb5773724a47e0ce5ab8f230e7afe696d5"
        ],
        [
            "replace (INR i - 1 + (INR N - INR i)) with (INR N - INR 1); [ idtac | simpl; ring ].",
            "VernacExtend",
            "27f7f6d08c98f18a11a447696ac0d083edb6bac6"
        ],
        [
            "rewrite <- minus_INR.",
            "VernacExtend",
            "899d74f5164e38a4aebf8a66e6f3059a51d72d9d"
        ],
        [
            "apply le_INR.",
            "VernacExtend",
            "482ba85c33b4f446aa5e9ca8bca5b198f5d8a8c5"
        ],
        [
            "apply le_trans with (pred (pred N)).",
            "VernacExtend",
            "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- pred_of_minus.",
            "VernacExtend",
            "9363a753855cabde849bf5dab4137e9e3b63aba2"
        ],
        [
            "apply le_pred_n.",
            "VernacExtend",
            "fdeb9a08434ca2997b985c79da33d20299a259d6"
        ],
        [
            "apply le_trans with 2%nat.",
            "VernacExtend",
            "c7397b14fc4ee575ccb2a22f04d5a5da73efd266"
        ],
        [
            "apply le_n_Sn.",
            "VernacExtend",
            "7889648199cacb866ef42ba6b4c4192f713b44f4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_trans with (pred (pred N)).",
            "VernacExtend",
            "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_trans with (pred N); apply le_pred_n.",
            "VernacExtend",
            "b520acd03ab27b1c9138989ef945d961ed58ac0b"
        ],
        [
            "apply lt_le_trans with 1%nat.",
            "VernacExtend",
            "abc85192d5734af335bb5ee8dc96c9bf7d453d77"
        ],
        [
            "apply lt_O_Sn.",
            "VernacExtend",
            "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
        ],
        [
            "apply INR_le.",
            "VernacExtend",
            "a01548465e326a7bda672bd697c8e9a5ea63ea76"
        ],
        [
            "rewrite pred_of_minus.",
            "VernacExtend",
            "8a546bbb2b8d8e34e605508c68d2ce5a8d5775eb"
        ],
        [
            "repeat rewrite minus_INR.",
            "VernacExtend",
            "731b352d9221594e1695909f5840f06a9624fb56"
        ],
        [
            "apply Rplus_le_reg_l with (INR i - 1).",
            "VernacExtend",
            "c30e76b4a91086ca0199f96b57bf43a1bb55a3e1"
        ],
        [
            "replace (INR i - 1 + INR 1) with (INR i); [ idtac | simpl; ring ].",
            "VernacExtend",
            "e848fffb5773724a47e0ce5ab8f230e7afe696d5"
        ],
        [
            "replace (INR i - 1 + (INR N - INR i - INR 1)) with (INR N - INR 1 - INR 1).",
            "VernacExtend",
            "a7feed5c2b889b94b38ef566cdee3866d3cd3410"
        ],
        [
            "repeat rewrite <- minus_INR.",
            "VernacExtend",
            "e67e7f53d004af957f811f4699446f25d8fd9d66"
        ],
        [
            "apply le_INR.",
            "VernacExtend",
            "482ba85c33b4f446aa5e9ca8bca5b198f5d8a8c5"
        ],
        [
            "apply le_trans with (pred (pred N)).",
            "VernacExtend",
            "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "do 2 rewrite <- pred_of_minus.",
            "VernacExtend",
            "7cdfcb777b28a5720bc3bc6f5871b8f5e9185ac9"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "apply (fun p n m:nat => plus_le_reg_l n m p) with 1%nat.",
            "VernacExtend",
            "3791fad670e1ca4050789a3a10e5a5b14f4fec46"
        ],
        [
            "rewrite le_plus_minus_r.",
            "VernacExtend",
            "6b0db2e3be85a65e107c76d6578778375102b28a"
        ],
        [
            "simpl; assumption.",
            "VernacExtend",
            "b1f9ad3a64b2d320fc95a4fc7d31f60651bfdba6"
        ],
        [
            "apply le_trans with 2%nat; [ apply le_n_Sn | assumption ].",
            "VernacExtend",
            "49e72e7b090d3563bda9ae6492020ee6f2ef6615"
        ],
        [
            "apply le_trans with 2%nat; [ apply le_n_Sn | assumption ].",
            "VernacExtend",
            "49e72e7b090d3563bda9ae6492020ee6f2ef6615"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "apply le_trans with (pred (pred N)).",
            "VernacExtend",
            "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_trans with (pred N); apply le_pred_n.",
            "VernacExtend",
            "b520acd03ab27b1c9138989ef945d961ed58ac0b"
        ],
        [
            "apply (fun p n m:nat => plus_le_reg_l n m p) with i.",
            "VernacExtend",
            "552aa27e7a582506ee65b676eb132b57987fefeb"
        ],
        [
            "rewrite le_plus_minus_r.",
            "VernacExtend",
            "6b0db2e3be85a65e107c76d6578778375102b28a"
        ],
        [
            "replace (i + 1)%nat with (S i).",
            "VernacExtend",
            "01a152f4f2177fc4568243ac2f14aba4db7a4bd7"
        ],
        [
            "replace N with (S (pred N)).",
            "VernacExtend",
            "99733a630d25f8ff432da9092d59a1b3b11a7c3a"
        ],
        [
            "apply le_n_S.",
            "VernacExtend",
            "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
        ],
        [
            "apply le_trans with (pred (pred N)).",
            "VernacExtend",
            "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_pred_n.",
            "VernacExtend",
            "fdeb9a08434ca2997b985c79da33d20299a259d6"
        ],
        [
            "symmetry ; apply S_pred with 0%nat; assumption.",
            "VernacExtend",
            "07c00048f97977d2afec3560fb2e41ccdd392a6f"
        ],
        [
            "apply INR_eq; rewrite S_INR; rewrite plus_INR; reflexivity.",
            "VernacExtend",
            "eeea5fa7df02cb5faee9289993efbbb50aaac6a6"
        ],
        [
            "apply le_trans with (pred (pred N)).",
            "VernacExtend",
            "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_trans with (pred N); apply le_pred_n.",
            "VernacExtend",
            "b520acd03ab27b1c9138989ef945d961ed58ac0b"
        ],
        [
            "apply lt_le_trans with 1%nat.",
            "VernacExtend",
            "abc85192d5734af335bb5ee8dc96c9bf7d453d77"
        ],
        [
            "apply lt_O_Sn.",
            "VernacExtend",
            "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
        ],
        [
            "apply le_S_n.",
            "VernacExtend",
            "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
        ],
        [
            "replace (S (pred N)) with N.",
            "VernacExtend",
            "5293ec68c572bfb88c819313ab56352614474e6f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply S_pred with 0%nat; assumption.",
            "VernacExtend",
            "b39660ec3a92df9aac441f5d4480a21443485407"
        ],
        [
            "replace (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (l + k)) * Bn (S N - l)%nat) (pred (S N - k))) (pred N)) with (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (N - k)) + An (S k) * Bn (S N)) (pred N)).",
            "VernacExtend",
            "93c9358e9d85678022e6231f6c6721e67cecd903"
        ],
        [
            "rewrite (sum_plus (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (N - k))) (fun k:nat => An (S k) * Bn (S N))).",
            "VernacExtend",
            "6ec6e2e8862798b4d9c9a1a02134159dcfae0144"
        ],
        [
            "apply Rplus_eq_compat_l.",
            "VernacExtend",
            "76e8923f15671bb36c0fea83fec68cfd51cb2557"
        ],
        [
            "rewrite scal_sum; reflexivity.",
            "VernacExtend",
            "bfe98ed8c2f62db1a9ec826df672429e2d9ea804"
        ],
        [
            "apply sum_eq; intros; rewrite Rplus_comm; rewrite (decomp_sum (fun l:nat => An (S (l + i)) * Bn (S N - l)%nat) (pred (S N - i))).",
            "VernacExtend",
            "8588f90f6bb4e069a42ec3b6a452cacea52453f9"
        ],
        [
            "replace (0 + i)%nat with i; [ idtac | ring ].",
            "VernacExtend",
            "a1b39a12cca4a6c7a50772a94c969818d9837136"
        ],
        [
            "rewrite <- minus_n_O; apply Rplus_eq_compat_l.",
            "VernacExtend",
            "fe712ffdbce2824bd0a62e845168b0ca537f6688"
        ],
        [
            "replace (pred (pred (S N - i))) with (pred (N - i)).",
            "VernacExtend",
            "175a80b5d3840b8cfdea921406b2916e0afd9d00"
        ],
        [
            "apply sum_eq; intros.",
            "VernacExtend",
            "507f6828620591e6e18a46dcd737cd32eff30125"
        ],
        [
            "replace (S N - S i0)%nat with (N - i0)%nat; [ idtac | reflexivity ].",
            "VernacExtend",
            "c14d4c85b248e5ac29bd566d5c31cafe9cbd17e4"
        ],
        [
            "replace (S i0 + i)%nat with (S (i0 + i)).",
            "VernacExtend",
            "203f81061f2859937e6181714bfbf48eed27924d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply INR_eq; rewrite S_INR; do 2 rewrite plus_INR; rewrite S_INR; simpl; ring.",
            "VernacExtend",
            "ba19f0d37620f5f5f46d4a90a3a13f4ff47dcdb5"
        ],
        [
            "cut ((N - i)%nat = pred (S N - i)).",
            "VernacExtend",
            "18f6efb9d7233b3630a2d69f6eb7fa25943c0e05"
        ],
        [
            "intro; rewrite H5; reflexivity.",
            "VernacExtend",
            "d8015851c9806eb0a98cadded6a3f88c4eaab879"
        ],
        [
            "rewrite pred_of_minus.",
            "VernacExtend",
            "8a546bbb2b8d8e34e605508c68d2ce5a8d5775eb"
        ],
        [
            "apply INR_eq; repeat rewrite minus_INR.",
            "VernacExtend",
            "cc976f78e0275ac3f42c5aaaced5a442c9cbf045"
        ],
        [
            "rewrite S_INR; simpl; ring.",
            "VernacExtend",
            "dcab20eca31a3b21105ac307662de9cc8f3f0037"
        ],
        [
            "apply le_trans with N.",
            "VernacExtend",
            "f4922ce04bbdda9b1da08d6dd903134e8ba0e25b"
        ],
        [
            "apply le_trans with (pred N).",
            "VernacExtend",
            "697c3ad137583470120c22c967822257191966c3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_pred_n.",
            "VernacExtend",
            "fdeb9a08434ca2997b985c79da33d20299a259d6"
        ],
        [
            "apply le_n_Sn.",
            "VernacExtend",
            "7889648199cacb866ef42ba6b4c4192f713b44f4"
        ],
        [
            "apply (fun p n m:nat => plus_le_reg_l n m p) with i.",
            "VernacExtend",
            "552aa27e7a582506ee65b676eb132b57987fefeb"
        ],
        [
            "rewrite le_plus_minus_r.",
            "VernacExtend",
            "6b0db2e3be85a65e107c76d6578778375102b28a"
        ],
        [
            "replace (i + 1)%nat with (S i).",
            "VernacExtend",
            "01a152f4f2177fc4568243ac2f14aba4db7a4bd7"
        ],
        [
            "apply le_n_S.",
            "VernacExtend",
            "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
        ],
        [
            "apply le_trans with (pred N).",
            "VernacExtend",
            "697c3ad137583470120c22c967822257191966c3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_pred_n.",
            "VernacExtend",
            "fdeb9a08434ca2997b985c79da33d20299a259d6"
        ],
        [
            "apply INR_eq; rewrite S_INR; rewrite plus_INR; simpl; ring.",
            "VernacExtend",
            "2f8c59681d7e34ac992f16f501c50ce666f654b2"
        ],
        [
            "apply le_trans with N.",
            "VernacExtend",
            "f4922ce04bbdda9b1da08d6dd903134e8ba0e25b"
        ],
        [
            "apply le_trans with (pred N).",
            "VernacExtend",
            "697c3ad137583470120c22c967822257191966c3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_pred_n.",
            "VernacExtend",
            "fdeb9a08434ca2997b985c79da33d20299a259d6"
        ],
        [
            "apply le_n_Sn.",
            "VernacExtend",
            "7889648199cacb866ef42ba6b4c4192f713b44f4"
        ],
        [
            "apply le_trans with (pred N).",
            "VernacExtend",
            "697c3ad137583470120c22c967822257191966c3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_pred_n.",
            "VernacExtend",
            "fdeb9a08434ca2997b985c79da33d20299a259d6"
        ],
        [
            "replace (pred (S N - i)) with (S N - S i)%nat.",
            "VernacExtend",
            "c8454df7b54fcdd265c19d7d9120cdcb80f29c3d"
        ],
        [
            "replace (S N - S i)%nat with (N - i)%nat; [ idtac | reflexivity ].",
            "VernacExtend",
            "bb3250cabe357140edbccb8344a6dc8c15e6c55b"
        ],
        [
            "apply plus_lt_reg_l with i.",
            "VernacExtend",
            "d33d0aacfa5b7cfbce5778ea4a09f23a18e0b15a"
        ],
        [
            "rewrite le_plus_minus_r.",
            "VernacExtend",
            "6b0db2e3be85a65e107c76d6578778375102b28a"
        ],
        [
            "replace (i + 0)%nat with i; [ idtac | ring ].",
            "VernacExtend",
            "e36e421f9befaf3c9df04abbe937e241f8e4e088"
        ],
        [
            "apply le_lt_trans with (pred N).",
            "VernacExtend",
            "4a76a89ffe467a0a84d4b4f6c728a42494bb6a89"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply lt_pred_n_n.",
            "VernacExtend",
            "d9ca7c2e7cc7d9b38b8e9f82ffa8864e47795204"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_trans with (pred N).",
            "VernacExtend",
            "697c3ad137583470120c22c967822257191966c3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_pred_n.",
            "VernacExtend",
            "fdeb9a08434ca2997b985c79da33d20299a259d6"
        ],
        [
            "rewrite pred_of_minus.",
            "VernacExtend",
            "8a546bbb2b8d8e34e605508c68d2ce5a8d5775eb"
        ],
        [
            "apply INR_eq; repeat rewrite minus_INR.",
            "VernacExtend",
            "cc976f78e0275ac3f42c5aaaced5a442c9cbf045"
        ],
        [
            "repeat rewrite S_INR; simpl; ring.",
            "VernacExtend",
            "96bad10a3b01537e7a39bce913db3cc4b79d3f63"
        ],
        [
            "apply le_trans with N.",
            "VernacExtend",
            "f4922ce04bbdda9b1da08d6dd903134e8ba0e25b"
        ],
        [
            "apply le_trans with (pred N).",
            "VernacExtend",
            "697c3ad137583470120c22c967822257191966c3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_pred_n.",
            "VernacExtend",
            "fdeb9a08434ca2997b985c79da33d20299a259d6"
        ],
        [
            "apply le_n_Sn.",
            "VernacExtend",
            "7889648199cacb866ef42ba6b4c4192f713b44f4"
        ],
        [
            "apply (fun p n m:nat => plus_le_reg_l n m p) with i.",
            "VernacExtend",
            "552aa27e7a582506ee65b676eb132b57987fefeb"
        ],
        [
            "rewrite le_plus_minus_r.",
            "VernacExtend",
            "6b0db2e3be85a65e107c76d6578778375102b28a"
        ],
        [
            "replace (i + 1)%nat with (S i).",
            "VernacExtend",
            "01a152f4f2177fc4568243ac2f14aba4db7a4bd7"
        ],
        [
            "apply le_n_S.",
            "VernacExtend",
            "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
        ],
        [
            "apply le_trans with (pred N).",
            "VernacExtend",
            "697c3ad137583470120c22c967822257191966c3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_pred_n.",
            "VernacExtend",
            "fdeb9a08434ca2997b985c79da33d20299a259d6"
        ],
        [
            "apply INR_eq; rewrite S_INR; rewrite plus_INR; simpl; ring.",
            "VernacExtend",
            "2f8c59681d7e34ac992f16f501c50ce666f654b2"
        ],
        [
            "apply le_trans with N.",
            "VernacExtend",
            "f4922ce04bbdda9b1da08d6dd903134e8ba0e25b"
        ],
        [
            "apply le_trans with (pred N).",
            "VernacExtend",
            "697c3ad137583470120c22c967822257191966c3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_pred_n.",
            "VernacExtend",
            "fdeb9a08434ca2997b985c79da33d20299a259d6"
        ],
        [
            "apply le_n_Sn.",
            "VernacExtend",
            "7889648199cacb866ef42ba6b4c4192f713b44f4"
        ],
        [
            "apply le_n_S.",
            "VernacExtend",
            "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
        ],
        [
            "apply le_trans with (pred N).",
            "VernacExtend",
            "697c3ad137583470120c22c967822257191966c3"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_pred_n.",
            "VernacExtend",
            "fdeb9a08434ca2997b985c79da33d20299a259d6"
        ],
        [
            "rewrite Rplus_comm.",
            "VernacExtend",
            "1ea33e6774c5768bd211bdf8c447feee9b9e21de"
        ],
        [
            "rewrite (decomp_sum (fun p:nat => An p * Bn (S N - p)%nat) N).",
            "VernacExtend",
            "56129239a12bc4d5a11d46df039cf5b1f033129a"
        ],
        [
            "rewrite <- minus_n_O.",
            "VernacExtend",
            "07c627020c0e4bdce7de45e442d614cb6a64a0cf"
        ],
        [
            "apply Rplus_eq_compat_l.",
            "VernacExtend",
            "76e8923f15671bb36c0fea83fec68cfd51cb2557"
        ],
        [
            "apply sum_eq; intros.",
            "VernacExtend",
            "507f6828620591e6e18a46dcd737cd32eff30125"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite Rplus_comm.",
            "VernacExtend",
            "1ea33e6774c5768bd211bdf8c447feee9b9e21de"
        ],
        [
            "rewrite (decomp_sum (fun k:nat => sum_f_R0 (fun l:nat => An (S (l + k)) * Bn (N - l)%nat) (pred (N - k))) (pred N)).",
            "VernacExtend",
            "300ff0d27a4a19bcc0cc585a82dbb4a0753687c8"
        ],
        [
            "rewrite <- minus_n_O.",
            "VernacExtend",
            "07c627020c0e4bdce7de45e442d614cb6a64a0cf"
        ],
        [
            "replace (sum_f_R0 (fun l:nat => An (S (l + 0)) * Bn (N - l)%nat) (pred N)) with (sum_f_R0 (fun l:nat => An (S l) * Bn (N - l)%nat) (pred N)).",
            "VernacExtend",
            "7095cddba25e5b2564a71ef63f234e37d9ea9b46"
        ],
        [
            "apply Rplus_eq_compat_l.",
            "VernacExtend",
            "76e8923f15671bb36c0fea83fec68cfd51cb2557"
        ],
        [
            "apply sum_eq; intros.",
            "VernacExtend",
            "507f6828620591e6e18a46dcd737cd32eff30125"
        ],
        [
            "replace (pred (N - S i)) with (pred (pred (N - i))).",
            "VernacExtend",
            "4aefdc8c0e66f2050fcfaf068fb721f02863900b"
        ],
        [
            "apply sum_eq; intros.",
            "VernacExtend",
            "507f6828620591e6e18a46dcd737cd32eff30125"
        ],
        [
            "replace (i0 + S i)%nat with (S (i0 + i)).",
            "VernacExtend",
            "19b72df025003aa75ca24573ca30dc1780cef16f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply INR_eq; rewrite S_INR; do 2 rewrite plus_INR; rewrite S_INR; simpl; ring.",
            "VernacExtend",
            "ba19f0d37620f5f5f46d4a90a3a13f4ff47dcdb5"
        ],
        [
            "cut (pred (N - i) = (N - S i)%nat).",
            "VernacExtend",
            "1834b04dcce5a983f50f509b036c2f512e70706e"
        ],
        [
            "intro; rewrite H5; reflexivity.",
            "VernacExtend",
            "d8015851c9806eb0a98cadded6a3f88c4eaab879"
        ],
        [
            "rewrite pred_of_minus.",
            "VernacExtend",
            "8a546bbb2b8d8e34e605508c68d2ce5a8d5775eb"
        ],
        [
            "apply INR_eq.",
            "VernacExtend",
            "04e6ff4e8b8ad5be6648ce8079e647da3489bc22"
        ],
        [
            "repeat rewrite minus_INR.",
            "VernacExtend",
            "731b352d9221594e1695909f5840f06a9624fb56"
        ],
        [
            "repeat rewrite S_INR; simpl; ring.",
            "VernacExtend",
            "96bad10a3b01537e7a39bce913db3cc4b79d3f63"
        ],
        [
            "apply le_trans with (S (pred (pred N))).",
            "VernacExtend",
            "7c175345605fd60f7d958e52584a54e882ac1276"
        ],
        [
            "apply le_n_S; assumption.",
            "VernacExtend",
            "0eb3477345554c98971f24ea100acc6b0fe9f945"
        ],
        [
            "replace (S (pred (pred N))) with (pred N).",
            "VernacExtend",
            "cbdc0be8ea222b6afd7667bab98862406e21e5a1"
        ],
        [
            "apply le_pred_n.",
            "VernacExtend",
            "fdeb9a08434ca2997b985c79da33d20299a259d6"
        ],
        [
            "apply S_pred with 0%nat.",
            "VernacExtend",
            "d8063149a7685a2b3101abaef06920345a705a6d"
        ],
        [
            "apply lt_S_n.",
            "VernacExtend",
            "0207638f6e9dea4c2a8a3945f23446b376d8318e"
        ],
        [
            "replace (S (pred N)) with N.",
            "VernacExtend",
            "5293ec68c572bfb88c819313ab56352614474e6f"
        ],
        [
            "apply lt_le_trans with 2%nat.",
            "VernacExtend",
            "d8316a470ddd4095f135a570a1663f1ddbf1ece5"
        ],
        [
            "apply lt_n_Sn.",
            "VernacExtend",
            "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply S_pred with 0%nat; assumption.",
            "VernacExtend",
            "b39660ec3a92df9aac441f5d4480a21443485407"
        ],
        [
            "apply le_trans with (pred (pred N)).",
            "VernacExtend",
            "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_trans with (pred N); apply le_pred_n.",
            "VernacExtend",
            "b520acd03ab27b1c9138989ef945d961ed58ac0b"
        ],
        [
            "apply (fun p n m:nat => plus_le_reg_l n m p) with i.",
            "VernacExtend",
            "552aa27e7a582506ee65b676eb132b57987fefeb"
        ],
        [
            "rewrite le_plus_minus_r.",
            "VernacExtend",
            "6b0db2e3be85a65e107c76d6578778375102b28a"
        ],
        [
            "replace (i + 1)%nat with (S i).",
            "VernacExtend",
            "01a152f4f2177fc4568243ac2f14aba4db7a4bd7"
        ],
        [
            "replace N with (S (pred N)).",
            "VernacExtend",
            "99733a630d25f8ff432da9092d59a1b3b11a7c3a"
        ],
        [
            "apply le_n_S.",
            "VernacExtend",
            "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
        ],
        [
            "apply le_trans with (pred (pred N)).",
            "VernacExtend",
            "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_pred_n.",
            "VernacExtend",
            "fdeb9a08434ca2997b985c79da33d20299a259d6"
        ],
        [
            "symmetry ; apply S_pred with 0%nat; assumption.",
            "VernacExtend",
            "07c00048f97977d2afec3560fb2e41ccdd392a6f"
        ],
        [
            "apply INR_eq; rewrite S_INR; rewrite plus_INR; simpl; ring.",
            "VernacExtend",
            "2f8c59681d7e34ac992f16f501c50ce666f654b2"
        ],
        [
            "apply le_trans with (pred (pred N)).",
            "VernacExtend",
            "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply le_trans with (pred N); apply le_pred_n.",
            "VernacExtend",
            "b520acd03ab27b1c9138989ef945d961ed58ac0b"
        ],
        [
            "apply sum_eq; intros.",
            "VernacExtend",
            "507f6828620591e6e18a46dcd737cd32eff30125"
        ],
        [
            "replace (i + 0)%nat with i; [ reflexivity | trivial ].",
            "VernacExtend",
            "3194a2325f317ce807256defbb7681f4e72f968f"
        ],
        [
            "apply lt_S_n.",
            "VernacExtend",
            "0207638f6e9dea4c2a8a3945f23446b376d8318e"
        ],
        [
            "replace (S (pred N)) with N.",
            "VernacExtend",
            "5293ec68c572bfb88c819313ab56352614474e6f"
        ],
        [
            "apply lt_le_trans with 2%nat; [ apply lt_n_Sn | assumption ].",
            "VernacExtend",
            "545ed125478d8098d39f05e7e6f900e1a9c67fef"
        ],
        [
            "apply S_pred with 0%nat; assumption.",
            "VernacExtend",
            "b39660ec3a92df9aac441f5d4480a21443485407"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "left; reflexivity.",
            "VernacExtend",
            "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
        ],
        [
            "right; apply le_n_S; assumption.",
            "VernacExtend",
            "a021e48d706453bbb7be50f2fb983f346d514637"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "replace (S (pred N)) with N.",
            "VernacExtend",
            "5293ec68c572bfb88c819313ab56352614474e6f"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply S_pred with 0%nat; assumption.",
            "VernacExtend",
            "b39660ec3a92df9aac441f5d4480a21443485407"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "cut ((N - pred N)%nat = 1%nat).",
            "VernacExtend",
            "002a186000e044922c7b7aadae75d7ad55ca9bdb"
        ],
        [
            "intro; rewrite H2; reflexivity.",
            "VernacExtend",
            "cb106624ac19cb96bf64f0a61188df25d35e7677"
        ],
        [
            "rewrite pred_of_minus.",
            "VernacExtend",
            "8a546bbb2b8d8e34e605508c68d2ce5a8d5775eb"
        ],
        [
            "apply INR_eq; repeat rewrite minus_INR.",
            "VernacExtend",
            "cc976f78e0275ac3f42c5aaaced5a442c9cbf045"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "apply lt_le_S; assumption.",
            "VernacExtend",
            "3b8f08f818b2786b96cf9f3daadbb5ad3e94f1cb"
        ],
        [
            "rewrite <- pred_of_minus; apply le_pred_n.",
            "VernacExtend",
            "aa44a67cf6cbc2a50bc7a99de0819a4e4294dba5"
        ],
        [
            "simpl; symmetry ; apply S_pred with 0%nat; assumption.",
            "VernacExtend",
            "c6a94c8cdd287532d0fff401f603979f84f2fc42"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "left; reflexivity.",
            "VernacExtend",
            "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
        ],
        [
            "right; apply lt_le_trans with 1%nat; [ apply lt_n_Sn | exact H1 ].",
            "VernacExtend",
            "d2fdf932a406e736c79797d4d5fb2e70819e9be9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "sum_N_predN",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace N with (S (pred N)).",
                        "VernacExtend",
                        "99733a630d25f8ff432da9092d59a1b3b11a7c3a"
                    ]
                },
                {
                    "command": [
                        "rewrite tech5.",
                        "VernacExtend",
                        "9868999d015d8d25987acdadb308fadae9d59e4a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "symmetry ; apply S_pred with 0%nat; assumption.",
                        "VernacExtend",
                        "07c00048f97977d2afec3560fb2e41ccdd392a6f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_plus",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction N as [| N HrecN].",
                        "VernacExtend",
                        "af1041d02474f2c80c55a680ec1503779a0c4570"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "do 3 rewrite tech5.",
                        "VernacExtend",
                        "23ea81233a31d6ed959c1235d13ff41d19b57e1e"
                    ]
                },
                {
                    "command": [
                        "rewrite HrecN; ring.",
                        "VernacExtend",
                        "c3d38cbb2b9c501eb438afe8f05fcc984069166b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cauchy_finite",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros; induction N as [| N HrecN].",
                        "VernacExtend",
                        "176c4a7e299087f2a01baed2bde05aa27663e10d"
                    ]
                },
                {
                    "command": [
                        "elim (lt_irrefl _ H).",
                        "VernacExtend",
                        "fc90b77317c333bc64634f7cf1eecc8648bc7dc4"
                    ]
                },
                {
                    "command": [
                        "cut (N = 0%nat \\/ (0 < N)%nat).",
                        "VernacExtend",
                        "746da4531ecefb4fc2faa845b4657eadd8c6af3a"
                    ]
                },
                {
                    "command": [
                        "intro; elim H0; intro.",
                        "VernacExtend",
                        "80080ee26acf8bd4a9a5fd9e7b831121caff4c52"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; simpl; ring.",
                        "VernacExtend",
                        "61be09738116290a883a11c8607e6499bb1e38e4"
                    ]
                },
                {
                    "command": [
                        "replace (pred (S N)) with (S (pred N)).",
                        "VernacExtend",
                        "ff317f871b70ce5b7372c0de0deb3d28258e609d"
                    ]
                },
                {
                    "command": [
                        "do 5 rewrite tech5.",
                        "VernacExtend",
                        "e1924823b450fe9498839c08e394ada803a16d09"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_plus_distr_r; rewrite Rmult_plus_distr_l; rewrite (HrecN H1).",
                        "VernacExtend",
                        "ab95cac50d6af94dbc8fdc4691343b154470a9fb"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_assoc; apply Rplus_eq_compat_l.",
                        "VernacExtend",
                        "206b04797f7aa5293bd60a3d97dc301ce3c8df3f"
                    ]
                },
                {
                    "command": [
                        "replace (pred (S N - S (pred N))) with 0%nat.",
                        "VernacExtend",
                        "33faeb98fe15682cee72b6824182f48aed81560a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_plus_distr_l; replace (sum_f_R0 (fun l:nat => An (S (l + S (pred N))) * Bn (S N - l)%nat) 0) with (An (S N) * Bn (S N)).",
                        "VernacExtend",
                        "92f180b2de653512973b2cc645797ca589ea8b9b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- Rplus_assoc; do 2 rewrite <- (Rplus_comm (An (S N) * Bn (S N))); repeat rewrite Rplus_assoc; apply Rplus_eq_compat_l.",
                        "VernacExtend",
                        "5d58a1e3a67ac7693acb9904ee87f3ee7e88f276"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_n_n; cut (N = 1%nat \\/ (2 <= N)%nat).",
                        "VernacExtend",
                        "bab422ce774a5ee38d2ca7ee77d09770bf56380b"
                    ]
                },
                {
                    "command": [
                        "intro; elim H2; intro.",
                        "VernacExtend",
                        "384707c7c85dc8c066104724fd997dc455dd8eef"
                    ]
                },
                {
                    "command": [
                        "rewrite H3; simpl; ring.",
                        "VernacExtend",
                        "f233ce6e6f924664860fb42747800c18664051ed"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (l + k)) * Bn (N - l)%nat) (pred (N - k))) (pred N)) with (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (pred (N - k)))) (pred (pred N)) + sum_f_R0 (fun l:nat => An (S l) * Bn (N - l)%nat) (pred N)).",
                        "VernacExtend",
                        "4eeff98461e26514355eb2accfa27a63b2a4cff4"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 (fun p:nat => An p * Bn (S N - p)%nat) N) with (sum_f_R0 (fun l:nat => An (S l) * Bn (N - l)%nat) (pred N) + An 0%nat * Bn (S N)).",
                        "VernacExtend",
                        "d56a6e2f2604eaeaa812761f8a16ec7316b96c77"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- Rplus_assoc; rewrite <- (Rplus_comm (sum_f_R0 (fun l:nat => An (S l) * Bn (N - l)%nat) (pred N))) ; repeat rewrite Rplus_assoc; apply Rplus_eq_compat_l.",
                        "VernacExtend",
                        "a0bdc79d2c79eccccd2b4c102d155dc7021918af"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (l + k)) * Bn (S N - l)%nat) (pred (S N - k))) (pred N)) with (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (N - k))) (pred N) + Bn (S N) * sum_f_R0 (fun l:nat => An (S l)) (pred N)).",
                        "VernacExtend",
                        "7b28bd8e28353b1ff95d33d2874b3cc7d5dfc45f"
                    ]
                },
                {
                    "command": [
                        "rewrite (decomp_sum An N H1); rewrite Rmult_plus_distr_r; repeat rewrite <- Rplus_assoc; rewrite <- (Rplus_comm (An 0%nat * Bn (S N))); repeat rewrite Rplus_assoc; apply Rplus_eq_compat_l.",
                        "VernacExtend",
                        "79628aab1d6211fde1acdfdaddb1c25bdfc04fbf"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- Rplus_assoc; rewrite <- (Rplus_comm (sum_f_R0 (fun i:nat => An (S i)) (pred N) * Bn (S N))) ; rewrite <- (Rplus_comm (Bn (S N) * sum_f_R0 (fun i:nat => An (S i)) (pred N))) ; rewrite (Rmult_comm (Bn (S N))); repeat rewrite Rplus_assoc; apply Rplus_eq_compat_l.",
                        "VernacExtend",
                        "1787286d3df3ad9f25084201484c2960b00fab5a"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (N - k))) (pred N)) with (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (pred (N - k)))) (pred (pred N)) + An (S N) * sum_f_R0 (fun l:nat => Bn (S l)) (pred N)).",
                        "VernacExtend",
                        "5c5587d9936577fc8e55ecc46d9c408a35198bb2"
                    ]
                },
                {
                    "command": [
                        "rewrite (decomp_sum Bn N H1); rewrite Rmult_plus_distr_l.",
                        "VernacExtend",
                        "e4b2f7f18249d0f80b58190584b11cf084bbcf3b"
                    ]
                },
                {
                    "command": [
                        "set (Z := sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (pred (N - k)))) (pred (pred N))); set (Z2 := sum_f_R0 (fun i:nat => Bn (S i)) (pred N)); ring.",
                        "VernacExtend",
                        "748fe474b3e36771b2ca9d0440c348ac54dbdbf4"
                    ]
                },
                {
                    "command": [
                        "rewrite (sum_N_predN (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (N - k))) (pred N)).",
                        "VernacExtend",
                        "5f90fe4d970ab3031eb3e8f6ad35e08d5b693c56"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (N - k))) (pred (pred N))) with (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (pred (N - k))) + An (S N) * Bn (S k)) ( pred (pred N))).",
                        "VernacExtend",
                        "4d290cc50dd8f9e69c03d1c981a9db7f4d2c4777"
                    ]
                },
                {
                    "command": [
                        "rewrite (sum_plus (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (pred (N - k)))) (fun k:nat => An (S N) * Bn (S k)) (pred (pred N))).",
                        "VernacExtend",
                        "4e47d1fe048055c3471aba6c232da849973885c7"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_assoc; apply Rplus_eq_compat_l.",
                        "VernacExtend",
                        "206b04797f7aa5293bd60a3d97dc301ce3c8df3f"
                    ]
                },
                {
                    "command": [
                        "replace (pred (N - pred N)) with 0%nat.",
                        "VernacExtend",
                        "d54f7786cc57aa115cb9bbf1eac598d43ce1d4a4"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite <- minus_n_O.",
                        "VernacExtend",
                        "01fdaf043608b16e5861e8f2b8dc024641f2d4ef"
                    ]
                },
                {
                    "command": [
                        "replace (S (pred N)) with N.",
                        "VernacExtend",
                        "5293ec68c572bfb88c819313ab56352614474e6f"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 (fun k:nat => An (S N) * Bn (S k)) (pred (pred N))) with (sum_f_R0 (fun k:nat => Bn (S k) * An (S N)) (pred (pred N))).",
                        "VernacExtend",
                        "87aae2630b619fe0e76cb29019aaf1769f5aa6ee"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (scal_sum (fun l:nat => Bn (S l)) (pred (pred N)) (An (S N))); rewrite (sum_N_predN (fun l:nat => Bn (S l)) (pred N)).",
                        "VernacExtend",
                        "94fc1f2432ab4fbd7e4e9a7e4a2603550507ddf7"
                    ]
                },
                {
                    "command": [
                        "replace (S (pred N)) with N.",
                        "VernacExtend",
                        "5293ec68c572bfb88c819313ab56352614474e6f"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply S_pred with 0%nat; assumption.",
                        "VernacExtend",
                        "b39660ec3a92df9aac441f5d4480a21443485407"
                    ]
                },
                {
                    "command": [
                        "apply lt_pred; apply lt_le_trans with 2%nat; [ apply lt_n_Sn | assumption ].",
                        "VernacExtend",
                        "1b297b588b5bf252343375148fc5462a95f6575c"
                    ]
                },
                {
                    "command": [
                        "apply sum_eq; intros; apply Rmult_comm.",
                        "VernacExtend",
                        "9a4c3da8cd66d70176d28c2d5fb1d1c1499a817e"
                    ]
                },
                {
                    "command": [
                        "apply S_pred with 0%nat; assumption.",
                        "VernacExtend",
                        "b39660ec3a92df9aac441f5d4480a21443485407"
                    ]
                },
                {
                    "command": [
                        "replace (N - pred N)%nat with 1%nat.",
                        "VernacExtend",
                        "0f9d4335c9632b485a10dbc0a2c37be556e9f828"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "pattern N at 1; replace N with (S (pred N)).",
                        "VernacExtend",
                        "2d6d66bb6fe54d4da13b9d36e93fc9c37c440e96"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_Sn_m.",
                        "VernacExtend",
                        "808a21c00826f53fd5122068d41d20a5b1758aff"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_n_n; reflexivity.",
                        "VernacExtend",
                        "c3299baf15066e33ce4b4f186e78bbee78a9b5a4"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "symmetry ; apply S_pred with 0%nat; assumption.",
                        "VernacExtend",
                        "07c00048f97977d2afec3560fb2e41ccdd392a6f"
                    ]
                },
                {
                    "command": [
                        "apply sum_eq; intros; rewrite (sum_N_predN (fun l:nat => An (S (S (l + i))) * Bn (N - l)%nat) (pred (N - i))).",
                        "VernacExtend",
                        "3a72906d888db54852ab2dc3237d4e487580bde2"
                    ]
                },
                {
                    "command": [
                        "replace (S (S (pred (N - i) + i))) with (S N).",
                        "VernacExtend",
                        "bad7dbfb194a2375ab0c5c92620fee05a3d3485f"
                    ]
                },
                {
                    "command": [
                        "replace (N - pred (N - i))%nat with (S i).",
                        "VernacExtend",
                        "84e2ded16b5054602229bb23ef589578652480f9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "rewrite pred_of_minus; apply INR_eq; repeat rewrite minus_INR.",
                        "VernacExtend",
                        "55af9b8912f5a3ae4b8c6ebdd86b2a20932ce925"
                    ]
                },
                {
                    "command": [
                        "rewrite S_INR; simpl; ring.",
                        "VernacExtend",
                        "dcab20eca31a3b21105ac307662de9cc8f3f0037"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred (pred N)).",
                        "VernacExtend",
                        "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N); apply le_pred_n.",
                        "VernacExtend",
                        "b520acd03ab27b1c9138989ef945d961ed58ac0b"
                    ]
                },
                {
                    "command": [
                        "apply INR_le; rewrite minus_INR.",
                        "VernacExtend",
                        "2ec6951d1461ea9bcefb8e986173e3751d8606d1"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (INR i - 1).",
                        "VernacExtend",
                        "c30e76b4a91086ca0199f96b57bf43a1bb55a3e1"
                    ]
                },
                {
                    "command": [
                        "replace (INR i - 1 + INR 1) with (INR i); [ idtac | simpl; ring ].",
                        "VernacExtend",
                        "e848fffb5773724a47e0ce5ab8f230e7afe696d5"
                    ]
                },
                {
                    "command": [
                        "replace (INR i - 1 + (INR N - INR i)) with (INR N - INR 1); [ idtac | simpl; ring ].",
                        "VernacExtend",
                        "27f7f6d08c98f18a11a447696ac0d083edb6bac6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_INR.",
                        "VernacExtend",
                        "899d74f5164e38a4aebf8a66e6f3059a51d72d9d"
                    ]
                },
                {
                    "command": [
                        "apply le_INR; apply le_trans with (pred (pred N)).",
                        "VernacExtend",
                        "9cef385950f1b3043650c4d6f2bc0ca1ea8a2edb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- pred_of_minus; apply le_pred_n.",
                        "VernacExtend",
                        "aa44a67cf6cbc2a50bc7a99de0819a4e4294dba5"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with 2%nat.",
                        "VernacExtend",
                        "c7397b14fc4ee575ccb2a22f04d5a5da73efd266"
                    ]
                },
                {
                    "command": [
                        "apply le_n_Sn.",
                        "VernacExtend",
                        "7889648199cacb866ef42ba6b4c4192f713b44f4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred (pred N)).",
                        "VernacExtend",
                        "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N); apply le_pred_n.",
                        "VernacExtend",
                        "b520acd03ab27b1c9138989ef945d961ed58ac0b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- pred_of_minus.",
                        "VernacExtend",
                        "9363a753855cabde849bf5dab4137e9e3b63aba2"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N).",
                        "VernacExtend",
                        "697c3ad137583470120c22c967822257191966c3"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n.",
                        "VernacExtend",
                        "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
                    ]
                },
                {
                    "command": [
                        "replace (S (pred N)) with N.",
                        "VernacExtend",
                        "5293ec68c572bfb88c819313ab56352614474e6f"
                    ]
                },
                {
                    "command": [
                        "replace (S (pred (N - i))) with (N - i)%nat.",
                        "VernacExtend",
                        "c6af4c7cac66a10578553100b7388371e02a318c"
                    ]
                },
                {
                    "command": [
                        "apply (fun p n m:nat => plus_le_reg_l n m p) with i; rewrite le_plus_minus_r.",
                        "VernacExtend",
                        "b127e34fcb3d057fc97f5773ee11ae5c3f861719"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_r.",
                        "VernacExtend",
                        "c22b357a9da97736dcf6d1963d5d37bcb961ac00"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred (pred N)); [ assumption | apply le_trans with (pred N); apply le_pred_n ].",
                        "VernacExtend",
                        "bbd2c392beb8be6a3b925b203ee58c9ef600a1c8"
                    ]
                },
                {
                    "command": [
                        "apply S_pred with 0%nat.",
                        "VernacExtend",
                        "d8063149a7685a2b3101abaef06920345a705a6d"
                    ]
                },
                {
                    "command": [
                        "apply plus_lt_reg_l with i; rewrite le_plus_minus_r.",
                        "VernacExtend",
                        "17cf99acf632fbfcc150d6b62a09364d7ee082fd"
                    ]
                },
                {
                    "command": [
                        "replace (i + 0)%nat with i; [ idtac | ring ].",
                        "VernacExtend",
                        "e36e421f9befaf3c9df04abbe937e241f8e4e088"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (pred (pred N)); [ assumption | apply lt_trans with (pred N); apply lt_pred_n_n ].",
                        "VernacExtend",
                        "2bb6c3251a47dec936e3811093a5247c872d6f3f"
                    ]
                },
                {
                    "command": [
                        "apply lt_S_n.",
                        "VernacExtend",
                        "0207638f6e9dea4c2a8a3945f23446b376d8318e"
                    ]
                },
                {
                    "command": [
                        "replace (S (pred N)) with N.",
                        "VernacExtend",
                        "5293ec68c572bfb88c819313ab56352614474e6f"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with 2%nat.",
                        "VernacExtend",
                        "d8316a470ddd4095f135a570a1663f1ddbf1ece5"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sn.",
                        "VernacExtend",
                        "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply S_pred with 0%nat; assumption.",
                        "VernacExtend",
                        "b39660ec3a92df9aac441f5d4480a21443485407"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred (pred N)).",
                        "VernacExtend",
                        "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N); apply le_pred_n.",
                        "VernacExtend",
                        "b520acd03ab27b1c9138989ef945d961ed58ac0b"
                    ]
                },
                {
                    "command": [
                        "apply S_pred with 0%nat; assumption.",
                        "VernacExtend",
                        "b39660ec3a92df9aac441f5d4480a21443485407"
                    ]
                },
                {
                    "command": [
                        "apply le_pred_n.",
                        "VernacExtend",
                        "fdeb9a08434ca2997b985c79da33d20299a259d6"
                    ]
                },
                {
                    "command": [
                        "apply INR_eq; rewrite pred_of_minus; do 3 rewrite S_INR; rewrite plus_INR; repeat rewrite minus_INR.",
                        "VernacExtend",
                        "58b0592f688c11b534e18f474ae3c4412ccbba5d"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred (pred N)).",
                        "VernacExtend",
                        "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N); apply le_pred_n.",
                        "VernacExtend",
                        "b520acd03ab27b1c9138989ef945d961ed58ac0b"
                    ]
                },
                {
                    "command": [
                        "apply INR_le.",
                        "VernacExtend",
                        "a01548465e326a7bda672bd697c8e9a5ea63ea76"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_INR.",
                        "VernacExtend",
                        "ddd12a81f335f5d6f0801c4603d2cacfd18f2ab8"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (INR i - 1).",
                        "VernacExtend",
                        "c30e76b4a91086ca0199f96b57bf43a1bb55a3e1"
                    ]
                },
                {
                    "command": [
                        "replace (INR i - 1 + INR 1) with (INR i); [ idtac | simpl; ring ].",
                        "VernacExtend",
                        "e848fffb5773724a47e0ce5ab8f230e7afe696d5"
                    ]
                },
                {
                    "command": [
                        "replace (INR i - 1 + (INR N - INR i)) with (INR N - INR 1); [ idtac | simpl; ring ].",
                        "VernacExtend",
                        "27f7f6d08c98f18a11a447696ac0d083edb6bac6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_INR.",
                        "VernacExtend",
                        "899d74f5164e38a4aebf8a66e6f3059a51d72d9d"
                    ]
                },
                {
                    "command": [
                        "apply le_INR.",
                        "VernacExtend",
                        "482ba85c33b4f446aa5e9ca8bca5b198f5d8a8c5"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred (pred N)).",
                        "VernacExtend",
                        "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- pred_of_minus.",
                        "VernacExtend",
                        "9363a753855cabde849bf5dab4137e9e3b63aba2"
                    ]
                },
                {
                    "command": [
                        "apply le_pred_n.",
                        "VernacExtend",
                        "fdeb9a08434ca2997b985c79da33d20299a259d6"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with 2%nat.",
                        "VernacExtend",
                        "c7397b14fc4ee575ccb2a22f04d5a5da73efd266"
                    ]
                },
                {
                    "command": [
                        "apply le_n_Sn.",
                        "VernacExtend",
                        "7889648199cacb866ef42ba6b4c4192f713b44f4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred (pred N)).",
                        "VernacExtend",
                        "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N); apply le_pred_n.",
                        "VernacExtend",
                        "b520acd03ab27b1c9138989ef945d961ed58ac0b"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with 1%nat.",
                        "VernacExtend",
                        "abc85192d5734af335bb5ee8dc96c9bf7d453d77"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_Sn.",
                        "VernacExtend",
                        "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
                    ]
                },
                {
                    "command": [
                        "apply INR_le.",
                        "VernacExtend",
                        "a01548465e326a7bda672bd697c8e9a5ea63ea76"
                    ]
                },
                {
                    "command": [
                        "rewrite pred_of_minus.",
                        "VernacExtend",
                        "8a546bbb2b8d8e34e605508c68d2ce5a8d5775eb"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite minus_INR.",
                        "VernacExtend",
                        "731b352d9221594e1695909f5840f06a9624fb56"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (INR i - 1).",
                        "VernacExtend",
                        "c30e76b4a91086ca0199f96b57bf43a1bb55a3e1"
                    ]
                },
                {
                    "command": [
                        "replace (INR i - 1 + INR 1) with (INR i); [ idtac | simpl; ring ].",
                        "VernacExtend",
                        "e848fffb5773724a47e0ce5ab8f230e7afe696d5"
                    ]
                },
                {
                    "command": [
                        "replace (INR i - 1 + (INR N - INR i - INR 1)) with (INR N - INR 1 - INR 1).",
                        "VernacExtend",
                        "a7feed5c2b889b94b38ef566cdee3866d3cd3410"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- minus_INR.",
                        "VernacExtend",
                        "e67e7f53d004af957f811f4699446f25d8fd9d66"
                    ]
                },
                {
                    "command": [
                        "apply le_INR.",
                        "VernacExtend",
                        "482ba85c33b4f446aa5e9ca8bca5b198f5d8a8c5"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred (pred N)).",
                        "VernacExtend",
                        "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- pred_of_minus.",
                        "VernacExtend",
                        "7cdfcb777b28a5720bc3bc6f5871b8f5e9185ac9"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "apply (fun p n m:nat => plus_le_reg_l n m p) with 1%nat.",
                        "VernacExtend",
                        "3791fad670e1ca4050789a3a10e5a5b14f4fec46"
                    ]
                },
                {
                    "command": [
                        "rewrite le_plus_minus_r.",
                        "VernacExtend",
                        "6b0db2e3be85a65e107c76d6578778375102b28a"
                    ]
                },
                {
                    "command": [
                        "simpl; assumption.",
                        "VernacExtend",
                        "b1f9ad3a64b2d320fc95a4fc7d31f60651bfdba6"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with 2%nat; [ apply le_n_Sn | assumption ].",
                        "VernacExtend",
                        "49e72e7b090d3563bda9ae6492020ee6f2ef6615"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with 2%nat; [ apply le_n_Sn | assumption ].",
                        "VernacExtend",
                        "49e72e7b090d3563bda9ae6492020ee6f2ef6615"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred (pred N)).",
                        "VernacExtend",
                        "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N); apply le_pred_n.",
                        "VernacExtend",
                        "b520acd03ab27b1c9138989ef945d961ed58ac0b"
                    ]
                },
                {
                    "command": [
                        "apply (fun p n m:nat => plus_le_reg_l n m p) with i.",
                        "VernacExtend",
                        "552aa27e7a582506ee65b676eb132b57987fefeb"
                    ]
                },
                {
                    "command": [
                        "rewrite le_plus_minus_r.",
                        "VernacExtend",
                        "6b0db2e3be85a65e107c76d6578778375102b28a"
                    ]
                },
                {
                    "command": [
                        "replace (i + 1)%nat with (S i).",
                        "VernacExtend",
                        "01a152f4f2177fc4568243ac2f14aba4db7a4bd7"
                    ]
                },
                {
                    "command": [
                        "replace N with (S (pred N)).",
                        "VernacExtend",
                        "99733a630d25f8ff432da9092d59a1b3b11a7c3a"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S.",
                        "VernacExtend",
                        "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred (pred N)).",
                        "VernacExtend",
                        "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_pred_n.",
                        "VernacExtend",
                        "fdeb9a08434ca2997b985c79da33d20299a259d6"
                    ]
                },
                {
                    "command": [
                        "symmetry ; apply S_pred with 0%nat; assumption.",
                        "VernacExtend",
                        "07c00048f97977d2afec3560fb2e41ccdd392a6f"
                    ]
                },
                {
                    "command": [
                        "apply INR_eq; rewrite S_INR; rewrite plus_INR; reflexivity.",
                        "VernacExtend",
                        "eeea5fa7df02cb5faee9289993efbbb50aaac6a6"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred (pred N)).",
                        "VernacExtend",
                        "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N); apply le_pred_n.",
                        "VernacExtend",
                        "b520acd03ab27b1c9138989ef945d961ed58ac0b"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with 1%nat.",
                        "VernacExtend",
                        "abc85192d5734af335bb5ee8dc96c9bf7d453d77"
                    ]
                },
                {
                    "command": [
                        "apply lt_O_Sn.",
                        "VernacExtend",
                        "227f4ac630f07060fd7f3ffc8bcfa421aedc8a90"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n.",
                        "VernacExtend",
                        "8f9d88b4dde1dc61a3f5f18238f0544e5d303ccc"
                    ]
                },
                {
                    "command": [
                        "replace (S (pred N)) with N.",
                        "VernacExtend",
                        "5293ec68c572bfb88c819313ab56352614474e6f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply S_pred with 0%nat; assumption.",
                        "VernacExtend",
                        "b39660ec3a92df9aac441f5d4480a21443485407"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (l + k)) * Bn (S N - l)%nat) (pred (S N - k))) (pred N)) with (sum_f_R0 (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (N - k)) + An (S k) * Bn (S N)) (pred N)).",
                        "VernacExtend",
                        "93c9358e9d85678022e6231f6c6721e67cecd903"
                    ]
                },
                {
                    "command": [
                        "rewrite (sum_plus (fun k:nat => sum_f_R0 (fun l:nat => An (S (S (l + k))) * Bn (N - l)%nat) (pred (N - k))) (fun k:nat => An (S k) * Bn (S N))).",
                        "VernacExtend",
                        "6ec6e2e8862798b4d9c9a1a02134159dcfae0144"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_eq_compat_l.",
                        "VernacExtend",
                        "76e8923f15671bb36c0fea83fec68cfd51cb2557"
                    ]
                },
                {
                    "command": [
                        "rewrite scal_sum; reflexivity.",
                        "VernacExtend",
                        "bfe98ed8c2f62db1a9ec826df672429e2d9ea804"
                    ]
                },
                {
                    "command": [
                        "apply sum_eq; intros; rewrite Rplus_comm; rewrite (decomp_sum (fun l:nat => An (S (l + i)) * Bn (S N - l)%nat) (pred (S N - i))).",
                        "VernacExtend",
                        "8588f90f6bb4e069a42ec3b6a452cacea52453f9"
                    ]
                },
                {
                    "command": [
                        "replace (0 + i)%nat with i; [ idtac | ring ].",
                        "VernacExtend",
                        "a1b39a12cca4a6c7a50772a94c969818d9837136"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_n_O; apply Rplus_eq_compat_l.",
                        "VernacExtend",
                        "fe712ffdbce2824bd0a62e845168b0ca537f6688"
                    ]
                },
                {
                    "command": [
                        "replace (pred (pred (S N - i))) with (pred (N - i)).",
                        "VernacExtend",
                        "175a80b5d3840b8cfdea921406b2916e0afd9d00"
                    ]
                },
                {
                    "command": [
                        "apply sum_eq; intros.",
                        "VernacExtend",
                        "507f6828620591e6e18a46dcd737cd32eff30125"
                    ]
                },
                {
                    "command": [
                        "replace (S N - S i0)%nat with (N - i0)%nat; [ idtac | reflexivity ].",
                        "VernacExtend",
                        "c14d4c85b248e5ac29bd566d5c31cafe9cbd17e4"
                    ]
                },
                {
                    "command": [
                        "replace (S i0 + i)%nat with (S (i0 + i)).",
                        "VernacExtend",
                        "203f81061f2859937e6181714bfbf48eed27924d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply INR_eq; rewrite S_INR; do 2 rewrite plus_INR; rewrite S_INR; simpl; ring.",
                        "VernacExtend",
                        "ba19f0d37620f5f5f46d4a90a3a13f4ff47dcdb5"
                    ]
                },
                {
                    "command": [
                        "cut ((N - i)%nat = pred (S N - i)).",
                        "VernacExtend",
                        "18f6efb9d7233b3630a2d69f6eb7fa25943c0e05"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H5; reflexivity.",
                        "VernacExtend",
                        "d8015851c9806eb0a98cadded6a3f88c4eaab879"
                    ]
                },
                {
                    "command": [
                        "rewrite pred_of_minus.",
                        "VernacExtend",
                        "8a546bbb2b8d8e34e605508c68d2ce5a8d5775eb"
                    ]
                },
                {
                    "command": [
                        "apply INR_eq; repeat rewrite minus_INR.",
                        "VernacExtend",
                        "cc976f78e0275ac3f42c5aaaced5a442c9cbf045"
                    ]
                },
                {
                    "command": [
                        "rewrite S_INR; simpl; ring.",
                        "VernacExtend",
                        "dcab20eca31a3b21105ac307662de9cc8f3f0037"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with N.",
                        "VernacExtend",
                        "f4922ce04bbdda9b1da08d6dd903134e8ba0e25b"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N).",
                        "VernacExtend",
                        "697c3ad137583470120c22c967822257191966c3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_pred_n.",
                        "VernacExtend",
                        "fdeb9a08434ca2997b985c79da33d20299a259d6"
                    ]
                },
                {
                    "command": [
                        "apply le_n_Sn.",
                        "VernacExtend",
                        "7889648199cacb866ef42ba6b4c4192f713b44f4"
                    ]
                },
                {
                    "command": [
                        "apply (fun p n m:nat => plus_le_reg_l n m p) with i.",
                        "VernacExtend",
                        "552aa27e7a582506ee65b676eb132b57987fefeb"
                    ]
                },
                {
                    "command": [
                        "rewrite le_plus_minus_r.",
                        "VernacExtend",
                        "6b0db2e3be85a65e107c76d6578778375102b28a"
                    ]
                },
                {
                    "command": [
                        "replace (i + 1)%nat with (S i).",
                        "VernacExtend",
                        "01a152f4f2177fc4568243ac2f14aba4db7a4bd7"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S.",
                        "VernacExtend",
                        "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N).",
                        "VernacExtend",
                        "697c3ad137583470120c22c967822257191966c3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_pred_n.",
                        "VernacExtend",
                        "fdeb9a08434ca2997b985c79da33d20299a259d6"
                    ]
                },
                {
                    "command": [
                        "apply INR_eq; rewrite S_INR; rewrite plus_INR; simpl; ring.",
                        "VernacExtend",
                        "2f8c59681d7e34ac992f16f501c50ce666f654b2"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with N.",
                        "VernacExtend",
                        "f4922ce04bbdda9b1da08d6dd903134e8ba0e25b"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N).",
                        "VernacExtend",
                        "697c3ad137583470120c22c967822257191966c3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_pred_n.",
                        "VernacExtend",
                        "fdeb9a08434ca2997b985c79da33d20299a259d6"
                    ]
                },
                {
                    "command": [
                        "apply le_n_Sn.",
                        "VernacExtend",
                        "7889648199cacb866ef42ba6b4c4192f713b44f4"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N).",
                        "VernacExtend",
                        "697c3ad137583470120c22c967822257191966c3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_pred_n.",
                        "VernacExtend",
                        "fdeb9a08434ca2997b985c79da33d20299a259d6"
                    ]
                },
                {
                    "command": [
                        "replace (pred (S N - i)) with (S N - S i)%nat.",
                        "VernacExtend",
                        "c8454df7b54fcdd265c19d7d9120cdcb80f29c3d"
                    ]
                },
                {
                    "command": [
                        "replace (S N - S i)%nat with (N - i)%nat; [ idtac | reflexivity ].",
                        "VernacExtend",
                        "bb3250cabe357140edbccb8344a6dc8c15e6c55b"
                    ]
                },
                {
                    "command": [
                        "apply plus_lt_reg_l with i.",
                        "VernacExtend",
                        "d33d0aacfa5b7cfbce5778ea4a09f23a18e0b15a"
                    ]
                },
                {
                    "command": [
                        "rewrite le_plus_minus_r.",
                        "VernacExtend",
                        "6b0db2e3be85a65e107c76d6578778375102b28a"
                    ]
                },
                {
                    "command": [
                        "replace (i + 0)%nat with i; [ idtac | ring ].",
                        "VernacExtend",
                        "e36e421f9befaf3c9df04abbe937e241f8e4e088"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_trans with (pred N).",
                        "VernacExtend",
                        "4a76a89ffe467a0a84d4b4f6c728a42494bb6a89"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply lt_pred_n_n.",
                        "VernacExtend",
                        "d9ca7c2e7cc7d9b38b8e9f82ffa8864e47795204"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N).",
                        "VernacExtend",
                        "697c3ad137583470120c22c967822257191966c3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_pred_n.",
                        "VernacExtend",
                        "fdeb9a08434ca2997b985c79da33d20299a259d6"
                    ]
                },
                {
                    "command": [
                        "rewrite pred_of_minus.",
                        "VernacExtend",
                        "8a546bbb2b8d8e34e605508c68d2ce5a8d5775eb"
                    ]
                },
                {
                    "command": [
                        "apply INR_eq; repeat rewrite minus_INR.",
                        "VernacExtend",
                        "cc976f78e0275ac3f42c5aaaced5a442c9cbf045"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite S_INR; simpl; ring.",
                        "VernacExtend",
                        "96bad10a3b01537e7a39bce913db3cc4b79d3f63"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with N.",
                        "VernacExtend",
                        "f4922ce04bbdda9b1da08d6dd903134e8ba0e25b"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N).",
                        "VernacExtend",
                        "697c3ad137583470120c22c967822257191966c3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_pred_n.",
                        "VernacExtend",
                        "fdeb9a08434ca2997b985c79da33d20299a259d6"
                    ]
                },
                {
                    "command": [
                        "apply le_n_Sn.",
                        "VernacExtend",
                        "7889648199cacb866ef42ba6b4c4192f713b44f4"
                    ]
                },
                {
                    "command": [
                        "apply (fun p n m:nat => plus_le_reg_l n m p) with i.",
                        "VernacExtend",
                        "552aa27e7a582506ee65b676eb132b57987fefeb"
                    ]
                },
                {
                    "command": [
                        "rewrite le_plus_minus_r.",
                        "VernacExtend",
                        "6b0db2e3be85a65e107c76d6578778375102b28a"
                    ]
                },
                {
                    "command": [
                        "replace (i + 1)%nat with (S i).",
                        "VernacExtend",
                        "01a152f4f2177fc4568243ac2f14aba4db7a4bd7"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S.",
                        "VernacExtend",
                        "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N).",
                        "VernacExtend",
                        "697c3ad137583470120c22c967822257191966c3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_pred_n.",
                        "VernacExtend",
                        "fdeb9a08434ca2997b985c79da33d20299a259d6"
                    ]
                },
                {
                    "command": [
                        "apply INR_eq; rewrite S_INR; rewrite plus_INR; simpl; ring.",
                        "VernacExtend",
                        "2f8c59681d7e34ac992f16f501c50ce666f654b2"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with N.",
                        "VernacExtend",
                        "f4922ce04bbdda9b1da08d6dd903134e8ba0e25b"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N).",
                        "VernacExtend",
                        "697c3ad137583470120c22c967822257191966c3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_pred_n.",
                        "VernacExtend",
                        "fdeb9a08434ca2997b985c79da33d20299a259d6"
                    ]
                },
                {
                    "command": [
                        "apply le_n_Sn.",
                        "VernacExtend",
                        "7889648199cacb866ef42ba6b4c4192f713b44f4"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S.",
                        "VernacExtend",
                        "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N).",
                        "VernacExtend",
                        "697c3ad137583470120c22c967822257191966c3"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_pred_n.",
                        "VernacExtend",
                        "fdeb9a08434ca2997b985c79da33d20299a259d6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm.",
                        "VernacExtend",
                        "1ea33e6774c5768bd211bdf8c447feee9b9e21de"
                    ]
                },
                {
                    "command": [
                        "rewrite (decomp_sum (fun p:nat => An p * Bn (S N - p)%nat) N).",
                        "VernacExtend",
                        "56129239a12bc4d5a11d46df039cf5b1f033129a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_n_O.",
                        "VernacExtend",
                        "07c627020c0e4bdce7de45e442d614cb6a64a0cf"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_eq_compat_l.",
                        "VernacExtend",
                        "76e8923f15671bb36c0fea83fec68cfd51cb2557"
                    ]
                },
                {
                    "command": [
                        "apply sum_eq; intros.",
                        "VernacExtend",
                        "507f6828620591e6e18a46dcd737cd32eff30125"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm.",
                        "VernacExtend",
                        "1ea33e6774c5768bd211bdf8c447feee9b9e21de"
                    ]
                },
                {
                    "command": [
                        "rewrite (decomp_sum (fun k:nat => sum_f_R0 (fun l:nat => An (S (l + k)) * Bn (N - l)%nat) (pred (N - k))) (pred N)).",
                        "VernacExtend",
                        "300ff0d27a4a19bcc0cc585a82dbb4a0753687c8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_n_O.",
                        "VernacExtend",
                        "07c627020c0e4bdce7de45e442d614cb6a64a0cf"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 (fun l:nat => An (S (l + 0)) * Bn (N - l)%nat) (pred N)) with (sum_f_R0 (fun l:nat => An (S l) * Bn (N - l)%nat) (pred N)).",
                        "VernacExtend",
                        "7095cddba25e5b2564a71ef63f234e37d9ea9b46"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_eq_compat_l.",
                        "VernacExtend",
                        "76e8923f15671bb36c0fea83fec68cfd51cb2557"
                    ]
                },
                {
                    "command": [
                        "apply sum_eq; intros.",
                        "VernacExtend",
                        "507f6828620591e6e18a46dcd737cd32eff30125"
                    ]
                },
                {
                    "command": [
                        "replace (pred (N - S i)) with (pred (pred (N - i))).",
                        "VernacExtend",
                        "4aefdc8c0e66f2050fcfaf068fb721f02863900b"
                    ]
                },
                {
                    "command": [
                        "apply sum_eq; intros.",
                        "VernacExtend",
                        "507f6828620591e6e18a46dcd737cd32eff30125"
                    ]
                },
                {
                    "command": [
                        "replace (i0 + S i)%nat with (S (i0 + i)).",
                        "VernacExtend",
                        "19b72df025003aa75ca24573ca30dc1780cef16f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply INR_eq; rewrite S_INR; do 2 rewrite plus_INR; rewrite S_INR; simpl; ring.",
                        "VernacExtend",
                        "ba19f0d37620f5f5f46d4a90a3a13f4ff47dcdb5"
                    ]
                },
                {
                    "command": [
                        "cut (pred (N - i) = (N - S i)%nat).",
                        "VernacExtend",
                        "1834b04dcce5a983f50f509b036c2f512e70706e"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H5; reflexivity.",
                        "VernacExtend",
                        "d8015851c9806eb0a98cadded6a3f88c4eaab879"
                    ]
                },
                {
                    "command": [
                        "rewrite pred_of_minus.",
                        "VernacExtend",
                        "8a546bbb2b8d8e34e605508c68d2ce5a8d5775eb"
                    ]
                },
                {
                    "command": [
                        "apply INR_eq.",
                        "VernacExtend",
                        "04e6ff4e8b8ad5be6648ce8079e647da3489bc22"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite minus_INR.",
                        "VernacExtend",
                        "731b352d9221594e1695909f5840f06a9624fb56"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite S_INR; simpl; ring.",
                        "VernacExtend",
                        "96bad10a3b01537e7a39bce913db3cc4b79d3f63"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (S (pred (pred N))).",
                        "VernacExtend",
                        "7c175345605fd60f7d958e52584a54e882ac1276"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S; assumption.",
                        "VernacExtend",
                        "0eb3477345554c98971f24ea100acc6b0fe9f945"
                    ]
                },
                {
                    "command": [
                        "replace (S (pred (pred N))) with (pred N).",
                        "VernacExtend",
                        "cbdc0be8ea222b6afd7667bab98862406e21e5a1"
                    ]
                },
                {
                    "command": [
                        "apply le_pred_n.",
                        "VernacExtend",
                        "fdeb9a08434ca2997b985c79da33d20299a259d6"
                    ]
                },
                {
                    "command": [
                        "apply S_pred with 0%nat.",
                        "VernacExtend",
                        "d8063149a7685a2b3101abaef06920345a705a6d"
                    ]
                },
                {
                    "command": [
                        "apply lt_S_n.",
                        "VernacExtend",
                        "0207638f6e9dea4c2a8a3945f23446b376d8318e"
                    ]
                },
                {
                    "command": [
                        "replace (S (pred N)) with N.",
                        "VernacExtend",
                        "5293ec68c572bfb88c819313ab56352614474e6f"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with 2%nat.",
                        "VernacExtend",
                        "d8316a470ddd4095f135a570a1663f1ddbf1ece5"
                    ]
                },
                {
                    "command": [
                        "apply lt_n_Sn.",
                        "VernacExtend",
                        "bf57775ed78638cd8c5e7d3ea3f196807acdb119"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply S_pred with 0%nat; assumption.",
                        "VernacExtend",
                        "b39660ec3a92df9aac441f5d4480a21443485407"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred (pred N)).",
                        "VernacExtend",
                        "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N); apply le_pred_n.",
                        "VernacExtend",
                        "b520acd03ab27b1c9138989ef945d961ed58ac0b"
                    ]
                },
                {
                    "command": [
                        "apply (fun p n m:nat => plus_le_reg_l n m p) with i.",
                        "VernacExtend",
                        "552aa27e7a582506ee65b676eb132b57987fefeb"
                    ]
                },
                {
                    "command": [
                        "rewrite le_plus_minus_r.",
                        "VernacExtend",
                        "6b0db2e3be85a65e107c76d6578778375102b28a"
                    ]
                },
                {
                    "command": [
                        "replace (i + 1)%nat with (S i).",
                        "VernacExtend",
                        "01a152f4f2177fc4568243ac2f14aba4db7a4bd7"
                    ]
                },
                {
                    "command": [
                        "replace N with (S (pred N)).",
                        "VernacExtend",
                        "99733a630d25f8ff432da9092d59a1b3b11a7c3a"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S.",
                        "VernacExtend",
                        "170a03707b1c7ee0e1ae6d4f34f3aee2f62ba781"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred (pred N)).",
                        "VernacExtend",
                        "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_pred_n.",
                        "VernacExtend",
                        "fdeb9a08434ca2997b985c79da33d20299a259d6"
                    ]
                },
                {
                    "command": [
                        "symmetry ; apply S_pred with 0%nat; assumption.",
                        "VernacExtend",
                        "07c00048f97977d2afec3560fb2e41ccdd392a6f"
                    ]
                },
                {
                    "command": [
                        "apply INR_eq; rewrite S_INR; rewrite plus_INR; simpl; ring.",
                        "VernacExtend",
                        "2f8c59681d7e34ac992f16f501c50ce666f654b2"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred (pred N)).",
                        "VernacExtend",
                        "219bdc3c684eaa6c780ecce0af3ac13eb4f83f68"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (pred N); apply le_pred_n.",
                        "VernacExtend",
                        "b520acd03ab27b1c9138989ef945d961ed58ac0b"
                    ]
                },
                {
                    "command": [
                        "apply sum_eq; intros.",
                        "VernacExtend",
                        "507f6828620591e6e18a46dcd737cd32eff30125"
                    ]
                },
                {
                    "command": [
                        "replace (i + 0)%nat with i; [ reflexivity | trivial ].",
                        "VernacExtend",
                        "3194a2325f317ce807256defbb7681f4e72f968f"
                    ]
                },
                {
                    "command": [
                        "apply lt_S_n.",
                        "VernacExtend",
                        "0207638f6e9dea4c2a8a3945f23446b376d8318e"
                    ]
                },
                {
                    "command": [
                        "replace (S (pred N)) with N.",
                        "VernacExtend",
                        "5293ec68c572bfb88c819313ab56352614474e6f"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with 2%nat; [ apply lt_n_Sn | assumption ].",
                        "VernacExtend",
                        "545ed125478d8098d39f05e7e6f900e1a9c67fef"
                    ]
                },
                {
                    "command": [
                        "apply S_pred with 0%nat; assumption.",
                        "VernacExtend",
                        "b39660ec3a92df9aac441f5d4480a21443485407"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "left; reflexivity.",
                        "VernacExtend",
                        "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
                    ]
                },
                {
                    "command": [
                        "right; apply le_n_S; assumption.",
                        "VernacExtend",
                        "a021e48d706453bbb7be50f2fb983f346d514637"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "replace (S (pred N)) with N.",
                        "VernacExtend",
                        "5293ec68c572bfb88c819313ab56352614474e6f"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply S_pred with 0%nat; assumption.",
                        "VernacExtend",
                        "b39660ec3a92df9aac441f5d4480a21443485407"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "cut ((N - pred N)%nat = 1%nat).",
                        "VernacExtend",
                        "002a186000e044922c7b7aadae75d7ad55ca9bdb"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H2; reflexivity.",
                        "VernacExtend",
                        "cb106624ac19cb96bf64f0a61188df25d35e7677"
                    ]
                },
                {
                    "command": [
                        "rewrite pred_of_minus.",
                        "VernacExtend",
                        "8a546bbb2b8d8e34e605508c68d2ce5a8d5775eb"
                    ]
                },
                {
                    "command": [
                        "apply INR_eq; repeat rewrite minus_INR.",
                        "VernacExtend",
                        "cc976f78e0275ac3f42c5aaaced5a442c9cbf045"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_S; assumption.",
                        "VernacExtend",
                        "3b8f08f818b2786b96cf9f3daadbb5ad3e94f1cb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- pred_of_minus; apply le_pred_n.",
                        "VernacExtend",
                        "aa44a67cf6cbc2a50bc7a99de0819a4e4294dba5"
                    ]
                },
                {
                    "command": [
                        "simpl; symmetry ; apply S_pred with 0%nat; assumption.",
                        "VernacExtend",
                        "c6a94c8cdd287532d0fff401f603979f84f2fc42"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "left; reflexivity.",
                        "VernacExtend",
                        "b22b9a8d01b3b9178248bbef70a162f2f1e6ee81"
                    ]
                },
                {
                    "command": [
                        "right; apply lt_le_trans with 1%nat; [ apply lt_n_Sn | exact H1 ].",
                        "VernacExtend",
                        "d2fdf932a406e736c79797d4d5fb2e70819e9be9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}