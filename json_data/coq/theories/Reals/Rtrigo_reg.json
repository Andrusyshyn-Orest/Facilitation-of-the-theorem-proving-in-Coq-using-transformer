{
    "filename": "theories/Reals/Rtrigo_reg.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Rbase.",
            "VernacRequire",
            "c0a8d81b170d4ed8309a8632a3cac35f6cba016a"
        ],
        [
            "Require Import Rfunctions.",
            "VernacRequire",
            "e0ba64ca9fd07e0fc91c59b7bf007fb29a662a86"
        ],
        [
            "Require Import SeqSeries.",
            "VernacRequire",
            "379ec54d32465fe6d151cce8474fb7ff733028bb"
        ],
        [
            "Require Import Rtrigo1.",
            "VernacRequire",
            "598baa2d58df0ffe31096944ae833778167e93eb"
        ],
        [
            "Require Import Ranalysis1.",
            "VernacRequire",
            "b7df6cdb101f6571d1192419ca4168ab43a628dd"
        ],
        [
            "Require Import PSeries_reg.",
            "VernacRequire",
            "87af597dd6052306d2795970a7457ae85e8b680b"
        ],
        [
            "Local Open Scope nat_scope.",
            "VernacOpenCloseScope",
            "7386604700c7eb05ef0ae2947828bc909568dab7"
        ],
        [
            "Local Open Scope R_scope.",
            "VernacOpenCloseScope",
            "b005c72bb3303e031b42be04be04c87c005faa38"
        ],
        [
            "Lemma continuity_sin : continuity sin.",
            "VernacStartTheoremProof",
            "cf56fa71a90bd0f7549bdb06c14fe17e2e08858c"
        ],
        [
            "unfold continuity; intro.",
            "VernacExtend",
            "d6e8bba49e5caf86bec070659cbf98100a84c416"
        ],
        [
            "assert (H0 := continuity_cos (PI / 2 - x)).",
            "VernacExtend",
            "8973bba362eb3900592bc82bba440fd7bad77aca"
        ],
        [
            "unfold continuity_pt in H0; unfold continue_in in H0; unfold limit1_in in H0; unfold limit_in in H0; simpl in H0; unfold R_dist in H0; unfold continuity_pt; unfold continue_in; unfold limit1_in; unfold limit_in; simpl; unfold R_dist; intros.",
            "VernacExtend",
            "03cc5ce030110d24831ac3471654cdaa67b4811c"
        ],
        [
            "elim (H0 _ H); intros.",
            "VernacExtend",
            "a1d774425e961185313b80710eb0b1a9b4403cd4"
        ],
        [
            "exists x0; intros.",
            "VernacExtend",
            "5bc9f78cbd3bd0b9d5ad70bca80ff875ab1656fa"
        ],
        [
            "elim H1; intros.",
            "VernacExtend",
            "6b7bcf9d739b14ca3a09271e2c3493e16c5e2914"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros; rewrite <- (cos_shift x); rewrite <- (cos_shift x1); apply H3.",
            "VernacExtend",
            "705d3e8ad8cb5c63acff48dacf7efdb859a6a256"
        ],
        [
            "elim H4; intros.",
            "VernacExtend",
            "ef88f175449d4af46e0685700665ce0cdf3e5695"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold D_x, no_cond; split.",
            "VernacExtend",
            "121e72bbd9a8ad97e9353edec680d410ccaf17ee"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "red; intro; unfold D_x, no_cond in H5; elim H5; intros _ H8; elim H8; rewrite <- (Ropp_involutive x); rewrite <- (Ropp_involutive x1); apply Ropp_eq_compat; apply Rplus_eq_reg_l with (PI / 2); apply H7.",
            "VernacExtend",
            "841ed93d8adaa743f9d2303e8bbb0a08d707352f"
        ],
        [
            "replace (PI / 2 - x1 - (PI / 2 - x)) with (x - x1); [ idtac | ring ]; rewrite <- Rabs_Ropp; rewrite Ropp_minus_distr'; apply H6.",
            "VernacExtend",
            "848b8fe7920ab23d0407e6b05217e65115ddb01f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CVN_R_sin : forall fn:nat -> R -> R, fn = (fun (N:nat) (x:R) => (-1) ^ N / INR (fact (2 * N + 1)) * x ^ (2 * N)) -> CVN_R fn.",
            "VernacStartTheoremProof",
            "ff1f4bd7a6511f0116eb4851551cc08ff3c62621"
        ],
        [
            "unfold CVN_R; unfold CVN_r; intros fn H r.",
            "VernacExtend",
            "3d9fb46b2d979d691c4fa35e582ecc34fb856f93"
        ],
        [
            "exists (fun n:nat => / INR (fact (2 * n + 1)) * r ^ (2 * n)).",
            "VernacExtend",
            "c78d56dc63a7a7b13e709937b5b6ea8a4c47abd2"
        ],
        [
            "cut { l:R | Un_cv (fun n:nat => sum_f_R0 (fun k:nat => Rabs (/ INR (fact (2 * k + 1)) * r ^ (2 * k))) n) l }.",
            "VernacExtend",
            "693779790020cc25a91a79676dca75f90ccd5bc2"
        ],
        [
            "intros (x,p).",
            "VernacExtend",
            "1cd393355f801023c209f47ad1e2e37516ca0eec"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply p.",
            "VernacExtend",
            "5d7bd2c81be5e2631c5ccceda06a4542d9bac4b6"
        ],
        [
            "intros; rewrite H; unfold Rdiv; do 2 rewrite Rabs_mult; rewrite pow_1_abs; rewrite Rmult_1_l.",
            "VernacExtend",
            "423a0c6b55c9d124ffb0e4fdbf6cba6532cf2b97"
        ],
        [
            "cut (0 < / INR (fact (2 * n + 1))).",
            "VernacExtend",
            "93dad06746b90182c1f62260b12ea81b9291be2e"
        ],
        [
            "intro; rewrite (Rabs_right _ (Rle_ge _ _ (Rlt_le _ _ H1))).",
            "VernacExtend",
            "7eeedadc33bbb1d44c0364543be6187798bd2034"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "left; apply H1.",
            "VernacExtend",
            "993f5d69ffe02b0f51fe3710b8fd8b146d347b12"
        ],
        [
            "rewrite <- RPow_abs; apply pow_maj_Rabs.",
            "VernacExtend",
            "3137e1f2b0c186c4cc714aa9a1d22cc24798f207"
        ],
        [
            "rewrite Rabs_Rabsolu; unfold Boule in H0; rewrite Rminus_0_r in H0; left; apply H0.",
            "VernacExtend",
            "3fa2495ee56b9b23ec083da62a76cd8132c0a4fa"
        ],
        [
            "apply Rinv_0_lt_compat; apply INR_fact_lt_0.",
            "VernacExtend",
            "8746728d1b094c52cff718b0ca0d4fed0572288d"
        ],
        [
            "cut ((r:R) <> 0).",
            "VernacExtend",
            "ed7f6cd86facb8c8ae9cea821f797ccf393f6b5f"
        ],
        [
            "intro; apply Alembert_C2.",
            "VernacExtend",
            "19b69def78f980128ddd7de5a7c9261b2ad1bdb2"
        ],
        [
            "intro; apply Rabs_no_R0.",
            "VernacExtend",
            "a06d7ed85eaff8c9381215cccf82982332cee7e5"
        ],
        [
            "apply prod_neq_R0.",
            "VernacExtend",
            "4e401b99cc3c24b61ca502aa7107071c427501ea"
        ],
        [
            "apply Rinv_neq_0_compat; apply INR_fact_neq_0.",
            "VernacExtend",
            "1742a1970e2bd84f0fd2145213af0978df013d33"
        ],
        [
            "apply pow_nonzero; assumption.",
            "VernacExtend",
            "6d4db41cbe558f394b4e9accb20ef61b0da0c671"
        ],
        [
            "assert (H1 := Alembert_sin).",
            "VernacExtend",
            "ab17ad419ae8d7b269d3312972cd4a64d32f2674"
        ],
        [
            "unfold sin_n in H1; unfold Un_cv in H1; unfold Un_cv; intros.",
            "VernacExtend",
            "2bce7b5c1f97fbc75367f94bdd3409bd6a531342"
        ],
        [
            "cut (0 < eps / Rsqr r).",
            "VernacExtend",
            "c39c1ed051ead2a5a02ec894991cbf7e069a506b"
        ],
        [
            "intro; elim (H1 _ H3); intros N0 H4.",
            "VernacExtend",
            "09148ef4ef6f9b924b1927e1e2eb15aec781c17a"
        ],
        [
            "exists N0; intros.",
            "VernacExtend",
            "e5b9decd3fd5f06277bf4eeacb6fae2a2f851d31"
        ],
        [
            "unfold R_dist; assert (H6 := H4 _ H5).",
            "VernacExtend",
            "02014a3c5d07a5d0d5cb199fdd504d226df89ac3"
        ],
        [
            "unfold R_dist in H5; replace (Rabs (Rabs (/ INR (fact (2 * S n + 1)) * r ^ (2 * S n)) / Rabs (/ INR (fact (2 * n + 1)) * r ^ (2 * n)))) with (Rsqr r * Rabs ((-1) ^ S n / INR (fact (2 * S n + 1)) / ((-1) ^ n / INR (fact (2 * n + 1))))).",
            "VernacExtend",
            "f7a12c9e7b5bb4adcec43314852b4ad424d16605"
        ],
        [
            "apply Rmult_lt_reg_l with (/ Rsqr r).",
            "VernacExtend",
            "053f9f89df9c3969358ea966c593033870cbbe4e"
        ],
        [
            "apply Rinv_0_lt_compat; apply Rsqr_pos_lt; assumption.",
            "VernacExtend",
            "6039c4ffcf619f7d20dc6b4b63575c7f8734718e"
        ],
        [
            "pattern (/ Rsqr r) at 1; rewrite <- (Rabs_right (/ Rsqr r)).",
            "VernacExtend",
            "7fb5931ba669381f53150390d22910fc80e1be27"
        ],
        [
            "rewrite <- Rabs_mult.",
            "VernacExtend",
            "ffb7829eab0f0e304148d87efd020e97968f73cc"
        ],
        [
            "rewrite Rmult_minus_distr_l.",
            "VernacExtend",
            "7222a49d2309983cf6476a1131eec66c4836f9f6"
        ],
        [
            "rewrite Rmult_0_r; rewrite <- Rmult_assoc; rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "26b561cd9480f1417ce47a0cec172f68f7f37cea"
        ],
        [
            "rewrite Rmult_1_l; rewrite <- (Rmult_comm eps).",
            "VernacExtend",
            "14621bcca728e6fa5110918c6df82c068c457261"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "unfold Rsqr; apply prod_neq_R0; assumption.",
            "VernacExtend",
            "da760fb26e521ae2572410a2263a7718de830e47"
        ],
        [
            "apply Rle_ge; left; apply Rinv_0_lt_compat; apply Rsqr_pos_lt; assumption.",
            "VernacExtend",
            "cc76f02107dec014ac58afb9b73fe03b3faec77d"
        ],
        [
            "unfold Rdiv; rewrite (Rmult_comm (Rsqr r)); repeat rewrite Rabs_mult; rewrite Rabs_Rabsolu; rewrite pow_1_abs.",
            "VernacExtend",
            "39a0a4ad27d7e57d18f80a4e2982bbcaaccfe4d2"
        ],
        [
            "rewrite Rmult_1_l.",
            "VernacExtend",
            "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
        ],
        [
            "repeat rewrite Rmult_assoc; apply Rmult_eq_compat_l.",
            "VernacExtend",
            "af2e69f7eb109fa6852e29bfad3154f6a0a6b92b"
        ],
        [
            "rewrite Rinv_mult_distr.",
            "VernacExtend",
            "55666fd2776d160fb1bfd9d38a2833e66927f366"
        ],
        [
            "rewrite Rinv_involutive.",
            "VernacExtend",
            "422941d9f5ab1f835c6b4368750431aa4fff0509"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "rewrite Rabs_Rinv.",
            "VernacExtend",
            "37f0a3ac5c309484aec5354295705ced53683ada"
        ],
        [
            "rewrite pow_1_abs; rewrite Rinv_1; rewrite Rmult_1_l.",
            "VernacExtend",
            "3eb47bdb66591cd4956071166cd37d53b0f4f340"
        ],
        [
            "rewrite Rinv_mult_distr.",
            "VernacExtend",
            "55666fd2776d160fb1bfd9d38a2833e66927f366"
        ],
        [
            "rewrite <- Rabs_Rinv.",
            "VernacExtend",
            "90bccb4c2edbe375bae6d85508d1d91269ac60a9"
        ],
        [
            "rewrite Rinv_involutive.",
            "VernacExtend",
            "422941d9f5ab1f835c6b4368750431aa4fff0509"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "do 2 rewrite Rabs_Rabsolu.",
            "VernacExtend",
            "2816d034ff9b3957b484be80afd7eb4c2cfb569c"
        ],
        [
            "rewrite (Rmult_comm (Rabs (r ^ (2 * S n)))).",
            "VernacExtend",
            "1143fb23a8e2f7f714907be30d6f2b200e5a391e"
        ],
        [
            "rewrite Rmult_assoc; apply Rmult_eq_compat_l.",
            "VernacExtend",
            "e137f0649bb524db6ee354f5fba7a87e0babf344"
        ],
        [
            "rewrite Rabs_Rinv.",
            "VernacExtend",
            "37f0a3ac5c309484aec5354295705ced53683ada"
        ],
        [
            "rewrite Rabs_Rabsolu.",
            "VernacExtend",
            "25c9ef6d16b3e1fd649502a685f930b2c828b10b"
        ],
        [
            "repeat rewrite Rabs_right.",
            "VernacExtend",
            "5107c29a40d66107cd65c8b15750ff5d33d00b0a"
        ],
        [
            "replace (r ^ (2 * S n)) with (r ^ (2 * n) * r * r).",
            "VernacExtend",
            "b4197c8f63512f5508226defc2c0ad669c0d6bfb"
        ],
        [
            "do 2 rewrite <- Rmult_assoc.",
            "VernacExtend",
            "2e59ade73e7947b54c6371c82c80effd526c01cd"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "unfold Rsqr; ring.",
            "VernacExtend",
            "f0fae863b573adbced1e1b89cdae052a91ab7494"
        ],
        [
            "apply pow_nonzero; assumption.",
            "VernacExtend",
            "6d4db41cbe558f394b4e9accb20ef61b0da0c671"
        ],
        [
            "replace (2 * S n)%nat with (S (S (2 * n))).",
            "VernacExtend",
            "0e979a91e133bbb49e0c693ceaa8b83423f512bf"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply Rle_ge; apply pow_le; left; apply (cond_pos r).",
            "VernacExtend",
            "57908e113a780de27b286db2a2ae0ec3b0fa1eb7"
        ],
        [
            "apply Rle_ge; apply pow_le; left; apply (cond_pos r).",
            "VernacExtend",
            "57908e113a780de27b286db2a2ae0ec3b0fa1eb7"
        ],
        [
            "apply Rabs_no_R0; apply pow_nonzero; assumption.",
            "VernacExtend",
            "ca487d54542aed3f8b75ac0f13dd5778c0443f1b"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply Rinv_neq_0_compat; apply INR_fact_neq_0.",
            "VernacExtend",
            "1742a1970e2bd84f0fd2145213af0978df013d33"
        ],
        [
            "apply Rabs_no_R0; apply Rinv_neq_0_compat; apply INR_fact_neq_0.",
            "VernacExtend",
            "a41b6f245d6faf6134374f0ab224f05525f37d1a"
        ],
        [
            "apply Rabs_no_R0; apply pow_nonzero; assumption.",
            "VernacExtend",
            "ca487d54542aed3f8b75ac0f13dd5778c0443f1b"
        ],
        [
            "apply pow_nonzero; discrR.",
            "VernacExtend",
            "174877181c67a09e2e68285a2475567f220a254e"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply pow_nonzero; discrR.",
            "VernacExtend",
            "174877181c67a09e2e68285a2475567f220a254e"
        ],
        [
            "apply Rinv_neq_0_compat; apply INR_fact_neq_0.",
            "VernacExtend",
            "1742a1970e2bd84f0fd2145213af0978df013d33"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; apply Rsqr_pos_lt; assumption ].",
            "VernacExtend",
            "f862072b1567d02eec5818d8de0fcf1686382edd"
        ],
        [
            "assert (H0 := cond_pos r); red; intro; rewrite H1 in H0; elim (Rlt_irrefl _ H0).",
            "VernacExtend",
            "21b527a7612e84f0f8759a69f0086d3152467e3f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivable_pt_lim_sin_0 : derivable_pt_lim sin 0 1.",
            "VernacStartTheoremProof",
            "e2282205c4693ae221bb1b28edeec87fc75855c3"
        ],
        [
            "unfold derivable_pt_lim; intros.",
            "VernacExtend",
            "a20ff8eb80507306544faac85c14ba31dc6809e2"
        ],
        [
            "set (fn := fun (N:nat) (x:R) => (-1) ^ N / INR (fact (2 * N + 1)) * x ^ (2 * N)).",
            "VernacExtend",
            "8ec2e7f07541667025553debce7fa62dd3033d4c"
        ],
        [
            "cut (CVN_R fn).",
            "VernacExtend",
            "24dc45b17b447edd1be61e1b58164ddc4f8cbdc9"
        ],
        [
            "intro; cut (forall x:R, { l:R | Un_cv (fun N:nat => SP fn N x) l }).",
            "VernacExtend",
            "6289d655cc7316a98075d8856aede811bf53f0fe"
        ],
        [
            "intro cv.",
            "VernacExtend",
            "a78d635e4f9a9f33abd5ba561f189eae7136148a"
        ],
        [
            "set (r := mkposreal _ Rlt_0_1).",
            "VernacExtend",
            "6345e27241422a88326524603d8133ed1557ab97"
        ],
        [
            "cut (CVN_r fn r).",
            "VernacExtend",
            "bd26af0cd9262a3aa316d29a953f8a062a7c0c02"
        ],
        [
            "intro; cut (forall (n:nat) (y:R), Boule 0 r y -> continuity_pt (fn n) y).",
            "VernacExtend",
            "789aab7a83c0d44cad0e75d7200c1154a0f5c1eb"
        ],
        [
            "intro; cut (Boule 0 r 0).",
            "VernacExtend",
            "07abfe98cac0ce83c49cafaabc804da1edd96c63"
        ],
        [
            "intro; assert (H2 := SFL_continuity_pt _ cv _ X0 H0 _ H1).",
            "VernacExtend",
            "c208550b5c0e9e6fcfad8d22681d17d1603600a7"
        ],
        [
            "unfold continuity_pt in H2; unfold continue_in in H2; unfold limit1_in in H2; unfold limit_in in H2; simpl in H2; unfold R_dist in H2.",
            "VernacExtend",
            "6d1bfc577d0b50a617cdec6d52077fc0cd0afb4c"
        ],
        [
            "elim (H2 _ H); intros alp H3.",
            "VernacExtend",
            "3d8c414a2f330e28afa9980b0fdcd58107f846f3"
        ],
        [
            "elim H3; intros.",
            "VernacExtend",
            "22aefe300e56cd9b3f5be8a9d6799fb568928bf1"
        ],
        [
            "exists (mkposreal _ H4).",
            "VernacExtend",
            "37f1c30efde71388067642a531cc57bf3c695111"
        ],
        [
            "simpl; intros.",
            "VernacExtend",
            "429a59199da524088af55673600740ccc58db31e"
        ],
        [
            "rewrite sin_0; rewrite Rplus_0_l; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r.",
            "VernacExtend",
            "776e3178db8197026c30fb5df08e851d0d5c7e0f"
        ],
        [
            "cut (Rabs (SFL fn cv h - SFL fn cv 0) < eps).",
            "VernacExtend",
            "24c1435c882d5aaf93f795c548aa63b09a45bf4a"
        ],
        [
            "intro; cut (SFL fn cv 0 = 1).",
            "VernacExtend",
            "b8f229ed695b5aa7d4eb6e28631a1b98ece4d36e"
        ],
        [
            "intro; cut (SFL fn cv h = sin h / h).",
            "VernacExtend",
            "1c91c6f63909c682a2d45b8d707aaff0a3bd3b7c"
        ],
        [
            "intro; rewrite H9 in H8; rewrite H10 in H8.",
            "VernacExtend",
            "ff33c35c638d487e61b2f70e9afc3643a49588f0"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "unfold SFL, sin.",
            "VernacExtend",
            "502dba26668507cb98771b50506be6be3a6fffb3"
        ],
        [
            "case (cv h) as (x,HUn).",
            "VernacExtend",
            "bec53d1da688291369a7d72d6e2761a372e7518c"
        ],
        [
            "case (exist_sin (Rsqr h)) as (x0,Hsin).",
            "VernacExtend",
            "83d66e035a9ab5c1914dfe1b99a760a9781b9412"
        ],
        [
            "unfold Rdiv; rewrite (Rinv_r_simpl_m h x0 H6).",
            "VernacExtend",
            "7af3ba911aba33ca8184ac5b9d71c91b3fde39a1"
        ],
        [
            "eapply UL_sequence.",
            "VernacExtend",
            "73f21f11fa4cdfdc2c034b63878b7be248976b8e"
        ],
        [
            "apply HUn.",
            "VernacExtend",
            "151c9ba1867a20a73673c2bfd472bfe9cef049f9"
        ],
        [
            "unfold sin_in in Hsin; unfold sin_n, infinite_sum in Hsin; unfold SP, fn, Un_cv; intros.",
            "VernacExtend",
            "d3ca3bf189526b7de82624df8f7688d419040e9c"
        ],
        [
            "elim (Hsin _ H10); intros N0 H11.",
            "VernacExtend",
            "89e5861c87f11e31f8f775a88b6e0bef70a239c1"
        ],
        [
            "exists N0; intros.",
            "VernacExtend",
            "e5b9decd3fd5f06277bf4eeacb6fae2a2f851d31"
        ],
        [
            "unfold R_dist; unfold R_dist in H11.",
            "VernacExtend",
            "b09c89748ae3691e8c4b573d6ef221f69b2d409d"
        ],
        [
            "replace (sum_f_R0 (fun k:nat => (-1) ^ k / INR (fact (2 * k + 1)) * h ^ (2 * k)) n) with (sum_f_R0 (fun i:nat => (-1) ^ i / INR (fact (2 * i + 1)) * Rsqr h ^ i) n).",
            "VernacExtend",
            "bd45ec7a252a75556eb2c45d5fa82167ae92c483"
        ],
        [
            "apply H11; assumption.",
            "VernacExtend",
            "c75999ab52fcacb481f9b54247986348c694e781"
        ],
        [
            "apply sum_eq; intros; apply Rmult_eq_compat_l; unfold Rsqr; rewrite pow_sqr; reflexivity.",
            "VernacExtend",
            "815927be667a1c501ab33644d578f9ac662b7520"
        ],
        [
            "unfold SFL, sin.",
            "VernacExtend",
            "502dba26668507cb98771b50506be6be3a6fffb3"
        ],
        [
            "case (cv 0) as (?,HUn).",
            "VernacExtend",
            "5d906ea68f5c2ae5388c1e850c2c08dea9c86f0f"
        ],
        [
            "eapply UL_sequence.",
            "VernacExtend",
            "73f21f11fa4cdfdc2c034b63878b7be248976b8e"
        ],
        [
            "apply HUn.",
            "VernacExtend",
            "151c9ba1867a20a73673c2bfd472bfe9cef049f9"
        ],
        [
            "unfold SP, fn; unfold Un_cv; intros; exists 1%nat; intros.",
            "VernacExtend",
            "5d94b6e71c0e42febc9a381cb1d02113bd66620b"
        ],
        [
            "unfold R_dist; replace (sum_f_R0 (fun k:nat => (-1) ^ k / INR (fact (2 * k + 1)) * 0 ^ (2 * k)) n) with 1.",
            "VernacExtend",
            "9698a6a0b3cda9ebee0771f1c1478b89a38cc91e"
        ],
        [
            "unfold Rminus; rewrite Rplus_opp_r; rewrite Rabs_R0; assumption.",
            "VernacExtend",
            "c1de84b8ec8a6c422226e5ca95d3db00e63bd56e"
        ],
        [
            "rewrite decomp_sum.",
            "VernacExtend",
            "7e80dae4aa8d7459cd460e3ea8427ba0f7fc6201"
        ],
        [
            "simpl; rewrite Rmult_1_r; unfold Rdiv; rewrite Rinv_1; rewrite Rmult_1_r; pattern 1 at 1; rewrite <- Rplus_0_r; apply Rplus_eq_compat_l.",
            "VernacExtend",
            "f0511b883992e957090d2dff32041e3d12c0cc3a"
        ],
        [
            "symmetry ; apply sum_eq_R0; intros.",
            "VernacExtend",
            "65a49844d5f3e0147a62b5066457f0e3fe5626f5"
        ],
        [
            "rewrite Rmult_0_l; rewrite Rmult_0_r; reflexivity.",
            "VernacExtend",
            "14dbf69320df16cb603ce9e8c89d95fcc216f616"
        ],
        [
            "unfold ge in H10; apply lt_le_trans with 1%nat; [ apply lt_n_Sn | apply H10 ].",
            "VernacExtend",
            "4545d88b5682976205045445a1c205d8c17bdd16"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold D_x, no_cond; split.",
            "VernacExtend",
            "121e72bbd9a8ad97e9353edec680d410ccaf17ee"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (not_eq_sym (A:=R)); apply H6.",
            "VernacExtend",
            "a828384d490003436eceeb0c1107099a2a012825"
        ],
        [
            "unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; apply H7.",
            "VernacExtend",
            "e743ccc19220a318f6ac741f534b8a1c97f0a87e"
        ],
        [
            "unfold Boule; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; rewrite Rabs_R0; apply (cond_pos r).",
            "VernacExtend",
            "e4084a5ae6f78fbc226c947001c068b43ce43fa0"
        ],
        [
            "intros; unfold fn; replace (fun x:R => (-1) ^ n / INR (fact (2 * n + 1)) * x ^ (2 * n)) with (fct_cte ((-1) ^ n / INR (fact (2 * n + 1))) * pow_fct (2 * n))%F; [ idtac | reflexivity ].",
            "VernacExtend",
            "421e93b0b6a00223b45dfc264391caa898777fd8"
        ],
        [
            "apply continuity_pt_mult.",
            "VernacExtend",
            "363550e1be8dbaf9c1ac305aa12a40e85202dd88"
        ],
        [
            "apply derivable_continuous_pt.",
            "VernacExtend",
            "939a043861a6c1b6ad68f89e18a325fcf10fb0f3"
        ],
        [
            "apply derivable_pt_const.",
            "VernacExtend",
            "5f79fec976d4bf9b10f4ae3f2bf89e7653fa9cab"
        ],
        [
            "apply derivable_continuous_pt.",
            "VernacExtend",
            "939a043861a6c1b6ad68f89e18a325fcf10fb0f3"
        ],
        [
            "apply (derivable_pt_pow (2 * n) y).",
            "VernacExtend",
            "14883e9298bafbc2496c0d3895704072499482ea"
        ],
        [
            "apply (X r).",
            "VernacExtend",
            "b010d23fe277f0f33c063c46a80c14ab725f9f7f"
        ],
        [
            "apply (CVN_R_CVS _ X).",
            "VernacExtend",
            "2bbc5c96ec3cce957cdd29cf0007cceeb049bd74"
        ],
        [
            "apply CVN_R_sin; unfold fn; reflexivity.",
            "VernacExtend",
            "0ffd89cc0f9c16ad2687b26ba72b89707fcc56c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivable_pt_lim_cos_0 : derivable_pt_lim cos 0 0.",
            "VernacStartTheoremProof",
            "dfef6fb7c8406f24383fac3b14049c0b13fdfcba"
        ],
        [
            "unfold derivable_pt_lim; intros.",
            "VernacExtend",
            "a20ff8eb80507306544faac85c14ba31dc6809e2"
        ],
        [
            "assert (H0 := derivable_pt_lim_sin_0).",
            "VernacExtend",
            "4bef7b5e02bae1d738f77763b91a28315144f147"
        ],
        [
            "unfold derivable_pt_lim in H0.",
            "VernacExtend",
            "7dc0119f8f9cce8489446f7636282462f236cd26"
        ],
        [
            "cut (0 < eps / 2).",
            "VernacExtend",
            "d5d8cc056d52c3ef8078a56f20d37abe11587c19"
        ],
        [
            "intro; elim (H0 _ H1); intros del H2.",
            "VernacExtend",
            "acc8f59dada78675fb467bed76ad438073a08496"
        ],
        [
            "cut (continuity_pt sin 0).",
            "VernacExtend",
            "6aa51fdd13cb819fb18a8c6fde359685b5f3c839"
        ],
        [
            "intro; unfold continuity_pt in H3; unfold continue_in in H3; unfold limit1_in in H3; unfold limit_in in H3; simpl in H3; unfold R_dist in H3.",
            "VernacExtend",
            "d28f4a3304ff6e483ba0f05fbd23abc0dd1f6c06"
        ],
        [
            "cut (0 < eps / 2); [ intro | assumption ].",
            "VernacExtend",
            "5736c842683698429fe1ba5e4bd5a7ddd026fa7f"
        ],
        [
            "elim (H3 _ H4); intros del_c H5.",
            "VernacExtend",
            "baeee2893cec28865c18363384acc1f926f58d0a"
        ],
        [
            "cut (0 < Rmin del del_c).",
            "VernacExtend",
            "0eb972c0344533a93fcd9f2a26ed4fe672bf1122"
        ],
        [
            "intro; set (delta := mkposreal _ H6).",
            "VernacExtend",
            "3df8c3397f004ab7f73eac2077ebefe88ddddffb"
        ],
        [
            "exists delta; intros.",
            "VernacExtend",
            "ddc6b920cb7f974017d7fecfefd522621473bf76"
        ],
        [
            "rewrite Rplus_0_l; replace (cos h - cos 0) with (-2 * Rsqr (sin (h / 2))).",
            "VernacExtend",
            "385b1daf2c51540702ccfa4267b3b94cf050bd31"
        ],
        [
            "unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r.",
            "VernacExtend",
            "f7f0c1adf1075a0f11da86855dbf21724d946bc5"
        ],
        [
            "change (-2) with (-(2)).",
            "VernacExtend",
            "0f19b793bd44e8c8db03b5c134dec8a656766f1c"
        ],
        [
            "unfold Rdiv; do 2 rewrite Ropp_mult_distr_l_reverse.",
            "VernacExtend",
            "d1cf65acb3d2e1fc3209306a8607a03bc168064b"
        ],
        [
            "rewrite Rabs_Ropp.",
            "VernacExtend",
            "4585414329a0ef757c809f4a4dee3b3a09307b5c"
        ],
        [
            "replace (2 * Rsqr (sin (h * / 2)) * / h) with (sin (h / 2) * (sin (h / 2) / (h / 2) - 1) + sin (h / 2)).",
            "VernacExtend",
            "32a53a786f3071443012f29197a05d5e4d0e24fb"
        ],
        [
            "apply Rle_lt_trans with (Rabs (sin (h / 2) * (sin (h / 2) / (h / 2) - 1)) + Rabs (sin (h / 2))).",
            "VernacExtend",
            "1668e6f9ca2e554df88c3ead9fa714969b3e5a71"
        ],
        [
            "apply Rabs_triang.",
            "VernacExtend",
            "ac95e0693bced827aa4991eb13639b86503a8150"
        ],
        [
            "rewrite (double_var eps); apply Rplus_lt_compat.",
            "VernacExtend",
            "dd3002897582f3251627e3b8fbd0c2a8c471071b"
        ],
        [
            "apply Rle_lt_trans with (Rabs (sin (h / 2) / (h / 2) - 1)).",
            "VernacExtend",
            "2e6af6604977b1ebdea4b5ac64493bca6e6c7707"
        ],
        [
            "rewrite Rabs_mult; rewrite Rmult_comm; pattern (Rabs (sin (h / 2) / (h / 2) - 1)) at 2; rewrite <- Rmult_1_r; apply Rmult_le_compat_l.",
            "VernacExtend",
            "e5fe45df051cfede4a4d30d9e4f336cfcc20aade"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "assert (H9 := SIN_bound (h / 2)).",
            "VernacExtend",
            "75ac288c9391656a8ca875396a647e956a7a5ab6"
        ],
        [
            "unfold Rabs; case (Rcase_abs (sin (h / 2))); intro.",
            "VernacExtend",
            "ed8bc1fd7be0d8f3701a7a0e23c5c4fcecb038f7"
        ],
        [
            "rewrite <- (Ropp_involutive 1).",
            "VernacExtend",
            "f26680b58559470c453432858c847f38cc8492f6"
        ],
        [
            "apply Ropp_le_contravar.",
            "VernacExtend",
            "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
        ],
        [
            "elim H9; intros; assumption.",
            "VernacExtend",
            "8fe07a35a5ab7cf96f2efb2baff6e494f333a6ed"
        ],
        [
            "elim H9; intros; assumption.",
            "VernacExtend",
            "8fe07a35a5ab7cf96f2efb2baff6e494f333a6ed"
        ],
        [
            "cut (Rabs (h / 2) < del).",
            "VernacExtend",
            "d4abb083a882954a3805ba4e572f2585257a5c9a"
        ],
        [
            "intro; cut (h / 2 <> 0).",
            "VernacExtend",
            "ae34935c6284c8ee3cee186a2e05cf5b6e568d8a"
        ],
        [
            "intro; assert (H11 := H2 _ H10 H9).",
            "VernacExtend",
            "64902cbc1d4aef16c03f0b22f0db9300a688314d"
        ],
        [
            "rewrite Rplus_0_l in H11; rewrite sin_0 in H11.",
            "VernacExtend",
            "1b25aff6761a96aaf8c478b21870fa4fe108e837"
        ],
        [
            "rewrite Rminus_0_r in H11; apply H11.",
            "VernacExtend",
            "42083fcb35ae4425ac8db85aeb07c320b3dc1126"
        ],
        [
            "unfold Rdiv; apply prod_neq_R0.",
            "VernacExtend",
            "bae86043f3acfd4aeb1f77f1138e1172ace3c7fa"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply Rinv_neq_0_compat; discrR.",
            "VernacExtend",
            "c996ce35ba9924ff499f316d0fb3eaf573a9e988"
        ],
        [
            "apply Rlt_trans with (del / 2).",
            "VernacExtend",
            "7e15ec55ccd3ddf8ba6a3b31c0e23b2d8af1d470"
        ],
        [
            "unfold Rdiv; rewrite Rabs_mult.",
            "VernacExtend",
            "ffb5e4297bd1945ec8a2777fcbcdf2c5e3b93bce"
        ],
        [
            "rewrite (Rabs_right (/ 2)).",
            "VernacExtend",
            "6f612acfe40ba0ec35a615c503273e09edcfc335"
        ],
        [
            "do 2 rewrite <- (Rmult_comm (/ 2)); apply Rmult_lt_compat_l.",
            "VernacExtend",
            "19be392466bbf1d27c1fa9888df81c9c31029bbe"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "ee74bd033c1031a79ef440e1d41037d5c9648214"
        ],
        [
            "apply Rlt_le_trans with (pos delta).",
            "VernacExtend",
            "03e5d42ed788c54384dcdf78c0c44c4b011dacd6"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "unfold delta; simpl; apply Rmin_l.",
            "VernacExtend",
            "ff0d709a1a366f058d8b857f5fbb7cbf9aaf6acd"
        ],
        [
            "apply Rle_ge; left; apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "d4ca803af6360ae7af00a23fe13ae3b69dd59a74"
        ],
        [
            "rewrite <- (Rplus_0_r (del / 2)); pattern del at 1; rewrite (double_var del); apply Rplus_lt_compat_l; unfold Rdiv; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "957c5db0744debeb09306d856a154ca5cdcc7fcf"
        ],
        [
            "apply (cond_pos del).",
            "VernacExtend",
            "ac01251087d8ed6a52f03fd522df5ae3ad740374"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "ee74bd033c1031a79ef440e1d41037d5c9648214"
        ],
        [
            "elim H5; intros; assert (H11 := H10 (h / 2)).",
            "VernacExtend",
            "7d0468f146bf192859675bae7fbf310a1cf0f451"
        ],
        [
            "rewrite sin_0 in H11; do 2 rewrite Rminus_0_r in H11.",
            "VernacExtend",
            "6df041b6cf3cc5b123866ff011607297d96a2e2d"
        ],
        [
            "apply H11.",
            "VernacExtend",
            "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold D_x, no_cond; split.",
            "VernacExtend",
            "121e72bbd9a8ad97e9353edec680d410ccaf17ee"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply (not_eq_sym (A:=R)); unfold Rdiv; apply prod_neq_R0.",
            "VernacExtend",
            "01f14f6eccf908635a87d81f11e45f0f9cee58b3"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply Rinv_neq_0_compat; discrR.",
            "VernacExtend",
            "c996ce35ba9924ff499f316d0fb3eaf573a9e988"
        ],
        [
            "apply Rlt_trans with (del_c / 2).",
            "VernacExtend",
            "6cf5d43ee1b81a5e234991fdc64ee28aa16d2f82"
        ],
        [
            "unfold Rdiv; rewrite Rabs_mult.",
            "VernacExtend",
            "ffb5e4297bd1945ec8a2777fcbcdf2c5e3b93bce"
        ],
        [
            "rewrite (Rabs_right (/ 2)).",
            "VernacExtend",
            "6f612acfe40ba0ec35a615c503273e09edcfc335"
        ],
        [
            "do 2 rewrite <- (Rmult_comm (/ 2)).",
            "VernacExtend",
            "c850149838567a06c191372813508ddac2e94fec"
        ],
        [
            "apply Rmult_lt_compat_l.",
            "VernacExtend",
            "e06ce02cd2654586097cfda8f116dd4fe6d6b2a8"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "ee74bd033c1031a79ef440e1d41037d5c9648214"
        ],
        [
            "apply Rlt_le_trans with (pos delta).",
            "VernacExtend",
            "03e5d42ed788c54384dcdf78c0c44c4b011dacd6"
        ],
        [
            "apply H8.",
            "VernacExtend",
            "2014720df0411c2963f20792fe424080d05f44aa"
        ],
        [
            "unfold delta; simpl; apply Rmin_r.",
            "VernacExtend",
            "a192285c261963d1edf7fc296de4174b65a59f8e"
        ],
        [
            "apply Rle_ge; left; apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "d4ca803af6360ae7af00a23fe13ae3b69dd59a74"
        ],
        [
            "rewrite <- (Rplus_0_r (del_c / 2)); pattern del_c at 2; rewrite (double_var del_c); apply Rplus_lt_compat_l.",
            "VernacExtend",
            "160ef6a38b06349ae10ebedc180454885238a7b9"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "7122edbd68559f255bfed03dc640472ed14eb4ef"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "ee74bd033c1031a79ef440e1d41037d5c9648214"
        ],
        [
            "rewrite Rmult_minus_distr_l; rewrite Rmult_1_r; unfold Rminus; rewrite Rplus_assoc; rewrite Rplus_opp_l; rewrite Rplus_0_r; rewrite (Rmult_comm 2); unfold Rdiv, Rsqr.",
            "VernacExtend",
            "2f7c415d439af673638415cc4898458f33f8e29c"
        ],
        [
            "repeat rewrite Rmult_assoc.",
            "VernacExtend",
            "9a62b3359051e53192153e7bfe542316dbd712a8"
        ],
        [
            "repeat apply Rmult_eq_compat_l.",
            "VernacExtend",
            "c7ab810debda981b95e89d049d103939ca373424"
        ],
        [
            "rewrite Rinv_mult_distr.",
            "VernacExtend",
            "55666fd2776d160fb1bfd9d38a2833e66927f366"
        ],
        [
            "rewrite Rinv_involutive.",
            "VernacExtend",
            "422941d9f5ab1f835c6b4368750431aa4fff0509"
        ],
        [
            "apply Rmult_comm.",
            "VernacExtend",
            "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "apply Rinv_neq_0_compat; discrR.",
            "VernacExtend",
            "c996ce35ba9924ff499f316d0fb3eaf573a9e988"
        ],
        [
            "pattern h at 2; replace h with (2 * (h / 2)).",
            "VernacExtend",
            "d5c855daec8ef532fc15a776b4de26624203a7bb"
        ],
        [
            "rewrite (cos_2a_sin (h / 2)).",
            "VernacExtend",
            "faf63fd8bce625bef0012e92232913fff3ae0702"
        ],
        [
            "rewrite cos_0; unfold Rsqr; ring.",
            "VernacExtend",
            "94bc2166716a6f6602110189c51845e1e5b219a3"
        ],
        [
            "unfold Rdiv; rewrite <- Rmult_assoc; apply Rinv_r_simpl_m.",
            "VernacExtend",
            "e126f3d64c8457c26380151c41513db4b83224e0"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "unfold Rmin; case (Rle_dec del del_c); intro.",
            "VernacExtend",
            "4437034345443470fd5e48ddb4cccc640919e483"
        ],
        [
            "apply (cond_pos del).",
            "VernacExtend",
            "ac01251087d8ed6a52f03fd522df5ae3ad740374"
        ],
        [
            "elim H5; intros; assumption.",
            "VernacExtend",
            "e3759bfc7109dba24b94887055d32bb02045fe9b"
        ],
        [
            "apply continuity_sin.",
            "VernacExtend",
            "8fee4a0f58da74e4f8fc7a5bf5382f421ccdf07a"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; prove_sup0 ].",
            "VernacExtend",
            "4d905fce1c75d7adfc4f1cd2deb30dbdf49bf2f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem derivable_pt_lim_sin : forall x:R, derivable_pt_lim sin x (cos x).",
            "VernacStartTheoremProof",
            "50f9be1d57047b2aa289b3bd620c10607947dbdf"
        ],
        [
            "intro; assert (H0 := derivable_pt_lim_sin_0).",
            "VernacExtend",
            "68b8e1cd1ed4841ff20bd864adaf24d9fc95b9f2"
        ],
        [
            "assert (H := derivable_pt_lim_cos_0).",
            "VernacExtend",
            "84b2ecd9daabc3d66b2e994e20fa04d705caf0b8"
        ],
        [
            "unfold derivable_pt_lim in H0, H.",
            "VernacExtend",
            "0eaa70a09a380a5eb8104fa63817bc4d3387501b"
        ],
        [
            "unfold derivable_pt_lim; intros.",
            "VernacExtend",
            "a20ff8eb80507306544faac85c14ba31dc6809e2"
        ],
        [
            "cut (0 < eps / 2); [ intro | unfold Rdiv; apply Rmult_lt_0_compat; [ apply H1 | apply Rinv_0_lt_compat; prove_sup0 ] ].",
            "VernacExtend",
            "06b1963760a889eca4648d42559102cf5243a6bf"
        ],
        [
            "elim (H0 _ H2); intros alp1 H3.",
            "VernacExtend",
            "4e4ecd9d1b3a3c6b715cd4c88441e12698bb9eee"
        ],
        [
            "elim (H _ H2); intros alp2 H4.",
            "VernacExtend",
            "c22e3dbfe60e803e8fc5b861747385799b406c00"
        ],
        [
            "set (alp := Rmin alp1 alp2).",
            "VernacExtend",
            "04c7edb6e01f1546c388bc5c9ac5eb282499543a"
        ],
        [
            "cut (0 < alp).",
            "VernacExtend",
            "69a7ad4f1518d1d0840e1f5c7d5decf673cef2a4"
        ],
        [
            "intro; exists (mkposreal _ H5); intros.",
            "VernacExtend",
            "d277e16c5b657dd9cbe806b4e12562e7340fa507"
        ],
        [
            "replace ((sin (x + h) - sin x) / h - cos x) with (sin x * ((cos h - 1) / h) + cos x * (sin h / h - 1)).",
            "VernacExtend",
            "3b79e3edfd3a66fb40a60902c3449fd5ea279393"
        ],
        [
            "apply Rle_lt_trans with (Rabs (sin x * ((cos h - 1) / h)) + Rabs (cos x * (sin h / h - 1))).",
            "VernacExtend",
            "ffe348a13ece3ddec4812329ba10d029122bacf1"
        ],
        [
            "apply Rabs_triang.",
            "VernacExtend",
            "ac95e0693bced827aa4991eb13639b86503a8150"
        ],
        [
            "rewrite (double_var eps); apply Rplus_lt_compat.",
            "VernacExtend",
            "dd3002897582f3251627e3b8fbd0c2a8c471071b"
        ],
        [
            "apply Rle_lt_trans with (Rabs ((cos h - 1) / h)).",
            "VernacExtend",
            "b77f41f7c57d33c7f2ce6604b6e82d3de2a9c7da"
        ],
        [
            "rewrite Rabs_mult; rewrite Rmult_comm; pattern (Rabs ((cos h - 1) / h)) at 2; rewrite <- Rmult_1_r; apply Rmult_le_compat_l.",
            "VernacExtend",
            "22b28440ce4712a13d5b1f5b88bc9a88bcd86171"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "assert (H8 := SIN_bound x); elim H8; intros.",
            "VernacExtend",
            "33bbcfe122c07c121947b50e7512f2930bde748a"
        ],
        [
            "unfold Rabs; case (Rcase_abs (sin x)); intro.",
            "VernacExtend",
            "850fee69aa754307ffad056f8aa03ec5fced0c4d"
        ],
        [
            "rewrite <- (Ropp_involutive 1).",
            "VernacExtend",
            "f26680b58559470c453432858c847f38cc8492f6"
        ],
        [
            "apply Ropp_le_contravar; assumption.",
            "VernacExtend",
            "e084b285b4972f6a0f03697e2fe9cf57f57f9e50"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (Rabs h < alp2).",
            "VernacExtend",
            "5ed3e48f00fedf607dd481789b43136a8b8e1947"
        ],
        [
            "intro; assert (H9 := H4 _ H6 H8).",
            "VernacExtend",
            "68b2ab696b13bd8ec4041b3892c7c92ce6f4bfee"
        ],
        [
            "rewrite cos_0 in H9; rewrite Rplus_0_l in H9; rewrite Rminus_0_r in H9; apply H9.",
            "VernacExtend",
            "1f5008641872c6fab2289c45d2be5a02707854df"
        ],
        [
            "apply Rlt_le_trans with alp.",
            "VernacExtend",
            "5c6b053e25325bd0ca7a59ad9cac5f57fc4f18a2"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "unfold alp; apply Rmin_r.",
            "VernacExtend",
            "01efd8b4bf10bed7ffc6b2363819fefebfe56254"
        ],
        [
            "apply Rle_lt_trans with (Rabs (sin h / h - 1)).",
            "VernacExtend",
            "13e953f8d58ff8567f7326e90b2fe6e3c1a09cfa"
        ],
        [
            "rewrite Rabs_mult; rewrite Rmult_comm; pattern (Rabs (sin h / h - 1)) at 2; rewrite <- Rmult_1_r; apply Rmult_le_compat_l.",
            "VernacExtend",
            "9e22bbd44cc30b8591844f5f458847e083c9057d"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "assert (H8 := COS_bound x); elim H8; intros.",
            "VernacExtend",
            "21656cf9504875032da1251f35b73474efe77d38"
        ],
        [
            "unfold Rabs; case (Rcase_abs (cos x)); intro.",
            "VernacExtend",
            "033773773e319f34c9d2af9eb8ed316fb8bf6d0f"
        ],
        [
            "rewrite <- (Ropp_involutive 1); apply Ropp_le_contravar; assumption.",
            "VernacExtend",
            "763a2967596f9f765008d4b02c3e6d668949ed08"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (Rabs h < alp1).",
            "VernacExtend",
            "287c9bc592eb76c309c35c0ce4eb9563ba2f0bc0"
        ],
        [
            "intro; assert (H9 := H3 _ H6 H8).",
            "VernacExtend",
            "6d3ac488bde30d988b0a336c1dc43913117954c1"
        ],
        [
            "rewrite sin_0 in H9; rewrite Rplus_0_l in H9; rewrite Rminus_0_r in H9; apply H9.",
            "VernacExtend",
            "6f51ef4c4f0ea3fc08ecf56f0a6dde4c7339e8be"
        ],
        [
            "apply Rlt_le_trans with alp.",
            "VernacExtend",
            "5c6b053e25325bd0ca7a59ad9cac5f57fc4f18a2"
        ],
        [
            "apply H7.",
            "VernacExtend",
            "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
        ],
        [
            "unfold alp; apply Rmin_l.",
            "VernacExtend",
            "665b0a37944c1d430cad7788be41b284360838cb"
        ],
        [
            "rewrite sin_plus.",
            "VernacExtend",
            "6ebac3ac66a1fae668e241ba6e8ce392c23ff9dc"
        ],
        [
            "now field.",
            "VernacExtend",
            "f3de8dbe903009a3417a80d825415eef0ce85558"
        ],
        [
            "unfold alp; unfold Rmin; case (Rle_dec alp1 alp2); intro.",
            "VernacExtend",
            "e484e1c35ea55df3bcb8ce41c3bc916d26d3e6c6"
        ],
        [
            "apply (cond_pos alp1).",
            "VernacExtend",
            "c49c4acdce302a6d0e213893e620aa67fdec0adf"
        ],
        [
            "apply (cond_pos alp2).",
            "VernacExtend",
            "bfaaaf5f9f09ffd6e57856b505324400032b3e54"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivable_pt_lim_cos : forall x:R, derivable_pt_lim cos x (- sin x).",
            "VernacStartTheoremProof",
            "f49dc060247a628c2aebdff298d6516447871116"
        ],
        [
            "intro; cut (forall h:R, sin (h + PI / 2) = cos h).",
            "VernacExtend",
            "5c92cd6384cde944f8cc418cd2224f44f3f4f7d6"
        ],
        [
            "intro; replace (- sin x) with (cos (x + PI / 2) * (1 + 0)).",
            "VernacExtend",
            "3b5daed47eafddcb2f2b4efe5519ebfb1b2876c8"
        ],
        [
            "generalize (derivable_pt_lim_comp (id + fct_cte (PI / 2))%F sin); intros.",
            "VernacExtend",
            "0f884bb890731bdee5373c98be3f162f8d2d764c"
        ],
        [
            "cut (derivable_pt_lim (id + fct_cte (PI / 2)) x (1 + 0)).",
            "VernacExtend",
            "a25c89162b9e8ae778acd41aea9b937590789589"
        ],
        [
            "cut (derivable_pt_lim sin ((id + fct_cte (PI / 2))%F x) (cos (x + PI / 2))).",
            "VernacExtend",
            "d75defee92c734d84f531b7eb57a23040c55d698"
        ],
        [
            "intros; generalize (H0 _ _ _ H2 H1); replace (comp sin (id + fct_cte (PI / 2))%F) with (fun x:R => sin (x + PI / 2)); [ idtac | reflexivity ].",
            "VernacExtend",
            "c7f812c65d8aa7976e8e43b46af8088436fbfa16"
        ],
        [
            "unfold derivable_pt_lim; intros.",
            "VernacExtend",
            "a20ff8eb80507306544faac85c14ba31dc6809e2"
        ],
        [
            "elim (H3 eps H4); intros.",
            "VernacExtend",
            "051c0526b14329b723a645bcf1a0e697be3c3b69"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "intros; rewrite <- (H (x + h)); rewrite <- (H x); apply H5; assumption.",
            "VernacExtend",
            "37876698c85d59672ad83719338bdb911e9be03a"
        ],
        [
            "apply derivable_pt_lim_sin.",
            "VernacExtend",
            "3f9b077bf34c88c8326701a62a4415789e05cf56"
        ],
        [
            "apply derivable_pt_lim_plus.",
            "VernacExtend",
            "0ff92de56586834c2b5893a998ecf9b0d0c93d06"
        ],
        [
            "apply derivable_pt_lim_id.",
            "VernacExtend",
            "eefa66208b1c7b1195a98db883611b02fd29636c"
        ],
        [
            "apply derivable_pt_lim_const.",
            "VernacExtend",
            "960938bb384eb6666a08df49ec2457c0f743a285"
        ],
        [
            "rewrite sin_cos; rewrite <- (Rplus_comm x); ring.",
            "VernacExtend",
            "7a01aafdb831cfa6c779c9ef315bb5c9d1a415cb"
        ],
        [
            "intro; rewrite cos_sin; rewrite Rplus_comm; reflexivity.",
            "VernacExtend",
            "b8852ac7ae18f4b676d7ad80cd0f052c762de2d0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivable_pt_sin : forall x:R, derivable_pt sin x.",
            "VernacStartTheoremProof",
            "4dc6e1a6136c387b7579cabf2afb7f5bbbf769a8"
        ],
        [
            "unfold derivable_pt; intro.",
            "VernacExtend",
            "8b6a9c15f0b1c8462f93b4cfc8a8d4b253743770"
        ],
        [
            "exists (cos x).",
            "VernacExtend",
            "113d4b81d8e8cfdbb9473fee8469a2f5eec2c35d"
        ],
        [
            "apply derivable_pt_lim_sin.",
            "VernacExtend",
            "3f9b077bf34c88c8326701a62a4415789e05cf56"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivable_pt_cos : forall x:R, derivable_pt cos x.",
            "VernacStartTheoremProof",
            "5ecb94cb259ec135ec4e38aa3cd18861a002da88"
        ],
        [
            "unfold derivable_pt; intro.",
            "VernacExtend",
            "8b6a9c15f0b1c8462f93b4cfc8a8d4b253743770"
        ],
        [
            "exists (- sin x).",
            "VernacExtend",
            "fc2b6376e7745e72ee8de4fc766adf7ebac53654"
        ],
        [
            "apply derivable_pt_lim_cos.",
            "VernacExtend",
            "26f46e03f115a0b5b5f4a74bb597f9f001affd8e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivable_sin : derivable sin.",
            "VernacStartTheoremProof",
            "14dfe74e575c65929dec914e2f862e94c3bc1576"
        ],
        [
            "unfold derivable; intro; apply derivable_pt_sin.",
            "VernacExtend",
            "eda3abb52f0459385a2e5e3dc9f0925abdf0c92d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derivable_cos : derivable cos.",
            "VernacStartTheoremProof",
            "4b49b155f4f56a0b964df0f1ee80ea3b25f6577a"
        ],
        [
            "unfold derivable; intro; apply derivable_pt_cos.",
            "VernacExtend",
            "627a5b7d01461e16830025dbdbd5390cf525d11f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derive_pt_sin : forall x:R, derive_pt sin x (derivable_pt_sin _) = cos x.",
            "VernacStartTheoremProof",
            "2d332704a9e2d1dbafc09bffdac84ad136b9570d"
        ],
        [
            "intros; apply derive_pt_eq_0.",
            "VernacExtend",
            "91c679ec7d99977724de101d3ecc0b067a010cf2"
        ],
        [
            "apply derivable_pt_lim_sin.",
            "VernacExtend",
            "3f9b077bf34c88c8326701a62a4415789e05cf56"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma derive_pt_cos : forall x:R, derive_pt cos x (derivable_pt_cos _) = - sin x.",
            "VernacStartTheoremProof",
            "ef86447dd883fc557aff6c00c3f3e1eb2f042105"
        ],
        [
            "intros; apply derive_pt_eq_0.",
            "VernacExtend",
            "91c679ec7d99977724de101d3ecc0b067a010cf2"
        ],
        [
            "apply derivable_pt_lim_cos.",
            "VernacExtend",
            "26f46e03f115a0b5b5f4a74bb597f9f001affd8e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "continuity_sin",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "unfold continuity; intro.",
                        "VernacExtend",
                        "d6e8bba49e5caf86bec070659cbf98100a84c416"
                    ]
                },
                {
                    "command": [
                        "assert (H0 := continuity_cos (PI / 2 - x)).",
                        "VernacExtend",
                        "8973bba362eb3900592bc82bba440fd7bad77aca"
                    ]
                },
                {
                    "command": [
                        "unfold continuity_pt in H0; unfold continue_in in H0; unfold limit1_in in H0; unfold limit_in in H0; simpl in H0; unfold R_dist in H0; unfold continuity_pt; unfold continue_in; unfold limit1_in; unfold limit_in; simpl; unfold R_dist; intros.",
                        "VernacExtend",
                        "03cc5ce030110d24831ac3471654cdaa67b4811c"
                    ]
                },
                {
                    "command": [
                        "elim (H0 _ H); intros.",
                        "VernacExtend",
                        "a1d774425e961185313b80710eb0b1a9b4403cd4"
                    ]
                },
                {
                    "command": [
                        "exists x0; intros.",
                        "VernacExtend",
                        "5bc9f78cbd3bd0b9d5ad70bca80ff875ab1656fa"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros.",
                        "VernacExtend",
                        "6b7bcf9d739b14ca3a09271e2c3493e16c5e2914"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite <- (cos_shift x); rewrite <- (cos_shift x1); apply H3.",
                        "VernacExtend",
                        "705d3e8ad8cb5c63acff48dacf7efdb859a6a256"
                    ]
                },
                {
                    "command": [
                        "elim H4; intros.",
                        "VernacExtend",
                        "ef88f175449d4af46e0685700665ce0cdf3e5695"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold D_x, no_cond; split.",
                        "VernacExtend",
                        "121e72bbd9a8ad97e9353edec680d410ccaf17ee"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "red; intro; unfold D_x, no_cond in H5; elim H5; intros _ H8; elim H8; rewrite <- (Ropp_involutive x); rewrite <- (Ropp_involutive x1); apply Ropp_eq_compat; apply Rplus_eq_reg_l with (PI / 2); apply H7.",
                        "VernacExtend",
                        "841ed93d8adaa743f9d2303e8bbb0a08d707352f"
                    ]
                },
                {
                    "command": [
                        "replace (PI / 2 - x1 - (PI / 2 - x)) with (x - x1); [ idtac | ring ]; rewrite <- Rabs_Ropp; rewrite Ropp_minus_distr'; apply H6.",
                        "VernacExtend",
                        "848b8fe7920ab23d0407e6b05217e65115ddb01f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CVN_R_sin",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "unfold CVN_R; unfold CVN_r; intros fn H r.",
                        "VernacExtend",
                        "3d9fb46b2d979d691c4fa35e582ecc34fb856f93"
                    ]
                },
                {
                    "command": [
                        "exists (fun n:nat => / INR (fact (2 * n + 1)) * r ^ (2 * n)).",
                        "VernacExtend",
                        "c78d56dc63a7a7b13e709937b5b6ea8a4c47abd2"
                    ]
                },
                {
                    "command": [
                        "cut { l:R | Un_cv (fun n:nat => sum_f_R0 (fun k:nat => Rabs (/ INR (fact (2 * k + 1)) * r ^ (2 * k))) n) l }.",
                        "VernacExtend",
                        "693779790020cc25a91a79676dca75f90ccd5bc2"
                    ]
                },
                {
                    "command": [
                        "intros (x,p).",
                        "VernacExtend",
                        "1cd393355f801023c209f47ad1e2e37516ca0eec"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply p.",
                        "VernacExtend",
                        "5d7bd2c81be5e2631c5ccceda06a4542d9bac4b6"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite H; unfold Rdiv; do 2 rewrite Rabs_mult; rewrite pow_1_abs; rewrite Rmult_1_l.",
                        "VernacExtend",
                        "423a0c6b55c9d124ffb0e4fdbf6cba6532cf2b97"
                    ]
                },
                {
                    "command": [
                        "cut (0 < / INR (fact (2 * n + 1))).",
                        "VernacExtend",
                        "93dad06746b90182c1f62260b12ea81b9291be2e"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite (Rabs_right _ (Rle_ge _ _ (Rlt_le _ _ H1))).",
                        "VernacExtend",
                        "7eeedadc33bbb1d44c0364543be6187798bd2034"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "left; apply H1.",
                        "VernacExtend",
                        "993f5d69ffe02b0f51fe3710b8fd8b146d347b12"
                    ]
                },
                {
                    "command": [
                        "rewrite <- RPow_abs; apply pow_maj_Rabs.",
                        "VernacExtend",
                        "3137e1f2b0c186c4cc714aa9a1d22cc24798f207"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Rabsolu; unfold Boule in H0; rewrite Rminus_0_r in H0; left; apply H0.",
                        "VernacExtend",
                        "3fa2495ee56b9b23ec083da62a76cd8132c0a4fa"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply INR_fact_lt_0.",
                        "VernacExtend",
                        "8746728d1b094c52cff718b0ca0d4fed0572288d"
                    ]
                },
                {
                    "command": [
                        "cut ((r:R) <> 0).",
                        "VernacExtend",
                        "ed7f6cd86facb8c8ae9cea821f797ccf393f6b5f"
                    ]
                },
                {
                    "command": [
                        "intro; apply Alembert_C2.",
                        "VernacExtend",
                        "19b69def78f980128ddd7de5a7c9261b2ad1bdb2"
                    ]
                },
                {
                    "command": [
                        "intro; apply Rabs_no_R0.",
                        "VernacExtend",
                        "a06d7ed85eaff8c9381215cccf82982332cee7e5"
                    ]
                },
                {
                    "command": [
                        "apply prod_neq_R0.",
                        "VernacExtend",
                        "4e401b99cc3c24b61ca502aa7107071c427501ea"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_neq_0_compat; apply INR_fact_neq_0.",
                        "VernacExtend",
                        "1742a1970e2bd84f0fd2145213af0978df013d33"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero; assumption.",
                        "VernacExtend",
                        "6d4db41cbe558f394b4e9accb20ef61b0da0c671"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := Alembert_sin).",
                        "VernacExtend",
                        "ab17ad419ae8d7b269d3312972cd4a64d32f2674"
                    ]
                },
                {
                    "command": [
                        "unfold sin_n in H1; unfold Un_cv in H1; unfold Un_cv; intros.",
                        "VernacExtend",
                        "2bce7b5c1f97fbc75367f94bdd3409bd6a531342"
                    ]
                },
                {
                    "command": [
                        "cut (0 < eps / Rsqr r).",
                        "VernacExtend",
                        "c39c1ed051ead2a5a02ec894991cbf7e069a506b"
                    ]
                },
                {
                    "command": [
                        "intro; elim (H1 _ H3); intros N0 H4.",
                        "VernacExtend",
                        "09148ef4ef6f9b924b1927e1e2eb15aec781c17a"
                    ]
                },
                {
                    "command": [
                        "exists N0; intros.",
                        "VernacExtend",
                        "e5b9decd3fd5f06277bf4eeacb6fae2a2f851d31"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist; assert (H6 := H4 _ H5).",
                        "VernacExtend",
                        "02014a3c5d07a5d0d5cb199fdd504d226df89ac3"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist in H5; replace (Rabs (Rabs (/ INR (fact (2 * S n + 1)) * r ^ (2 * S n)) / Rabs (/ INR (fact (2 * n + 1)) * r ^ (2 * n)))) with (Rsqr r * Rabs ((-1) ^ S n / INR (fact (2 * S n + 1)) / ((-1) ^ n / INR (fact (2 * n + 1))))).",
                        "VernacExtend",
                        "f7a12c9e7b5bb4adcec43314852b4ad424d16605"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (/ Rsqr r).",
                        "VernacExtend",
                        "053f9f89df9c3969358ea966c593033870cbbe4e"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply Rsqr_pos_lt; assumption.",
                        "VernacExtend",
                        "6039c4ffcf619f7d20dc6b4b63575c7f8734718e"
                    ]
                },
                {
                    "command": [
                        "pattern (/ Rsqr r) at 1; rewrite <- (Rabs_right (/ Rsqr r)).",
                        "VernacExtend",
                        "7fb5931ba669381f53150390d22910fc80e1be27"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rabs_mult.",
                        "VernacExtend",
                        "ffb7829eab0f0e304148d87efd020e97968f73cc"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_minus_distr_l.",
                        "VernacExtend",
                        "7222a49d2309983cf6476a1131eec66c4836f9f6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_0_r; rewrite <- Rmult_assoc; rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "26b561cd9480f1417ce47a0cec172f68f7f37cea"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l; rewrite <- (Rmult_comm eps).",
                        "VernacExtend",
                        "14621bcca728e6fa5110918c6df82c068c457261"
                    ]
                },
                {
                    "command": [
                        "apply H6.",
                        "VernacExtend",
                        "b0314bbdc776869d305067ca471096a36fa958c1"
                    ]
                },
                {
                    "command": [
                        "unfold Rsqr; apply prod_neq_R0; assumption.",
                        "VernacExtend",
                        "da760fb26e521ae2572410a2263a7718de830e47"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; left; apply Rinv_0_lt_compat; apply Rsqr_pos_lt; assumption.",
                        "VernacExtend",
                        "cc76f02107dec014ac58afb9b73fe03b3faec77d"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite (Rmult_comm (Rsqr r)); repeat rewrite Rabs_mult; rewrite Rabs_Rabsolu; rewrite pow_1_abs.",
                        "VernacExtend",
                        "39a0a4ad27d7e57d18f80a4e2982bbcaaccfe4d2"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l.",
                        "VernacExtend",
                        "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc; apply Rmult_eq_compat_l.",
                        "VernacExtend",
                        "af2e69f7eb109fa6852e29bfad3154f6a0a6b92b"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "55666fd2776d160fb1bfd9d38a2833e66927f366"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_involutive.",
                        "VernacExtend",
                        "422941d9f5ab1f835c6b4368750431aa4fff0509"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Rinv.",
                        "VernacExtend",
                        "37f0a3ac5c309484aec5354295705ced53683ada"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_1_abs; rewrite Rinv_1; rewrite Rmult_1_l.",
                        "VernacExtend",
                        "3eb47bdb66591cd4956071166cd37d53b0f4f340"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "55666fd2776d160fb1bfd9d38a2833e66927f366"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rabs_Rinv.",
                        "VernacExtend",
                        "90bccb4c2edbe375bae6d85508d1d91269ac60a9"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_involutive.",
                        "VernacExtend",
                        "422941d9f5ab1f835c6b4368750431aa4fff0509"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Rabs_Rabsolu.",
                        "VernacExtend",
                        "2816d034ff9b3957b484be80afd7eb4c2cfb569c"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm (Rabs (r ^ (2 * S n)))).",
                        "VernacExtend",
                        "1143fb23a8e2f7f714907be30d6f2b200e5a391e"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc; apply Rmult_eq_compat_l.",
                        "VernacExtend",
                        "e137f0649bb524db6ee354f5fba7a87e0babf344"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Rinv.",
                        "VernacExtend",
                        "37f0a3ac5c309484aec5354295705ced53683ada"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Rabsolu.",
                        "VernacExtend",
                        "25c9ef6d16b3e1fd649502a685f930b2c828b10b"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rabs_right.",
                        "VernacExtend",
                        "5107c29a40d66107cd65c8b15750ff5d33d00b0a"
                    ]
                },
                {
                    "command": [
                        "replace (r ^ (2 * S n)) with (r ^ (2 * n) * r * r).",
                        "VernacExtend",
                        "b4197c8f63512f5508226defc2c0ad669c0d6bfb"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- Rmult_assoc.",
                        "VernacExtend",
                        "2e59ade73e7947b54c6371c82c80effd526c01cd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "unfold Rsqr; ring.",
                        "VernacExtend",
                        "f0fae863b573adbced1e1b89cdae052a91ab7494"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero; assumption.",
                        "VernacExtend",
                        "6d4db41cbe558f394b4e9accb20ef61b0da0c671"
                    ]
                },
                {
                    "command": [
                        "replace (2 * S n)%nat with (S (S (2 * n))).",
                        "VernacExtend",
                        "0e979a91e133bbb49e0c693ceaa8b83423f512bf"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply pow_le; left; apply (cond_pos r).",
                        "VernacExtend",
                        "57908e113a780de27b286db2a2ae0ec3b0fa1eb7"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply pow_le; left; apply (cond_pos r).",
                        "VernacExtend",
                        "57908e113a780de27b286db2a2ae0ec3b0fa1eb7"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0; apply pow_nonzero; assumption.",
                        "VernacExtend",
                        "ca487d54542aed3f8b75ac0f13dd5778c0443f1b"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_neq_0_compat; apply INR_fact_neq_0.",
                        "VernacExtend",
                        "1742a1970e2bd84f0fd2145213af0978df013d33"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0; apply Rinv_neq_0_compat; apply INR_fact_neq_0.",
                        "VernacExtend",
                        "a41b6f245d6faf6134374f0ab224f05525f37d1a"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0; apply pow_nonzero; assumption.",
                        "VernacExtend",
                        "ca487d54542aed3f8b75ac0f13dd5778c0443f1b"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero; discrR.",
                        "VernacExtend",
                        "174877181c67a09e2e68285a2475567f220a254e"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero; discrR.",
                        "VernacExtend",
                        "174877181c67a09e2e68285a2475567f220a254e"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_neq_0_compat; apply INR_fact_neq_0.",
                        "VernacExtend",
                        "1742a1970e2bd84f0fd2145213af0978df013d33"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; apply Rsqr_pos_lt; assumption ].",
                        "VernacExtend",
                        "f862072b1567d02eec5818d8de0fcf1686382edd"
                    ]
                },
                {
                    "command": [
                        "assert (H0 := cond_pos r); red; intro; rewrite H1 in H0; elim (Rlt_irrefl _ H0).",
                        "VernacExtend",
                        "21b527a7612e84f0f8759a69f0086d3152467e3f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivable_pt_lim_cos_0",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "unfold derivable_pt_lim; intros.",
                        "VernacExtend",
                        "a20ff8eb80507306544faac85c14ba31dc6809e2"
                    ]
                },
                {
                    "command": [
                        "assert (H0 := derivable_pt_lim_sin_0).",
                        "VernacExtend",
                        "4bef7b5e02bae1d738f77763b91a28315144f147"
                    ]
                },
                {
                    "command": [
                        "unfold derivable_pt_lim in H0.",
                        "VernacExtend",
                        "7dc0119f8f9cce8489446f7636282462f236cd26"
                    ]
                },
                {
                    "command": [
                        "cut (0 < eps / 2).",
                        "VernacExtend",
                        "d5d8cc056d52c3ef8078a56f20d37abe11587c19"
                    ]
                },
                {
                    "command": [
                        "intro; elim (H0 _ H1); intros del H2.",
                        "VernacExtend",
                        "acc8f59dada78675fb467bed76ad438073a08496"
                    ]
                },
                {
                    "command": [
                        "cut (continuity_pt sin 0).",
                        "VernacExtend",
                        "6aa51fdd13cb819fb18a8c6fde359685b5f3c839"
                    ]
                },
                {
                    "command": [
                        "intro; unfold continuity_pt in H3; unfold continue_in in H3; unfold limit1_in in H3; unfold limit_in in H3; simpl in H3; unfold R_dist in H3.",
                        "VernacExtend",
                        "d28f4a3304ff6e483ba0f05fbd23abc0dd1f6c06"
                    ]
                },
                {
                    "command": [
                        "cut (0 < eps / 2); [ intro | assumption ].",
                        "VernacExtend",
                        "5736c842683698429fe1ba5e4bd5a7ddd026fa7f"
                    ]
                },
                {
                    "command": [
                        "elim (H3 _ H4); intros del_c H5.",
                        "VernacExtend",
                        "baeee2893cec28865c18363384acc1f926f58d0a"
                    ]
                },
                {
                    "command": [
                        "cut (0 < Rmin del del_c).",
                        "VernacExtend",
                        "0eb972c0344533a93fcd9f2a26ed4fe672bf1122"
                    ]
                },
                {
                    "command": [
                        "intro; set (delta := mkposreal _ H6).",
                        "VernacExtend",
                        "3df8c3397f004ab7f73eac2077ebefe88ddddffb"
                    ]
                },
                {
                    "command": [
                        "exists delta; intros.",
                        "VernacExtend",
                        "ddc6b920cb7f974017d7fecfefd522621473bf76"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_l; replace (cos h - cos 0) with (-2 * Rsqr (sin (h / 2))).",
                        "VernacExtend",
                        "385b1daf2c51540702ccfa4267b3b94cf050bd31"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r.",
                        "VernacExtend",
                        "f7f0c1adf1075a0f11da86855dbf21724d946bc5"
                    ]
                },
                {
                    "command": [
                        "change (-2) with (-(2)).",
                        "VernacExtend",
                        "0f19b793bd44e8c8db03b5c134dec8a656766f1c"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; do 2 rewrite Ropp_mult_distr_l_reverse.",
                        "VernacExtend",
                        "d1cf65acb3d2e1fc3209306a8607a03bc168064b"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Ropp.",
                        "VernacExtend",
                        "4585414329a0ef757c809f4a4dee3b3a09307b5c"
                    ]
                },
                {
                    "command": [
                        "replace (2 * Rsqr (sin (h * / 2)) * / h) with (sin (h / 2) * (sin (h / 2) / (h / 2) - 1) + sin (h / 2)).",
                        "VernacExtend",
                        "32a53a786f3071443012f29197a05d5e4d0e24fb"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs (sin (h / 2) * (sin (h / 2) / (h / 2) - 1)) + Rabs (sin (h / 2))).",
                        "VernacExtend",
                        "1668e6f9ca2e554df88c3ead9fa714969b3e5a71"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_triang.",
                        "VernacExtend",
                        "ac95e0693bced827aa4991eb13639b86503a8150"
                    ]
                },
                {
                    "command": [
                        "rewrite (double_var eps); apply Rplus_lt_compat.",
                        "VernacExtend",
                        "dd3002897582f3251627e3b8fbd0c2a8c471071b"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs (sin (h / 2) / (h / 2) - 1)).",
                        "VernacExtend",
                        "2e6af6604977b1ebdea4b5ac64493bca6e6c7707"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult; rewrite Rmult_comm; pattern (Rabs (sin (h / 2) / (h / 2) - 1)) at 2; rewrite <- Rmult_1_r; apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "e5fe45df051cfede4a4d30d9e4f336cfcc20aade"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos.",
                        "VernacExtend",
                        "8e57e214403458a4dc8dafc960971b86cf3b856d"
                    ]
                },
                {
                    "command": [
                        "assert (H9 := SIN_bound (h / 2)).",
                        "VernacExtend",
                        "75ac288c9391656a8ca875396a647e956a7a5ab6"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs; case (Rcase_abs (sin (h / 2))); intro.",
                        "VernacExtend",
                        "ed8bc1fd7be0d8f3701a7a0e23c5c4fcecb038f7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Ropp_involutive 1).",
                        "VernacExtend",
                        "f26680b58559470c453432858c847f38cc8492f6"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar.",
                        "VernacExtend",
                        "ac8d32b190d111aa8834547674121bcf3bb8a0ed"
                    ]
                },
                {
                    "command": [
                        "elim H9; intros; assumption.",
                        "VernacExtend",
                        "8fe07a35a5ab7cf96f2efb2baff6e494f333a6ed"
                    ]
                },
                {
                    "command": [
                        "elim H9; intros; assumption.",
                        "VernacExtend",
                        "8fe07a35a5ab7cf96f2efb2baff6e494f333a6ed"
                    ]
                },
                {
                    "command": [
                        "cut (Rabs (h / 2) < del).",
                        "VernacExtend",
                        "d4abb083a882954a3805ba4e572f2585257a5c9a"
                    ]
                },
                {
                    "command": [
                        "intro; cut (h / 2 <> 0).",
                        "VernacExtend",
                        "ae34935c6284c8ee3cee186a2e05cf5b6e568d8a"
                    ]
                },
                {
                    "command": [
                        "intro; assert (H11 := H2 _ H10 H9).",
                        "VernacExtend",
                        "64902cbc1d4aef16c03f0b22f0db9300a688314d"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_l in H11; rewrite sin_0 in H11.",
                        "VernacExtend",
                        "1b25aff6761a96aaf8c478b21870fa4fe108e837"
                    ]
                },
                {
                    "command": [
                        "rewrite Rminus_0_r in H11; apply H11.",
                        "VernacExtend",
                        "42083fcb35ae4425ac8db85aeb07c320b3dc1126"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply prod_neq_R0.",
                        "VernacExtend",
                        "bae86043f3acfd4aeb1f77f1138e1172ace3c7fa"
                    ]
                },
                {
                    "command": [
                        "apply H7.",
                        "VernacExtend",
                        "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_neq_0_compat; discrR.",
                        "VernacExtend",
                        "c996ce35ba9924ff499f316d0fb3eaf573a9e988"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (del / 2).",
                        "VernacExtend",
                        "7e15ec55ccd3ddf8ba6a3b31c0e23b2d8af1d470"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite Rabs_mult.",
                        "VernacExtend",
                        "ffb5e4297bd1945ec8a2777fcbcdf2c5e3b93bce"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_right (/ 2)).",
                        "VernacExtend",
                        "6f612acfe40ba0ec35a615c503273e09edcfc335"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- (Rmult_comm (/ 2)); apply Rmult_lt_compat_l.",
                        "VernacExtend",
                        "19be392466bbf1d27c1fa9888df81c9c31029bbe"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "ee74bd033c1031a79ef440e1d41037d5c9648214"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (pos delta).",
                        "VernacExtend",
                        "03e5d42ed788c54384dcdf78c0c44c4b011dacd6"
                    ]
                },
                {
                    "command": [
                        "apply H8.",
                        "VernacExtend",
                        "2014720df0411c2963f20792fe424080d05f44aa"
                    ]
                },
                {
                    "command": [
                        "unfold delta; simpl; apply Rmin_l.",
                        "VernacExtend",
                        "ff0d709a1a366f058d8b857f5fbb7cbf9aaf6acd"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; left; apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "d4ca803af6360ae7af00a23fe13ae3b69dd59a74"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rplus_0_r (del / 2)); pattern del at 1; rewrite (double_var del); apply Rplus_lt_compat_l; unfold Rdiv; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "957c5db0744debeb09306d856a154ca5cdcc7fcf"
                    ]
                },
                {
                    "command": [
                        "apply (cond_pos del).",
                        "VernacExtend",
                        "ac01251087d8ed6a52f03fd522df5ae3ad740374"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "ee74bd033c1031a79ef440e1d41037d5c9648214"
                    ]
                },
                {
                    "command": [
                        "elim H5; intros; assert (H11 := H10 (h / 2)).",
                        "VernacExtend",
                        "7d0468f146bf192859675bae7fbf310a1cf0f451"
                    ]
                },
                {
                    "command": [
                        "rewrite sin_0 in H11; do 2 rewrite Rminus_0_r in H11.",
                        "VernacExtend",
                        "6df041b6cf3cc5b123866ff011607297d96a2e2d"
                    ]
                },
                {
                    "command": [
                        "apply H11.",
                        "VernacExtend",
                        "3630e3bef4a9ec09ac631c07522b6f9bbba70b98"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold D_x, no_cond; split.",
                        "VernacExtend",
                        "121e72bbd9a8ad97e9353edec680d410ccaf17ee"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply (not_eq_sym (A:=R)); unfold Rdiv; apply prod_neq_R0.",
                        "VernacExtend",
                        "01f14f6eccf908635a87d81f11e45f0f9cee58b3"
                    ]
                },
                {
                    "command": [
                        "apply H7.",
                        "VernacExtend",
                        "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_neq_0_compat; discrR.",
                        "VernacExtend",
                        "c996ce35ba9924ff499f316d0fb3eaf573a9e988"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (del_c / 2).",
                        "VernacExtend",
                        "6cf5d43ee1b81a5e234991fdc64ee28aa16d2f82"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite Rabs_mult.",
                        "VernacExtend",
                        "ffb5e4297bd1945ec8a2777fcbcdf2c5e3b93bce"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_right (/ 2)).",
                        "VernacExtend",
                        "6f612acfe40ba0ec35a615c503273e09edcfc335"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- (Rmult_comm (/ 2)).",
                        "VernacExtend",
                        "c850149838567a06c191372813508ddac2e94fec"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_l.",
                        "VernacExtend",
                        "e06ce02cd2654586097cfda8f116dd4fe6d6b2a8"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "ee74bd033c1031a79ef440e1d41037d5c9648214"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (pos delta).",
                        "VernacExtend",
                        "03e5d42ed788c54384dcdf78c0c44c4b011dacd6"
                    ]
                },
                {
                    "command": [
                        "apply H8.",
                        "VernacExtend",
                        "2014720df0411c2963f20792fe424080d05f44aa"
                    ]
                },
                {
                    "command": [
                        "unfold delta; simpl; apply Rmin_r.",
                        "VernacExtend",
                        "a192285c261963d1edf7fc296de4174b65a59f8e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; left; apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "d4ca803af6360ae7af00a23fe13ae3b69dd59a74"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rplus_0_r (del_c / 2)); pattern del_c at 2; rewrite (double_var del_c); apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "160ef6a38b06349ae10ebedc180454885238a7b9"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "7122edbd68559f255bfed03dc640472ed14eb4ef"
                    ]
                },
                {
                    "command": [
                        "apply H9.",
                        "VernacExtend",
                        "d0479838914cfca7017024564d1663cd6466cb01"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "ee74bd033c1031a79ef440e1d41037d5c9648214"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_minus_distr_l; rewrite Rmult_1_r; unfold Rminus; rewrite Rplus_assoc; rewrite Rplus_opp_l; rewrite Rplus_0_r; rewrite (Rmult_comm 2); unfold Rdiv, Rsqr.",
                        "VernacExtend",
                        "2f7c415d439af673638415cc4898458f33f8e29c"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc.",
                        "VernacExtend",
                        "9a62b3359051e53192153e7bfe542316dbd712a8"
                    ]
                },
                {
                    "command": [
                        "repeat apply Rmult_eq_compat_l.",
                        "VernacExtend",
                        "c7ab810debda981b95e89d049d103939ca373424"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "55666fd2776d160fb1bfd9d38a2833e66927f366"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_involutive.",
                        "VernacExtend",
                        "422941d9f5ab1f835c6b4368750431aa4fff0509"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_comm.",
                        "VernacExtend",
                        "f6a795952024dfb6a8db9b1b3050b14eb7f075aa"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "apply H7.",
                        "VernacExtend",
                        "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_neq_0_compat; discrR.",
                        "VernacExtend",
                        "c996ce35ba9924ff499f316d0fb3eaf573a9e988"
                    ]
                },
                {
                    "command": [
                        "pattern h at 2; replace h with (2 * (h / 2)).",
                        "VernacExtend",
                        "d5c855daec8ef532fc15a776b4de26624203a7bb"
                    ]
                },
                {
                    "command": [
                        "rewrite (cos_2a_sin (h / 2)).",
                        "VernacExtend",
                        "faf63fd8bce625bef0012e92232913fff3ae0702"
                    ]
                },
                {
                    "command": [
                        "rewrite cos_0; unfold Rsqr; ring.",
                        "VernacExtend",
                        "94bc2166716a6f6602110189c51845e1e5b219a3"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite <- Rmult_assoc; apply Rinv_r_simpl_m.",
                        "VernacExtend",
                        "e126f3d64c8457c26380151c41513db4b83224e0"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "unfold Rmin; case (Rle_dec del del_c); intro.",
                        "VernacExtend",
                        "4437034345443470fd5e48ddb4cccc640919e483"
                    ]
                },
                {
                    "command": [
                        "apply (cond_pos del).",
                        "VernacExtend",
                        "ac01251087d8ed6a52f03fd522df5ae3ad740374"
                    ]
                },
                {
                    "command": [
                        "elim H5; intros; assumption.",
                        "VernacExtend",
                        "e3759bfc7109dba24b94887055d32bb02045fe9b"
                    ]
                },
                {
                    "command": [
                        "apply continuity_sin.",
                        "VernacExtend",
                        "8fee4a0f58da74e4f8fc7a5bf5382f421ccdf07a"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; prove_sup0 ].",
                        "VernacExtend",
                        "4d905fce1c75d7adfc4f1cd2deb30dbdf49bf2f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivable_pt_lim_sin",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "intro; assert (H0 := derivable_pt_lim_sin_0).",
                        "VernacExtend",
                        "68b8e1cd1ed4841ff20bd864adaf24d9fc95b9f2"
                    ]
                },
                {
                    "command": [
                        "assert (H := derivable_pt_lim_cos_0).",
                        "VernacExtend",
                        "84b2ecd9daabc3d66b2e994e20fa04d705caf0b8"
                    ]
                },
                {
                    "command": [
                        "unfold derivable_pt_lim in H0, H.",
                        "VernacExtend",
                        "0eaa70a09a380a5eb8104fa63817bc4d3387501b"
                    ]
                },
                {
                    "command": [
                        "unfold derivable_pt_lim; intros.",
                        "VernacExtend",
                        "a20ff8eb80507306544faac85c14ba31dc6809e2"
                    ]
                },
                {
                    "command": [
                        "cut (0 < eps / 2); [ intro | unfold Rdiv; apply Rmult_lt_0_compat; [ apply H1 | apply Rinv_0_lt_compat; prove_sup0 ] ].",
                        "VernacExtend",
                        "06b1963760a889eca4648d42559102cf5243a6bf"
                    ]
                },
                {
                    "command": [
                        "elim (H0 _ H2); intros alp1 H3.",
                        "VernacExtend",
                        "4e4ecd9d1b3a3c6b715cd4c88441e12698bb9eee"
                    ]
                },
                {
                    "command": [
                        "elim (H _ H2); intros alp2 H4.",
                        "VernacExtend",
                        "c22e3dbfe60e803e8fc5b861747385799b406c00"
                    ]
                },
                {
                    "command": [
                        "set (alp := Rmin alp1 alp2).",
                        "VernacExtend",
                        "04c7edb6e01f1546c388bc5c9ac5eb282499543a"
                    ]
                },
                {
                    "command": [
                        "cut (0 < alp).",
                        "VernacExtend",
                        "69a7ad4f1518d1d0840e1f5c7d5decf673cef2a4"
                    ]
                },
                {
                    "command": [
                        "intro; exists (mkposreal _ H5); intros.",
                        "VernacExtend",
                        "d277e16c5b657dd9cbe806b4e12562e7340fa507"
                    ]
                },
                {
                    "command": [
                        "replace ((sin (x + h) - sin x) / h - cos x) with (sin x * ((cos h - 1) / h) + cos x * (sin h / h - 1)).",
                        "VernacExtend",
                        "3b79e3edfd3a66fb40a60902c3449fd5ea279393"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs (sin x * ((cos h - 1) / h)) + Rabs (cos x * (sin h / h - 1))).",
                        "VernacExtend",
                        "ffe348a13ece3ddec4812329ba10d029122bacf1"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_triang.",
                        "VernacExtend",
                        "ac95e0693bced827aa4991eb13639b86503a8150"
                    ]
                },
                {
                    "command": [
                        "rewrite (double_var eps); apply Rplus_lt_compat.",
                        "VernacExtend",
                        "dd3002897582f3251627e3b8fbd0c2a8c471071b"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs ((cos h - 1) / h)).",
                        "VernacExtend",
                        "b77f41f7c57d33c7f2ce6604b6e82d3de2a9c7da"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult; rewrite Rmult_comm; pattern (Rabs ((cos h - 1) / h)) at 2; rewrite <- Rmult_1_r; apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "22b28440ce4712a13d5b1f5b88bc9a88bcd86171"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos.",
                        "VernacExtend",
                        "8e57e214403458a4dc8dafc960971b86cf3b856d"
                    ]
                },
                {
                    "command": [
                        "assert (H8 := SIN_bound x); elim H8; intros.",
                        "VernacExtend",
                        "33bbcfe122c07c121947b50e7512f2930bde748a"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs; case (Rcase_abs (sin x)); intro.",
                        "VernacExtend",
                        "850fee69aa754307ffad056f8aa03ec5fced0c4d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Ropp_involutive 1).",
                        "VernacExtend",
                        "f26680b58559470c453432858c847f38cc8492f6"
                    ]
                },
                {
                    "command": [
                        "apply Ropp_le_contravar; assumption.",
                        "VernacExtend",
                        "e084b285b4972f6a0f03697e2fe9cf57f57f9e50"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (Rabs h < alp2).",
                        "VernacExtend",
                        "5ed3e48f00fedf607dd481789b43136a8b8e1947"
                    ]
                },
                {
                    "command": [
                        "intro; assert (H9 := H4 _ H6 H8).",
                        "VernacExtend",
                        "68b2ab696b13bd8ec4041b3892c7c92ce6f4bfee"
                    ]
                },
                {
                    "command": [
                        "rewrite cos_0 in H9; rewrite Rplus_0_l in H9; rewrite Rminus_0_r in H9; apply H9.",
                        "VernacExtend",
                        "1f5008641872c6fab2289c45d2be5a02707854df"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with alp.",
                        "VernacExtend",
                        "5c6b053e25325bd0ca7a59ad9cac5f57fc4f18a2"
                    ]
                },
                {
                    "command": [
                        "apply H7.",
                        "VernacExtend",
                        "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
                    ]
                },
                {
                    "command": [
                        "unfold alp; apply Rmin_r.",
                        "VernacExtend",
                        "01efd8b4bf10bed7ffc6b2363819fefebfe56254"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs (sin h / h - 1)).",
                        "VernacExtend",
                        "13e953f8d58ff8567f7326e90b2fe6e3c1a09cfa"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult; rewrite Rmult_comm; pattern (Rabs (sin h / h - 1)) at 2; rewrite <- Rmult_1_r; apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "9e22bbd44cc30b8591844f5f458847e083c9057d"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos.",
                        "VernacExtend",
                        "8e57e214403458a4dc8dafc960971b86cf3b856d"
                    ]
                },
                {
                    "command": [
                        "assert (H8 := COS_bound x); elim H8; intros.",
                        "VernacExtend",
                        "21656cf9504875032da1251f35b73474efe77d38"
                    ]
                },
                {
                    "command": [
                        "unfold Rabs; case (Rcase_abs (cos x)); intro.",
                        "VernacExtend",
                        "033773773e319f34c9d2af9eb8ed316fb8bf6d0f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Ropp_involutive 1); apply Ropp_le_contravar; assumption.",
                        "VernacExtend",
                        "763a2967596f9f765008d4b02c3e6d668949ed08"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (Rabs h < alp1).",
                        "VernacExtend",
                        "287c9bc592eb76c309c35c0ce4eb9563ba2f0bc0"
                    ]
                },
                {
                    "command": [
                        "intro; assert (H9 := H3 _ H6 H8).",
                        "VernacExtend",
                        "6d3ac488bde30d988b0a336c1dc43913117954c1"
                    ]
                },
                {
                    "command": [
                        "rewrite sin_0 in H9; rewrite Rplus_0_l in H9; rewrite Rminus_0_r in H9; apply H9.",
                        "VernacExtend",
                        "6f51ef4c4f0ea3fc08ecf56f0a6dde4c7339e8be"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with alp.",
                        "VernacExtend",
                        "5c6b053e25325bd0ca7a59ad9cac5f57fc4f18a2"
                    ]
                },
                {
                    "command": [
                        "apply H7.",
                        "VernacExtend",
                        "2b15ecb9bfc4fe9c511bb37e66420a222789f1a6"
                    ]
                },
                {
                    "command": [
                        "unfold alp; apply Rmin_l.",
                        "VernacExtend",
                        "665b0a37944c1d430cad7788be41b284360838cb"
                    ]
                },
                {
                    "command": [
                        "rewrite sin_plus.",
                        "VernacExtend",
                        "6ebac3ac66a1fae668e241ba6e8ce392c23ff9dc"
                    ]
                },
                {
                    "command": [
                        "now field.",
                        "VernacExtend",
                        "f3de8dbe903009a3417a80d825415eef0ce85558"
                    ]
                },
                {
                    "command": [
                        "unfold alp; unfold Rmin; case (Rle_dec alp1 alp2); intro.",
                        "VernacExtend",
                        "e484e1c35ea55df3bcb8ce41c3bc916d26d3e6c6"
                    ]
                },
                {
                    "command": [
                        "apply (cond_pos alp1).",
                        "VernacExtend",
                        "c49c4acdce302a6d0e213893e620aa67fdec0adf"
                    ]
                },
                {
                    "command": [
                        "apply (cond_pos alp2).",
                        "VernacExtend",
                        "bfaaaf5f9f09ffd6e57856b505324400032b3e54"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivable_pt_lim_cos",
            "line_nb": 310,
            "steps": [
                {
                    "command": [
                        "intro; cut (forall h:R, sin (h + PI / 2) = cos h).",
                        "VernacExtend",
                        "5c92cd6384cde944f8cc418cd2224f44f3f4f7d6"
                    ]
                },
                {
                    "command": [
                        "intro; replace (- sin x) with (cos (x + PI / 2) * (1 + 0)).",
                        "VernacExtend",
                        "3b5daed47eafddcb2f2b4efe5519ebfb1b2876c8"
                    ]
                },
                {
                    "command": [
                        "generalize (derivable_pt_lim_comp (id + fct_cte (PI / 2))%F sin); intros.",
                        "VernacExtend",
                        "0f884bb890731bdee5373c98be3f162f8d2d764c"
                    ]
                },
                {
                    "command": [
                        "cut (derivable_pt_lim (id + fct_cte (PI / 2)) x (1 + 0)).",
                        "VernacExtend",
                        "a25c89162b9e8ae778acd41aea9b937590789589"
                    ]
                },
                {
                    "command": [
                        "cut (derivable_pt_lim sin ((id + fct_cte (PI / 2))%F x) (cos (x + PI / 2))).",
                        "VernacExtend",
                        "d75defee92c734d84f531b7eb57a23040c55d698"
                    ]
                },
                {
                    "command": [
                        "intros; generalize (H0 _ _ _ H2 H1); replace (comp sin (id + fct_cte (PI / 2))%F) with (fun x:R => sin (x + PI / 2)); [ idtac | reflexivity ].",
                        "VernacExtend",
                        "c7f812c65d8aa7976e8e43b46af8088436fbfa16"
                    ]
                },
                {
                    "command": [
                        "unfold derivable_pt_lim; intros.",
                        "VernacExtend",
                        "a20ff8eb80507306544faac85c14ba31dc6809e2"
                    ]
                },
                {
                    "command": [
                        "elim (H3 eps H4); intros.",
                        "VernacExtend",
                        "051c0526b14329b723a645bcf1a0e697be3c3b69"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite <- (H (x + h)); rewrite <- (H x); apply H5; assumption.",
                        "VernacExtend",
                        "37876698c85d59672ad83719338bdb911e9be03a"
                    ]
                },
                {
                    "command": [
                        "apply derivable_pt_lim_sin.",
                        "VernacExtend",
                        "3f9b077bf34c88c8326701a62a4415789e05cf56"
                    ]
                },
                {
                    "command": [
                        "apply derivable_pt_lim_plus.",
                        "VernacExtend",
                        "0ff92de56586834c2b5893a998ecf9b0d0c93d06"
                    ]
                },
                {
                    "command": [
                        "apply derivable_pt_lim_id.",
                        "VernacExtend",
                        "eefa66208b1c7b1195a98db883611b02fd29636c"
                    ]
                },
                {
                    "command": [
                        "apply derivable_pt_lim_const.",
                        "VernacExtend",
                        "960938bb384eb6666a08df49ec2457c0f743a285"
                    ]
                },
                {
                    "command": [
                        "rewrite sin_cos; rewrite <- (Rplus_comm x); ring.",
                        "VernacExtend",
                        "7a01aafdb831cfa6c779c9ef315bb5c9d1a415cb"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite cos_sin; rewrite Rplus_comm; reflexivity.",
                        "VernacExtend",
                        "b8852ac7ae18f4b676d7ad80cd0f052c762de2d0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivable_pt_sin",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "unfold derivable_pt; intro.",
                        "VernacExtend",
                        "8b6a9c15f0b1c8462f93b4cfc8a8d4b253743770"
                    ]
                },
                {
                    "command": [
                        "exists (cos x).",
                        "VernacExtend",
                        "113d4b81d8e8cfdbb9473fee8469a2f5eec2c35d"
                    ]
                },
                {
                    "command": [
                        "apply derivable_pt_lim_sin.",
                        "VernacExtend",
                        "3f9b077bf34c88c8326701a62a4415789e05cf56"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivable_pt_cos",
            "line_nb": 333,
            "steps": [
                {
                    "command": [
                        "unfold derivable_pt; intro.",
                        "VernacExtend",
                        "8b6a9c15f0b1c8462f93b4cfc8a8d4b253743770"
                    ]
                },
                {
                    "command": [
                        "exists (- sin x).",
                        "VernacExtend",
                        "fc2b6376e7745e72ee8de4fc766adf7ebac53654"
                    ]
                },
                {
                    "command": [
                        "apply derivable_pt_lim_cos.",
                        "VernacExtend",
                        "26f46e03f115a0b5b5f4a74bb597f9f001affd8e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivable_sin",
            "line_nb": 338,
            "steps": [
                {
                    "command": [
                        "unfold derivable; intro; apply derivable_pt_sin.",
                        "VernacExtend",
                        "eda3abb52f0459385a2e5e3dc9f0925abdf0c92d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derivable_cos",
            "line_nb": 341,
            "steps": [
                {
                    "command": [
                        "unfold derivable; intro; apply derivable_pt_cos.",
                        "VernacExtend",
                        "627a5b7d01461e16830025dbdbd5390cf525d11f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derive_pt_sin",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "intros; apply derive_pt_eq_0.",
                        "VernacExtend",
                        "91c679ec7d99977724de101d3ecc0b067a010cf2"
                    ]
                },
                {
                    "command": [
                        "apply derivable_pt_lim_sin.",
                        "VernacExtend",
                        "3f9b077bf34c88c8326701a62a4415789e05cf56"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "derive_pt_cos",
            "line_nb": 348,
            "steps": [
                {
                    "command": [
                        "intros; apply derive_pt_eq_0.",
                        "VernacExtend",
                        "91c679ec7d99977724de101d3ecc0b067a010cf2"
                    ]
                },
                {
                    "command": [
                        "apply derivable_pt_lim_cos.",
                        "VernacExtend",
                        "26f46e03f115a0b5b5f4a74bb597f9f001affd8e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}