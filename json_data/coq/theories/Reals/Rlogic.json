{
    "filename": "theories/Reals/Rlogic.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import RIneq.",
            "VernacRequire",
            "3d28dbb9914b341ca95fdd60e4999d0ee31c0ea7"
        ],
        [
            "Section Arithmetical_dec.",
            "VernacBeginSection",
            "d3f1692bc67c8c655ece4fe063d8d80b214e02f8"
        ],
        [
            "Variable P : nat -> Prop.",
            "VernacAssumption",
            "c0bcdb477b6575fff01dd2a331b869e2340f5f2f"
        ],
        [
            "Hypothesis HP : forall n, {P n} + {~P n}.",
            "VernacAssumption",
            "f163c0a62c30e57cfded7e646a5bed56213afb0c"
        ],
        [
            "Lemma sig_forall_dec : {n | ~P n} + {forall n, P n}.",
            "VernacStartTheoremProof",
            "e934a1f58af4536af1012e6a9d6c8e6f2e6d1c03"
        ],
        [
            "assert (Hi: (forall n, 0 < INR n + 1)%R).",
            "VernacExtend",
            "32c64c7d15ad4966efa404b4cba6a044e13efc91"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "apply Rle_lt_0_plus_1, pos_INR.",
            "VernacExtend",
            "b4fe38534dbc40d1d6e9d5b95789e14d297c6ce9"
        ],
        [
            "set (u n := (if HP n then 0 else / (INR n + 1))%R).",
            "VernacExtend",
            "c9f816d53e9979b483bb25071096754bd08f1c55"
        ],
        [
            "assert (Bu: forall n, (u n <= 1)%R).",
            "VernacExtend",
            "d0c6f0e4bc65452102b1730652b61d4fbbd4f712"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "unfold u.",
            "VernacExtend",
            "4d1f0bb0983139cee7cbb02f769cf419eb439270"
        ],
        [
            "case HP ; intros _.",
            "VernacExtend",
            "232aecebdd32164b87630ec4f77e54e29ac2eacb"
        ],
        [
            "apply Rle_0_1.",
            "VernacExtend",
            "996937b485ab0b0ab64abfd08ec0786445ae12e3"
        ],
        [
            "rewrite <- S_INR, <- Rinv_1.",
            "VernacExtend",
            "2684f6ebf26a0a851d2d69dd83910add886fdb5a"
        ],
        [
            "apply Rinv_le_contravar with (1 := Rlt_0_1).",
            "VernacExtend",
            "28a9f7acfaf2090e26b954ea3f42c652fb82531a"
        ],
        [
            "apply (le_INR 1), le_n_S, le_0_n.",
            "VernacExtend",
            "f9293b0a4245a7eeb768bf1ca8b02d96e6a20c31"
        ],
        [
            "set (E y := exists n, y = u n).",
            "VernacExtend",
            "c6cf55ae78a2f6d7b90922b8fef9b7571c10f1b3"
        ],
        [
            "destruct (completeness E) as [l [ub lub]].",
            "VernacExtend",
            "a4a865b3f1a9cd12d41a8fa285cc954606da57ba"
        ],
        [
            "exists R1.",
            "VernacExtend",
            "a04fa090ca264af36c30176322a0bedde1a4dd69"
        ],
        [
            "intros y [n ->].",
            "VernacExtend",
            "30385c079ee4667456a278f03fe5fc043bb5fc67"
        ],
        [
            "apply Bu.",
            "VernacExtend",
            "490fff374ea57006dfe5046565486b79ce8bcb57"
        ],
        [
            "exists (u O).",
            "VernacExtend",
            "a1fe89a4028eb4495edf254dd4bacc3ff887f465"
        ],
        [
            "now exists O.",
            "VernacExtend",
            "db5c47bc738d583321df89818ad275fd8e358a68"
        ],
        [
            "assert (Hnp: forall n, not (P n) -> ((/ (INR n + 1) <= l)%R)).",
            "VernacExtend",
            "f1a1ed240d2d04e0830889c11379e5b9ba4c9b11"
        ],
        [
            "intros n Hp.",
            "VernacExtend",
            "1dbbfa65edbb2c65bf84bfb80210f871a290ddb8"
        ],
        [
            "apply ub.",
            "VernacExtend",
            "0aaba5b3ce3b959fa8fd601234deea2b97b96fe6"
        ],
        [
            "exists n.",
            "VernacExtend",
            "a97204a252e0d9b7444ffed9b38570a756391511"
        ],
        [
            "unfold u.",
            "VernacExtend",
            "4d1f0bb0983139cee7cbb02f769cf419eb439270"
        ],
        [
            "now destruct (HP n).",
            "VernacExtend",
            "71d026f1b6a33d63eee296648e0a902663ca54c4"
        ],
        [
            "destruct (Rle_lt_dec l 0) as [Hl|Hl].",
            "VernacExtend",
            "a3183049a88fc13fb0911436e3cc2cfcd115ae3b"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intros n.",
            "VernacExtend",
            "9410cc86153539309ee696ae5785ea70534ece11"
        ],
        [
            "destruct (HP n) as [H|H].",
            "VernacExtend",
            "8b65adc5be13e4cc12398f3895a545e5a74088c7"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "apply Rle_not_lt with (1 := Hl).",
            "VernacExtend",
            "a36928a66a3280a81fce9840559157bec866f38a"
        ],
        [
            "apply Rlt_le_trans with (/ (INR n + 1))%R.",
            "VernacExtend",
            "92a29f6ac0c85faf612a960404984025cdb88470"
        ],
        [
            "now apply Rinv_0_lt_compat.",
            "VernacExtend",
            "58509a7b472652bb7aef39a9b6811672d04772c5"
        ],
        [
            "now apply Hnp.",
            "VernacExtend",
            "c0cac7ae895286ed1b2eee31c16d979bd41473be"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "set (N := Z.abs_nat (up (/l) - 2)).",
            "VernacExtend",
            "fc78226682dd728ac17e5c2f3867e9a474790857"
        ],
        [
            "assert (H1l: (1 <= /l)%R).",
            "VernacExtend",
            "9dc583ed83c50da6e65226d8a03abf439eb60cfc"
        ],
        [
            "rewrite <- Rinv_1.",
            "VernacExtend",
            "25f4271863b63e7960d69c1c8df426f168da59be"
        ],
        [
            "apply Rinv_le_contravar with (1 := Hl).",
            "VernacExtend",
            "2c356d5e3258f7622392ee7e16dbb5def7ac73d6"
        ],
        [
            "apply lub.",
            "VernacExtend",
            "bb3836d35738c90e04ae26708ff1e21fadb7f463"
        ],
        [
            "now intros y [m ->].",
            "VernacExtend",
            "af0e3bc882bfbcfbdcd256866d13f02c00982f31"
        ],
        [
            "assert (HN: (INR N + 1 = IZR (up (/ l)) - 1)%R).",
            "VernacExtend",
            "eae2e2ae0a2976096fbbba94918244dc1b75c2a4"
        ],
        [
            "unfold N.",
            "VernacExtend",
            "e84969bf3a012f2b02bd8ab89f79f6e0b53e6b71"
        ],
        [
            "rewrite INR_IZR_INZ.",
            "VernacExtend",
            "8058c7a6913f85d26af3a54acc61c387d0a04933"
        ],
        [
            "rewrite inj_Zabs_nat.",
            "VernacExtend",
            "5b77e77f19e43475666c2b5b886817c5b3ee1ad7"
        ],
        [
            "replace (IZR (up (/ l)) - 1)%R with (IZR (up (/ l) - 2) + 1)%R.",
            "VernacExtend",
            "afe9a14d67f41cc7507765671ad063347ac5a535"
        ],
        [
            "apply (f_equal (fun v => IZR v + 1)%R).",
            "VernacExtend",
            "cacfb50576af70c915696b3bbef5137bdfae16da"
        ],
        [
            "apply Z.abs_eq.",
            "VernacExtend",
            "bed18c250258bd40a6b794cb44ab1ecdc57f8351"
        ],
        [
            "apply Zle_minus_le_0.",
            "VernacExtend",
            "17de0fc9b8b61e8a1285ec4f7cd279f58ff9d877"
        ],
        [
            "apply (Zlt_le_succ 1).",
            "VernacExtend",
            "68eb7e7d3a3af8168683154cf7a790fcbcd062d3"
        ],
        [
            "apply lt_IZR.",
            "VernacExtend",
            "165b941162ea1938aa71e78f57835b8df85de779"
        ],
        [
            "apply Rle_lt_trans with (1 := H1l).",
            "VernacExtend",
            "437bc18dd802c138658821b18447600c8e342095"
        ],
        [
            "apply archimed.",
            "VernacExtend",
            "168f59ccb8dfdb15cb785ccbb9ff2ca9a9ba15b8"
        ],
        [
            "rewrite minus_IZR.",
            "VernacExtend",
            "bf2e9167c2e10c7574eae6aa52f1250be91192aa"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "assert (Hl': (/ (INR (S N) + 1) < l)%R).",
            "VernacExtend",
            "85d350531cdc1907cc8d99e0147c127a52aac92b"
        ],
        [
            "rewrite <- (Rinv_involutive l) by now apply Rgt_not_eq.",
            "VernacExtend",
            "f0de72f37a712631b9ef3a504b354412d4141f9b"
        ],
        [
            "apply Rinv_1_lt_contravar with (1 := H1l).",
            "VernacExtend",
            "e1e25501df3c2f975fdcee6baea2ad96af9ab0ac"
        ],
        [
            "rewrite S_INR.",
            "VernacExtend",
            "0d96cef52c4a6a2bc84903c3c1dc2dda339dbfe3"
        ],
        [
            "rewrite HN.",
            "VernacExtend",
            "ee539cbb621d104bd5a824ae8614d0ea5e45f11a"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "apply archimed.",
            "VernacExtend",
            "168f59ccb8dfdb15cb785ccbb9ff2ca9a9ba15b8"
        ],
        [
            "exists N.",
            "VernacExtend",
            "3a77aef7937b4644ae655ca246f76b7aa0d197df"
        ],
        [
            "intros H.",
            "VernacExtend",
            "5cfae87a34fa7b59a257c9640f1b674f6e6d780b"
        ],
        [
            "apply Rle_not_lt with (2 := Hl').",
            "VernacExtend",
            "1bbde62cd2420832248c4caacb8c2f5962a216a6"
        ],
        [
            "apply lub.",
            "VernacExtend",
            "bb3836d35738c90e04ae26708ff1e21fadb7f463"
        ],
        [
            "intros y [n ->].",
            "VernacExtend",
            "30385c079ee4667456a278f03fe5fc043bb5fc67"
        ],
        [
            "unfold u.",
            "VernacExtend",
            "4d1f0bb0983139cee7cbb02f769cf419eb439270"
        ],
        [
            "destruct (HP n) as [_|Hp].",
            "VernacExtend",
            "4d61fad3381b5bd2c936aa0865f9b227bc92c29c"
        ],
        [
            "apply Rlt_le.",
            "VernacExtend",
            "cdc4280500779f23bae235b94c24a4b2ea2921fe"
        ],
        [
            "now apply Rinv_0_lt_compat.",
            "VernacExtend",
            "58509a7b472652bb7aef39a9b6811672d04772c5"
        ],
        [
            "apply Rinv_le_contravar.",
            "VernacExtend",
            "28ea2dd655f9d8c890013606f785cc34c54c4a71"
        ],
        [
            "apply Hi.",
            "VernacExtend",
            "b7959f73b24cea8febda147e5d8d404627f1652f"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "apply le_INR.",
            "VernacExtend",
            "482ba85c33b4f446aa5e9ca8bca5b198f5d8a8c5"
        ],
        [
            "destruct (le_or_lt n N) as [Hn|Hn].",
            "VernacExtend",
            "666f32f309e3445cec4208b009359e2a75925275"
        ],
        [
            "2: now apply lt_le_S.",
            "VernacExtend",
            "d8d84305c6dec357278d8d29c5732d4de8a57d55"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "destruct (le_lt_or_eq _ _ Hn) as [Hn'| ->].",
            "VernacExtend",
            "a2276a3d2173db12b1b174e2c215b9f689fc6f5b"
        ],
        [
            "2: now apply Hp.",
            "VernacExtend",
            "b1e8f78dd9ceb5c6910876831474e9cc1910f7e9"
        ],
        [
            "apply Rlt_not_le with (2 := Hnp _ Hp).",
            "VernacExtend",
            "0650c3c7dae84e289db5e30da05b74e85d7a4ac1"
        ],
        [
            "rewrite <- (Rinv_involutive l) by now apply Rgt_not_eq.",
            "VernacExtend",
            "f0de72f37a712631b9ef3a504b354412d4141f9b"
        ],
        [
            "apply Rinv_1_lt_contravar.",
            "VernacExtend",
            "1b1b2a85feb422cd8c3dc8f95693109857cefaa3"
        ],
        [
            "rewrite <- S_INR.",
            "VernacExtend",
            "53f7c415e88fc85f922716a557382cfb3dfd8f58"
        ],
        [
            "apply (le_INR 1), le_n_S, le_0_n.",
            "VernacExtend",
            "f9293b0a4245a7eeb768bf1ca8b02d96e6a20c31"
        ],
        [
            "apply Rlt_le_trans with (INR N + 1)%R.",
            "VernacExtend",
            "4188926f0a31ffb6beb325263609ecb8ba75f2ea"
        ],
        [
            "apply Rplus_lt_compat_r.",
            "VernacExtend",
            "8ca3e9c0f7e7327fd8e0145cec0673e72652d996"
        ],
        [
            "now apply lt_INR.",
            "VernacExtend",
            "80443daece0e8d4a5a163db066172a3f2fac201a"
        ],
        [
            "rewrite HN.",
            "VernacExtend",
            "ee539cbb621d104bd5a824ae8614d0ea5e45f11a"
        ],
        [
            "apply Rplus_le_reg_r with (-/l + 1)%R.",
            "VernacExtend",
            "48d55b459cf6e9a3c74a77bf03a1eab10b39c35b"
        ],
        [
            "ring_simplify.",
            "VernacExtend",
            "31578f61427562191ce5389abf97dbf9985ea04c"
        ],
        [
            "apply archimed.",
            "VernacExtend",
            "168f59ccb8dfdb15cb785ccbb9ff2ca9a9ba15b8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Arithmetical_dec.",
            "VernacEndSegment",
            "f41718f5507564b91f5de2cf22725cd0d52cfe38"
        ],
        [
            "Theorem not_not_archimedean : forall r : R, ~ (forall n : nat, (INR n <= r)%R).",
            "VernacStartTheoremProof",
            "d9798c4bc8384a56823587d71f8f2b74dc622ea8"
        ],
        [
            "intros r H.",
            "VernacExtend",
            "d7ad88fe18659a9c0fbe8f12609d04bca3d72a11"
        ],
        [
            "set (E := fun r => exists n : nat, r = INR n).",
            "VernacExtend",
            "799498fb3f75fbf30f93e3c09ad72ec11848c2ff"
        ],
        [
            "assert (exists x : R, E x) by (exists 0%R; simpl; red; exists 0%nat; reflexivity).",
            "VernacExtend",
            "785a1743c70969706ef4c37dbd07968006c8a968"
        ],
        [
            "assert (bound E) by (exists r; intros x (m,H2); rewrite H2; apply H).",
            "VernacExtend",
            "03f605ae2eefe40be071670f878c0777085a9cbb"
        ],
        [
            "destruct (completeness E) as (M,(H3,H4)); try assumption.",
            "VernacExtend",
            "0257b10f2dc4c2ca2ee5378ede56e004b42f4ef5"
        ],
        [
            "set (M' := (M + -1)%R).",
            "VernacExtend",
            "00c8e955cf90e8ef52dfcba6566b47e50b1bdea4"
        ],
        [
            "assert (H2 : ~ is_upper_bound E M').",
            "VernacExtend",
            "34a7d6564ab0b2c349d1f02addec5334325fd918"
        ],
        [
            "intro H5.",
            "VernacExtend",
            "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
        ],
        [
            "assert (M <= M')%R by (apply H4; exact H5).",
            "VernacExtend",
            "ccdffd4caa2053b2715f955c5a1746e9338eefe8"
        ],
        [
            "apply (Rlt_not_le M M').",
            "VernacExtend",
            "ad75765cb9a0462a8285747a15b426410f348b80"
        ],
        [
            "unfold M'.",
            "VernacExtend",
            "8fd870b18003bfed36c123570356506e01e1da0d"
        ],
        [
            "pattern M at 2.",
            "VernacExtend",
            "e79125754a7f5c514b4b18463555f1b760eefda7"
        ],
        [
            "rewrite <- Rplus_0_l.",
            "VernacExtend",
            "178050872acd6c83af8ad64ed99e0355635d5881"
        ],
        [
            "pattern (0 + M)%R.",
            "VernacExtend",
            "4fccf4f3060307069101cf8715d7c9a0d07485f1"
        ],
        [
            "rewrite Rplus_comm.",
            "VernacExtend",
            "1ea33e6774c5768bd211bdf8c447feee9b9e21de"
        ],
        [
            "rewrite <- (Rplus_opp_r 1).",
            "VernacExtend",
            "f0b363d9a1f38337b74a0528b50fda8e4b11e99d"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "rewrite Rplus_comm.",
            "VernacExtend",
            "1ea33e6774c5768bd211bdf8c447feee9b9e21de"
        ],
        [
            "apply Rlt_plus_1.",
            "VernacExtend",
            "42dc3a885a37d39ec81faf2a10a3ebe5c3a05688"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "intros N (n,H7).",
            "VernacExtend",
            "c242c02059160745e22cf2e84d1863397fed66f0"
        ],
        [
            "rewrite H7.",
            "VernacExtend",
            "2b0de906e9dfacfe89c031c2266760d29b5450f6"
        ],
        [
            "unfold M'.",
            "VernacExtend",
            "8fd870b18003bfed36c123570356506e01e1da0d"
        ],
        [
            "assert (H5 : (INR (S n) <= M)%R) by (apply H3; exists (S n); reflexivity).",
            "VernacExtend",
            "9b85991e78f6ef12ceea78da2112aa88fc5dc32d"
        ],
        [
            "rewrite S_INR in H5.",
            "VernacExtend",
            "79e3cb85314df1d9856a7a56627bbc39eb76d031"
        ],
        [
            "assert (H6 : (INR n + 1 + -1 <= M + -1)%R).",
            "VernacExtend",
            "7a189bb186d6868d4349c9ef371d7634c55ae6db"
        ],
        [
            "apply Rplus_le_compat_r.",
            "VernacExtend",
            "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite Rplus_assoc in H6.",
            "VernacExtend",
            "ba67fd52d596722ce0ec4024533c7b1d4a7682ee"
        ],
        [
            "rewrite Rplus_opp_r in H6.",
            "VernacExtend",
            "ebba57e0b3be8660e5c6c6cf7d61c672440cf469"
        ],
        [
            "rewrite (Rplus_comm (INR n) 0) in H6.",
            "VernacExtend",
            "6284c659e46d529e08990f609f3f5c075b88dde4"
        ],
        [
            "rewrite Rplus_0_l in H6.",
            "VernacExtend",
            "7465ff17ccebc33a4f889f36fd47dd31590e7a12"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sig_not_dec : forall P : Prop, {not (not P)} + {not P}.",
            "VernacStartTheoremProof",
            "d33921061c9432e827a1dda80560e6ead4da8a40"
        ],
        [
            "intros P.",
            "VernacExtend",
            "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
        ],
        [
            "set (E := fun x => x = R0 \\/ (x = R1 /\\ P)).",
            "VernacExtend",
            "f70dea51c77c6c5fc4e97cb49bcf451058bddfd6"
        ],
        [
            "destruct (completeness E) as [x H].",
            "VernacExtend",
            "a5f9c3ba9435bdebd5a359b0ef95b0ee5c5fdd2a"
        ],
        [
            "exists R1.",
            "VernacExtend",
            "a04fa090ca264af36c30176322a0bedde1a4dd69"
        ],
        [
            "intros x [->|[-> _]].",
            "VernacExtend",
            "e6cfa6b4065b74bb8ff8ddc6015c53a0bb90fa7e"
        ],
        [
            "apply Rle_0_1.",
            "VernacExtend",
            "996937b485ab0b0ab64abfd08ec0786445ae12e3"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "exists R0.",
            "VernacExtend",
            "3e799aaee006415ecbdc3378b4a0e928d339f82d"
        ],
        [
            "now left.",
            "VernacExtend",
            "2bd81021638064dbaa3d520cec398253376a1f37"
        ],
        [
            "destruct (Rle_lt_dec 1 x) as [H'|H'].",
            "VernacExtend",
            "6abe0bbbe08acaf6a65df2a0a1b0a6bfa114c6b2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "left.",
            "VernacExtend",
            "06dad9fc5698018f3f1213205145fec906c612b1"
        ],
        [
            "intros HP.",
            "VernacExtend",
            "0ec01adecbfe701ee27244a41ef8fa3cd51b55e4"
        ],
        [
            "elim Rle_not_lt with (1 := H').",
            "VernacExtend",
            "20fd7b1b55773939ad9556003e3d0a41a2adf697"
        ],
        [
            "apply Rle_lt_trans with (2 := Rlt_0_1).",
            "VernacExtend",
            "336b22c6db203550fdfa852c5d8a0197a7f1adb0"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "intros y [->|[_ Hy]].",
            "VernacExtend",
            "2014c91f70b20121bad344097e9f0060287e8077"
        ],
        [
            "apply Rle_refl.",
            "VernacExtend",
            "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
        ],
        [
            "now elim HP.",
            "VernacExtend",
            "ad00d145b269193361789c5c7966bab9f691fc3d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "intros HP.",
            "VernacExtend",
            "0ec01adecbfe701ee27244a41ef8fa3cd51b55e4"
        ],
        [
            "apply Rlt_not_le with (1 := H').",
            "VernacExtend",
            "06355cf415b09960ec301431cc674b63729f885c"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "now split.",
            "VernacExtend",
            "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "not_not_archimedean",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intros r H.",
                        "VernacExtend",
                        "d7ad88fe18659a9c0fbe8f12609d04bca3d72a11"
                    ]
                },
                {
                    "command": [
                        "set (E := fun r => exists n : nat, r = INR n).",
                        "VernacExtend",
                        "799498fb3f75fbf30f93e3c09ad72ec11848c2ff"
                    ]
                },
                {
                    "command": [
                        "assert (exists x : R, E x) by (exists 0%R; simpl; red; exists 0%nat; reflexivity).",
                        "VernacExtend",
                        "785a1743c70969706ef4c37dbd07968006c8a968"
                    ]
                },
                {
                    "command": [
                        "assert (bound E) by (exists r; intros x (m,H2); rewrite H2; apply H).",
                        "VernacExtend",
                        "03f605ae2eefe40be071670f878c0777085a9cbb"
                    ]
                },
                {
                    "command": [
                        "destruct (completeness E) as (M,(H3,H4)); try assumption.",
                        "VernacExtend",
                        "0257b10f2dc4c2ca2ee5378ede56e004b42f4ef5"
                    ]
                },
                {
                    "command": [
                        "set (M' := (M + -1)%R).",
                        "VernacExtend",
                        "00c8e955cf90e8ef52dfcba6566b47e50b1bdea4"
                    ]
                },
                {
                    "command": [
                        "assert (H2 : ~ is_upper_bound E M').",
                        "VernacExtend",
                        "34a7d6564ab0b2c349d1f02addec5334325fd918"
                    ]
                },
                {
                    "command": [
                        "intro H5.",
                        "VernacExtend",
                        "df8458cb0188ba8e62e60b153cb1dc140bf39afb"
                    ]
                },
                {
                    "command": [
                        "assert (M <= M')%R by (apply H4; exact H5).",
                        "VernacExtend",
                        "ccdffd4caa2053b2715f955c5a1746e9338eefe8"
                    ]
                },
                {
                    "command": [
                        "apply (Rlt_not_le M M').",
                        "VernacExtend",
                        "ad75765cb9a0462a8285747a15b426410f348b80"
                    ]
                },
                {
                    "command": [
                        "unfold M'.",
                        "VernacExtend",
                        "8fd870b18003bfed36c123570356506e01e1da0d"
                    ]
                },
                {
                    "command": [
                        "pattern M at 2.",
                        "VernacExtend",
                        "e79125754a7f5c514b4b18463555f1b760eefda7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rplus_0_l.",
                        "VernacExtend",
                        "178050872acd6c83af8ad64ed99e0355635d5881"
                    ]
                },
                {
                    "command": [
                        "pattern (0 + M)%R.",
                        "VernacExtend",
                        "4fccf4f3060307069101cf8715d7c9a0d07485f1"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm.",
                        "VernacExtend",
                        "1ea33e6774c5768bd211bdf8c447feee9b9e21de"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rplus_opp_r 1).",
                        "VernacExtend",
                        "f0b363d9a1f38337b74a0528b50fda8e4b11e99d"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm.",
                        "VernacExtend",
                        "1ea33e6774c5768bd211bdf8c447feee9b9e21de"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_plus_1.",
                        "VernacExtend",
                        "42dc3a885a37d39ec81faf2a10a3ebe5c3a05688"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "intros N (n,H7).",
                        "VernacExtend",
                        "c242c02059160745e22cf2e84d1863397fed66f0"
                    ]
                },
                {
                    "command": [
                        "rewrite H7.",
                        "VernacExtend",
                        "2b0de906e9dfacfe89c031c2266760d29b5450f6"
                    ]
                },
                {
                    "command": [
                        "unfold M'.",
                        "VernacExtend",
                        "8fd870b18003bfed36c123570356506e01e1da0d"
                    ]
                },
                {
                    "command": [
                        "assert (H5 : (INR (S n) <= M)%R) by (apply H3; exists (S n); reflexivity).",
                        "VernacExtend",
                        "9b85991e78f6ef12ceea78da2112aa88fc5dc32d"
                    ]
                },
                {
                    "command": [
                        "rewrite S_INR in H5.",
                        "VernacExtend",
                        "79e3cb85314df1d9856a7a56627bbc39eb76d031"
                    ]
                },
                {
                    "command": [
                        "assert (H6 : (INR n + 1 + -1 <= M + -1)%R).",
                        "VernacExtend",
                        "7a189bb186d6868d4349c9ef371d7634c55ae6db"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_r.",
                        "VernacExtend",
                        "5ca7acb5e67c7d7a5b6143fd11bc1e75c3e361e4"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_assoc in H6.",
                        "VernacExtend",
                        "ba67fd52d596722ce0ec4024533c7b1d4a7682ee"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_opp_r in H6.",
                        "VernacExtend",
                        "ebba57e0b3be8660e5c6c6cf7d61c672440cf469"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rplus_comm (INR n) 0) in H6.",
                        "VernacExtend",
                        "6284c659e46d529e08990f609f3f5c075b88dde4"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_l in H6.",
                        "VernacExtend",
                        "7465ff17ccebc33a4f889f36fd47dd31590e7a12"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sig_not_dec",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros P.",
                        "VernacExtend",
                        "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
                    ]
                },
                {
                    "command": [
                        "set (E := fun x => x = R0 \\/ (x = R1 /\\ P)).",
                        "VernacExtend",
                        "f70dea51c77c6c5fc4e97cb49bcf451058bddfd6"
                    ]
                },
                {
                    "command": [
                        "destruct (completeness E) as [x H].",
                        "VernacExtend",
                        "a5f9c3ba9435bdebd5a359b0ef95b0ee5c5fdd2a"
                    ]
                },
                {
                    "command": [
                        "exists R1.",
                        "VernacExtend",
                        "a04fa090ca264af36c30176322a0bedde1a4dd69"
                    ]
                },
                {
                    "command": [
                        "intros x [->|[-> _]].",
                        "VernacExtend",
                        "e6cfa6b4065b74bb8ff8ddc6015c53a0bb90fa7e"
                    ]
                },
                {
                    "command": [
                        "apply Rle_0_1.",
                        "VernacExtend",
                        "996937b485ab0b0ab64abfd08ec0786445ae12e3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "exists R0.",
                        "VernacExtend",
                        "3e799aaee006415ecbdc3378b4a0e928d339f82d"
                    ]
                },
                {
                    "command": [
                        "now left.",
                        "VernacExtend",
                        "2bd81021638064dbaa3d520cec398253376a1f37"
                    ]
                },
                {
                    "command": [
                        "destruct (Rle_lt_dec 1 x) as [H'|H'].",
                        "VernacExtend",
                        "6abe0bbbe08acaf6a65df2a0a1b0a6bfa114c6b2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "left.",
                        "VernacExtend",
                        "06dad9fc5698018f3f1213205145fec906c612b1"
                    ]
                },
                {
                    "command": [
                        "intros HP.",
                        "VernacExtend",
                        "0ec01adecbfe701ee27244a41ef8fa3cd51b55e4"
                    ]
                },
                {
                    "command": [
                        "elim Rle_not_lt with (1 := H').",
                        "VernacExtend",
                        "20fd7b1b55773939ad9556003e3d0a41a2adf697"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (2 := Rlt_0_1).",
                        "VernacExtend",
                        "336b22c6db203550fdfa852c5d8a0197a7f1adb0"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "intros y [->|[_ Hy]].",
                        "VernacExtend",
                        "2014c91f70b20121bad344097e9f0060287e8077"
                    ]
                },
                {
                    "command": [
                        "apply Rle_refl.",
                        "VernacExtend",
                        "0a60a50353d5cfa9a4ade0240c47d5160d6d423c"
                    ]
                },
                {
                    "command": [
                        "now elim HP.",
                        "VernacExtend",
                        "ad00d145b269193361789c5c7966bab9f691fc3d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "intros HP.",
                        "VernacExtend",
                        "0ec01adecbfe701ee27244a41ef8fa3cd51b55e4"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_not_le with (1 := H').",
                        "VernacExtend",
                        "06355cf415b09960ec301431cc674b63729f885c"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "now split.",
                        "VernacExtend",
                        "1791b9ff1e86fc70e4ee1a32bce684778be25d40"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}