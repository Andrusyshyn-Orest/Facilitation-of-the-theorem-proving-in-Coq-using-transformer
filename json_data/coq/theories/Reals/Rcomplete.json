{
    "filename": "theories/Reals/Rcomplete.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Rbase.",
            "VernacRequire",
            "c0a8d81b170d4ed8309a8632a3cac35f6cba016a"
        ],
        [
            "Require Import Rfunctions.",
            "VernacRequire",
            "e0ba64ca9fd07e0fc91c59b7bf007fb29a662a86"
        ],
        [
            "Require Import Rseries.",
            "VernacRequire",
            "7a432dd14e4529f426efb08dc0832c62a8dcc16b"
        ],
        [
            "Require Import SeqProp.",
            "VernacRequire",
            "a37c3bf41f1f017811a12d99565cebd0c11a7976"
        ],
        [
            "Require Import Max.",
            "VernacRequire",
            "163f8b04f9c5ff0ff8fe9ce4c762873ab613a3fa"
        ],
        [
            "Local Open Scope R_scope.",
            "VernacOpenCloseScope",
            "b005c72bb3303e031b42be04be04c87c005faa38"
        ],
        [
            "Theorem R_complete : forall Un:nat -> R, Cauchy_crit Un -> { l:R | Un_cv Un l } .",
            "VernacStartTheoremProof",
            "a5a4d38864f0defc89ada5ed8786857378dbbfd6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (Vn := sequence_minorant Un (cauchy_min Un H)).",
            "VernacExtend",
            "e7f0c331e6405fcabd77bb55384a30795c813b79"
        ],
        [
            "set (Wn := sequence_majorant Un (cauchy_maj Un H)).",
            "VernacExtend",
            "b7a4709d60d3c573ddc27a7abda69cca6812dcd0"
        ],
        [
            "pose proof (maj_cv Un H) as (x,p).",
            "VernacExtend",
            "2697252997235374feb8dfd843a499c34b819377"
        ],
        [
            "fold Wn in p.",
            "VernacExtend",
            "928e1a7f9a98dcb899c4825e16b7164fc67a2582"
        ],
        [
            "pose proof (min_cv Un H) as (x0,p0).",
            "VernacExtend",
            "7d2a7b72764fbd7ee37d25877d4b485d51aeafb6"
        ],
        [
            "fold Vn in p0.",
            "VernacExtend",
            "1dec969512fe075a9aa094392168d862658455f0"
        ],
        [
            "cut (x = x0).",
            "VernacExtend",
            "67701fcbf85331b2210971fc334679f5dbb2ddb1"
        ],
        [
            "intros H2.",
            "VernacExtend",
            "1cdce4ec62ec85608d1a6cc1fb7ae184c894a041"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "rewrite <- H2 in p0.",
            "VernacExtend",
            "2d38b96f49826ace4459ee6e2a33325360474a6c"
        ],
        [
            "unfold Un_cv.",
            "VernacExtend",
            "92546babd2031fb5ae4875e88a9d324f3c5bb33e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Un_cv in p; unfold Un_cv in p0.",
            "VernacExtend",
            "5b2c2425dfa10c53acc32cba15add1dd4559d961"
        ],
        [
            "cut (0 < eps / 3).",
            "VernacExtend",
            "12668585bb344ab903456bdafbf4895209494bb3"
        ],
        [
            "intro H4.",
            "VernacExtend",
            "e21a5203470c0c4980a1268e931676a6b2590e4e"
        ],
        [
            "elim (p (eps / 3) H4); intros.",
            "VernacExtend",
            "567a5ea9f1a6ea10acc15c39fb9fcda3ef9fd982"
        ],
        [
            "elim (p0 (eps / 3) H4); intros.",
            "VernacExtend",
            "8b0b142aa5ddd1678ad6498b7693b8970da3b37c"
        ],
        [
            "exists (max x1 x2).",
            "VernacExtend",
            "5792530c513a89842a170c98f1ca4d8e3797b6b3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold R_dist.",
            "VernacExtend",
            "9d14879a55d02ad54565968e31b64da7aeb66d97"
        ],
        [
            "apply Rle_lt_trans with (Rabs (Un n - Vn n) + Rabs (Vn n - x)).",
            "VernacExtend",
            "4b59d7aaa7d5a3e232411fe7f568f342065fca15"
        ],
        [
            "replace (Un n - x) with (Un n - Vn n + (Vn n - x)); [ apply Rabs_triang | ring ].",
            "VernacExtend",
            "b52d2bbbb58fde4844abc531ae97e748697f23e5"
        ],
        [
            "apply Rle_lt_trans with (Rabs (Wn n - Vn n) + Rabs (Vn n - x)).",
            "VernacExtend",
            "c14a6d69d94111d25b2416fcf3a22bc3e0340cee"
        ],
        [
            "do 2 rewrite <- (Rplus_comm (Rabs (Vn n - x))).",
            "VernacExtend",
            "43844787d0a2ac380d4af3dbeda930a48713e4fb"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "repeat rewrite Rabs_right.",
            "VernacExtend",
            "5107c29a40d66107cd65c8b15750ff5d33d00b0a"
        ],
        [
            "unfold Rminus; do 2 rewrite <- (Rplus_comm (- Vn n)); apply Rplus_le_compat_l.",
            "VernacExtend",
            "104857716b71831ed2c7f87ead3c1295f27220a6"
        ],
        [
            "assert (H8 := Vn_Un_Wn_order Un (cauchy_maj Un H) (cauchy_min Un H)).",
            "VernacExtend",
            "427515b8425853925d9cde9decec81cd14c1bd72"
        ],
        [
            "fold Vn Wn in H8.",
            "VernacExtend",
            "e7a8b2aedb17782802eb18fa7056649aaaf1c89c"
        ],
        [
            "elim (H8 n); intros.",
            "VernacExtend",
            "ec22b3e4fa9a0845497b7ce7ff38430854c1c034"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rle_ge.",
            "VernacExtend",
            "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
        ],
        [
            "unfold Rminus; apply Rplus_le_reg_l with (Vn n).",
            "VernacExtend",
            "b5ecd79d61fcf8d7da899ed2b6a6788c9cf8823d"
        ],
        [
            "rewrite Rplus_0_r.",
            "VernacExtend",
            "d5c1fdd9d1c31f6ede268b5fbee697b051ea4fe2"
        ],
        [
            "replace (Vn n + (Wn n + - Vn n)) with (Wn n); [ idtac | ring ].",
            "VernacExtend",
            "c3aaaa8b7be7dea44343a7e0cbdf8d0e625e4d46"
        ],
        [
            "assert (H8 := Vn_Un_Wn_order Un (cauchy_maj Un H) (cauchy_min Un H)).",
            "VernacExtend",
            "427515b8425853925d9cde9decec81cd14c1bd72"
        ],
        [
            "fold Vn Wn in H8.",
            "VernacExtend",
            "e7a8b2aedb17782802eb18fa7056649aaaf1c89c"
        ],
        [
            "elim (H8 n); intros.",
            "VernacExtend",
            "ec22b3e4fa9a0845497b7ce7ff38430854c1c034"
        ],
        [
            "apply Rle_trans with (Un n); assumption.",
            "VernacExtend",
            "20109fcbac7537fd74c2c0056de588b818b18b34"
        ],
        [
            "apply Rle_ge.",
            "VernacExtend",
            "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
        ],
        [
            "unfold Rminus; apply Rplus_le_reg_l with (Vn n).",
            "VernacExtend",
            "b5ecd79d61fcf8d7da899ed2b6a6788c9cf8823d"
        ],
        [
            "rewrite Rplus_0_r.",
            "VernacExtend",
            "d5c1fdd9d1c31f6ede268b5fbee697b051ea4fe2"
        ],
        [
            "replace (Vn n + (Un n + - Vn n)) with (Un n); [ idtac | ring ].",
            "VernacExtend",
            "6285fcb2db8e62cd254f5b14aba295b7efbf41d4"
        ],
        [
            "assert (H8 := Vn_Un_Wn_order Un (cauchy_maj Un H) (cauchy_min Un H)).",
            "VernacExtend",
            "427515b8425853925d9cde9decec81cd14c1bd72"
        ],
        [
            "fold Vn Wn in H8.",
            "VernacExtend",
            "e7a8b2aedb17782802eb18fa7056649aaaf1c89c"
        ],
        [
            "elim (H8 n); intros.",
            "VernacExtend",
            "ec22b3e4fa9a0845497b7ce7ff38430854c1c034"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rle_lt_trans with (Rabs (Wn n - x) + Rabs (x - Vn n) + Rabs (Vn n - x)).",
            "VernacExtend",
            "5f55c1e79198f5fedde44972bebd075bea931a82"
        ],
        [
            "do 2 rewrite <- (Rplus_comm (Rabs (Vn n - x))).",
            "VernacExtend",
            "43844787d0a2ac380d4af3dbeda930a48713e4fb"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "replace (Wn n - Vn n) with (Wn n - x + (x - Vn n)); [ apply Rabs_triang | ring ].",
            "VernacExtend",
            "8b0679fbcc52241000410a2707a98b72968035c6"
        ],
        [
            "apply Rlt_le_trans with (eps / 3 + eps / 3 + eps / 3).",
            "VernacExtend",
            "788702db7443e45b4bb2531575c5de7210f84814"
        ],
        [
            "repeat apply Rplus_lt_compat.",
            "VernacExtend",
            "57c369d5b309a04c5472ef7f32c33977152ecb0c"
        ],
        [
            "unfold R_dist in H1.",
            "VernacExtend",
            "8fa771da85f856e798c8628c9441b45ba8036506"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "unfold ge; apply le_trans with (max x1 x2).",
            "VernacExtend",
            "4a1bc4400c5ed0e7cd90e94707e9525bba6410a8"
        ],
        [
            "apply le_max_l.",
            "VernacExtend",
            "084aa2ad97fe4ccf3d3b3737d309d8a3650322e6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- Rabs_Ropp.",
            "VernacExtend",
            "fec698fd86e1df1a29b09f4d0b96a2b8f860ddb2"
        ],
        [
            "replace (- (x - Vn n)) with (Vn n - x); [ idtac | ring ].",
            "VernacExtend",
            "95a1d47671aaaae9cd3dce84a3c947bceabfca88"
        ],
        [
            "unfold R_dist in H3.",
            "VernacExtend",
            "b3042f5baea0b3979cc0889d2b029f8da69aae49"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "unfold ge; apply le_trans with (max x1 x2).",
            "VernacExtend",
            "4a1bc4400c5ed0e7cd90e94707e9525bba6410a8"
        ],
        [
            "apply le_max_r.",
            "VernacExtend",
            "2770eee6606c65af90cd62218f564fa7b6592164"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "unfold R_dist in H3.",
            "VernacExtend",
            "b3042f5baea0b3979cc0889d2b029f8da69aae49"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "unfold ge; apply le_trans with (max x1 x2).",
            "VernacExtend",
            "4a1bc4400c5ed0e7cd90e94707e9525bba6410a8"
        ],
        [
            "apply le_max_r.",
            "VernacExtend",
            "2770eee6606c65af90cd62218f564fa7b6592164"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "right.",
            "VernacExtend",
            "27e417a3497755767e1a1d6ba87753ecddaee6b7"
        ],
        [
            "pattern eps at 4; replace eps with (3 * (eps / 3)).",
            "VernacExtend",
            "bf2f8735f281475022a7a1e4e15524ec756aa61b"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "unfold Rdiv; rewrite <- Rmult_assoc; apply Rinv_r_simpl_m; discrR.",
            "VernacExtend",
            "02ed5ba0c460239c0b46ae125639f0370194cbf2"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; prove_sup0 ].",
            "VernacExtend",
            "4d905fce1c75d7adfc4f1cd2deb30dbdf49bf2f3"
        ],
        [
            "apply cond_eq.",
            "VernacExtend",
            "d876630090535b5a5f7e7841ae4c0c5219a1ca89"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (0 < eps / 5).",
            "VernacExtend",
            "96c0fd6102ee48c4a6b9a9df7f0ce0ee8cef1f33"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "unfold Un_cv in p; unfold Un_cv in p0.",
            "VernacExtend",
            "5b2c2425dfa10c53acc32cba15add1dd4559d961"
        ],
        [
            "unfold R_dist in p; unfold R_dist in p0.",
            "VernacExtend",
            "7a6f05b90af0a81372109f4c5c5b8fa2092f0138"
        ],
        [
            "elim (p (eps / 5) H1); intros N1 H4.",
            "VernacExtend",
            "a05689be323224f3a3765159ed268c6fb5945b2e"
        ],
        [
            "elim (p0 (eps / 5) H1); intros N2 H5.",
            "VernacExtend",
            "637fa70e1e77ede2888f2fc1d27825736d1820ce"
        ],
        [
            "unfold Cauchy_crit in H.",
            "VernacExtend",
            "90a4cb77613214884a1c16e6d8f1704bb6346ab7"
        ],
        [
            "unfold R_dist in H.",
            "VernacExtend",
            "01cb43d2ea1a18a35f6eb0b0523ac2f2ffdb0638"
        ],
        [
            "elim (H (eps / 5) H1); intros N3 H6.",
            "VernacExtend",
            "5d545db5030703ffb027921f503a209427106e8f"
        ],
        [
            "set (N := max (max N1 N2) N3).",
            "VernacExtend",
            "29eebdfb20dec75dd6469790cb7072bef41da299"
        ],
        [
            "apply Rle_lt_trans with (Rabs (x - Wn N) + Rabs (Wn N - x0)).",
            "VernacExtend",
            "ff45f3eb1b5168ae28bc77da80e2cf1a3d01f434"
        ],
        [
            "replace (x - x0) with (x - Wn N + (Wn N - x0)); [ apply Rabs_triang | ring ].",
            "VernacExtend",
            "e4be17878677000ad968cf690345079570cc8606"
        ],
        [
            "apply Rle_lt_trans with (Rabs (x - Wn N) + Rabs (Wn N - Vn N) + Rabs (Vn N - x0)).",
            "VernacExtend",
            "37af332153f57a6cc118e838325c221bdea29868"
        ],
        [
            "rewrite Rplus_assoc.",
            "VernacExtend",
            "f1bd9ff8db9debbc055c2d64a1c07c2da6dd8407"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "replace (Wn N - x0) with (Wn N - Vn N + (Vn N - x0)); [ apply Rabs_triang | ring ].",
            "VernacExtend",
            "c2bddef58d55c73a00aed95c4f03e31af0a61b61"
        ],
        [
            "replace eps with (eps / 5 + 3 * (eps / 5) + eps / 5).",
            "VernacExtend",
            "74e301d0371c21f3ea5b997138605f3a7eee1b14"
        ],
        [
            "repeat apply Rplus_lt_compat.",
            "VernacExtend",
            "57c369d5b309a04c5472ef7f32c33977152ecb0c"
        ],
        [
            "rewrite <- Rabs_Ropp.",
            "VernacExtend",
            "fec698fd86e1df1a29b09f4d0b96a2b8f860ddb2"
        ],
        [
            "replace (- (x - Wn N)) with (Wn N - x); [ apply H4 | ring ].",
            "VernacExtend",
            "ecd6361bad308dbcf3d37d0a1a8f8ecc616b9193"
        ],
        [
            "unfold ge, N.",
            "VernacExtend",
            "9b8a216b53ee1ce40cc60f6aa51cdb7175b21b37"
        ],
        [
            "apply le_trans with (max N1 N2); apply le_max_l.",
            "VernacExtend",
            "a600f30b1f503d67787fe1305467110e276ed551"
        ],
        [
            "unfold Wn, Vn.",
            "VernacExtend",
            "aa010265477357338cfee4aab9c7e4836e76f717"
        ],
        [
            "unfold sequence_majorant, sequence_minorant.",
            "VernacExtend",
            "a39647dd9ba18bda5b7d24bfa47ab0938f43eaff"
        ],
        [
            "assert (H7 := approx_maj (fun k:nat => Un (N + k)%nat) (maj_ss Un N (cauchy_maj Un H))).",
            "VernacExtend",
            "cfe87e285aff06f8dab9241379e0acd2a1b39484"
        ],
        [
            "assert (H8 := approx_min (fun k:nat => Un (N + k)%nat) (min_ss Un N (cauchy_min Un H))).",
            "VernacExtend",
            "27c49ffcab5dbf18f6bb665cb8b5fa2274388c6e"
        ],
        [
            "cut (Wn N = majorant (fun k:nat => Un (N + k)%nat) (maj_ss Un N (cauchy_maj Un H))).",
            "VernacExtend",
            "53fdd1bc993a54cd871f7900356f39bf3ab05b59"
        ],
        [
            "cut (Vn N = minorant (fun k:nat => Un (N + k)%nat) (min_ss Un N (cauchy_min Un H))).",
            "VernacExtend",
            "c4268e1d8bdd9a4dea02c8b819592fc57b94b9c4"
        ],
        [
            "intros H9 H10.",
            "VernacExtend",
            "0d26f80f8987208f38391f48e8cc40a9ab1b0978"
        ],
        [
            "rewrite <- H9 in H8 |- *.",
            "VernacExtend",
            "78475e3bb4e56a4e9cf4d847ab5b6d199e397b21"
        ],
        [
            "rewrite <- H10 in H7 |- *.",
            "VernacExtend",
            "79a690c884ba742dfc3398814e897a4c517da324"
        ],
        [
            "elim (H7 (eps / 5) H1); intros k2 H11.",
            "VernacExtend",
            "60037bbdd241b6f8e12f38ca581eb52a69645551"
        ],
        [
            "elim (H8 (eps / 5) H1); intros k1 H12.",
            "VernacExtend",
            "922b2fa4a5a68e606d02b54dc916a130d6ffff91"
        ],
        [
            "apply Rle_lt_trans with (Rabs (Wn N - Un (N + k2)%nat) + Rabs (Un (N + k2)%nat - Vn N)).",
            "VernacExtend",
            "a6e91aa378b3f7b9f7fada578e6dc6484e067743"
        ],
        [
            "replace (Wn N - Vn N) with (Wn N - Un (N + k2)%nat + (Un (N + k2)%nat - Vn N)); [ apply Rabs_triang | ring ].",
            "VernacExtend",
            "09ac1c0db0d548d6316b37bea324edd1537a8db2"
        ],
        [
            "apply Rle_lt_trans with (Rabs (Wn N - Un (N + k2)%nat) + Rabs (Un (N + k2)%nat - Un (N + k1)%nat) + Rabs (Un (N + k1)%nat - Vn N)).",
            "VernacExtend",
            "12619791f18be36f3629be88781fafbf999a45bd"
        ],
        [
            "rewrite Rplus_assoc.",
            "VernacExtend",
            "f1bd9ff8db9debbc055c2d64a1c07c2da6dd8407"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "replace (Un (N + k2)%nat - Vn N) with (Un (N + k2)%nat - Un (N + k1)%nat + (Un (N + k1)%nat - Vn N)); [ apply Rabs_triang | ring ].",
            "VernacExtend",
            "d447a230e0cdf7202bc39a34e02b31af6c8e326b"
        ],
        [
            "replace (3 * (eps / 5)) with (eps / 5 + eps / 5 + eps / 5); [ repeat apply Rplus_lt_compat | ring ].",
            "VernacExtend",
            "d30e1a27e05c0366776589ffdfa943fe61a2d3e0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "unfold ge.",
            "VernacExtend",
            "49aee4aaf6253f31669ea83def7814227efbe0f6"
        ],
        [
            "apply le_trans with N.",
            "VernacExtend",
            "f4922ce04bbdda9b1da08d6dd903134e8ba0e25b"
        ],
        [
            "unfold N; apply le_max_r.",
            "VernacExtend",
            "25b64a376c94d836945bf1b7c1d8586025f5da56"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "unfold ge.",
            "VernacExtend",
            "49aee4aaf6253f31669ea83def7814227efbe0f6"
        ],
        [
            "apply le_trans with N.",
            "VernacExtend",
            "f4922ce04bbdda9b1da08d6dd903134e8ba0e25b"
        ],
        [
            "unfold N; apply le_max_r.",
            "VernacExtend",
            "25b64a376c94d836945bf1b7c1d8586025f5da56"
        ],
        [
            "apply le_plus_l.",
            "VernacExtend",
            "30f3305f62c97c24af24578d88eaa888a0053ec1"
        ],
        [
            "rewrite <- Rabs_Ropp.",
            "VernacExtend",
            "fec698fd86e1df1a29b09f4d0b96a2b8f860ddb2"
        ],
        [
            "replace (- (Un (N + k1)%nat - Vn N)) with (Vn N - Un (N + k1)%nat); [ assumption | ring ].",
            "VernacExtend",
            "fc4b23f97d80fb81d3f2ec6989e7f9b64a0b4b66"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "unfold ge; apply le_trans with (max N1 N2).",
            "VernacExtend",
            "53936f4bd4602992fc0ca2164821c93f9bd1f021"
        ],
        [
            "apply le_max_r.",
            "VernacExtend",
            "2770eee6606c65af90cd62218f564fa7b6592164"
        ],
        [
            "unfold N; apply le_max_l.",
            "VernacExtend",
            "276b555b39b40f510dcc90e9585bf8a1fd5a87cf"
        ],
        [
            "pattern eps at 4; replace eps with (5 * (eps / 5)).",
            "VernacExtend",
            "4dcf9bc6fa85e448503cfe931fff69be6d417a8f"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "unfold Rdiv; rewrite <- Rmult_assoc; apply Rinv_r_simpl_m.",
            "VernacExtend",
            "e126f3d64c8457c26380151c41513db4b83224e0"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "7122edbd68559f255bfed03dc640472ed14eb4ef"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "prove_sup0; try apply lt_O_Sn.",
            "VernacExtend",
            "48ad2ba1af52ec5af106ddd387e15b8f125ae1b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "R_complete",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (Vn := sequence_minorant Un (cauchy_min Un H)).",
                        "VernacExtend",
                        "e7f0c331e6405fcabd77bb55384a30795c813b79"
                    ]
                },
                {
                    "command": [
                        "set (Wn := sequence_majorant Un (cauchy_maj Un H)).",
                        "VernacExtend",
                        "b7a4709d60d3c573ddc27a7abda69cca6812dcd0"
                    ]
                },
                {
                    "command": [
                        "pose proof (maj_cv Un H) as (x,p).",
                        "VernacExtend",
                        "2697252997235374feb8dfd843a499c34b819377"
                    ]
                },
                {
                    "command": [
                        "fold Wn in p.",
                        "VernacExtend",
                        "928e1a7f9a98dcb899c4825e16b7164fc67a2582"
                    ]
                },
                {
                    "command": [
                        "pose proof (min_cv Un H) as (x0,p0).",
                        "VernacExtend",
                        "7d2a7b72764fbd7ee37d25877d4b485d51aeafb6"
                    ]
                },
                {
                    "command": [
                        "fold Vn in p0.",
                        "VernacExtend",
                        "1dec969512fe075a9aa094392168d862658455f0"
                    ]
                },
                {
                    "command": [
                        "cut (x = x0).",
                        "VernacExtend",
                        "67701fcbf85331b2210971fc334679f5dbb2ddb1"
                    ]
                },
                {
                    "command": [
                        "intros H2.",
                        "VernacExtend",
                        "1cdce4ec62ec85608d1a6cc1fb7ae184c894a041"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2 in p0.",
                        "VernacExtend",
                        "2d38b96f49826ace4459ee6e2a33325360474a6c"
                    ]
                },
                {
                    "command": [
                        "unfold Un_cv.",
                        "VernacExtend",
                        "92546babd2031fb5ae4875e88a9d324f3c5bb33e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Un_cv in p; unfold Un_cv in p0.",
                        "VernacExtend",
                        "5b2c2425dfa10c53acc32cba15add1dd4559d961"
                    ]
                },
                {
                    "command": [
                        "cut (0 < eps / 3).",
                        "VernacExtend",
                        "12668585bb344ab903456bdafbf4895209494bb3"
                    ]
                },
                {
                    "command": [
                        "intro H4.",
                        "VernacExtend",
                        "e21a5203470c0c4980a1268e931676a6b2590e4e"
                    ]
                },
                {
                    "command": [
                        "elim (p (eps / 3) H4); intros.",
                        "VernacExtend",
                        "567a5ea9f1a6ea10acc15c39fb9fcda3ef9fd982"
                    ]
                },
                {
                    "command": [
                        "elim (p0 (eps / 3) H4); intros.",
                        "VernacExtend",
                        "8b0b142aa5ddd1678ad6498b7693b8970da3b37c"
                    ]
                },
                {
                    "command": [
                        "exists (max x1 x2).",
                        "VernacExtend",
                        "5792530c513a89842a170c98f1ca4d8e3797b6b3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist.",
                        "VernacExtend",
                        "9d14879a55d02ad54565968e31b64da7aeb66d97"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs (Un n - Vn n) + Rabs (Vn n - x)).",
                        "VernacExtend",
                        "4b59d7aaa7d5a3e232411fe7f568f342065fca15"
                    ]
                },
                {
                    "command": [
                        "replace (Un n - x) with (Un n - Vn n + (Vn n - x)); [ apply Rabs_triang | ring ].",
                        "VernacExtend",
                        "b52d2bbbb58fde4844abc531ae97e748697f23e5"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs (Wn n - Vn n) + Rabs (Vn n - x)).",
                        "VernacExtend",
                        "c14a6d69d94111d25b2416fcf3a22bc3e0340cee"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- (Rplus_comm (Rabs (Vn n - x))).",
                        "VernacExtend",
                        "43844787d0a2ac380d4af3dbeda930a48713e4fb"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rabs_right.",
                        "VernacExtend",
                        "5107c29a40d66107cd65c8b15750ff5d33d00b0a"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus; do 2 rewrite <- (Rplus_comm (- Vn n)); apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "104857716b71831ed2c7f87ead3c1295f27220a6"
                    ]
                },
                {
                    "command": [
                        "assert (H8 := Vn_Un_Wn_order Un (cauchy_maj Un H) (cauchy_min Un H)).",
                        "VernacExtend",
                        "427515b8425853925d9cde9decec81cd14c1bd72"
                    ]
                },
                {
                    "command": [
                        "fold Vn Wn in H8.",
                        "VernacExtend",
                        "e7a8b2aedb17782802eb18fa7056649aaaf1c89c"
                    ]
                },
                {
                    "command": [
                        "elim (H8 n); intros.",
                        "VernacExtend",
                        "ec22b3e4fa9a0845497b7ce7ff38430854c1c034"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge.",
                        "VernacExtend",
                        "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus; apply Rplus_le_reg_l with (Vn n).",
                        "VernacExtend",
                        "b5ecd79d61fcf8d7da899ed2b6a6788c9cf8823d"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r.",
                        "VernacExtend",
                        "d5c1fdd9d1c31f6ede268b5fbee697b051ea4fe2"
                    ]
                },
                {
                    "command": [
                        "replace (Vn n + (Wn n + - Vn n)) with (Wn n); [ idtac | ring ].",
                        "VernacExtend",
                        "c3aaaa8b7be7dea44343a7e0cbdf8d0e625e4d46"
                    ]
                },
                {
                    "command": [
                        "assert (H8 := Vn_Un_Wn_order Un (cauchy_maj Un H) (cauchy_min Un H)).",
                        "VernacExtend",
                        "427515b8425853925d9cde9decec81cd14c1bd72"
                    ]
                },
                {
                    "command": [
                        "fold Vn Wn in H8.",
                        "VernacExtend",
                        "e7a8b2aedb17782802eb18fa7056649aaaf1c89c"
                    ]
                },
                {
                    "command": [
                        "elim (H8 n); intros.",
                        "VernacExtend",
                        "ec22b3e4fa9a0845497b7ce7ff38430854c1c034"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (Un n); assumption.",
                        "VernacExtend",
                        "20109fcbac7537fd74c2c0056de588b818b18b34"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge.",
                        "VernacExtend",
                        "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus; apply Rplus_le_reg_l with (Vn n).",
                        "VernacExtend",
                        "b5ecd79d61fcf8d7da899ed2b6a6788c9cf8823d"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r.",
                        "VernacExtend",
                        "d5c1fdd9d1c31f6ede268b5fbee697b051ea4fe2"
                    ]
                },
                {
                    "command": [
                        "replace (Vn n + (Un n + - Vn n)) with (Un n); [ idtac | ring ].",
                        "VernacExtend",
                        "6285fcb2db8e62cd254f5b14aba295b7efbf41d4"
                    ]
                },
                {
                    "command": [
                        "assert (H8 := Vn_Un_Wn_order Un (cauchy_maj Un H) (cauchy_min Un H)).",
                        "VernacExtend",
                        "427515b8425853925d9cde9decec81cd14c1bd72"
                    ]
                },
                {
                    "command": [
                        "fold Vn Wn in H8.",
                        "VernacExtend",
                        "e7a8b2aedb17782802eb18fa7056649aaaf1c89c"
                    ]
                },
                {
                    "command": [
                        "elim (H8 n); intros.",
                        "VernacExtend",
                        "ec22b3e4fa9a0845497b7ce7ff38430854c1c034"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs (Wn n - x) + Rabs (x - Vn n) + Rabs (Vn n - x)).",
                        "VernacExtend",
                        "5f55c1e79198f5fedde44972bebd075bea931a82"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- (Rplus_comm (Rabs (Vn n - x))).",
                        "VernacExtend",
                        "43844787d0a2ac380d4af3dbeda930a48713e4fb"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "replace (Wn n - Vn n) with (Wn n - x + (x - Vn n)); [ apply Rabs_triang | ring ].",
                        "VernacExtend",
                        "8b0679fbcc52241000410a2707a98b72968035c6"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (eps / 3 + eps / 3 + eps / 3).",
                        "VernacExtend",
                        "788702db7443e45b4bb2531575c5de7210f84814"
                    ]
                },
                {
                    "command": [
                        "repeat apply Rplus_lt_compat.",
                        "VernacExtend",
                        "57c369d5b309a04c5472ef7f32c33977152ecb0c"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist in H1.",
                        "VernacExtend",
                        "8fa771da85f856e798c8628c9441b45ba8036506"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "unfold ge; apply le_trans with (max x1 x2).",
                        "VernacExtend",
                        "4a1bc4400c5ed0e7cd90e94707e9525bba6410a8"
                    ]
                },
                {
                    "command": [
                        "apply le_max_l.",
                        "VernacExtend",
                        "084aa2ad97fe4ccf3d3b3737d309d8a3650322e6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rabs_Ropp.",
                        "VernacExtend",
                        "fec698fd86e1df1a29b09f4d0b96a2b8f860ddb2"
                    ]
                },
                {
                    "command": [
                        "replace (- (x - Vn n)) with (Vn n - x); [ idtac | ring ].",
                        "VernacExtend",
                        "95a1d47671aaaae9cd3dce84a3c947bceabfca88"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist in H3.",
                        "VernacExtend",
                        "b3042f5baea0b3979cc0889d2b029f8da69aae49"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "unfold ge; apply le_trans with (max x1 x2).",
                        "VernacExtend",
                        "4a1bc4400c5ed0e7cd90e94707e9525bba6410a8"
                    ]
                },
                {
                    "command": [
                        "apply le_max_r.",
                        "VernacExtend",
                        "2770eee6606c65af90cd62218f564fa7b6592164"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist in H3.",
                        "VernacExtend",
                        "b3042f5baea0b3979cc0889d2b029f8da69aae49"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "unfold ge; apply le_trans with (max x1 x2).",
                        "VernacExtend",
                        "4a1bc4400c5ed0e7cd90e94707e9525bba6410a8"
                    ]
                },
                {
                    "command": [
                        "apply le_max_r.",
                        "VernacExtend",
                        "2770eee6606c65af90cd62218f564fa7b6592164"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "right.",
                        "VernacExtend",
                        "27e417a3497755767e1a1d6ba87753ecddaee6b7"
                    ]
                },
                {
                    "command": [
                        "pattern eps at 4; replace eps with (3 * (eps / 3)).",
                        "VernacExtend",
                        "bf2f8735f281475022a7a1e4e15524ec756aa61b"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite <- Rmult_assoc; apply Rinv_r_simpl_m; discrR.",
                        "VernacExtend",
                        "02ed5ba0c460239c0b46ae125639f0370194cbf2"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; prove_sup0 ].",
                        "VernacExtend",
                        "4d905fce1c75d7adfc4f1cd2deb30dbdf49bf2f3"
                    ]
                },
                {
                    "command": [
                        "apply cond_eq.",
                        "VernacExtend",
                        "d876630090535b5a5f7e7841ae4c0c5219a1ca89"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (0 < eps / 5).",
                        "VernacExtend",
                        "96c0fd6102ee48c4a6b9a9df7f0ce0ee8cef1f33"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "unfold Un_cv in p; unfold Un_cv in p0.",
                        "VernacExtend",
                        "5b2c2425dfa10c53acc32cba15add1dd4559d961"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist in p; unfold R_dist in p0.",
                        "VernacExtend",
                        "7a6f05b90af0a81372109f4c5c5b8fa2092f0138"
                    ]
                },
                {
                    "command": [
                        "elim (p (eps / 5) H1); intros N1 H4.",
                        "VernacExtend",
                        "a05689be323224f3a3765159ed268c6fb5945b2e"
                    ]
                },
                {
                    "command": [
                        "elim (p0 (eps / 5) H1); intros N2 H5.",
                        "VernacExtend",
                        "637fa70e1e77ede2888f2fc1d27825736d1820ce"
                    ]
                },
                {
                    "command": [
                        "unfold Cauchy_crit in H.",
                        "VernacExtend",
                        "90a4cb77613214884a1c16e6d8f1704bb6346ab7"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist in H.",
                        "VernacExtend",
                        "01cb43d2ea1a18a35f6eb0b0523ac2f2ffdb0638"
                    ]
                },
                {
                    "command": [
                        "elim (H (eps / 5) H1); intros N3 H6.",
                        "VernacExtend",
                        "5d545db5030703ffb027921f503a209427106e8f"
                    ]
                },
                {
                    "command": [
                        "set (N := max (max N1 N2) N3).",
                        "VernacExtend",
                        "29eebdfb20dec75dd6469790cb7072bef41da299"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs (x - Wn N) + Rabs (Wn N - x0)).",
                        "VernacExtend",
                        "ff45f3eb1b5168ae28bc77da80e2cf1a3d01f434"
                    ]
                },
                {
                    "command": [
                        "replace (x - x0) with (x - Wn N + (Wn N - x0)); [ apply Rabs_triang | ring ].",
                        "VernacExtend",
                        "e4be17878677000ad968cf690345079570cc8606"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs (x - Wn N) + Rabs (Wn N - Vn N) + Rabs (Vn N - x0)).",
                        "VernacExtend",
                        "37af332153f57a6cc118e838325c221bdea29868"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_assoc.",
                        "VernacExtend",
                        "f1bd9ff8db9debbc055c2d64a1c07c2da6dd8407"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "replace (Wn N - x0) with (Wn N - Vn N + (Vn N - x0)); [ apply Rabs_triang | ring ].",
                        "VernacExtend",
                        "c2bddef58d55c73a00aed95c4f03e31af0a61b61"
                    ]
                },
                {
                    "command": [
                        "replace eps with (eps / 5 + 3 * (eps / 5) + eps / 5).",
                        "VernacExtend",
                        "74e301d0371c21f3ea5b997138605f3a7eee1b14"
                    ]
                },
                {
                    "command": [
                        "repeat apply Rplus_lt_compat.",
                        "VernacExtend",
                        "57c369d5b309a04c5472ef7f32c33977152ecb0c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rabs_Ropp.",
                        "VernacExtend",
                        "fec698fd86e1df1a29b09f4d0b96a2b8f860ddb2"
                    ]
                },
                {
                    "command": [
                        "replace (- (x - Wn N)) with (Wn N - x); [ apply H4 | ring ].",
                        "VernacExtend",
                        "ecd6361bad308dbcf3d37d0a1a8f8ecc616b9193"
                    ]
                },
                {
                    "command": [
                        "unfold ge, N.",
                        "VernacExtend",
                        "9b8a216b53ee1ce40cc60f6aa51cdb7175b21b37"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (max N1 N2); apply le_max_l.",
                        "VernacExtend",
                        "a600f30b1f503d67787fe1305467110e276ed551"
                    ]
                },
                {
                    "command": [
                        "unfold Wn, Vn.",
                        "VernacExtend",
                        "aa010265477357338cfee4aab9c7e4836e76f717"
                    ]
                },
                {
                    "command": [
                        "unfold sequence_majorant, sequence_minorant.",
                        "VernacExtend",
                        "a39647dd9ba18bda5b7d24bfa47ab0938f43eaff"
                    ]
                },
                {
                    "command": [
                        "assert (H7 := approx_maj (fun k:nat => Un (N + k)%nat) (maj_ss Un N (cauchy_maj Un H))).",
                        "VernacExtend",
                        "cfe87e285aff06f8dab9241379e0acd2a1b39484"
                    ]
                },
                {
                    "command": [
                        "assert (H8 := approx_min (fun k:nat => Un (N + k)%nat) (min_ss Un N (cauchy_min Un H))).",
                        "VernacExtend",
                        "27c49ffcab5dbf18f6bb665cb8b5fa2274388c6e"
                    ]
                },
                {
                    "command": [
                        "cut (Wn N = majorant (fun k:nat => Un (N + k)%nat) (maj_ss Un N (cauchy_maj Un H))).",
                        "VernacExtend",
                        "53fdd1bc993a54cd871f7900356f39bf3ab05b59"
                    ]
                },
                {
                    "command": [
                        "cut (Vn N = minorant (fun k:nat => Un (N + k)%nat) (min_ss Un N (cauchy_min Un H))).",
                        "VernacExtend",
                        "c4268e1d8bdd9a4dea02c8b819592fc57b94b9c4"
                    ]
                },
                {
                    "command": [
                        "intros H9 H10.",
                        "VernacExtend",
                        "0d26f80f8987208f38391f48e8cc40a9ab1b0978"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H9 in H8 |- *.",
                        "VernacExtend",
                        "78475e3bb4e56a4e9cf4d847ab5b6d199e397b21"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H10 in H7 |- *.",
                        "VernacExtend",
                        "79a690c884ba742dfc3398814e897a4c517da324"
                    ]
                },
                {
                    "command": [
                        "elim (H7 (eps / 5) H1); intros k2 H11.",
                        "VernacExtend",
                        "60037bbdd241b6f8e12f38ca581eb52a69645551"
                    ]
                },
                {
                    "command": [
                        "elim (H8 (eps / 5) H1); intros k1 H12.",
                        "VernacExtend",
                        "922b2fa4a5a68e606d02b54dc916a130d6ffff91"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs (Wn N - Un (N + k2)%nat) + Rabs (Un (N + k2)%nat - Vn N)).",
                        "VernacExtend",
                        "a6e91aa378b3f7b9f7fada578e6dc6484e067743"
                    ]
                },
                {
                    "command": [
                        "replace (Wn N - Vn N) with (Wn N - Un (N + k2)%nat + (Un (N + k2)%nat - Vn N)); [ apply Rabs_triang | ring ].",
                        "VernacExtend",
                        "09ac1c0db0d548d6316b37bea324edd1537a8db2"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs (Wn N - Un (N + k2)%nat) + Rabs (Un (N + k2)%nat - Un (N + k1)%nat) + Rabs (Un (N + k1)%nat - Vn N)).",
                        "VernacExtend",
                        "12619791f18be36f3629be88781fafbf999a45bd"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_assoc.",
                        "VernacExtend",
                        "f1bd9ff8db9debbc055c2d64a1c07c2da6dd8407"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "replace (Un (N + k2)%nat - Vn N) with (Un (N + k2)%nat - Un (N + k1)%nat + (Un (N + k1)%nat - Vn N)); [ apply Rabs_triang | ring ].",
                        "VernacExtend",
                        "d447a230e0cdf7202bc39a34e02b31af6c8e326b"
                    ]
                },
                {
                    "command": [
                        "replace (3 * (eps / 5)) with (eps / 5 + eps / 5 + eps / 5); [ repeat apply Rplus_lt_compat | ring ].",
                        "VernacExtend",
                        "d30e1a27e05c0366776589ffdfa943fe61a2d3e0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H6.",
                        "VernacExtend",
                        "b0314bbdc776869d305067ca471096a36fa958c1"
                    ]
                },
                {
                    "command": [
                        "unfold ge.",
                        "VernacExtend",
                        "49aee4aaf6253f31669ea83def7814227efbe0f6"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with N.",
                        "VernacExtend",
                        "f4922ce04bbdda9b1da08d6dd903134e8ba0e25b"
                    ]
                },
                {
                    "command": [
                        "unfold N; apply le_max_r.",
                        "VernacExtend",
                        "25b64a376c94d836945bf1b7c1d8586025f5da56"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_l.",
                        "VernacExtend",
                        "30f3305f62c97c24af24578d88eaa888a0053ec1"
                    ]
                },
                {
                    "command": [
                        "unfold ge.",
                        "VernacExtend",
                        "49aee4aaf6253f31669ea83def7814227efbe0f6"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with N.",
                        "VernacExtend",
                        "f4922ce04bbdda9b1da08d6dd903134e8ba0e25b"
                    ]
                },
                {
                    "command": [
                        "unfold N; apply le_max_r.",
                        "VernacExtend",
                        "25b64a376c94d836945bf1b7c1d8586025f5da56"
                    ]
                },
                {
                    "command": [
                        "apply le_plus_l.",
                        "VernacExtend",
                        "30f3305f62c97c24af24578d88eaa888a0053ec1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rabs_Ropp.",
                        "VernacExtend",
                        "fec698fd86e1df1a29b09f4d0b96a2b8f860ddb2"
                    ]
                },
                {
                    "command": [
                        "replace (- (Un (N + k1)%nat - Vn N)) with (Vn N - Un (N + k1)%nat); [ assumption | ring ].",
                        "VernacExtend",
                        "fc4b23f97d80fb81d3f2ec6989e7f9b64a0b4b66"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "unfold ge; apply le_trans with (max N1 N2).",
                        "VernacExtend",
                        "53936f4bd4602992fc0ca2164821c93f9bd1f021"
                    ]
                },
                {
                    "command": [
                        "apply le_max_r.",
                        "VernacExtend",
                        "2770eee6606c65af90cd62218f564fa7b6592164"
                    ]
                },
                {
                    "command": [
                        "unfold N; apply le_max_l.",
                        "VernacExtend",
                        "276b555b39b40f510dcc90e9585bf8a1fd5a87cf"
                    ]
                },
                {
                    "command": [
                        "pattern eps at 4; replace eps with (5 * (eps / 5)).",
                        "VernacExtend",
                        "4dcf9bc6fa85e448503cfe931fff69be6d417a8f"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite <- Rmult_assoc; apply Rinv_r_simpl_m.",
                        "VernacExtend",
                        "e126f3d64c8457c26380151c41513db4b83224e0"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "7122edbd68559f255bfed03dc640472ed14eb4ef"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
                    ]
                },
                {
                    "command": [
                        "prove_sup0; try apply lt_O_Sn.",
                        "VernacExtend",
                        "48ad2ba1af52ec5af106ddd387e15b8f125ae1b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}