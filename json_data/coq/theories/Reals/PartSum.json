{
    "filename": "theories/Reals/PartSum.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Rbase.",
            "VernacRequire",
            "c0a8d81b170d4ed8309a8632a3cac35f6cba016a"
        ],
        [
            "Require Import Rfunctions.",
            "VernacRequire",
            "e0ba64ca9fd07e0fc91c59b7bf007fb29a662a86"
        ],
        [
            "Require Import Rseries.",
            "VernacRequire",
            "7a432dd14e4529f426efb08dc0832c62a8dcc16b"
        ],
        [
            "Require Import Rcomplete.",
            "VernacRequire",
            "2dd209e74a187b4b82168b0e3740cdc48d58123c"
        ],
        [
            "Require Import Max.",
            "VernacRequire",
            "163f8b04f9c5ff0ff8fe9ce4c762873ab613a3fa"
        ],
        [
            "Local Open Scope R_scope.",
            "VernacOpenCloseScope",
            "b005c72bb3303e031b42be04be04c87c005faa38"
        ],
        [
            "Lemma tech1 : forall (An:nat -> R) (N:nat), (forall n:nat, (n <= N)%nat -> 0 < An n) -> 0 < sum_f_R0 An N.",
            "VernacStartTheoremProof",
            "ff27d4821982fc5a7b324d4ab3bacd59e02fab41"
        ],
        [
            "intros; induction N as [| N HrecN].",
            "VernacExtend",
            "176c4a7e299087f2a01baed2bde05aa27663e10d"
        ],
        [
            "simpl; apply H; apply le_n.",
            "VernacExtend",
            "17aa140c8215a6bf11fcfcb9ac867d4d6d1bc448"
        ],
        [
            "simpl; apply Rplus_lt_0_compat.",
            "VernacExtend",
            "55586cde02b9a74ea4711d2fff18e8406454310e"
        ],
        [
            "apply HrecN; intros; apply H; apply le_S; assumption.",
            "VernacExtend",
            "e6f6248e609d4b1f71b271905c5cefd1cc42f6b2"
        ],
        [
            "apply H; apply le_n.",
            "VernacExtend",
            "4fcfa6c3b8354852210bcb5cf4ce4c51acba106e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech2 : forall (An:nat -> R) (m n:nat), (m < n)%nat -> sum_f_R0 An n = sum_f_R0 An m + sum_f_R0 (fun i:nat => An (S m + i)%nat) (n - S m).",
            "VernacStartTheoremProof",
            "55c026cb698a673f7ff902881175603b6ffa6680"
        ],
        [
            "intros; induction n as [| n Hrecn].",
            "VernacExtend",
            "d8127da965164ab3db77421604b758d5eb34a150"
        ],
        [
            "elim (lt_n_O _ H).",
            "VernacExtend",
            "b93451b1a30fa3f24613ad7b0441907b3427a80f"
        ],
        [
            "cut ((m < n)%nat \\/ m = n).",
            "VernacExtend",
            "f473653b85664b22020c1278b53218feb2fe3d20"
        ],
        [
            "intro; elim H0; intro.",
            "VernacExtend",
            "80080ee26acf8bd4a9a5fd9e7b831121caff4c52"
        ],
        [
            "replace (sum_f_R0 An (S n)) with (sum_f_R0 An n + An (S n)); [ idtac | reflexivity ].",
            "VernacExtend",
            "a7bc22abf9e97a7b21b267b86a2d9dee287617c4"
        ],
        [
            "replace (S n - S m)%nat with (S (n - S m)).",
            "VernacExtend",
            "50c6748fb3a90d69f0595964a2b3d0973d9cfd17"
        ],
        [
            "replace (sum_f_R0 (fun i:nat => An (S m + i)%nat) (S (n - S m))) with (sum_f_R0 (fun i:nat => An (S m + i)%nat) (n - S m) + An (S m + S (n - S m))%nat); [ idtac | reflexivity ].",
            "VernacExtend",
            "8934e5d36e5bcb49a187aeff64edda55913e2c4d"
        ],
        [
            "replace (S m + S (n - S m))%nat with (S n).",
            "VernacExtend",
            "5660db2fff246b178c764249a8abfc89b485d4bf"
        ],
        [
            "rewrite (Hrecn H1).",
            "VernacExtend",
            "7e7b1f6282a77e5bbb8ba226136eb8f45dce1225"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply INR_eq; rewrite S_INR; rewrite plus_INR; do 2 rewrite S_INR; rewrite minus_INR.",
            "VernacExtend",
            "d3cf8097c6c61acdac77b5e42160f70673bd8397"
        ],
        [
            "rewrite S_INR; ring.",
            "VernacExtend",
            "ed95ed2e0a848af68b535fdf26d8cb51f56546bd"
        ],
        [
            "apply lt_le_S; assumption.",
            "VernacExtend",
            "3b8f08f818b2786b96cf9f3daadbb5ad3e94f1cb"
        ],
        [
            "apply INR_eq; rewrite S_INR; repeat rewrite minus_INR.",
            "VernacExtend",
            "9a26d6defc40388c5edf21762b19638607b907d2"
        ],
        [
            "repeat rewrite S_INR; ring.",
            "VernacExtend",
            "7f9fb2569484e342661418bbdc43c13a93e7f52b"
        ],
        [
            "apply le_n_S; apply lt_le_weak; assumption.",
            "VernacExtend",
            "10f62fb628701f43a01920ce9a616996e718a0dc"
        ],
        [
            "apply lt_le_S; assumption.",
            "VernacExtend",
            "3b8f08f818b2786b96cf9f3daadbb5ad3e94f1cb"
        ],
        [
            "rewrite H1; rewrite <- minus_n_n; simpl.",
            "VernacExtend",
            "0dce206500f27f80e106b90baaa6c49ebad59e40"
        ],
        [
            "replace (n + 0)%nat with n; [ reflexivity | ring ].",
            "VernacExtend",
            "da44939d6d6d9840ed605d86ac023fe7f46f48f0"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "right; reflexivity.",
            "VernacExtend",
            "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
        ],
        [
            "left; apply lt_le_trans with (S m); [ apply lt_n_Sn | assumption ].",
            "VernacExtend",
            "5aedc0ee17c867a299cd502587576c563fd17f7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech3 : forall (k:R) (N:nat), k <> 1 -> sum_f_R0 (fun i:nat => k ^ i) N = (1 - k ^ S N) / (1 - k).",
            "VernacStartTheoremProof",
            "519ce91a42df37398e5a8da25be568496d30aa35"
        ],
        [
            "intros; cut (1 - k <> 0).",
            "VernacExtend",
            "fef48adc02cdfd1e37b94407877b73727c6fbf44"
        ],
        [
            "intro; induction N as [| N HrecN].",
            "VernacExtend",
            "6d38c437f2c86eef6aa81407f6f746cb454c2246"
        ],
        [
            "simpl; rewrite Rmult_1_r; unfold Rdiv; rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "fbe016890e7db95a3f9f7e8f1ae4cef508ad4e8a"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "replace (sum_f_R0 (fun i:nat => k ^ i) (S N)) with (sum_f_R0 (fun i:nat => k ^ i) N + k ^ S N); [ idtac | reflexivity ]; rewrite HrecN; replace ((1 - k ^ S N) / (1 - k) + k ^ S N) with ((1 - k ^ S N + (1 - k) * k ^ S N) / (1 - k)).",
            "VernacExtend",
            "39d7f2c6fd4f836b42008850bf045c9808631dba"
        ],
        [
            "apply Rmult_eq_reg_l with (1 - k).",
            "VernacExtend",
            "3e64002481bf4bc681858de2262ab0ff57677d39"
        ],
        [
            "unfold Rdiv; do 2 rewrite <- (Rmult_comm (/ (1 - k))); repeat rewrite <- Rmult_assoc; rewrite <- Rinv_r_sym; [ do 2 rewrite Rmult_1_l; simpl; ring | apply H0 ].",
            "VernacExtend",
            "7b13293d7f91373bd3ac1797a5a50e6f867769b0"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "unfold Rdiv; rewrite Rmult_plus_distr_r; rewrite (Rmult_comm (1 - k)); repeat rewrite Rmult_assoc; rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "6e09c5e5341620c2f44a18135916eeaf827749ac"
        ],
        [
            "rewrite Rmult_1_r; reflexivity.",
            "VernacExtend",
            "48cf3ea63852e7c9eb06f376d7f6115fee3b3148"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply Rminus_eq_contra; red; intro; elim H; symmetry ; assumption.",
            "VernacExtend",
            "9b3039f23773a232c820854d1b40f820fc9648a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech4 : forall (An:nat -> R) (k:R) (N:nat), 0 <= k -> (forall i:nat, An (S i) < k * An i) -> An N <= An 0%nat * k ^ N.",
            "VernacStartTheoremProof",
            "e7571aab3be0048e2ad8624018e65fb28294bc71"
        ],
        [
            "intros; induction N as [| N HrecN].",
            "VernacExtend",
            "176c4a7e299087f2a01baed2bde05aa27663e10d"
        ],
        [
            "simpl; right; ring.",
            "VernacExtend",
            "0fc361392d0dc9fae8e69069f63c68cacc466f1b"
        ],
        [
            "apply Rle_trans with (k * An N).",
            "VernacExtend",
            "773b08c8110e3630e0c48e18d3c4727ec717edba"
        ],
        [
            "left; apply (H0 N).",
            "VernacExtend",
            "c1ff7f8c6ca1faec5cf2b1c05a8e6c4d1deb55f1"
        ],
        [
            "replace (S N) with (N + 1)%nat; [ idtac | ring ].",
            "VernacExtend",
            "95a5b326936768d3f1f8aedaef7bb4dbc3a24c8a"
        ],
        [
            "rewrite pow_add; simpl; rewrite Rmult_1_r; replace (An 0%nat * (k ^ N * k)) with (k * (An 0%nat * k ^ N)); [ idtac | ring ]; apply Rmult_le_compat_l.",
            "VernacExtend",
            "000e99ee8ded232b87a5c218b21a38719b06e608"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply HrecN.",
            "VernacExtend",
            "ec9b348a0961f8ea4434987bb268364b3d8f639c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech5 : forall (An:nat -> R) (N:nat), sum_f_R0 An (S N) = sum_f_R0 An N + An (S N).",
            "VernacStartTheoremProof",
            "1182aefbd030eb51be2bc11febc54f2b61a05a2d"
        ],
        [
            "intros; reflexivity.",
            "VernacExtend",
            "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech6 : forall (An:nat -> R) (k:R) (N:nat), 0 <= k -> (forall i:nat, An (S i) < k * An i) -> sum_f_R0 An N <= An 0%nat * sum_f_R0 (fun i:nat => k ^ i) N.",
            "VernacStartTheoremProof",
            "4553b81de0caf5508aae48d264190c52c52c49d3"
        ],
        [
            "intros; induction N as [| N HrecN].",
            "VernacExtend",
            "176c4a7e299087f2a01baed2bde05aa27663e10d"
        ],
        [
            "simpl; right; ring.",
            "VernacExtend",
            "0fc361392d0dc9fae8e69069f63c68cacc466f1b"
        ],
        [
            "apply Rle_trans with (An 0%nat * sum_f_R0 (fun i:nat => k ^ i) N + An (S N)).",
            "VernacExtend",
            "e327411a2f8c6742da21ece58bc5e521f0d17d20"
        ],
        [
            "rewrite tech5; do 2 rewrite <- (Rplus_comm (An (S N))); apply Rplus_le_compat_l.",
            "VernacExtend",
            "87d1a5f28d4f1505d3e861568c7dc50d33e26874"
        ],
        [
            "apply HrecN.",
            "VernacExtend",
            "ec9b348a0961f8ea4434987bb268364b3d8f639c"
        ],
        [
            "rewrite tech5; rewrite Rmult_plus_distr_l; apply Rplus_le_compat_l.",
            "VernacExtend",
            "4a121b13c986521adeb2544e0b787aa1926755dc"
        ],
        [
            "apply tech4; assumption.",
            "VernacExtend",
            "cb85d6b76c319c0e9351c3c5ecd1f932e84e074a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech7 : forall r1 r2:R, r1 <> 0 -> r2 <> 0 -> r1 <> r2 -> / r1 <> / r2.",
            "VernacStartTheoremProof",
            "baf67f6dd9a0e57aab80a785431606b9601ca9af"
        ],
        [
            "intros; red; intro.",
            "VernacExtend",
            "8efb0e8eb13e9c212c108e6c3da452eb08ee81d1"
        ],
        [
            "assert (H3 := Rmult_eq_compat_l r1 _ _ H2).",
            "VernacExtend",
            "bdbc3a427b363ed60cee53eb326df734fe520757"
        ],
        [
            "rewrite <- Rinv_r_sym in H3; [ idtac | assumption ].",
            "VernacExtend",
            "c68e5cd2b81b2afab45dae7baca3b329cb5ed4b1"
        ],
        [
            "assert (H4 := Rmult_eq_compat_l r2 _ _ H3).",
            "VernacExtend",
            "ea918f7ff4d753aa7b19f474e305ba453c797e36"
        ],
        [
            "rewrite Rmult_1_r in H4; rewrite <- Rmult_assoc in H4.",
            "VernacExtend",
            "1de88863896d69fec7418398cb3026dfaf3d91d8"
        ],
        [
            "rewrite Rinv_r_simpl_m in H4; [ idtac | assumption ].",
            "VernacExtend",
            "012e1167c9d0cea9a9f64dec66c449ee31c9a2c9"
        ],
        [
            "elim H1; symmetry ; assumption.",
            "VernacExtend",
            "3c84f2cd3e3366fb0f2296c20ecf1f779fcbd81e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech11 : forall (An Bn Cn:nat -> R) (N:nat), (forall i:nat, An i = Bn i - Cn i) -> sum_f_R0 An N = sum_f_R0 Bn N - sum_f_R0 Cn N.",
            "VernacStartTheoremProof",
            "1f133c9eb08af9fd5e991455ea42555689603723"
        ],
        [
            "intros; induction N as [| N HrecN].",
            "VernacExtend",
            "176c4a7e299087f2a01baed2bde05aa27663e10d"
        ],
        [
            "simpl; apply H.",
            "VernacExtend",
            "3410d91927336a4dd1f499cdd5b70bdccaeed032"
        ],
        [
            "do 3 rewrite tech5; rewrite HrecN; rewrite (H (S N)); ring.",
            "VernacExtend",
            "1fb874e0849c6a30d3654b5632ec532877e0ff2e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech12 : forall (An:nat -> R) (x l:R), Un_cv (fun N:nat => sum_f_R0 (fun i:nat => An i * x ^ i) N) l -> Pser An x l.",
            "VernacStartTheoremProof",
            "f28d24f32f09076eeff190793b4fda2b8431c037"
        ],
        [
            "intros; unfold Pser; unfold infinite_sum; unfold Un_cv in H; assumption.",
            "VernacExtend",
            "90c723c1c28afa45ab3d292c08826b8d222357cf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma scal_sum : forall (An:nat -> R) (N:nat) (x:R), x * sum_f_R0 An N = sum_f_R0 (fun i:nat => An i * x) N.",
            "VernacStartTheoremProof",
            "09f2a84084f7933090430ce5cff6e6c54890f589"
        ],
        [
            "intros; induction N as [| N HrecN].",
            "VernacExtend",
            "176c4a7e299087f2a01baed2bde05aa27663e10d"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "do 2 rewrite tech5.",
            "VernacExtend",
            "7137a2d56f2d10d297d9522e92210582066693b3"
        ],
        [
            "rewrite Rmult_plus_distr_l; rewrite <- HrecN; ring.",
            "VernacExtend",
            "2b18a2692434c0b1989fdc0bfbb6a552df79ab30"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma decomp_sum : forall (An:nat -> R) (N:nat), (0 < N)%nat -> sum_f_R0 An N = An 0%nat + sum_f_R0 (fun i:nat => An (S i)) (pred N).",
            "VernacStartTheoremProof",
            "ff6b4c164e671dfd05e12f3db4c53d5a09a7c0aa"
        ],
        [
            "intros; induction N as [| N HrecN].",
            "VernacExtend",
            "176c4a7e299087f2a01baed2bde05aa27663e10d"
        ],
        [
            "elim (lt_irrefl _ H).",
            "VernacExtend",
            "fc90b77317c333bc64634f7cf1eecc8648bc7dc4"
        ],
        [
            "cut ((0 < N)%nat \\/ N = 0%nat).",
            "VernacExtend",
            "5f633aecef9688662d36591ee8c5d1dc883cb951"
        ],
        [
            "intro; elim H0; intro.",
            "VernacExtend",
            "80080ee26acf8bd4a9a5fd9e7b831121caff4c52"
        ],
        [
            "cut (S (pred N) = pred (S N)).",
            "VernacExtend",
            "60be3a8487940edff4c452374713f24f937e8468"
        ],
        [
            "intro; rewrite <- H2.",
            "VernacExtend",
            "5514609be7a90490a38fab494b300075c32fdcb6"
        ],
        [
            "do 2 rewrite tech5.",
            "VernacExtend",
            "7137a2d56f2d10d297d9522e92210582066693b3"
        ],
        [
            "replace (S (S (pred N))) with (S N).",
            "VernacExtend",
            "6d74082f2f76bf267304fe2a1b8492426c987c89"
        ],
        [
            "rewrite (HrecN H1); ring.",
            "VernacExtend",
            "2c9c7899a10a38b32460878e42d2a9458f6c50f0"
        ],
        [
            "rewrite H2; simpl; reflexivity.",
            "VernacExtend",
            "3a32774ad56869436612026a1cb078a5c6abf92b"
        ],
        [
            "destruct (O_or_S N) as [(m,<-)|<-].",
            "VernacExtend",
            "46a759c6617baaefdbc9ec506e5e06dfb2b276b0"
        ],
        [
            "simpl; reflexivity.",
            "VernacExtend",
            "929257572def0332e6c079b4ed3a916720086e3a"
        ],
        [
            "elim (lt_irrefl _ H1).",
            "VernacExtend",
            "fc6f510f36b4d16133ceb844f761dc0f4e1fe94c"
        ],
        [
            "rewrite H1; simpl; reflexivity.",
            "VernacExtend",
            "e1f0c96ae9c09d978057e06f716a53423fcb3517"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "right; reflexivity.",
            "VernacExtend",
            "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
        ],
        [
            "left; apply lt_le_trans with 1%nat; [ apply lt_O_Sn | assumption ].",
            "VernacExtend",
            "0ad66c526c9190005017f99fc1dfe32b75de36e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plus_sum : forall (An Bn:nat -> R) (N:nat), sum_f_R0 (fun i:nat => An i + Bn i) N = sum_f_R0 An N + sum_f_R0 Bn N.",
            "VernacStartTheoremProof",
            "dff5fa6e384f3ca8428a00a46858c167be098f45"
        ],
        [
            "intros; induction N as [| N HrecN].",
            "VernacExtend",
            "176c4a7e299087f2a01baed2bde05aa27663e10d"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "do 3 rewrite tech5; rewrite HrecN; ring.",
            "VernacExtend",
            "501bc86fef89a0297503bdbeeaccd99b8e251ed6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_eq : forall (An Bn:nat -> R) (N:nat), (forall i:nat, (i <= N)%nat -> An i = Bn i) -> sum_f_R0 An N = sum_f_R0 Bn N.",
            "VernacStartTheoremProof",
            "ff00a559de97a4df0d9464bd9d4095ded19791a4"
        ],
        [
            "intros; induction N as [| N HrecN].",
            "VernacExtend",
            "176c4a7e299087f2a01baed2bde05aa27663e10d"
        ],
        [
            "simpl; apply H; apply le_n.",
            "VernacExtend",
            "17aa140c8215a6bf11fcfcb9ac867d4d6d1bc448"
        ],
        [
            "do 2 rewrite tech5; rewrite HrecN.",
            "VernacExtend",
            "96efc8c3bb968da0f374eb4cfb3b4b6587e1edbc"
        ],
        [
            "rewrite (H (S N)); [ reflexivity | apply le_n ].",
            "VernacExtend",
            "9b78984985f815ff60fc295decd37352c6714c40"
        ],
        [
            "intros; apply H; apply le_trans with N; [ assumption | apply le_n_Sn ].",
            "VernacExtend",
            "72af6ceea219691e39b9688aaa7cde4407e2fe41"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma uniqueness_sum : forall (An:nat -> R) (l1 l2:R), infinite_sum An l1 -> infinite_sum An l2 -> l1 = l2.",
            "VernacStartTheoremProof",
            "b2fb9d41b357ae07ce627ad45c49da4021edf4f2"
        ],
        [
            "unfold infinite_sum; intros.",
            "VernacExtend",
            "48101983abc0ebd3d4aaeb4211e14b2c0945ca76"
        ],
        [
            "case (Req_dec l1 l2); intro.",
            "VernacExtend",
            "229147419a140344f41cc599522a3304d0faf9d7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "cut (0 < Rabs ((l1 - l2) / 2)); [ intro | apply Rabs_pos_lt ].",
            "VernacExtend",
            "0d6081c4b8a66df363a91d0dfb85027e5b6ba71c"
        ],
        [
            "elim (H (Rabs ((l1 - l2) / 2)) H2); intros.",
            "VernacExtend",
            "ca12e38a3ab24990edba3995c24942376fb5df8b"
        ],
        [
            "elim (H0 (Rabs ((l1 - l2) / 2)) H2); intros.",
            "VernacExtend",
            "779d1b150602ec81c83602a000a6e6ab3c8708fd"
        ],
        [
            "set (N := max x0 x); cut (N >= x0)%nat.",
            "VernacExtend",
            "bb9d9d7d9cf36f2c5a4745633d341b74452aee7c"
        ],
        [
            "cut (N >= x)%nat.",
            "VernacExtend",
            "e0625c4eb5f7f59dbe1be577265ab9919d1eb19a"
        ],
        [
            "intros; assert (H7 := H3 N H5); assert (H8 := H4 N H6).",
            "VernacExtend",
            "415ad4f9b4d5bb6b2e8479c7937fb83355b8db8a"
        ],
        [
            "cut (Rabs (l1 - l2) <= R_dist (sum_f_R0 An N) l1 + R_dist (sum_f_R0 An N) l2).",
            "VernacExtend",
            "ef37056f2bed1e26ba510ef9b502575e78d0a30e"
        ],
        [
            "intro; assert (H10 := Rplus_lt_compat _ _ _ _ H7 H8); assert (H11 := Rle_lt_trans _ _ _ H9 H10); unfold Rdiv in H11; rewrite Rabs_mult in H11.",
            "VernacExtend",
            "a130bd1f3d208191a636a009d38b8f83c879852a"
        ],
        [
            "cut (Rabs (/ 2) = / 2).",
            "VernacExtend",
            "e908cb22a4490aa83b79b0b04f44685ec295653e"
        ],
        [
            "intro; rewrite H12 in H11; assert (H13 := double_var); unfold Rdiv in H13; rewrite <- H13 in H11.",
            "VernacExtend",
            "2f050b83ef4d4bccdd5a386f333ee21abddeaf81"
        ],
        [
            "elim (Rlt_irrefl _ H11).",
            "VernacExtend",
            "b30df9b871aae7250a34689139892da3602f701d"
        ],
        [
            "apply Rabs_right; left; change (0 < / 2); apply Rinv_0_lt_compat; cut (0%nat <> 2%nat); [ intro H20; generalize (lt_INR_0 2 (neq_O_lt 2 H20)); unfold INR; intro; assumption | discriminate ].",
            "VernacExtend",
            "bada095838412c59fd4a35217f847bccd3d65c00"
        ],
        [
            "unfold R_dist; rewrite <- (Rabs_Ropp (sum_f_R0 An N - l1)); rewrite Ropp_minus_distr'.",
            "VernacExtend",
            "1876c4580a0be326616e5c6ccaf85cc882681d0d"
        ],
        [
            "replace (l1 - l2) with (l1 - sum_f_R0 An N + (sum_f_R0 An N - l2)); [ idtac | ring ].",
            "VernacExtend",
            "ae038631bf88b23ac61ba2393455696be4be9372"
        ],
        [
            "apply Rabs_triang.",
            "VernacExtend",
            "ac95e0693bced827aa4991eb13639b86503a8150"
        ],
        [
            "unfold ge; unfold N; apply le_max_r.",
            "VernacExtend",
            "b842d09864104d1e1cbfddbbdcee1599c182b70e"
        ],
        [
            "unfold ge; unfold N; apply le_max_l.",
            "VernacExtend",
            "fbe0a3e926fa04a3774e2281929911b977eecaeb"
        ],
        [
            "unfold Rdiv; apply prod_neq_R0.",
            "VernacExtend",
            "bae86043f3acfd4aeb1f77f1138e1172ace3c7fa"
        ],
        [
            "apply Rminus_eq_contra; assumption.",
            "VernacExtend",
            "65013262fb54300c4f559099e46f29e9822447d6"
        ],
        [
            "apply Rinv_neq_0_compat; discrR.",
            "VernacExtend",
            "c996ce35ba9924ff499f316d0fb3eaf573a9e988"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma minus_sum : forall (An Bn:nat -> R) (N:nat), sum_f_R0 (fun i:nat => An i - Bn i) N = sum_f_R0 An N - sum_f_R0 Bn N.",
            "VernacStartTheoremProof",
            "7ed106f070cbe492c385d2359e2c34ef51d73fbc"
        ],
        [
            "intros; induction N as [| N HrecN].",
            "VernacExtend",
            "176c4a7e299087f2a01baed2bde05aa27663e10d"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "do 3 rewrite tech5; rewrite HrecN; ring.",
            "VernacExtend",
            "501bc86fef89a0297503bdbeeaccd99b8e251ed6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_decomposition : forall (An:nat -> R) (N:nat), sum_f_R0 (fun l:nat => An (2 * l)%nat) (S N) + sum_f_R0 (fun l:nat => An (S (2 * l))) N = sum_f_R0 An (2 * S N).",
            "VernacStartTheoremProof",
            "9507db36a500a04f65d3c851adbc3f6948b7f63f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction N as [| N HrecN].",
            "VernacExtend",
            "af1041d02474f2c80c55a680ec1503779a0c4570"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "rewrite tech5.",
            "VernacExtend",
            "9868999d015d8d25987acdadb308fadae9d59e4a"
        ],
        [
            "rewrite (tech5 (fun l:nat => An (S (2 * l))) N).",
            "VernacExtend",
            "893bbc5971390a8b0eb91bd5c2b0328d5c24ad01"
        ],
        [
            "replace (2 * S (S N))%nat with (S (S (2 * S N))).",
            "VernacExtend",
            "37f9bb781011b414d68a5c76797a8f9bfe4404ab"
        ],
        [
            "rewrite (tech5 An (S (2 * S N))).",
            "VernacExtend",
            "872361c4a7b5cfe2d536ac48b925059ae434e5e3"
        ],
        [
            "rewrite (tech5 An (2 * S N)).",
            "VernacExtend",
            "624a9ec6bdb1cc247c4000a2c1264f38c248525a"
        ],
        [
            "rewrite <- HrecN.",
            "VernacExtend",
            "5a5b82c4983bf245eacb360d0a4815211843bbf1"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_Rle : forall (An Bn:nat -> R) (N:nat), (forall n:nat, (n <= N)%nat -> An n <= Bn n) -> sum_f_R0 An N <= sum_f_R0 Bn N.",
            "VernacStartTheoremProof",
            "c6afe12c42fa9a5999f53791a5461483110360d1"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction N as [| N HrecN].",
            "VernacExtend",
            "af1041d02474f2c80c55a680ec1503779a0c4570"
        ],
        [
            "simpl; apply H.",
            "VernacExtend",
            "3410d91927336a4dd1f499cdd5b70bdccaeed032"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "do 2 rewrite tech5.",
            "VernacExtend",
            "7137a2d56f2d10d297d9522e92210582066693b3"
        ],
        [
            "apply Rle_trans with (sum_f_R0 An N + Bn (S N)).",
            "VernacExtend",
            "736578d367ab15111ff99e48c7438f33df88592b"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply le_n.",
            "VernacExtend",
            "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
        ],
        [
            "do 2 rewrite <- (Rplus_comm (Bn (S N))).",
            "VernacExtend",
            "d961b7c4db88f1e126306fed04ee319fe354c830"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "apply HrecN.",
            "VernacExtend",
            "ec9b348a0961f8ea4434987bb268364b3d8f639c"
        ],
        [
            "intros; apply H.",
            "VernacExtend",
            "b7bca165a275b11a76ba06a5f07157259bedeabd"
        ],
        [
            "apply le_trans with N; [ assumption | apply le_n_Sn ].",
            "VernacExtend",
            "1aa48b0d1a3194c938aec0991fe7680aebe1ee08"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rsum_abs : forall (An:nat -> R) (N:nat), Rabs (sum_f_R0 An N) <= sum_f_R0 (fun l:nat => Rabs (An l)) N.",
            "VernacStartTheoremProof",
            "d07f6daae93d0aa4b51df24059d0be8dc1e98e26"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction N as [| N HrecN].",
            "VernacExtend",
            "af1041d02474f2c80c55a680ec1503779a0c4570"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "right; reflexivity.",
            "VernacExtend",
            "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
        ],
        [
            "do 2 rewrite tech5.",
            "VernacExtend",
            "7137a2d56f2d10d297d9522e92210582066693b3"
        ],
        [
            "apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))).",
            "VernacExtend",
            "ce18819592a17892163f9947e2ce88b6496fda97"
        ],
        [
            "apply Rabs_triang.",
            "VernacExtend",
            "ac95e0693bced827aa4991eb13639b86503a8150"
        ],
        [
            "do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))).",
            "VernacExtend",
            "33a0efcf15e2ddf910d05f042a8f37859521729a"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "apply HrecN.",
            "VernacExtend",
            "ec9b348a0961f8ea4434987bb268364b3d8f639c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_cte : forall (x:R) (N:nat), sum_f_R0 (fun _:nat => x) N = x * INR (S N).",
            "VernacStartTheoremProof",
            "a0aa1a6cea42aa574fb729bcbffb1d442252cf18"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction N as [| N HrecN].",
            "VernacExtend",
            "af1041d02474f2c80c55a680ec1503779a0c4570"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "rewrite tech5.",
            "VernacExtend",
            "9868999d015d8d25987acdadb308fadae9d59e4a"
        ],
        [
            "rewrite HrecN; repeat rewrite S_INR; ring.",
            "VernacExtend",
            "64ce5d071541018336c73a8142308451dec9f687"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_growing : forall (An Bn:nat -> R) (N:nat), (forall n:nat, An n <= Bn n) -> sum_f_R0 An N <= sum_f_R0 Bn N.",
            "VernacStartTheoremProof",
            "6771ff54708c6eb3df66ce6ab77750c66f56393e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction N as [| N HrecN].",
            "VernacExtend",
            "af1041d02474f2c80c55a680ec1503779a0c4570"
        ],
        [
            "simpl; apply H.",
            "VernacExtend",
            "3410d91927336a4dd1f499cdd5b70bdccaeed032"
        ],
        [
            "do 2 rewrite tech5.",
            "VernacExtend",
            "7137a2d56f2d10d297d9522e92210582066693b3"
        ],
        [
            "apply Rle_trans with (sum_f_R0 An N + Bn (S N)).",
            "VernacExtend",
            "736578d367ab15111ff99e48c7438f33df88592b"
        ],
        [
            "apply Rplus_le_compat_l; apply H.",
            "VernacExtend",
            "c3d18f27d4e148c65b75dfd7783905283ebfc73c"
        ],
        [
            "do 2 rewrite <- (Rplus_comm (Bn (S N))).",
            "VernacExtend",
            "d961b7c4db88f1e126306fed04ee319fe354c830"
        ],
        [
            "apply Rplus_le_compat_l; apply HrecN.",
            "VernacExtend",
            "73cce5ca6c68c711ba714292bc0e0eb96281fb6b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rabs_triang_gen : forall (An:nat -> R) (N:nat), Rabs (sum_f_R0 An N) <= sum_f_R0 (fun i:nat => Rabs (An i)) N.",
            "VernacStartTheoremProof",
            "c180f53309a9d6e425dcd4ff8e684ae9bb80f7d6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction N as [| N HrecN].",
            "VernacExtend",
            "af1041d02474f2c80c55a680ec1503779a0c4570"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "right; reflexivity.",
            "VernacExtend",
            "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
        ],
        [
            "do 2 rewrite tech5.",
            "VernacExtend",
            "7137a2d56f2d10d297d9522e92210582066693b3"
        ],
        [
            "apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))).",
            "VernacExtend",
            "ce18819592a17892163f9947e2ce88b6496fda97"
        ],
        [
            "apply Rabs_triang.",
            "VernacExtend",
            "ac95e0693bced827aa4991eb13639b86503a8150"
        ],
        [
            "do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))).",
            "VernacExtend",
            "33a0efcf15e2ddf910d05f042a8f37859521729a"
        ],
        [
            "apply Rplus_le_compat_l; apply HrecN.",
            "VernacExtend",
            "73cce5ca6c68c711ba714292bc0e0eb96281fb6b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cond_pos_sum : forall (An:nat -> R) (N:nat), (forall n:nat, 0 <= An n) -> 0 <= sum_f_R0 An N.",
            "VernacStartTheoremProof",
            "e02e5404dd6e9247c14f4fbc5771317461977def"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction N as [| N HrecN].",
            "VernacExtend",
            "af1041d02474f2c80c55a680ec1503779a0c4570"
        ],
        [
            "simpl; apply H.",
            "VernacExtend",
            "3410d91927336a4dd1f499cdd5b70bdccaeed032"
        ],
        [
            "rewrite tech5.",
            "VernacExtend",
            "9868999d015d8d25987acdadb308fadae9d59e4a"
        ],
        [
            "apply Rplus_le_le_0_compat.",
            "VernacExtend",
            "f2a4bb243ad7dc4026e4f9c4fede7e10c9e27124"
        ],
        [
            "apply HrecN.",
            "VernacExtend",
            "ec9b348a0961f8ea4434987bb268364b3d8f639c"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Cauchy_crit_series (An:nat -> R) : Prop := Cauchy_crit (fun N:nat => sum_f_R0 An N).",
            "VernacDefinition",
            "706f6db7583f150473279fed8cb503aeb741604f"
        ],
        [
            "Lemma cauchy_abs : forall An:nat -> R, Cauchy_crit_series (fun i:nat => Rabs (An i)) -> Cauchy_crit_series An.",
            "VernacStartTheoremProof",
            "c9bdab1ad76eaa663a35abe4dd7ac753075a3caf"
        ],
        [
            "unfold Cauchy_crit_series; unfold Cauchy_crit.",
            "VernacExtend",
            "23ef85f5e43536b79eb7d529d23962b4b49f1cf0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (H eps H0); intros.",
            "VernacExtend",
            "ace4b126c6608622fb1152df39f2724078d34d25"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (R_dist (sum_f_R0 An n) (sum_f_R0 An m) <= R_dist (sum_f_R0 (fun i:nat => Rabs (An i)) n) (sum_f_R0 (fun i:nat => Rabs (An i)) m)).",
            "VernacExtend",
            "0600d808a79509e1a1fa075d75bec78fb09813fc"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply Rle_lt_trans with (R_dist (sum_f_R0 (fun i:nat => Rabs (An i)) n) (sum_f_R0 (fun i:nat => Rabs (An i)) m)).",
            "VernacExtend",
            "9d0149c3ba20779df77b157b8186275a16dab39d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply H1; assumption.",
            "VernacExtend",
            "fad0ef9dccdc207ba48ae84d9c57202bcc0d529f"
        ],
        [
            "destruct (lt_eq_lt_dec n m) as [[ | -> ]|].",
            "VernacExtend",
            "0675e8452fba108dc1d092ce88adcb27ae1da3c3"
        ],
        [
            "rewrite (tech2 An n m); [ idtac | assumption ].",
            "VernacExtend",
            "4df428b0a9f56d5068ea6b10c2772868a46be2a7"
        ],
        [
            "rewrite (tech2 (fun i:nat => Rabs (An i)) n m); [ idtac | assumption ].",
            "VernacExtend",
            "551db7fe08931534ab428adf83b060eadcbf0881"
        ],
        [
            "unfold R_dist.",
            "VernacExtend",
            "9d14879a55d02ad54565968e31b64da7aeb66d97"
        ],
        [
            "unfold Rminus.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "do 2 rewrite Ropp_plus_distr.",
            "VernacExtend",
            "dd5458b5846fb9892f09f8712856cfa1e1cd3a57"
        ],
        [
            "do 2 rewrite <- Rplus_assoc.",
            "VernacExtend",
            "745b21d30e4e309e4915856e0254116402978ade"
        ],
        [
            "do 2 rewrite Rplus_opp_r.",
            "VernacExtend",
            "2113b0fce3c907f9e202f566771b5f57d7ce7688"
        ],
        [
            "do 2 rewrite Rplus_0_l.",
            "VernacExtend",
            "f204bd84a6aa933bcb1861af738e20b3b66764cc"
        ],
        [
            "do 2 rewrite Rabs_Ropp.",
            "VernacExtend",
            "5430e72b2eef12e57449e947958069a93ac50af0"
        ],
        [
            "rewrite (Rabs_right (sum_f_R0 (fun i:nat => Rabs (An (S n + i)%nat)) (m - S n))) .",
            "VernacExtend",
            "4e69ac69222bccde66b2d2e8c4f60081b75a6d60"
        ],
        [
            "set (Bn := fun i:nat => An (S n + i)%nat).",
            "VernacExtend",
            "e14d078ccabb418d0da7e1dd9cb2c4049f7f993c"
        ],
        [
            "replace (fun i:nat => Rabs (An (S n + i)%nat)) with (fun i:nat => Rabs (Bn i)).",
            "VernacExtend",
            "9750427d4ea329fe50e99edbce350042fb54a62a"
        ],
        [
            "apply Rabs_triang_gen.",
            "VernacExtend",
            "2c559914d139743baa5d316a8301696a5fc1adc7"
        ],
        [
            "unfold Bn; reflexivity.",
            "VernacExtend",
            "b16c67d5ad7f2a52f435a4611cef56ff0dd1c1f8"
        ],
        [
            "apply Rle_ge.",
            "VernacExtend",
            "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
        ],
        [
            "apply cond_pos_sum.",
            "VernacExtend",
            "380297aa8e6ba85321b71c04af05921e27e72dd6"
        ],
        [
            "intro; apply Rabs_pos.",
            "VernacExtend",
            "c22a03ac2101c9e1f8bb586345faaee764de726c"
        ],
        [
            "unfold R_dist.",
            "VernacExtend",
            "9d14879a55d02ad54565968e31b64da7aeb66d97"
        ],
        [
            "unfold Rminus; do 2 rewrite Rplus_opp_r.",
            "VernacExtend",
            "f1d748bbd380138bc1168fe5ecd4f86c24c6665c"
        ],
        [
            "rewrite Rabs_R0; right; reflexivity.",
            "VernacExtend",
            "0947ed1e522f8fa81b5f34d31f8cf416f9f3447b"
        ],
        [
            "rewrite (tech2 An m n); [ idtac | assumption ].",
            "VernacExtend",
            "cc4acd6cbfdf3c2b01db63479557cc691a331ee3"
        ],
        [
            "rewrite (tech2 (fun i:nat => Rabs (An i)) m n); [ idtac | assumption ].",
            "VernacExtend",
            "a01329b67b7171833c71603e5005e28a64cb59d9"
        ],
        [
            "unfold R_dist.",
            "VernacExtend",
            "9d14879a55d02ad54565968e31b64da7aeb66d97"
        ],
        [
            "unfold Rminus.",
            "VernacExtend",
            "be913ef3bb9103a3081d46d811769f83edb6f7a5"
        ],
        [
            "do 2 rewrite Rplus_assoc.",
            "VernacExtend",
            "42d088eb00acaed1231f85ce397e2d662e2f5744"
        ],
        [
            "rewrite (Rplus_comm (sum_f_R0 An m)).",
            "VernacExtend",
            "dccae620d8c73a297f31bcfdd544241dbee945d1"
        ],
        [
            "rewrite (Rplus_comm (sum_f_R0 (fun i:nat => Rabs (An i)) m)).",
            "VernacExtend",
            "d01ce42dbb457ce3a60a65ca303726d563382b17"
        ],
        [
            "do 2 rewrite Rplus_assoc.",
            "VernacExtend",
            "42d088eb00acaed1231f85ce397e2d662e2f5744"
        ],
        [
            "do 2 rewrite Rplus_opp_l.",
            "VernacExtend",
            "fb2ddacc315b21cf6a2d8f2f8bfa0b0eaac7cbe5"
        ],
        [
            "do 2 rewrite Rplus_0_r.",
            "VernacExtend",
            "811d9fae6b190ca698cd3e915610ae571d2ea821"
        ],
        [
            "rewrite (Rabs_right (sum_f_R0 (fun i:nat => Rabs (An (S m + i)%nat)) (n - S m))) .",
            "VernacExtend",
            "3b6b4f21616f2756b01686eb3e1c79b3d6fba99d"
        ],
        [
            "set (Bn := fun i:nat => An (S m + i)%nat).",
            "VernacExtend",
            "1345ce5907809578bc93a3533a15b20fe58848be"
        ],
        [
            "replace (fun i:nat => Rabs (An (S m + i)%nat)) with (fun i:nat => Rabs (Bn i)).",
            "VernacExtend",
            "8df11a3bc08ede45a8610a2d2a13a969367cd9e5"
        ],
        [
            "apply Rabs_triang_gen.",
            "VernacExtend",
            "2c559914d139743baa5d316a8301696a5fc1adc7"
        ],
        [
            "unfold Bn; reflexivity.",
            "VernacExtend",
            "b16c67d5ad7f2a52f435a4611cef56ff0dd1c1f8"
        ],
        [
            "apply Rle_ge.",
            "VernacExtend",
            "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
        ],
        [
            "apply cond_pos_sum.",
            "VernacExtend",
            "380297aa8e6ba85321b71c04af05921e27e72dd6"
        ],
        [
            "intro; apply Rabs_pos.",
            "VernacExtend",
            "c22a03ac2101c9e1f8bb586345faaee764de726c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cv_cauchy_1 : forall An:nat -> R, { l:R | Un_cv (fun N:nat => sum_f_R0 An N) l } -> Cauchy_crit_series An.",
            "VernacStartTheoremProof",
            "0d0ddc30e7a2c7ceafec5e30415f1c5b6ef29b86"
        ],
        [
            "intros An (x,p).",
            "VernacExtend",
            "3653784a82e512966c6325749495e394ae33428a"
        ],
        [
            "unfold Un_cv in p.",
            "VernacExtend",
            "47320c7f1faccac57f0e3b67dc659e075d93d422"
        ],
        [
            "unfold Cauchy_crit_series; unfold Cauchy_crit.",
            "VernacExtend",
            "23ef85f5e43536b79eb7d529d23962b4b49f1cf0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (0 < eps / 2).",
            "VernacExtend",
            "d5d8cc056d52c3ef8078a56f20d37abe11587c19"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim (p (eps / 2) H0); intros.",
            "VernacExtend",
            "15880c00810dd295e66745d8c56eaff1a76d8ce9"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Rle_lt_trans with (R_dist (sum_f_R0 An n) x + R_dist (sum_f_R0 An m) x).",
            "VernacExtend",
            "ba97635f921a9010df4b882ce464ba4982cf427c"
        ],
        [
            "unfold R_dist.",
            "VernacExtend",
            "9d14879a55d02ad54565968e31b64da7aeb66d97"
        ],
        [
            "replace (sum_f_R0 An n - sum_f_R0 An m) with (sum_f_R0 An n - x + - (sum_f_R0 An m - x)); [ idtac | ring ].",
            "VernacExtend",
            "839b319da48623df2048618127de13350617f034"
        ],
        [
            "rewrite <- (Rabs_Ropp (sum_f_R0 An m - x)).",
            "VernacExtend",
            "5f54f7661feddfc99cc30a2fb458f7d48cf9b4f5"
        ],
        [
            "apply Rabs_triang.",
            "VernacExtend",
            "ac95e0693bced827aa4991eb13639b86503a8150"
        ],
        [
            "apply Rlt_le_trans with (eps / 2 + eps / 2).",
            "VernacExtend",
            "9910f7a0c1afe92f58c01b011aad47cfcacd472e"
        ],
        [
            "apply Rplus_lt_compat.",
            "VernacExtend",
            "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
        ],
        [
            "apply H1; assumption.",
            "VernacExtend",
            "fad0ef9dccdc207ba48ae84d9c57202bcc0d529f"
        ],
        [
            "apply H1; assumption.",
            "VernacExtend",
            "fad0ef9dccdc207ba48ae84d9c57202bcc0d529f"
        ],
        [
            "right; symmetry ; apply double_var.",
            "VernacExtend",
            "e5c70a44359939c92b66ebe2ece2eec94f12d2d7"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; prove_sup0 ].",
            "VernacExtend",
            "4d905fce1c75d7adfc4f1cd2deb30dbdf49bf2f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cv_cauchy_2 : forall An:nat -> R, Cauchy_crit_series An -> { l:R | Un_cv (fun N:nat => sum_f_R0 An N) l }.",
            "VernacStartTheoremProof",
            "c1685557d01c5d89ca29e040759bb37aa3666a24"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply R_complete.",
            "VernacExtend",
            "dcb930f32174920bc45278b73d2e4213a2863c4f"
        ],
        [
            "unfold Cauchy_crit_series in H.",
            "VernacExtend",
            "34edcb27438e3ce112e338f77fd34ff55d161be6"
        ],
        [
            "exact H.",
            "VernacExtend",
            "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_eq_R0 : forall (An:nat -> R) (N:nat), (forall n:nat, (n <= N)%nat -> An n = 0) -> sum_f_R0 An N = 0.",
            "VernacStartTheoremProof",
            "b3c7b1ba70578ca7d8659ccdc50fe5c812830a6f"
        ],
        [
            "intros; induction N as [| N HrecN].",
            "VernacExtend",
            "176c4a7e299087f2a01baed2bde05aa27663e10d"
        ],
        [
            "simpl; apply H; apply le_n.",
            "VernacExtend",
            "17aa140c8215a6bf11fcfcb9ac867d4d6d1bc448"
        ],
        [
            "rewrite tech5; rewrite HrecN; [ rewrite Rplus_0_l; apply H; apply le_n | intros; apply H; apply le_trans with N; [ assumption | apply le_n_Sn ] ].",
            "VernacExtend",
            "9a9f9f94165604132c60fdef4105c9b5ab3844b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition SP (fn:nat -> R -> R) (N:nat) (x:R) : R := sum_f_R0 (fun k:nat => fn k x) N.",
            "VernacDefinition",
            "4cafb678037fa5850476da9720a3e593b8150689"
        ],
        [
            "Lemma sum_incr : forall (An:nat -> R) (N:nat) (l:R), Un_cv (fun n:nat => sum_f_R0 An n) l -> (forall n:nat, 0 <= An n) -> sum_f_R0 An N <= l.",
            "VernacStartTheoremProof",
            "f63a0e4698018295022e328518074ba7fde7b8e9"
        ],
        [
            "intros; destruct (total_order_T (sum_f_R0 An N) l) as [[Hlt|Heq]|Hgt].",
            "VernacExtend",
            "e12b78701d851ee97e07080ce325afd11f1b9c50"
        ],
        [
            "left; apply Hlt.",
            "VernacExtend",
            "5c1ffc254cc21b141adef1ede710e57c1bdcfba1"
        ],
        [
            "right; apply Heq.",
            "VernacExtend",
            "8b4a7b95bd9a90a9f0ae902d9966ce25f6b048ea"
        ],
        [
            "cut (Un_growing (fun n:nat => sum_f_R0 An n)).",
            "VernacExtend",
            "a678c92f6ab22e37432c019d63722a87b242951b"
        ],
        [
            "intro; set (l1 := sum_f_R0 An N) in Hgt.",
            "VernacExtend",
            "2afa41e96fdc5c859fe234cf2ca1b67cb819c430"
        ],
        [
            "unfold Un_cv in H; cut (0 < l1 - l).",
            "VernacExtend",
            "c039e1c5ff0201bf82ef51afbccca4d5e5e87f2f"
        ],
        [
            "intro; elim (H _ H2); intros.",
            "VernacExtend",
            "3ba7cc44d7e040cc365b4ff5f2cff04816ff65d7"
        ],
        [
            "set (N0 := max x N); cut (N0 >= x)%nat.",
            "VernacExtend",
            "332dda6169ff896e72657b3a41bdc835d03506da"
        ],
        [
            "intro; assert (H5 := H3 N0 H4).",
            "VernacExtend",
            "fecffea05db1278d470c469ac1dd1a727fef67da"
        ],
        [
            "cut (l1 <= sum_f_R0 An N0).",
            "VernacExtend",
            "5e71935ca71fddbbb13f7d1d009cbf4dcc0e1144"
        ],
        [
            "intro; unfold R_dist in H5; rewrite Rabs_right in H5.",
            "VernacExtend",
            "938c752cc7e976810c9b9153622cf18aae72d242"
        ],
        [
            "cut (sum_f_R0 An N0 < l1).",
            "VernacExtend",
            "ce53895057e8b77a1a68e4e3f3f05132a4e133c9"
        ],
        [
            "intro; elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ H7 H6)).",
            "VernacExtend",
            "14946ccd80bd8920c8938612ace6b53df502090a"
        ],
        [
            "apply Rplus_lt_reg_l with (- l).",
            "VernacExtend",
            "0e7cc7ac9425ac33829f6594c8d347175dcf446f"
        ],
        [
            "do 2 rewrite (Rplus_comm (- l)).",
            "VernacExtend",
            "a722dd32a981e9c1d214a9ef3069318e8eefef17"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply Rle_ge; apply Rplus_le_reg_l with l.",
            "VernacExtend",
            "8e109d911a81369da746c8f94e494baa72b2010f"
        ],
        [
            "rewrite Rplus_0_r; replace (l + (sum_f_R0 An N0 - l)) with (sum_f_R0 An N0); [ idtac | ring ]; apply Rle_trans with l1.",
            "VernacExtend",
            "6cf7ce9d91c15ae933a255160c66cee0a6f092e9"
        ],
        [
            "left; apply Hgt.",
            "VernacExtend",
            "7913cad9687254c1e7d2142068b28a006e2fea73"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "unfold l1; apply Rge_le; apply (growing_prop (fun k:nat => sum_f_R0 An k)).",
            "VernacExtend",
            "29e056915c2487790f98c16adc90e64ed88ded1c"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "unfold ge, N0; apply le_max_r.",
            "VernacExtend",
            "c2a92b3c30d01940dd4013a0e6597dc2cce1a68e"
        ],
        [
            "unfold ge, N0; apply le_max_l.",
            "VernacExtend",
            "c71202fe8a0455008cc898d76c114c584b5eccc1"
        ],
        [
            "apply Rplus_lt_reg_l with l; rewrite Rplus_0_r; replace (l + (l1 - l)) with l1; [ apply Hgt | ring ].",
            "VernacExtend",
            "4efd7a068fd2feb2457611e91d109a3a5911aa89"
        ],
        [
            "unfold Un_growing; intro; simpl; pattern (sum_f_R0 An n) at 1; rewrite <- Rplus_0_r; apply Rplus_le_compat_l; apply H0.",
            "VernacExtend",
            "5979857562348a5a351419991dfae421ba53e8e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_cv_maj : forall (An:nat -> R) (fn:nat -> R -> R) (x l1 l2:R), Un_cv (fun n:nat => SP fn n x) l1 -> Un_cv (fun n:nat => sum_f_R0 An n) l2 -> (forall n:nat, Rabs (fn n x) <= An n) -> Rabs l1 <= l2.",
            "VernacStartTheoremProof",
            "dde91a6e748fe60cffdf4ca30baf78727aff7283"
        ],
        [
            "intros; destruct (total_order_T (Rabs l1) l2) as [[Hlt|Heq]|Hgt].",
            "VernacExtend",
            "5542310770259258e12163395992101140d12479"
        ],
        [
            "left; apply Hlt.",
            "VernacExtend",
            "5c1ffc254cc21b141adef1ede710e57c1bdcfba1"
        ],
        [
            "right; apply Heq.",
            "VernacExtend",
            "8b4a7b95bd9a90a9f0ae902d9966ce25f6b048ea"
        ],
        [
            "cut (forall n0:nat, Rabs (SP fn n0 x) <= sum_f_R0 An n0).",
            "VernacExtend",
            "cf4ea4c524af172d73992a8ea336809061f9c9a4"
        ],
        [
            "intro; cut (0 < (Rabs l1 - l2) / 2).",
            "VernacExtend",
            "c35bcf0f1ac7f0f5bf33d8079b0360b9170b958a"
        ],
        [
            "intro; unfold Un_cv in H, H0.",
            "VernacExtend",
            "52398d3b36ffe72c7dbeb2bbddcc0faa88f8b7f6"
        ],
        [
            "elim (H _ H3); intros Na H4.",
            "VernacExtend",
            "71cbcc82c8d412da9e23adb3fbdcebf8841c8822"
        ],
        [
            "elim (H0 _ H3); intros Nb H5.",
            "VernacExtend",
            "cb4fc63d8749b820a231e38c74d3bc1aab2866f3"
        ],
        [
            "set (N := max Na Nb).",
            "VernacExtend",
            "684ca41298bceb83f1fbd84ef95ed0383e94ad0f"
        ],
        [
            "unfold R_dist in H4, H5.",
            "VernacExtend",
            "4676b4e6ebd8919ea6eec17ab5519c7b36d39fe3"
        ],
        [
            "cut (Rabs (sum_f_R0 An N - l2) < (Rabs l1 - l2) / 2).",
            "VernacExtend",
            "64babc22f8e82e731805f4270b11f5bd7dc36f97"
        ],
        [
            "intro; cut (Rabs (Rabs l1 - Rabs (SP fn N x)) < (Rabs l1 - l2) / 2).",
            "VernacExtend",
            "02733f5bfa1d87e513b04f55d91f8f20103e4583"
        ],
        [
            "intro; cut (sum_f_R0 An N < (Rabs l1 + l2) / 2).",
            "VernacExtend",
            "56200d06ae8f3bb506dc04efda74d6d2e005aaf8"
        ],
        [
            "intro; cut ((Rabs l1 + l2) / 2 < Rabs (SP fn N x)).",
            "VernacExtend",
            "f511e86256524a13576137a704e9201154e3c887"
        ],
        [
            "intro; cut (sum_f_R0 An N < Rabs (SP fn N x)).",
            "VernacExtend",
            "c7adcac922eb1ff56cd06adfaa98887ab51af36b"
        ],
        [
            "intro; assert (H11 := H2 N).",
            "VernacExtend",
            "1735d0019505c82012d7d766d1bce98264d4755d"
        ],
        [
            "elim (Rlt_irrefl _ (Rle_lt_trans _ _ _ H11 H10)).",
            "VernacExtend",
            "7ce17dbb8a23e8df0427065b45f1c04b700242cf"
        ],
        [
            "apply Rlt_trans with ((Rabs l1 + l2) / 2); assumption.",
            "VernacExtend",
            "f1590c69d6d0bcb69c806ea3bb4881fc9118d200"
        ],
        [
            "destruct (Rcase_abs (Rabs l1 - Rabs (SP fn N x))) as [Hlt|Hge].",
            "VernacExtend",
            "3cca4a5e008695bc8bd1ca9311ec2721802d588c"
        ],
        [
            "apply Rlt_trans with (Rabs l1).",
            "VernacExtend",
            "d70da0da35e995bf9abf63952eb98d17f467d309"
        ],
        [
            "apply Rmult_lt_reg_l with 2.",
            "VernacExtend",
            "6631f3c2df4cb853b13a1c15d269a9146336e287"
        ],
        [
            "prove_sup0.",
            "VernacExtend",
            "9681c23836ca7f82fee12028ab3f984ae6ec2935"
        ],
        [
            "unfold Rdiv; rewrite (Rmult_comm 2); rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "c8b351c5e9d122af190e0cdd2aaf18d57dc2e845"
        ],
        [
            "rewrite Rmult_1_r; rewrite double; apply Rplus_lt_compat_l; apply Hgt.",
            "VernacExtend",
            "6e66bae96d12f5097eb0e098141f6239f76ce090"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "apply (Rminus_lt _ _ Hlt).",
            "VernacExtend",
            "f272d217b43922c055a4fca362777a5f1221b925"
        ],
        [
            "rewrite (Rabs_right _ Hge) in H7.",
            "VernacExtend",
            "7127e46f8989d04641d3cc68fd286084df2a80d8"
        ],
        [
            "apply Rplus_lt_reg_l with ((Rabs l1 - l2) / 2 - Rabs (SP fn N x)).",
            "VernacExtend",
            "0b6c4892e4a7edbb4058cc7d7572a791aec7fb06"
        ],
        [
            "replace ((Rabs l1 - l2) / 2 - Rabs (SP fn N x) + (Rabs l1 + l2) / 2) with (Rabs l1 - Rabs (SP fn N x)).",
            "VernacExtend",
            "2418df3a760b6140e822a8e4aaa7e93961266407"
        ],
        [
            "unfold Rminus; rewrite Rplus_assoc; rewrite Rplus_opp_l; rewrite Rplus_0_r; apply H7.",
            "VernacExtend",
            "256d99bd29f9cf5e8b824a1ad2321a5e13676d87"
        ],
        [
            "unfold Rdiv; rewrite Rmult_plus_distr_r; rewrite <- (Rmult_comm (/ 2)); rewrite Rmult_minus_distr_l; repeat rewrite (Rmult_comm (/ 2)); pattern (Rabs l1) at 1; rewrite double_var; unfold Rdiv in |- *; ring.",
            "VernacExtend",
            "c17294b6275f6297505af3b3fa3d1044e0de9bbd"
        ],
        [
            "destruct (Rcase_abs (sum_f_R0 An N - l2)) as [Hlt|Hge].",
            "VernacExtend",
            "43faa8f0af9fdd8381e63877446d894351353712"
        ],
        [
            "apply Rlt_trans with l2.",
            "VernacExtend",
            "232723e41697369ccf82b993589000ded8c13997"
        ],
        [
            "apply (Rminus_lt _ _ Hlt).",
            "VernacExtend",
            "f272d217b43922c055a4fca362777a5f1221b925"
        ],
        [
            "apply Rmult_lt_reg_l with 2.",
            "VernacExtend",
            "6631f3c2df4cb853b13a1c15d269a9146336e287"
        ],
        [
            "prove_sup0.",
            "VernacExtend",
            "9681c23836ca7f82fee12028ab3f984ae6ec2935"
        ],
        [
            "rewrite (double l2); unfold Rdiv; rewrite (Rmult_comm 2); rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "0f97fc31ee65511afecd9dd617afe22e6045521c"
        ],
        [
            "rewrite Rmult_1_r; rewrite (Rplus_comm (Rabs l1)); apply Rplus_lt_compat_l; apply Hgt.",
            "VernacExtend",
            "0d0ca5fbbd50b9c18733b6ae8be3305498485083"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "rewrite (Rabs_right _ Hge) in H6; apply Rplus_lt_reg_l with (- l2).",
            "VernacExtend",
            "786e7e57410cf8f0d6be4ffc11305a67c8f37cdd"
        ],
        [
            "replace (- l2 + (Rabs l1 + l2) / 2) with ((Rabs l1 - l2) / 2).",
            "VernacExtend",
            "0b8ebbc175b543a257ad9a455af24c6dd98af589"
        ],
        [
            "rewrite Rplus_comm; apply H6.",
            "VernacExtend",
            "b05bacafb90d7ebe0dd988357b488431bd17f4dd"
        ],
        [
            "unfold Rdiv; rewrite <- (Rmult_comm (/ 2)); rewrite Rmult_minus_distr_l; rewrite Rmult_plus_distr_r; pattern l2 at 2; rewrite double_var; repeat rewrite (Rmult_comm (/ 2)); rewrite Ropp_plus_distr; unfold Rdiv; ring.",
            "VernacExtend",
            "82cc0b9fd39fb564abe4fd0c4fd479c9479785b3"
        ],
        [
            "apply Rle_lt_trans with (Rabs (SP fn N x - l1)).",
            "VernacExtend",
            "0508c8eeb27781de84b99e26958f7d6496556352"
        ],
        [
            "rewrite <- Rabs_Ropp; rewrite Ropp_minus_distr'; apply Rabs_triang_inv2.",
            "VernacExtend",
            "691dbc8c8e6b1989201013c6f84617eba7904fc3"
        ],
        [
            "apply H4; unfold ge, N; apply le_max_l.",
            "VernacExtend",
            "a19d2a43e173cac2a9a3c3ec6e01588ffcb5af7a"
        ],
        [
            "apply H5; unfold ge, N; apply le_max_r.",
            "VernacExtend",
            "f162697dcd9e58a5887eb6a20246cad57a063347"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "7122edbd68559f255bfed03dc640472ed14eb4ef"
        ],
        [
            "apply Rplus_lt_reg_l with l2.",
            "VernacExtend",
            "472df65381a723caa689aa5510b84397a70e6ea3"
        ],
        [
            "rewrite Rplus_0_r; replace (l2 + (Rabs l1 - l2)) with (Rabs l1); [ apply Hgt | ring ].",
            "VernacExtend",
            "a321c03b1b8d6532ca6513acef29198a8f98b1e6"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "ee74bd033c1031a79ef440e1d41037d5c9648214"
        ],
        [
            "intros; induction n0 as [| n0 Hrecn0].",
            "VernacExtend",
            "4147b225d2b7dff1cbeddb29df1b14a33c05dc7c"
        ],
        [
            "unfold SP; simpl; apply H1.",
            "VernacExtend",
            "13f0754b13f5d0f9818f326c703ecaa3aff9685a"
        ],
        [
            "unfold SP; simpl.",
            "VernacExtend",
            "56b6758025ebb16a62a8b8072030435361357e67"
        ],
        [
            "apply Rle_trans with (Rabs (sum_f_R0 (fun k:nat => fn k x) n0) + Rabs (fn (S n0) x)).",
            "VernacExtend",
            "e4b3cb35f1389a36a427b1c0735afcdd2b34d518"
        ],
        [
            "apply Rabs_triang.",
            "VernacExtend",
            "ac95e0693bced827aa4991eb13639b86503a8150"
        ],
        [
            "apply Rle_trans with (sum_f_R0 An n0 + Rabs (fn (S n0) x)).",
            "VernacExtend",
            "5bceee9b3a0248eb298caa36c85067d17fd52309"
        ],
        [
            "do 2 rewrite <- (Rplus_comm (Rabs (fn (S n0) x))).",
            "VernacExtend",
            "14dfd82e2db535e10490aaa2cb6a7c5971c6b10d"
        ],
        [
            "apply Rplus_le_compat_l; apply Hrecn0.",
            "VernacExtend",
            "6fe39a2e97f9ac2146eaa9f51c825f484cf19945"
        ],
        [
            "apply Rplus_le_compat_l; apply H1.",
            "VernacExtend",
            "db16c0b3cca0ae27809a9c193dca15968c247891"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "tech1",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros; induction N as [| N HrecN].",
                        "VernacExtend",
                        "176c4a7e299087f2a01baed2bde05aa27663e10d"
                    ]
                },
                {
                    "command": [
                        "simpl; apply H; apply le_n.",
                        "VernacExtend",
                        "17aa140c8215a6bf11fcfcb9ac867d4d6d1bc448"
                    ]
                },
                {
                    "command": [
                        "simpl; apply Rplus_lt_0_compat.",
                        "VernacExtend",
                        "55586cde02b9a74ea4711d2fff18e8406454310e"
                    ]
                },
                {
                    "command": [
                        "apply HrecN; intros; apply H; apply le_S; assumption.",
                        "VernacExtend",
                        "e6f6248e609d4b1f71b271905c5cefd1cc42f6b2"
                    ]
                },
                {
                    "command": [
                        "apply H; apply le_n.",
                        "VernacExtend",
                        "4fcfa6c3b8354852210bcb5cf4ce4c51acba106e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech2",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros; induction n as [| n Hrecn].",
                        "VernacExtend",
                        "d8127da965164ab3db77421604b758d5eb34a150"
                    ]
                },
                {
                    "command": [
                        "elim (lt_n_O _ H).",
                        "VernacExtend",
                        "b93451b1a30fa3f24613ad7b0441907b3427a80f"
                    ]
                },
                {
                    "command": [
                        "cut ((m < n)%nat \\/ m = n).",
                        "VernacExtend",
                        "f473653b85664b22020c1278b53218feb2fe3d20"
                    ]
                },
                {
                    "command": [
                        "intro; elim H0; intro.",
                        "VernacExtend",
                        "80080ee26acf8bd4a9a5fd9e7b831121caff4c52"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 An (S n)) with (sum_f_R0 An n + An (S n)); [ idtac | reflexivity ].",
                        "VernacExtend",
                        "a7bc22abf9e97a7b21b267b86a2d9dee287617c4"
                    ]
                },
                {
                    "command": [
                        "replace (S n - S m)%nat with (S (n - S m)).",
                        "VernacExtend",
                        "50c6748fb3a90d69f0595964a2b3d0973d9cfd17"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 (fun i:nat => An (S m + i)%nat) (S (n - S m))) with (sum_f_R0 (fun i:nat => An (S m + i)%nat) (n - S m) + An (S m + S (n - S m))%nat); [ idtac | reflexivity ].",
                        "VernacExtend",
                        "8934e5d36e5bcb49a187aeff64edda55913e2c4d"
                    ]
                },
                {
                    "command": [
                        "replace (S m + S (n - S m))%nat with (S n).",
                        "VernacExtend",
                        "5660db2fff246b178c764249a8abfc89b485d4bf"
                    ]
                },
                {
                    "command": [
                        "rewrite (Hrecn H1).",
                        "VernacExtend",
                        "7e7b1f6282a77e5bbb8ba226136eb8f45dce1225"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply INR_eq; rewrite S_INR; rewrite plus_INR; do 2 rewrite S_INR; rewrite minus_INR.",
                        "VernacExtend",
                        "d3cf8097c6c61acdac77b5e42160f70673bd8397"
                    ]
                },
                {
                    "command": [
                        "rewrite S_INR; ring.",
                        "VernacExtend",
                        "ed95ed2e0a848af68b535fdf26d8cb51f56546bd"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_S; assumption.",
                        "VernacExtend",
                        "3b8f08f818b2786b96cf9f3daadbb5ad3e94f1cb"
                    ]
                },
                {
                    "command": [
                        "apply INR_eq; rewrite S_INR; repeat rewrite minus_INR.",
                        "VernacExtend",
                        "9a26d6defc40388c5edf21762b19638607b907d2"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite S_INR; ring.",
                        "VernacExtend",
                        "7f9fb2569484e342661418bbdc43c13a93e7f52b"
                    ]
                },
                {
                    "command": [
                        "apply le_n_S; apply lt_le_weak; assumption.",
                        "VernacExtend",
                        "10f62fb628701f43a01920ce9a616996e718a0dc"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_S; assumption.",
                        "VernacExtend",
                        "3b8f08f818b2786b96cf9f3daadbb5ad3e94f1cb"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; rewrite <- minus_n_n; simpl.",
                        "VernacExtend",
                        "0dce206500f27f80e106b90baaa6c49ebad59e40"
                    ]
                },
                {
                    "command": [
                        "replace (n + 0)%nat with n; [ reflexivity | ring ].",
                        "VernacExtend",
                        "da44939d6d6d9840ed605d86ac023fe7f46f48f0"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "right; reflexivity.",
                        "VernacExtend",
                        "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
                    ]
                },
                {
                    "command": [
                        "left; apply lt_le_trans with (S m); [ apply lt_n_Sn | assumption ].",
                        "VernacExtend",
                        "5aedc0ee17c867a299cd502587576c563fd17f7c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech3",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros; cut (1 - k <> 0).",
                        "VernacExtend",
                        "fef48adc02cdfd1e37b94407877b73727c6fbf44"
                    ]
                },
                {
                    "command": [
                        "intro; induction N as [| N HrecN].",
                        "VernacExtend",
                        "6d38c437f2c86eef6aa81407f6f746cb454c2246"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Rmult_1_r; unfold Rdiv; rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "fbe016890e7db95a3f9f7e8f1ae4cef508ad4e8a"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 (fun i:nat => k ^ i) (S N)) with (sum_f_R0 (fun i:nat => k ^ i) N + k ^ S N); [ idtac | reflexivity ]; rewrite HrecN; replace ((1 - k ^ S N) / (1 - k) + k ^ S N) with ((1 - k ^ S N + (1 - k) * k ^ S N) / (1 - k)).",
                        "VernacExtend",
                        "39d7f2c6fd4f836b42008850bf045c9808631dba"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_eq_reg_l with (1 - k).",
                        "VernacExtend",
                        "3e64002481bf4bc681858de2262ab0ff57677d39"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; do 2 rewrite <- (Rmult_comm (/ (1 - k))); repeat rewrite <- Rmult_assoc; rewrite <- Rinv_r_sym; [ do 2 rewrite Rmult_1_l; simpl; ring | apply H0 ].",
                        "VernacExtend",
                        "7b13293d7f91373bd3ac1797a5a50e6f867769b0"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite Rmult_plus_distr_r; rewrite (Rmult_comm (1 - k)); repeat rewrite Rmult_assoc; rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "6e09c5e5341620c2f44a18135916eeaf827749ac"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; reflexivity.",
                        "VernacExtend",
                        "48cf3ea63852e7c9eb06f376d7f6115fee3b3148"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_eq_contra; red; intro; elim H; symmetry ; assumption.",
                        "VernacExtend",
                        "9b3039f23773a232c820854d1b40f820fc9648a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech4",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intros; induction N as [| N HrecN].",
                        "VernacExtend",
                        "176c4a7e299087f2a01baed2bde05aa27663e10d"
                    ]
                },
                {
                    "command": [
                        "simpl; right; ring.",
                        "VernacExtend",
                        "0fc361392d0dc9fae8e69069f63c68cacc466f1b"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (k * An N).",
                        "VernacExtend",
                        "773b08c8110e3630e0c48e18d3c4727ec717edba"
                    ]
                },
                {
                    "command": [
                        "left; apply (H0 N).",
                        "VernacExtend",
                        "c1ff7f8c6ca1faec5cf2b1c05a8e6c4d1deb55f1"
                    ]
                },
                {
                    "command": [
                        "replace (S N) with (N + 1)%nat; [ idtac | ring ].",
                        "VernacExtend",
                        "95a5b326936768d3f1f8aedaef7bb4dbc3a24c8a"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_add; simpl; rewrite Rmult_1_r; replace (An 0%nat * (k ^ N * k)) with (k * (An 0%nat * k ^ N)); [ idtac | ring ]; apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "000e99ee8ded232b87a5c218b21a38719b06e608"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply HrecN.",
                        "VernacExtend",
                        "ec9b348a0961f8ea4434987bb268364b3d8f639c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech5",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "intros; reflexivity.",
                        "VernacExtend",
                        "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech6",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros; induction N as [| N HrecN].",
                        "VernacExtend",
                        "176c4a7e299087f2a01baed2bde05aa27663e10d"
                    ]
                },
                {
                    "command": [
                        "simpl; right; ring.",
                        "VernacExtend",
                        "0fc361392d0dc9fae8e69069f63c68cacc466f1b"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (An 0%nat * sum_f_R0 (fun i:nat => k ^ i) N + An (S N)).",
                        "VernacExtend",
                        "e327411a2f8c6742da21ece58bc5e521f0d17d20"
                    ]
                },
                {
                    "command": [
                        "rewrite tech5; do 2 rewrite <- (Rplus_comm (An (S N))); apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "87d1a5f28d4f1505d3e861568c7dc50d33e26874"
                    ]
                },
                {
                    "command": [
                        "apply HrecN.",
                        "VernacExtend",
                        "ec9b348a0961f8ea4434987bb268364b3d8f639c"
                    ]
                },
                {
                    "command": [
                        "rewrite tech5; rewrite Rmult_plus_distr_l; apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "4a121b13c986521adeb2544e0b787aa1926755dc"
                    ]
                },
                {
                    "command": [
                        "apply tech4; assumption.",
                        "VernacExtend",
                        "cb85d6b76c319c0e9351c3c5ecd1f932e84e074a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech7",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "intros; red; intro.",
                        "VernacExtend",
                        "8efb0e8eb13e9c212c108e6c3da452eb08ee81d1"
                    ]
                },
                {
                    "command": [
                        "assert (H3 := Rmult_eq_compat_l r1 _ _ H2).",
                        "VernacExtend",
                        "bdbc3a427b363ed60cee53eb326df734fe520757"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_r_sym in H3; [ idtac | assumption ].",
                        "VernacExtend",
                        "c68e5cd2b81b2afab45dae7baca3b329cb5ed4b1"
                    ]
                },
                {
                    "command": [
                        "assert (H4 := Rmult_eq_compat_l r2 _ _ H3).",
                        "VernacExtend",
                        "ea918f7ff4d753aa7b19f474e305ba453c797e36"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r in H4; rewrite <- Rmult_assoc in H4.",
                        "VernacExtend",
                        "1de88863896d69fec7418398cb3026dfaf3d91d8"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_r_simpl_m in H4; [ idtac | assumption ].",
                        "VernacExtend",
                        "012e1167c9d0cea9a9f64dec66c449ee31c9a2c9"
                    ]
                },
                {
                    "command": [
                        "elim H1; symmetry ; assumption.",
                        "VernacExtend",
                        "3c84f2cd3e3366fb0f2296c20ecf1f779fcbd81e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech11",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros; induction N as [| N HrecN].",
                        "VernacExtend",
                        "176c4a7e299087f2a01baed2bde05aa27663e10d"
                    ]
                },
                {
                    "command": [
                        "simpl; apply H.",
                        "VernacExtend",
                        "3410d91927336a4dd1f499cdd5b70bdccaeed032"
                    ]
                },
                {
                    "command": [
                        "do 3 rewrite tech5; rewrite HrecN; rewrite (H (S N)); ring.",
                        "VernacExtend",
                        "1fb874e0849c6a30d3654b5632ec532877e0ff2e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech12",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "intros; unfold Pser; unfold infinite_sum; unfold Un_cv in H; assumption.",
                        "VernacExtend",
                        "90c723c1c28afa45ab3d292c08826b8d222357cf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scal_sum",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "intros; induction N as [| N HrecN].",
                        "VernacExtend",
                        "176c4a7e299087f2a01baed2bde05aa27663e10d"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite tech5.",
                        "VernacExtend",
                        "7137a2d56f2d10d297d9522e92210582066693b3"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_plus_distr_l; rewrite <- HrecN; ring.",
                        "VernacExtend",
                        "2b18a2692434c0b1989fdc0bfbb6a552df79ab30"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decomp_sum",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intros; induction N as [| N HrecN].",
                        "VernacExtend",
                        "176c4a7e299087f2a01baed2bde05aa27663e10d"
                    ]
                },
                {
                    "command": [
                        "elim (lt_irrefl _ H).",
                        "VernacExtend",
                        "fc90b77317c333bc64634f7cf1eecc8648bc7dc4"
                    ]
                },
                {
                    "command": [
                        "cut ((0 < N)%nat \\/ N = 0%nat).",
                        "VernacExtend",
                        "5f633aecef9688662d36591ee8c5d1dc883cb951"
                    ]
                },
                {
                    "command": [
                        "intro; elim H0; intro.",
                        "VernacExtend",
                        "80080ee26acf8bd4a9a5fd9e7b831121caff4c52"
                    ]
                },
                {
                    "command": [
                        "cut (S (pred N) = pred (S N)).",
                        "VernacExtend",
                        "60be3a8487940edff4c452374713f24f937e8468"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite <- H2.",
                        "VernacExtend",
                        "5514609be7a90490a38fab494b300075c32fdcb6"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite tech5.",
                        "VernacExtend",
                        "7137a2d56f2d10d297d9522e92210582066693b3"
                    ]
                },
                {
                    "command": [
                        "replace (S (S (pred N))) with (S N).",
                        "VernacExtend",
                        "6d74082f2f76bf267304fe2a1b8492426c987c89"
                    ]
                },
                {
                    "command": [
                        "rewrite (HrecN H1); ring.",
                        "VernacExtend",
                        "2c9c7899a10a38b32460878e42d2a9458f6c50f0"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; simpl; reflexivity.",
                        "VernacExtend",
                        "3a32774ad56869436612026a1cb078a5c6abf92b"
                    ]
                },
                {
                    "command": [
                        "destruct (O_or_S N) as [(m,<-)|<-].",
                        "VernacExtend",
                        "46a759c6617baaefdbc9ec506e5e06dfb2b276b0"
                    ]
                },
                {
                    "command": [
                        "simpl; reflexivity.",
                        "VernacExtend",
                        "929257572def0332e6c079b4ed3a916720086e3a"
                    ]
                },
                {
                    "command": [
                        "elim (lt_irrefl _ H1).",
                        "VernacExtend",
                        "fc6f510f36b4d16133ceb844f761dc0f4e1fe94c"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; simpl; reflexivity.",
                        "VernacExtend",
                        "e1f0c96ae9c09d978057e06f716a53423fcb3517"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "right; reflexivity.",
                        "VernacExtend",
                        "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
                    ]
                },
                {
                    "command": [
                        "left; apply lt_le_trans with 1%nat; [ apply lt_O_Sn | assumption ].",
                        "VernacExtend",
                        "0ad66c526c9190005017f99fc1dfe32b75de36e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plus_sum",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "intros; induction N as [| N HrecN].",
                        "VernacExtend",
                        "176c4a7e299087f2a01baed2bde05aa27663e10d"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "do 3 rewrite tech5; rewrite HrecN; ring.",
                        "VernacExtend",
                        "501bc86fef89a0297503bdbeeaccd99b8e251ed6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_eq",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "intros; induction N as [| N HrecN].",
                        "VernacExtend",
                        "176c4a7e299087f2a01baed2bde05aa27663e10d"
                    ]
                },
                {
                    "command": [
                        "simpl; apply H; apply le_n.",
                        "VernacExtend",
                        "17aa140c8215a6bf11fcfcb9ac867d4d6d1bc448"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite tech5; rewrite HrecN.",
                        "VernacExtend",
                        "96efc8c3bb968da0f374eb4cfb3b4b6587e1edbc"
                    ]
                },
                {
                    "command": [
                        "rewrite (H (S N)); [ reflexivity | apply le_n ].",
                        "VernacExtend",
                        "9b78984985f815ff60fc295decd37352c6714c40"
                    ]
                },
                {
                    "command": [
                        "intros; apply H; apply le_trans with N; [ assumption | apply le_n_Sn ].",
                        "VernacExtend",
                        "72af6ceea219691e39b9688aaa7cde4407e2fe41"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "uniqueness_sum",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "unfold infinite_sum; intros.",
                        "VernacExtend",
                        "48101983abc0ebd3d4aaeb4211e14b2c0945ca76"
                    ]
                },
                {
                    "command": [
                        "case (Req_dec l1 l2); intro.",
                        "VernacExtend",
                        "229147419a140344f41cc599522a3304d0faf9d7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "cut (0 < Rabs ((l1 - l2) / 2)); [ intro | apply Rabs_pos_lt ].",
                        "VernacExtend",
                        "0d6081c4b8a66df363a91d0dfb85027e5b6ba71c"
                    ]
                },
                {
                    "command": [
                        "elim (H (Rabs ((l1 - l2) / 2)) H2); intros.",
                        "VernacExtend",
                        "ca12e38a3ab24990edba3995c24942376fb5df8b"
                    ]
                },
                {
                    "command": [
                        "elim (H0 (Rabs ((l1 - l2) / 2)) H2); intros.",
                        "VernacExtend",
                        "779d1b150602ec81c83602a000a6e6ab3c8708fd"
                    ]
                },
                {
                    "command": [
                        "set (N := max x0 x); cut (N >= x0)%nat.",
                        "VernacExtend",
                        "bb9d9d7d9cf36f2c5a4745633d341b74452aee7c"
                    ]
                },
                {
                    "command": [
                        "cut (N >= x)%nat.",
                        "VernacExtend",
                        "e0625c4eb5f7f59dbe1be577265ab9919d1eb19a"
                    ]
                },
                {
                    "command": [
                        "intros; assert (H7 := H3 N H5); assert (H8 := H4 N H6).",
                        "VernacExtend",
                        "415ad4f9b4d5bb6b2e8479c7937fb83355b8db8a"
                    ]
                },
                {
                    "command": [
                        "cut (Rabs (l1 - l2) <= R_dist (sum_f_R0 An N) l1 + R_dist (sum_f_R0 An N) l2).",
                        "VernacExtend",
                        "ef37056f2bed1e26ba510ef9b502575e78d0a30e"
                    ]
                },
                {
                    "command": [
                        "intro; assert (H10 := Rplus_lt_compat _ _ _ _ H7 H8); assert (H11 := Rle_lt_trans _ _ _ H9 H10); unfold Rdiv in H11; rewrite Rabs_mult in H11.",
                        "VernacExtend",
                        "a130bd1f3d208191a636a009d38b8f83c879852a"
                    ]
                },
                {
                    "command": [
                        "cut (Rabs (/ 2) = / 2).",
                        "VernacExtend",
                        "e908cb22a4490aa83b79b0b04f44685ec295653e"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H12 in H11; assert (H13 := double_var); unfold Rdiv in H13; rewrite <- H13 in H11.",
                        "VernacExtend",
                        "2f050b83ef4d4bccdd5a386f333ee21abddeaf81"
                    ]
                },
                {
                    "command": [
                        "elim (Rlt_irrefl _ H11).",
                        "VernacExtend",
                        "b30df9b871aae7250a34689139892da3602f701d"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_right; left; change (0 < / 2); apply Rinv_0_lt_compat; cut (0%nat <> 2%nat); [ intro H20; generalize (lt_INR_0 2 (neq_O_lt 2 H20)); unfold INR; intro; assumption | discriminate ].",
                        "VernacExtend",
                        "bada095838412c59fd4a35217f847bccd3d65c00"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist; rewrite <- (Rabs_Ropp (sum_f_R0 An N - l1)); rewrite Ropp_minus_distr'.",
                        "VernacExtend",
                        "1876c4580a0be326616e5c6ccaf85cc882681d0d"
                    ]
                },
                {
                    "command": [
                        "replace (l1 - l2) with (l1 - sum_f_R0 An N + (sum_f_R0 An N - l2)); [ idtac | ring ].",
                        "VernacExtend",
                        "ae038631bf88b23ac61ba2393455696be4be9372"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_triang.",
                        "VernacExtend",
                        "ac95e0693bced827aa4991eb13639b86503a8150"
                    ]
                },
                {
                    "command": [
                        "unfold ge; unfold N; apply le_max_r.",
                        "VernacExtend",
                        "b842d09864104d1e1cbfddbbdcee1599c182b70e"
                    ]
                },
                {
                    "command": [
                        "unfold ge; unfold N; apply le_max_l.",
                        "VernacExtend",
                        "fbe0a3e926fa04a3774e2281929911b977eecaeb"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply prod_neq_R0.",
                        "VernacExtend",
                        "bae86043f3acfd4aeb1f77f1138e1172ace3c7fa"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_eq_contra; assumption.",
                        "VernacExtend",
                        "65013262fb54300c4f559099e46f29e9822447d6"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_neq_0_compat; discrR.",
                        "VernacExtend",
                        "c996ce35ba9924ff499f316d0fb3eaf573a9e988"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minus_sum",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "intros; induction N as [| N HrecN].",
                        "VernacExtend",
                        "176c4a7e299087f2a01baed2bde05aa27663e10d"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "do 3 rewrite tech5; rewrite HrecN; ring.",
                        "VernacExtend",
                        "501bc86fef89a0297503bdbeeaccd99b8e251ed6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_decomposition",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction N as [| N HrecN].",
                        "VernacExtend",
                        "af1041d02474f2c80c55a680ec1503779a0c4570"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "rewrite tech5.",
                        "VernacExtend",
                        "9868999d015d8d25987acdadb308fadae9d59e4a"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech5 (fun l:nat => An (S (2 * l))) N).",
                        "VernacExtend",
                        "893bbc5971390a8b0eb91bd5c2b0328d5c24ad01"
                    ]
                },
                {
                    "command": [
                        "replace (2 * S (S N))%nat with (S (S (2 * S N))).",
                        "VernacExtend",
                        "37f9bb781011b414d68a5c76797a8f9bfe4404ab"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech5 An (S (2 * S N))).",
                        "VernacExtend",
                        "872361c4a7b5cfe2d536ac48b925059ae434e5e3"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech5 An (2 * S N)).",
                        "VernacExtend",
                        "624a9ec6bdb1cc247c4000a2c1264f38c248525a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HrecN.",
                        "VernacExtend",
                        "5a5b82c4983bf245eacb360d0a4815211843bbf1"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_Rle",
            "line_nb": 171,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction N as [| N HrecN].",
                        "VernacExtend",
                        "af1041d02474f2c80c55a680ec1503779a0c4570"
                    ]
                },
                {
                    "command": [
                        "simpl; apply H.",
                        "VernacExtend",
                        "3410d91927336a4dd1f499cdd5b70bdccaeed032"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite tech5.",
                        "VernacExtend",
                        "7137a2d56f2d10d297d9522e92210582066693b3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (sum_f_R0 An N + Bn (S N)).",
                        "VernacExtend",
                        "736578d367ab15111ff99e48c7438f33df88592b"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply le_n.",
                        "VernacExtend",
                        "cd4ea009ba050d55c0c5552f05ee5752a2fad9f9"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- (Rplus_comm (Bn (S N))).",
                        "VernacExtend",
                        "d961b7c4db88f1e126306fed04ee319fe354c830"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "apply HrecN.",
                        "VernacExtend",
                        "ec9b348a0961f8ea4434987bb268364b3d8f639c"
                    ]
                },
                {
                    "command": [
                        "intros; apply H.",
                        "VernacExtend",
                        "b7bca165a275b11a76ba06a5f07157259bedeabd"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with N; [ assumption | apply le_n_Sn ].",
                        "VernacExtend",
                        "1aa48b0d1a3194c938aec0991fe7680aebe1ee08"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rsum_abs",
            "line_nb": 187,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction N as [| N HrecN].",
                        "VernacExtend",
                        "af1041d02474f2c80c55a680ec1503779a0c4570"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "right; reflexivity.",
                        "VernacExtend",
                        "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite tech5.",
                        "VernacExtend",
                        "7137a2d56f2d10d297d9522e92210582066693b3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))).",
                        "VernacExtend",
                        "ce18819592a17892163f9947e2ce88b6496fda97"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_triang.",
                        "VernacExtend",
                        "ac95e0693bced827aa4991eb13639b86503a8150"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))).",
                        "VernacExtend",
                        "33a0efcf15e2ddf910d05f042a8f37859521729a"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "apply HrecN.",
                        "VernacExtend",
                        "ec9b348a0961f8ea4434987bb268364b3d8f639c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_cte",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction N as [| N HrecN].",
                        "VernacExtend",
                        "af1041d02474f2c80c55a680ec1503779a0c4570"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "rewrite tech5.",
                        "VernacExtend",
                        "9868999d015d8d25987acdadb308fadae9d59e4a"
                    ]
                },
                {
                    "command": [
                        "rewrite HrecN; repeat rewrite S_INR; ring.",
                        "VernacExtend",
                        "64ce5d071541018336c73a8142308451dec9f687"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_growing",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction N as [| N HrecN].",
                        "VernacExtend",
                        "af1041d02474f2c80c55a680ec1503779a0c4570"
                    ]
                },
                {
                    "command": [
                        "simpl; apply H.",
                        "VernacExtend",
                        "3410d91927336a4dd1f499cdd5b70bdccaeed032"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite tech5.",
                        "VernacExtend",
                        "7137a2d56f2d10d297d9522e92210582066693b3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (sum_f_R0 An N + Bn (S N)).",
                        "VernacExtend",
                        "736578d367ab15111ff99e48c7438f33df88592b"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l; apply H.",
                        "VernacExtend",
                        "c3d18f27d4e148c65b75dfd7783905283ebfc73c"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- (Rplus_comm (Bn (S N))).",
                        "VernacExtend",
                        "d961b7c4db88f1e126306fed04ee319fe354c830"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l; apply HrecN.",
                        "VernacExtend",
                        "73cce5ca6c68c711ba714292bc0e0eb96281fb6b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rabs_triang_gen",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction N as [| N HrecN].",
                        "VernacExtend",
                        "af1041d02474f2c80c55a680ec1503779a0c4570"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "right; reflexivity.",
                        "VernacExtend",
                        "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite tech5.",
                        "VernacExtend",
                        "7137a2d56f2d10d297d9522e92210582066693b3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))).",
                        "VernacExtend",
                        "ce18819592a17892163f9947e2ce88b6496fda97"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_triang.",
                        "VernacExtend",
                        "ac95e0693bced827aa4991eb13639b86503a8150"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))).",
                        "VernacExtend",
                        "33a0efcf15e2ddf910d05f042a8f37859521729a"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l; apply HrecN.",
                        "VernacExtend",
                        "73cce5ca6c68c711ba714292bc0e0eb96281fb6b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cond_pos_sum",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction N as [| N HrecN].",
                        "VernacExtend",
                        "af1041d02474f2c80c55a680ec1503779a0c4570"
                    ]
                },
                {
                    "command": [
                        "simpl; apply H.",
                        "VernacExtend",
                        "3410d91927336a4dd1f499cdd5b70bdccaeed032"
                    ]
                },
                {
                    "command": [
                        "rewrite tech5.",
                        "VernacExtend",
                        "9868999d015d8d25987acdadb308fadae9d59e4a"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_le_0_compat.",
                        "VernacExtend",
                        "f2a4bb243ad7dc4026e4f9c4fede7e10c9e27124"
                    ]
                },
                {
                    "command": [
                        "apply HrecN.",
                        "VernacExtend",
                        "ec9b348a0961f8ea4434987bb268364b3d8f639c"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cauchy_abs",
            "line_nb": 237,
            "steps": [
                {
                    "command": [
                        "unfold Cauchy_crit_series; unfold Cauchy_crit.",
                        "VernacExtend",
                        "23ef85f5e43536b79eb7d529d23962b4b49f1cf0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (H eps H0); intros.",
                        "VernacExtend",
                        "ace4b126c6608622fb1152df39f2724078d34d25"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (R_dist (sum_f_R0 An n) (sum_f_R0 An m) <= R_dist (sum_f_R0 (fun i:nat => Rabs (An i)) n) (sum_f_R0 (fun i:nat => Rabs (An i)) m)).",
                        "VernacExtend",
                        "0600d808a79509e1a1fa075d75bec78fb09813fc"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (R_dist (sum_f_R0 (fun i:nat => Rabs (An i)) n) (sum_f_R0 (fun i:nat => Rabs (An i)) m)).",
                        "VernacExtend",
                        "9d0149c3ba20779df77b157b8186275a16dab39d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply H1; assumption.",
                        "VernacExtend",
                        "fad0ef9dccdc207ba48ae84d9c57202bcc0d529f"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_eq_lt_dec n m) as [[ | -> ]|].",
                        "VernacExtend",
                        "0675e8452fba108dc1d092ce88adcb27ae1da3c3"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech2 An n m); [ idtac | assumption ].",
                        "VernacExtend",
                        "4df428b0a9f56d5068ea6b10c2772868a46be2a7"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech2 (fun i:nat => Rabs (An i)) n m); [ idtac | assumption ].",
                        "VernacExtend",
                        "551db7fe08931534ab428adf83b060eadcbf0881"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist.",
                        "VernacExtend",
                        "9d14879a55d02ad54565968e31b64da7aeb66d97"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus.",
                        "VernacExtend",
                        "be913ef3bb9103a3081d46d811769f83edb6f7a5"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Ropp_plus_distr.",
                        "VernacExtend",
                        "dd5458b5846fb9892f09f8712856cfa1e1cd3a57"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- Rplus_assoc.",
                        "VernacExtend",
                        "745b21d30e4e309e4915856e0254116402978ade"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Rplus_opp_r.",
                        "VernacExtend",
                        "2113b0fce3c907f9e202f566771b5f57d7ce7688"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Rplus_0_l.",
                        "VernacExtend",
                        "f204bd84a6aa933bcb1861af738e20b3b66764cc"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Rabs_Ropp.",
                        "VernacExtend",
                        "5430e72b2eef12e57449e947958069a93ac50af0"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_right (sum_f_R0 (fun i:nat => Rabs (An (S n + i)%nat)) (m - S n))) .",
                        "VernacExtend",
                        "4e69ac69222bccde66b2d2e8c4f60081b75a6d60"
                    ]
                },
                {
                    "command": [
                        "set (Bn := fun i:nat => An (S n + i)%nat).",
                        "VernacExtend",
                        "e14d078ccabb418d0da7e1dd9cb2c4049f7f993c"
                    ]
                },
                {
                    "command": [
                        "replace (fun i:nat => Rabs (An (S n + i)%nat)) with (fun i:nat => Rabs (Bn i)).",
                        "VernacExtend",
                        "9750427d4ea329fe50e99edbce350042fb54a62a"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_triang_gen.",
                        "VernacExtend",
                        "2c559914d139743baa5d316a8301696a5fc1adc7"
                    ]
                },
                {
                    "command": [
                        "unfold Bn; reflexivity.",
                        "VernacExtend",
                        "b16c67d5ad7f2a52f435a4611cef56ff0dd1c1f8"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge.",
                        "VernacExtend",
                        "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos_sum.",
                        "VernacExtend",
                        "380297aa8e6ba85321b71c04af05921e27e72dd6"
                    ]
                },
                {
                    "command": [
                        "intro; apply Rabs_pos.",
                        "VernacExtend",
                        "c22a03ac2101c9e1f8bb586345faaee764de726c"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist.",
                        "VernacExtend",
                        "9d14879a55d02ad54565968e31b64da7aeb66d97"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus; do 2 rewrite Rplus_opp_r.",
                        "VernacExtend",
                        "f1d748bbd380138bc1168fe5ecd4f86c24c6665c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_R0; right; reflexivity.",
                        "VernacExtend",
                        "0947ed1e522f8fa81b5f34d31f8cf416f9f3447b"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech2 An m n); [ idtac | assumption ].",
                        "VernacExtend",
                        "cc4acd6cbfdf3c2b01db63479557cc691a331ee3"
                    ]
                },
                {
                    "command": [
                        "rewrite (tech2 (fun i:nat => Rabs (An i)) m n); [ idtac | assumption ].",
                        "VernacExtend",
                        "a01329b67b7171833c71603e5005e28a64cb59d9"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist.",
                        "VernacExtend",
                        "9d14879a55d02ad54565968e31b64da7aeb66d97"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus.",
                        "VernacExtend",
                        "be913ef3bb9103a3081d46d811769f83edb6f7a5"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Rplus_assoc.",
                        "VernacExtend",
                        "42d088eb00acaed1231f85ce397e2d662e2f5744"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rplus_comm (sum_f_R0 An m)).",
                        "VernacExtend",
                        "dccae620d8c73a297f31bcfdd544241dbee945d1"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rplus_comm (sum_f_R0 (fun i:nat => Rabs (An i)) m)).",
                        "VernacExtend",
                        "d01ce42dbb457ce3a60a65ca303726d563382b17"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Rplus_assoc.",
                        "VernacExtend",
                        "42d088eb00acaed1231f85ce397e2d662e2f5744"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Rplus_opp_l.",
                        "VernacExtend",
                        "fb2ddacc315b21cf6a2d8f2f8bfa0b0eaac7cbe5"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Rplus_0_r.",
                        "VernacExtend",
                        "811d9fae6b190ca698cd3e915610ae571d2ea821"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_right (sum_f_R0 (fun i:nat => Rabs (An (S m + i)%nat)) (n - S m))) .",
                        "VernacExtend",
                        "3b6b4f21616f2756b01686eb3e1c79b3d6fba99d"
                    ]
                },
                {
                    "command": [
                        "set (Bn := fun i:nat => An (S m + i)%nat).",
                        "VernacExtend",
                        "1345ce5907809578bc93a3533a15b20fe58848be"
                    ]
                },
                {
                    "command": [
                        "replace (fun i:nat => Rabs (An (S m + i)%nat)) with (fun i:nat => Rabs (Bn i)).",
                        "VernacExtend",
                        "8df11a3bc08ede45a8610a2d2a13a969367cd9e5"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_triang_gen.",
                        "VernacExtend",
                        "2c559914d139743baa5d316a8301696a5fc1adc7"
                    ]
                },
                {
                    "command": [
                        "unfold Bn; reflexivity.",
                        "VernacExtend",
                        "b16c67d5ad7f2a52f435a4611cef56ff0dd1c1f8"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge.",
                        "VernacExtend",
                        "a688ebddf90443508c57e22ba16f7fa0da42ef9a"
                    ]
                },
                {
                    "command": [
                        "apply cond_pos_sum.",
                        "VernacExtend",
                        "380297aa8e6ba85321b71c04af05921e27e72dd6"
                    ]
                },
                {
                    "command": [
                        "intro; apply Rabs_pos.",
                        "VernacExtend",
                        "c22a03ac2101c9e1f8bb586345faaee764de726c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cv_cauchy_1",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "intros An (x,p).",
                        "VernacExtend",
                        "3653784a82e512966c6325749495e394ae33428a"
                    ]
                },
                {
                    "command": [
                        "unfold Un_cv in p.",
                        "VernacExtend",
                        "47320c7f1faccac57f0e3b67dc659e075d93d422"
                    ]
                },
                {
                    "command": [
                        "unfold Cauchy_crit_series; unfold Cauchy_crit.",
                        "VernacExtend",
                        "23ef85f5e43536b79eb7d529d23962b4b49f1cf0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (0 < eps / 2).",
                        "VernacExtend",
                        "d5d8cc056d52c3ef8078a56f20d37abe11587c19"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim (p (eps / 2) H0); intros.",
                        "VernacExtend",
                        "15880c00810dd295e66745d8c56eaff1a76d8ce9"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (R_dist (sum_f_R0 An n) x + R_dist (sum_f_R0 An m) x).",
                        "VernacExtend",
                        "ba97635f921a9010df4b882ce464ba4982cf427c"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist.",
                        "VernacExtend",
                        "9d14879a55d02ad54565968e31b64da7aeb66d97"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 An n - sum_f_R0 An m) with (sum_f_R0 An n - x + - (sum_f_R0 An m - x)); [ idtac | ring ].",
                        "VernacExtend",
                        "839b319da48623df2048618127de13350617f034"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rabs_Ropp (sum_f_R0 An m - x)).",
                        "VernacExtend",
                        "5f54f7661feddfc99cc30a2fb458f7d48cf9b4f5"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_triang.",
                        "VernacExtend",
                        "ac95e0693bced827aa4991eb13639b86503a8150"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le_trans with (eps / 2 + eps / 2).",
                        "VernacExtend",
                        "9910f7a0c1afe92f58c01b011aad47cfcacd472e"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat.",
                        "VernacExtend",
                        "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
                    ]
                },
                {
                    "command": [
                        "apply H1; assumption.",
                        "VernacExtend",
                        "fad0ef9dccdc207ba48ae84d9c57202bcc0d529f"
                    ]
                },
                {
                    "command": [
                        "apply H1; assumption.",
                        "VernacExtend",
                        "fad0ef9dccdc207ba48ae84d9c57202bcc0d529f"
                    ]
                },
                {
                    "command": [
                        "right; symmetry ; apply double_var.",
                        "VernacExtend",
                        "e5c70a44359939c92b66ebe2ece2eec94f12d2d7"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; prove_sup0 ].",
                        "VernacExtend",
                        "4d905fce1c75d7adfc4f1cd2deb30dbdf49bf2f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cv_cauchy_2",
            "line_nb": 310,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply R_complete.",
                        "VernacExtend",
                        "dcb930f32174920bc45278b73d2e4213a2863c4f"
                    ]
                },
                {
                    "command": [
                        "unfold Cauchy_crit_series in H.",
                        "VernacExtend",
                        "34edcb27438e3ce112e338f77fd34ff55d161be6"
                    ]
                },
                {
                    "command": [
                        "exact H.",
                        "VernacExtend",
                        "ce8e3e03bec1b3366baf128fe7eab49b160bc6a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_eq_R0",
            "line_nb": 316,
            "steps": [
                {
                    "command": [
                        "intros; induction N as [| N HrecN].",
                        "VernacExtend",
                        "176c4a7e299087f2a01baed2bde05aa27663e10d"
                    ]
                },
                {
                    "command": [
                        "simpl; apply H; apply le_n.",
                        "VernacExtend",
                        "17aa140c8215a6bf11fcfcb9ac867d4d6d1bc448"
                    ]
                },
                {
                    "command": [
                        "rewrite tech5; rewrite HrecN; [ rewrite Rplus_0_l; apply H; apply le_n | intros; apply H; apply le_trans with N; [ assumption | apply le_n_Sn ] ].",
                        "VernacExtend",
                        "9a9f9f94165604132c60fdef4105c9b5ab3844b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_incr",
            "line_nb": 322,
            "steps": [
                {
                    "command": [
                        "intros; destruct (total_order_T (sum_f_R0 An N) l) as [[Hlt|Heq]|Hgt].",
                        "VernacExtend",
                        "e12b78701d851ee97e07080ce325afd11f1b9c50"
                    ]
                },
                {
                    "command": [
                        "left; apply Hlt.",
                        "VernacExtend",
                        "5c1ffc254cc21b141adef1ede710e57c1bdcfba1"
                    ]
                },
                {
                    "command": [
                        "right; apply Heq.",
                        "VernacExtend",
                        "8b4a7b95bd9a90a9f0ae902d9966ce25f6b048ea"
                    ]
                },
                {
                    "command": [
                        "cut (Un_growing (fun n:nat => sum_f_R0 An n)).",
                        "VernacExtend",
                        "a678c92f6ab22e37432c019d63722a87b242951b"
                    ]
                },
                {
                    "command": [
                        "intro; set (l1 := sum_f_R0 An N) in Hgt.",
                        "VernacExtend",
                        "2afa41e96fdc5c859fe234cf2ca1b67cb819c430"
                    ]
                },
                {
                    "command": [
                        "unfold Un_cv in H; cut (0 < l1 - l).",
                        "VernacExtend",
                        "c039e1c5ff0201bf82ef51afbccca4d5e5e87f2f"
                    ]
                },
                {
                    "command": [
                        "intro; elim (H _ H2); intros.",
                        "VernacExtend",
                        "3ba7cc44d7e040cc365b4ff5f2cff04816ff65d7"
                    ]
                },
                {
                    "command": [
                        "set (N0 := max x N); cut (N0 >= x)%nat.",
                        "VernacExtend",
                        "332dda6169ff896e72657b3a41bdc835d03506da"
                    ]
                },
                {
                    "command": [
                        "intro; assert (H5 := H3 N0 H4).",
                        "VernacExtend",
                        "fecffea05db1278d470c469ac1dd1a727fef67da"
                    ]
                },
                {
                    "command": [
                        "cut (l1 <= sum_f_R0 An N0).",
                        "VernacExtend",
                        "5e71935ca71fddbbb13f7d1d009cbf4dcc0e1144"
                    ]
                },
                {
                    "command": [
                        "intro; unfold R_dist in H5; rewrite Rabs_right in H5.",
                        "VernacExtend",
                        "938c752cc7e976810c9b9153622cf18aae72d242"
                    ]
                },
                {
                    "command": [
                        "cut (sum_f_R0 An N0 < l1).",
                        "VernacExtend",
                        "ce53895057e8b77a1a68e4e3f3f05132a4e133c9"
                    ]
                },
                {
                    "command": [
                        "intro; elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ H7 H6)).",
                        "VernacExtend",
                        "14946ccd80bd8920c8938612ace6b53df502090a"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with (- l).",
                        "VernacExtend",
                        "0e7cc7ac9425ac33829f6594c8d347175dcf446f"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite (Rplus_comm (- l)).",
                        "VernacExtend",
                        "a722dd32a981e9c1d214a9ef3069318e8eefef17"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rplus_le_reg_l with l.",
                        "VernacExtend",
                        "8e109d911a81369da746c8f94e494baa72b2010f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; replace (l + (sum_f_R0 An N0 - l)) with (sum_f_R0 An N0); [ idtac | ring ]; apply Rle_trans with l1.",
                        "VernacExtend",
                        "6cf7ce9d91c15ae933a255160c66cee0a6f092e9"
                    ]
                },
                {
                    "command": [
                        "left; apply Hgt.",
                        "VernacExtend",
                        "7913cad9687254c1e7d2142068b28a006e2fea73"
                    ]
                },
                {
                    "command": [
                        "apply H6.",
                        "VernacExtend",
                        "b0314bbdc776869d305067ca471096a36fa958c1"
                    ]
                },
                {
                    "command": [
                        "unfold l1; apply Rge_le; apply (growing_prop (fun k:nat => sum_f_R0 An k)).",
                        "VernacExtend",
                        "29e056915c2487790f98c16adc90e64ed88ded1c"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "unfold ge, N0; apply le_max_r.",
                        "VernacExtend",
                        "c2a92b3c30d01940dd4013a0e6597dc2cce1a68e"
                    ]
                },
                {
                    "command": [
                        "unfold ge, N0; apply le_max_l.",
                        "VernacExtend",
                        "c71202fe8a0455008cc898d76c114c584b5eccc1"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with l; rewrite Rplus_0_r; replace (l + (l1 - l)) with l1; [ apply Hgt | ring ].",
                        "VernacExtend",
                        "4efd7a068fd2feb2457611e91d109a3a5911aa89"
                    ]
                },
                {
                    "command": [
                        "unfold Un_growing; intro; simpl; pattern (sum_f_R0 An n) at 1; rewrite <- Rplus_0_r; apply Rplus_le_compat_l; apply H0.",
                        "VernacExtend",
                        "5979857562348a5a351419991dfae421ba53e8e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_cv_maj",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "intros; destruct (total_order_T (Rabs l1) l2) as [[Hlt|Heq]|Hgt].",
                        "VernacExtend",
                        "5542310770259258e12163395992101140d12479"
                    ]
                },
                {
                    "command": [
                        "left; apply Hlt.",
                        "VernacExtend",
                        "5c1ffc254cc21b141adef1ede710e57c1bdcfba1"
                    ]
                },
                {
                    "command": [
                        "right; apply Heq.",
                        "VernacExtend",
                        "8b4a7b95bd9a90a9f0ae902d9966ce25f6b048ea"
                    ]
                },
                {
                    "command": [
                        "cut (forall n0:nat, Rabs (SP fn n0 x) <= sum_f_R0 An n0).",
                        "VernacExtend",
                        "cf4ea4c524af172d73992a8ea336809061f9c9a4"
                    ]
                },
                {
                    "command": [
                        "intro; cut (0 < (Rabs l1 - l2) / 2).",
                        "VernacExtend",
                        "c35bcf0f1ac7f0f5bf33d8079b0360b9170b958a"
                    ]
                },
                {
                    "command": [
                        "intro; unfold Un_cv in H, H0.",
                        "VernacExtend",
                        "52398d3b36ffe72c7dbeb2bbddcc0faa88f8b7f6"
                    ]
                },
                {
                    "command": [
                        "elim (H _ H3); intros Na H4.",
                        "VernacExtend",
                        "71cbcc82c8d412da9e23adb3fbdcebf8841c8822"
                    ]
                },
                {
                    "command": [
                        "elim (H0 _ H3); intros Nb H5.",
                        "VernacExtend",
                        "cb4fc63d8749b820a231e38c74d3bc1aab2866f3"
                    ]
                },
                {
                    "command": [
                        "set (N := max Na Nb).",
                        "VernacExtend",
                        "684ca41298bceb83f1fbd84ef95ed0383e94ad0f"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist in H4, H5.",
                        "VernacExtend",
                        "4676b4e6ebd8919ea6eec17ab5519c7b36d39fe3"
                    ]
                },
                {
                    "command": [
                        "cut (Rabs (sum_f_R0 An N - l2) < (Rabs l1 - l2) / 2).",
                        "VernacExtend",
                        "64babc22f8e82e731805f4270b11f5bd7dc36f97"
                    ]
                },
                {
                    "command": [
                        "intro; cut (Rabs (Rabs l1 - Rabs (SP fn N x)) < (Rabs l1 - l2) / 2).",
                        "VernacExtend",
                        "02733f5bfa1d87e513b04f55d91f8f20103e4583"
                    ]
                },
                {
                    "command": [
                        "intro; cut (sum_f_R0 An N < (Rabs l1 + l2) / 2).",
                        "VernacExtend",
                        "56200d06ae8f3bb506dc04efda74d6d2e005aaf8"
                    ]
                },
                {
                    "command": [
                        "intro; cut ((Rabs l1 + l2) / 2 < Rabs (SP fn N x)).",
                        "VernacExtend",
                        "f511e86256524a13576137a704e9201154e3c887"
                    ]
                },
                {
                    "command": [
                        "intro; cut (sum_f_R0 An N < Rabs (SP fn N x)).",
                        "VernacExtend",
                        "c7adcac922eb1ff56cd06adfaa98887ab51af36b"
                    ]
                },
                {
                    "command": [
                        "intro; assert (H11 := H2 N).",
                        "VernacExtend",
                        "1735d0019505c82012d7d766d1bce98264d4755d"
                    ]
                },
                {
                    "command": [
                        "elim (Rlt_irrefl _ (Rle_lt_trans _ _ _ H11 H10)).",
                        "VernacExtend",
                        "7ce17dbb8a23e8df0427065b45f1c04b700242cf"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with ((Rabs l1 + l2) / 2); assumption.",
                        "VernacExtend",
                        "f1590c69d6d0bcb69c806ea3bb4881fc9118d200"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcase_abs (Rabs l1 - Rabs (SP fn N x))) as [Hlt|Hge].",
                        "VernacExtend",
                        "3cca4a5e008695bc8bd1ca9311ec2721802d588c"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (Rabs l1).",
                        "VernacExtend",
                        "d70da0da35e995bf9abf63952eb98d17f467d309"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with 2.",
                        "VernacExtend",
                        "6631f3c2df4cb853b13a1c15d269a9146336e287"
                    ]
                },
                {
                    "command": [
                        "prove_sup0.",
                        "VernacExtend",
                        "9681c23836ca7f82fee12028ab3f984ae6ec2935"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite (Rmult_comm 2); rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "c8b351c5e9d122af190e0cdd2aaf18d57dc2e845"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; rewrite double; apply Rplus_lt_compat_l; apply Hgt.",
                        "VernacExtend",
                        "6e66bae96d12f5097eb0e098141f6239f76ce090"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "apply (Rminus_lt _ _ Hlt).",
                        "VernacExtend",
                        "f272d217b43922c055a4fca362777a5f1221b925"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_right _ Hge) in H7.",
                        "VernacExtend",
                        "7127e46f8989d04641d3cc68fd286084df2a80d8"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with ((Rabs l1 - l2) / 2 - Rabs (SP fn N x)).",
                        "VernacExtend",
                        "0b6c4892e4a7edbb4058cc7d7572a791aec7fb06"
                    ]
                },
                {
                    "command": [
                        "replace ((Rabs l1 - l2) / 2 - Rabs (SP fn N x) + (Rabs l1 + l2) / 2) with (Rabs l1 - Rabs (SP fn N x)).",
                        "VernacExtend",
                        "2418df3a760b6140e822a8e4aaa7e93961266407"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus; rewrite Rplus_assoc; rewrite Rplus_opp_l; rewrite Rplus_0_r; apply H7.",
                        "VernacExtend",
                        "256d99bd29f9cf5e8b824a1ad2321a5e13676d87"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite Rmult_plus_distr_r; rewrite <- (Rmult_comm (/ 2)); rewrite Rmult_minus_distr_l; repeat rewrite (Rmult_comm (/ 2)); pattern (Rabs l1) at 1; rewrite double_var; unfold Rdiv in |- *; ring.",
                        "VernacExtend",
                        "c17294b6275f6297505af3b3fa3d1044e0de9bbd"
                    ]
                },
                {
                    "command": [
                        "destruct (Rcase_abs (sum_f_R0 An N - l2)) as [Hlt|Hge].",
                        "VernacExtend",
                        "43faa8f0af9fdd8381e63877446d894351353712"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with l2.",
                        "VernacExtend",
                        "232723e41697369ccf82b993589000ded8c13997"
                    ]
                },
                {
                    "command": [
                        "apply (Rminus_lt _ _ Hlt).",
                        "VernacExtend",
                        "f272d217b43922c055a4fca362777a5f1221b925"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with 2.",
                        "VernacExtend",
                        "6631f3c2df4cb853b13a1c15d269a9146336e287"
                    ]
                },
                {
                    "command": [
                        "prove_sup0.",
                        "VernacExtend",
                        "9681c23836ca7f82fee12028ab3f984ae6ec2935"
                    ]
                },
                {
                    "command": [
                        "rewrite (double l2); unfold Rdiv; rewrite (Rmult_comm 2); rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "0f97fc31ee65511afecd9dd617afe22e6045521c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; rewrite (Rplus_comm (Rabs l1)); apply Rplus_lt_compat_l; apply Hgt.",
                        "VernacExtend",
                        "0d0ca5fbbd50b9c18733b6ae8be3305498485083"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rabs_right _ Hge) in H6; apply Rplus_lt_reg_l with (- l2).",
                        "VernacExtend",
                        "786e7e57410cf8f0d6be4ffc11305a67c8f37cdd"
                    ]
                },
                {
                    "command": [
                        "replace (- l2 + (Rabs l1 + l2) / 2) with ((Rabs l1 - l2) / 2).",
                        "VernacExtend",
                        "0b8ebbc175b543a257ad9a455af24c6dd98af589"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm; apply H6.",
                        "VernacExtend",
                        "b05bacafb90d7ebe0dd988357b488431bd17f4dd"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite <- (Rmult_comm (/ 2)); rewrite Rmult_minus_distr_l; rewrite Rmult_plus_distr_r; pattern l2 at 2; rewrite double_var; repeat rewrite (Rmult_comm (/ 2)); rewrite Ropp_plus_distr; unfold Rdiv; ring.",
                        "VernacExtend",
                        "82cc0b9fd39fb564abe4fd0c4fd479c9479785b3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (Rabs (SP fn N x - l1)).",
                        "VernacExtend",
                        "0508c8eeb27781de84b99e26958f7d6496556352"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rabs_Ropp; rewrite Ropp_minus_distr'; apply Rabs_triang_inv2.",
                        "VernacExtend",
                        "691dbc8c8e6b1989201013c6f84617eba7904fc3"
                    ]
                },
                {
                    "command": [
                        "apply H4; unfold ge, N; apply le_max_l.",
                        "VernacExtend",
                        "a19d2a43e173cac2a9a3c3ec6e01588ffcb5af7a"
                    ]
                },
                {
                    "command": [
                        "apply H5; unfold ge, N; apply le_max_r.",
                        "VernacExtend",
                        "f162697dcd9e58a5887eb6a20246cad57a063347"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "7122edbd68559f255bfed03dc640472ed14eb4ef"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with l2.",
                        "VernacExtend",
                        "472df65381a723caa689aa5510b84397a70e6ea3"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; replace (l2 + (Rabs l1 - l2)) with (Rabs l1); [ apply Hgt | ring ].",
                        "VernacExtend",
                        "a321c03b1b8d6532ca6513acef29198a8f98b1e6"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "ee74bd033c1031a79ef440e1d41037d5c9648214"
                    ]
                },
                {
                    "command": [
                        "intros; induction n0 as [| n0 Hrecn0].",
                        "VernacExtend",
                        "4147b225d2b7dff1cbeddb29df1b14a33c05dc7c"
                    ]
                },
                {
                    "command": [
                        "unfold SP; simpl; apply H1.",
                        "VernacExtend",
                        "13f0754b13f5d0f9818f326c703ecaa3aff9685a"
                    ]
                },
                {
                    "command": [
                        "unfold SP; simpl.",
                        "VernacExtend",
                        "56b6758025ebb16a62a8b8072030435361357e67"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (Rabs (sum_f_R0 (fun k:nat => fn k x) n0) + Rabs (fn (S n0) x)).",
                        "VernacExtend",
                        "e4b3cb35f1389a36a427b1c0735afcdd2b34d518"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_triang.",
                        "VernacExtend",
                        "ac95e0693bced827aa4991eb13639b86503a8150"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (sum_f_R0 An n0 + Rabs (fn (S n0) x)).",
                        "VernacExtend",
                        "5bceee9b3a0248eb298caa36c85067d17fd52309"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- (Rplus_comm (Rabs (fn (S n0) x))).",
                        "VernacExtend",
                        "14dfd82e2db535e10490aaa2cb6a7c5971c6b10d"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l; apply Hrecn0.",
                        "VernacExtend",
                        "6fe39a2e97f9ac2146eaa9f51c825f484cf19945"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l; apply H1.",
                        "VernacExtend",
                        "db16c0b3cca0ae27809a9c193dca15968c247891"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}