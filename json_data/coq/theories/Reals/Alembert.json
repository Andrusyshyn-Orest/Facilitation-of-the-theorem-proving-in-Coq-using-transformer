{
    "filename": "theories/Reals/Alembert.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Rbase.",
            "VernacRequire",
            "c0a8d81b170d4ed8309a8632a3cac35f6cba016a"
        ],
        [
            "Require Import Rfunctions.",
            "VernacRequire",
            "e0ba64ca9fd07e0fc91c59b7bf007fb29a662a86"
        ],
        [
            "Require Import Rseries.",
            "VernacRequire",
            "7a432dd14e4529f426efb08dc0832c62a8dcc16b"
        ],
        [
            "Require Import SeqProp.",
            "VernacRequire",
            "a37c3bf41f1f017811a12d99565cebd0c11a7976"
        ],
        [
            "Require Import PartSum.",
            "VernacRequire",
            "615de8ef0ed75bdb68bd5486514f11be1837ffd8"
        ],
        [
            "Require Import Max.",
            "VernacRequire",
            "163f8b04f9c5ff0ff8fe9ce4c762873ab613a3fa"
        ],
        [
            "Local Open Scope R_scope.",
            "VernacOpenCloseScope",
            "b005c72bb3303e031b42be04be04c87c005faa38"
        ],
        [
            "Lemma Alembert_C1 : forall An:nat -> R, (forall n:nat, 0 < An n) -> Un_cv (fun n:nat => Rabs (An (S n) / An n)) 0 -> { l:R | Un_cv (fun N:nat => sum_f_R0 An N) l }.",
            "VernacStartTheoremProof",
            "0edb11985c059874cbb569b4fc18590de2d3c0c4"
        ],
        [
            "intros An H H0.",
            "VernacExtend",
            "4518a329cbf32e6388e927fe4ca53ca3c3deabe1"
        ],
        [
            "cut ({ l:R | is_lub (EUn (fun N:nat => sum_f_R0 An N)) l } -> { l:R | Un_cv (fun N:nat => sum_f_R0 An N) l }).",
            "VernacExtend",
            "58851d723817a48f95bab1f2fd8df0211903c49e"
        ],
        [
            "intro X; apply X.",
            "VernacExtend",
            "d8369b3f20c219353f24951955475b31a469aa1a"
        ],
        [
            "apply completeness.",
            "VernacExtend",
            "cacd984bc8302ffdd56c6fac7b444ece394f062c"
        ],
        [
            "unfold Un_cv in H0; unfold bound; cut (0 < / 2); [ intro | apply Rinv_0_lt_compat; prove_sup0 ].",
            "VernacExtend",
            "88a60c04f87fe3aba3374b7691364121ba600216"
        ],
        [
            "elim (H0 (/ 2) H1); intros.",
            "VernacExtend",
            "1303efe8d5556a9fd77f7167af107307a1236ec3"
        ],
        [
            "exists (sum_f_R0 An x + 2 * An (S x)).",
            "VernacExtend",
            "930d58b3b70d590e33177137d3ff188c298c2666"
        ],
        [
            "unfold is_upper_bound; intros; unfold EUn in H3; destruct H3 as (x1,->).",
            "VernacExtend",
            "ca1f390f35947c2a2fe48d569b929d543ac5cc74"
        ],
        [
            "destruct (lt_eq_lt_dec x1 x) as [[| -> ]|].",
            "VernacExtend",
            "333742617982159e4706901f90110c6d8ba026d0"
        ],
        [
            "replace (sum_f_R0 An x) with (sum_f_R0 An x1 + sum_f_R0 (fun i:nat => An (S x1 + i)%nat) (x - S x1)).",
            "VernacExtend",
            "c131204dfd285e1663fcdf0b7169d5f59362d2c2"
        ],
        [
            "pattern (sum_f_R0 An x1) at 1; rewrite <- Rplus_0_r; rewrite Rplus_assoc; apply Rplus_le_compat_l.",
            "VernacExtend",
            "eff798e0823c24f51bcf0f33d6b898da2e102470"
        ],
        [
            "left; apply Rplus_lt_0_compat.",
            "VernacExtend",
            "f6649e194849336dfce3c4a6987df6371a841634"
        ],
        [
            "apply tech1; intros; apply H.",
            "VernacExtend",
            "5220a73d63b282d805d8dd0a3b07bb184d7ee97e"
        ],
        [
            "apply Rmult_lt_0_compat; [ prove_sup0 | apply H ].",
            "VernacExtend",
            "2e4ae79ecb347a04f037fc49977f463a8b3fcb5f"
        ],
        [
            "symmetry ; apply tech2; assumption.",
            "VernacExtend",
            "b76022d68c75da7297e679d6221a704027ea1c97"
        ],
        [
            "pattern (sum_f_R0 An x) at 1; rewrite <- Rplus_0_r; apply Rplus_le_compat_l.",
            "VernacExtend",
            "4f0a78b47ba6e50722672731d44b8d2cb59815ce"
        ],
        [
            "left; apply Rmult_lt_0_compat; [ prove_sup0 | apply H ].",
            "VernacExtend",
            "53f8234dd3024b927ad20a05708df1db22f1e3bf"
        ],
        [
            "replace (sum_f_R0 An x1) with (sum_f_R0 An x + sum_f_R0 (fun i:nat => An (S x + i)%nat) (x1 - S x)).",
            "VernacExtend",
            "e7496c3c29e2e637cd19562468a3631647457f2a"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "cut (sum_f_R0 (fun i:nat => An (S x + i)%nat) (x1 - S x) <= An (S x) * sum_f_R0 (fun i:nat => (/ 2) ^ i) (x1 - S x)).",
            "VernacExtend",
            "90b09348735f35f11920c09b2110913127a89c47"
        ],
        [
            "intro; apply Rle_trans with (An (S x) * sum_f_R0 (fun i:nat => (/ 2) ^ i) (x1 - S x)).",
            "VernacExtend",
            "5f05a6fb36607f32498ece3e64d01753ac74591b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- (Rmult_comm (An (S x))); apply Rmult_le_compat_l.",
            "VernacExtend",
            "37546289200706d95255bc3d17d2376170a82b9d"
        ],
        [
            "left; apply H.",
            "VernacExtend",
            "0aa460f78d11391b522e663a46e7bb217b2676f0"
        ],
        [
            "rewrite tech3.",
            "VernacExtend",
            "3395aa529f6d4cddf777233b69852b87fa428d02"
        ],
        [
            "replace (1 - / 2) with (/ 2).",
            "VernacExtend",
            "8d66345058ebd2f17ff895d258dfefc0b29ea334"
        ],
        [
            "unfold Rdiv; rewrite Rinv_involutive.",
            "VernacExtend",
            "d85f854e8886997aca5b431e60769326d149e11a"
        ],
        [
            "pattern 2 at 3; rewrite <- Rmult_1_r; rewrite <- (Rmult_comm 2); apply Rmult_le_compat_l.",
            "VernacExtend",
            "e6f8ef6dccc46edb62309a42e0e70d416798d995"
        ],
        [
            "left; prove_sup0.",
            "VernacExtend",
            "0496d8f7fedff100b2a6a6c475d34e4594f44524"
        ],
        [
            "left; apply Rplus_lt_reg_l with ((/ 2) ^ S (x1 - S x)).",
            "VernacExtend",
            "109b0bb2d4371aa87af1c25131ef7b4308c66966"
        ],
        [
            "replace ((/ 2) ^ S (x1 - S x) + (1 - (/ 2) ^ S (x1 - S x))) with 1; [ idtac | ring ].",
            "VernacExtend",
            "1c46c21bab0bb3ae9316522bb00e0770407adca7"
        ],
        [
            "rewrite <- (Rplus_comm 1); pattern 1 at 1; rewrite <- Rplus_0_r; apply Rplus_lt_compat_l.",
            "VernacExtend",
            "6f16d758ead5cbf8d9e64406386bf4e618fc6468"
        ],
        [
            "apply pow_lt; apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "51d3a8d62762b46702643aae75259e670fa2cb5c"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "apply Rmult_eq_reg_l with 2.",
            "VernacExtend",
            "9e472b474e7916fa8b9644ceb0ce48465e2a1e18"
        ],
        [
            "rewrite Rmult_minus_distr_l; rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "571e06cb1b8149dcc6948b495fe1adf8895b2251"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "replace 1 with (/ 1); [ apply tech7; discrR | apply Rinv_1 ].",
            "VernacExtend",
            "a2d4a048c8df5867d0ee4be7623168c545d8b8b9"
        ],
        [
            "replace (An (S x)) with (An (S x + 0)%nat).",
            "VernacExtend",
            "e807ca53f0f1b5cca367f219c4641fb003726c5f"
        ],
        [
            "apply (tech6 (fun i:nat => An (S x + i)%nat) (/ 2)).",
            "VernacExtend",
            "7b78b4394544b80ab57f06824fb4586a9fab04b8"
        ],
        [
            "left; apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "fc25f088c7eb945b25a6fd912d0d79ce4330ae4c"
        ],
        [
            "intro; cut (forall n:nat, (n >= x)%nat -> An (S n) < / 2 * An n).",
            "VernacExtend",
            "5be33470620f6c47edc0626e0cbcc654964059c6"
        ],
        [
            "intro H4; replace (S x + S i)%nat with (S (S x + i)).",
            "VernacExtend",
            "e5e226108e7ce38f3565e72d3ce11713261c5eda"
        ],
        [
            "apply H4; unfold ge; apply tech8.",
            "VernacExtend",
            "c214f85838722d0997202e9bada9a71ccf9073b7"
        ],
        [
            "apply INR_eq; rewrite S_INR; do 2 rewrite plus_INR; do 2 rewrite S_INR; ring.",
            "VernacExtend",
            "9296a64c1b2631405524d4d54ae7d5be87a6a7e4"
        ],
        [
            "intros; unfold R_dist in H2; apply Rmult_lt_reg_l with (/ An n).",
            "VernacExtend",
            "3e47f3a3ab796b86fb209add8b9a720d90691ed2"
        ],
        [
            "apply Rinv_0_lt_compat; apply H.",
            "VernacExtend",
            "f2d2f14e084a3bec216ca83676c131c819f29b07"
        ],
        [
            "do 2 rewrite (Rmult_comm (/ An n)); rewrite Rmult_assoc; rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "bf5831b7a41c6457ce997d5e5ada979c81912018"
        ],
        [
            "rewrite Rmult_1_r; replace (An (S n) * / An n) with (Rabs (Rabs (An (S n) / An n) - 0)).",
            "VernacExtend",
            "f336fbe1dcf71effb65344fa50d293a4a3fbceba"
        ],
        [
            "apply H2; assumption.",
            "VernacExtend",
            "4a9f5fcfe7fc430a6576d9298552b6fe2f8ad298"
        ],
        [
            "unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; rewrite Rabs_Rabsolu; rewrite Rabs_right.",
            "VernacExtend",
            "1021de3a5e28069dcab9a6ff55f77b8d5e2d1cf4"
        ],
        [
            "unfold Rdiv; reflexivity.",
            "VernacExtend",
            "502d25ebbbf5eeefb8e58bf3d014bed415a2593b"
        ],
        [
            "left; unfold Rdiv; change (0 < An (S n) * / An n); apply Rmult_lt_0_compat; [ apply H | apply Rinv_0_lt_compat; apply H ].",
            "VernacExtend",
            "1572b37026a03f21a71e444bca7f5bce4a7aed23"
        ],
        [
            "intro H5; assert (H8 := H n); rewrite H5 in H8; elim (Rlt_irrefl _ H8).",
            "VernacExtend",
            "31213b6a1be8da6f011a2b0dcae77ec39024c40a"
        ],
        [
            "replace (S x + 0)%nat with (S x); [ reflexivity | ring ].",
            "VernacExtend",
            "8b087289150d9c7bc558767f053f784da03c9a8f"
        ],
        [
            "symmetry ; apply tech2; assumption.",
            "VernacExtend",
            "b76022d68c75da7297e679d6221a704027ea1c97"
        ],
        [
            "exists (sum_f_R0 An 0); unfold EUn; exists 0%nat; reflexivity.",
            "VernacExtend",
            "de5de960319b58703f957d54611577ddad6e8760"
        ],
        [
            "intros (x,H1).",
            "VernacExtend",
            "74b1f3c4c75c5e6479e2ea8892bc8606a2624a8b"
        ],
        [
            "exists x; apply Un_cv_crit_lub; [ unfold Un_growing; intro; rewrite tech5; pattern (sum_f_R0 An n) at 1; rewrite <- Rplus_0_r; apply Rplus_le_compat_l; left; apply H | apply H1 ].",
            "VernacExtend",
            "4de6fb64373f949c4891ab7f362d747fb5874de5"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma Alembert_C2 : forall An:nat -> R, (forall n:nat, An n <> 0) -> Un_cv (fun n:nat => Rabs (An (S n) / An n)) 0 -> { l:R | Un_cv (fun N:nat => sum_f_R0 An N) l }.",
            "VernacStartTheoremProof",
            "74b0ab47c8a8bd2f7f5a9eb6f814561a07db55cb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (Vn := fun i:nat => (2 * Rabs (An i) + An i) / 2).",
            "VernacExtend",
            "4badf70b48bdea7a1b7b43ee7809da5e4ec11472"
        ],
        [
            "set (Wn := fun i:nat => (2 * Rabs (An i) - An i) / 2).",
            "VernacExtend",
            "977345e3a58655f727f73b44a7bf3531dad31af7"
        ],
        [
            "cut (forall n:nat, 0 < Vn n).",
            "VernacExtend",
            "970d4dc9b851af8880a8a5a9291c519e4b1c80f4"
        ],
        [
            "intro; cut (forall n:nat, 0 < Wn n).",
            "VernacExtend",
            "c88a773ec6176cad07c0585863f645ba52c70ee0"
        ],
        [
            "intro; cut (Un_cv (fun n:nat => Rabs (Vn (S n) / Vn n)) 0).",
            "VernacExtend",
            "d453ac4a9b6a3cf56d6f718306c90df135c5de08"
        ],
        [
            "intro; cut (Un_cv (fun n:nat => Rabs (Wn (S n) / Wn n)) 0).",
            "VernacExtend",
            "776c168e66aa997950c684478c02a48b57408ffc"
        ],
        [
            "intro; pose proof (Alembert_C1 Vn H1 H3) as (x,p).",
            "VernacExtend",
            "1edb0ebe33f9055914250db62832c04b100bb9bf"
        ],
        [
            "pose proof (Alembert_C1 Wn H2 H4) as (x0,p0).",
            "VernacExtend",
            "39821881ff32ceff9170c55239aed42c7817fa57"
        ],
        [
            "exists (x - x0); unfold Un_cv; unfold Un_cv in p; unfold Un_cv in p0; intros; cut (0 < eps / 2).",
            "VernacExtend",
            "cf52ca722cc5288b023afbdedb7d1f167da0ae48"
        ],
        [
            "intro H6; destruct (p (eps / 2) H6) as (x1,H8).",
            "VernacExtend",
            "ff3fa56b0dccbb4eae1ffc0315280ebc81d1b660"
        ],
        [
            "clear p.",
            "VernacExtend",
            "5f73d163168e7a544792b1dfd7eff9cdb7659426"
        ],
        [
            "destruct (p0 (eps / 2) H6) as (x2,H9).",
            "VernacExtend",
            "a8e733337f5907bc6a9f26e8551b23e0c5de1f99"
        ],
        [
            "clear p0.",
            "VernacExtend",
            "d8deee2bd828032dcc3a3db1b0752b858f737566"
        ],
        [
            "set (N := max x1 x2).",
            "VernacExtend",
            "bd7cbe9f18f773e96dbdb3dfcb0d95947ab2adb2"
        ],
        [
            "exists N; intros; replace (sum_f_R0 An n) with (sum_f_R0 Vn n - sum_f_R0 Wn n).",
            "VernacExtend",
            "3bdcb6f854e1038a5e1c50cada61b89cb1cc113e"
        ],
        [
            "unfold R_dist; replace (sum_f_R0 Vn n - sum_f_R0 Wn n - (x - x0)) with (sum_f_R0 Vn n - x + - (sum_f_R0 Wn n - x0)); [ idtac | ring ]; apply Rle_lt_trans with (Rabs (sum_f_R0 Vn n - x) + Rabs (- (sum_f_R0 Wn n - x0))).",
            "VernacExtend",
            "2132cee67b2881c4aedd1dfb85a3b36b72960a37"
        ],
        [
            "apply Rabs_triang.",
            "VernacExtend",
            "ac95e0693bced827aa4991eb13639b86503a8150"
        ],
        [
            "rewrite Rabs_Ropp; apply Rlt_le_trans with (eps / 2 + eps / 2).",
            "VernacExtend",
            "5a92dd171b13febee887a963eff1cf9bc04682b9"
        ],
        [
            "apply Rplus_lt_compat.",
            "VernacExtend",
            "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
        ],
        [
            "unfold R_dist in H8; apply H8; unfold ge; apply le_trans with N; [ unfold N; apply le_max_l | assumption ].",
            "VernacExtend",
            "7009231692104ac164a3fea43b68d25bff47eead"
        ],
        [
            "unfold R_dist in H9; apply H9; unfold ge; apply le_trans with N; [ unfold N; apply le_max_r | assumption ].",
            "VernacExtend",
            "a6edea5af42bcda06656ea7355462aa3e40200f5"
        ],
        [
            "right; symmetry ; apply double_var.",
            "VernacExtend",
            "e5c70a44359939c92b66ebe2ece2eec94f12d2d7"
        ],
        [
            "symmetry ; apply tech11; intro; unfold Vn, Wn; unfold Rdiv; do 2 rewrite <- (Rmult_comm (/ 2)); apply Rmult_eq_reg_l with 2.",
            "VernacExtend",
            "860446caa229aa2a81f7392bdac100f7c30239b3"
        ],
        [
            "rewrite Rmult_minus_distr_l; repeat rewrite <- Rmult_assoc; rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "bc3f61657ec590a1c812344c6effb7b4be031336"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; prove_sup0 ].",
            "VernacExtend",
            "4d905fce1c75d7adfc4f1cd2deb30dbdf49bf2f3"
        ],
        [
            "cut (forall n:nat, / 2 * Rabs (An n) <= Wn n <= 3 * / 2 * Rabs (An n)).",
            "VernacExtend",
            "d3e7b03acb386f578c743f8224a0eeea044443b5"
        ],
        [
            "intro; cut (forall n:nat, / Wn n <= 2 * / Rabs (An n)).",
            "VernacExtend",
            "0ce52fd515771fb83f88432371c5cf1a43cc4e03"
        ],
        [
            "intro; cut (forall n:nat, Wn (S n) / Wn n <= 3 * Rabs (An (S n) / An n)).",
            "VernacExtend",
            "2652f30427243c5f55c16d277c94001769f6bc37"
        ],
        [
            "intro; unfold Un_cv; intros; unfold Un_cv in H0; cut (0 < eps / 3).",
            "VernacExtend",
            "06cbee5715fabdce7ba44d99f984b5aa66cd445a"
        ],
        [
            "intro; elim (H0 (eps / 3) H8); intros.",
            "VernacExtend",
            "8683bcbe5c8b7fc628884ff4b82bdcee97406ecf"
        ],
        [
            "exists x; intros.",
            "VernacExtend",
            "630f24a2d635df94b063a62023a90567ef134b19"
        ],
        [
            "assert (H11 := H9 n H10).",
            "VernacExtend",
            "24d715f0a2aaf22c3fd509706f864ddd337be8b4"
        ],
        [
            "unfold R_dist; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; rewrite Rabs_Rabsolu; unfold R_dist in H11; unfold Rminus in H11; rewrite Ropp_0 in H11; rewrite Rplus_0_r in H11; rewrite Rabs_Rabsolu in H11; rewrite Rabs_right.",
            "VernacExtend",
            "0a76cd769cd12a89486c1e1dfeb5042d2f9b3bd4"
        ],
        [
            "apply Rle_lt_trans with (3 * Rabs (An (S n) / An n)).",
            "VernacExtend",
            "c2602634b64ef9a57c9e69926384d2304dae0380"
        ],
        [
            "apply H6.",
            "VernacExtend",
            "b0314bbdc776869d305067ca471096a36fa958c1"
        ],
        [
            "apply Rmult_lt_reg_l with (/ 3).",
            "VernacExtend",
            "a589ca652ef0d1a8befaa2ee59369951184a8ed0"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "ee74bd033c1031a79ef440e1d41037d5c9648214"
        ],
        [
            "rewrite <- Rmult_assoc; rewrite <- Rinv_l_sym; [ idtac | discrR ]; rewrite Rmult_1_l; rewrite <- (Rmult_comm eps); unfold Rdiv in H11; exact H11.",
            "VernacExtend",
            "760a6b3e989e484ff83539a7c182b0d2ed922610"
        ],
        [
            "left; change (0 < Wn (S n) / Wn n); unfold Rdiv; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "2f5c76b04eddb00eb6434b4ba9b1f94d8827e720"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "apply Rinv_0_lt_compat; apply H2.",
            "VernacExtend",
            "8706a6379af21b1e0687b036d1f22e3ec09607e4"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; prove_sup0 ].",
            "VernacExtend",
            "4d905fce1c75d7adfc4f1cd2deb30dbdf49bf2f3"
        ],
        [
            "intro; unfold Rdiv; rewrite Rabs_mult; rewrite <- Rmult_assoc; replace 3 with (2 * (3 * / 2)); [ idtac | rewrite <- Rmult_assoc; apply Rinv_r_simpl_m; discrR ]; apply Rle_trans with (Wn (S n) * 2 * / Rabs (An n)).",
            "VernacExtend",
            "d170527ed54981771c9fca2cd4c7f38b94f33b3f"
        ],
        [
            "rewrite Rmult_assoc; apply Rmult_le_compat_l.",
            "VernacExtend",
            "994d36ecbd521a8caf6578dc1f8ef6ee2f2064df"
        ],
        [
            "left; apply H2.",
            "VernacExtend",
            "be2b38e8917d14be6e11e98c1be6813c5506a365"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "rewrite Rabs_Rinv.",
            "VernacExtend",
            "37f0a3ac5c309484aec5354295705ced53683ada"
        ],
        [
            "replace (Wn (S n) * 2 * / Rabs (An n)) with (2 * / Rabs (An n) * Wn (S n)); [ idtac | ring ]; replace (2 * (3 * / 2) * Rabs (An (S n)) * / Rabs (An n)) with (2 * / Rabs (An n) * (3 * / 2 * Rabs (An (S n)))); [ idtac | ring ]; apply Rmult_le_compat_l.",
            "VernacExtend",
            "5f31d1919ccf32059cf3828d02d712b2891932a7"
        ],
        [
            "left; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "71c62849403cd1175220512dbc3f749dc6ddf1fe"
        ],
        [
            "prove_sup0.",
            "VernacExtend",
            "9681c23836ca7f82fee12028ab3f984ae6ec2935"
        ],
        [
            "apply Rinv_0_lt_compat; apply Rabs_pos_lt; apply H.",
            "VernacExtend",
            "38e4d55ae031fda7dc1f98571324b07101b8a2ea"
        ],
        [
            "elim (H4 (S n)); intros; assumption.",
            "VernacExtend",
            "711fbd45bfbe60ba32388c2e81b2d3c4a410a8cb"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "intro; apply Rmult_le_reg_l with (Wn n).",
            "VernacExtend",
            "17e624a4c4a826a4708d5426f01f62952a584f8b"
        ],
        [
            "apply H2.",
            "VernacExtend",
            "17101978526a14fb5ad41816224a2fc35cc3d256"
        ],
        [
            "rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "2ca74255a63c294f9442d956f32a2e3784636efb"
        ],
        [
            "apply Rmult_le_reg_l with (Rabs (An n)).",
            "VernacExtend",
            "bdd19d5a30bc00ab2daade83d381aeadd358535e"
        ],
        [
            "apply Rabs_pos_lt; apply H.",
            "VernacExtend",
            "9b9e792fbe22e3bcf0332d49218d1184fd9b1eaf"
        ],
        [
            "rewrite Rmult_1_r; replace (Rabs (An n) * (Wn n * (2 * / Rabs (An n)))) with (2 * Wn n * (Rabs (An n) * / Rabs (An n))); [ idtac | ring ]; rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "dfe9ce471aac7dfedf9dd10e18d56482e4e1b693"
        ],
        [
            "rewrite Rmult_1_r; apply Rmult_le_reg_l with (/ 2).",
            "VernacExtend",
            "93123b53e8d088f1645e110d636fd61cf18fee32"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "ee74bd033c1031a79ef440e1d41037d5c9648214"
        ],
        [
            "rewrite <- Rmult_assoc; rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "eccb067dc9e836ad48bf16c61cd308004f5d6712"
        ],
        [
            "rewrite Rmult_1_l; elim (H4 n); intros; assumption.",
            "VernacExtend",
            "55480b1c55ee53d0c02f1b11a2c1d7f6013d4af8"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "apply Rabs_no_R0; apply H.",
            "VernacExtend",
            "c0eac17e7cc00315824d854ecf1e419940c43360"
        ],
        [
            "red; intro; assert (H6 := H2 n); rewrite H5 in H6; elim (Rlt_irrefl _ H6).",
            "VernacExtend",
            "bc69f8edad554223b2f3577f68e398ff607c4301"
        ],
        [
            "intro; split.",
            "VernacExtend",
            "fab266bb307ddec4a6ab91d7f2efd84a9c1736ef"
        ],
        [
            "unfold Wn; unfold Rdiv; rewrite <- (Rmult_comm (/ 2)); apply Rmult_le_compat_l.",
            "VernacExtend",
            "722eb4fbbdaf6d7237f6cbfa5f026d9d5c7089ab"
        ],
        [
            "left; apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "fc25f088c7eb945b25a6fd912d0d79ce4330ae4c"
        ],
        [
            "pattern (Rabs (An n)) at 1; rewrite <- Rplus_0_r; rewrite double; unfold Rminus; rewrite Rplus_assoc; apply Rplus_le_compat_l.",
            "VernacExtend",
            "6140bf43b03c6639c2bc3add8f55c90a23556e21"
        ],
        [
            "apply Rplus_le_reg_l with (An n).",
            "VernacExtend",
            "af8af55ab3c4b45fef4ae88a38497c41228f4b97"
        ],
        [
            "rewrite Rplus_0_r; rewrite (Rplus_comm (An n)); rewrite Rplus_assoc; rewrite Rplus_opp_l; rewrite Rplus_0_r; apply RRle_abs.",
            "VernacExtend",
            "607a899d09a8546cf8ab42ac379c42f8afb6c5e4"
        ],
        [
            "unfold Wn; unfold Rdiv; repeat rewrite <- (Rmult_comm (/ 2)); repeat rewrite Rmult_assoc; apply Rmult_le_compat_l.",
            "VernacExtend",
            "15ab1169a19a927024c8908b4ec8708f4c5bf504"
        ],
        [
            "left; apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "fc25f088c7eb945b25a6fd912d0d79ce4330ae4c"
        ],
        [
            "unfold Rminus; rewrite double; replace (3 * Rabs (An n)) with (Rabs (An n) + Rabs (An n) + Rabs (An n)); [ idtac | ring ]; repeat rewrite Rplus_assoc; repeat apply Rplus_le_compat_l.",
            "VernacExtend",
            "37ebeb023d41484c05fffa1a9d6cf5d1f242b502"
        ],
        [
            "rewrite <- Rabs_Ropp; apply RRle_abs.",
            "VernacExtend",
            "4ecb3e2260965d6d9df7e30c3a4c5bd460cc893a"
        ],
        [
            "cut (forall n:nat, / 2 * Rabs (An n) <= Vn n <= 3 * / 2 * Rabs (An n)).",
            "VernacExtend",
            "7ed36c28c2623665243113c83346b57248b84a20"
        ],
        [
            "intro; cut (forall n:nat, / Vn n <= 2 * / Rabs (An n)).",
            "VernacExtend",
            "c41a4d50d2e04118124f81d9160e2e9063d74413"
        ],
        [
            "intro; cut (forall n:nat, Vn (S n) / Vn n <= 3 * Rabs (An (S n) / An n)).",
            "VernacExtend",
            "c2364faf47afbf853bc44bf3f06347cee2ac7a6c"
        ],
        [
            "intro; unfold Un_cv; intros; unfold Un_cv in H1; cut (0 < eps / 3).",
            "VernacExtend",
            "f78f49f7b65151b7c8af3fa27780305e80dba0ab"
        ],
        [
            "intro; elim (H0 (eps / 3) H7); intros.",
            "VernacExtend",
            "1b7a3a6a59fe837a7ef5529765c547d8fff54aae"
        ],
        [
            "exists x; intros.",
            "VernacExtend",
            "630f24a2d635df94b063a62023a90567ef134b19"
        ],
        [
            "assert (H10 := H8 n H9).",
            "VernacExtend",
            "0e35557735105495216be8cccdc4755ac700b046"
        ],
        [
            "unfold R_dist; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; rewrite Rabs_Rabsolu; unfold R_dist in H10; unfold Rminus in H10; rewrite Ropp_0 in H10; rewrite Rplus_0_r in H10; rewrite Rabs_Rabsolu in H10; rewrite Rabs_right.",
            "VernacExtend",
            "f56d1be2e034b32c20ebf9f5683589852e281775"
        ],
        [
            "apply Rle_lt_trans with (3 * Rabs (An (S n) / An n)).",
            "VernacExtend",
            "c2602634b64ef9a57c9e69926384d2304dae0380"
        ],
        [
            "apply H5.",
            "VernacExtend",
            "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
        ],
        [
            "apply Rmult_lt_reg_l with (/ 3).",
            "VernacExtend",
            "a589ca652ef0d1a8befaa2ee59369951184a8ed0"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "ee74bd033c1031a79ef440e1d41037d5c9648214"
        ],
        [
            "rewrite <- Rmult_assoc; rewrite <- Rinv_l_sym; [ idtac | discrR ]; rewrite Rmult_1_l; rewrite <- (Rmult_comm eps); unfold Rdiv in H10; exact H10.",
            "VernacExtend",
            "477bfde18cfcc101fd411dc321a00e3d2d365b9a"
        ],
        [
            "left; change (0 < Vn (S n) / Vn n); unfold Rdiv; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "1382b86a297dc32eb9a0c9aa073788aa8df58817"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "apply Rinv_0_lt_compat; apply H1.",
            "VernacExtend",
            "7e95d035d3eb926b15c72f713bfd14714444f7f3"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; prove_sup0 ].",
            "VernacExtend",
            "4d905fce1c75d7adfc4f1cd2deb30dbdf49bf2f3"
        ],
        [
            "intro; unfold Rdiv; rewrite Rabs_mult; rewrite <- Rmult_assoc; replace 3 with (2 * (3 * / 2)); [ idtac | rewrite <- Rmult_assoc; apply Rinv_r_simpl_m; discrR ]; apply Rle_trans with (Vn (S n) * 2 * / Rabs (An n)).",
            "VernacExtend",
            "215a71c3ece6bcebed51ef7806d92f9e4967b3ad"
        ],
        [
            "rewrite Rmult_assoc; apply Rmult_le_compat_l.",
            "VernacExtend",
            "994d36ecbd521a8caf6578dc1f8ef6ee2f2064df"
        ],
        [
            "left; apply H1.",
            "VernacExtend",
            "993f5d69ffe02b0f51fe3710b8fd8b146d347b12"
        ],
        [
            "apply H4.",
            "VernacExtend",
            "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
        ],
        [
            "rewrite Rabs_Rinv.",
            "VernacExtend",
            "37f0a3ac5c309484aec5354295705ced53683ada"
        ],
        [
            "replace (Vn (S n) * 2 * / Rabs (An n)) with (2 * / Rabs (An n) * Vn (S n)); [ idtac | ring ]; replace (2 * (3 * / 2) * Rabs (An (S n)) * / Rabs (An n)) with (2 * / Rabs (An n) * (3 * / 2 * Rabs (An (S n)))); [ idtac | ring ]; apply Rmult_le_compat_l.",
            "VernacExtend",
            "4dfa004455a61f93300b1a9586524d896014db89"
        ],
        [
            "left; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "71c62849403cd1175220512dbc3f749dc6ddf1fe"
        ],
        [
            "prove_sup0.",
            "VernacExtend",
            "9681c23836ca7f82fee12028ab3f984ae6ec2935"
        ],
        [
            "apply Rinv_0_lt_compat; apply Rabs_pos_lt; apply H.",
            "VernacExtend",
            "38e4d55ae031fda7dc1f98571324b07101b8a2ea"
        ],
        [
            "elim (H3 (S n)); intros; assumption.",
            "VernacExtend",
            "c2efea8a8ec746fb85bc9a9d3519e6db85bcf2ec"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "intro; apply Rmult_le_reg_l with (Vn n).",
            "VernacExtend",
            "6f5fc33709063c9c6220e3c1b4bd6981020c56f2"
        ],
        [
            "apply H1.",
            "VernacExtend",
            "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
        ],
        [
            "rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "2ca74255a63c294f9442d956f32a2e3784636efb"
        ],
        [
            "apply Rmult_le_reg_l with (Rabs (An n)).",
            "VernacExtend",
            "bdd19d5a30bc00ab2daade83d381aeadd358535e"
        ],
        [
            "apply Rabs_pos_lt; apply H.",
            "VernacExtend",
            "9b9e792fbe22e3bcf0332d49218d1184fd9b1eaf"
        ],
        [
            "rewrite Rmult_1_r; replace (Rabs (An n) * (Vn n * (2 * / Rabs (An n)))) with (2 * Vn n * (Rabs (An n) * / Rabs (An n))); [ idtac | ring ]; rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "b3bd7f44225dd551d280587c5b4a6c89499abe98"
        ],
        [
            "rewrite Rmult_1_r; apply Rmult_le_reg_l with (/ 2).",
            "VernacExtend",
            "93123b53e8d088f1645e110d636fd61cf18fee32"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "ee74bd033c1031a79ef440e1d41037d5c9648214"
        ],
        [
            "rewrite <- Rmult_assoc; rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "eccb067dc9e836ad48bf16c61cd308004f5d6712"
        ],
        [
            "rewrite Rmult_1_l; elim (H3 n); intros; assumption.",
            "VernacExtend",
            "a1b7fe7e7f39cd872bb1388fd91ec237341767c6"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "apply Rabs_no_R0; apply H.",
            "VernacExtend",
            "c0eac17e7cc00315824d854ecf1e419940c43360"
        ],
        [
            "red; intro; assert (H5 := H1 n); rewrite H4 in H5; elim (Rlt_irrefl _ H5).",
            "VernacExtend",
            "c28b41fc5e3ea0b27666bd4a57b050a2581e521c"
        ],
        [
            "intro; split.",
            "VernacExtend",
            "fab266bb307ddec4a6ab91d7f2efd84a9c1736ef"
        ],
        [
            "unfold Vn; unfold Rdiv; rewrite <- (Rmult_comm (/ 2)); apply Rmult_le_compat_l.",
            "VernacExtend",
            "60ad35b0ed1717d4676aff909bb3cad80dc4defa"
        ],
        [
            "left; apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "fc25f088c7eb945b25a6fd912d0d79ce4330ae4c"
        ],
        [
            "pattern (Rabs (An n)) at 1; rewrite <- Rplus_0_r; rewrite double; rewrite Rplus_assoc; apply Rplus_le_compat_l.",
            "VernacExtend",
            "28e494048275bf072e8b871f13768b79dfdf0153"
        ],
        [
            "apply Rplus_le_reg_l with (- An n); rewrite Rplus_0_r; rewrite <- (Rplus_comm (An n)); rewrite <- Rplus_assoc; rewrite Rplus_opp_l; rewrite Rplus_0_l; rewrite <- Rabs_Ropp; apply RRle_abs.",
            "VernacExtend",
            "30c84a601196e11d9580fde3bd878c3142264db1"
        ],
        [
            "unfold Vn; unfold Rdiv; repeat rewrite <- (Rmult_comm (/ 2)); repeat rewrite Rmult_assoc; apply Rmult_le_compat_l.",
            "VernacExtend",
            "caa0a67395f0adb44e3900d9d529cbeb56312053"
        ],
        [
            "left; apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "fc25f088c7eb945b25a6fd912d0d79ce4330ae4c"
        ],
        [
            "unfold Rminus; rewrite double; replace (3 * Rabs (An n)) with (Rabs (An n) + Rabs (An n) + Rabs (An n)); [ idtac | ring ]; repeat rewrite Rplus_assoc; repeat apply Rplus_le_compat_l; apply RRle_abs.",
            "VernacExtend",
            "d7b0498c2f4fff178cfade28a379d02c72655c46"
        ],
        [
            "intro; unfold Wn; unfold Rdiv; rewrite <- (Rmult_0_r (/ 2)); rewrite <- (Rmult_comm (/ 2)); apply Rmult_lt_compat_l.",
            "VernacExtend",
            "260b33886718380e7b205b07edb82e9e356fd16c"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "ee74bd033c1031a79ef440e1d41037d5c9648214"
        ],
        [
            "apply Rplus_lt_reg_l with (An n); rewrite Rplus_0_r; unfold Rminus; rewrite (Rplus_comm (An n)); rewrite Rplus_assoc; rewrite Rplus_opp_l; rewrite Rplus_0_r; apply Rle_lt_trans with (Rabs (An n)).",
            "VernacExtend",
            "8a373cd16a2bf18f6469a045ca1515e272aa1df6"
        ],
        [
            "apply RRle_abs.",
            "VernacExtend",
            "1333b00626244e19099bec7e0de632062c4070a3"
        ],
        [
            "rewrite double; pattern (Rabs (An n)) at 1; rewrite <- Rplus_0_r; apply Rplus_lt_compat_l; apply Rabs_pos_lt; apply H.",
            "VernacExtend",
            "6018883917bd34421c79dc1f63a3575bdcb0fc2d"
        ],
        [
            "intro; unfold Vn; unfold Rdiv; rewrite <- (Rmult_0_r (/ 2)); rewrite <- (Rmult_comm (/ 2)); apply Rmult_lt_compat_l.",
            "VernacExtend",
            "9c2b780809310d9b9f56bf4c2ecaa23b73e551ca"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0.",
            "VernacExtend",
            "ee74bd033c1031a79ef440e1d41037d5c9648214"
        ],
        [
            "apply Rplus_lt_reg_l with (- An n); rewrite Rplus_0_r; unfold Rminus; rewrite (Rplus_comm (- An n)); rewrite Rplus_assoc; rewrite Rplus_opp_r; rewrite Rplus_0_r; apply Rle_lt_trans with (Rabs (An n)).",
            "VernacExtend",
            "3c27e6a8e99a1a391007d889b665b4e6643531be"
        ],
        [
            "rewrite <- Rabs_Ropp; apply RRle_abs.",
            "VernacExtend",
            "4ecb3e2260965d6d9df7e30c3a4c5bd460cc893a"
        ],
        [
            "rewrite double; pattern (Rabs (An n)) at 1; rewrite <- Rplus_0_r; apply Rplus_lt_compat_l; apply Rabs_pos_lt; apply H.",
            "VernacExtend",
            "6018883917bd34421c79dc1f63a3575bdcb0fc2d"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma AlembertC3_step1 : forall (An:nat -> R) (x:R), x <> 0 -> (forall n:nat, An n <> 0) -> Un_cv (fun n:nat => Rabs (An (S n) / An n)) 0 -> { l:R | Pser An x l }.",
            "VernacStartTheoremProof",
            "2083fd31216193b5aabe20a9e6b579f66aa025b7"
        ],
        [
            "intros; set (Bn := fun i:nat => An i * x ^ i).",
            "VernacExtend",
            "8e1183a6ab93aedc5ffe966c39202845f45dc4da"
        ],
        [
            "cut (forall n:nat, Bn n <> 0).",
            "VernacExtend",
            "ff80238967b6eb39d34bf4de653bf8fe35202721"
        ],
        [
            "intro; cut (Un_cv (fun n:nat => Rabs (Bn (S n) / Bn n)) 0).",
            "VernacExtend",
            "bba8edbc0f4989a6796c4f71bbe47cb3e9739909"
        ],
        [
            "intro; destruct (Alembert_C2 Bn H2 H3) as (x0,H4).",
            "VernacExtend",
            "b81773cfbfbecac094dc91523c121ac5dc6a3fe7"
        ],
        [
            "exists x0; unfold Bn in H4; apply tech12; assumption.",
            "VernacExtend",
            "e116cf8f8361f5f187a04c016305df95be5cfd97"
        ],
        [
            "unfold Un_cv; intros; unfold Un_cv in H1; cut (0 < eps / Rabs x).",
            "VernacExtend",
            "1c9ee6d95b7a2c51f82416333de523954d5d436d"
        ],
        [
            "intro; elim (H1 (eps / Rabs x) H4); intros.",
            "VernacExtend",
            "736866619d90891920663aed40c4beb161f124d9"
        ],
        [
            "exists x0; intros; unfold R_dist; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; rewrite Rabs_Rabsolu; unfold Bn; replace (An (S n) * x ^ S n / (An n * x ^ n)) with (An (S n) / An n * x).",
            "VernacExtend",
            "3949ccd83d4b92e6f67565e6c23c6b204883c5eb"
        ],
        [
            "rewrite Rabs_mult; apply Rmult_lt_reg_l with (/ Rabs x).",
            "VernacExtend",
            "544c236333fe5424cd113a8dfc86b70f515f9951"
        ],
        [
            "apply Rinv_0_lt_compat; apply Rabs_pos_lt; assumption.",
            "VernacExtend",
            "e4c91a40f2fa1c87312f044d164ffed2c6475792"
        ],
        [
            "rewrite <- (Rmult_comm (Rabs x)); rewrite <- Rmult_assoc; rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "72989375e9e0dec75378a21159288c8e8704be4d"
        ],
        [
            "rewrite Rmult_1_l; rewrite <- (Rmult_comm eps); unfold Rdiv in H5; replace (Rabs (An (S n) / An n)) with (R_dist (Rabs (An (S n) * / An n)) 0).",
            "VernacExtend",
            "574b7cfc88dd1b6c52f612e7760b70ad2cfd0916"
        ],
        [
            "apply H5; assumption.",
            "VernacExtend",
            "8f860832491462a0a9db7bd7c081da8cdc789cad"
        ],
        [
            "unfold R_dist; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; rewrite Rabs_Rabsolu; unfold Rdiv; reflexivity.",
            "VernacExtend",
            "aa3b5d6e98c8fd96f4dca1f1153162aee0f1a78e"
        ],
        [
            "apply Rabs_no_R0; assumption.",
            "VernacExtend",
            "919603fae9f5552a2987bbb604439a06966af0d9"
        ],
        [
            "replace (S n) with (n + 1)%nat; [ idtac | ring ]; rewrite pow_add; unfold Rdiv; rewrite Rinv_mult_distr.",
            "VernacExtend",
            "5a25b4308e6485ca327c974311ff43222c813bc8"
        ],
        [
            "replace (An (n + 1)%nat * (x ^ n * x ^ 1) * (/ An n * / x ^ n)) with (An (n + 1)%nat * x ^ 1 * / An n * (x ^ n * / x ^ n)); [ idtac | ring ]; rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "3ad4a152616215fb4039338bba771479e85c3161"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "apply pow_nonzero; assumption.",
            "VernacExtend",
            "6d4db41cbe558f394b4e9accb20ef61b0da0c671"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply pow_nonzero; assumption.",
            "VernacExtend",
            "6d4db41cbe558f394b4e9accb20ef61b0da0c671"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; apply Rabs_pos_lt; assumption ].",
            "VernacExtend",
            "e6374a53c1da33d802c11a194e690a8e6d3c3101"
        ],
        [
            "intro; unfold Bn; apply prod_neq_R0; [ apply H0 | apply pow_nonzero; assumption ].",
            "VernacExtend",
            "6ebb1631ee7e7dd1faef109681261cc3f9eaeabc"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma AlembertC3_step2 : forall (An:nat -> R) (x:R), x = 0 -> { l:R | Pser An x l }.",
            "VernacStartTheoremProof",
            "bb08bbfd0e11a422ae22358c8c9619fd5345c6b5"
        ],
        [
            "intros; exists (An 0%nat).",
            "VernacExtend",
            "18f104f97329ed9b74db25080c894952992611f1"
        ],
        [
            "unfold Pser; unfold infinite_sum; intros; exists 0%nat; intros; replace (sum_f_R0 (fun n0:nat => An n0 * x ^ n0) n) with (An 0%nat).",
            "VernacExtend",
            "e249680c687ed5fcdb10669ef9ce63a755e04093"
        ],
        [
            "unfold R_dist; unfold Rminus; rewrite Rplus_opp_r; rewrite Rabs_R0; assumption.",
            "VernacExtend",
            "67bf0f04c162fcdd27be92864812afe6cb9d76b6"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "rewrite tech5; rewrite Hrecn; [ rewrite H; simpl; ring | unfold ge; apply le_O_n ].",
            "VernacExtend",
            "5956c1e1b554f75ef1f712b52c1be88748a0a6c4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem Alembert_C3 : forall (An:nat -> R) (x:R), (forall n:nat, An n <> 0) -> Un_cv (fun n:nat => Rabs (An (S n) / An n)) 0 -> { l:R | Pser An x l }.",
            "VernacStartTheoremProof",
            "87816bc9f9e9e59f855d9ebdb7301a2c19a4117d"
        ],
        [
            "intros; destruct (total_order_T x 0) as [[Hlt|Heq]|Hgt].",
            "VernacExtend",
            "1879ff708aabadf57c0f7dcb7805cd35b012f097"
        ],
        [
            "cut (x <> 0).",
            "VernacExtend",
            "76f0ffb44cb1997ed4a795f57ccb47e007c7c261"
        ],
        [
            "intro; apply AlembertC3_step1; assumption.",
            "VernacExtend",
            "5cccc02570ff580bd53804f2d81ce47350235d7e"
        ],
        [
            "red; intro; rewrite H1 in Hlt; elim (Rlt_irrefl _ Hlt).",
            "VernacExtend",
            "388235091098263f185c5162ddeddf67f6d0b0fa"
        ],
        [
            "apply AlembertC3_step2; assumption.",
            "VernacExtend",
            "0a508f5e8fc8ba15d840f3223524c90fe99f738e"
        ],
        [
            "cut (x <> 0).",
            "VernacExtend",
            "76f0ffb44cb1997ed4a795f57ccb47e007c7c261"
        ],
        [
            "intro; apply AlembertC3_step1; assumption.",
            "VernacExtend",
            "5cccc02570ff580bd53804f2d81ce47350235d7e"
        ],
        [
            "red; intro; rewrite H1 in Hgt; elim (Rlt_irrefl _ Hgt).",
            "VernacExtend",
            "173d806af27981f3cf7e1d2f8b9b79d27da932d5"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma Alembert_C4 : forall (An:nat -> R) (k:R), 0 <= k < 1 -> (forall n:nat, 0 < An n) -> Un_cv (fun n:nat => Rabs (An (S n) / An n)) k -> { l:R | Un_cv (fun N:nat => sum_f_R0 An N) l }.",
            "VernacStartTheoremProof",
            "871f4ec32dc1c03aee913d571f98bc1095453c8f"
        ],
        [
            "intros An k Hyp H H0.",
            "VernacExtend",
            "06295d2d53e7303dcface30a3a8c115dda9a689f"
        ],
        [
            "cut ({ l:R | is_lub (EUn (fun N:nat => sum_f_R0 An N)) l } -> { l:R | Un_cv (fun N:nat => sum_f_R0 An N) l }).",
            "VernacExtend",
            "58851d723817a48f95bab1f2fd8df0211903c49e"
        ],
        [
            "intro X; apply X.",
            "VernacExtend",
            "d8369b3f20c219353f24951955475b31a469aa1a"
        ],
        [
            "apply completeness.",
            "VernacExtend",
            "cacd984bc8302ffdd56c6fac7b444ece394f062c"
        ],
        [
            "assert (H1 := tech13 _ _ Hyp H0).",
            "VernacExtend",
            "121d9858a14507d836e289a19512a1713a8ccfbd"
        ],
        [
            "elim H1; intros.",
            "VernacExtend",
            "6b7bcf9d739b14ca3a09271e2c3493e16c5e2914"
        ],
        [
            "elim H2; intros.",
            "VernacExtend",
            "1fdc85439644114ac67a1ade25e79a4d8c3588d6"
        ],
        [
            "elim H4; intros.",
            "VernacExtend",
            "ef88f175449d4af46e0685700665ce0cdf3e5695"
        ],
        [
            "unfold bound; exists (sum_f_R0 An x0 + / (1 - x) * An (S x0)).",
            "VernacExtend",
            "3173dbe9489729829a8444138cedb8240fec6ce9"
        ],
        [
            "unfold is_upper_bound; intros; unfold EUn in H6.",
            "VernacExtend",
            "db1db40811ed813c0a7317f83daa0d60d5983cac"
        ],
        [
            "elim H6; intros.",
            "VernacExtend",
            "adada1ad2ce0ef6f5f04088c4ecd9bfe31ad7784"
        ],
        [
            "rewrite H7.",
            "VernacExtend",
            "2b0de906e9dfacfe89c031c2266760d29b5450f6"
        ],
        [
            "destruct (lt_eq_lt_dec x2 x0) as [[| -> ]|].",
            "VernacExtend",
            "e11d6ced8f7ef11312136ec9c57f3a3120c0b994"
        ],
        [
            "replace (sum_f_R0 An x0) with (sum_f_R0 An x2 + sum_f_R0 (fun i:nat => An (S x2 + i)%nat) (x0 - S x2)).",
            "VernacExtend",
            "22dfd4c08a1f1ad19f4536401b83ea837dd8c80f"
        ],
        [
            "pattern (sum_f_R0 An x2) at 1; rewrite <- Rplus_0_r.",
            "VernacExtend",
            "d57c8f8725c4580ad6a2003dab05dbf2f0ac2f02"
        ],
        [
            "rewrite Rplus_assoc; apply Rplus_le_compat_l.",
            "VernacExtend",
            "acf8e5b51c9d2f8867cbf11b3788dea7e7c86e41"
        ],
        [
            "left; apply Rplus_lt_0_compat.",
            "VernacExtend",
            "f6649e194849336dfce3c4a6987df6371a841634"
        ],
        [
            "apply tech1.",
            "VernacExtend",
            "53265dab9dd0f8f36cdb86b57d1fa6248d8cd5d2"
        ],
        [
            "intros; apply H.",
            "VernacExtend",
            "b7bca165a275b11a76ba06a5f07157259bedeabd"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "apply Rinv_0_lt_compat; apply Rplus_lt_reg_l with x; rewrite Rplus_0_r; replace (x + (1 - x)) with 1; [ elim H3; intros; assumption | ring ].",
            "VernacExtend",
            "d0592971c394bbda6df03d3f07c264a60041b4a3"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "symmetry ; apply tech2; assumption.",
            "VernacExtend",
            "b76022d68c75da7297e679d6221a704027ea1c97"
        ],
        [
            "pattern (sum_f_R0 An x0) at 1; rewrite <- Rplus_0_r; apply Rplus_le_compat_l.",
            "VernacExtend",
            "493a03f035a2379adf815741e17c30231627cdb4"
        ],
        [
            "left; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "71c62849403cd1175220512dbc3f749dc6ddf1fe"
        ],
        [
            "apply Rinv_0_lt_compat; apply Rplus_lt_reg_l with x; rewrite Rplus_0_r; replace (x + (1 - x)) with 1; [ elim H3; intros; assumption | ring ].",
            "VernacExtend",
            "d0592971c394bbda6df03d3f07c264a60041b4a3"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "replace (sum_f_R0 An x2) with (sum_f_R0 An x0 + sum_f_R0 (fun i:nat => An (S x0 + i)%nat) (x2 - S x0)).",
            "VernacExtend",
            "e238f4bb03351188503ef627b477fca3ebbe5555"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "cut (sum_f_R0 (fun i:nat => An (S x0 + i)%nat) (x2 - S x0) <= An (S x0) * sum_f_R0 (fun i:nat => x ^ i) (x2 - S x0)).",
            "VernacExtend",
            "2f2ddc49846848b127a770ab00dddf13e23b993b"
        ],
        [
            "intro; apply Rle_trans with (An (S x0) * sum_f_R0 (fun i:nat => x ^ i) (x2 - S x0)).",
            "VernacExtend",
            "55147e341841d832f1ea79f5b3f9756c6f9fb571"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- (Rmult_comm (An (S x0))); apply Rmult_le_compat_l.",
            "VernacExtend",
            "184338b89ce01bea647bab57b6a2e3170d82d52a"
        ],
        [
            "left; apply H.",
            "VernacExtend",
            "0aa460f78d11391b522e663a46e7bb217b2676f0"
        ],
        [
            "rewrite tech3.",
            "VernacExtend",
            "3395aa529f6d4cddf777233b69852b87fa428d02"
        ],
        [
            "unfold Rdiv; apply Rmult_le_reg_l with (1 - x).",
            "VernacExtend",
            "6ee6562a1e6c51302b35606debb2228bdb5808f8"
        ],
        [
            "apply Rplus_lt_reg_l with x; rewrite Rplus_0_r.",
            "VernacExtend",
            "93d8747421e3ec871422f529a50a5bbdb5406ca0"
        ],
        [
            "replace (x + (1 - x)) with 1; [ elim H3; intros; assumption | ring ].",
            "VernacExtend",
            "36e05a7ef96277ca61e39f2dd0746193671dc6a5"
        ],
        [
            "do 2 rewrite (Rmult_comm (1 - x)).",
            "VernacExtend",
            "978efbdd784cd555b868964697ad98ed9fde1b08"
        ],
        [
            "rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "7f630b736ed225dea43b09c6ef0119a691020de4"
        ],
        [
            "rewrite Rmult_1_r; apply Rplus_le_reg_l with (x ^ S (x2 - S x0)).",
            "VernacExtend",
            "f4ece62109d0c82ba05b179bf83e7de5948b93c9"
        ],
        [
            "replace (x ^ S (x2 - S x0) + (1 - x ^ S (x2 - S x0))) with 1; [ idtac | ring ].",
            "VernacExtend",
            "d9f95f0609e10e6ce65b56986ff24af02794f360"
        ],
        [
            "rewrite <- (Rplus_comm 1); pattern 1 at 1; rewrite <- Rplus_0_r; apply Rplus_le_compat_l.",
            "VernacExtend",
            "8a379f72d82025743c0c13d80f7aefd0747a2c9c"
        ],
        [
            "left; apply pow_lt.",
            "VernacExtend",
            "771903aa1902c74f78d261ffc3f3e15df57045dc"
        ],
        [
            "apply Rle_lt_trans with k.",
            "VernacExtend",
            "f2d5236bd245243b22d30d45407ac9ee3df0e91e"
        ],
        [
            "elim Hyp; intros; assumption.",
            "VernacExtend",
            "674a64f12c3c0e1eafd1b26f58ec79f46f0f5f09"
        ],
        [
            "elim H3; intros; assumption.",
            "VernacExtend",
            "f02fb1b822404aba5ff1b686b4c857f74184021e"
        ],
        [
            "apply Rminus_eq_contra.",
            "VernacExtend",
            "36628d08ea6e2381fe85c05d842ae9dfbbca2407"
        ],
        [
            "red; intro H10.",
            "VernacExtend",
            "c403fbb575b4eb70a568299829624b62f765d1b5"
        ],
        [
            "elim H3; intros H11 H12.",
            "VernacExtend",
            "3832e180c947e5be0a14a9fe82c360daa4d62345"
        ],
        [
            "rewrite H10 in H12; elim (Rlt_irrefl _ H12).",
            "VernacExtend",
            "31bb0f45c30ea743bd8abccb0b1557c4d3703b74"
        ],
        [
            "red; intro H10.",
            "VernacExtend",
            "c403fbb575b4eb70a568299829624b62f765d1b5"
        ],
        [
            "elim H3; intros H11 H12.",
            "VernacExtend",
            "3832e180c947e5be0a14a9fe82c360daa4d62345"
        ],
        [
            "rewrite H10 in H12; elim (Rlt_irrefl _ H12).",
            "VernacExtend",
            "31bb0f45c30ea743bd8abccb0b1557c4d3703b74"
        ],
        [
            "replace (An (S x0)) with (An (S x0 + 0)%nat).",
            "VernacExtend",
            "acbad86cf6e841f2db49bbfe5a9fbef1717ae0ba"
        ],
        [
            "apply (tech6 (fun i:nat => An (S x0 + i)%nat) x).",
            "VernacExtend",
            "c39d56c928543e2c3f25d98b4363c3e55b246176"
        ],
        [
            "left; apply Rle_lt_trans with k.",
            "VernacExtend",
            "248b8d794b31dce1af82a206cf618573e224a7a6"
        ],
        [
            "elim Hyp; intros; assumption.",
            "VernacExtend",
            "674a64f12c3c0e1eafd1b26f58ec79f46f0f5f09"
        ],
        [
            "elim H3; intros; assumption.",
            "VernacExtend",
            "f02fb1b822404aba5ff1b686b4c857f74184021e"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut (forall n:nat, (n >= x0)%nat -> An (S n) < x * An n).",
            "VernacExtend",
            "3a386fe9f2fb15aaed470f601548f03e3c211155"
        ],
        [
            "intro H9.",
            "VernacExtend",
            "3a5cee2c4602853379bc498c20515b4b8bb64031"
        ],
        [
            "replace (S x0 + S i)%nat with (S (S x0 + i)).",
            "VernacExtend",
            "856cebb48174132c1b8b79b755fba31404fca4bd"
        ],
        [
            "apply H9.",
            "VernacExtend",
            "d0479838914cfca7017024564d1663cd6466cb01"
        ],
        [
            "unfold ge.",
            "VernacExtend",
            "49aee4aaf6253f31669ea83def7814227efbe0f6"
        ],
        [
            "apply tech8.",
            "VernacExtend",
            "028a58adac0108e72fc01585094f724335e4fdc2"
        ],
        [
            "apply INR_eq; rewrite S_INR; do 2 rewrite plus_INR; do 2 rewrite S_INR; ring.",
            "VernacExtend",
            "9296a64c1b2631405524d4d54ae7d5be87a6a7e4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Rmult_lt_reg_l with (/ An n).",
            "VernacExtend",
            "ce31ec363ce256da548d72452cff747a9cb24194"
        ],
        [
            "apply Rinv_0_lt_compat; apply H.",
            "VernacExtend",
            "f2d2f14e084a3bec216ca83676c131c819f29b07"
        ],
        [
            "do 2 rewrite (Rmult_comm (/ An n)).",
            "VernacExtend",
            "ea5c8c0c7ae0d95b09d0926e95d8d00afa024e2b"
        ],
        [
            "rewrite Rmult_assoc.",
            "VernacExtend",
            "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
        ],
        [
            "rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "2ca74255a63c294f9442d956f32a2e3784636efb"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "replace (An (S n) * / An n) with (Rabs (An (S n) / An n)).",
            "VernacExtend",
            "02a02a5980fe826bc3c90f09bc462a6ca18f3a2a"
        ],
        [
            "apply H5; assumption.",
            "VernacExtend",
            "8f860832491462a0a9db7bd7c081da8cdc789cad"
        ],
        [
            "rewrite Rabs_right.",
            "VernacExtend",
            "9b60731d6b608338747f09fec19f24d12baad022"
        ],
        [
            "unfold Rdiv; reflexivity.",
            "VernacExtend",
            "502d25ebbbf5eeefb8e58bf3d014bed415a2593b"
        ],
        [
            "left; unfold Rdiv; change (0 < An (S n) * / An n); apply Rmult_lt_0_compat.",
            "VernacExtend",
            "8bbde76df34811ac6cb28e45c03a4d4005293311"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "apply Rinv_0_lt_compat; apply H.",
            "VernacExtend",
            "f2d2f14e084a3bec216ca83676c131c819f29b07"
        ],
        [
            "red; intro H10.",
            "VernacExtend",
            "c403fbb575b4eb70a568299829624b62f765d1b5"
        ],
        [
            "assert (H11 := H n).",
            "VernacExtend",
            "08c8f82993f1da93415d6a15023fb37217635585"
        ],
        [
            "rewrite H10 in H11; elim (Rlt_irrefl _ H11).",
            "VernacExtend",
            "fb89ffb9c5677b11f95136969953d74fadaa6c80"
        ],
        [
            "replace (S x0 + 0)%nat with (S x0); [ reflexivity | ring ].",
            "VernacExtend",
            "ca62f479cf1ed1b2379d6109a529ee6b8eaf6e0b"
        ],
        [
            "symmetry ; apply tech2; assumption.",
            "VernacExtend",
            "b76022d68c75da7297e679d6221a704027ea1c97"
        ],
        [
            "exists (sum_f_R0 An 0); unfold EUn; exists 0%nat; reflexivity.",
            "VernacExtend",
            "de5de960319b58703f957d54611577ddad6e8760"
        ],
        [
            "intros (x,H1).",
            "VernacExtend",
            "74b1f3c4c75c5e6479e2ea8892bc8606a2624a8b"
        ],
        [
            "exists x; apply Un_cv_crit_lub; [ unfold Un_growing; intro; rewrite tech5; pattern (sum_f_R0 An n) at 1; rewrite <- Rplus_0_r; apply Rplus_le_compat_l; left; apply H | apply H1].",
            "VernacExtend",
            "4de6fb64373f949c4891ab7f362d747fb5874de5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Alembert_C5 : forall (An:nat -> R) (k:R), 0 <= k < 1 -> (forall n:nat, An n <> 0) -> Un_cv (fun n:nat => Rabs (An (S n) / An n)) k -> { l:R | Un_cv (fun N:nat => sum_f_R0 An N) l }.",
            "VernacStartTheoremProof",
            "31ed64a991c38aa13c850cd1e49f328917e4e511"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut ({ l:R | Un_cv (fun N:nat => sum_f_R0 An N) l } -> { l:R | Un_cv (fun N:nat => sum_f_R0 An N) l }).",
            "VernacExtend",
            "943b6275c34e50c6b0520078c69f08cd071664c9"
        ],
        [
            "intro Hyp0; apply Hyp0.",
            "VernacExtend",
            "a5a3990d9d84026da050576acf75dc8fddd667e8"
        ],
        [
            "apply cv_cauchy_2.",
            "VernacExtend",
            "1b9d0e4674b020189683d56bb2fcbe5bda3222d0"
        ],
        [
            "apply cauchy_abs.",
            "VernacExtend",
            "a1df9e931d188b753541aa8886a07c1f4b85af90"
        ],
        [
            "apply cv_cauchy_1.",
            "VernacExtend",
            "3c964d72c1a7bf388586058717fe43b5e1ac8aa0"
        ],
        [
            "cut ({ l:R | Un_cv (fun N:nat => sum_f_R0 (fun i:nat => Rabs (An i)) N) l } -> { l:R | Un_cv (fun N:nat => sum_f_R0 (fun i:nat => Rabs (An i)) N) l }).",
            "VernacExtend",
            "e129875192c82746215adf48cf357746c28a478b"
        ],
        [
            "intro Hyp; apply Hyp.",
            "VernacExtend",
            "adadf8ca5f48a62eb6cb9589ca336c69783ba18d"
        ],
        [
            "apply (Alembert_C4 (fun i:nat => Rabs (An i)) k).",
            "VernacExtend",
            "efe99cdcb68a2014af8ea81b8c837b296aa31b05"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro; apply Rabs_pos_lt; apply H0.",
            "VernacExtend",
            "b62df15a2a26cfa33673c285b77f50cb5c09263f"
        ],
        [
            "unfold Un_cv.",
            "VernacExtend",
            "92546babd2031fb5ae4875e88a9d324f3c5bb33e"
        ],
        [
            "unfold Un_cv in H1.",
            "VernacExtend",
            "d4d0d9be90f3bdd0ee92959ef2bdbe34478389cf"
        ],
        [
            "unfold Rdiv.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (H1 eps H2); intros.",
            "VernacExtend",
            "26b04261dd7fa4897011895680592c70e0eb63e3"
        ],
        [
            "exists x; intros.",
            "VernacExtend",
            "630f24a2d635df94b063a62023a90567ef134b19"
        ],
        [
            "rewrite <- Rabs_Rinv.",
            "VernacExtend",
            "90bccb4c2edbe375bae6d85508d1d91269ac60a9"
        ],
        [
            "rewrite <- Rabs_mult.",
            "VernacExtend",
            "ffb7829eab0f0e304148d87efd020e97968f73cc"
        ],
        [
            "rewrite Rabs_Rabsolu.",
            "VernacExtend",
            "25c9ef6d16b3e1fd649502a685f930b2c828b10b"
        ],
        [
            "unfold Rdiv in H3; apply H3; assumption.",
            "VernacExtend",
            "a337c44a5b160474b8a3458faea3a937ba743107"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "intro X.",
            "VernacExtend",
            "c93bbb51ef8637991b4239865469e36d8e520337"
        ],
        [
            "elim X; intros.",
            "VernacExtend",
            "3dbd54ccc1b79786f689975657c25979c4151773"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intro X.",
            "VernacExtend",
            "c93bbb51ef8637991b4239865469e36d8e520337"
        ],
        [
            "elim X; intros.",
            "VernacExtend",
            "3dbd54ccc1b79786f689975657c25979c4151773"
        ],
        [
            "exists x.",
            "VernacExtend",
            "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Alembert_C6 : forall (An:nat -> R) (x k:R), 0 < k -> (forall n:nat, An n <> 0) -> Un_cv (fun n:nat => Rabs (An (S n) / An n)) k -> Rabs x < / k -> { l:R | Pser An x l }.",
            "VernacStartTheoremProof",
            "12f228a3394448c12d443cb2076ea6d07045c9e2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut { l:R | Un_cv (fun N:nat => sum_f_R0 (fun i:nat => An i * x ^ i) N) l }.",
            "VernacExtend",
            "093fc3db4db802a92fadde49dcbe66b9f0fef0c0"
        ],
        [
            "intro X.",
            "VernacExtend",
            "c93bbb51ef8637991b4239865469e36d8e520337"
        ],
        [
            "elim X; intros.",
            "VernacExtend",
            "3dbd54ccc1b79786f689975657c25979c4151773"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "apply tech12; assumption.",
            "VernacExtend",
            "ac98afff9b21f1d593f4730e4bd792b6788f0aff"
        ],
        [
            "destruct (total_order_T x 0) as [[Hlt|Heq]|Hgt].",
            "VernacExtend",
            "1830ad9d953dd807bdda07371341a9f813f9c749"
        ],
        [
            "eapply Alembert_C5 with (k * Rabs x).",
            "VernacExtend",
            "110f49bcc99dbf5154ebcbc903ac89074255b303"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Rdiv; apply Rmult_le_pos.",
            "VernacExtend",
            "9295075fac998a2bbf6d97082250072803a082bc"
        ],
        [
            "left; assumption.",
            "VernacExtend",
            "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
        ],
        [
            "left; apply Rabs_pos_lt.",
            "VernacExtend",
            "b0ff7981ce13538d867ea4e2103c70be7d4a7c77"
        ],
        [
            "red; intro; rewrite H3 in Hlt; elim (Rlt_irrefl _ Hlt).",
            "VernacExtend",
            "ea09ab086a0c9ab3308db978308f965a1d2cea9d"
        ],
        [
            "apply Rmult_lt_reg_l with (/ k).",
            "VernacExtend",
            "e9ab836a5ef9331e51af2bf80e0266615c7ee6c6"
        ],
        [
            "apply Rinv_0_lt_compat; assumption.",
            "VernacExtend",
            "7c8a6c48f8e12a680ed85ee789a9c10a10ee8701"
        ],
        [
            "rewrite <- Rmult_assoc.",
            "VernacExtend",
            "34da3c50cde53c179a4908b1329a459071245c05"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "rewrite Rmult_1_l.",
            "VernacExtend",
            "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
        ],
        [
            "rewrite Rmult_1_r; assumption.",
            "VernacExtend",
            "035507d12dca88b716bc3bd5a29b9a28d7038962"
        ],
        [
            "red; intro; rewrite H3 in H; elim (Rlt_irrefl _ H).",
            "VernacExtend",
            "d267a87999d132d81e361f66081b32e13b9ad8b0"
        ],
        [
            "intro; apply prod_neq_R0.",
            "VernacExtend",
            "9327657a0bedb95c00f979a91855d305af8d20a9"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply pow_nonzero.",
            "VernacExtend",
            "282744fa14f20635385d7e1ac0d1a961c143f970"
        ],
        [
            "red; intro; rewrite H3 in Hlt; elim (Rlt_irrefl _ Hlt).",
            "VernacExtend",
            "ea09ab086a0c9ab3308db978308f965a1d2cea9d"
        ],
        [
            "unfold Un_cv; unfold Un_cv in H1.",
            "VernacExtend",
            "4991dbe32f81ed4b361bc27ee0f7137f89b89b5f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (0 < eps / Rabs x).",
            "VernacExtend",
            "670f2b4e9ebb386454f17e967f9ec1887bed6a5b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim (H1 (eps / Rabs x) H4); intros.",
            "VernacExtend",
            "d75ee8c56afd5b77dd360f5b6046eb95becf1248"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (An (S n) * x ^ S n / (An n * x ^ n)) with (An (S n) / An n * x).",
            "VernacExtend",
            "4cf620953c3131b2856804991e5b7900815ad0cf"
        ],
        [
            "unfold R_dist.",
            "VernacExtend",
            "9d14879a55d02ad54565968e31b64da7aeb66d97"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "replace (Rabs (An (S n) / An n) * Rabs x - k * Rabs x) with (Rabs x * (Rabs (An (S n) / An n) - k)); [ idtac | ring ].",
            "VernacExtend",
            "f5368585474b18507d9af73189a50f9a9b7cb05f"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "rewrite Rabs_Rabsolu.",
            "VernacExtend",
            "25c9ef6d16b3e1fd649502a685f930b2c828b10b"
        ],
        [
            "apply Rmult_lt_reg_l with (/ Rabs x).",
            "VernacExtend",
            "3c25fdd20a4f70c1dd16aed4b87fdb720401bc50"
        ],
        [
            "apply Rinv_0_lt_compat; apply Rabs_pos_lt.",
            "VernacExtend",
            "6f1b4f322e563834885ccb901ce5726dcbee2da5"
        ],
        [
            "red; intro; rewrite H7 in Hlt; elim (Rlt_irrefl _ Hlt).",
            "VernacExtend",
            "29f9119bd4cdb97c4ff55c08271466d8baba53f3"
        ],
        [
            "rewrite <- Rmult_assoc.",
            "VernacExtend",
            "34da3c50cde53c179a4908b1329a459071245c05"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "rewrite Rmult_1_l.",
            "VernacExtend",
            "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
        ],
        [
            "rewrite <- (Rmult_comm eps).",
            "VernacExtend",
            "ed9d8d167ad15e8106fefb6a097e0a0efdd21b90"
        ],
        [
            "unfold R_dist in H5.",
            "VernacExtend",
            "0f5f9746216dd46eb12459f52dd678f9e8433bee"
        ],
        [
            "unfold Rdiv; unfold Rdiv in H5; apply H5; assumption.",
            "VernacExtend",
            "683928ba95605b7c0a233e2f126b6780cb3d4602"
        ],
        [
            "apply Rabs_no_R0.",
            "VernacExtend",
            "8d37b098d9cb0f050cfd8b29c49d318c2b960566"
        ],
        [
            "red; intro; rewrite H7 in Hlt; elim (Rlt_irrefl _ Hlt).",
            "VernacExtend",
            "29f9119bd4cdb97c4ff55c08271466d8baba53f3"
        ],
        [
            "unfold Rdiv; replace (S n) with (n + 1)%nat; [ idtac | ring ].",
            "VernacExtend",
            "3ad603d86d90c1d5801e60a25577d1d31a9315b0"
        ],
        [
            "rewrite pow_add.",
            "VernacExtend",
            "e7ffb4294c31ded66f1a5f321399a9a5b2326cb2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "rewrite Rinv_mult_distr.",
            "VernacExtend",
            "55666fd2776d160fb1bfd9d38a2833e66927f366"
        ],
        [
            "replace (An (n + 1)%nat * (x ^ n * x) * (/ An n * / x ^ n)) with (An (n + 1)%nat * / An n * x * (x ^ n * / x ^ n)); [ idtac | ring ].",
            "VernacExtend",
            "bba84cf79da6054f149118c558917f415cd8a32e"
        ],
        [
            "rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "2ca74255a63c294f9442d956f32a2e3784636efb"
        ],
        [
            "rewrite Rmult_1_r; reflexivity.",
            "VernacExtend",
            "48cf3ea63852e7c9eb06f376d7f6115fee3b3148"
        ],
        [
            "apply pow_nonzero.",
            "VernacExtend",
            "282744fa14f20635385d7e1ac0d1a961c143f970"
        ],
        [
            "red; intro; rewrite H7 in Hlt; elim (Rlt_irrefl _ Hlt).",
            "VernacExtend",
            "29f9119bd4cdb97c4ff55c08271466d8baba53f3"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply pow_nonzero.",
            "VernacExtend",
            "282744fa14f20635385d7e1ac0d1a961c143f970"
        ],
        [
            "red; intro; rewrite H7 in Hlt; elim (Rlt_irrefl _ Hlt).",
            "VernacExtend",
            "29f9119bd4cdb97c4ff55c08271466d8baba53f3"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "7122edbd68559f255bfed03dc640472ed14eb4ef"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rinv_0_lt_compat; apply Rabs_pos_lt.",
            "VernacExtend",
            "6f1b4f322e563834885ccb901ce5726dcbee2da5"
        ],
        [
            "red; intro H7; rewrite H7 in Hlt; elim (Rlt_irrefl _ Hlt).",
            "VernacExtend",
            "4a4d688403b7c9c2b649a509bee19fe4cde18404"
        ],
        [
            "exists (An 0%nat).",
            "VernacExtend",
            "e374f3613557c742a50d88b4dff5ac525ee3eef4"
        ],
        [
            "unfold Un_cv.",
            "VernacExtend",
            "92546babd2031fb5ae4875e88a9d324f3c5bb33e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists 0%nat.",
            "VernacExtend",
            "ecf2e229db1efa1d9dec061865f354468879442a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold R_dist.",
            "VernacExtend",
            "9d14879a55d02ad54565968e31b64da7aeb66d97"
        ],
        [
            "replace (sum_f_R0 (fun i:nat => An i * x ^ i) n) with (An 0%nat).",
            "VernacExtend",
            "dd339f10f6a05f7e26af66549927ba73b1d405a1"
        ],
        [
            "unfold Rminus; rewrite Rplus_opp_r; rewrite Rabs_R0; assumption.",
            "VernacExtend",
            "c1de84b8ec8a6c422226e5ca95d3db00e63bd56e"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "rewrite tech5.",
            "VernacExtend",
            "9868999d015d8d25987acdadb308fadae9d59e4a"
        ],
        [
            "rewrite <- Hrecn.",
            "VernacExtend",
            "bdd629bae13c11ffa6cdec8d998f9fe961b49ae7"
        ],
        [
            "rewrite Heq; simpl; ring.",
            "VernacExtend",
            "cedaade8fcb51b9264bb9d3c48d8663cc190ec39"
        ],
        [
            "unfold ge; apply le_O_n.",
            "VernacExtend",
            "bf10b52bec5a357299a9895e3e830c8e01037b6a"
        ],
        [
            "eapply Alembert_C5 with (k * Rabs x).",
            "VernacExtend",
            "110f49bcc99dbf5154ebcbc903ac89074255b303"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold Rdiv; apply Rmult_le_pos.",
            "VernacExtend",
            "9295075fac998a2bbf6d97082250072803a082bc"
        ],
        [
            "left; assumption.",
            "VernacExtend",
            "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
        ],
        [
            "left; apply Rabs_pos_lt.",
            "VernacExtend",
            "b0ff7981ce13538d867ea4e2103c70be7d4a7c77"
        ],
        [
            "red; intro; rewrite H3 in Hgt; elim (Rlt_irrefl _ Hgt).",
            "VernacExtend",
            "c0a3ebf3de70a41d69ceb7243a8f5428c122cb9b"
        ],
        [
            "apply Rmult_lt_reg_l with (/ k).",
            "VernacExtend",
            "e9ab836a5ef9331e51af2bf80e0266615c7ee6c6"
        ],
        [
            "apply Rinv_0_lt_compat; assumption.",
            "VernacExtend",
            "7c8a6c48f8e12a680ed85ee789a9c10a10ee8701"
        ],
        [
            "rewrite <- Rmult_assoc.",
            "VernacExtend",
            "34da3c50cde53c179a4908b1329a459071245c05"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "rewrite Rmult_1_l.",
            "VernacExtend",
            "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
        ],
        [
            "rewrite Rmult_1_r; assumption.",
            "VernacExtend",
            "035507d12dca88b716bc3bd5a29b9a28d7038962"
        ],
        [
            "red; intro; rewrite H3 in H; elim (Rlt_irrefl _ H).",
            "VernacExtend",
            "d267a87999d132d81e361f66081b32e13b9ad8b0"
        ],
        [
            "intro; apply prod_neq_R0.",
            "VernacExtend",
            "9327657a0bedb95c00f979a91855d305af8d20a9"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply pow_nonzero.",
            "VernacExtend",
            "282744fa14f20635385d7e1ac0d1a961c143f970"
        ],
        [
            "red; intro; rewrite H3 in Hgt; elim (Rlt_irrefl _ Hgt).",
            "VernacExtend",
            "c0a3ebf3de70a41d69ceb7243a8f5428c122cb9b"
        ],
        [
            "unfold Un_cv; unfold Un_cv in H1.",
            "VernacExtend",
            "4991dbe32f81ed4b361bc27ee0f7137f89b89b5f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "cut (0 < eps / Rabs x).",
            "VernacExtend",
            "670f2b4e9ebb386454f17e967f9ec1887bed6a5b"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "elim (H1 (eps / Rabs x) H4); intros.",
            "VernacExtend",
            "d75ee8c56afd5b77dd360f5b6046eb95becf1248"
        ],
        [
            "exists x0.",
            "VernacExtend",
            "9cf0657053433e90b28a795544f893f4a0f1ace3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace (An (S n) * x ^ S n / (An n * x ^ n)) with (An (S n) / An n * x).",
            "VernacExtend",
            "4cf620953c3131b2856804991e5b7900815ad0cf"
        ],
        [
            "unfold R_dist.",
            "VernacExtend",
            "9d14879a55d02ad54565968e31b64da7aeb66d97"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "replace (Rabs (An (S n) / An n) * Rabs x - k * Rabs x) with (Rabs x * (Rabs (An (S n) / An n) - k)); [ idtac | ring ].",
            "VernacExtend",
            "f5368585474b18507d9af73189a50f9a9b7cb05f"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "rewrite Rabs_Rabsolu.",
            "VernacExtend",
            "25c9ef6d16b3e1fd649502a685f930b2c828b10b"
        ],
        [
            "apply Rmult_lt_reg_l with (/ Rabs x).",
            "VernacExtend",
            "3c25fdd20a4f70c1dd16aed4b87fdb720401bc50"
        ],
        [
            "apply Rinv_0_lt_compat; apply Rabs_pos_lt.",
            "VernacExtend",
            "6f1b4f322e563834885ccb901ce5726dcbee2da5"
        ],
        [
            "red; intro; rewrite H7 in Hgt; elim (Rlt_irrefl _ Hgt).",
            "VernacExtend",
            "1c904711d6c92344983f735aed41ec7a5f55354f"
        ],
        [
            "rewrite <- Rmult_assoc.",
            "VernacExtend",
            "34da3c50cde53c179a4908b1329a459071245c05"
        ],
        [
            "rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
        ],
        [
            "rewrite Rmult_1_l.",
            "VernacExtend",
            "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
        ],
        [
            "rewrite <- (Rmult_comm eps).",
            "VernacExtend",
            "ed9d8d167ad15e8106fefb6a097e0a0efdd21b90"
        ],
        [
            "unfold R_dist in H5.",
            "VernacExtend",
            "0f5f9746216dd46eb12459f52dd678f9e8433bee"
        ],
        [
            "unfold Rdiv; unfold Rdiv in H5; apply H5; assumption.",
            "VernacExtend",
            "683928ba95605b7c0a233e2f126b6780cb3d4602"
        ],
        [
            "apply Rabs_no_R0.",
            "VernacExtend",
            "8d37b098d9cb0f050cfd8b29c49d318c2b960566"
        ],
        [
            "red; intro; rewrite H7 in Hgt; elim (Rlt_irrefl _ Hgt).",
            "VernacExtend",
            "1c904711d6c92344983f735aed41ec7a5f55354f"
        ],
        [
            "unfold Rdiv; replace (S n) with (n + 1)%nat; [ idtac | ring ].",
            "VernacExtend",
            "3ad603d86d90c1d5801e60a25577d1d31a9315b0"
        ],
        [
            "rewrite pow_add.",
            "VernacExtend",
            "e7ffb4294c31ded66f1a5f321399a9a5b2326cb2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "rewrite Rinv_mult_distr.",
            "VernacExtend",
            "55666fd2776d160fb1bfd9d38a2833e66927f366"
        ],
        [
            "replace (An (n + 1)%nat * (x ^ n * x) * (/ An n * / x ^ n)) with (An (n + 1)%nat * / An n * x * (x ^ n * / x ^ n)); [ idtac | ring ].",
            "VernacExtend",
            "bba84cf79da6054f149118c558917f415cd8a32e"
        ],
        [
            "rewrite <- Rinv_r_sym.",
            "VernacExtend",
            "2ca74255a63c294f9442d956f32a2e3784636efb"
        ],
        [
            "rewrite Rmult_1_r; reflexivity.",
            "VernacExtend",
            "48cf3ea63852e7c9eb06f376d7f6115fee3b3148"
        ],
        [
            "apply pow_nonzero.",
            "VernacExtend",
            "282744fa14f20635385d7e1ac0d1a961c143f970"
        ],
        [
            "red; intro; rewrite H7 in Hgt; elim (Rlt_irrefl _ Hgt).",
            "VernacExtend",
            "1c904711d6c92344983f735aed41ec7a5f55354f"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply pow_nonzero.",
            "VernacExtend",
            "282744fa14f20635385d7e1ac0d1a961c143f970"
        ],
        [
            "red; intro; rewrite H7 in Hgt; elim (Rlt_irrefl _ Hgt).",
            "VernacExtend",
            "1c904711d6c92344983f735aed41ec7a5f55354f"
        ],
        [
            "unfold Rdiv; apply Rmult_lt_0_compat.",
            "VernacExtend",
            "7122edbd68559f255bfed03dc640472ed14eb4ef"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rinv_0_lt_compat; apply Rabs_pos_lt.",
            "VernacExtend",
            "6f1b4f322e563834885ccb901ce5726dcbee2da5"
        ],
        [
            "red; intro H7; rewrite H7 in Hgt; elim (Rlt_irrefl _ Hgt).",
            "VernacExtend",
            "419028c3af10f52d5b1a44ad29e7ccf99f94594f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "Alembert_C1",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros An H H0.",
                        "VernacExtend",
                        "4518a329cbf32e6388e927fe4ca53ca3c3deabe1"
                    ]
                },
                {
                    "command": [
                        "cut ({ l:R | is_lub (EUn (fun N:nat => sum_f_R0 An N)) l } -> { l:R | Un_cv (fun N:nat => sum_f_R0 An N) l }).",
                        "VernacExtend",
                        "58851d723817a48f95bab1f2fd8df0211903c49e"
                    ]
                },
                {
                    "command": [
                        "intro X; apply X.",
                        "VernacExtend",
                        "d8369b3f20c219353f24951955475b31a469aa1a"
                    ]
                },
                {
                    "command": [
                        "apply completeness.",
                        "VernacExtend",
                        "cacd984bc8302ffdd56c6fac7b444ece394f062c"
                    ]
                },
                {
                    "command": [
                        "unfold Un_cv in H0; unfold bound; cut (0 < / 2); [ intro | apply Rinv_0_lt_compat; prove_sup0 ].",
                        "VernacExtend",
                        "88a60c04f87fe3aba3374b7691364121ba600216"
                    ]
                },
                {
                    "command": [
                        "elim (H0 (/ 2) H1); intros.",
                        "VernacExtend",
                        "1303efe8d5556a9fd77f7167af107307a1236ec3"
                    ]
                },
                {
                    "command": [
                        "exists (sum_f_R0 An x + 2 * An (S x)).",
                        "VernacExtend",
                        "930d58b3b70d590e33177137d3ff188c298c2666"
                    ]
                },
                {
                    "command": [
                        "unfold is_upper_bound; intros; unfold EUn in H3; destruct H3 as (x1,->).",
                        "VernacExtend",
                        "ca1f390f35947c2a2fe48d569b929d543ac5cc74"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_eq_lt_dec x1 x) as [[| -> ]|].",
                        "VernacExtend",
                        "333742617982159e4706901f90110c6d8ba026d0"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 An x) with (sum_f_R0 An x1 + sum_f_R0 (fun i:nat => An (S x1 + i)%nat) (x - S x1)).",
                        "VernacExtend",
                        "c131204dfd285e1663fcdf0b7169d5f59362d2c2"
                    ]
                },
                {
                    "command": [
                        "pattern (sum_f_R0 An x1) at 1; rewrite <- Rplus_0_r; rewrite Rplus_assoc; apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "eff798e0823c24f51bcf0f33d6b898da2e102470"
                    ]
                },
                {
                    "command": [
                        "left; apply Rplus_lt_0_compat.",
                        "VernacExtend",
                        "f6649e194849336dfce3c4a6987df6371a841634"
                    ]
                },
                {
                    "command": [
                        "apply tech1; intros; apply H.",
                        "VernacExtend",
                        "5220a73d63b282d805d8dd0a3b07bb184d7ee97e"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat; [ prove_sup0 | apply H ].",
                        "VernacExtend",
                        "2e4ae79ecb347a04f037fc49977f463a8b3fcb5f"
                    ]
                },
                {
                    "command": [
                        "symmetry ; apply tech2; assumption.",
                        "VernacExtend",
                        "b76022d68c75da7297e679d6221a704027ea1c97"
                    ]
                },
                {
                    "command": [
                        "pattern (sum_f_R0 An x) at 1; rewrite <- Rplus_0_r; apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "4f0a78b47ba6e50722672731d44b8d2cb59815ce"
                    ]
                },
                {
                    "command": [
                        "left; apply Rmult_lt_0_compat; [ prove_sup0 | apply H ].",
                        "VernacExtend",
                        "53f8234dd3024b927ad20a05708df1db22f1e3bf"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 An x1) with (sum_f_R0 An x + sum_f_R0 (fun i:nat => An (S x + i)%nat) (x1 - S x)).",
                        "VernacExtend",
                        "e7496c3c29e2e637cd19562468a3631647457f2a"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "cut (sum_f_R0 (fun i:nat => An (S x + i)%nat) (x1 - S x) <= An (S x) * sum_f_R0 (fun i:nat => (/ 2) ^ i) (x1 - S x)).",
                        "VernacExtend",
                        "90b09348735f35f11920c09b2110913127a89c47"
                    ]
                },
                {
                    "command": [
                        "intro; apply Rle_trans with (An (S x) * sum_f_R0 (fun i:nat => (/ 2) ^ i) (x1 - S x)).",
                        "VernacExtend",
                        "5f05a6fb36607f32498ece3e64d01753ac74591b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_comm (An (S x))); apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "37546289200706d95255bc3d17d2376170a82b9d"
                    ]
                },
                {
                    "command": [
                        "left; apply H.",
                        "VernacExtend",
                        "0aa460f78d11391b522e663a46e7bb217b2676f0"
                    ]
                },
                {
                    "command": [
                        "rewrite tech3.",
                        "VernacExtend",
                        "3395aa529f6d4cddf777233b69852b87fa428d02"
                    ]
                },
                {
                    "command": [
                        "replace (1 - / 2) with (/ 2).",
                        "VernacExtend",
                        "8d66345058ebd2f17ff895d258dfefc0b29ea334"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; rewrite Rinv_involutive.",
                        "VernacExtend",
                        "d85f854e8886997aca5b431e60769326d149e11a"
                    ]
                },
                {
                    "command": [
                        "pattern 2 at 3; rewrite <- Rmult_1_r; rewrite <- (Rmult_comm 2); apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "e6f8ef6dccc46edb62309a42e0e70d416798d995"
                    ]
                },
                {
                    "command": [
                        "left; prove_sup0.",
                        "VernacExtend",
                        "0496d8f7fedff100b2a6a6c475d34e4594f44524"
                    ]
                },
                {
                    "command": [
                        "left; apply Rplus_lt_reg_l with ((/ 2) ^ S (x1 - S x)).",
                        "VernacExtend",
                        "109b0bb2d4371aa87af1c25131ef7b4308c66966"
                    ]
                },
                {
                    "command": [
                        "replace ((/ 2) ^ S (x1 - S x) + (1 - (/ 2) ^ S (x1 - S x))) with 1; [ idtac | ring ].",
                        "VernacExtend",
                        "1c46c21bab0bb3ae9316522bb00e0770407adca7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rplus_comm 1); pattern 1 at 1; rewrite <- Rplus_0_r; apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "6f16d758ead5cbf8d9e64406386bf4e618fc6468"
                    ]
                },
                {
                    "command": [
                        "apply pow_lt; apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "51d3a8d62762b46702643aae75259e670fa2cb5c"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_eq_reg_l with 2.",
                        "VernacExtend",
                        "9e472b474e7916fa8b9644ceb0ce48465e2a1e18"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_minus_distr_l; rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "571e06cb1b8149dcc6948b495fe1adf8895b2251"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "replace 1 with (/ 1); [ apply tech7; discrR | apply Rinv_1 ].",
                        "VernacExtend",
                        "a2d4a048c8df5867d0ee4be7623168c545d8b8b9"
                    ]
                },
                {
                    "command": [
                        "replace (An (S x)) with (An (S x + 0)%nat).",
                        "VernacExtend",
                        "e807ca53f0f1b5cca367f219c4641fb003726c5f"
                    ]
                },
                {
                    "command": [
                        "apply (tech6 (fun i:nat => An (S x + i)%nat) (/ 2)).",
                        "VernacExtend",
                        "7b78b4394544b80ab57f06824fb4586a9fab04b8"
                    ]
                },
                {
                    "command": [
                        "left; apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "fc25f088c7eb945b25a6fd912d0d79ce4330ae4c"
                    ]
                },
                {
                    "command": [
                        "intro; cut (forall n:nat, (n >= x)%nat -> An (S n) < / 2 * An n).",
                        "VernacExtend",
                        "5be33470620f6c47edc0626e0cbcc654964059c6"
                    ]
                },
                {
                    "command": [
                        "intro H4; replace (S x + S i)%nat with (S (S x + i)).",
                        "VernacExtend",
                        "e5e226108e7ce38f3565e72d3ce11713261c5eda"
                    ]
                },
                {
                    "command": [
                        "apply H4; unfold ge; apply tech8.",
                        "VernacExtend",
                        "c214f85838722d0997202e9bada9a71ccf9073b7"
                    ]
                },
                {
                    "command": [
                        "apply INR_eq; rewrite S_INR; do 2 rewrite plus_INR; do 2 rewrite S_INR; ring.",
                        "VernacExtend",
                        "9296a64c1b2631405524d4d54ae7d5be87a6a7e4"
                    ]
                },
                {
                    "command": [
                        "intros; unfold R_dist in H2; apply Rmult_lt_reg_l with (/ An n).",
                        "VernacExtend",
                        "3e47f3a3ab796b86fb209add8b9a720d90691ed2"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply H.",
                        "VernacExtend",
                        "f2d2f14e084a3bec216ca83676c131c819f29b07"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite (Rmult_comm (/ An n)); rewrite Rmult_assoc; rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "bf5831b7a41c6457ce997d5e5ada979c81912018"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; replace (An (S n) * / An n) with (Rabs (Rabs (An (S n) / An n) - 0)).",
                        "VernacExtend",
                        "f336fbe1dcf71effb65344fa50d293a4a3fbceba"
                    ]
                },
                {
                    "command": [
                        "apply H2; assumption.",
                        "VernacExtend",
                        "4a9f5fcfe7fc430a6576d9298552b6fe2f8ad298"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; rewrite Rabs_Rabsolu; rewrite Rabs_right.",
                        "VernacExtend",
                        "1021de3a5e28069dcab9a6ff55f77b8d5e2d1cf4"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; reflexivity.",
                        "VernacExtend",
                        "502d25ebbbf5eeefb8e58bf3d014bed415a2593b"
                    ]
                },
                {
                    "command": [
                        "left; unfold Rdiv; change (0 < An (S n) * / An n); apply Rmult_lt_0_compat; [ apply H | apply Rinv_0_lt_compat; apply H ].",
                        "VernacExtend",
                        "1572b37026a03f21a71e444bca7f5bce4a7aed23"
                    ]
                },
                {
                    "command": [
                        "intro H5; assert (H8 := H n); rewrite H5 in H8; elim (Rlt_irrefl _ H8).",
                        "VernacExtend",
                        "31213b6a1be8da6f011a2b0dcae77ec39024c40a"
                    ]
                },
                {
                    "command": [
                        "replace (S x + 0)%nat with (S x); [ reflexivity | ring ].",
                        "VernacExtend",
                        "8b087289150d9c7bc558767f053f784da03c9a8f"
                    ]
                },
                {
                    "command": [
                        "symmetry ; apply tech2; assumption.",
                        "VernacExtend",
                        "b76022d68c75da7297e679d6221a704027ea1c97"
                    ]
                },
                {
                    "command": [
                        "exists (sum_f_R0 An 0); unfold EUn; exists 0%nat; reflexivity.",
                        "VernacExtend",
                        "de5de960319b58703f957d54611577ddad6e8760"
                    ]
                },
                {
                    "command": [
                        "intros (x,H1).",
                        "VernacExtend",
                        "74b1f3c4c75c5e6479e2ea8892bc8606a2624a8b"
                    ]
                },
                {
                    "command": [
                        "exists x; apply Un_cv_crit_lub; [ unfold Un_growing; intro; rewrite tech5; pattern (sum_f_R0 An n) at 1; rewrite <- Rplus_0_r; apply Rplus_le_compat_l; left; apply H | apply H1 ].",
                        "VernacExtend",
                        "4de6fb64373f949c4891ab7f362d747fb5874de5"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Alembert_C2",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (Vn := fun i:nat => (2 * Rabs (An i) + An i) / 2).",
                        "VernacExtend",
                        "4badf70b48bdea7a1b7b43ee7809da5e4ec11472"
                    ]
                },
                {
                    "command": [
                        "set (Wn := fun i:nat => (2 * Rabs (An i) - An i) / 2).",
                        "VernacExtend",
                        "977345e3a58655f727f73b44a7bf3531dad31af7"
                    ]
                },
                {
                    "command": [
                        "cut (forall n:nat, 0 < Vn n).",
                        "VernacExtend",
                        "970d4dc9b851af8880a8a5a9291c519e4b1c80f4"
                    ]
                },
                {
                    "command": [
                        "intro; cut (forall n:nat, 0 < Wn n).",
                        "VernacExtend",
                        "c88a773ec6176cad07c0585863f645ba52c70ee0"
                    ]
                },
                {
                    "command": [
                        "intro; cut (Un_cv (fun n:nat => Rabs (Vn (S n) / Vn n)) 0).",
                        "VernacExtend",
                        "d453ac4a9b6a3cf56d6f718306c90df135c5de08"
                    ]
                },
                {
                    "command": [
                        "intro; cut (Un_cv (fun n:nat => Rabs (Wn (S n) / Wn n)) 0).",
                        "VernacExtend",
                        "776c168e66aa997950c684478c02a48b57408ffc"
                    ]
                },
                {
                    "command": [
                        "intro; pose proof (Alembert_C1 Vn H1 H3) as (x,p).",
                        "VernacExtend",
                        "1edb0ebe33f9055914250db62832c04b100bb9bf"
                    ]
                },
                {
                    "command": [
                        "pose proof (Alembert_C1 Wn H2 H4) as (x0,p0).",
                        "VernacExtend",
                        "39821881ff32ceff9170c55239aed42c7817fa57"
                    ]
                },
                {
                    "command": [
                        "exists (x - x0); unfold Un_cv; unfold Un_cv in p; unfold Un_cv in p0; intros; cut (0 < eps / 2).",
                        "VernacExtend",
                        "cf52ca722cc5288b023afbdedb7d1f167da0ae48"
                    ]
                },
                {
                    "command": [
                        "intro H6; destruct (p (eps / 2) H6) as (x1,H8).",
                        "VernacExtend",
                        "ff3fa56b0dccbb4eae1ffc0315280ebc81d1b660"
                    ]
                },
                {
                    "command": [
                        "clear p.",
                        "VernacExtend",
                        "5f73d163168e7a544792b1dfd7eff9cdb7659426"
                    ]
                },
                {
                    "command": [
                        "destruct (p0 (eps / 2) H6) as (x2,H9).",
                        "VernacExtend",
                        "a8e733337f5907bc6a9f26e8551b23e0c5de1f99"
                    ]
                },
                {
                    "command": [
                        "clear p0.",
                        "VernacExtend",
                        "d8deee2bd828032dcc3a3db1b0752b858f737566"
                    ]
                },
                {
                    "command": [
                        "set (N := max x1 x2).",
                        "VernacExtend",
                        "bd7cbe9f18f773e96dbdb3dfcb0d95947ab2adb2"
                    ]
                },
                {
                    "command": [
                        "exists N; intros; replace (sum_f_R0 An n) with (sum_f_R0 Vn n - sum_f_R0 Wn n).",
                        "VernacExtend",
                        "3bdcb6f854e1038a5e1c50cada61b89cb1cc113e"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist; replace (sum_f_R0 Vn n - sum_f_R0 Wn n - (x - x0)) with (sum_f_R0 Vn n - x + - (sum_f_R0 Wn n - x0)); [ idtac | ring ]; apply Rle_lt_trans with (Rabs (sum_f_R0 Vn n - x) + Rabs (- (sum_f_R0 Wn n - x0))).",
                        "VernacExtend",
                        "2132cee67b2881c4aedd1dfb85a3b36b72960a37"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_triang.",
                        "VernacExtend",
                        "ac95e0693bced827aa4991eb13639b86503a8150"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Ropp; apply Rlt_le_trans with (eps / 2 + eps / 2).",
                        "VernacExtend",
                        "5a92dd171b13febee887a963eff1cf9bc04682b9"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat.",
                        "VernacExtend",
                        "f7bc5a60a4f35352751a55736bc694ac6ced98ea"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist in H8; apply H8; unfold ge; apply le_trans with N; [ unfold N; apply le_max_l | assumption ].",
                        "VernacExtend",
                        "7009231692104ac164a3fea43b68d25bff47eead"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist in H9; apply H9; unfold ge; apply le_trans with N; [ unfold N; apply le_max_r | assumption ].",
                        "VernacExtend",
                        "a6edea5af42bcda06656ea7355462aa3e40200f5"
                    ]
                },
                {
                    "command": [
                        "right; symmetry ; apply double_var.",
                        "VernacExtend",
                        "e5c70a44359939c92b66ebe2ece2eec94f12d2d7"
                    ]
                },
                {
                    "command": [
                        "symmetry ; apply tech11; intro; unfold Vn, Wn; unfold Rdiv; do 2 rewrite <- (Rmult_comm (/ 2)); apply Rmult_eq_reg_l with 2.",
                        "VernacExtend",
                        "860446caa229aa2a81f7392bdac100f7c30239b3"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_minus_distr_l; repeat rewrite <- Rmult_assoc; rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "bc3f61657ec590a1c812344c6effb7b4be031336"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; prove_sup0 ].",
                        "VernacExtend",
                        "4d905fce1c75d7adfc4f1cd2deb30dbdf49bf2f3"
                    ]
                },
                {
                    "command": [
                        "cut (forall n:nat, / 2 * Rabs (An n) <= Wn n <= 3 * / 2 * Rabs (An n)).",
                        "VernacExtend",
                        "d3e7b03acb386f578c743f8224a0eeea044443b5"
                    ]
                },
                {
                    "command": [
                        "intro; cut (forall n:nat, / Wn n <= 2 * / Rabs (An n)).",
                        "VernacExtend",
                        "0ce52fd515771fb83f88432371c5cf1a43cc4e03"
                    ]
                },
                {
                    "command": [
                        "intro; cut (forall n:nat, Wn (S n) / Wn n <= 3 * Rabs (An (S n) / An n)).",
                        "VernacExtend",
                        "2652f30427243c5f55c16d277c94001769f6bc37"
                    ]
                },
                {
                    "command": [
                        "intro; unfold Un_cv; intros; unfold Un_cv in H0; cut (0 < eps / 3).",
                        "VernacExtend",
                        "06cbee5715fabdce7ba44d99f984b5aa66cd445a"
                    ]
                },
                {
                    "command": [
                        "intro; elim (H0 (eps / 3) H8); intros.",
                        "VernacExtend",
                        "8683bcbe5c8b7fc628884ff4b82bdcee97406ecf"
                    ]
                },
                {
                    "command": [
                        "exists x; intros.",
                        "VernacExtend",
                        "630f24a2d635df94b063a62023a90567ef134b19"
                    ]
                },
                {
                    "command": [
                        "assert (H11 := H9 n H10).",
                        "VernacExtend",
                        "24d715f0a2aaf22c3fd509706f864ddd337be8b4"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; rewrite Rabs_Rabsolu; unfold R_dist in H11; unfold Rminus in H11; rewrite Ropp_0 in H11; rewrite Rplus_0_r in H11; rewrite Rabs_Rabsolu in H11; rewrite Rabs_right.",
                        "VernacExtend",
                        "0a76cd769cd12a89486c1e1dfeb5042d2f9b3bd4"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (3 * Rabs (An (S n) / An n)).",
                        "VernacExtend",
                        "c2602634b64ef9a57c9e69926384d2304dae0380"
                    ]
                },
                {
                    "command": [
                        "apply H6.",
                        "VernacExtend",
                        "b0314bbdc776869d305067ca471096a36fa958c1"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (/ 3).",
                        "VernacExtend",
                        "a589ca652ef0d1a8befaa2ee59369951184a8ed0"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "ee74bd033c1031a79ef440e1d41037d5c9648214"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_assoc; rewrite <- Rinv_l_sym; [ idtac | discrR ]; rewrite Rmult_1_l; rewrite <- (Rmult_comm eps); unfold Rdiv in H11; exact H11.",
                        "VernacExtend",
                        "760a6b3e989e484ff83539a7c182b0d2ed922610"
                    ]
                },
                {
                    "command": [
                        "left; change (0 < Wn (S n) / Wn n); unfold Rdiv; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "2f5c76b04eddb00eb6434b4ba9b1f94d8827e720"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply H2.",
                        "VernacExtend",
                        "8706a6379af21b1e0687b036d1f22e3ec09607e4"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; prove_sup0 ].",
                        "VernacExtend",
                        "4d905fce1c75d7adfc4f1cd2deb30dbdf49bf2f3"
                    ]
                },
                {
                    "command": [
                        "intro; unfold Rdiv; rewrite Rabs_mult; rewrite <- Rmult_assoc; replace 3 with (2 * (3 * / 2)); [ idtac | rewrite <- Rmult_assoc; apply Rinv_r_simpl_m; discrR ]; apply Rle_trans with (Wn (S n) * 2 * / Rabs (An n)).",
                        "VernacExtend",
                        "d170527ed54981771c9fca2cd4c7f38b94f33b3f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc; apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "994d36ecbd521a8caf6578dc1f8ef6ee2f2064df"
                    ]
                },
                {
                    "command": [
                        "left; apply H2.",
                        "VernacExtend",
                        "be2b38e8917d14be6e11e98c1be6813c5506a365"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Rinv.",
                        "VernacExtend",
                        "37f0a3ac5c309484aec5354295705ced53683ada"
                    ]
                },
                {
                    "command": [
                        "replace (Wn (S n) * 2 * / Rabs (An n)) with (2 * / Rabs (An n) * Wn (S n)); [ idtac | ring ]; replace (2 * (3 * / 2) * Rabs (An (S n)) * / Rabs (An n)) with (2 * / Rabs (An n) * (3 * / 2 * Rabs (An (S n)))); [ idtac | ring ]; apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "5f31d1919ccf32059cf3828d02d712b2891932a7"
                    ]
                },
                {
                    "command": [
                        "left; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "71c62849403cd1175220512dbc3f749dc6ddf1fe"
                    ]
                },
                {
                    "command": [
                        "prove_sup0.",
                        "VernacExtend",
                        "9681c23836ca7f82fee12028ab3f984ae6ec2935"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply Rabs_pos_lt; apply H.",
                        "VernacExtend",
                        "38e4d55ae031fda7dc1f98571324b07101b8a2ea"
                    ]
                },
                {
                    "command": [
                        "elim (H4 (S n)); intros; assumption.",
                        "VernacExtend",
                        "711fbd45bfbe60ba32388c2e81b2d3c4a410a8cb"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "intro; apply Rmult_le_reg_l with (Wn n).",
                        "VernacExtend",
                        "17e624a4c4a826a4708d5426f01f62952a584f8b"
                    ]
                },
                {
                    "command": [
                        "apply H2.",
                        "VernacExtend",
                        "17101978526a14fb5ad41816224a2fc35cc3d256"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "2ca74255a63c294f9442d956f32a2e3784636efb"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_reg_l with (Rabs (An n)).",
                        "VernacExtend",
                        "bdd19d5a30bc00ab2daade83d381aeadd358535e"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos_lt; apply H.",
                        "VernacExtend",
                        "9b9e792fbe22e3bcf0332d49218d1184fd9b1eaf"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; replace (Rabs (An n) * (Wn n * (2 * / Rabs (An n)))) with (2 * Wn n * (Rabs (An n) * / Rabs (An n))); [ idtac | ring ]; rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "dfe9ce471aac7dfedf9dd10e18d56482e4e1b693"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; apply Rmult_le_reg_l with (/ 2).",
                        "VernacExtend",
                        "93123b53e8d088f1645e110d636fd61cf18fee32"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "ee74bd033c1031a79ef440e1d41037d5c9648214"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_assoc; rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "eccb067dc9e836ad48bf16c61cd308004f5d6712"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l; elim (H4 n); intros; assumption.",
                        "VernacExtend",
                        "55480b1c55ee53d0c02f1b11a2c1d7f6013d4af8"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0; apply H.",
                        "VernacExtend",
                        "c0eac17e7cc00315824d854ecf1e419940c43360"
                    ]
                },
                {
                    "command": [
                        "red; intro; assert (H6 := H2 n); rewrite H5 in H6; elim (Rlt_irrefl _ H6).",
                        "VernacExtend",
                        "bc69f8edad554223b2f3577f68e398ff607c4301"
                    ]
                },
                {
                    "command": [
                        "intro; split.",
                        "VernacExtend",
                        "fab266bb307ddec4a6ab91d7f2efd84a9c1736ef"
                    ]
                },
                {
                    "command": [
                        "unfold Wn; unfold Rdiv; rewrite <- (Rmult_comm (/ 2)); apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "722eb4fbbdaf6d7237f6cbfa5f026d9d5c7089ab"
                    ]
                },
                {
                    "command": [
                        "left; apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "fc25f088c7eb945b25a6fd912d0d79ce4330ae4c"
                    ]
                },
                {
                    "command": [
                        "pattern (Rabs (An n)) at 1; rewrite <- Rplus_0_r; rewrite double; unfold Rminus; rewrite Rplus_assoc; apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "6140bf43b03c6639c2bc3add8f55c90a23556e21"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (An n).",
                        "VernacExtend",
                        "af8af55ab3c4b45fef4ae88a38497c41228f4b97"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_0_r; rewrite (Rplus_comm (An n)); rewrite Rplus_assoc; rewrite Rplus_opp_l; rewrite Rplus_0_r; apply RRle_abs.",
                        "VernacExtend",
                        "607a899d09a8546cf8ab42ac379c42f8afb6c5e4"
                    ]
                },
                {
                    "command": [
                        "unfold Wn; unfold Rdiv; repeat rewrite <- (Rmult_comm (/ 2)); repeat rewrite Rmult_assoc; apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "15ab1169a19a927024c8908b4ec8708f4c5bf504"
                    ]
                },
                {
                    "command": [
                        "left; apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "fc25f088c7eb945b25a6fd912d0d79ce4330ae4c"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus; rewrite double; replace (3 * Rabs (An n)) with (Rabs (An n) + Rabs (An n) + Rabs (An n)); [ idtac | ring ]; repeat rewrite Rplus_assoc; repeat apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "37ebeb023d41484c05fffa1a9d6cf5d1f242b502"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rabs_Ropp; apply RRle_abs.",
                        "VernacExtend",
                        "4ecb3e2260965d6d9df7e30c3a4c5bd460cc893a"
                    ]
                },
                {
                    "command": [
                        "cut (forall n:nat, / 2 * Rabs (An n) <= Vn n <= 3 * / 2 * Rabs (An n)).",
                        "VernacExtend",
                        "7ed36c28c2623665243113c83346b57248b84a20"
                    ]
                },
                {
                    "command": [
                        "intro; cut (forall n:nat, / Vn n <= 2 * / Rabs (An n)).",
                        "VernacExtend",
                        "c41a4d50d2e04118124f81d9160e2e9063d74413"
                    ]
                },
                {
                    "command": [
                        "intro; cut (forall n:nat, Vn (S n) / Vn n <= 3 * Rabs (An (S n) / An n)).",
                        "VernacExtend",
                        "c2364faf47afbf853bc44bf3f06347cee2ac7a6c"
                    ]
                },
                {
                    "command": [
                        "intro; unfold Un_cv; intros; unfold Un_cv in H1; cut (0 < eps / 3).",
                        "VernacExtend",
                        "f78f49f7b65151b7c8af3fa27780305e80dba0ab"
                    ]
                },
                {
                    "command": [
                        "intro; elim (H0 (eps / 3) H7); intros.",
                        "VernacExtend",
                        "1b7a3a6a59fe837a7ef5529765c547d8fff54aae"
                    ]
                },
                {
                    "command": [
                        "exists x; intros.",
                        "VernacExtend",
                        "630f24a2d635df94b063a62023a90567ef134b19"
                    ]
                },
                {
                    "command": [
                        "assert (H10 := H8 n H9).",
                        "VernacExtend",
                        "0e35557735105495216be8cccdc4755ac700b046"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; rewrite Rabs_Rabsolu; unfold R_dist in H10; unfold Rminus in H10; rewrite Ropp_0 in H10; rewrite Rplus_0_r in H10; rewrite Rabs_Rabsolu in H10; rewrite Rabs_right.",
                        "VernacExtend",
                        "f56d1be2e034b32c20ebf9f5683589852e281775"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with (3 * Rabs (An (S n) / An n)).",
                        "VernacExtend",
                        "c2602634b64ef9a57c9e69926384d2304dae0380"
                    ]
                },
                {
                    "command": [
                        "apply H5.",
                        "VernacExtend",
                        "4feb0df7cc51caef1d129e505dc0af74a67c0d74"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (/ 3).",
                        "VernacExtend",
                        "a589ca652ef0d1a8befaa2ee59369951184a8ed0"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "ee74bd033c1031a79ef440e1d41037d5c9648214"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_assoc; rewrite <- Rinv_l_sym; [ idtac | discrR ]; rewrite Rmult_1_l; rewrite <- (Rmult_comm eps); unfold Rdiv in H10; exact H10.",
                        "VernacExtend",
                        "477bfde18cfcc101fd411dc321a00e3d2d365b9a"
                    ]
                },
                {
                    "command": [
                        "left; change (0 < Vn (S n) / Vn n); unfold Rdiv; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "1382b86a297dc32eb9a0c9aa073788aa8df58817"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply H1.",
                        "VernacExtend",
                        "7e95d035d3eb926b15c72f713bfd14714444f7f3"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; prove_sup0 ].",
                        "VernacExtend",
                        "4d905fce1c75d7adfc4f1cd2deb30dbdf49bf2f3"
                    ]
                },
                {
                    "command": [
                        "intro; unfold Rdiv; rewrite Rabs_mult; rewrite <- Rmult_assoc; replace 3 with (2 * (3 * / 2)); [ idtac | rewrite <- Rmult_assoc; apply Rinv_r_simpl_m; discrR ]; apply Rle_trans with (Vn (S n) * 2 * / Rabs (An n)).",
                        "VernacExtend",
                        "215a71c3ece6bcebed51ef7806d92f9e4967b3ad"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc; apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "994d36ecbd521a8caf6578dc1f8ef6ee2f2064df"
                    ]
                },
                {
                    "command": [
                        "left; apply H1.",
                        "VernacExtend",
                        "993f5d69ffe02b0f51fe3710b8fd8b146d347b12"
                    ]
                },
                {
                    "command": [
                        "apply H4.",
                        "VernacExtend",
                        "8d6536f7ce69f220eb5e89ccd6a8a69dc270ed4b"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Rinv.",
                        "VernacExtend",
                        "37f0a3ac5c309484aec5354295705ced53683ada"
                    ]
                },
                {
                    "command": [
                        "replace (Vn (S n) * 2 * / Rabs (An n)) with (2 * / Rabs (An n) * Vn (S n)); [ idtac | ring ]; replace (2 * (3 * / 2) * Rabs (An (S n)) * / Rabs (An n)) with (2 * / Rabs (An n) * (3 * / 2 * Rabs (An (S n)))); [ idtac | ring ]; apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "4dfa004455a61f93300b1a9586524d896014db89"
                    ]
                },
                {
                    "command": [
                        "left; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "71c62849403cd1175220512dbc3f749dc6ddf1fe"
                    ]
                },
                {
                    "command": [
                        "prove_sup0.",
                        "VernacExtend",
                        "9681c23836ca7f82fee12028ab3f984ae6ec2935"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply Rabs_pos_lt; apply H.",
                        "VernacExtend",
                        "38e4d55ae031fda7dc1f98571324b07101b8a2ea"
                    ]
                },
                {
                    "command": [
                        "elim (H3 (S n)); intros; assumption.",
                        "VernacExtend",
                        "c2efea8a8ec746fb85bc9a9d3519e6db85bcf2ec"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "intro; apply Rmult_le_reg_l with (Vn n).",
                        "VernacExtend",
                        "6f5fc33709063c9c6220e3c1b4bd6981020c56f2"
                    ]
                },
                {
                    "command": [
                        "apply H1.",
                        "VernacExtend",
                        "3fcc9345bbf6ea218ca825a16c0f27912de9bd67"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "2ca74255a63c294f9442d956f32a2e3784636efb"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_reg_l with (Rabs (An n)).",
                        "VernacExtend",
                        "bdd19d5a30bc00ab2daade83d381aeadd358535e"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos_lt; apply H.",
                        "VernacExtend",
                        "9b9e792fbe22e3bcf0332d49218d1184fd9b1eaf"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; replace (Rabs (An n) * (Vn n * (2 * / Rabs (An n)))) with (2 * Vn n * (Rabs (An n) * / Rabs (An n))); [ idtac | ring ]; rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "b3bd7f44225dd551d280587c5b4a6c89499abe98"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; apply Rmult_le_reg_l with (/ 2).",
                        "VernacExtend",
                        "93123b53e8d088f1645e110d636fd61cf18fee32"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "ee74bd033c1031a79ef440e1d41037d5c9648214"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_assoc; rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "eccb067dc9e836ad48bf16c61cd308004f5d6712"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l; elim (H3 n); intros; assumption.",
                        "VernacExtend",
                        "a1b7fe7e7f39cd872bb1388fd91ec237341767c6"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0; apply H.",
                        "VernacExtend",
                        "c0eac17e7cc00315824d854ecf1e419940c43360"
                    ]
                },
                {
                    "command": [
                        "red; intro; assert (H5 := H1 n); rewrite H4 in H5; elim (Rlt_irrefl _ H5).",
                        "VernacExtend",
                        "c28b41fc5e3ea0b27666bd4a57b050a2581e521c"
                    ]
                },
                {
                    "command": [
                        "intro; split.",
                        "VernacExtend",
                        "fab266bb307ddec4a6ab91d7f2efd84a9c1736ef"
                    ]
                },
                {
                    "command": [
                        "unfold Vn; unfold Rdiv; rewrite <- (Rmult_comm (/ 2)); apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "60ad35b0ed1717d4676aff909bb3cad80dc4defa"
                    ]
                },
                {
                    "command": [
                        "left; apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "fc25f088c7eb945b25a6fd912d0d79ce4330ae4c"
                    ]
                },
                {
                    "command": [
                        "pattern (Rabs (An n)) at 1; rewrite <- Rplus_0_r; rewrite double; rewrite Rplus_assoc; apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "28e494048275bf072e8b871f13768b79dfdf0153"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_reg_l with (- An n); rewrite Rplus_0_r; rewrite <- (Rplus_comm (An n)); rewrite <- Rplus_assoc; rewrite Rplus_opp_l; rewrite Rplus_0_l; rewrite <- Rabs_Ropp; apply RRle_abs.",
                        "VernacExtend",
                        "30c84a601196e11d9580fde3bd878c3142264db1"
                    ]
                },
                {
                    "command": [
                        "unfold Vn; unfold Rdiv; repeat rewrite <- (Rmult_comm (/ 2)); repeat rewrite Rmult_assoc; apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "caa0a67395f0adb44e3900d9d529cbeb56312053"
                    ]
                },
                {
                    "command": [
                        "left; apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "fc25f088c7eb945b25a6fd912d0d79ce4330ae4c"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus; rewrite double; replace (3 * Rabs (An n)) with (Rabs (An n) + Rabs (An n) + Rabs (An n)); [ idtac | ring ]; repeat rewrite Rplus_assoc; repeat apply Rplus_le_compat_l; apply RRle_abs.",
                        "VernacExtend",
                        "d7b0498c2f4fff178cfade28a379d02c72655c46"
                    ]
                },
                {
                    "command": [
                        "intro; unfold Wn; unfold Rdiv; rewrite <- (Rmult_0_r (/ 2)); rewrite <- (Rmult_comm (/ 2)); apply Rmult_lt_compat_l.",
                        "VernacExtend",
                        "260b33886718380e7b205b07edb82e9e356fd16c"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "ee74bd033c1031a79ef440e1d41037d5c9648214"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with (An n); rewrite Rplus_0_r; unfold Rminus; rewrite (Rplus_comm (An n)); rewrite Rplus_assoc; rewrite Rplus_opp_l; rewrite Rplus_0_r; apply Rle_lt_trans with (Rabs (An n)).",
                        "VernacExtend",
                        "8a373cd16a2bf18f6469a045ca1515e272aa1df6"
                    ]
                },
                {
                    "command": [
                        "apply RRle_abs.",
                        "VernacExtend",
                        "1333b00626244e19099bec7e0de632062c4070a3"
                    ]
                },
                {
                    "command": [
                        "rewrite double; pattern (Rabs (An n)) at 1; rewrite <- Rplus_0_r; apply Rplus_lt_compat_l; apply Rabs_pos_lt; apply H.",
                        "VernacExtend",
                        "6018883917bd34421c79dc1f63a3575bdcb0fc2d"
                    ]
                },
                {
                    "command": [
                        "intro; unfold Vn; unfold Rdiv; rewrite <- (Rmult_0_r (/ 2)); rewrite <- (Rmult_comm (/ 2)); apply Rmult_lt_compat_l.",
                        "VernacExtend",
                        "9c2b780809310d9b9f56bf4c2ecaa23b73e551ca"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; prove_sup0.",
                        "VernacExtend",
                        "ee74bd033c1031a79ef440e1d41037d5c9648214"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with (- An n); rewrite Rplus_0_r; unfold Rminus; rewrite (Rplus_comm (- An n)); rewrite Rplus_assoc; rewrite Rplus_opp_r; rewrite Rplus_0_r; apply Rle_lt_trans with (Rabs (An n)).",
                        "VernacExtend",
                        "3c27e6a8e99a1a391007d889b665b4e6643531be"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rabs_Ropp; apply RRle_abs.",
                        "VernacExtend",
                        "4ecb3e2260965d6d9df7e30c3a4c5bd460cc893a"
                    ]
                },
                {
                    "command": [
                        "rewrite double; pattern (Rabs (An n)) at 1; rewrite <- Rplus_0_r; apply Rplus_lt_compat_l; apply Rabs_pos_lt; apply H.",
                        "VernacExtend",
                        "6018883917bd34421c79dc1f63a3575bdcb0fc2d"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "AlembertC3_step1",
            "line_nb": 211,
            "steps": [
                {
                    "command": [
                        "intros; set (Bn := fun i:nat => An i * x ^ i).",
                        "VernacExtend",
                        "8e1183a6ab93aedc5ffe966c39202845f45dc4da"
                    ]
                },
                {
                    "command": [
                        "cut (forall n:nat, Bn n <> 0).",
                        "VernacExtend",
                        "ff80238967b6eb39d34bf4de653bf8fe35202721"
                    ]
                },
                {
                    "command": [
                        "intro; cut (Un_cv (fun n:nat => Rabs (Bn (S n) / Bn n)) 0).",
                        "VernacExtend",
                        "bba8edbc0f4989a6796c4f71bbe47cb3e9739909"
                    ]
                },
                {
                    "command": [
                        "intro; destruct (Alembert_C2 Bn H2 H3) as (x0,H4).",
                        "VernacExtend",
                        "b81773cfbfbecac094dc91523c121ac5dc6a3fe7"
                    ]
                },
                {
                    "command": [
                        "exists x0; unfold Bn in H4; apply tech12; assumption.",
                        "VernacExtend",
                        "e116cf8f8361f5f187a04c016305df95be5cfd97"
                    ]
                },
                {
                    "command": [
                        "unfold Un_cv; intros; unfold Un_cv in H1; cut (0 < eps / Rabs x).",
                        "VernacExtend",
                        "1c9ee6d95b7a2c51f82416333de523954d5d436d"
                    ]
                },
                {
                    "command": [
                        "intro; elim (H1 (eps / Rabs x) H4); intros.",
                        "VernacExtend",
                        "736866619d90891920663aed40c4beb161f124d9"
                    ]
                },
                {
                    "command": [
                        "exists x0; intros; unfold R_dist; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; rewrite Rabs_Rabsolu; unfold Bn; replace (An (S n) * x ^ S n / (An n * x ^ n)) with (An (S n) / An n * x).",
                        "VernacExtend",
                        "3949ccd83d4b92e6f67565e6c23c6b204883c5eb"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult; apply Rmult_lt_reg_l with (/ Rabs x).",
                        "VernacExtend",
                        "544c236333fe5424cd113a8dfc86b70f515f9951"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply Rabs_pos_lt; assumption.",
                        "VernacExtend",
                        "e4c91a40f2fa1c87312f044d164ffed2c6475792"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_comm (Rabs x)); rewrite <- Rmult_assoc; rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "72989375e9e0dec75378a21159288c8e8704be4d"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l; rewrite <- (Rmult_comm eps); unfold Rdiv in H5; replace (Rabs (An (S n) / An n)) with (R_dist (Rabs (An (S n) * / An n)) 0).",
                        "VernacExtend",
                        "574b7cfc88dd1b6c52f612e7760b70ad2cfd0916"
                    ]
                },
                {
                    "command": [
                        "apply H5; assumption.",
                        "VernacExtend",
                        "8f860832491462a0a9db7bd7c081da8cdc789cad"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist; unfold Rminus; rewrite Ropp_0; rewrite Rplus_0_r; rewrite Rabs_Rabsolu; unfold Rdiv; reflexivity.",
                        "VernacExtend",
                        "aa3b5d6e98c8fd96f4dca1f1153162aee0f1a78e"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0; assumption.",
                        "VernacExtend",
                        "919603fae9f5552a2987bbb604439a06966af0d9"
                    ]
                },
                {
                    "command": [
                        "replace (S n) with (n + 1)%nat; [ idtac | ring ]; rewrite pow_add; unfold Rdiv; rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "5a25b4308e6485ca327c974311ff43222c813bc8"
                    ]
                },
                {
                    "command": [
                        "replace (An (n + 1)%nat * (x ^ n * x ^ 1) * (/ An n * / x ^ n)) with (An (n + 1)%nat * x ^ 1 * / An n * (x ^ n * / x ^ n)); [ idtac | ring ]; rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "3ad4a152616215fb4039338bba771479e85c3161"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero; assumption.",
                        "VernacExtend",
                        "6d4db41cbe558f394b4e9accb20ef61b0da0c671"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero; assumption.",
                        "VernacExtend",
                        "6d4db41cbe558f394b4e9accb20ef61b0da0c671"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat; [ assumption | apply Rinv_0_lt_compat; apply Rabs_pos_lt; assumption ].",
                        "VernacExtend",
                        "e6374a53c1da33d802c11a194e690a8e6d3c3101"
                    ]
                },
                {
                    "command": [
                        "intro; unfold Bn; apply prod_neq_R0; [ apply H0 | apply pow_nonzero; assumption ].",
                        "VernacExtend",
                        "6ebb1631ee7e7dd1faef109681261cc3f9eaeabc"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "AlembertC3_step2",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "intros; exists (An 0%nat).",
                        "VernacExtend",
                        "18f104f97329ed9b74db25080c894952992611f1"
                    ]
                },
                {
                    "command": [
                        "unfold Pser; unfold infinite_sum; intros; exists 0%nat; intros; replace (sum_f_R0 (fun n0:nat => An n0 * x ^ n0) n) with (An 0%nat).",
                        "VernacExtend",
                        "e249680c687ed5fcdb10669ef9ce63a755e04093"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist; unfold Rminus; rewrite Rplus_opp_r; rewrite Rabs_R0; assumption.",
                        "VernacExtend",
                        "67bf0f04c162fcdd27be92864812afe6cb9d76b6"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "rewrite tech5; rewrite Hrecn; [ rewrite H; simpl; ring | unfold ge; apply le_O_n ].",
                        "VernacExtend",
                        "5956c1e1b554f75ef1f712b52c1be88748a0a6c4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Alembert_C3",
            "line_nb": 244,
            "steps": [
                {
                    "command": [
                        "intros; destruct (total_order_T x 0) as [[Hlt|Heq]|Hgt].",
                        "VernacExtend",
                        "1879ff708aabadf57c0f7dcb7805cd35b012f097"
                    ]
                },
                {
                    "command": [
                        "cut (x <> 0).",
                        "VernacExtend",
                        "76f0ffb44cb1997ed4a795f57ccb47e007c7c261"
                    ]
                },
                {
                    "command": [
                        "intro; apply AlembertC3_step1; assumption.",
                        "VernacExtend",
                        "5cccc02570ff580bd53804f2d81ce47350235d7e"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H1 in Hlt; elim (Rlt_irrefl _ Hlt).",
                        "VernacExtend",
                        "388235091098263f185c5162ddeddf67f6d0b0fa"
                    ]
                },
                {
                    "command": [
                        "apply AlembertC3_step2; assumption.",
                        "VernacExtend",
                        "0a508f5e8fc8ba15d840f3223524c90fe99f738e"
                    ]
                },
                {
                    "command": [
                        "cut (x <> 0).",
                        "VernacExtend",
                        "76f0ffb44cb1997ed4a795f57ccb47e007c7c261"
                    ]
                },
                {
                    "command": [
                        "intro; apply AlembertC3_step1; assumption.",
                        "VernacExtend",
                        "5cccc02570ff580bd53804f2d81ce47350235d7e"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H1 in Hgt; elim (Rlt_irrefl _ Hgt).",
                        "VernacExtend",
                        "173d806af27981f3cf7e1d2f8b9b79d27da932d5"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Alembert_C4",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "intros An k Hyp H H0.",
                        "VernacExtend",
                        "06295d2d53e7303dcface30a3a8c115dda9a689f"
                    ]
                },
                {
                    "command": [
                        "cut ({ l:R | is_lub (EUn (fun N:nat => sum_f_R0 An N)) l } -> { l:R | Un_cv (fun N:nat => sum_f_R0 An N) l }).",
                        "VernacExtend",
                        "58851d723817a48f95bab1f2fd8df0211903c49e"
                    ]
                },
                {
                    "command": [
                        "intro X; apply X.",
                        "VernacExtend",
                        "d8369b3f20c219353f24951955475b31a469aa1a"
                    ]
                },
                {
                    "command": [
                        "apply completeness.",
                        "VernacExtend",
                        "cacd984bc8302ffdd56c6fac7b444ece394f062c"
                    ]
                },
                {
                    "command": [
                        "assert (H1 := tech13 _ _ Hyp H0).",
                        "VernacExtend",
                        "121d9858a14507d836e289a19512a1713a8ccfbd"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros.",
                        "VernacExtend",
                        "6b7bcf9d739b14ca3a09271e2c3493e16c5e2914"
                    ]
                },
                {
                    "command": [
                        "elim H2; intros.",
                        "VernacExtend",
                        "1fdc85439644114ac67a1ade25e79a4d8c3588d6"
                    ]
                },
                {
                    "command": [
                        "elim H4; intros.",
                        "VernacExtend",
                        "ef88f175449d4af46e0685700665ce0cdf3e5695"
                    ]
                },
                {
                    "command": [
                        "unfold bound; exists (sum_f_R0 An x0 + / (1 - x) * An (S x0)).",
                        "VernacExtend",
                        "3173dbe9489729829a8444138cedb8240fec6ce9"
                    ]
                },
                {
                    "command": [
                        "unfold is_upper_bound; intros; unfold EUn in H6.",
                        "VernacExtend",
                        "db1db40811ed813c0a7317f83daa0d60d5983cac"
                    ]
                },
                {
                    "command": [
                        "elim H6; intros.",
                        "VernacExtend",
                        "adada1ad2ce0ef6f5f04088c4ecd9bfe31ad7784"
                    ]
                },
                {
                    "command": [
                        "rewrite H7.",
                        "VernacExtend",
                        "2b0de906e9dfacfe89c031c2266760d29b5450f6"
                    ]
                },
                {
                    "command": [
                        "destruct (lt_eq_lt_dec x2 x0) as [[| -> ]|].",
                        "VernacExtend",
                        "e11d6ced8f7ef11312136ec9c57f3a3120c0b994"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 An x0) with (sum_f_R0 An x2 + sum_f_R0 (fun i:nat => An (S x2 + i)%nat) (x0 - S x2)).",
                        "VernacExtend",
                        "22dfd4c08a1f1ad19f4536401b83ea837dd8c80f"
                    ]
                },
                {
                    "command": [
                        "pattern (sum_f_R0 An x2) at 1; rewrite <- Rplus_0_r.",
                        "VernacExtend",
                        "d57c8f8725c4580ad6a2003dab05dbf2f0ac2f02"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_assoc; apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "acf8e5b51c9d2f8867cbf11b3788dea7e7c86e41"
                    ]
                },
                {
                    "command": [
                        "left; apply Rplus_lt_0_compat.",
                        "VernacExtend",
                        "f6649e194849336dfce3c4a6987df6371a841634"
                    ]
                },
                {
                    "command": [
                        "apply tech1.",
                        "VernacExtend",
                        "53265dab9dd0f8f36cdb86b57d1fa6248d8cd5d2"
                    ]
                },
                {
                    "command": [
                        "intros; apply H.",
                        "VernacExtend",
                        "b7bca165a275b11a76ba06a5f07157259bedeabd"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply Rplus_lt_reg_l with x; rewrite Rplus_0_r; replace (x + (1 - x)) with 1; [ elim H3; intros; assumption | ring ].",
                        "VernacExtend",
                        "d0592971c394bbda6df03d3f07c264a60041b4a3"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "symmetry ; apply tech2; assumption.",
                        "VernacExtend",
                        "b76022d68c75da7297e679d6221a704027ea1c97"
                    ]
                },
                {
                    "command": [
                        "pattern (sum_f_R0 An x0) at 1; rewrite <- Rplus_0_r; apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "493a03f035a2379adf815741e17c30231627cdb4"
                    ]
                },
                {
                    "command": [
                        "left; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "71c62849403cd1175220512dbc3f749dc6ddf1fe"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply Rplus_lt_reg_l with x; rewrite Rplus_0_r; replace (x + (1 - x)) with 1; [ elim H3; intros; assumption | ring ].",
                        "VernacExtend",
                        "d0592971c394bbda6df03d3f07c264a60041b4a3"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 An x2) with (sum_f_R0 An x0 + sum_f_R0 (fun i:nat => An (S x0 + i)%nat) (x2 - S x0)).",
                        "VernacExtend",
                        "e238f4bb03351188503ef627b477fca3ebbe5555"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "cut (sum_f_R0 (fun i:nat => An (S x0 + i)%nat) (x2 - S x0) <= An (S x0) * sum_f_R0 (fun i:nat => x ^ i) (x2 - S x0)).",
                        "VernacExtend",
                        "2f2ddc49846848b127a770ab00dddf13e23b993b"
                    ]
                },
                {
                    "command": [
                        "intro; apply Rle_trans with (An (S x0) * sum_f_R0 (fun i:nat => x ^ i) (x2 - S x0)).",
                        "VernacExtend",
                        "55147e341841d832f1ea79f5b3f9756c6f9fb571"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_comm (An (S x0))); apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "184338b89ce01bea647bab57b6a2e3170d82d52a"
                    ]
                },
                {
                    "command": [
                        "left; apply H.",
                        "VernacExtend",
                        "0aa460f78d11391b522e663a46e7bb217b2676f0"
                    ]
                },
                {
                    "command": [
                        "rewrite tech3.",
                        "VernacExtend",
                        "3395aa529f6d4cddf777233b69852b87fa428d02"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_le_reg_l with (1 - x).",
                        "VernacExtend",
                        "6ee6562a1e6c51302b35606debb2228bdb5808f8"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_reg_l with x; rewrite Rplus_0_r.",
                        "VernacExtend",
                        "93d8747421e3ec871422f529a50a5bbdb5406ca0"
                    ]
                },
                {
                    "command": [
                        "replace (x + (1 - x)) with 1; [ elim H3; intros; assumption | ring ].",
                        "VernacExtend",
                        "36e05a7ef96277ca61e39f2dd0746193671dc6a5"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite (Rmult_comm (1 - x)).",
                        "VernacExtend",
                        "978efbdd784cd555b868964697ad98ed9fde1b08"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "7f630b736ed225dea43b09c6ef0119a691020de4"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; apply Rplus_le_reg_l with (x ^ S (x2 - S x0)).",
                        "VernacExtend",
                        "f4ece62109d0c82ba05b179bf83e7de5948b93c9"
                    ]
                },
                {
                    "command": [
                        "replace (x ^ S (x2 - S x0) + (1 - x ^ S (x2 - S x0))) with 1; [ idtac | ring ].",
                        "VernacExtend",
                        "d9f95f0609e10e6ce65b56986ff24af02794f360"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rplus_comm 1); pattern 1 at 1; rewrite <- Rplus_0_r; apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "8a379f72d82025743c0c13d80f7aefd0747a2c9c"
                    ]
                },
                {
                    "command": [
                        "left; apply pow_lt.",
                        "VernacExtend",
                        "771903aa1902c74f78d261ffc3f3e15df57045dc"
                    ]
                },
                {
                    "command": [
                        "apply Rle_lt_trans with k.",
                        "VernacExtend",
                        "f2d5236bd245243b22d30d45407ac9ee3df0e91e"
                    ]
                },
                {
                    "command": [
                        "elim Hyp; intros; assumption.",
                        "VernacExtend",
                        "674a64f12c3c0e1eafd1b26f58ec79f46f0f5f09"
                    ]
                },
                {
                    "command": [
                        "elim H3; intros; assumption.",
                        "VernacExtend",
                        "f02fb1b822404aba5ff1b686b4c857f74184021e"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_eq_contra.",
                        "VernacExtend",
                        "36628d08ea6e2381fe85c05d842ae9dfbbca2407"
                    ]
                },
                {
                    "command": [
                        "red; intro H10.",
                        "VernacExtend",
                        "c403fbb575b4eb70a568299829624b62f765d1b5"
                    ]
                },
                {
                    "command": [
                        "elim H3; intros H11 H12.",
                        "VernacExtend",
                        "3832e180c947e5be0a14a9fe82c360daa4d62345"
                    ]
                },
                {
                    "command": [
                        "rewrite H10 in H12; elim (Rlt_irrefl _ H12).",
                        "VernacExtend",
                        "31bb0f45c30ea743bd8abccb0b1557c4d3703b74"
                    ]
                },
                {
                    "command": [
                        "red; intro H10.",
                        "VernacExtend",
                        "c403fbb575b4eb70a568299829624b62f765d1b5"
                    ]
                },
                {
                    "command": [
                        "elim H3; intros H11 H12.",
                        "VernacExtend",
                        "3832e180c947e5be0a14a9fe82c360daa4d62345"
                    ]
                },
                {
                    "command": [
                        "rewrite H10 in H12; elim (Rlt_irrefl _ H12).",
                        "VernacExtend",
                        "31bb0f45c30ea743bd8abccb0b1557c4d3703b74"
                    ]
                },
                {
                    "command": [
                        "replace (An (S x0)) with (An (S x0 + 0)%nat).",
                        "VernacExtend",
                        "acbad86cf6e841f2db49bbfe5a9fbef1717ae0ba"
                    ]
                },
                {
                    "command": [
                        "apply (tech6 (fun i:nat => An (S x0 + i)%nat) x).",
                        "VernacExtend",
                        "c39d56c928543e2c3f25d98b4363c3e55b246176"
                    ]
                },
                {
                    "command": [
                        "left; apply Rle_lt_trans with k.",
                        "VernacExtend",
                        "248b8d794b31dce1af82a206cf618573e224a7a6"
                    ]
                },
                {
                    "command": [
                        "elim Hyp; intros; assumption.",
                        "VernacExtend",
                        "674a64f12c3c0e1eafd1b26f58ec79f46f0f5f09"
                    ]
                },
                {
                    "command": [
                        "elim H3; intros; assumption.",
                        "VernacExtend",
                        "f02fb1b822404aba5ff1b686b4c857f74184021e"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut (forall n:nat, (n >= x0)%nat -> An (S n) < x * An n).",
                        "VernacExtend",
                        "3a386fe9f2fb15aaed470f601548f03e3c211155"
                    ]
                },
                {
                    "command": [
                        "intro H9.",
                        "VernacExtend",
                        "3a5cee2c4602853379bc498c20515b4b8bb64031"
                    ]
                },
                {
                    "command": [
                        "replace (S x0 + S i)%nat with (S (S x0 + i)).",
                        "VernacExtend",
                        "856cebb48174132c1b8b79b755fba31404fca4bd"
                    ]
                },
                {
                    "command": [
                        "apply H9.",
                        "VernacExtend",
                        "d0479838914cfca7017024564d1663cd6466cb01"
                    ]
                },
                {
                    "command": [
                        "unfold ge.",
                        "VernacExtend",
                        "49aee4aaf6253f31669ea83def7814227efbe0f6"
                    ]
                },
                {
                    "command": [
                        "apply tech8.",
                        "VernacExtend",
                        "028a58adac0108e72fc01585094f724335e4fdc2"
                    ]
                },
                {
                    "command": [
                        "apply INR_eq; rewrite S_INR; do 2 rewrite plus_INR; do 2 rewrite S_INR; ring.",
                        "VernacExtend",
                        "9296a64c1b2631405524d4d54ae7d5be87a6a7e4"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (/ An n).",
                        "VernacExtend",
                        "ce31ec363ce256da548d72452cff747a9cb24194"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply H.",
                        "VernacExtend",
                        "f2d2f14e084a3bec216ca83676c131c819f29b07"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite (Rmult_comm (/ An n)).",
                        "VernacExtend",
                        "ea5c8c0c7ae0d95b09d0926e95d8d00afa024e2b"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc.",
                        "VernacExtend",
                        "323caa1eefcb937c18a66a7144c1e29b2c1a3e40"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "2ca74255a63c294f9442d956f32a2e3784636efb"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "replace (An (S n) * / An n) with (Rabs (An (S n) / An n)).",
                        "VernacExtend",
                        "02a02a5980fe826bc3c90f09bc462a6ca18f3a2a"
                    ]
                },
                {
                    "command": [
                        "apply H5; assumption.",
                        "VernacExtend",
                        "8f860832491462a0a9db7bd7c081da8cdc789cad"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_right.",
                        "VernacExtend",
                        "9b60731d6b608338747f09fec19f24d12baad022"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; reflexivity.",
                        "VernacExtend",
                        "502d25ebbbf5eeefb8e58bf3d014bed415a2593b"
                    ]
                },
                {
                    "command": [
                        "left; unfold Rdiv; change (0 < An (S n) * / An n); apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "8bbde76df34811ac6cb28e45c03a4d4005293311"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply H.",
                        "VernacExtend",
                        "f2d2f14e084a3bec216ca83676c131c819f29b07"
                    ]
                },
                {
                    "command": [
                        "red; intro H10.",
                        "VernacExtend",
                        "c403fbb575b4eb70a568299829624b62f765d1b5"
                    ]
                },
                {
                    "command": [
                        "assert (H11 := H n).",
                        "VernacExtend",
                        "08c8f82993f1da93415d6a15023fb37217635585"
                    ]
                },
                {
                    "command": [
                        "rewrite H10 in H11; elim (Rlt_irrefl _ H11).",
                        "VernacExtend",
                        "fb89ffb9c5677b11f95136969953d74fadaa6c80"
                    ]
                },
                {
                    "command": [
                        "replace (S x0 + 0)%nat with (S x0); [ reflexivity | ring ].",
                        "VernacExtend",
                        "ca62f479cf1ed1b2379d6109a529ee6b8eaf6e0b"
                    ]
                },
                {
                    "command": [
                        "symmetry ; apply tech2; assumption.",
                        "VernacExtend",
                        "b76022d68c75da7297e679d6221a704027ea1c97"
                    ]
                },
                {
                    "command": [
                        "exists (sum_f_R0 An 0); unfold EUn; exists 0%nat; reflexivity.",
                        "VernacExtend",
                        "de5de960319b58703f957d54611577ddad6e8760"
                    ]
                },
                {
                    "command": [
                        "intros (x,H1).",
                        "VernacExtend",
                        "74b1f3c4c75c5e6479e2ea8892bc8606a2624a8b"
                    ]
                },
                {
                    "command": [
                        "exists x; apply Un_cv_crit_lub; [ unfold Un_growing; intro; rewrite tech5; pattern (sum_f_R0 An n) at 1; rewrite <- Rplus_0_r; apply Rplus_le_compat_l; left; apply H | apply H1].",
                        "VernacExtend",
                        "4de6fb64373f949c4891ab7f362d747fb5874de5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Alembert_C5",
            "line_nb": 345,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut ({ l:R | Un_cv (fun N:nat => sum_f_R0 An N) l } -> { l:R | Un_cv (fun N:nat => sum_f_R0 An N) l }).",
                        "VernacExtend",
                        "943b6275c34e50c6b0520078c69f08cd071664c9"
                    ]
                },
                {
                    "command": [
                        "intro Hyp0; apply Hyp0.",
                        "VernacExtend",
                        "a5a3990d9d84026da050576acf75dc8fddd667e8"
                    ]
                },
                {
                    "command": [
                        "apply cv_cauchy_2.",
                        "VernacExtend",
                        "1b9d0e4674b020189683d56bb2fcbe5bda3222d0"
                    ]
                },
                {
                    "command": [
                        "apply cauchy_abs.",
                        "VernacExtend",
                        "a1df9e931d188b753541aa8886a07c1f4b85af90"
                    ]
                },
                {
                    "command": [
                        "apply cv_cauchy_1.",
                        "VernacExtend",
                        "3c964d72c1a7bf388586058717fe43b5e1ac8aa0"
                    ]
                },
                {
                    "command": [
                        "cut ({ l:R | Un_cv (fun N:nat => sum_f_R0 (fun i:nat => Rabs (An i)) N) l } -> { l:R | Un_cv (fun N:nat => sum_f_R0 (fun i:nat => Rabs (An i)) N) l }).",
                        "VernacExtend",
                        "e129875192c82746215adf48cf357746c28a478b"
                    ]
                },
                {
                    "command": [
                        "intro Hyp; apply Hyp.",
                        "VernacExtend",
                        "adadf8ca5f48a62eb6cb9589ca336c69783ba18d"
                    ]
                },
                {
                    "command": [
                        "apply (Alembert_C4 (fun i:nat => Rabs (An i)) k).",
                        "VernacExtend",
                        "efe99cdcb68a2014af8ea81b8c837b296aa31b05"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro; apply Rabs_pos_lt; apply H0.",
                        "VernacExtend",
                        "b62df15a2a26cfa33673c285b77f50cb5c09263f"
                    ]
                },
                {
                    "command": [
                        "unfold Un_cv.",
                        "VernacExtend",
                        "92546babd2031fb5ae4875e88a9d324f3c5bb33e"
                    ]
                },
                {
                    "command": [
                        "unfold Un_cv in H1.",
                        "VernacExtend",
                        "d4d0d9be90f3bdd0ee92959ef2bdbe34478389cf"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv.",
                        "VernacExtend",
                        "d9820df68a5475147f48d29acf89824b27f71597"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (H1 eps H2); intros.",
                        "VernacExtend",
                        "26b04261dd7fa4897011895680592c70e0eb63e3"
                    ]
                },
                {
                    "command": [
                        "exists x; intros.",
                        "VernacExtend",
                        "630f24a2d635df94b063a62023a90567ef134b19"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rabs_Rinv.",
                        "VernacExtend",
                        "90bccb4c2edbe375bae6d85508d1d91269ac60a9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rabs_mult.",
                        "VernacExtend",
                        "ffb7829eab0f0e304148d87efd020e97968f73cc"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Rabsolu.",
                        "VernacExtend",
                        "25c9ef6d16b3e1fd649502a685f930b2c828b10b"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in H3; apply H3; assumption.",
                        "VernacExtend",
                        "a337c44a5b160474b8a3458faea3a937ba743107"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "intro X.",
                        "VernacExtend",
                        "c93bbb51ef8637991b4239865469e36d8e520337"
                    ]
                },
                {
                    "command": [
                        "elim X; intros.",
                        "VernacExtend",
                        "3dbd54ccc1b79786f689975657c25979c4151773"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intro X.",
                        "VernacExtend",
                        "c93bbb51ef8637991b4239865469e36d8e520337"
                    ]
                },
                {
                    "command": [
                        "elim X; intros.",
                        "VernacExtend",
                        "3dbd54ccc1b79786f689975657c25979c4151773"
                    ]
                },
                {
                    "command": [
                        "exists x.",
                        "VernacExtend",
                        "800bf7613c74a608ff1ecae6bb20d349d4e8f84d"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Alembert_C6",
            "line_nb": 377,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut { l:R | Un_cv (fun N:nat => sum_f_R0 (fun i:nat => An i * x ^ i) N) l }.",
                        "VernacExtend",
                        "093fc3db4db802a92fadde49dcbe66b9f0fef0c0"
                    ]
                },
                {
                    "command": [
                        "intro X.",
                        "VernacExtend",
                        "c93bbb51ef8637991b4239865469e36d8e520337"
                    ]
                },
                {
                    "command": [
                        "elim X; intros.",
                        "VernacExtend",
                        "3dbd54ccc1b79786f689975657c25979c4151773"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "apply tech12; assumption.",
                        "VernacExtend",
                        "ac98afff9b21f1d593f4730e4bd792b6788f0aff"
                    ]
                },
                {
                    "command": [
                        "destruct (total_order_T x 0) as [[Hlt|Heq]|Hgt].",
                        "VernacExtend",
                        "1830ad9d953dd807bdda07371341a9f813f9c749"
                    ]
                },
                {
                    "command": [
                        "eapply Alembert_C5 with (k * Rabs x).",
                        "VernacExtend",
                        "110f49bcc99dbf5154ebcbc903ac89074255b303"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_le_pos.",
                        "VernacExtend",
                        "9295075fac998a2bbf6d97082250072803a082bc"
                    ]
                },
                {
                    "command": [
                        "left; assumption.",
                        "VernacExtend",
                        "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
                    ]
                },
                {
                    "command": [
                        "left; apply Rabs_pos_lt.",
                        "VernacExtend",
                        "b0ff7981ce13538d867ea4e2103c70be7d4a7c77"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H3 in Hlt; elim (Rlt_irrefl _ Hlt).",
                        "VernacExtend",
                        "ea09ab086a0c9ab3308db978308f965a1d2cea9d"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (/ k).",
                        "VernacExtend",
                        "e9ab836a5ef9331e51af2bf80e0266615c7ee6c6"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; assumption.",
                        "VernacExtend",
                        "7c8a6c48f8e12a680ed85ee789a9c10a10ee8701"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_assoc.",
                        "VernacExtend",
                        "34da3c50cde53c179a4908b1329a459071245c05"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l.",
                        "VernacExtend",
                        "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; assumption.",
                        "VernacExtend",
                        "035507d12dca88b716bc3bd5a29b9a28d7038962"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H3 in H; elim (Rlt_irrefl _ H).",
                        "VernacExtend",
                        "d267a87999d132d81e361f66081b32e13b9ad8b0"
                    ]
                },
                {
                    "command": [
                        "intro; apply prod_neq_R0.",
                        "VernacExtend",
                        "9327657a0bedb95c00f979a91855d305af8d20a9"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero.",
                        "VernacExtend",
                        "282744fa14f20635385d7e1ac0d1a961c143f970"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H3 in Hlt; elim (Rlt_irrefl _ Hlt).",
                        "VernacExtend",
                        "ea09ab086a0c9ab3308db978308f965a1d2cea9d"
                    ]
                },
                {
                    "command": [
                        "unfold Un_cv; unfold Un_cv in H1.",
                        "VernacExtend",
                        "4991dbe32f81ed4b361bc27ee0f7137f89b89b5f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (0 < eps / Rabs x).",
                        "VernacExtend",
                        "670f2b4e9ebb386454f17e967f9ec1887bed6a5b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim (H1 (eps / Rabs x) H4); intros.",
                        "VernacExtend",
                        "d75ee8c56afd5b77dd360f5b6046eb95becf1248"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (An (S n) * x ^ S n / (An n * x ^ n)) with (An (S n) / An n * x).",
                        "VernacExtend",
                        "4cf620953c3131b2856804991e5b7900815ad0cf"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist.",
                        "VernacExtend",
                        "9d14879a55d02ad54565968e31b64da7aeb66d97"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "replace (Rabs (An (S n) / An n) * Rabs x - k * Rabs x) with (Rabs x * (Rabs (An (S n) / An n) - k)); [ idtac | ring ].",
                        "VernacExtend",
                        "f5368585474b18507d9af73189a50f9a9b7cb05f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Rabsolu.",
                        "VernacExtend",
                        "25c9ef6d16b3e1fd649502a685f930b2c828b10b"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (/ Rabs x).",
                        "VernacExtend",
                        "3c25fdd20a4f70c1dd16aed4b87fdb720401bc50"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply Rabs_pos_lt.",
                        "VernacExtend",
                        "6f1b4f322e563834885ccb901ce5726dcbee2da5"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H7 in Hlt; elim (Rlt_irrefl _ Hlt).",
                        "VernacExtend",
                        "29f9119bd4cdb97c4ff55c08271466d8baba53f3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_assoc.",
                        "VernacExtend",
                        "34da3c50cde53c179a4908b1329a459071245c05"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l.",
                        "VernacExtend",
                        "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_comm eps).",
                        "VernacExtend",
                        "ed9d8d167ad15e8106fefb6a097e0a0efdd21b90"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist in H5.",
                        "VernacExtend",
                        "0f5f9746216dd46eb12459f52dd678f9e8433bee"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; unfold Rdiv in H5; apply H5; assumption.",
                        "VernacExtend",
                        "683928ba95605b7c0a233e2f126b6780cb3d4602"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0.",
                        "VernacExtend",
                        "8d37b098d9cb0f050cfd8b29c49d318c2b960566"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H7 in Hlt; elim (Rlt_irrefl _ Hlt).",
                        "VernacExtend",
                        "29f9119bd4cdb97c4ff55c08271466d8baba53f3"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; replace (S n) with (n + 1)%nat; [ idtac | ring ].",
                        "VernacExtend",
                        "3ad603d86d90c1d5801e60a25577d1d31a9315b0"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_add.",
                        "VernacExtend",
                        "e7ffb4294c31ded66f1a5f321399a9a5b2326cb2"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "55666fd2776d160fb1bfd9d38a2833e66927f366"
                    ]
                },
                {
                    "command": [
                        "replace (An (n + 1)%nat * (x ^ n * x) * (/ An n * / x ^ n)) with (An (n + 1)%nat * / An n * x * (x ^ n * / x ^ n)); [ idtac | ring ].",
                        "VernacExtend",
                        "bba84cf79da6054f149118c558917f415cd8a32e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "2ca74255a63c294f9442d956f32a2e3784636efb"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; reflexivity.",
                        "VernacExtend",
                        "48cf3ea63852e7c9eb06f376d7f6115fee3b3148"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero.",
                        "VernacExtend",
                        "282744fa14f20635385d7e1ac0d1a961c143f970"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H7 in Hlt; elim (Rlt_irrefl _ Hlt).",
                        "VernacExtend",
                        "29f9119bd4cdb97c4ff55c08271466d8baba53f3"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero.",
                        "VernacExtend",
                        "282744fa14f20635385d7e1ac0d1a961c143f970"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H7 in Hlt; elim (Rlt_irrefl _ Hlt).",
                        "VernacExtend",
                        "29f9119bd4cdb97c4ff55c08271466d8baba53f3"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "7122edbd68559f255bfed03dc640472ed14eb4ef"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply Rabs_pos_lt.",
                        "VernacExtend",
                        "6f1b4f322e563834885ccb901ce5726dcbee2da5"
                    ]
                },
                {
                    "command": [
                        "red; intro H7; rewrite H7 in Hlt; elim (Rlt_irrefl _ Hlt).",
                        "VernacExtend",
                        "4a4d688403b7c9c2b649a509bee19fe4cde18404"
                    ]
                },
                {
                    "command": [
                        "exists (An 0%nat).",
                        "VernacExtend",
                        "e374f3613557c742a50d88b4dff5ac525ee3eef4"
                    ]
                },
                {
                    "command": [
                        "unfold Un_cv.",
                        "VernacExtend",
                        "92546babd2031fb5ae4875e88a9d324f3c5bb33e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists 0%nat.",
                        "VernacExtend",
                        "ecf2e229db1efa1d9dec061865f354468879442a"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist.",
                        "VernacExtend",
                        "9d14879a55d02ad54565968e31b64da7aeb66d97"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 (fun i:nat => An i * x ^ i) n) with (An 0%nat).",
                        "VernacExtend",
                        "dd339f10f6a05f7e26af66549927ba73b1d405a1"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus; rewrite Rplus_opp_r; rewrite Rabs_R0; assumption.",
                        "VernacExtend",
                        "c1de84b8ec8a6c422226e5ca95d3db00e63bd56e"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "rewrite tech5.",
                        "VernacExtend",
                        "9868999d015d8d25987acdadb308fadae9d59e4a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hrecn.",
                        "VernacExtend",
                        "bdd629bae13c11ffa6cdec8d998f9fe961b49ae7"
                    ]
                },
                {
                    "command": [
                        "rewrite Heq; simpl; ring.",
                        "VernacExtend",
                        "cedaade8fcb51b9264bb9d3c48d8663cc190ec39"
                    ]
                },
                {
                    "command": [
                        "unfold ge; apply le_O_n.",
                        "VernacExtend",
                        "bf10b52bec5a357299a9895e3e830c8e01037b6a"
                    ]
                },
                {
                    "command": [
                        "eapply Alembert_C5 with (k * Rabs x).",
                        "VernacExtend",
                        "110f49bcc99dbf5154ebcbc903ac89074255b303"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_le_pos.",
                        "VernacExtend",
                        "9295075fac998a2bbf6d97082250072803a082bc"
                    ]
                },
                {
                    "command": [
                        "left; assumption.",
                        "VernacExtend",
                        "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
                    ]
                },
                {
                    "command": [
                        "left; apply Rabs_pos_lt.",
                        "VernacExtend",
                        "b0ff7981ce13538d867ea4e2103c70be7d4a7c77"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H3 in Hgt; elim (Rlt_irrefl _ Hgt).",
                        "VernacExtend",
                        "c0a3ebf3de70a41d69ceb7243a8f5428c122cb9b"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (/ k).",
                        "VernacExtend",
                        "e9ab836a5ef9331e51af2bf80e0266615c7ee6c6"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; assumption.",
                        "VernacExtend",
                        "7c8a6c48f8e12a680ed85ee789a9c10a10ee8701"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_assoc.",
                        "VernacExtend",
                        "34da3c50cde53c179a4908b1329a459071245c05"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l.",
                        "VernacExtend",
                        "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; assumption.",
                        "VernacExtend",
                        "035507d12dca88b716bc3bd5a29b9a28d7038962"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H3 in H; elim (Rlt_irrefl _ H).",
                        "VernacExtend",
                        "d267a87999d132d81e361f66081b32e13b9ad8b0"
                    ]
                },
                {
                    "command": [
                        "intro; apply prod_neq_R0.",
                        "VernacExtend",
                        "9327657a0bedb95c00f979a91855d305af8d20a9"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero.",
                        "VernacExtend",
                        "282744fa14f20635385d7e1ac0d1a961c143f970"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H3 in Hgt; elim (Rlt_irrefl _ Hgt).",
                        "VernacExtend",
                        "c0a3ebf3de70a41d69ceb7243a8f5428c122cb9b"
                    ]
                },
                {
                    "command": [
                        "unfold Un_cv; unfold Un_cv in H1.",
                        "VernacExtend",
                        "4991dbe32f81ed4b361bc27ee0f7137f89b89b5f"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "cut (0 < eps / Rabs x).",
                        "VernacExtend",
                        "670f2b4e9ebb386454f17e967f9ec1887bed6a5b"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "elim (H1 (eps / Rabs x) H4); intros.",
                        "VernacExtend",
                        "d75ee8c56afd5b77dd360f5b6046eb95becf1248"
                    ]
                },
                {
                    "command": [
                        "exists x0.",
                        "VernacExtend",
                        "9cf0657053433e90b28a795544f893f4a0f1ace3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace (An (S n) * x ^ S n / (An n * x ^ n)) with (An (S n) / An n * x).",
                        "VernacExtend",
                        "4cf620953c3131b2856804991e5b7900815ad0cf"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist.",
                        "VernacExtend",
                        "9d14879a55d02ad54565968e31b64da7aeb66d97"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "replace (Rabs (An (S n) / An n) * Rabs x - k * Rabs x) with (Rabs x * (Rabs (An (S n) / An n) - k)); [ idtac | ring ].",
                        "VernacExtend",
                        "f5368585474b18507d9af73189a50f9a9b7cb05f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Rabsolu.",
                        "VernacExtend",
                        "25c9ef6d16b3e1fd649502a685f930b2c828b10b"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (/ Rabs x).",
                        "VernacExtend",
                        "3c25fdd20a4f70c1dd16aed4b87fdb720401bc50"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply Rabs_pos_lt.",
                        "VernacExtend",
                        "6f1b4f322e563834885ccb901ce5726dcbee2da5"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H7 in Hgt; elim (Rlt_irrefl _ Hgt).",
                        "VernacExtend",
                        "1c904711d6c92344983f735aed41ec7a5f55354f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_assoc.",
                        "VernacExtend",
                        "34da3c50cde53c179a4908b1329a459071245c05"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "6dcb59ca5b85038cc8fddd44b4afdcbe28fba0ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l.",
                        "VernacExtend",
                        "1ba58092cf1ca2fa8155dfa9c64894290b0f39df"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_comm eps).",
                        "VernacExtend",
                        "ed9d8d167ad15e8106fefb6a097e0a0efdd21b90"
                    ]
                },
                {
                    "command": [
                        "unfold R_dist in H5.",
                        "VernacExtend",
                        "0f5f9746216dd46eb12459f52dd678f9e8433bee"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; unfold Rdiv in H5; apply H5; assumption.",
                        "VernacExtend",
                        "683928ba95605b7c0a233e2f126b6780cb3d4602"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0.",
                        "VernacExtend",
                        "8d37b098d9cb0f050cfd8b29c49d318c2b960566"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H7 in Hgt; elim (Rlt_irrefl _ Hgt).",
                        "VernacExtend",
                        "1c904711d6c92344983f735aed41ec7a5f55354f"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; replace (S n) with (n + 1)%nat; [ idtac | ring ].",
                        "VernacExtend",
                        "3ad603d86d90c1d5801e60a25577d1d31a9315b0"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_add.",
                        "VernacExtend",
                        "e7ffb4294c31ded66f1a5f321399a9a5b2326cb2"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "55666fd2776d160fb1bfd9d38a2833e66927f366"
                    ]
                },
                {
                    "command": [
                        "replace (An (n + 1)%nat * (x ^ n * x) * (/ An n * / x ^ n)) with (An (n + 1)%nat * / An n * x * (x ^ n * / x ^ n)); [ idtac | ring ].",
                        "VernacExtend",
                        "bba84cf79da6054f149118c558917f415cd8a32e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_r_sym.",
                        "VernacExtend",
                        "2ca74255a63c294f9442d956f32a2e3784636efb"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; reflexivity.",
                        "VernacExtend",
                        "48cf3ea63852e7c9eb06f376d7f6115fee3b3148"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero.",
                        "VernacExtend",
                        "282744fa14f20635385d7e1ac0d1a961c143f970"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H7 in Hgt; elim (Rlt_irrefl _ Hgt).",
                        "VernacExtend",
                        "1c904711d6c92344983f735aed41ec7a5f55354f"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero.",
                        "VernacExtend",
                        "282744fa14f20635385d7e1ac0d1a961c143f970"
                    ]
                },
                {
                    "command": [
                        "red; intro; rewrite H7 in Hgt; elim (Rlt_irrefl _ Hgt).",
                        "VernacExtend",
                        "1c904711d6c92344983f735aed41ec7a5f55354f"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "7122edbd68559f255bfed03dc640472ed14eb4ef"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; apply Rabs_pos_lt.",
                        "VernacExtend",
                        "6f1b4f322e563834885ccb901ce5726dcbee2da5"
                    ]
                },
                {
                    "command": [
                        "red; intro H7; rewrite H7 in Hgt; elim (Rlt_irrefl _ Hgt).",
                        "VernacExtend",
                        "419028c3af10f52d5b1a44ad29e7ccf99f94594f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}