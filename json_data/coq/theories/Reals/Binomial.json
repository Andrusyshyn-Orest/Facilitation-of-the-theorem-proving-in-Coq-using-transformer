{
    "filename": "theories/Reals/Binomial.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Rbase.",
            "VernacRequire",
            "c0a8d81b170d4ed8309a8632a3cac35f6cba016a"
        ],
        [
            "Require Import Rfunctions.",
            "VernacRequire",
            "e0ba64ca9fd07e0fc91c59b7bf007fb29a662a86"
        ],
        [
            "Require Import PartSum.",
            "VernacRequire",
            "615de8ef0ed75bdb68bd5486514f11be1837ffd8"
        ],
        [
            "Local Open Scope R_scope.",
            "VernacOpenCloseScope",
            "b005c72bb3303e031b42be04be04c87c005faa38"
        ],
        [
            "Definition C (n p:nat) : R := INR (fact n) / (INR (fact p) * INR (fact (n - p))).",
            "VernacDefinition",
            "4a13b0e43d14416b9ae59815cee38abb78491619"
        ],
        [
            "Lemma pascal_step1 : forall n i:nat, (i <= n)%nat -> C n i = C n (n - i).",
            "VernacStartTheoremProof",
            "94474fe47d6c97f869c7d4d6fc4397aee7e17f83"
        ],
        [
            "intros; unfold C; replace (n - (n - i))%nat with i.",
            "VernacExtend",
            "84e88fb4d4aeb7597d49205cfa3d970b360c4033"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "fd520335d31c715c2f686e2bdc0b380c493b04c0"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply plus_minus; rewrite plus_comm; apply le_plus_minus; assumption.",
            "VernacExtend",
            "c2633c1e865ee94375b6f4ec977ee3d396bd96a7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pascal_step2 : forall n i:nat, (i <= n)%nat -> C (S n) i = INR (S n) / INR (S n - i) * C n i.",
            "VernacStartTheoremProof",
            "a67e27ef55c18e597d462a09ae775be9244fa153"
        ],
        [
            "intros; unfold C; replace (S n - i)%nat with (S (n - i)).",
            "VernacExtend",
            "8f1f38832073f86cc5a926dd64cea3748ff883e5"
        ],
        [
            "cut (forall n:nat, fact (S n) = (S n * fact n)%nat).",
            "VernacExtend",
            "9a0c3bd545bd6e3dcad017d59d7bf3dba9fe7216"
        ],
        [
            "intro; repeat rewrite H0.",
            "VernacExtend",
            "4d1b22e746139a0aafb705129c8d292d98f13892"
        ],
        [
            "unfold Rdiv; repeat rewrite mult_INR; repeat rewrite Rinv_mult_distr.",
            "VernacExtend",
            "a345cb637f1d399792c070f844b9204f63f0affb"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply prod_neq_R0.",
            "VernacExtend",
            "4e401b99cc3c24b61ca502aa7107071c427501ea"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "intro; reflexivity.",
            "VernacExtend",
            "dc2d3bdaf5fe0de88334762a176f5b2d84487862"
        ],
        [
            "apply minus_Sn_m; assumption.",
            "VernacExtend",
            "39813e312ba363aaf5a8d6e81147daf7b3e1422b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pascal_step3 : forall n i:nat, (i < n)%nat -> C n (S i) = INR (n - i) / INR (S i) * C n i.",
            "VernacStartTheoremProof",
            "d76cc6719780b1912214695de0a30dd3022ee31e"
        ],
        [
            "intros; unfold C.",
            "VernacExtend",
            "601fa0e849718d91fe1e650230e2e2a34354262d"
        ],
        [
            "cut (forall n:nat, fact (S n) = (S n * fact n)%nat).",
            "VernacExtend",
            "9a0c3bd545bd6e3dcad017d59d7bf3dba9fe7216"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "cut ((n - i)%nat = S (n - S i)).",
            "VernacExtend",
            "85e6beb299548f4520caae0721b4411193c68755"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "pattern (n - i)%nat at 2; rewrite H1.",
            "VernacExtend",
            "e8a31e7da88b47c5751c58c046d632f25cca1bc6"
        ],
        [
            "repeat rewrite H0; unfold Rdiv; repeat rewrite mult_INR; repeat rewrite Rinv_mult_distr.",
            "VernacExtend",
            "f9f87c851a89b1347dd5fef5a438dd6d406a46c2"
        ],
        [
            "rewrite <- H1; rewrite (Rmult_comm (/ INR (n - i))); repeat rewrite Rmult_assoc; rewrite (Rmult_comm (INR (n - i))); repeat rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "1c6d54eee1563157e72cc46ca15745bcf656d451"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply not_O_INR; apply minus_neq_O; assumption.",
            "VernacExtend",
            "ecdde8de4360813c6e514d6de2dffaeeece93238"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply prod_neq_R0; [ apply not_O_INR; discriminate | apply INR_fact_neq_0 ].",
            "VernacExtend",
            "10e8ff097b1cf0335576b76db5560167216dc18f"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "apply prod_neq_R0; [ apply not_O_INR; discriminate | apply INR_fact_neq_0 ].",
            "VernacExtend",
            "10e8ff097b1cf0335576b76db5560167216dc18f"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "rewrite minus_Sn_m.",
            "VernacExtend",
            "0e21ccba499520e200b98b25d59dc96e608d701d"
        ],
        [
            "simpl; reflexivity.",
            "VernacExtend",
            "929257572def0332e6c079b4ed3a916720086e3a"
        ],
        [
            "apply lt_le_S; assumption.",
            "VernacExtend",
            "3b8f08f818b2786b96cf9f3daadbb5ad3e94f1cb"
        ],
        [
            "intro; reflexivity.",
            "VernacExtend",
            "dc2d3bdaf5fe0de88334762a176f5b2d84487862"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pascal : forall n i:nat, (i < n)%nat -> C n i + C n (S i) = C (S n) (S i).",
            "VernacStartTheoremProof",
            "24930a3ae693bc9c506ccd7b94e7b6e4546451a2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite pascal_step3; [ idtac | assumption ].",
            "VernacExtend",
            "7f9d46b709f3421ac53739aa2d0cdecdb3bf75fb"
        ],
        [
            "replace (C n i + INR (n - i) / INR (S i) * C n i) with (C n i * (1 + INR (n - i) / INR (S i))); [ idtac | ring ].",
            "VernacExtend",
            "f4cbc4c792c2773a4fef220c93576c6c7d0c6b73"
        ],
        [
            "replace (1 + INR (n - i) / INR (S i)) with (INR (S n) / INR (S i)).",
            "VernacExtend",
            "5dcbf14c9bd73cea627f56e0f86bac93ca111f3b"
        ],
        [
            "rewrite pascal_step1.",
            "VernacExtend",
            "a1d827f12571ef28ab9722820973b2d1659b0d50"
        ],
        [
            "rewrite Rmult_comm; replace (S i) with (S n - (n - i))%nat.",
            "VernacExtend",
            "2f96bb0dddd572d999fe334db5a2c3c311e0719e"
        ],
        [
            "rewrite <- pascal_step2.",
            "VernacExtend",
            "fb97b8cd73d1b7650517fdce481f8be08b1bce54"
        ],
        [
            "apply pascal_step1.",
            "VernacExtend",
            "fb345f42ed8a8b4c75f9f43b95f72874875327c7"
        ],
        [
            "apply le_trans with n.",
            "VernacExtend",
            "9597fcc7c1dd0db73cfc9758e0185a6c74ba3e8b"
        ],
        [
            "apply le_minusni_n.",
            "VernacExtend",
            "529ee2e74d6b72bc442c65059ba8d2772b91e2bd"
        ],
        [
            "apply lt_le_weak; assumption.",
            "VernacExtend",
            "b9e7ca873d19f1148c0167e889dfa2491de7f9e5"
        ],
        [
            "apply le_n_Sn.",
            "VernacExtend",
            "7889648199cacb866ef42ba6b4c4192f713b44f4"
        ],
        [
            "apply le_minusni_n.",
            "VernacExtend",
            "529ee2e74d6b72bc442c65059ba8d2772b91e2bd"
        ],
        [
            "apply lt_le_weak; assumption.",
            "VernacExtend",
            "b9e7ca873d19f1148c0167e889dfa2491de7f9e5"
        ],
        [
            "rewrite <- minus_Sn_m.",
            "VernacExtend",
            "808a21c00826f53fd5122068d41d20a5b1758aff"
        ],
        [
            "cut ((n - (n - i))%nat = i).",
            "VernacExtend",
            "a13c1d3cf2b38412150c4903cc2e25591a006b4c"
        ],
        [
            "intro; rewrite H0; reflexivity.",
            "VernacExtend",
            "bd042dd413b10f83955eedc43ff695c76b554ceb"
        ],
        [
            "symmetry ; apply plus_minus.",
            "VernacExtend",
            "223f2f313aef3e0b85533dd827f76ec7611330c4"
        ],
        [
            "rewrite plus_comm; rewrite le_plus_minus_r.",
            "VernacExtend",
            "e01ffdc04ce3572a7a86b6a2579ec5d39ddc23d2"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "apply lt_le_weak; assumption.",
            "VernacExtend",
            "b9e7ca873d19f1148c0167e889dfa2491de7f9e5"
        ],
        [
            "apply le_minusni_n; apply lt_le_weak; assumption.",
            "VernacExtend",
            "edc541340d2e02b18ae1cb7bc4fe755b4adfd49b"
        ],
        [
            "apply lt_le_weak; assumption.",
            "VernacExtend",
            "b9e7ca873d19f1148c0167e889dfa2491de7f9e5"
        ],
        [
            "unfold Rdiv.",
            "VernacExtend",
            "d9820df68a5475147f48d29acf89824b27f71597"
        ],
        [
            "repeat rewrite S_INR.",
            "VernacExtend",
            "035b085f3eaccf730f9253555ef2d5b3f6efa4ee"
        ],
        [
            "rewrite minus_INR.",
            "VernacExtend",
            "ddd12a81f335f5d6f0801c4603d2cacfd18f2ab8"
        ],
        [
            "cut (INR i + 1 <> 0).",
            "VernacExtend",
            "d020fd1087fade6af1a6da66b60a5d11f019c8c9"
        ],
        [
            "intro.",
            "VernacExtend",
            "3999be354c758ba0d1866e0fcc78a7288779a224"
        ],
        [
            "apply Rmult_eq_reg_l with (INR i + 1); [ idtac | assumption ].",
            "VernacExtend",
            "b7813129e7b1517211722abd7a64b36a99d3bd8e"
        ],
        [
            "rewrite Rmult_plus_distr_l.",
            "VernacExtend",
            "e243bcfd594d50273783e947b301871dc4efc70c"
        ],
        [
            "rewrite Rmult_1_r.",
            "VernacExtend",
            "d41d18f77f80ae8595148d0386b68549f3d406cf"
        ],
        [
            "do 2 rewrite (Rmult_comm (INR i + 1)).",
            "VernacExtend",
            "410e2547c92d82d25f61c67067e1464ff8ba107d"
        ],
        [
            "repeat rewrite Rmult_assoc.",
            "VernacExtend",
            "9a62b3359051e53192153e7bfe542316dbd712a8"
        ],
        [
            "rewrite <- Rinv_l_sym; [ idtac | assumption ].",
            "VernacExtend",
            "853359159b27fa6758cbcea6d0125547794b5454"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite <- S_INR.",
            "VernacExtend",
            "53f7c415e88fc85f922716a557382cfb3dfd8f58"
        ],
        [
            "apply not_O_INR; discriminate.",
            "VernacExtend",
            "b0377726251b564451c17d0f089ec6fd746a82be"
        ],
        [
            "apply lt_le_weak; assumption.",
            "VernacExtend",
            "b9e7ca873d19f1148c0167e889dfa2491de7f9e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma binomial : forall (x y:R) (n:nat), (x + y) ^ n = sum_f_R0 (fun i:nat => C n i * x ^ i * y ^ (n - i)) n.",
            "VernacStartTheoremProof",
            "293fc1c1c4160c09ce6ee819ac30fb18a52e5267"
        ],
        [
            "intros; induction n as [| n Hrecn].",
            "VernacExtend",
            "d8127da965164ab3db77421604b758d5eb34a150"
        ],
        [
            "unfold C; simpl; unfold Rdiv; repeat rewrite Rmult_1_r; rewrite Rinv_1; ring.",
            "VernacExtend",
            "c19ccd50ce7f9191c6793897e42f8d20b3e6d0ca"
        ],
        [
            "pattern (S n) at 1; replace (S n) with (n + 1)%nat; [ idtac | ring ].",
            "VernacExtend",
            "27174dbfe22f95ad5604c620066a32b790dbe89c"
        ],
        [
            "rewrite pow_add; rewrite Hrecn.",
            "VernacExtend",
            "3187fc069ffcfc146fe931b0614f6e074691d611"
        ],
        [
            "replace ((x + y) ^ 1) with (x + y); [ idtac | simpl; ring ].",
            "VernacExtend",
            "efa464327414e718a4cc606030bed3765cb390d0"
        ],
        [
            "rewrite tech5.",
            "VernacExtend",
            "9868999d015d8d25987acdadb308fadae9d59e4a"
        ],
        [
            "cut (forall p:nat, C p p = 1).",
            "VernacExtend",
            "39598430ed25aaac4d91cce51fcf6fb92e63a3b8"
        ],
        [
            "cut (forall p:nat, C p 0 = 1).",
            "VernacExtend",
            "6018ed4bbaf922f314ded661b6ed48a3b87b6035"
        ],
        [
            "intros; rewrite H0; rewrite <- minus_n_n; rewrite Rmult_1_l.",
            "VernacExtend",
            "95b1279737cff123e2bf63140a537a3934f032de"
        ],
        [
            "replace (y ^ 0) with 1; [ rewrite Rmult_1_r | simpl; reflexivity ].",
            "VernacExtend",
            "185a9fe934740eb795ce8a633d3ef22d7127d30a"
        ],
        [
            "induction n as [| n Hrecn0].",
            "VernacExtend",
            "0c83be6b8fd619d429544b59f068973cb3c78dc6"
        ],
        [
            "simpl; do 2 rewrite H; ring.",
            "VernacExtend",
            "0bc3142ceeeea59191d93d980978deb0f22b81f2"
        ],
        [
            "set (N := S n).",
            "VernacExtend",
            "2fdcef3bfe62a51bf513a8516646ab661016f93e"
        ],
        [
            "rewrite Rmult_plus_distr_l.",
            "VernacExtend",
            "e243bcfd594d50273783e947b301871dc4efc70c"
        ],
        [
            "replace (sum_f_R0 (fun i:nat => C N i * x ^ i * y ^ (N - i)) N * x) with (sum_f_R0 (fun i:nat => C N i * x ^ S i * y ^ (N - i)) N).",
            "VernacExtend",
            "0450f3428c0e9ff56aafc726df3416de4adccb61"
        ],
        [
            "replace (sum_f_R0 (fun i:nat => C N i * x ^ i * y ^ (N - i)) N * y) with (sum_f_R0 (fun i:nat => C N i * x ^ i * y ^ (S N - i)) N).",
            "VernacExtend",
            "a0b82898968f57b9744f916291dc7f07950cc570"
        ],
        [
            "rewrite (decomp_sum (fun i:nat => C (S N) i * x ^ i * y ^ (S N - i)) N).",
            "VernacExtend",
            "dfcf8f08d784a0b7f55f715e51d0e7c19a23da77"
        ],
        [
            "rewrite H; replace (x ^ 0) with 1; [ idtac | reflexivity ].",
            "VernacExtend",
            "0a44dca1e7db6aa27ca2caa74a522ede0dc4f311"
        ],
        [
            "do 2 rewrite Rmult_1_l.",
            "VernacExtend",
            "86a0e85a780e462050bee3812dbfd0d8298299fa"
        ],
        [
            "replace (S N - 0)%nat with (S N); [ idtac | reflexivity ].",
            "VernacExtend",
            "560b07f0ce23cd5feb860002d154db7edf7b4a80"
        ],
        [
            "set (An := fun i:nat => C N i * x ^ S i * y ^ (N - i)).",
            "VernacExtend",
            "fc4f4aecd3f2ebf5c54dbc592e352a11f85c3abe"
        ],
        [
            "set (Bn := fun i:nat => C N (S i) * x ^ S i * y ^ (N - i)).",
            "VernacExtend",
            "88ecd4888d5e636e23a3c72a7270ebd4ef5456d6"
        ],
        [
            "replace (pred N) with n.",
            "VernacExtend",
            "214c20a6f9c594b4eaef7f1946d5d16dd4f66a2e"
        ],
        [
            "replace (sum_f_R0 (fun i:nat => C (S N) (S i) * x ^ S i * y ^ (S N - S i)) n) with (sum_f_R0 (fun i:nat => An i + Bn i) n).",
            "VernacExtend",
            "f9345d842ba9bdcf89144c921aed76ed1509cce0"
        ],
        [
            "rewrite plus_sum.",
            "VernacExtend",
            "f7f99001134e9ae23e41a27593dea003211c7fc3"
        ],
        [
            "replace (x ^ S N) with (An (S n)).",
            "VernacExtend",
            "06fb9171224c5037308759e79fca83f1fc9de0fe"
        ],
        [
            "rewrite (Rplus_comm (sum_f_R0 An n)).",
            "VernacExtend",
            "8d99425f348d38e92fed6bd4b1a0f723fa339251"
        ],
        [
            "repeat rewrite Rplus_assoc.",
            "VernacExtend",
            "3e4d560f9364fe46fca6cfe96a5270dde8732236"
        ],
        [
            "rewrite <- tech5.",
            "VernacExtend",
            "8e79962e413563af15b31ecdd0c17dd4920c44aa"
        ],
        [
            "fold N.",
            "VernacExtend",
            "f023417fcce7f48eb5cc529ff2f8bc8c91f5e9bc"
        ],
        [
            "set (Cn := fun i:nat => C N i * x ^ i * y ^ (S N - i)).",
            "VernacExtend",
            "1b0dfa0498a15d6ca7f59fba0b8db8c41fef4462"
        ],
        [
            "cut (forall i:nat, (i < N)%nat -> Cn (S i) = Bn i).",
            "VernacExtend",
            "c9a8be8656ac22e945c754e2e6251a4768020d4f"
        ],
        [
            "intro; replace (sum_f_R0 Bn n) with (sum_f_R0 (fun i:nat => Cn (S i)) n).",
            "VernacExtend",
            "b6a39da86675aca6974129e6f101c7b3ec05470d"
        ],
        [
            "replace (y ^ S N) with (Cn 0%nat).",
            "VernacExtend",
            "ca1913eed218dd10e1d12976ea5834887c6383e1"
        ],
        [
            "rewrite <- Rplus_assoc; rewrite (decomp_sum Cn N).",
            "VernacExtend",
            "ed19927629336f58c61067eab6d52c2d423bd904"
        ],
        [
            "replace (pred N) with n.",
            "VernacExtend",
            "214c20a6f9c594b4eaef7f1946d5d16dd4f66a2e"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "unfold N; simpl; reflexivity.",
            "VernacExtend",
            "ea31e2e0ff43bc519b74feaf3cd72c32acb7657b"
        ],
        [
            "unfold N; apply lt_O_Sn.",
            "VernacExtend",
            "a6e9055cfaa129b1944ee3b01a308311210e1374"
        ],
        [
            "unfold Cn; rewrite H; simpl; ring.",
            "VernacExtend",
            "3077b006ddc2d9325b5e04d5ed1d7279dc2e1a3f"
        ],
        [
            "apply sum_eq.",
            "VernacExtend",
            "4ee0d794d2e6d3aad103d37855d290b328119f0e"
        ],
        [
            "intros; apply H1.",
            "VernacExtend",
            "312b6712f38e160adb0dc9f9059cdcab75ee81df"
        ],
        [
            "unfold N; apply le_lt_trans with n; [ assumption | apply lt_n_Sn ].",
            "VernacExtend",
            "7651fd18823c08af3b3648671a4d347d2dada83e"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "unfold An; fold N; rewrite <- minus_n_n; rewrite H0; simpl; ring.",
            "VernacExtend",
            "08047f2c2569c3eb306305b2c00bb58bb1ba6801"
        ],
        [
            "apply sum_eq.",
            "VernacExtend",
            "4ee0d794d2e6d3aad103d37855d290b328119f0e"
        ],
        [
            "intros; unfold An, Bn.",
            "VernacExtend",
            "44fdc3ff31792bb3fc28cefa099cbd2fb0ffb9db"
        ],
        [
            "change (S N - S i)%nat with (N - i)%nat.",
            "VernacExtend",
            "63fbf5a69181f49a487fa9e95872ff1f143c2c3c"
        ],
        [
            "rewrite <- pascal; [ ring | apply le_lt_trans with n; [ assumption | unfold N; apply lt_n_Sn ] ].",
            "VernacExtend",
            "88099b4ba07094dc2ca3eda57826d2eb79b5fb2d"
        ],
        [
            "unfold N; reflexivity.",
            "VernacExtend",
            "213dc5564f13a490d657c71a4043ca58ed6cd625"
        ],
        [
            "unfold N; apply lt_O_Sn.",
            "VernacExtend",
            "a6e9055cfaa129b1944ee3b01a308311210e1374"
        ],
        [
            "rewrite <- (Rmult_comm y); rewrite scal_sum; apply sum_eq.",
            "VernacExtend",
            "c7824bc601d978fafc351d6ac4e7053c7b6591a7"
        ],
        [
            "intros; replace (S N - i)%nat with (S (N - i)).",
            "VernacExtend",
            "d4d7ddbb67968fa2184b1f81e19395adefcb13a9"
        ],
        [
            "replace (S (N - i)) with (N - i + 1)%nat; [ idtac | ring ].",
            "VernacExtend",
            "f5c8cb0a5c7ba8d65bed66da40b1d904d8bf43b9"
        ],
        [
            "rewrite pow_add; replace (y ^ 1) with y; [ idtac | simpl; ring ]; ring.",
            "VernacExtend",
            "19863bafac3cd06cf651e94e545c46d9bb83a62a"
        ],
        [
            "apply minus_Sn_m; assumption.",
            "VernacExtend",
            "39813e312ba363aaf5a8d6e81147daf7b3e1422b"
        ],
        [
            "rewrite <- (Rmult_comm x); rewrite scal_sum; apply sum_eq.",
            "VernacExtend",
            "3bb20fc90e7fc39823d7ebcf0a235f526b887070"
        ],
        [
            "intros; replace (S i) with (i + 1)%nat; [ idtac | ring ]; rewrite pow_add; replace (x ^ 1) with x; [ idtac | simpl; ring ]; ring.",
            "VernacExtend",
            "826d83a85ce50784852a226c81dbd4085bcb6765"
        ],
        [
            "intro; unfold C.",
            "VernacExtend",
            "f4497d97a7848d3ed9f72b69c87e99164c5bf2c4"
        ],
        [
            "replace (INR (fact 0)) with 1; [ idtac | reflexivity ].",
            "VernacExtend",
            "34e885e296627eb5d2d6cfaf07e15bcac8a696d2"
        ],
        [
            "replace (p - 0)%nat with p; [ idtac | apply minus_n_O ].",
            "VernacExtend",
            "cf9c9b80ab03ff7cc7fda36c475b90a7654654e1"
        ],
        [
            "rewrite Rmult_1_l; unfold Rdiv; rewrite <- Rinv_r_sym; [ reflexivity | apply INR_fact_neq_0 ].",
            "VernacExtend",
            "30dce8aedbd3ae36a9392d4fcdca62239ac9df87"
        ],
        [
            "intro; unfold C.",
            "VernacExtend",
            "f4497d97a7848d3ed9f72b69c87e99164c5bf2c4"
        ],
        [
            "replace (p - p)%nat with 0%nat; [ idtac | apply minus_n_n ].",
            "VernacExtend",
            "07bece57a1671e1d02dcb0581182b609c68d5a3b"
        ],
        [
            "replace (INR (fact 0)) with 1; [ idtac | reflexivity ].",
            "VernacExtend",
            "34e885e296627eb5d2d6cfaf07e15bcac8a696d2"
        ],
        [
            "rewrite Rmult_1_r; unfold Rdiv; rewrite <- Rinv_r_sym; [ reflexivity | apply INR_fact_neq_0 ].",
            "VernacExtend",
            "a9a0aa950adca5d7171da5428a71661ad1e418af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "pascal_step1",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros; unfold C; replace (n - (n - i))%nat with i.",
                        "VernacExtend",
                        "84e88fb4d4aeb7597d49205cfa3d970b360c4033"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm.",
                        "VernacExtend",
                        "fd520335d31c715c2f686e2bdc0b380c493b04c0"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply plus_minus; rewrite plus_comm; apply le_plus_minus; assumption.",
                        "VernacExtend",
                        "c2633c1e865ee94375b6f4ec977ee3d396bd96a7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pascal_step2",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros; unfold C; replace (S n - i)%nat with (S (n - i)).",
                        "VernacExtend",
                        "8f1f38832073f86cc5a926dd64cea3748ff883e5"
                    ]
                },
                {
                    "command": [
                        "cut (forall n:nat, fact (S n) = (S n * fact n)%nat).",
                        "VernacExtend",
                        "9a0c3bd545bd6e3dcad017d59d7bf3dba9fe7216"
                    ]
                },
                {
                    "command": [
                        "intro; repeat rewrite H0.",
                        "VernacExtend",
                        "4d1b22e746139a0aafb705129c8d292d98f13892"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv; repeat rewrite mult_INR; repeat rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "a345cb637f1d399792c070f844b9204f63f0affb"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply prod_neq_R0.",
                        "VernacExtend",
                        "4e401b99cc3c24b61ca502aa7107071c427501ea"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "intro; reflexivity.",
                        "VernacExtend",
                        "dc2d3bdaf5fe0de88334762a176f5b2d84487862"
                    ]
                },
                {
                    "command": [
                        "apply minus_Sn_m; assumption.",
                        "VernacExtend",
                        "39813e312ba363aaf5a8d6e81147daf7b3e1422b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pascal_step3",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros; unfold C.",
                        "VernacExtend",
                        "601fa0e849718d91fe1e650230e2e2a34354262d"
                    ]
                },
                {
                    "command": [
                        "cut (forall n:nat, fact (S n) = (S n * fact n)%nat).",
                        "VernacExtend",
                        "9a0c3bd545bd6e3dcad017d59d7bf3dba9fe7216"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "cut ((n - i)%nat = S (n - S i)).",
                        "VernacExtend",
                        "85e6beb299548f4520caae0721b4411193c68755"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "pattern (n - i)%nat at 2; rewrite H1.",
                        "VernacExtend",
                        "e8a31e7da88b47c5751c58c046d632f25cca1bc6"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite H0; unfold Rdiv; repeat rewrite mult_INR; repeat rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "f9f87c851a89b1347dd5fef5a438dd6d406a46c2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1; rewrite (Rmult_comm (/ INR (n - i))); repeat rewrite Rmult_assoc; rewrite (Rmult_comm (INR (n - i))); repeat rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "1c6d54eee1563157e72cc46ca15745bcf656d451"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; apply minus_neq_O; assumption.",
                        "VernacExtend",
                        "ecdde8de4360813c6e514d6de2dffaeeece93238"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply prod_neq_R0; [ apply not_O_INR; discriminate | apply INR_fact_neq_0 ].",
                        "VernacExtend",
                        "10e8ff097b1cf0335576b76db5560167216dc18f"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "apply prod_neq_R0; [ apply not_O_INR; discriminate | apply INR_fact_neq_0 ].",
                        "VernacExtend",
                        "10e8ff097b1cf0335576b76db5560167216dc18f"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_Sn_m.",
                        "VernacExtend",
                        "0e21ccba499520e200b98b25d59dc96e608d701d"
                    ]
                },
                {
                    "command": [
                        "simpl; reflexivity.",
                        "VernacExtend",
                        "929257572def0332e6c079b4ed3a916720086e3a"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_S; assumption.",
                        "VernacExtend",
                        "3b8f08f818b2786b96cf9f3daadbb5ad3e94f1cb"
                    ]
                },
                {
                    "command": [
                        "intro; reflexivity.",
                        "VernacExtend",
                        "dc2d3bdaf5fe0de88334762a176f5b2d84487862"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pascal",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite pascal_step3; [ idtac | assumption ].",
                        "VernacExtend",
                        "7f9d46b709f3421ac53739aa2d0cdecdb3bf75fb"
                    ]
                },
                {
                    "command": [
                        "replace (C n i + INR (n - i) / INR (S i) * C n i) with (C n i * (1 + INR (n - i) / INR (S i))); [ idtac | ring ].",
                        "VernacExtend",
                        "f4cbc4c792c2773a4fef220c93576c6c7d0c6b73"
                    ]
                },
                {
                    "command": [
                        "replace (1 + INR (n - i) / INR (S i)) with (INR (S n) / INR (S i)).",
                        "VernacExtend",
                        "5dcbf14c9bd73cea627f56e0f86bac93ca111f3b"
                    ]
                },
                {
                    "command": [
                        "rewrite pascal_step1.",
                        "VernacExtend",
                        "a1d827f12571ef28ab9722820973b2d1659b0d50"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm; replace (S i) with (S n - (n - i))%nat.",
                        "VernacExtend",
                        "2f96bb0dddd572d999fe334db5a2c3c311e0719e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- pascal_step2.",
                        "VernacExtend",
                        "fb97b8cd73d1b7650517fdce481f8be08b1bce54"
                    ]
                },
                {
                    "command": [
                        "apply pascal_step1.",
                        "VernacExtend",
                        "fb345f42ed8a8b4c75f9f43b95f72874875327c7"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with n.",
                        "VernacExtend",
                        "9597fcc7c1dd0db73cfc9758e0185a6c74ba3e8b"
                    ]
                },
                {
                    "command": [
                        "apply le_minusni_n.",
                        "VernacExtend",
                        "529ee2e74d6b72bc442c65059ba8d2772b91e2bd"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_weak; assumption.",
                        "VernacExtend",
                        "b9e7ca873d19f1148c0167e889dfa2491de7f9e5"
                    ]
                },
                {
                    "command": [
                        "apply le_n_Sn.",
                        "VernacExtend",
                        "7889648199cacb866ef42ba6b4c4192f713b44f4"
                    ]
                },
                {
                    "command": [
                        "apply le_minusni_n.",
                        "VernacExtend",
                        "529ee2e74d6b72bc442c65059ba8d2772b91e2bd"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_weak; assumption.",
                        "VernacExtend",
                        "b9e7ca873d19f1148c0167e889dfa2491de7f9e5"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_Sn_m.",
                        "VernacExtend",
                        "808a21c00826f53fd5122068d41d20a5b1758aff"
                    ]
                },
                {
                    "command": [
                        "cut ((n - (n - i))%nat = i).",
                        "VernacExtend",
                        "a13c1d3cf2b38412150c4903cc2e25591a006b4c"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H0; reflexivity.",
                        "VernacExtend",
                        "bd042dd413b10f83955eedc43ff695c76b554ceb"
                    ]
                },
                {
                    "command": [
                        "symmetry ; apply plus_minus.",
                        "VernacExtend",
                        "223f2f313aef3e0b85533dd827f76ec7611330c4"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; rewrite le_plus_minus_r.",
                        "VernacExtend",
                        "e01ffdc04ce3572a7a86b6a2579ec5d39ddc23d2"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_weak; assumption.",
                        "VernacExtend",
                        "b9e7ca873d19f1148c0167e889dfa2491de7f9e5"
                    ]
                },
                {
                    "command": [
                        "apply le_minusni_n; apply lt_le_weak; assumption.",
                        "VernacExtend",
                        "edc541340d2e02b18ae1cb7bc4fe755b4adfd49b"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_weak; assumption.",
                        "VernacExtend",
                        "b9e7ca873d19f1148c0167e889dfa2491de7f9e5"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv.",
                        "VernacExtend",
                        "d9820df68a5475147f48d29acf89824b27f71597"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite S_INR.",
                        "VernacExtend",
                        "035b085f3eaccf730f9253555ef2d5b3f6efa4ee"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_INR.",
                        "VernacExtend",
                        "ddd12a81f335f5d6f0801c4603d2cacfd18f2ab8"
                    ]
                },
                {
                    "command": [
                        "cut (INR i + 1 <> 0).",
                        "VernacExtend",
                        "d020fd1087fade6af1a6da66b60a5d11f019c8c9"
                    ]
                },
                {
                    "command": [
                        "intro.",
                        "VernacExtend",
                        "3999be354c758ba0d1866e0fcc78a7288779a224"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_eq_reg_l with (INR i + 1); [ idtac | assumption ].",
                        "VernacExtend",
                        "b7813129e7b1517211722abd7a64b36a99d3bd8e"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_plus_distr_l.",
                        "VernacExtend",
                        "e243bcfd594d50273783e947b301871dc4efc70c"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r.",
                        "VernacExtend",
                        "d41d18f77f80ae8595148d0386b68549f3d406cf"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite (Rmult_comm (INR i + 1)).",
                        "VernacExtend",
                        "410e2547c92d82d25f61c67067e1464ff8ba107d"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rmult_assoc.",
                        "VernacExtend",
                        "9a62b3359051e53192153e7bfe542316dbd712a8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_l_sym; [ idtac | assumption ].",
                        "VernacExtend",
                        "853359159b27fa6758cbcea6d0125547794b5454"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- S_INR.",
                        "VernacExtend",
                        "53f7c415e88fc85f922716a557382cfb3dfd8f58"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; discriminate.",
                        "VernacExtend",
                        "b0377726251b564451c17d0f089ec6fd746a82be"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_weak; assumption.",
                        "VernacExtend",
                        "b9e7ca873d19f1148c0167e889dfa2491de7f9e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "binomial",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros; induction n as [| n Hrecn].",
                        "VernacExtend",
                        "d8127da965164ab3db77421604b758d5eb34a150"
                    ]
                },
                {
                    "command": [
                        "unfold C; simpl; unfold Rdiv; repeat rewrite Rmult_1_r; rewrite Rinv_1; ring.",
                        "VernacExtend",
                        "c19ccd50ce7f9191c6793897e42f8d20b3e6d0ca"
                    ]
                },
                {
                    "command": [
                        "pattern (S n) at 1; replace (S n) with (n + 1)%nat; [ idtac | ring ].",
                        "VernacExtend",
                        "27174dbfe22f95ad5604c620066a32b790dbe89c"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_add; rewrite Hrecn.",
                        "VernacExtend",
                        "3187fc069ffcfc146fe931b0614f6e074691d611"
                    ]
                },
                {
                    "command": [
                        "replace ((x + y) ^ 1) with (x + y); [ idtac | simpl; ring ].",
                        "VernacExtend",
                        "efa464327414e718a4cc606030bed3765cb390d0"
                    ]
                },
                {
                    "command": [
                        "rewrite tech5.",
                        "VernacExtend",
                        "9868999d015d8d25987acdadb308fadae9d59e4a"
                    ]
                },
                {
                    "command": [
                        "cut (forall p:nat, C p p = 1).",
                        "VernacExtend",
                        "39598430ed25aaac4d91cce51fcf6fb92e63a3b8"
                    ]
                },
                {
                    "command": [
                        "cut (forall p:nat, C p 0 = 1).",
                        "VernacExtend",
                        "6018ed4bbaf922f314ded661b6ed48a3b87b6035"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite H0; rewrite <- minus_n_n; rewrite Rmult_1_l.",
                        "VernacExtend",
                        "95b1279737cff123e2bf63140a537a3934f032de"
                    ]
                },
                {
                    "command": [
                        "replace (y ^ 0) with 1; [ rewrite Rmult_1_r | simpl; reflexivity ].",
                        "VernacExtend",
                        "185a9fe934740eb795ce8a633d3ef22d7127d30a"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn0].",
                        "VernacExtend",
                        "0c83be6b8fd619d429544b59f068973cb3c78dc6"
                    ]
                },
                {
                    "command": [
                        "simpl; do 2 rewrite H; ring.",
                        "VernacExtend",
                        "0bc3142ceeeea59191d93d980978deb0f22b81f2"
                    ]
                },
                {
                    "command": [
                        "set (N := S n).",
                        "VernacExtend",
                        "2fdcef3bfe62a51bf513a8516646ab661016f93e"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_plus_distr_l.",
                        "VernacExtend",
                        "e243bcfd594d50273783e947b301871dc4efc70c"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 (fun i:nat => C N i * x ^ i * y ^ (N - i)) N * x) with (sum_f_R0 (fun i:nat => C N i * x ^ S i * y ^ (N - i)) N).",
                        "VernacExtend",
                        "0450f3428c0e9ff56aafc726df3416de4adccb61"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 (fun i:nat => C N i * x ^ i * y ^ (N - i)) N * y) with (sum_f_R0 (fun i:nat => C N i * x ^ i * y ^ (S N - i)) N).",
                        "VernacExtend",
                        "a0b82898968f57b9744f916291dc7f07950cc570"
                    ]
                },
                {
                    "command": [
                        "rewrite (decomp_sum (fun i:nat => C (S N) i * x ^ i * y ^ (S N - i)) N).",
                        "VernacExtend",
                        "dfcf8f08d784a0b7f55f715e51d0e7c19a23da77"
                    ]
                },
                {
                    "command": [
                        "rewrite H; replace (x ^ 0) with 1; [ idtac | reflexivity ].",
                        "VernacExtend",
                        "0a44dca1e7db6aa27ca2caa74a522ede0dc4f311"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite Rmult_1_l.",
                        "VernacExtend",
                        "86a0e85a780e462050bee3812dbfd0d8298299fa"
                    ]
                },
                {
                    "command": [
                        "replace (S N - 0)%nat with (S N); [ idtac | reflexivity ].",
                        "VernacExtend",
                        "560b07f0ce23cd5feb860002d154db7edf7b4a80"
                    ]
                },
                {
                    "command": [
                        "set (An := fun i:nat => C N i * x ^ S i * y ^ (N - i)).",
                        "VernacExtend",
                        "fc4f4aecd3f2ebf5c54dbc592e352a11f85c3abe"
                    ]
                },
                {
                    "command": [
                        "set (Bn := fun i:nat => C N (S i) * x ^ S i * y ^ (N - i)).",
                        "VernacExtend",
                        "88ecd4888d5e636e23a3c72a7270ebd4ef5456d6"
                    ]
                },
                {
                    "command": [
                        "replace (pred N) with n.",
                        "VernacExtend",
                        "214c20a6f9c594b4eaef7f1946d5d16dd4f66a2e"
                    ]
                },
                {
                    "command": [
                        "replace (sum_f_R0 (fun i:nat => C (S N) (S i) * x ^ S i * y ^ (S N - S i)) n) with (sum_f_R0 (fun i:nat => An i + Bn i) n).",
                        "VernacExtend",
                        "f9345d842ba9bdcf89144c921aed76ed1509cce0"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_sum.",
                        "VernacExtend",
                        "f7f99001134e9ae23e41a27593dea003211c7fc3"
                    ]
                },
                {
                    "command": [
                        "replace (x ^ S N) with (An (S n)).",
                        "VernacExtend",
                        "06fb9171224c5037308759e79fca83f1fc9de0fe"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rplus_comm (sum_f_R0 An n)).",
                        "VernacExtend",
                        "8d99425f348d38e92fed6bd4b1a0f723fa339251"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite Rplus_assoc.",
                        "VernacExtend",
                        "3e4d560f9364fe46fca6cfe96a5270dde8732236"
                    ]
                },
                {
                    "command": [
                        "rewrite <- tech5.",
                        "VernacExtend",
                        "8e79962e413563af15b31ecdd0c17dd4920c44aa"
                    ]
                },
                {
                    "command": [
                        "fold N.",
                        "VernacExtend",
                        "f023417fcce7f48eb5cc529ff2f8bc8c91f5e9bc"
                    ]
                },
                {
                    "command": [
                        "set (Cn := fun i:nat => C N i * x ^ i * y ^ (S N - i)).",
                        "VernacExtend",
                        "1b0dfa0498a15d6ca7f59fba0b8db8c41fef4462"
                    ]
                },
                {
                    "command": [
                        "cut (forall i:nat, (i < N)%nat -> Cn (S i) = Bn i).",
                        "VernacExtend",
                        "c9a8be8656ac22e945c754e2e6251a4768020d4f"
                    ]
                },
                {
                    "command": [
                        "intro; replace (sum_f_R0 Bn n) with (sum_f_R0 (fun i:nat => Cn (S i)) n).",
                        "VernacExtend",
                        "b6a39da86675aca6974129e6f101c7b3ec05470d"
                    ]
                },
                {
                    "command": [
                        "replace (y ^ S N) with (Cn 0%nat).",
                        "VernacExtend",
                        "ca1913eed218dd10e1d12976ea5834887c6383e1"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rplus_assoc; rewrite (decomp_sum Cn N).",
                        "VernacExtend",
                        "ed19927629336f58c61067eab6d52c2d423bd904"
                    ]
                },
                {
                    "command": [
                        "replace (pred N) with n.",
                        "VernacExtend",
                        "214c20a6f9c594b4eaef7f1946d5d16dd4f66a2e"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "unfold N; simpl; reflexivity.",
                        "VernacExtend",
                        "ea31e2e0ff43bc519b74feaf3cd72c32acb7657b"
                    ]
                },
                {
                    "command": [
                        "unfold N; apply lt_O_Sn.",
                        "VernacExtend",
                        "a6e9055cfaa129b1944ee3b01a308311210e1374"
                    ]
                },
                {
                    "command": [
                        "unfold Cn; rewrite H; simpl; ring.",
                        "VernacExtend",
                        "3077b006ddc2d9325b5e04d5ed1d7279dc2e1a3f"
                    ]
                },
                {
                    "command": [
                        "apply sum_eq.",
                        "VernacExtend",
                        "4ee0d794d2e6d3aad103d37855d290b328119f0e"
                    ]
                },
                {
                    "command": [
                        "intros; apply H1.",
                        "VernacExtend",
                        "312b6712f38e160adb0dc9f9059cdcab75ee81df"
                    ]
                },
                {
                    "command": [
                        "unfold N; apply le_lt_trans with n; [ assumption | apply lt_n_Sn ].",
                        "VernacExtend",
                        "7651fd18823c08af3b3648671a4d347d2dada83e"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "unfold An; fold N; rewrite <- minus_n_n; rewrite H0; simpl; ring.",
                        "VernacExtend",
                        "08047f2c2569c3eb306305b2c00bb58bb1ba6801"
                    ]
                },
                {
                    "command": [
                        "apply sum_eq.",
                        "VernacExtend",
                        "4ee0d794d2e6d3aad103d37855d290b328119f0e"
                    ]
                },
                {
                    "command": [
                        "intros; unfold An, Bn.",
                        "VernacExtend",
                        "44fdc3ff31792bb3fc28cefa099cbd2fb0ffb9db"
                    ]
                },
                {
                    "command": [
                        "change (S N - S i)%nat with (N - i)%nat.",
                        "VernacExtend",
                        "63fbf5a69181f49a487fa9e95872ff1f143c2c3c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- pascal; [ ring | apply le_lt_trans with n; [ assumption | unfold N; apply lt_n_Sn ] ].",
                        "VernacExtend",
                        "88099b4ba07094dc2ca3eda57826d2eb79b5fb2d"
                    ]
                },
                {
                    "command": [
                        "unfold N; reflexivity.",
                        "VernacExtend",
                        "213dc5564f13a490d657c71a4043ca58ed6cd625"
                    ]
                },
                {
                    "command": [
                        "unfold N; apply lt_O_Sn.",
                        "VernacExtend",
                        "a6e9055cfaa129b1944ee3b01a308311210e1374"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_comm y); rewrite scal_sum; apply sum_eq.",
                        "VernacExtend",
                        "c7824bc601d978fafc351d6ac4e7053c7b6591a7"
                    ]
                },
                {
                    "command": [
                        "intros; replace (S N - i)%nat with (S (N - i)).",
                        "VernacExtend",
                        "d4d7ddbb67968fa2184b1f81e19395adefcb13a9"
                    ]
                },
                {
                    "command": [
                        "replace (S (N - i)) with (N - i + 1)%nat; [ idtac | ring ].",
                        "VernacExtend",
                        "f5c8cb0a5c7ba8d65bed66da40b1d904d8bf43b9"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_add; replace (y ^ 1) with y; [ idtac | simpl; ring ]; ring.",
                        "VernacExtend",
                        "19863bafac3cd06cf651e94e545c46d9bb83a62a"
                    ]
                },
                {
                    "command": [
                        "apply minus_Sn_m; assumption.",
                        "VernacExtend",
                        "39813e312ba363aaf5a8d6e81147daf7b3e1422b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rmult_comm x); rewrite scal_sum; apply sum_eq.",
                        "VernacExtend",
                        "3bb20fc90e7fc39823d7ebcf0a235f526b887070"
                    ]
                },
                {
                    "command": [
                        "intros; replace (S i) with (i + 1)%nat; [ idtac | ring ]; rewrite pow_add; replace (x ^ 1) with x; [ idtac | simpl; ring ]; ring.",
                        "VernacExtend",
                        "826d83a85ce50784852a226c81dbd4085bcb6765"
                    ]
                },
                {
                    "command": [
                        "intro; unfold C.",
                        "VernacExtend",
                        "f4497d97a7848d3ed9f72b69c87e99164c5bf2c4"
                    ]
                },
                {
                    "command": [
                        "replace (INR (fact 0)) with 1; [ idtac | reflexivity ].",
                        "VernacExtend",
                        "34e885e296627eb5d2d6cfaf07e15bcac8a696d2"
                    ]
                },
                {
                    "command": [
                        "replace (p - 0)%nat with p; [ idtac | apply minus_n_O ].",
                        "VernacExtend",
                        "cf9c9b80ab03ff7cc7fda36c475b90a7654654e1"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_l; unfold Rdiv; rewrite <- Rinv_r_sym; [ reflexivity | apply INR_fact_neq_0 ].",
                        "VernacExtend",
                        "30dce8aedbd3ae36a9392d4fcdca62239ac9df87"
                    ]
                },
                {
                    "command": [
                        "intro; unfold C.",
                        "VernacExtend",
                        "f4497d97a7848d3ed9f72b69c87e99164c5bf2c4"
                    ]
                },
                {
                    "command": [
                        "replace (p - p)%nat with 0%nat; [ idtac | apply minus_n_n ].",
                        "VernacExtend",
                        "07bece57a1671e1d02dcb0581182b609c68d5a3b"
                    ]
                },
                {
                    "command": [
                        "replace (INR (fact 0)) with 1; [ idtac | reflexivity ].",
                        "VernacExtend",
                        "34e885e296627eb5d2d6cfaf07e15bcac8a696d2"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; unfold Rdiv; rewrite <- Rinv_r_sym; [ reflexivity | apply INR_fact_neq_0 ].",
                        "VernacExtend",
                        "a9a0aa950adca5d7171da5428a71661ad1e418af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}