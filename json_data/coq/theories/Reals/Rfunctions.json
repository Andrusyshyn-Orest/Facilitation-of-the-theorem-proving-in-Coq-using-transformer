{
    "filename": "theories/Reals/Rfunctions.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Export ArithRing.",
            "VernacRequire",
            "52686e5ab1cc3983710bd9ec03aba753ca6a2f27"
        ],
        [
            "Require Import Rbase.",
            "VernacRequire",
            "c0a8d81b170d4ed8309a8632a3cac35f6cba016a"
        ],
        [
            "Require Export Rpow_def.",
            "VernacRequire",
            "4eb5f5e09f41086106fa1dcb51b1572a14f00288"
        ],
        [
            "Require Export R_Ifp.",
            "VernacRequire",
            "e29e02fe4e9a474b26dbabf57cf043a5af62dbfe"
        ],
        [
            "Require Export Rbasic_fun.",
            "VernacRequire",
            "a352eadde3fdaa7e5dec74257cab7be3e70c8314"
        ],
        [
            "Require Export R_sqr.",
            "VernacRequire",
            "8de897ed857176ef806402b075b2b208acd8219c"
        ],
        [
            "Require Export SplitAbsolu.",
            "VernacRequire",
            "32d5684c271d52d5ef9b42cbd217e40b5218b436"
        ],
        [
            "Require Export SplitRmult.",
            "VernacRequire",
            "f4ecea1c10889799035e3911baec4aa09f83d298"
        ],
        [
            "Require Export ArithProp.",
            "VernacRequire",
            "1241a7e1a0b8850040fcd14aed85c87a3b4317b9"
        ],
        [
            "Require Import Omega.",
            "VernacRequire",
            "72dd903de5f3320ef9d302d79812066579ed9cdb"
        ],
        [
            "Require Import Zpower.",
            "VernacRequire",
            "44b7927c3167c292b8362f581f351216eb66d0cd"
        ],
        [
            "Local Open Scope nat_scope.",
            "VernacOpenCloseScope",
            "7386604700c7eb05ef0ae2947828bc909568dab7"
        ],
        [
            "Local Open Scope R_scope.",
            "VernacOpenCloseScope",
            "b005c72bb3303e031b42be04be04c87c005faa38"
        ],
        [
            "Lemma INR_fact_neq_0 : forall n:nat, INR (fact n) <> 0.",
            "VernacStartTheoremProof",
            "a818321f58e4b4c6e2cec78ff8c421695b1b880b"
        ],
        [
            "intro; red; intro; apply (not_O_INR (fact n) (fact_neq_0 n)); assumption.",
            "VernacExtend",
            "4607fbb8f1f55b1b189154ac486b713779c7650a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fact_simpl : forall n:nat, fact (S n) = (S n * fact n)%nat.",
            "VernacStartTheoremProof",
            "b290250c0a3744aab9f4b864ef287dca67ae8019"
        ],
        [
            "intro; reflexivity.",
            "VernacExtend",
            "dc2d3bdaf5fe0de88334762a176f5b2d84487862"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma simpl_fact : forall n:nat, / INR (fact (S n)) * / / INR (fact n) = / INR (S n).",
            "VernacStartTheoremProof",
            "ce0f965ad92ca33976b1863e0718301815856a6b"
        ],
        [
            "intro; rewrite (Rinv_involutive (INR (fact n)) (INR_fact_neq_0 n)); unfold fact at 1; cbv beta iota; fold fact; rewrite (mult_INR (S n) (fact n)); rewrite (Rinv_mult_distr (INR (S n)) (INR (fact n))).",
            "VernacExtend",
            "d67b1b68f7092cb1acdac00b05297784a1ec4d35"
        ],
        [
            "rewrite (Rmult_assoc (/ INR (S n)) (/ INR (fact n)) (INR (fact n))); rewrite (Rinv_l (INR (fact n)) (INR_fact_neq_0 n)); apply (let (H1, H2) := Rmult_ne (/ INR (S n)) in H1).",
            "VernacExtend",
            "c6bb74df43dbc4b174431302ec96ff7f3122d000"
        ],
        [
            "apply not_O_INR; auto.",
            "VernacExtend",
            "9cca52ce5b967489e89bc46be03ccaef528dd4ae"
        ],
        [
            "apply INR_fact_neq_0.",
            "VernacExtend",
            "9f4443217b6f3c8f07648392448a37630452a203"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Infix \"^\" := pow : R_scope.",
            "VernacInfix",
            "8a0553cb2b61fc0d8d9bf2856297ba59cd99794f"
        ],
        [
            "Lemma pow_O : forall x:R, x ^ 0 = 1.",
            "VernacStartTheoremProof",
            "f86d383e6b009a53a143fc37057d5f7176792e47"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_1 : forall x:R, x ^ 1 = x.",
            "VernacStartTheoremProof",
            "2352e8e0e7b1f2fbf5bf8f67024d63b119767712"
        ],
        [
            "simpl; auto with real.",
            "VernacExtend",
            "b062786ac0dbbfc282b750a40b6651658747aae5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_add : forall (x:R) (n m:nat), x ^ (n + m) = x ^ n * x ^ m.",
            "VernacStartTheoremProof",
            "2145ec7184f27a85eb74b865b9d7aca509026820"
        ],
        [
            "intros x n; elim n; simpl; auto with real.",
            "VernacExtend",
            "e2be2cdd1d69bfbbaa6d7d2b7351000aab99667e"
        ],
        [
            "intros n0 H' m; rewrite H'; auto with real.",
            "VernacExtend",
            "3571f690be95eb9f89a348d5ce373d5147322117"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rpow_mult_distr : forall (x y:R) (n:nat), (x * y) ^ n = x^n * y^n.",
            "VernacStartTheoremProof",
            "495582b3e61a86603fc619933842dbd6c642ac9a"
        ],
        [
            "intros x y n ; induction n.",
            "VernacExtend",
            "dc5ab9b12f15e83fc2632efc937cc029e1a3d4a0"
        ],
        [
            "field.",
            "VernacExtend",
            "93f44750d651d466b74a0cc63f88acb56273d533"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "repeat (rewrite Rmult_assoc) ; apply Rmult_eq_compat_l.",
            "VernacExtend",
            "af2e69f7eb109fa6852e29bfad3154f6a0a6b92b"
        ],
        [
            "rewrite IHn ; field.",
            "VernacExtend",
            "1e9817728c65667003b0157c17a988c4ac4756e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_nonzero : forall (x:R) (n:nat), x <> 0 -> x ^ n <> 0.",
            "VernacStartTheoremProof",
            "63466fb1a681ee8e4c5cdc157bc21aade2a95bb4"
        ],
        [
            "intro; simple induction n; simpl.",
            "VernacExtend",
            "4839ab8000019b9caf0b170b3e37f8c89529ee36"
        ],
        [
            "intro; red; intro; apply R1_neq_R0; assumption.",
            "VernacExtend",
            "74bb143d578bfa977666f9209287bff71e25a616"
        ],
        [
            "intros; red; intro; elim (Rmult_integral x (x ^ n0) H1).",
            "VernacExtend",
            "1b74485e38f8f5c1e6c8181dd1665025edd4407d"
        ],
        [
            "intro; auto.",
            "VernacExtend",
            "c01170981862e9d8608d651ab75e833f7953118c"
        ],
        [
            "apply H; assumption.",
            "VernacExtend",
            "7904d623a02884c927ef4e8b66c90cb12eee7c7a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve pow_O pow_1 pow_add pow_nonzero: real.",
            "VernacHints",
            "b2fcc42c8c7007c912b31c86e4818b28af2e372b"
        ],
        [
            "Lemma pow_RN_plus : forall (x:R) (n m:nat), x <> 0 -> x ^ n = x ^ (n + m) * / x ^ m.",
            "VernacStartTheoremProof",
            "154db07c9495daf2f2d9e5357ed6fe19ecd821ff"
        ],
        [
            "intros x n; elim n; simpl; auto with real.",
            "VernacExtend",
            "e2be2cdd1d69bfbbaa6d7d2b7351000aab99667e"
        ],
        [
            "intros n0 H' m H'0.",
            "VernacExtend",
            "a1ec5a9520de179045fa3e942122a1bfd1958baa"
        ],
        [
            "rewrite Rmult_assoc; rewrite <- H'; auto.",
            "VernacExtend",
            "99ad966d410417c8e95dc57882ec6c049c5845b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_lt : forall (x:R) (n:nat), 0 < x -> 0 < x ^ n.",
            "VernacStartTheoremProof",
            "0899903824ac656ca535b50058102fb97f3b46fd"
        ],
        [
            "intros x n; elim n; simpl; auto with real.",
            "VernacExtend",
            "e2be2cdd1d69bfbbaa6d7d2b7351000aab99667e"
        ],
        [
            "intros n0 H' H'0; replace 0 with (x * 0); auto with real.",
            "VernacExtend",
            "4ca0226ee2e8ff4af41f24bdfe77279dc44f4afa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve pow_lt: real.",
            "VernacHints",
            "cd2898894d79ce745631f8740c6b3fba1125c601"
        ],
        [
            "Lemma Rlt_pow_R1 : forall (x:R) (n:nat), 1 < x -> (0 < n)%nat -> 1 < x ^ n.",
            "VernacStartTheoremProof",
            "67a21e305029c20ccdccd31a2ac207ea8431f3a4"
        ],
        [
            "intros x n; elim n; simpl; auto with real.",
            "VernacExtend",
            "e2be2cdd1d69bfbbaa6d7d2b7351000aab99667e"
        ],
        [
            "intros H' H'0; exfalso; omega.",
            "VernacExtend",
            "81222e043465a95299f6941a5f97921b0159cb00"
        ],
        [
            "intros n0; case n0.",
            "VernacExtend",
            "e8893eb764401ebc2c9b15af9a1f93373b730591"
        ],
        [
            "simpl; rewrite Rmult_1_r; auto.",
            "VernacExtend",
            "dac6fa12e811d67abc0e547f60dda254a5e57117"
        ],
        [
            "intros n1 H' H'0 H'1.",
            "VernacExtend",
            "930da9888da25e2ec02facd4f52d1f4407ef193f"
        ],
        [
            "replace 1 with (1 * 1); auto with real.",
            "VernacExtend",
            "fbede96c282509624cc6cea9ac2cf3a578ac3649"
        ],
        [
            "apply Rlt_trans with (r2 := x * 1); auto with real.",
            "VernacExtend",
            "a566f5362e62328ac5c1051df0af8355f0fe37e7"
        ],
        [
            "apply Rmult_lt_compat_l; auto with real.",
            "VernacExtend",
            "3e7233511306c2ec2fb512cc9cfd2a7990f1f973"
        ],
        [
            "apply Rlt_trans with (r2 := 1); auto with real.",
            "VernacExtend",
            "8aba8bb7d5ef0ec0a1514e8a9af8c0826360b78f"
        ],
        [
            "apply H'; auto with arith.",
            "VernacExtend",
            "8886ff1ccd5df04b07ca5dfdc9d432ed415e3791"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rlt_pow_R1: real.",
            "VernacHints",
            "73e12f1cfe7d5dd7bd98b040d28699dee045a392"
        ],
        [
            "Lemma Rlt_pow : forall (x:R) (n m:nat), 1 < x -> (n < m)%nat -> x ^ n < x ^ m.",
            "VernacStartTheoremProof",
            "64d0ea1fc176dfc33d0dd93d34d49672cfde2309"
        ],
        [
            "intros x n m H' H'0; replace m with (m - n + n)%nat.",
            "VernacExtend",
            "60189c2b11dd34740f2f7b931e0e6b6d6f3527fc"
        ],
        [
            "rewrite pow_add.",
            "VernacExtend",
            "e7ffb4294c31ded66f1a5f321399a9a5b2326cb2"
        ],
        [
            "pattern (x ^ n) at 1; replace (x ^ n) with (1 * x ^ n); auto with real.",
            "VernacExtend",
            "5e8a0e65576c97587a7f1eda8625fa3ab9503795"
        ],
        [
            "apply Rminus_lt.",
            "VernacExtend",
            "03430b7f4251862c601af026c550b2f9a73b9396"
        ],
        [
            "repeat rewrite (fun y:R => Rmult_comm y (x ^ n)); rewrite <- Rmult_minus_distr_l.",
            "VernacExtend",
            "eaaaa119b4e864973d2f31c5031a90571852ed56"
        ],
        [
            "replace 0 with (x ^ n * 0); auto with real.",
            "VernacExtend",
            "faceecc8a2cb7371d7d0b377cdd097cf1963eb5a"
        ],
        [
            "apply Rmult_lt_compat_l; auto with real.",
            "VernacExtend",
            "3e7233511306c2ec2fb512cc9cfd2a7990f1f973"
        ],
        [
            "apply pow_lt; auto with real.",
            "VernacExtend",
            "9ad216b225a170ae221f386c3defeaf4b098c2bc"
        ],
        [
            "apply Rlt_trans with (r2 := 1); auto with real.",
            "VernacExtend",
            "8aba8bb7d5ef0ec0a1514e8a9af8c0826360b78f"
        ],
        [
            "apply Rlt_minus; auto with real.",
            "VernacExtend",
            "692a2803f9567399a9370deba90017f2a755aa96"
        ],
        [
            "apply Rlt_pow_R1; auto with arith.",
            "VernacExtend",
            "6550016ce3994b625156602b405fc0175ee918aa"
        ],
        [
            "apply plus_lt_reg_l with (p := n); auto with arith.",
            "VernacExtend",
            "cb76b3ea4c5876ecbfb8aa998c95e0a9cebe5589"
        ],
        [
            "rewrite le_plus_minus_r; auto with arith; rewrite <- plus_n_O; auto.",
            "VernacExtend",
            "0dfd42f40cd802a43e215b0a458049fef3b4ff47"
        ],
        [
            "rewrite plus_comm; auto with arith.",
            "VernacExtend",
            "5a06a000b92ce0a0d3e37617a7f5cb05c9d509e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve Rlt_pow: real.",
            "VernacHints",
            "20dec817911b02da431ee693d02d437c9ba22087"
        ],
        [
            "Lemma tech_pow_Rmult : forall (x:R) (n:nat), x * x ^ n = x ^ S n.",
            "VernacStartTheoremProof",
            "0dc4c51c5bfd3575cb59d1b6073d40780c059ce9"
        ],
        [
            "simple induction n; simpl; trivial.",
            "VernacExtend",
            "84f0ce1cf11f8981f77711f906303f188ac380af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma tech_pow_Rplus : forall (x:R) (a n:nat), x ^ a + INR n * x ^ a = INR (S n) * x ^ a.",
            "VernacStartTheoremProof",
            "b5d86c5314bd79c54aca4a25eb7276286f7c8339"
        ],
        [
            "intros; pattern (x ^ a) at 1; rewrite <- (let (H1, H2) := Rmult_ne (x ^ a) in H1); rewrite (Rmult_comm (INR n) (x ^ a)); rewrite <- (Rmult_plus_distr_l (x ^ a) 1 (INR n)); rewrite (Rplus_comm 1 (INR n)); rewrite <- (S_INR n); apply Rmult_comm.",
            "VernacExtend",
            "9ee656f0abb863a3f75631a046f0638f42fff11e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma poly : forall (n:nat) (x:R), 0 < x -> 1 + INR n * x <= (1 + x) ^ n.",
            "VernacStartTheoremProof",
            "a5d2313d10169393a2d8043a795d8813afbadce0"
        ],
        [
            "intros; elim n.",
            "VernacExtend",
            "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
        ],
        [
            "simpl; cut (1 + 0 * x = 1).",
            "VernacExtend",
            "aef687c3664eeed0d2f896577438a3d56b36bae0"
        ],
        [
            "intro; rewrite H0; unfold Rle; right; reflexivity.",
            "VernacExtend",
            "14e985382f4457d27ce74de08367aa729fe505f4"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "intros; unfold pow; fold pow; apply (Rle_trans (1 + INR (S n0) * x) ((1 + x) * (1 + INR n0 * x)) ((1 + x) * (1 + x) ^ n0)).",
            "VernacExtend",
            "f9a0392f016d3567e57a41024aca309a81a4bad2"
        ],
        [
            "cut ((1 + x) * (1 + INR n0 * x) = 1 + INR (S n0) * x + INR n0 * (x * x)).",
            "VernacExtend",
            "c0d7f87634d46ab001c4a6e67ed5c71a70e537a0"
        ],
        [
            "intro; rewrite H1; pattern (1 + INR (S n0) * x) at 1; rewrite <- (let (H1, H2) := Rplus_ne (1 + INR (S n0) * x) in H1); apply Rplus_le_compat_l; elim n0; intros.",
            "VernacExtend",
            "d53c4383523c08a471df217bad46f65856663392"
        ],
        [
            "simpl; rewrite Rmult_0_l; unfold Rle; right; auto.",
            "VernacExtend",
            "49170d84cfaad4605b897e6af99f07a0067a081a"
        ],
        [
            "unfold Rle; left; generalize Rmult_gt_0_compat; unfold Rgt; intro; fold (Rsqr x); apply (H3 (INR (S n1)) (Rsqr x) (lt_INR_0 (S n1) (lt_O_Sn n1))); fold (x > 0) in H; apply (Rlt_0_sqr x (Rlt_dichotomy_converse x 0 (or_intror (x < 0) H))).",
            "VernacExtend",
            "59bfd31dd8ef2773465bd2acea50fcf9e6e75032"
        ],
        [
            "rewrite (S_INR n0); ring.",
            "VernacExtend",
            "361a0da03b3e4086168a1cdf2046988294d8fbc8"
        ],
        [
            "unfold Rle in H0; elim H0; intro.",
            "VernacExtend",
            "52079c29d7bafbb8a0e24aa4741837208e7d1686"
        ],
        [
            "unfold Rle; left; apply Rmult_lt_compat_l.",
            "VernacExtend",
            "685a26e2ff6fd9e846ec5bf5fe34d3f97c64b48b"
        ],
        [
            "rewrite Rplus_comm; apply (Rle_lt_0_plus_1 x (Rlt_le 0 x H)).",
            "VernacExtend",
            "ebd19c277259288bcd0eef12edd6df031bd8d167"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite H1; unfold Rle; right; trivial.",
            "VernacExtend",
            "8091c311a02d3a5033ea7eaec85b3a7caaccb2d1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Power_monotonic : forall (x:R) (m n:nat), Rabs x > 1 -> (m <= n)%nat -> Rabs (x ^ m) <= Rabs (x ^ n).",
            "VernacStartTheoremProof",
            "2f44e5439e301fc9d6b76726a5f07e1b850ad4c8"
        ],
        [
            "intros x m n H; induction n as [| n Hrecn]; intros; inversion H0.",
            "VernacExtend",
            "5cbd665d5a95d43a44b5c5810417185cf5f11a0e"
        ],
        [
            "unfold Rle; right; reflexivity.",
            "VernacExtend",
            "37eaf209423ac00245c2153d226a7b1dc91b2dc6"
        ],
        [
            "unfold Rle; right; reflexivity.",
            "VernacExtend",
            "37eaf209423ac00245c2153d226a7b1dc91b2dc6"
        ],
        [
            "apply (Rle_trans (Rabs (x ^ m)) (Rabs (x ^ n)) (Rabs (x ^ S n))).",
            "VernacExtend",
            "49554c07057fd6a8ea993bebc74dc97412e1f71d"
        ],
        [
            "apply Hrecn; assumption.",
            "VernacExtend",
            "09c4bfc615059e1cf9b030ea0c6389838481a775"
        ],
        [
            "simpl; rewrite Rabs_mult.",
            "VernacExtend",
            "294f285cc33720c7ab20f37e7e71fc734c323af9"
        ],
        [
            "pattern (Rabs (x ^ n)) at 1.",
            "VernacExtend",
            "96dcc9c9fd7ed368456087e9be7ec53779040f07"
        ],
        [
            "rewrite <- Rmult_1_r.",
            "VernacExtend",
            "ce14806f50e4260d6add69e3f8476a76794bf681"
        ],
        [
            "rewrite (Rmult_comm (Rabs x) (Rabs (x ^ n))).",
            "VernacExtend",
            "4314dfbce31cf655b0eac98dd52d64a4eff124d9"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "unfold Rgt in H.",
            "VernacExtend",
            "1b3a45ace905efb2dcd7cbf00aa6c3a58e173301"
        ],
        [
            "apply Rlt_le; assumption.",
            "VernacExtend",
            "6ea46b5e4ad6d15cd718025b7aa100abf346a511"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma RPow_abs : forall (x:R) (n:nat), Rabs x ^ n = Rabs (x ^ n).",
            "VernacStartTheoremProof",
            "9466d93bdd0c4286e6af62bacbc14d291900d38d"
        ],
        [
            "intro; simple induction n; simpl.",
            "VernacExtend",
            "4839ab8000019b9caf0b170b3e37f8c89529ee36"
        ],
        [
            "symmetry; apply Rabs_pos_eq; apply Rlt_le; apply Rlt_0_1.",
            "VernacExtend",
            "581074c099d26c6d820d56f2b52578ca26284076"
        ],
        [
            "intros; rewrite H; symmetry; apply Rabs_mult.",
            "VernacExtend",
            "4b73b5b2e500ae779816a07f8ad3c6b3e3f31b2d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Pow_x_infinity : forall x:R, Rabs x > 1 -> forall b:R, exists N : nat, (forall n:nat, (n >= N)%nat -> Rabs (x ^ n) >= b).",
            "VernacStartTheoremProof",
            "b894621f0ad7ce3b87e6b0b3442e3c7ef5f69cfd"
        ],
        [
            "intros; elim (archimed (b * / (Rabs x - 1))); intros; clear H1; cut (exists N : nat, INR N >= b * / (Rabs x - 1)).",
            "VernacExtend",
            "aa5c0d9e02320c0e7038c236cb8dc0d3b53c32d9"
        ],
        [
            "intro; elim H1; clear H1; intros; exists x0; intros; apply (Rge_trans (Rabs (x ^ n)) (Rabs (x ^ x0)) b).",
            "VernacExtend",
            "3a29a60202889d2cc62cf9c2976ea33db178092b"
        ],
        [
            "apply Rle_ge; apply Power_monotonic; assumption.",
            "VernacExtend",
            "5d781476a6e6adcbe361697f64d31d818c7b6628"
        ],
        [
            "rewrite <- RPow_abs; cut (Rabs x = 1 + (Rabs x - 1)).",
            "VernacExtend",
            "391715f68c28c1063c317ccec7f5db91d39b3320"
        ],
        [
            "intro; rewrite H3; apply (Rge_trans ((1 + (Rabs x - 1)) ^ x0) (1 + INR x0 * (Rabs x - 1)) b).",
            "VernacExtend",
            "563ca021107ae72ede284e041febb7a77253b929"
        ],
        [
            "apply Rle_ge; apply poly; fold (Rabs x - 1 > 0); apply Rgt_minus; assumption.",
            "VernacExtend",
            "84cd18f409004e2fd9541727a999563de5820ace"
        ],
        [
            "apply (Rge_trans (1 + INR x0 * (Rabs x - 1)) (INR x0 * (Rabs x - 1)) b).",
            "VernacExtend",
            "7895418110fba5c806c18cdbe944a26a5d6bef3f"
        ],
        [
            "apply Rle_ge; apply Rlt_le; rewrite (Rplus_comm 1 (INR x0 * (Rabs x - 1))); pattern (INR x0 * (Rabs x - 1)) at 1; rewrite <- (let (H1, H2) := Rplus_ne (INR x0 * (Rabs x - 1)) in H1); apply Rplus_lt_compat_l; apply Rlt_0_1.",
            "VernacExtend",
            "8a20cf594b401494a17fbb9d365976879f6f3a0c"
        ],
        [
            "cut (b = b * / (Rabs x - 1) * (Rabs x - 1)).",
            "VernacExtend",
            "11602c1bd0d386f0a60bace587d58b8146bda04e"
        ],
        [
            "intros; rewrite H4; apply Rmult_ge_compat_r.",
            "VernacExtend",
            "4606c8e7ac8892e0512d051eee660a315fe47a25"
        ],
        [
            "apply Rge_minus; unfold Rge; left; assumption.",
            "VernacExtend",
            "29883b2456883aa4725da9a1e603400354882a83"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite Rmult_assoc; rewrite Rinv_l.",
            "VernacExtend",
            "d3fec85e0db9536e6e55fda3d3761a6d77a82478"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply Rlt_dichotomy_converse; right; apply Rgt_minus; assumption.",
            "VernacExtend",
            "7079eef5a56030228c20c11e53edfbae71218a8a"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "cut ((0 <= up (b * / (Rabs x - 1)))%Z \\/ (up (b * / (Rabs x - 1)) <= 0)%Z).",
            "VernacExtend",
            "494771e1f1e5c9698b113506c1732112e28f370c"
        ],
        [
            "intros; elim H1; intro.",
            "VernacExtend",
            "d629a06db4729933c3140278d7efdae495e2b618"
        ],
        [
            "elim (IZN (up (b * / (Rabs x - 1))) H2); intros; exists x0; apply (Rge_trans (INR x0) (IZR (up (b * / (Rabs x - 1)))) (b * / (Rabs x - 1))).",
            "VernacExtend",
            "4f87fd2effe57d8935dda03cb10b1951c2a943f4"
        ],
        [
            "rewrite INR_IZR_INZ; apply IZR_ge; omega.",
            "VernacExtend",
            "c3f31d18e38afdec946f0b168b002ff78b5e104d"
        ],
        [
            "unfold Rge; left; assumption.",
            "VernacExtend",
            "c9ab81f92673bf5b1f15596ae0383943ce0c9078"
        ],
        [
            "exists 0%nat; apply (Rge_trans (INR 0) (IZR (up (b * / (Rabs x - 1)))) (b * / (Rabs x - 1))).",
            "VernacExtend",
            "495a5cd618861eb2086364b450494de9fe8f33e6"
        ],
        [
            "rewrite INR_IZR_INZ; apply IZR_ge; simpl; omega.",
            "VernacExtend",
            "5ffdc84072b4ab96517adae1a01b6e96d3fa509b"
        ],
        [
            "unfold Rge; left; assumption.",
            "VernacExtend",
            "c9ab81f92673bf5b1f15596ae0383943ce0c9078"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_ne_zero : forall n:nat, n <> 0%nat -> 0 ^ n = 0.",
            "VernacStartTheoremProof",
            "298f8f443810464c2b5848027b496839046b0dd6"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "intros; elim H; reflexivity.",
            "VernacExtend",
            "6a8d2fe3ec3cca28e02e295c139069d12e09310b"
        ],
        [
            "intros; simpl; apply Rmult_0_l.",
            "VernacExtend",
            "c7e233b0e78e1d98c71f62c5484ed1d6d4b59807"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rinv_pow : forall (x:R) (n:nat), x <> 0 -> / x ^ n = (/ x) ^ n.",
            "VernacStartTheoremProof",
            "e870e6455da55d420fed2ae9fca1f296626cb5f9"
        ],
        [
            "intros; elim n; simpl.",
            "VernacExtend",
            "1aabd1f7435c3bbdd6b58f8e8f76b216ca0773e7"
        ],
        [
            "apply Rinv_1.",
            "VernacExtend",
            "262342cc3b146bf2b8cac3ce28f22df5ae06648f"
        ],
        [
            "intro m; intro; rewrite Rinv_mult_distr.",
            "VernacExtend",
            "dfbb52ac07d7660a1a9c8f569aa32f23fd6a51c0"
        ],
        [
            "rewrite H0; reflexivity; assumption.",
            "VernacExtend",
            "77eaa1b20a5775c8d89517e0707e742af33d5698"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply pow_nonzero; assumption.",
            "VernacExtend",
            "6d4db41cbe558f394b4e9accb20ef61b0da0c671"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_lt_1_zero : forall x:R, Rabs x < 1 -> forall y:R, 0 < y -> exists N : nat, (forall n:nat, (n >= N)%nat -> Rabs (x ^ n) < y).",
            "VernacStartTheoremProof",
            "5181645e57e08fe41d8fc3ddfec3255c85aec955"
        ],
        [
            "intros; elim (Req_dec x 0); intro.",
            "VernacExtend",
            "86f6e47d44c0a747d383d1bcf91c6c4976320b37"
        ],
        [
            "exists 1%nat; rewrite H1; intros n GE; rewrite pow_ne_zero.",
            "VernacExtend",
            "718337a9ec2c17e701a0ccc310362038601e556f"
        ],
        [
            "rewrite Rabs_R0; assumption.",
            "VernacExtend",
            "ecbc11b0192c04678920063e101e6b2de12b658f"
        ],
        [
            "inversion GE; auto.",
            "VernacExtend",
            "26ab38796b591ab70a6c11f74c7a5f3dbc0b11b4"
        ],
        [
            "cut (Rabs (/ x) > 1).",
            "VernacExtend",
            "a5e34ba9f75de486dbee2c50189bbc6689fc3f67"
        ],
        [
            "intros; elim (Pow_x_infinity (/ x) H2 (/ y + 1)); intros N.",
            "VernacExtend",
            "2b39c96d955db361ceab607ed23487e11cafc7de"
        ],
        [
            "exists N; intros; rewrite <- (Rinv_involutive y).",
            "VernacExtend",
            "5cb988269a30775428905aa002e35f7263d5c3ab"
        ],
        [
            "rewrite <- (Rinv_involutive (Rabs (x ^ n))).",
            "VernacExtend",
            "3ba0f4b229397b84bca089e99c48b0168ab97893"
        ],
        [
            "apply Rinv_lt_contravar.",
            "VernacExtend",
            "39f1015e834f9c2b39a61c50e6b9c8cf8a29f32a"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rinv_0_lt_compat.",
            "VernacExtend",
            "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
        ],
        [
            "apply Rabs_pos_lt.",
            "VernacExtend",
            "e7789cb0a3c08fb3fbbda456620a8022b26229ce"
        ],
        [
            "apply pow_nonzero.",
            "VernacExtend",
            "282744fa14f20635385d7e1ac0d1a961c143f970"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- Rabs_Rinv.",
            "VernacExtend",
            "90bccb4c2edbe375bae6d85508d1d91269ac60a9"
        ],
        [
            "rewrite Rinv_pow.",
            "VernacExtend",
            "1cd6ddb072cabcdc713a5ff64063727fd797ecd8"
        ],
        [
            "apply (Rlt_le_trans (/ y) (/ y + 1) (Rabs ((/ x) ^ n))).",
            "VernacExtend",
            "b5231fe58ab1fdac8a8c34be93829c99d37678e6"
        ],
        [
            "pattern (/ y) at 1.",
            "VernacExtend",
            "7876c2c81a21649af3eb594cf785a058ad17f2ae"
        ],
        [
            "rewrite <- (let (H1, H2) := Rplus_ne (/ y) in H1).",
            "VernacExtend",
            "9980fed2884841125db9c871044831446a763321"
        ],
        [
            "apply Rplus_lt_compat_l.",
            "VernacExtend",
            "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
        ],
        [
            "apply Rlt_0_1.",
            "VernacExtend",
            "c3f675388bf844e0740197fd71afa66e5eef091d"
        ],
        [
            "apply Rge_le.",
            "VernacExtend",
            "eae8ed3f063c0c64fc52ba03563e73be950936a6"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply pow_nonzero.",
            "VernacExtend",
            "282744fa14f20635385d7e1ac0d1a961c143f970"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rabs_no_R0.",
            "VernacExtend",
            "8d37b098d9cb0f050cfd8b29c49d318c2b960566"
        ],
        [
            "apply pow_nonzero.",
            "VernacExtend",
            "282744fa14f20635385d7e1ac0d1a961c143f970"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rlt_dichotomy_converse.",
            "VernacExtend",
            "e2390c6672b4ba01a7c287eaa7d370afb109d97e"
        ],
        [
            "right; unfold Rgt; assumption.",
            "VernacExtend",
            "d4b276309997340c7814486fcc7fb728c5e4218d"
        ],
        [
            "rewrite <- (Rinv_involutive 1).",
            "VernacExtend",
            "d8a312e32487860e91712d48cfe7e3ecd1d41966"
        ],
        [
            "rewrite Rabs_Rinv.",
            "VernacExtend",
            "37f0a3ac5c309484aec5354295705ced53683ada"
        ],
        [
            "unfold Rgt; apply Rinv_lt_contravar.",
            "VernacExtend",
            "42ca8f9d9f00b75bdbf6b5642a4b92fa754b4304"
        ],
        [
            "apply Rmult_lt_0_compat.",
            "VernacExtend",
            "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
        ],
        [
            "apply Rabs_pos_lt.",
            "VernacExtend",
            "e7789cb0a3c08fb3fbbda456620a8022b26229ce"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite Rinv_1; apply Rlt_0_1.",
            "VernacExtend",
            "b8b52d6154bc5d8393a6720cb529d4754e9b5546"
        ],
        [
            "rewrite Rinv_1; assumption.",
            "VernacExtend",
            "f35ac00f0d826709920371d914cc5cd70943d212"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "red; intro; apply R1_neq_R0; assumption.",
            "VernacExtend",
            "16b34234c9dd2baa9880c561327165f0a0219008"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_R1 : forall (r:R) (n:nat), r ^ n = 1 -> Rabs r = 1 \\/ n = 0%nat.",
            "VernacStartTheoremProof",
            "b58431804d2da8043b63543715b8bccb0d96967f"
        ],
        [
            "intros r n H'.",
            "VernacExtend",
            "aca8d63046bb438c06e7ad6d67f03970639c2b70"
        ],
        [
            "case (Req_dec (Rabs r) 1); auto; intros H'1.",
            "VernacExtend",
            "9558add436a47cd008c248eabba1e8bd87f5d947"
        ],
        [
            "case (Rdichotomy _ _ H'1); intros H'2.",
            "VernacExtend",
            "dece732fa326cf4670b7e472865b4fadf046aa40"
        ],
        [
            "generalize H'; case n; auto.",
            "VernacExtend",
            "97317aeefed428d3e73e68f9211bf9e0b9b007b4"
        ],
        [
            "intros n0 H'0.",
            "VernacExtend",
            "50b454170cbd422687e5ac30aabea090299273bb"
        ],
        [
            "cut (r <> 0); [ intros Eq1 | idtac ].",
            "VernacExtend",
            "5bef856d1bd2a1abc8febcb6f6aaaf3fab7fcd07"
        ],
        [
            "cut (Rabs r <> 0); [ intros Eq2 | apply Rabs_no_R0 ]; auto.",
            "VernacExtend",
            "59c4be1578e75e1b939e90737227c26bfdd617d0"
        ],
        [
            "absurd (Rabs (/ r) ^ 0 < Rabs (/ r) ^ S n0); auto.",
            "VernacExtend",
            "9b438cdb8f9927e289232d469ac7ed3279fdcd5a"
        ],
        [
            "replace (Rabs (/ r) ^ S n0) with 1.",
            "VernacExtend",
            "f3ece889b485995fdaa437c13ec00c5903a1ce74"
        ],
        [
            "simpl; apply Rlt_irrefl; auto.",
            "VernacExtend",
            "6184e68e630ec16c7b3013e4c25f7f7f1d673568"
        ],
        [
            "rewrite Rabs_Rinv; auto.",
            "VernacExtend",
            "769c16c5580e209cd299e9f2d60e88a0f3e50b21"
        ],
        [
            "rewrite <- Rinv_pow; auto.",
            "VernacExtend",
            "176bb2effd6749e3c9dfd45180e05b67770a56da"
        ],
        [
            "rewrite RPow_abs; auto.",
            "VernacExtend",
            "006c71abdaccdfbd74440cb75bc45ae03f6be8f7"
        ],
        [
            "rewrite H'0; rewrite Rabs_right; auto with real rorders.",
            "VernacExtend",
            "4aa5862f34f388cb122450cd52bd778e72eae6ae"
        ],
        [
            "apply Rlt_pow; auto with arith.",
            "VernacExtend",
            "cd0e7927979f99be7a8d346a5b7758fd7ee668e4"
        ],
        [
            "rewrite Rabs_Rinv; auto.",
            "VernacExtend",
            "769c16c5580e209cd299e9f2d60e88a0f3e50b21"
        ],
        [
            "apply Rmult_lt_reg_l with (r := Rabs r).",
            "VernacExtend",
            "65e0fe8ffee5c3afba4b5d4ebb25818c91e543e0"
        ],
        [
            "case (Rabs_pos r); auto.",
            "VernacExtend",
            "251b3e34a0992625231ddc157cfa68911e0262df"
        ],
        [
            "intros H'3; case Eq2; auto.",
            "VernacExtend",
            "4d7b1543b388701f37dc288f3b4bb511ea4b4063"
        ],
        [
            "rewrite Rmult_1_r; rewrite Rinv_r; auto with real.",
            "VernacExtend",
            "93344c00bb59e850ddee2f5b4af0be2cd124b5b7"
        ],
        [
            "red; intro; absurd (r ^ S n0 = 1); auto.",
            "VernacExtend",
            "aa9196d3df7e719d14b97bed22a078140016c9bb"
        ],
        [
            "simpl; rewrite H; rewrite Rmult_0_l; auto with real.",
            "VernacExtend",
            "0667e652d348ef2cd029cdaf89aea80293fcf58f"
        ],
        [
            "generalize H'; case n; auto.",
            "VernacExtend",
            "97317aeefed428d3e73e68f9211bf9e0b9b007b4"
        ],
        [
            "intros n0 H'0.",
            "VernacExtend",
            "50b454170cbd422687e5ac30aabea090299273bb"
        ],
        [
            "cut (r <> 0); [ intros Eq1 | auto with real ].",
            "VernacExtend",
            "c1d907a2c3ffd4d0ad39638e608e21386e71cb99"
        ],
        [
            "cut (Rabs r <> 0); [ intros Eq2 | apply Rabs_no_R0 ]; auto.",
            "VernacExtend",
            "59c4be1578e75e1b939e90737227c26bfdd617d0"
        ],
        [
            "absurd (Rabs r ^ 0 < Rabs r ^ S n0); auto with real arith.",
            "VernacExtend",
            "ca6ce4c82a4ce1b97cc6ea7a2de5c46cfa1d558d"
        ],
        [
            "repeat rewrite RPow_abs; rewrite H'0; simpl; auto with real.",
            "VernacExtend",
            "94594c4ce4565efd9e37bd826b9c35584e4954ea"
        ],
        [
            "red; intro; absurd (r ^ S n0 = 1); auto.",
            "VernacExtend",
            "aa9196d3df7e719d14b97bed22a078140016c9bb"
        ],
        [
            "simpl; rewrite H; rewrite Rmult_0_l; auto with real.",
            "VernacExtend",
            "0667e652d348ef2cd029cdaf89aea80293fcf58f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_Rsqr : forall (x:R) (n:nat), x ^ (2 * n) = Rsqr x ^ n.",
            "VernacStartTheoremProof",
            "726decb8228fc191ce88006a9a92e282ad16a11e"
        ],
        [
            "intros; induction n as [| n Hrecn].",
            "VernacExtend",
            "d8127da965164ab3db77421604b758d5eb34a150"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "replace (2 * S n)%nat with (S (S (2 * n))).",
            "VernacExtend",
            "0e979a91e133bbb49e0c693ceaa8b83423f512bf"
        ],
        [
            "replace (x ^ S (S (2 * n))) with (x * x * x ^ (2 * n)).",
            "VernacExtend",
            "ec100ed63a1ab4eaf69bc76e17e42e7feb20fbe2"
        ],
        [
            "rewrite Hrecn; reflexivity.",
            "VernacExtend",
            "049ebd1a80910b9244f1a6b4f2b342f7ea3ffe33"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_le : forall (a:R) (n:nat), 0 <= a -> 0 <= a ^ n.",
            "VernacStartTheoremProof",
            "62a13acf217d3e74445996513113585f0142c90b"
        ],
        [
            "intros; induction n as [| n Hrecn].",
            "VernacExtend",
            "d8127da965164ab3db77421604b758d5eb34a150"
        ],
        [
            "simpl; left; apply Rlt_0_1.",
            "VernacExtend",
            "60cca351b90688d6aaa83958e02617de6acd0a2e"
        ],
        [
            "simpl; apply Rmult_le_pos; assumption.",
            "VernacExtend",
            "5eadce68b64fd126f840d61a34fdb0ae820b4daf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_1_even : forall n:nat, (-1) ^ (2 * n) = 1.",
            "VernacStartTheoremProof",
            "f70868e673c1ddfde8af9bcb8bf3ee958c94bb69"
        ],
        [
            "intro; induction n as [| n Hrecn].",
            "VernacExtend",
            "e436d2d69f81fe61484702aa2043459f6821c2af"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "replace (2 * S n)%nat with (2 + 2 * n)%nat by ring.",
            "VernacExtend",
            "6986ed3973513617489f61b8a7866c1beae683aa"
        ],
        [
            "rewrite pow_add; rewrite Hrecn; simpl; ring.",
            "VernacExtend",
            "59a6710fcf37d4ab5cbe76faf209d79c345ad3e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_1_odd : forall n:nat, (-1) ^ S (2 * n) = -1.",
            "VernacStartTheoremProof",
            "5f279d4c9d44978fc20e9ff2dbb4258e0d2b3dba"
        ],
        [
            "intro; replace (S (2 * n)) with (2 * n + 1)%nat by ring.",
            "VernacExtend",
            "76473a51bf14e125f1bbe05315deb47c42eea2b1"
        ],
        [
            "rewrite pow_add; rewrite pow_1_even; simpl; ring.",
            "VernacExtend",
            "87f273d22f72aa9b9182dd8da801a603faf72c23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_1_abs : forall n:nat, Rabs ((-1) ^ n) = 1.",
            "VernacStartTheoremProof",
            "9cadd988599f4ae9424942de7b63c1ec323e904f"
        ],
        [
            "intro; induction n as [| n Hrecn].",
            "VernacExtend",
            "e436d2d69f81fe61484702aa2043459f6821c2af"
        ],
        [
            "simpl; apply Rabs_R1.",
            "VernacExtend",
            "3c190b063aaeac863e3e9bca80dc2d791a377199"
        ],
        [
            "replace (S n) with (n + 1)%nat; [ rewrite pow_add | ring ].",
            "VernacExtend",
            "0b0ba0905d5df11351c5787e07a0907bc7bf615a"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "rewrite Hrecn; rewrite Rmult_1_l; simpl; rewrite Rmult_1_r.",
            "VernacExtend",
            "c39ccf01e5eba599e328f2d547c539c3d7a32634"
        ],
        [
            "change (-1) with (-(1)).",
            "VernacExtend",
            "1f60c1a6cdb67b8d172aedacd166faedbafbdc55"
        ],
        [
            "rewrite Rabs_Ropp; apply Rabs_R1.",
            "VernacExtend",
            "4645673d9a579c42e1b049f69a6b570011650390"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_mult : forall (x:R) (n1 n2:nat), x ^ (n1 * n2) = (x ^ n1) ^ n2.",
            "VernacStartTheoremProof",
            "e84fe497355e4ca1d10ce42d1eebb18412f6bf04"
        ],
        [
            "intros; induction n2 as [| n2 Hrecn2].",
            "VernacExtend",
            "ec07087e18c8068afcad60d851cf7a6449f42aa8"
        ],
        [
            "simpl; replace (n1 * 0)%nat with 0%nat; [ reflexivity | ring ].",
            "VernacExtend",
            "df3b4625f5e114bacef067b26bad680014883c99"
        ],
        [
            "replace (n1 * S n2)%nat with (n1 * n2 + n1)%nat.",
            "VernacExtend",
            "0ee8e216aed03c253628d1cfffeeed2ec4c1bd81"
        ],
        [
            "replace (S n2) with (n2 + 1)%nat by ring.",
            "VernacExtend",
            "9cb3af09f6d1e09ec8a4154c86fdf9614b3e0f09"
        ],
        [
            "do 2 rewrite pow_add.",
            "VernacExtend",
            "8f66788cbb05f7250d2b2e706a687f6f96ec2d87"
        ],
        [
            "rewrite Hrecn2.",
            "VernacExtend",
            "a0f10d49f19145956f6417847c98913ead033c5a"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_incr : forall (x y:R) (n:nat), 0 <= x <= y -> x ^ n <= y ^ n.",
            "VernacStartTheoremProof",
            "6f5feafb6a9a9982357c4c612ebd47981cebb414"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "right; reflexivity.",
            "VernacExtend",
            "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "elim H; intros.",
            "VernacExtend",
            "79e1c8a1444242deed6d2876e3fe7bb2cf051f26"
        ],
        [
            "apply Rle_trans with (y * x ^ n).",
            "VernacExtend",
            "fc067fa7cceab7f001650e8e425089984d5255e1"
        ],
        [
            "do 2 rewrite <- (Rmult_comm (x ^ n)).",
            "VernacExtend",
            "38ec6eb84daf7c91e1b04af7bffcb00a703a8ef7"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply pow_le; assumption.",
            "VernacExtend",
            "95f5e2732198152bd7da9b9abc920b79022ea046"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply Rle_trans with x; assumption.",
            "VernacExtend",
            "560d88213848c197ead481a6be7f3a2ac8f5b93b"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_R1_Rle : forall (x:R) (k:nat), 1 <= x -> 1 <= x ^ k.",
            "VernacStartTheoremProof",
            "8f0cc59594530517feaec46c95b6f738d2a14b81"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "induction k as [| k Hreck].",
            "VernacExtend",
            "30c8085420df46c7f001b104c0e0269082363c49"
        ],
        [
            "right; reflexivity.",
            "VernacExtend",
            "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply Rle_trans with (x * 1).",
            "VernacExtend",
            "fca2907a744eabafe7488a04e808553e8ab89e65"
        ],
        [
            "rewrite Rmult_1_r; assumption.",
            "VernacExtend",
            "035507d12dca88b716bc3bd5a29b9a28d7038962"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "left; apply Rlt_le_trans with 1; [ apply Rlt_0_1 | assumption ].",
            "VernacExtend",
            "6d0bb79adb9af4d01e23dc7351de900de983ac2e"
        ],
        [
            "exact Hreck.",
            "VernacExtend",
            "7016b021694380128eba0e3a29eefd1738574e12"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rle_pow : forall (x:R) (m n:nat), 1 <= x -> (m <= n)%nat -> x ^ m <= x ^ n.",
            "VernacStartTheoremProof",
            "d9c9a395d0ed6b942b8a97c278208a1eec74945b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "replace n with (n - m + m)%nat.",
            "VernacExtend",
            "90f16287a267cef6415f75defa737aeae18949d0"
        ],
        [
            "rewrite pow_add.",
            "VernacExtend",
            "e7ffb4294c31ded66f1a5f321399a9a5b2326cb2"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "fd520335d31c715c2f686e2bdc0b380c493b04c0"
        ],
        [
            "pattern (x ^ m) at 1; rewrite <- Rmult_1_r.",
            "VernacExtend",
            "2052c453e887566eeaf0a872f04899df8e78d4e3"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply pow_le; left; apply Rlt_le_trans with 1; [ apply Rlt_0_1 | assumption ].",
            "VernacExtend",
            "733075b330db1d86c5469cbdfb0bdb5485f320e4"
        ],
        [
            "apply pow_R1_Rle; assumption.",
            "VernacExtend",
            "4fb9fc3d147b0ef171d16480ae05fed1df812f59"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "symmetry ; apply le_plus_minus; assumption.",
            "VernacExtend",
            "48d95756f975c474a1d5bb47b18f7bfd149b769c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow1 : forall n:nat, 1 ^ n = 1.",
            "VernacStartTheoremProof",
            "2942f7a8e634fa036740816b26fbe7f065691f36"
        ],
        [
            "intro; induction n as [| n Hrecn].",
            "VernacExtend",
            "e436d2d69f81fe61484702aa2043459f6821c2af"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "simpl; rewrite Hrecn; rewrite Rmult_1_r; reflexivity.",
            "VernacExtend",
            "60d0f137647e0d9e965eee944ad0c033d9f95d32"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_Rabs : forall (x:R) (n:nat), x ^ n <= Rabs x ^ n.",
            "VernacStartTheoremProof",
            "a641c7933722483c8f38fa06537a9590fe1d6426"
        ],
        [
            "intros; induction n as [| n Hrecn].",
            "VernacExtend",
            "d8127da965164ab3db77421604b758d5eb34a150"
        ],
        [
            "right; reflexivity.",
            "VernacExtend",
            "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
        ],
        [
            "simpl; destruct (Rcase_abs x) as [Hlt|Hle].",
            "VernacExtend",
            "f5011975b3bbba00e30130085b8397a015a1ff7c"
        ],
        [
            "apply Rle_trans with (Rabs (x * x ^ n)).",
            "VernacExtend",
            "f88e5401b8dee29b43c81aa3437a4ccb776eb3df"
        ],
        [
            "apply RRle_abs.",
            "VernacExtend",
            "1333b00626244e19099bec7e0de632062c4070a3"
        ],
        [
            "rewrite Rabs_mult.",
            "VernacExtend",
            "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply Rabs_pos.",
            "VernacExtend",
            "8e57e214403458a4dc8dafc960971b86cf3b856d"
        ],
        [
            "right; symmetry; apply RPow_abs.",
            "VernacExtend",
            "47004863d1dc47962cbaa0d1dfa87a887237c341"
        ],
        [
            "pattern (Rabs x) at 1; rewrite (Rabs_right x Hle); apply Rmult_le_compat_l.",
            "VernacExtend",
            "bd82b1ad25be16e367e5c3a20a0788ffc63c679a"
        ],
        [
            "apply Rge_le; exact Hle.",
            "VernacExtend",
            "ee9c8947567a765bf9cceeb7f54a73188f24ab79"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pow_maj_Rabs : forall (x y:R) (n:nat), Rabs y <= x -> y ^ n <= x ^ n.",
            "VernacStartTheoremProof",
            "fe0547a9d4cd550df0d31067928041df415eb7ef"
        ],
        [
            "intros; cut (0 <= x).",
            "VernacExtend",
            "6c4d669c674edc5217aa8a440ca1ee955fac4404"
        ],
        [
            "intro; apply Rle_trans with (Rabs y ^ n).",
            "VernacExtend",
            "b3735f61609182584c6ed88388da3cd81c0daf56"
        ],
        [
            "apply pow_Rabs.",
            "VernacExtend",
            "f7260ca2a849aff6ca5ee7c01fddef9e62716132"
        ],
        [
            "induction n as [| n Hrecn].",
            "VernacExtend",
            "81d1278a66d994c9ef1229ce58d1d47680f3003e"
        ],
        [
            "right; reflexivity.",
            "VernacExtend",
            "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
        ],
        [
            "simpl; apply Rle_trans with (x * Rabs y ^ n).",
            "VernacExtend",
            "2b9c1b150d14dab9579f8abcd94c338dac2dcfae"
        ],
        [
            "do 2 rewrite <- (Rmult_comm (Rabs y ^ n)).",
            "VernacExtend",
            "82cce22b71909232aa57d0150529a155eec9c294"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply pow_le; apply Rabs_pos.",
            "VernacExtend",
            "8e3e4ca1c2ff39b216e1d667c9322879b6c09e89"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "apply H0.",
            "VernacExtend",
            "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
        ],
        [
            "apply Hrecn.",
            "VernacExtend",
            "f8554c139e89e414af9bdff2dbae4f085b4da693"
        ],
        [
            "apply Rle_trans with (Rabs y); [ apply Rabs_pos | exact H ].",
            "VernacExtend",
            "8b86087b73746fef7354fe4a37527c230b88f5b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rsqr_pow2 : forall x, Rsqr x = x ^ 2.",
            "VernacStartTheoremProof",
            "180abe60c2c8c1513635498ac2d3484d42149a37"
        ],
        [
            "intros; unfold Rsqr; simpl; rewrite Rmult_1_r; reflexivity.",
            "VernacExtend",
            "f5abc8feb33eea8ffc26dbbea836ae9add667369"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section PowerRZ.",
            "VernacBeginSection",
            "c37d1cfd19627e1c238126cb2fc093363627ece3"
        ],
        [
            "Local Coercion Z_of_nat : nat >-> Z.",
            "VernacCoercion",
            "3ad005e1555baf45e6d912fdb3e717465d4b592e"
        ],
        [
            "Section Z_compl.",
            "VernacBeginSection",
            "52c9b2413e5bc9d2368eef916ced54c9985c3853"
        ],
        [
            "Local Open Scope Z_scope.",
            "VernacOpenCloseScope",
            "5313930c0cd5fa63810c1c79463485ebf0638bad"
        ],
        [
            "Inductive Z_spec (x : Z) : Z -> Type := | ZintNull : x = 0 -> Z_spec x 0 | ZintPos (n : nat) : x = n -> Z_spec x n | ZintNeg (n : nat) : x = - n -> Z_spec x (- n).",
            "VernacInductive",
            "b362e827bc41504519bf411d4740ea6090daf2f3"
        ],
        [
            "Lemma intP (x : Z) : Z_spec x x.",
            "VernacStartTheoremProof",
            "820113dd092f52e921517947f4e2ea962f26d2e8"
        ],
        [
            "destruct x as [|p|p].",
            "VernacExtend",
            "76e5c5fc2852962afe654eed7b40c09a515b22aa"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now apply ZintNull.",
            "VernacExtend",
            "d78bc2e335c103860b828006a9fe300ad42b8a5e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <-positive_nat_Z at 2.",
            "VernacExtend",
            "c78d7bc60d682378407a496a59f5d03f6ac1db1d"
        ],
        [
            "apply ZintPos.",
            "VernacExtend",
            "7a9c08e4f9b5219d16aefb4d021fd7dc51bf2e7b"
        ],
        [
            "now rewrite positive_nat_Z.",
            "VernacExtend",
            "399afbb7eb11bbfe911d24ea859cd4248f26e91d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <-Pos2Z.opp_pos.",
            "VernacExtend",
            "474fbabf620cd5fc71665a0f9a106439a1479b86"
        ],
        [
            "rewrite <-positive_nat_Z at 2.",
            "VernacExtend",
            "c78d7bc60d682378407a496a59f5d03f6ac1db1d"
        ],
        [
            "apply ZintNeg.",
            "VernacExtend",
            "80a6abc365927cc82f4802d799bc1fe18869b9bb"
        ],
        [
            "now rewrite positive_nat_Z.",
            "VernacExtend",
            "399afbb7eb11bbfe911d24ea859cd4248f26e91d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Z_compl.",
            "VernacEndSegment",
            "2b138b13c88a2366a818f2661e39ffc06a0a97b6"
        ],
        [
            "Definition powerRZ (x:R) (n:Z) := match n with | Z0 => 1 | Zpos p => x ^ Pos.to_nat p | Zneg p => / x ^ Pos.to_nat p end.",
            "VernacDefinition",
            "32aca7e14d62dbf713316c6b008a1d568034c91f"
        ],
        [
            "Local Infix \"^Z\" := powerRZ (at level 30, right associativity) : R_scope.",
            "VernacInfix",
            "4ea9b3a310796c4cdc27f43398337f4bcfd862f7"
        ],
        [
            "Lemma Zpower_NR0 : forall (x:Z) (n:nat), (0 <= x)%Z -> (0 <= Zpower_nat x n)%Z.",
            "VernacStartTheoremProof",
            "a4cec99933d2aabe2f6bfd9b1fcfb818b73c77c2"
        ],
        [
            "induction n; unfold Zpower_nat; simpl; auto with zarith.",
            "VernacExtend",
            "f34e668146f9ce6b71292dc32296fca83e526c00"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma powerRZ_O : forall x:R, x ^Z 0 = 1.",
            "VernacStartTheoremProof",
            "08d7544950e0df9a85783fa4e27ca009d90cdd06"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma powerRZ_1 : forall x:R, x ^Z Z.succ 0 = x.",
            "VernacStartTheoremProof",
            "0bd34ee0ed2c707f6ce16c1f679dc0111f83c736"
        ],
        [
            "simpl; auto with real.",
            "VernacExtend",
            "b062786ac0dbbfc282b750a40b6651658747aae5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma powerRZ_NOR : forall (x:R) (z:Z), x <> 0 -> x ^Z z <> 0.",
            "VernacStartTheoremProof",
            "93a9b2a929948c3f45cc606fd115090d75530b1f"
        ],
        [
            "destruct z; simpl; auto with real.",
            "VernacExtend",
            "42e0088637db9c64ccaa00d3c9177c60de1d9554"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma powerRZ_pos_sub (x:R) (n m:positive) : x <> 0 -> x ^Z (Z.pos_sub n m) = x ^ Pos.to_nat n * / x ^ Pos.to_nat m.",
            "VernacStartTheoremProof",
            "d924467500fef66acc03734577e8015dcfd93051"
        ],
        [
            "intro Hx.",
            "VernacExtend",
            "218b6ef98d0605f2e1745b1d78b2fbbb6c4b9a85"
        ],
        [
            "rewrite Z.pos_sub_spec.",
            "VernacExtend",
            "ad39ea5e69a6135dd31841448750ef09af08dff9"
        ],
        [
            "case Pos.compare_spec; intro H; simpl.",
            "VernacExtend",
            "91e21d6107b12fbe4aaa68f213bbf5d368cef742"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "subst; auto with real.",
            "VernacExtend",
            "60b470ceb219ee2d85ca25ca50d97c569eeb7de4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Pos2Nat.inj_sub by trivial.",
            "VernacExtend",
            "b2ffd8b60a5a2593e27f9206913ba6fc9ce690ef"
        ],
        [
            "rewrite Pos2Nat.inj_lt in H.",
            "VernacExtend",
            "e940d4b476567acf18b87ad7a0d602d361e94078"
        ],
        [
            "rewrite (pow_RN_plus x _ (Pos.to_nat n)) by auto with real.",
            "VernacExtend",
            "d3beb2a5b5284a06d3384f7e788da7ca7784b860"
        ],
        [
            "rewrite plus_comm, le_plus_minus_r by auto with real.",
            "VernacExtend",
            "13501479fa5cd3d7558434255e36ef2e13c7b50b"
        ],
        [
            "rewrite Rinv_mult_distr, Rinv_involutive; auto with real.",
            "VernacExtend",
            "193b9d0f4b60b0d28e33e62bc422c000f8346297"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Pos2Nat.inj_sub by trivial.",
            "VernacExtend",
            "b2ffd8b60a5a2593e27f9206913ba6fc9ce690ef"
        ],
        [
            "rewrite Pos2Nat.inj_lt in H.",
            "VernacExtend",
            "e940d4b476567acf18b87ad7a0d602d361e94078"
        ],
        [
            "rewrite (pow_RN_plus x _ (Pos.to_nat m)) by auto with real.",
            "VernacExtend",
            "5c24838e39fbbe87bf39609ce8d8bd42e402d795"
        ],
        [
            "rewrite plus_comm, le_plus_minus_r by auto with real.",
            "VernacExtend",
            "13501479fa5cd3d7558434255e36ef2e13c7b50b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma powerRZ_add : forall (x:R) (n m:Z), x <> 0 -> x ^Z (n + m) = x ^Z n * x ^Z m.",
            "VernacStartTheoremProof",
            "148ac3bd1fba51316c44729f9bc6f7f336ff1b70"
        ],
        [
            "intros x [|n|n] [|m|m]; simpl; intros; auto with real.",
            "VernacExtend",
            "f2073c6671c01995eefd64d3e4ba9f2e68757ff4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Pos2Nat.inj_add; auto with real.",
            "VernacExtend",
            "9a10b7dd66d387f65292949dfabb08d5e462837e"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now apply powerRZ_pos_sub.",
            "VernacExtend",
            "60a2e71e3eb227c1f03538e1c7e8e36659fde588"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Rmult_comm.",
            "VernacExtend",
            "fd520335d31c715c2f686e2bdc0b380c493b04c0"
        ],
        [
            "now apply powerRZ_pos_sub.",
            "VernacExtend",
            "60a2e71e3eb227c1f03538e1c7e8e36659fde588"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Pos2Nat.inj_add; auto with real.",
            "VernacExtend",
            "9a10b7dd66d387f65292949dfabb08d5e462837e"
        ],
        [
            "rewrite pow_add; auto with real.",
            "VernacExtend",
            "f4e0cafe9101fab09ae85b24f96e9d5b98f58699"
        ],
        [
            "apply Rinv_mult_distr; apply pow_nonzero; auto.",
            "VernacExtend",
            "c46822a24404b239bd61682e06e42806c69053f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve powerRZ_O powerRZ_1 powerRZ_NOR powerRZ_add: real.",
            "VernacHints",
            "af1452ba95f901d75495f266e75c844e5f9bbf6d"
        ],
        [
            "Lemma Zpower_nat_powerRZ : forall n m:nat, IZR (Zpower_nat (Z.of_nat n) m) = INR n ^Z Z.of_nat m.",
            "VernacStartTheoremProof",
            "d9b448640e82ec8d73b5bd16e3680977ff15b7c4"
        ],
        [
            "intros n m; elim m; simpl; auto with real.",
            "VernacExtend",
            "b7b8976f6642cc56e3afad83bf6f4e8eade5236e"
        ],
        [
            "intros m1 H'; rewrite SuccNat2Pos.id_succ; simpl.",
            "VernacExtend",
            "676fa629f009c48f1c973e4022ace0a968d26161"
        ],
        [
            "replace (Zpower_nat (Z.of_nat n) (S m1)) with (Z.of_nat n * Zpower_nat (Z.of_nat n) m1)%Z.",
            "VernacExtend",
            "fdab6470944c56b7a133c9e166a48d125444e578"
        ],
        [
            "rewrite mult_IZR; auto with real.",
            "VernacExtend",
            "21e2f9e8809a37460ee1812698cf53e41a8bb651"
        ],
        [
            "repeat rewrite <- INR_IZR_INZ; simpl.",
            "VernacExtend",
            "d4804222cf2c5ae6fbf36a7a80464380f49185c3"
        ],
        [
            "rewrite H'; simpl.",
            "VernacExtend",
            "771168717616d63bbff8f4eaf5da0557606af7eb"
        ],
        [
            "case m1; simpl; auto with real.",
            "VernacExtend",
            "8b4cefc6c4b73308d3f49b9139e16542339b290b"
        ],
        [
            "intros m2; rewrite SuccNat2Pos.id_succ; auto.",
            "VernacExtend",
            "bd9cf72afa56cccf8dfbb4fb1fc664c1c9437dae"
        ],
        [
            "unfold Zpower_nat; auto.",
            "VernacExtend",
            "92f7d5f84ed4cb838741819a5ada0c4c54ba6c25"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Zpower_pos_powerRZ : forall n m, IZR (Z.pow_pos n m) = IZR n ^Z Zpos m.",
            "VernacStartTheoremProof",
            "ac2dbc771897c72a6dd4e26a75f9af96aacf3bb4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Zpower_pos_nat; simpl.",
            "VernacExtend",
            "142dd6c2f594c0ec369a7c362a65e04571f06737"
        ],
        [
            "induction (Pos.to_nat m).",
            "VernacExtend",
            "47a7f43efa206a3a75aa5963667f5515bc14032a"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "unfold Zpower_nat; simpl.",
            "VernacExtend",
            "fd0b619c491c0534a52462fa3550bdf69de16628"
        ],
        [
            "rewrite mult_IZR.",
            "VernacExtend",
            "ee24eb6c50dab4e9cfa2fa287c1816561718b942"
        ],
        [
            "now rewrite <- IHn0.",
            "VernacExtend",
            "829004bee582f1ee914f0388a5548e5aeea8c46f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma powerRZ_lt : forall (x:R) (z:Z), 0 < x -> 0 < x ^Z z.",
            "VernacStartTheoremProof",
            "91f8480049b1e727128ec5552929985db7f8a6c7"
        ],
        [
            "intros x z; case z; simpl; auto with real.",
            "VernacExtend",
            "0c196df68be32880915c24c5dd31b9074a2ae655"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve powerRZ_lt: real.",
            "VernacHints",
            "c7b2d49cc3805d4c7ffe2a55d50910f9922cc164"
        ],
        [
            "Lemma powerRZ_le : forall (x:R) (z:Z), 0 < x -> 0 <= x ^Z z.",
            "VernacStartTheoremProof",
            "2982abf1da3f118ff4074d421fa802f0d1998a34"
        ],
        [
            "intros x z H'; apply Rlt_le; auto with real.",
            "VernacExtend",
            "65708e1828904319734c42441b9a52c21618a71b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve powerRZ_le: real.",
            "VernacHints",
            "02b842ac6f36498489fa4a65a825361a404ab577"
        ],
        [
            "Lemma Zpower_nat_powerRZ_absolu : forall n m:Z, (0 <= m)%Z -> IZR (Zpower_nat n (Z.abs_nat m)) = IZR n ^Z m.",
            "VernacStartTheoremProof",
            "f8ee8422e87af0f6649fd3c1ec36466c58ecee87"
        ],
        [
            "intros n m; case m; simpl; auto with zarith.",
            "VernacExtend",
            "32686db710bd9318737334598688376592896bd2"
        ],
        [
            "intros p H'; elim (Pos.to_nat p); simpl; auto with zarith.",
            "VernacExtend",
            "0f9a29e01393ef339870a9b5d90f45393c624e59"
        ],
        [
            "intros n0 H'0; rewrite <- H'0; simpl; auto with zarith.",
            "VernacExtend",
            "0ca2ce00a99f7681ad0061f73bbddb5560e8f34b"
        ],
        [
            "rewrite <- mult_IZR; auto.",
            "VernacExtend",
            "0cc02a194e6bc67301d007e480f31c805dae02fe"
        ],
        [
            "intros p H'; absurd (0 <= Zneg p)%Z; auto with zarith.",
            "VernacExtend",
            "af61b105f40378e53f7e7ad49876e1ab8bfd3342"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma powerRZ_R1 : forall n:Z, 1 ^Z n = 1.",
            "VernacStartTheoremProof",
            "97ccc72e55249dac3af893ae77ba053910f50000"
        ],
        [
            "intros n; case n; simpl; auto.",
            "VernacExtend",
            "ab60bbcc487ba06f4100c769c45a0ed978fc32e8"
        ],
        [
            "intros p; elim (Pos.to_nat p); simpl; auto; intros n0 H'; rewrite H'; ring.",
            "VernacExtend",
            "480622d8fd43cb5b63d7137b80b6b2f11e675b31"
        ],
        [
            "intros p; elim (Pos.to_nat p); simpl.",
            "VernacExtend",
            "8c1ce6e1547e9c149082672b64724026dd9c2a82"
        ],
        [
            "exact Rinv_1.",
            "VernacExtend",
            "bf4a525e5a06dbedd66f17aec2f3f22b88c2b7f4"
        ],
        [
            "intros n1 H'; rewrite Rinv_mult_distr; try rewrite Rinv_1; try rewrite H'; auto with real.",
            "VernacExtend",
            "54e508ba0e9a6c9aebb38d2779b4a261b8ea0d84"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Local Open Scope Z_scope.",
            "VernacOpenCloseScope",
            "5313930c0cd5fa63810c1c79463485ebf0638bad"
        ],
        [
            "Lemma pow_powerRZ (r : R) (n : nat) : (r ^ n)%R = powerRZ r (Z_of_nat n).",
            "VernacStartTheoremProof",
            "2e88690194d5e4399212758d3f05f50f49cba7c1"
        ],
        [
            "induction n; [easy|simpl].",
            "VernacExtend",
            "790a9c5c390239f506cc57f1196d955651d411d2"
        ],
        [
            "now rewrite SuccNat2Pos.id_succ.",
            "VernacExtend",
            "2e107725458a2ed64352c9b05ce6e64cd314f2a8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma powerRZ_ind (P : Z -> R -> R -> Prop) : (forall x, P 0 x 1%R) -> (forall x n, P (Z.of_nat n) x (x ^ n)%R) -> (forall x n, P ((-(Z.of_nat n))%Z) x (Rinv (x ^ n))) -> forall x (m : Z), P m x (powerRZ x m)%R.",
            "VernacStartTheoremProof",
            "a09502cd9980ce0628d19dab6e2f5cf23a70cb93"
        ],
        [
            "intros ? ? ? x m.",
            "VernacExtend",
            "928734fe3909aea4de161bb87b4c6db93e9e4cb2"
        ],
        [
            "destruct (intP m) as [Hm|n Hm|n Hm].",
            "VernacExtend",
            "3dea77518744862272e2f0c0f9bf5af7455ef2d7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite <- pow_powerRZ.",
            "VernacExtend",
            "93c5301d86592b8fd1af45284d5cb4589e733153"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold powerRZ.",
            "VernacExtend",
            "fff2d56e67f46a0e26030afd3ee7e592388289f9"
        ],
        [
            "destruct n as [|n]; [ easy |].",
            "VernacExtend",
            "14dc37bfff3f5e95efef71773f86b15b7a2fb682"
        ],
        [
            "rewrite Nat2Z.inj_succ, <- Zpos_P_of_succ_nat, Pos2Z.opp_pos.",
            "VernacExtend",
            "d38be09ee16b204f020818ecc3b1b3267770c999"
        ],
        [
            "now rewrite <- Pos2Z.opp_pos, <- positive_nat_Z.",
            "VernacExtend",
            "cf7044e2cc4ee57d3f3a4a61745feca63da23fb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma powerRZ_inv x alpha : (x <> 0)%R -> powerRZ (/ x) alpha = Rinv (powerRZ x alpha).",
            "VernacStartTheoremProof",
            "08954ee432fd626b2b3beffe4e3bcc390eb4682d"
        ],
        [
            "intros; destruct (intP alpha).",
            "VernacExtend",
            "698a416dc6b6bf1e271da7ee7bef6104398941d5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now simpl; rewrite Rinv_1.",
            "VernacExtend",
            "6275e45fa3fe89ecc6db991ffa5bd6e591e062e3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite <-!pow_powerRZ, ?Rinv_pow, ?pow_powerRZ.",
            "VernacExtend",
            "bd33fde60be5041e6cbd9c400473626419c29772"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold powerRZ.",
            "VernacExtend",
            "fff2d56e67f46a0e26030afd3ee7e592388289f9"
        ],
        [
            "destruct (- n).",
            "VernacExtend",
            "33b877e7994eb145f26db86be5dd25d8b14628c4"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now rewrite Rinv_1.",
            "VernacExtend",
            "9fffae577e64b2076f824dc546c4011983ee138d"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now rewrite Rinv_pow.",
            "VernacExtend",
            "3e525755ac8ae42c719dbdb44df9f19c00155b57"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now rewrite <-Rinv_pow.",
            "VernacExtend",
            "8b3d1cb3e0f053e4b25972f45d9b9e5276c09636"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma powerRZ_neg x : forall alpha, x <> R0 -> powerRZ x (- alpha) = powerRZ (/ x) alpha.",
            "VernacStartTheoremProof",
            "7d4d72ce2c2f810de1cfa5e5ec98fe9832ac1748"
        ],
        [
            "intros [|n|n] H ; simpl.",
            "VernacExtend",
            "a231ee46647c3bc5bd8f4ac205e394f7c9246cee"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "easy.",
            "VernacExtend",
            "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite Rinv_pow.",
            "VernacExtend",
            "3e525755ac8ae42c719dbdb44df9f19c00155b57"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite Rinv_pow by now apply Rinv_neq_0_compat.",
            "VernacExtend",
            "7ee889a2466dab9ac2d3744bcc4bfe3f5989ad29"
        ],
        [
            "now rewrite Rinv_involutive.",
            "VernacExtend",
            "55b1b92c0d337152d7d329372f6e103cd9f31a88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma powerRZ_mult_distr : forall m x y, ((0 <= m)%Z \\/ (x * y <> 0)%R) -> (powerRZ (x*y) m = powerRZ x m * powerRZ y m)%R.",
            "VernacStartTheoremProof",
            "d9ab73a4818e7a6e9eefbf00cba4360398fe6711"
        ],
        [
            "intros m x0 y0 Hmxy.",
            "VernacExtend",
            "51fca77fe8785ecbeda9078ceed9b900d51d7bad"
        ],
        [
            "destruct (intP m) as [ | | n Hm ].",
            "VernacExtend",
            "9fb665819c3a33c0231e8f2cc89b8e2adb864952"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now simpl; rewrite Rmult_1_l.",
            "VernacExtend",
            "b9617879ca40b281d00ee2507c65bcf4a3f628a7"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now rewrite <- !pow_powerRZ, Rpow_mult_distr.",
            "VernacExtend",
            "8653f5ebcae1870226ba30e2df8a2a8f19be21b6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct Hmxy as [H|H].",
            "VernacExtend",
            "a3b4e117f572479b3cf8161eabb34e5380370bf0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert(m = 0) as -> by now omega.",
            "VernacExtend",
            "b38edb3fe412542544a73679f4e042ce4507ad47"
        ],
        [
            "now rewrite <- Hm, Rmult_1_l.",
            "VernacExtend",
            "a6a0a2331ef88a1704a6f663733243a033990cc3"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "assert(x0 <> 0)%R by now intros ->; apply H; rewrite Rmult_0_l.",
            "VernacExtend",
            "e52ddc518c2ec16cfd230e0e3752d528163575c9"
        ],
        [
            "assert(y0 <> 0)%R by now intros ->; apply H; rewrite Rmult_0_r.",
            "VernacExtend",
            "d63c9ad2d074f5a2abbd3b99e7c7b2aec7584d43"
        ],
        [
            "rewrite !powerRZ_neg by assumption.",
            "VernacExtend",
            "397535db84f55266fc63b74dd1eeb21eb530be90"
        ],
        [
            "rewrite Rinv_mult_distr by assumption.",
            "VernacExtend",
            "9bfbfca8c240dfaac7921cfba9438a454f499be0"
        ],
        [
            "now rewrite <- !pow_powerRZ, Rpow_mult_distr.",
            "VernacExtend",
            "8653f5ebcae1870226ba30e2df8a2a8f19be21b6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End PowerRZ.",
            "VernacEndSegment",
            "bddf56bb3b7731a21c69e59d0e1659af2c444cff"
        ],
        [
            "Local Infix \"^Z\" := powerRZ (at level 30, right associativity) : R_scope.",
            "VernacInfix",
            "4ea9b3a310796c4cdc27f43398337f4bcfd862f7"
        ],
        [
            "Definition decimal_exp (r:R) (z:Z) : R := (r * 10 ^Z z).",
            "VernacDefinition",
            "bd0b4e1272d62d578318dd3db8bc2edfe3d631c9"
        ],
        [
            "Fixpoint sum_nat_f_O (f:nat -> nat) (n:nat) : nat := match n with | O => f 0%nat | S n' => (sum_nat_f_O f n' + f (S n'))%nat end.",
            "VernacFixpoint",
            "1c0af62e9f048396848362e84109ada1d765e901"
        ],
        [
            "Definition sum_nat_f (s n:nat) (f:nat -> nat) : nat := sum_nat_f_O (fun x:nat => f (x + s)%nat) (n - s).",
            "VernacDefinition",
            "258ba2c84a2614117415038651743f26e99d0238"
        ],
        [
            "Definition sum_nat_O (n:nat) : nat := sum_nat_f_O (fun x:nat => x) n.",
            "VernacDefinition",
            "de3ed93c231a1ccd3bca2d90b56ad7e0f4b4f9bd"
        ],
        [
            "Definition sum_nat (s n:nat) : nat := sum_nat_f s n (fun x:nat => x).",
            "VernacDefinition",
            "99b7050dab9c4651745f4c5946885cfe255eafbe"
        ],
        [
            "Fixpoint sum_f_R0 (f:nat -> R) (N:nat) : R := match N with | O => f 0%nat | S i => sum_f_R0 f i + f (S i) end.",
            "VernacFixpoint",
            "b308110969372ece8463210f3ea2920d32ac2843"
        ],
        [
            "Definition sum_f (s n:nat) (f:nat -> R) : R := sum_f_R0 (fun x:nat => f (x + s)%nat) (n - s).",
            "VernacDefinition",
            "41b9134188bba7bf5f201fccfb4d60d5991a7c47"
        ],
        [
            "Lemma GP_finite : forall (x:R) (n:nat), sum_f_R0 (fun n:nat => x ^ n) n * (x - 1) = x ^ (n + 1) - 1.",
            "VernacStartTheoremProof",
            "fadaa3efe53fc8047efdf86a24976fd01bf0638f"
        ],
        [
            "intros; induction n as [| n Hrecn]; simpl.",
            "VernacExtend",
            "d63596a1f8c998bb00beda1a03f4891f1a290208"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "rewrite Rmult_plus_distr_r; rewrite Hrecn; cut ((n + 1)%nat = S n).",
            "VernacExtend",
            "44e0aca5814bcca1c20091961b1fc09a3045132b"
        ],
        [
            "intro H; rewrite H; simpl; ring.",
            "VernacExtend",
            "9c6df4f268854484ae37ba08498d007c9e3416e2"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sum_f_R0_triangle : forall (x:nat -> R) (n:nat), Rabs (sum_f_R0 x n) <= sum_f_R0 (fun i:nat => Rabs (x i)) n.",
            "VernacStartTheoremProof",
            "8007c411b1ad319d08ff4c22df0a91a6624c49c2"
        ],
        [
            "intro; simple induction n; simpl.",
            "VernacExtend",
            "4839ab8000019b9caf0b170b3e37f8c89529ee36"
        ],
        [
            "unfold Rle; right; reflexivity.",
            "VernacExtend",
            "37eaf209423ac00245c2153d226a7b1dc91b2dc6"
        ],
        [
            "intro m; intro; apply (Rle_trans (Rabs (sum_f_R0 x m + x (S m))) (Rabs (sum_f_R0 x m) + Rabs (x (S m))) (sum_f_R0 (fun i:nat => Rabs (x i)) m + Rabs (x (S m)))).",
            "VernacExtend",
            "0ae8249091311015e84858fa720f69399485db53"
        ],
        [
            "apply Rabs_triang.",
            "VernacExtend",
            "ac95e0693bced827aa4991eb13639b86503a8150"
        ],
        [
            "rewrite Rplus_comm; rewrite (Rplus_comm (sum_f_R0 (fun i:nat => Rabs (x i)) m) (Rabs (x (S m)))); apply Rplus_le_compat_l; assumption.",
            "VernacExtend",
            "10e95822ec7db0200c3eefd4c4037ae28bc02f57"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition R_dist (x y:R) : R := Rabs (x - y).",
            "VernacDefinition",
            "6ecd7503f66f738b1f3deaed4c19456ef69205cc"
        ],
        [
            "Lemma R_dist_pos : forall x y:R, R_dist x y >= 0.",
            "VernacStartTheoremProof",
            "83a65a653867efb50f0a61d94fd9ec76dcc048f5"
        ],
        [
            "intros; unfold R_dist; unfold Rabs; case (Rcase_abs (x - y)); intro l.",
            "VernacExtend",
            "4e90f9375d1927140c524496ac2c75ffe649c1dd"
        ],
        [
            "unfold Rge; left; apply (Ropp_gt_lt_0_contravar (x - y) l).",
            "VernacExtend",
            "689a55e1fd758da0edf582af5ad1510592e21141"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R_dist_sym : forall x y:R, R_dist x y = R_dist y x.",
            "VernacStartTheoremProof",
            "aa8e8d4762a717771a9701b2f8c88c195b60c9b5"
        ],
        [
            "unfold R_dist; intros; split_Rabs; try ring.",
            "VernacExtend",
            "97e35c6a68fc272ec9fd79b794e2775f5cf5350c"
        ],
        [
            "generalize (Ropp_gt_lt_0_contravar (y - x) Hlt0); intro; rewrite (Ropp_minus_distr y x) in H; generalize (Rlt_asym (x - y) 0 Hlt); intro; unfold Rgt in H; exfalso; auto.",
            "VernacExtend",
            "87e12c7977ffdfe1c490d26a83e11d91a9134a1f"
        ],
        [
            "generalize (minus_Rge y x Hge0); intro; generalize (minus_Rge x y Hge); intro; generalize (Rge_antisym x y H0 H); intro; rewrite H1; ring.",
            "VernacExtend",
            "72c53549b3fdbd0da73ec609d3457f5228fa95b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R_dist_refl : forall x y:R, R_dist x y = 0 <-> x = y.",
            "VernacStartTheoremProof",
            "65df44b2a59e9eb845cba77e6a00cae1d0b06343"
        ],
        [
            "unfold R_dist; intros; split_Rabs; split; intros.",
            "VernacExtend",
            "9383687835c9f4b9b24bda3e6db9b759370806d6"
        ],
        [
            "rewrite (Ropp_minus_distr x y) in H; symmetry; apply (Rminus_diag_uniq y x H).",
            "VernacExtend",
            "47ac43ddd0cd993a94c37c1cb7ceedaa77b0b1e7"
        ],
        [
            "rewrite (Ropp_minus_distr x y); generalize (eq_sym H); intro; apply (Rminus_diag_eq y x H0).",
            "VernacExtend",
            "8004537c12a484b717b58f716ab65e307d72c7c5"
        ],
        [
            "apply (Rminus_diag_uniq x y H).",
            "VernacExtend",
            "ce3961702b690286594ab7307e9ad0754157af35"
        ],
        [
            "apply (Rminus_diag_eq x y H).",
            "VernacExtend",
            "eb9b8ce2568e2640ecb6259a2752927bc657d5fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R_dist_eq : forall x:R, R_dist x x = 0.",
            "VernacStartTheoremProof",
            "456ee176e6224afd42685d7d60f7e904f7771c57"
        ],
        [
            "unfold R_dist; intros; split_Rabs; intros; ring.",
            "VernacExtend",
            "3830678095dac4739a10c6976930ee7dab5c32e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R_dist_tri : forall x y z:R, R_dist x y <= R_dist x z + R_dist z y.",
            "VernacStartTheoremProof",
            "5dc419f192028b26b14785529b76dfdf81eef06c"
        ],
        [
            "intros; unfold R_dist; replace (x - y) with (x - z + (z - y)); [ apply (Rabs_triang (x - z) (z - y)) | ring ].",
            "VernacExtend",
            "3ff4041cfb08499c0da890d4842ef7eaa0dd0b39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R_dist_plus : forall a b c d:R, R_dist (a + c) (b + d) <= R_dist a b + R_dist c d.",
            "VernacStartTheoremProof",
            "4ba7af722b2859e5753eb3695c9f6e6c8c659faf"
        ],
        [
            "intros; unfold R_dist; replace (a + c - (b + d)) with (a - b + (c - d)).",
            "VernacExtend",
            "889cd97e3607d6785ab24131118b542ccc8a2cdb"
        ],
        [
            "exact (Rabs_triang (a - b) (c - d)).",
            "VernacExtend",
            "223013f739b76be8af4a203419c259afe91704af"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma R_dist_mult_l : forall a b c, R_dist (a * b) (a * c) = Rabs a * R_dist b c.",
            "VernacStartTheoremProof",
            "4d7822a7fd7281a6eabe0706c9007f427873c8e6"
        ],
        [
            "unfold R_dist.",
            "VernacExtend",
            "9d14879a55d02ad54565968e31b64da7aeb66d97"
        ],
        [
            "intros a b c; rewrite <- Rmult_minus_distr_l, Rabs_mult; reflexivity.",
            "VernacExtend",
            "645a84d4b73ae8c9b476e3e966e09f5cac75bbc6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition infinite_sum (s:nat -> R) (l:R) : Prop := forall eps:R, eps > 0 -> exists N : nat, (forall n:nat, (n >= N)%nat -> R_dist (sum_f_R0 s n) l < eps).",
            "VernacDefinition",
            "52fef0e1917b3975944bad96e5651dac023decab"
        ],
        [
            "Notation infinit_sum := infinite_sum (only parsing).",
            "VernacSyntacticDefinition",
            "9ded66433556ee592ee8768360127f8765ff0891"
        ]
    ],
    "proofs": [
        {
            "name": "INR_fact_neq_0",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intro; red; intro; apply (not_O_INR (fact n) (fact_neq_0 n)); assumption.",
                        "VernacExtend",
                        "4607fbb8f1f55b1b189154ac486b713779c7650a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fact_simpl",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intro; reflexivity.",
                        "VernacExtend",
                        "dc2d3bdaf5fe0de88334762a176f5b2d84487862"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "simpl_fact",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intro; rewrite (Rinv_involutive (INR (fact n)) (INR_fact_neq_0 n)); unfold fact at 1; cbv beta iota; fold fact; rewrite (mult_INR (S n) (fact n)); rewrite (Rinv_mult_distr (INR (S n)) (INR (fact n))).",
                        "VernacExtend",
                        "d67b1b68f7092cb1acdac00b05297784a1ec4d35"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_assoc (/ INR (S n)) (/ INR (fact n)) (INR (fact n))); rewrite (Rinv_l (INR (fact n)) (INR_fact_neq_0 n)); apply (let (H1, H2) := Rmult_ne (/ INR (S n)) in H1).",
                        "VernacExtend",
                        "c6bb74df43dbc4b174431302ec96ff7f3122d000"
                    ]
                },
                {
                    "command": [
                        "apply not_O_INR; auto.",
                        "VernacExtend",
                        "9cca52ce5b967489e89bc46be03ccaef528dd4ae"
                    ]
                },
                {
                    "command": [
                        "apply INR_fact_neq_0.",
                        "VernacExtend",
                        "9f4443217b6f3c8f07648392448a37630452a203"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_O",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_1",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "simpl; auto with real.",
                        "VernacExtend",
                        "b062786ac0dbbfc282b750a40b6651658747aae5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_add",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros x n; elim n; simpl; auto with real.",
                        "VernacExtend",
                        "e2be2cdd1d69bfbbaa6d7d2b7351000aab99667e"
                    ]
                },
                {
                    "command": [
                        "intros n0 H' m; rewrite H'; auto with real.",
                        "VernacExtend",
                        "3571f690be95eb9f89a348d5ce373d5147322117"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rpow_mult_distr",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "intros x y n ; induction n.",
                        "VernacExtend",
                        "dc5ab9b12f15e83fc2632efc937cc029e1a3d4a0"
                    ]
                },
                {
                    "command": [
                        "field.",
                        "VernacExtend",
                        "93f44750d651d466b74a0cc63f88acb56273d533"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "repeat (rewrite Rmult_assoc) ; apply Rmult_eq_compat_l.",
                        "VernacExtend",
                        "af2e69f7eb109fa6852e29bfad3154f6a0a6b92b"
                    ]
                },
                {
                    "command": [
                        "rewrite IHn ; field.",
                        "VernacExtend",
                        "1e9817728c65667003b0157c17a988c4ac4756e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_nonzero",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intro; simple induction n; simpl.",
                        "VernacExtend",
                        "4839ab8000019b9caf0b170b3e37f8c89529ee36"
                    ]
                },
                {
                    "command": [
                        "intro; red; intro; apply R1_neq_R0; assumption.",
                        "VernacExtend",
                        "74bb143d578bfa977666f9209287bff71e25a616"
                    ]
                },
                {
                    "command": [
                        "intros; red; intro; elim (Rmult_integral x (x ^ n0) H1).",
                        "VernacExtend",
                        "1b74485e38f8f5c1e6c8181dd1665025edd4407d"
                    ]
                },
                {
                    "command": [
                        "intro; auto.",
                        "VernacExtend",
                        "c01170981862e9d8608d651ab75e833f7953118c"
                    ]
                },
                {
                    "command": [
                        "apply H; assumption.",
                        "VernacExtend",
                        "7904d623a02884c927ef4e8b66c90cb12eee7c7a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_RN_plus",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros x n; elim n; simpl; auto with real.",
                        "VernacExtend",
                        "e2be2cdd1d69bfbbaa6d7d2b7351000aab99667e"
                    ]
                },
                {
                    "command": [
                        "intros n0 H' m H'0.",
                        "VernacExtend",
                        "a1ec5a9520de179045fa3e942122a1bfd1958baa"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc; rewrite <- H'; auto.",
                        "VernacExtend",
                        "99ad966d410417c8e95dc57882ec6c049c5845b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_lt",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros x n; elim n; simpl; auto with real.",
                        "VernacExtend",
                        "e2be2cdd1d69bfbbaa6d7d2b7351000aab99667e"
                    ]
                },
                {
                    "command": [
                        "intros n0 H' H'0; replace 0 with (x * 0); auto with real.",
                        "VernacExtend",
                        "4ca0226ee2e8ff4af41f24bdfe77279dc44f4afa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_pow_R1",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "intros x n; elim n; simpl; auto with real.",
                        "VernacExtend",
                        "e2be2cdd1d69bfbbaa6d7d2b7351000aab99667e"
                    ]
                },
                {
                    "command": [
                        "intros H' H'0; exfalso; omega.",
                        "VernacExtend",
                        "81222e043465a95299f6941a5f97921b0159cb00"
                    ]
                },
                {
                    "command": [
                        "intros n0; case n0.",
                        "VernacExtend",
                        "e8893eb764401ebc2c9b15af9a1f93373b730591"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Rmult_1_r; auto.",
                        "VernacExtend",
                        "dac6fa12e811d67abc0e547f60dda254a5e57117"
                    ]
                },
                {
                    "command": [
                        "intros n1 H' H'0 H'1.",
                        "VernacExtend",
                        "930da9888da25e2ec02facd4f52d1f4407ef193f"
                    ]
                },
                {
                    "command": [
                        "replace 1 with (1 * 1); auto with real.",
                        "VernacExtend",
                        "fbede96c282509624cc6cea9ac2cf3a578ac3649"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (r2 := x * 1); auto with real.",
                        "VernacExtend",
                        "a566f5362e62328ac5c1051df0af8355f0fe37e7"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_l; auto with real.",
                        "VernacExtend",
                        "3e7233511306c2ec2fb512cc9cfd2a7990f1f973"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (r2 := 1); auto with real.",
                        "VernacExtend",
                        "8aba8bb7d5ef0ec0a1514e8a9af8c0826360b78f"
                    ]
                },
                {
                    "command": [
                        "apply H'; auto with arith.",
                        "VernacExtend",
                        "8886ff1ccd5df04b07ca5dfdc9d432ed415e3791"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rlt_pow",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "intros x n m H' H'0; replace m with (m - n + n)%nat.",
                        "VernacExtend",
                        "60189c2b11dd34740f2f7b931e0e6b6d6f3527fc"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_add.",
                        "VernacExtend",
                        "e7ffb4294c31ded66f1a5f321399a9a5b2326cb2"
                    ]
                },
                {
                    "command": [
                        "pattern (x ^ n) at 1; replace (x ^ n) with (1 * x ^ n); auto with real.",
                        "VernacExtend",
                        "5e8a0e65576c97587a7f1eda8625fa3ab9503795"
                    ]
                },
                {
                    "command": [
                        "apply Rminus_lt.",
                        "VernacExtend",
                        "03430b7f4251862c601af026c550b2f9a73b9396"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (fun y:R => Rmult_comm y (x ^ n)); rewrite <- Rmult_minus_distr_l.",
                        "VernacExtend",
                        "eaaaa119b4e864973d2f31c5031a90571852ed56"
                    ]
                },
                {
                    "command": [
                        "replace 0 with (x ^ n * 0); auto with real.",
                        "VernacExtend",
                        "faceecc8a2cb7371d7d0b377cdd097cf1963eb5a"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_compat_l; auto with real.",
                        "VernacExtend",
                        "3e7233511306c2ec2fb512cc9cfd2a7990f1f973"
                    ]
                },
                {
                    "command": [
                        "apply pow_lt; auto with real.",
                        "VernacExtend",
                        "9ad216b225a170ae221f386c3defeaf4b098c2bc"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (r2 := 1); auto with real.",
                        "VernacExtend",
                        "8aba8bb7d5ef0ec0a1514e8a9af8c0826360b78f"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_minus; auto with real.",
                        "VernacExtend",
                        "692a2803f9567399a9370deba90017f2a755aa96"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_pow_R1; auto with arith.",
                        "VernacExtend",
                        "6550016ce3994b625156602b405fc0175ee918aa"
                    ]
                },
                {
                    "command": [
                        "apply plus_lt_reg_l with (p := n); auto with arith.",
                        "VernacExtend",
                        "cb76b3ea4c5876ecbfb8aa998c95e0a9cebe5589"
                    ]
                },
                {
                    "command": [
                        "rewrite le_plus_minus_r; auto with arith; rewrite <- plus_n_O; auto.",
                        "VernacExtend",
                        "0dfd42f40cd802a43e215b0a458049fef3b4ff47"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm; auto with arith.",
                        "VernacExtend",
                        "5a06a000b92ce0a0d3e37617a7f5cb05c9d509e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_pow_Rmult",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "simple induction n; simpl; trivial.",
                        "VernacExtend",
                        "84f0ce1cf11f8981f77711f906303f188ac380af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tech_pow_Rplus",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "intros; pattern (x ^ a) at 1; rewrite <- (let (H1, H2) := Rmult_ne (x ^ a) in H1); rewrite (Rmult_comm (INR n) (x ^ a)); rewrite <- (Rmult_plus_distr_l (x ^ a) 1 (INR n)); rewrite (Rplus_comm 1 (INR n)); rewrite <- (S_INR n); apply Rmult_comm.",
                        "VernacExtend",
                        "9ee656f0abb863a3f75631a046f0638f42fff11e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "poly",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "intros; elim n.",
                        "VernacExtend",
                        "e1c732204fc2c9d9d3a3b0af2ef59699d18744bc"
                    ]
                },
                {
                    "command": [
                        "simpl; cut (1 + 0 * x = 1).",
                        "VernacExtend",
                        "aef687c3664eeed0d2f896577438a3d56b36bae0"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H0; unfold Rle; right; reflexivity.",
                        "VernacExtend",
                        "14e985382f4457d27ce74de08367aa729fe505f4"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "intros; unfold pow; fold pow; apply (Rle_trans (1 + INR (S n0) * x) ((1 + x) * (1 + INR n0 * x)) ((1 + x) * (1 + x) ^ n0)).",
                        "VernacExtend",
                        "f9a0392f016d3567e57a41024aca309a81a4bad2"
                    ]
                },
                {
                    "command": [
                        "cut ((1 + x) * (1 + INR n0 * x) = 1 + INR (S n0) * x + INR n0 * (x * x)).",
                        "VernacExtend",
                        "c0d7f87634d46ab001c4a6e67ed5c71a70e537a0"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H1; pattern (1 + INR (S n0) * x) at 1; rewrite <- (let (H1, H2) := Rplus_ne (1 + INR (S n0) * x) in H1); apply Rplus_le_compat_l; elim n0; intros.",
                        "VernacExtend",
                        "d53c4383523c08a471df217bad46f65856663392"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Rmult_0_l; unfold Rle; right; auto.",
                        "VernacExtend",
                        "49170d84cfaad4605b897e6af99f07a0067a081a"
                    ]
                },
                {
                    "command": [
                        "unfold Rle; left; generalize Rmult_gt_0_compat; unfold Rgt; intro; fold (Rsqr x); apply (H3 (INR (S n1)) (Rsqr x) (lt_INR_0 (S n1) (lt_O_Sn n1))); fold (x > 0) in H; apply (Rlt_0_sqr x (Rlt_dichotomy_converse x 0 (or_intror (x < 0) H))).",
                        "VernacExtend",
                        "59bfd31dd8ef2773465bd2acea50fcf9e6e75032"
                    ]
                },
                {
                    "command": [
                        "rewrite (S_INR n0); ring.",
                        "VernacExtend",
                        "361a0da03b3e4086168a1cdf2046988294d8fbc8"
                    ]
                },
                {
                    "command": [
                        "unfold Rle in H0; elim H0; intro.",
                        "VernacExtend",
                        "52079c29d7bafbb8a0e24aa4741837208e7d1686"
                    ]
                },
                {
                    "command": [
                        "unfold Rle; left; apply Rmult_lt_compat_l.",
                        "VernacExtend",
                        "685a26e2ff6fd9e846ec5bf5fe34d3f97c64b48b"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm; apply (Rle_lt_0_plus_1 x (Rlt_le 0 x H)).",
                        "VernacExtend",
                        "ebd19c277259288bcd0eef12edd6df031bd8d167"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; unfold Rle; right; trivial.",
                        "VernacExtend",
                        "8091c311a02d3a5033ea7eaec85b3a7caaccb2d1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Power_monotonic",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros x m n H; induction n as [| n Hrecn]; intros; inversion H0.",
                        "VernacExtend",
                        "5cbd665d5a95d43a44b5c5810417185cf5f11a0e"
                    ]
                },
                {
                    "command": [
                        "unfold Rle; right; reflexivity.",
                        "VernacExtend",
                        "37eaf209423ac00245c2153d226a7b1dc91b2dc6"
                    ]
                },
                {
                    "command": [
                        "unfold Rle; right; reflexivity.",
                        "VernacExtend",
                        "37eaf209423ac00245c2153d226a7b1dc91b2dc6"
                    ]
                },
                {
                    "command": [
                        "apply (Rle_trans (Rabs (x ^ m)) (Rabs (x ^ n)) (Rabs (x ^ S n))).",
                        "VernacExtend",
                        "49554c07057fd6a8ea993bebc74dc97412e1f71d"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn; assumption.",
                        "VernacExtend",
                        "09c4bfc615059e1cf9b030ea0c6389838481a775"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Rabs_mult.",
                        "VernacExtend",
                        "294f285cc33720c7ab20f37e7e71fc734c323af9"
                    ]
                },
                {
                    "command": [
                        "pattern (Rabs (x ^ n)) at 1.",
                        "VernacExtend",
                        "96dcc9c9fd7ed368456087e9be7ec53779040f07"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_1_r.",
                        "VernacExtend",
                        "ce14806f50e4260d6add69e3f8476a76794bf681"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rmult_comm (Rabs x) (Rabs (x ^ n))).",
                        "VernacExtend",
                        "4314dfbce31cf655b0eac98dd52d64a4eff124d9"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos.",
                        "VernacExtend",
                        "8e57e214403458a4dc8dafc960971b86cf3b856d"
                    ]
                },
                {
                    "command": [
                        "unfold Rgt in H.",
                        "VernacExtend",
                        "1b3a45ace905efb2dcd7cbf00aa6c3a58e173301"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_le; assumption.",
                        "VernacExtend",
                        "6ea46b5e4ad6d15cd718025b7aa100abf346a511"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "RPow_abs",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "intro; simple induction n; simpl.",
                        "VernacExtend",
                        "4839ab8000019b9caf0b170b3e37f8c89529ee36"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply Rabs_pos_eq; apply Rlt_le; apply Rlt_0_1.",
                        "VernacExtend",
                        "581074c099d26c6d820d56f2b52578ca26284076"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite H; symmetry; apply Rabs_mult.",
                        "VernacExtend",
                        "4b73b5b2e500ae779816a07f8ad3c6b3e3f31b2d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Pow_x_infinity",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "intros; elim (archimed (b * / (Rabs x - 1))); intros; clear H1; cut (exists N : nat, INR N >= b * / (Rabs x - 1)).",
                        "VernacExtend",
                        "aa5c0d9e02320c0e7038c236cb8dc0d3b53c32d9"
                    ]
                },
                {
                    "command": [
                        "intro; elim H1; clear H1; intros; exists x0; intros; apply (Rge_trans (Rabs (x ^ n)) (Rabs (x ^ x0)) b).",
                        "VernacExtend",
                        "3a29a60202889d2cc62cf9c2976ea33db178092b"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Power_monotonic; assumption.",
                        "VernacExtend",
                        "5d781476a6e6adcbe361697f64d31d818c7b6628"
                    ]
                },
                {
                    "command": [
                        "rewrite <- RPow_abs; cut (Rabs x = 1 + (Rabs x - 1)).",
                        "VernacExtend",
                        "391715f68c28c1063c317ccec7f5db91d39b3320"
                    ]
                },
                {
                    "command": [
                        "intro; rewrite H3; apply (Rge_trans ((1 + (Rabs x - 1)) ^ x0) (1 + INR x0 * (Rabs x - 1)) b).",
                        "VernacExtend",
                        "563ca021107ae72ede284e041febb7a77253b929"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply poly; fold (Rabs x - 1 > 0); apply Rgt_minus; assumption.",
                        "VernacExtend",
                        "84cd18f409004e2fd9541727a999563de5820ace"
                    ]
                },
                {
                    "command": [
                        "apply (Rge_trans (1 + INR x0 * (Rabs x - 1)) (INR x0 * (Rabs x - 1)) b).",
                        "VernacExtend",
                        "7895418110fba5c806c18cdbe944a26a5d6bef3f"
                    ]
                },
                {
                    "command": [
                        "apply Rle_ge; apply Rlt_le; rewrite (Rplus_comm 1 (INR x0 * (Rabs x - 1))); pattern (INR x0 * (Rabs x - 1)) at 1; rewrite <- (let (H1, H2) := Rplus_ne (INR x0 * (Rabs x - 1)) in H1); apply Rplus_lt_compat_l; apply Rlt_0_1.",
                        "VernacExtend",
                        "8a20cf594b401494a17fbb9d365976879f6f3a0c"
                    ]
                },
                {
                    "command": [
                        "cut (b = b * / (Rabs x - 1) * (Rabs x - 1)).",
                        "VernacExtend",
                        "11602c1bd0d386f0a60bace587d58b8146bda04e"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite H4; apply Rmult_ge_compat_r.",
                        "VernacExtend",
                        "4606c8e7ac8892e0512d051eee660a315fe47a25"
                    ]
                },
                {
                    "command": [
                        "apply Rge_minus; unfold Rge; left; assumption.",
                        "VernacExtend",
                        "29883b2456883aa4725da9a1e603400354882a83"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_assoc; rewrite Rinv_l.",
                        "VernacExtend",
                        "d3fec85e0db9536e6e55fda3d3761a6d77a82478"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_dichotomy_converse; right; apply Rgt_minus; assumption.",
                        "VernacExtend",
                        "7079eef5a56030228c20c11e53edfbae71218a8a"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "cut ((0 <= up (b * / (Rabs x - 1)))%Z \\/ (up (b * / (Rabs x - 1)) <= 0)%Z).",
                        "VernacExtend",
                        "494771e1f1e5c9698b113506c1732112e28f370c"
                    ]
                },
                {
                    "command": [
                        "intros; elim H1; intro.",
                        "VernacExtend",
                        "d629a06db4729933c3140278d7efdae495e2b618"
                    ]
                },
                {
                    "command": [
                        "elim (IZN (up (b * / (Rabs x - 1))) H2); intros; exists x0; apply (Rge_trans (INR x0) (IZR (up (b * / (Rabs x - 1)))) (b * / (Rabs x - 1))).",
                        "VernacExtend",
                        "4f87fd2effe57d8935dda03cb10b1951c2a943f4"
                    ]
                },
                {
                    "command": [
                        "rewrite INR_IZR_INZ; apply IZR_ge; omega.",
                        "VernacExtend",
                        "c3f31d18e38afdec946f0b168b002ff78b5e104d"
                    ]
                },
                {
                    "command": [
                        "unfold Rge; left; assumption.",
                        "VernacExtend",
                        "c9ab81f92673bf5b1f15596ae0383943ce0c9078"
                    ]
                },
                {
                    "command": [
                        "exists 0%nat; apply (Rge_trans (INR 0) (IZR (up (b * / (Rabs x - 1)))) (b * / (Rabs x - 1))).",
                        "VernacExtend",
                        "495a5cd618861eb2086364b450494de9fe8f33e6"
                    ]
                },
                {
                    "command": [
                        "rewrite INR_IZR_INZ; apply IZR_ge; simpl; omega.",
                        "VernacExtend",
                        "5ffdc84072b4ab96517adae1a01b6e96d3fa509b"
                    ]
                },
                {
                    "command": [
                        "unfold Rge; left; assumption.",
                        "VernacExtend",
                        "c9ab81f92673bf5b1f15596ae0383943ce0c9078"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_ne_zero",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "intros; elim H; reflexivity.",
                        "VernacExtend",
                        "6a8d2fe3ec3cca28e02e295c139069d12e09310b"
                    ]
                },
                {
                    "command": [
                        "intros; simpl; apply Rmult_0_l.",
                        "VernacExtend",
                        "c7e233b0e78e1d98c71f62c5484ed1d6d4b59807"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rinv_pow",
            "line_nb": 167,
            "steps": [
                {
                    "command": [
                        "intros; elim n; simpl.",
                        "VernacExtend",
                        "1aabd1f7435c3bbdd6b58f8e8f76b216ca0773e7"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_1.",
                        "VernacExtend",
                        "262342cc3b146bf2b8cac3ce28f22df5ae06648f"
                    ]
                },
                {
                    "command": [
                        "intro m; intro; rewrite Rinv_mult_distr.",
                        "VernacExtend",
                        "dfbb52ac07d7660a1a9c8f569aa32f23fd6a51c0"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; reflexivity; assumption.",
                        "VernacExtend",
                        "77eaa1b20a5775c8d89517e0707e742af33d5698"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero; assumption.",
                        "VernacExtend",
                        "6d4db41cbe558f394b4e9accb20ef61b0da0c671"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_lt_1_zero",
            "line_nb": 175,
            "steps": [
                {
                    "command": [
                        "intros; elim (Req_dec x 0); intro.",
                        "VernacExtend",
                        "86f6e47d44c0a747d383d1bcf91c6c4976320b37"
                    ]
                },
                {
                    "command": [
                        "exists 1%nat; rewrite H1; intros n GE; rewrite pow_ne_zero.",
                        "VernacExtend",
                        "718337a9ec2c17e701a0ccc310362038601e556f"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_R0; assumption.",
                        "VernacExtend",
                        "ecbc11b0192c04678920063e101e6b2de12b658f"
                    ]
                },
                {
                    "command": [
                        "inversion GE; auto.",
                        "VernacExtend",
                        "26ab38796b591ab70a6c11f74c7a5f3dbc0b11b4"
                    ]
                },
                {
                    "command": [
                        "cut (Rabs (/ x) > 1).",
                        "VernacExtend",
                        "a5e34ba9f75de486dbee2c50189bbc6689fc3f67"
                    ]
                },
                {
                    "command": [
                        "intros; elim (Pow_x_infinity (/ x) H2 (/ y + 1)); intros N.",
                        "VernacExtend",
                        "2b39c96d955db361ceab607ed23487e11cafc7de"
                    ]
                },
                {
                    "command": [
                        "exists N; intros; rewrite <- (Rinv_involutive y).",
                        "VernacExtend",
                        "5cb988269a30775428905aa002e35f7263d5c3ab"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rinv_involutive (Rabs (x ^ n))).",
                        "VernacExtend",
                        "3ba0f4b229397b84bca089e99c48b0168ab97893"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_lt_contravar.",
                        "VernacExtend",
                        "39f1015e834f9c2b39a61c50e6b9c8cf8a29f32a"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat.",
                        "VernacExtend",
                        "d7abdc8c3031a09ca2712c9563d7ecf89b4d477e"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos_lt.",
                        "VernacExtend",
                        "e7789cb0a3c08fb3fbbda456620a8022b26229ce"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero.",
                        "VernacExtend",
                        "282744fa14f20635385d7e1ac0d1a961c143f970"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rabs_Rinv.",
                        "VernacExtend",
                        "90bccb4c2edbe375bae6d85508d1d91269ac60a9"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_pow.",
                        "VernacExtend",
                        "1cd6ddb072cabcdc713a5ff64063727fd797ecd8"
                    ]
                },
                {
                    "command": [
                        "apply (Rlt_le_trans (/ y) (/ y + 1) (Rabs ((/ x) ^ n))).",
                        "VernacExtend",
                        "b5231fe58ab1fdac8a8c34be93829c99d37678e6"
                    ]
                },
                {
                    "command": [
                        "pattern (/ y) at 1.",
                        "VernacExtend",
                        "7876c2c81a21649af3eb594cf785a058ad17f2ae"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (let (H1, H2) := Rplus_ne (/ y) in H1).",
                        "VernacExtend",
                        "9980fed2884841125db9c871044831446a763321"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_lt_compat_l.",
                        "VernacExtend",
                        "cfadddfd242496b5b9297d5ae6868b0dbc12aeee"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_0_1.",
                        "VernacExtend",
                        "c3f675388bf844e0740197fd71afa66e5eef091d"
                    ]
                },
                {
                    "command": [
                        "apply Rge_le.",
                        "VernacExtend",
                        "eae8ed3f063c0c64fc52ba03563e73be950936a6"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero.",
                        "VernacExtend",
                        "282744fa14f20635385d7e1ac0d1a961c143f970"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_no_R0.",
                        "VernacExtend",
                        "8d37b098d9cb0f050cfd8b29c49d318c2b960566"
                    ]
                },
                {
                    "command": [
                        "apply pow_nonzero.",
                        "VernacExtend",
                        "282744fa14f20635385d7e1ac0d1a961c143f970"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_dichotomy_converse.",
                        "VernacExtend",
                        "e2390c6672b4ba01a7c287eaa7d370afb109d97e"
                    ]
                },
                {
                    "command": [
                        "right; unfold Rgt; assumption.",
                        "VernacExtend",
                        "d4b276309997340c7814486fcc7fb728c5e4218d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Rinv_involutive 1).",
                        "VernacExtend",
                        "d8a312e32487860e91712d48cfe7e3ecd1d41966"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Rinv.",
                        "VernacExtend",
                        "37f0a3ac5c309484aec5354295705ced53683ada"
                    ]
                },
                {
                    "command": [
                        "unfold Rgt; apply Rinv_lt_contravar.",
                        "VernacExtend",
                        "42ca8f9d9f00b75bdbf6b5642a4b92fa754b4304"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_0_compat.",
                        "VernacExtend",
                        "c57ce258f04cdf6d200ca0efb8bd86c726436bf7"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos_lt.",
                        "VernacExtend",
                        "e7789cb0a3c08fb3fbbda456620a8022b26229ce"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_1; apply Rlt_0_1.",
                        "VernacExtend",
                        "b8b52d6154bc5d8393a6720cb529d4754e9b5546"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_1; assumption.",
                        "VernacExtend",
                        "f35ac00f0d826709920371d914cc5cd70943d212"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "red; intro; apply R1_neq_R0; assumption.",
                        "VernacExtend",
                        "16b34234c9dd2baa9880c561327165f0a0219008"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_R1",
            "line_nb": 221,
            "steps": [
                {
                    "command": [
                        "intros r n H'.",
                        "VernacExtend",
                        "aca8d63046bb438c06e7ad6d67f03970639c2b70"
                    ]
                },
                {
                    "command": [
                        "case (Req_dec (Rabs r) 1); auto; intros H'1.",
                        "VernacExtend",
                        "9558add436a47cd008c248eabba1e8bd87f5d947"
                    ]
                },
                {
                    "command": [
                        "case (Rdichotomy _ _ H'1); intros H'2.",
                        "VernacExtend",
                        "dece732fa326cf4670b7e472865b4fadf046aa40"
                    ]
                },
                {
                    "command": [
                        "generalize H'; case n; auto.",
                        "VernacExtend",
                        "97317aeefed428d3e73e68f9211bf9e0b9b007b4"
                    ]
                },
                {
                    "command": [
                        "intros n0 H'0.",
                        "VernacExtend",
                        "50b454170cbd422687e5ac30aabea090299273bb"
                    ]
                },
                {
                    "command": [
                        "cut (r <> 0); [ intros Eq1 | idtac ].",
                        "VernacExtend",
                        "5bef856d1bd2a1abc8febcb6f6aaaf3fab7fcd07"
                    ]
                },
                {
                    "command": [
                        "cut (Rabs r <> 0); [ intros Eq2 | apply Rabs_no_R0 ]; auto.",
                        "VernacExtend",
                        "59c4be1578e75e1b939e90737227c26bfdd617d0"
                    ]
                },
                {
                    "command": [
                        "absurd (Rabs (/ r) ^ 0 < Rabs (/ r) ^ S n0); auto.",
                        "VernacExtend",
                        "9b438cdb8f9927e289232d469ac7ed3279fdcd5a"
                    ]
                },
                {
                    "command": [
                        "replace (Rabs (/ r) ^ S n0) with 1.",
                        "VernacExtend",
                        "f3ece889b485995fdaa437c13ec00c5903a1ce74"
                    ]
                },
                {
                    "command": [
                        "simpl; apply Rlt_irrefl; auto.",
                        "VernacExtend",
                        "6184e68e630ec16c7b3013e4c25f7f7f1d673568"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Rinv; auto.",
                        "VernacExtend",
                        "769c16c5580e209cd299e9f2d60e88a0f3e50b21"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rinv_pow; auto.",
                        "VernacExtend",
                        "176bb2effd6749e3c9dfd45180e05b67770a56da"
                    ]
                },
                {
                    "command": [
                        "rewrite RPow_abs; auto.",
                        "VernacExtend",
                        "006c71abdaccdfbd74440cb75bc45ae03f6be8f7"
                    ]
                },
                {
                    "command": [
                        "rewrite H'0; rewrite Rabs_right; auto with real rorders.",
                        "VernacExtend",
                        "4aa5862f34f388cb122450cd52bd778e72eae6ae"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_pow; auto with arith.",
                        "VernacExtend",
                        "cd0e7927979f99be7a8d346a5b7758fd7ee668e4"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Rinv; auto.",
                        "VernacExtend",
                        "769c16c5580e209cd299e9f2d60e88a0f3e50b21"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_lt_reg_l with (r := Rabs r).",
                        "VernacExtend",
                        "65e0fe8ffee5c3afba4b5d4ebb25818c91e543e0"
                    ]
                },
                {
                    "command": [
                        "case (Rabs_pos r); auto.",
                        "VernacExtend",
                        "251b3e34a0992625231ddc157cfa68911e0262df"
                    ]
                },
                {
                    "command": [
                        "intros H'3; case Eq2; auto.",
                        "VernacExtend",
                        "4d7b1543b388701f37dc288f3b4bb511ea4b4063"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; rewrite Rinv_r; auto with real.",
                        "VernacExtend",
                        "93344c00bb59e850ddee2f5b4af0be2cd124b5b7"
                    ]
                },
                {
                    "command": [
                        "red; intro; absurd (r ^ S n0 = 1); auto.",
                        "VernacExtend",
                        "aa9196d3df7e719d14b97bed22a078140016c9bb"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite H; rewrite Rmult_0_l; auto with real.",
                        "VernacExtend",
                        "0667e652d348ef2cd029cdaf89aea80293fcf58f"
                    ]
                },
                {
                    "command": [
                        "generalize H'; case n; auto.",
                        "VernacExtend",
                        "97317aeefed428d3e73e68f9211bf9e0b9b007b4"
                    ]
                },
                {
                    "command": [
                        "intros n0 H'0.",
                        "VernacExtend",
                        "50b454170cbd422687e5ac30aabea090299273bb"
                    ]
                },
                {
                    "command": [
                        "cut (r <> 0); [ intros Eq1 | auto with real ].",
                        "VernacExtend",
                        "c1d907a2c3ffd4d0ad39638e608e21386e71cb99"
                    ]
                },
                {
                    "command": [
                        "cut (Rabs r <> 0); [ intros Eq2 | apply Rabs_no_R0 ]; auto.",
                        "VernacExtend",
                        "59c4be1578e75e1b939e90737227c26bfdd617d0"
                    ]
                },
                {
                    "command": [
                        "absurd (Rabs r ^ 0 < Rabs r ^ S n0); auto with real arith.",
                        "VernacExtend",
                        "ca6ce4c82a4ce1b97cc6ea7a2de5c46cfa1d558d"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite RPow_abs; rewrite H'0; simpl; auto with real.",
                        "VernacExtend",
                        "94594c4ce4565efd9e37bd826b9c35584e4954ea"
                    ]
                },
                {
                    "command": [
                        "red; intro; absurd (r ^ S n0 = 1); auto.",
                        "VernacExtend",
                        "aa9196d3df7e719d14b97bed22a078140016c9bb"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite H; rewrite Rmult_0_l; auto with real.",
                        "VernacExtend",
                        "0667e652d348ef2cd029cdaf89aea80293fcf58f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_Rsqr",
            "line_nb": 253,
            "steps": [
                {
                    "command": [
                        "intros; induction n as [| n Hrecn].",
                        "VernacExtend",
                        "d8127da965164ab3db77421604b758d5eb34a150"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "replace (2 * S n)%nat with (S (S (2 * n))).",
                        "VernacExtend",
                        "0e979a91e133bbb49e0c693ceaa8b83423f512bf"
                    ]
                },
                {
                    "command": [
                        "replace (x ^ S (S (2 * n))) with (x * x * x ^ (2 * n)).",
                        "VernacExtend",
                        "ec100ed63a1ab4eaf69bc76e17e42e7feb20fbe2"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecn; reflexivity.",
                        "VernacExtend",
                        "049ebd1a80910b9244f1a6b4f2b342f7ea3ffe33"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_le",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "intros; induction n as [| n Hrecn].",
                        "VernacExtend",
                        "d8127da965164ab3db77421604b758d5eb34a150"
                    ]
                },
                {
                    "command": [
                        "simpl; left; apply Rlt_0_1.",
                        "VernacExtend",
                        "60cca351b90688d6aaa83958e02617de6acd0a2e"
                    ]
                },
                {
                    "command": [
                        "simpl; apply Rmult_le_pos; assumption.",
                        "VernacExtend",
                        "5eadce68b64fd126f840d61a34fdb0ae820b4daf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_1_even",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "intro; induction n as [| n Hrecn].",
                        "VernacExtend",
                        "e436d2d69f81fe61484702aa2043459f6821c2af"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "replace (2 * S n)%nat with (2 + 2 * n)%nat by ring.",
                        "VernacExtend",
                        "6986ed3973513617489f61b8a7866c1beae683aa"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_add; rewrite Hrecn; simpl; ring.",
                        "VernacExtend",
                        "59a6710fcf37d4ab5cbe76faf209d79c345ad3e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_1_odd",
            "line_nb": 273,
            "steps": [
                {
                    "command": [
                        "intro; replace (S (2 * n)) with (2 * n + 1)%nat by ring.",
                        "VernacExtend",
                        "76473a51bf14e125f1bbe05315deb47c42eea2b1"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_add; rewrite pow_1_even; simpl; ring.",
                        "VernacExtend",
                        "87f273d22f72aa9b9182dd8da801a603faf72c23"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_1_abs",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "intro; induction n as [| n Hrecn].",
                        "VernacExtend",
                        "e436d2d69f81fe61484702aa2043459f6821c2af"
                    ]
                },
                {
                    "command": [
                        "simpl; apply Rabs_R1.",
                        "VernacExtend",
                        "3c190b063aaeac863e3e9bca80dc2d791a377199"
                    ]
                },
                {
                    "command": [
                        "replace (S n) with (n + 1)%nat; [ rewrite pow_add | ring ].",
                        "VernacExtend",
                        "0b0ba0905d5df11351c5787e07a0907bc7bf615a"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecn; rewrite Rmult_1_l; simpl; rewrite Rmult_1_r.",
                        "VernacExtend",
                        "c39ccf01e5eba599e328f2d547c539c3d7a32634"
                    ]
                },
                {
                    "command": [
                        "change (-1) with (-(1)).",
                        "VernacExtend",
                        "1f60c1a6cdb67b8d172aedacd166faedbafbdc55"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_Ropp; apply Rabs_R1.",
                        "VernacExtend",
                        "4645673d9a579c42e1b049f69a6b570011650390"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_mult",
            "line_nb": 286,
            "steps": [
                {
                    "command": [
                        "intros; induction n2 as [| n2 Hrecn2].",
                        "VernacExtend",
                        "ec07087e18c8068afcad60d851cf7a6449f42aa8"
                    ]
                },
                {
                    "command": [
                        "simpl; replace (n1 * 0)%nat with 0%nat; [ reflexivity | ring ].",
                        "VernacExtend",
                        "df3b4625f5e114bacef067b26bad680014883c99"
                    ]
                },
                {
                    "command": [
                        "replace (n1 * S n2)%nat with (n1 * n2 + n1)%nat.",
                        "VernacExtend",
                        "0ee8e216aed03c253628d1cfffeeed2ec4c1bd81"
                    ]
                },
                {
                    "command": [
                        "replace (S n2) with (n2 + 1)%nat by ring.",
                        "VernacExtend",
                        "9cb3af09f6d1e09ec8a4154c86fdf9614b3e0f09"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite pow_add.",
                        "VernacExtend",
                        "8f66788cbb05f7250d2b2e706a687f6f96ec2d87"
                    ]
                },
                {
                    "command": [
                        "rewrite Hrecn2.",
                        "VernacExtend",
                        "a0f10d49f19145956f6417847c98913ead033c5a"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_incr",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "right; reflexivity.",
                        "VernacExtend",
                        "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "elim H; intros.",
                        "VernacExtend",
                        "79e1c8a1444242deed6d2876e3fe7bb2cf051f26"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (y * x ^ n).",
                        "VernacExtend",
                        "fc067fa7cceab7f001650e8e425089984d5255e1"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- (Rmult_comm (x ^ n)).",
                        "VernacExtend",
                        "38ec6eb84daf7c91e1b04af7bffcb00a703a8ef7"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "apply pow_le; assumption.",
                        "VernacExtend",
                        "95f5e2732198152bd7da9b9abc920b79022ea046"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with x; assumption.",
                        "VernacExtend",
                        "560d88213848c197ead481a6be7f3a2ac8f5b93b"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_R1_Rle",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "induction k as [| k Hreck].",
                        "VernacExtend",
                        "30c8085420df46c7f001b104c0e0269082363c49"
                    ]
                },
                {
                    "command": [
                        "right; reflexivity.",
                        "VernacExtend",
                        "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (x * 1).",
                        "VernacExtend",
                        "fca2907a744eabafe7488a04e808553e8ab89e65"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; assumption.",
                        "VernacExtend",
                        "035507d12dca88b716bc3bd5a29b9a28d7038962"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "left; apply Rlt_le_trans with 1; [ apply Rlt_0_1 | assumption ].",
                        "VernacExtend",
                        "6d0bb79adb9af4d01e23dc7351de900de983ac2e"
                    ]
                },
                {
                    "command": [
                        "exact Hreck.",
                        "VernacExtend",
                        "7016b021694380128eba0e3a29eefd1738574e12"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_pow",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "replace n with (n - m + m)%nat.",
                        "VernacExtend",
                        "90f16287a267cef6415f75defa737aeae18949d0"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_add.",
                        "VernacExtend",
                        "e7ffb4294c31ded66f1a5f321399a9a5b2326cb2"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm.",
                        "VernacExtend",
                        "fd520335d31c715c2f686e2bdc0b380c493b04c0"
                    ]
                },
                {
                    "command": [
                        "pattern (x ^ m) at 1; rewrite <- Rmult_1_r.",
                        "VernacExtend",
                        "2052c453e887566eeaf0a872f04899df8e78d4e3"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "apply pow_le; left; apply Rlt_le_trans with 1; [ apply Rlt_0_1 | assumption ].",
                        "VernacExtend",
                        "733075b330db1d86c5469cbdfb0bdb5485f320e4"
                    ]
                },
                {
                    "command": [
                        "apply pow_R1_Rle; assumption.",
                        "VernacExtend",
                        "4fb9fc3d147b0ef171d16480ae05fed1df812f59"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "symmetry ; apply le_plus_minus; assumption.",
                        "VernacExtend",
                        "48d95756f975c474a1d5bb47b18f7bfd149b769c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow1",
            "line_nb": 335,
            "steps": [
                {
                    "command": [
                        "intro; induction n as [| n Hrecn].",
                        "VernacExtend",
                        "e436d2d69f81fe61484702aa2043459f6821c2af"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "simpl; rewrite Hrecn; rewrite Rmult_1_r; reflexivity.",
                        "VernacExtend",
                        "60d0f137647e0d9e965eee944ad0c033d9f95d32"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_Rabs",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "intros; induction n as [| n Hrecn].",
                        "VernacExtend",
                        "d8127da965164ab3db77421604b758d5eb34a150"
                    ]
                },
                {
                    "command": [
                        "right; reflexivity.",
                        "VernacExtend",
                        "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
                    ]
                },
                {
                    "command": [
                        "simpl; destruct (Rcase_abs x) as [Hlt|Hle].",
                        "VernacExtend",
                        "f5011975b3bbba00e30130085b8397a015a1ff7c"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (Rabs (x * x ^ n)).",
                        "VernacExtend",
                        "f88e5401b8dee29b43c81aa3437a4ccb776eb3df"
                    ]
                },
                {
                    "command": [
                        "apply RRle_abs.",
                        "VernacExtend",
                        "1333b00626244e19099bec7e0de632062c4070a3"
                    ]
                },
                {
                    "command": [
                        "rewrite Rabs_mult.",
                        "VernacExtend",
                        "0a976c5fce10a63ed58fa2e07dd76a462e6697c3"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_pos.",
                        "VernacExtend",
                        "8e57e214403458a4dc8dafc960971b86cf3b856d"
                    ]
                },
                {
                    "command": [
                        "right; symmetry; apply RPow_abs.",
                        "VernacExtend",
                        "47004863d1dc47962cbaa0d1dfa87a887237c341"
                    ]
                },
                {
                    "command": [
                        "pattern (Rabs x) at 1; rewrite (Rabs_right x Hle); apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "bd82b1ad25be16e367e5c3a20a0788ffc63c679a"
                    ]
                },
                {
                    "command": [
                        "apply Rge_le; exact Hle.",
                        "VernacExtend",
                        "ee9c8947567a765bf9cceeb7f54a73188f24ab79"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_maj_Rabs",
            "line_nb": 354,
            "steps": [
                {
                    "command": [
                        "intros; cut (0 <= x).",
                        "VernacExtend",
                        "6c4d669c674edc5217aa8a440ca1ee955fac4404"
                    ]
                },
                {
                    "command": [
                        "intro; apply Rle_trans with (Rabs y ^ n).",
                        "VernacExtend",
                        "b3735f61609182584c6ed88388da3cd81c0daf56"
                    ]
                },
                {
                    "command": [
                        "apply pow_Rabs.",
                        "VernacExtend",
                        "f7260ca2a849aff6ca5ee7c01fddef9e62716132"
                    ]
                },
                {
                    "command": [
                        "induction n as [| n Hrecn].",
                        "VernacExtend",
                        "81d1278a66d994c9ef1229ce58d1d47680f3003e"
                    ]
                },
                {
                    "command": [
                        "right; reflexivity.",
                        "VernacExtend",
                        "8c3bb7dc68da0fd9db3afd3e0cbaa04356e7152c"
                    ]
                },
                {
                    "command": [
                        "simpl; apply Rle_trans with (x * Rabs y ^ n).",
                        "VernacExtend",
                        "2b9c1b150d14dab9579f8abcd94c338dac2dcfae"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite <- (Rmult_comm (Rabs y ^ n)).",
                        "VernacExtend",
                        "82cce22b71909232aa57d0150529a155eec9c294"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "apply pow_le; apply Rabs_pos.",
                        "VernacExtend",
                        "8e3e4ca1c2ff39b216e1d667c9322879b6c09e89"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "apply H0.",
                        "VernacExtend",
                        "c75b3371fc84f2aae811de7e80b1bdb43e4d249a"
                    ]
                },
                {
                    "command": [
                        "apply Hrecn.",
                        "VernacExtend",
                        "f8554c139e89e414af9bdff2dbae4f085b4da693"
                    ]
                },
                {
                    "command": [
                        "apply Rle_trans with (Rabs y); [ apply Rabs_pos | exact H ].",
                        "VernacExtend",
                        "8b86087b73746fef7354fe4a37527c230b88f5b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rsqr_pow2",
            "line_nb": 370,
            "steps": [
                {
                    "command": [
                        "intros; unfold Rsqr; simpl; rewrite Rmult_1_r; reflexivity.",
                        "VernacExtend",
                        "f5abc8feb33eea8ffc26dbbea836ae9add667369"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "intP",
            "line_nb": 378,
            "steps": [
                {
                    "command": [
                        "destruct x as [|p|p].",
                        "VernacExtend",
                        "76e5c5fc2852962afe654eed7b40c09a515b22aa"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now apply ZintNull.",
                        "VernacExtend",
                        "d78bc2e335c103860b828006a9fe300ad42b8a5e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <-positive_nat_Z at 2.",
                        "VernacExtend",
                        "c78d7bc60d682378407a496a59f5d03f6ac1db1d"
                    ]
                },
                {
                    "command": [
                        "apply ZintPos.",
                        "VernacExtend",
                        "7a9c08e4f9b5219d16aefb4d021fd7dc51bf2e7b"
                    ]
                },
                {
                    "command": [
                        "now rewrite positive_nat_Z.",
                        "VernacExtend",
                        "399afbb7eb11bbfe911d24ea859cd4248f26e91d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Pos2Z.opp_pos.",
                        "VernacExtend",
                        "474fbabf620cd5fc71665a0f9a106439a1479b86"
                    ]
                },
                {
                    "command": [
                        "rewrite <-positive_nat_Z at 2.",
                        "VernacExtend",
                        "c78d7bc60d682378407a496a59f5d03f6ac1db1d"
                    ]
                },
                {
                    "command": [
                        "apply ZintNeg.",
                        "VernacExtend",
                        "80a6abc365927cc82f4802d799bc1fe18869b9bb"
                    ]
                },
                {
                    "command": [
                        "now rewrite positive_nat_Z.",
                        "VernacExtend",
                        "399afbb7eb11bbfe911d24ea859cd4248f26e91d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zpower_NR0",
            "line_nb": 395,
            "steps": [
                {
                    "command": [
                        "induction n; unfold Zpower_nat; simpl; auto with zarith.",
                        "VernacExtend",
                        "f34e668146f9ce6b71292dc32296fca83e526c00"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powerRZ_O",
            "line_nb": 398,
            "steps": [
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powerRZ_1",
            "line_nb": 401,
            "steps": [
                {
                    "command": [
                        "simpl; auto with real.",
                        "VernacExtend",
                        "b062786ac0dbbfc282b750a40b6651658747aae5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powerRZ_NOR",
            "line_nb": 404,
            "steps": [
                {
                    "command": [
                        "destruct z; simpl; auto with real.",
                        "VernacExtend",
                        "42e0088637db9c64ccaa00d3c9177c60de1d9554"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powerRZ_pos_sub",
            "line_nb": 407,
            "steps": [
                {
                    "command": [
                        "intro Hx.",
                        "VernacExtend",
                        "218b6ef98d0605f2e1745b1d78b2fbbb6c4b9a85"
                    ]
                },
                {
                    "command": [
                        "rewrite Z.pos_sub_spec.",
                        "VernacExtend",
                        "ad39ea5e69a6135dd31841448750ef09af08dff9"
                    ]
                },
                {
                    "command": [
                        "case Pos.compare_spec; intro H; simpl.",
                        "VernacExtend",
                        "91e21d6107b12fbe4aaa68f213bbf5d368cef742"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "subst; auto with real.",
                        "VernacExtend",
                        "60b470ceb219ee2d85ca25ca50d97c569eeb7de4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos2Nat.inj_sub by trivial.",
                        "VernacExtend",
                        "b2ffd8b60a5a2593e27f9206913ba6fc9ce690ef"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos2Nat.inj_lt in H.",
                        "VernacExtend",
                        "e940d4b476567acf18b87ad7a0d602d361e94078"
                    ]
                },
                {
                    "command": [
                        "rewrite (pow_RN_plus x _ (Pos.to_nat n)) by auto with real.",
                        "VernacExtend",
                        "d3beb2a5b5284a06d3384f7e788da7ca7784b860"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm, le_plus_minus_r by auto with real.",
                        "VernacExtend",
                        "13501479fa5cd3d7558434255e36ef2e13c7b50b"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_mult_distr, Rinv_involutive; auto with real.",
                        "VernacExtend",
                        "193b9d0f4b60b0d28e33e62bc422c000f8346297"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos2Nat.inj_sub by trivial.",
                        "VernacExtend",
                        "b2ffd8b60a5a2593e27f9206913ba6fc9ce690ef"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos2Nat.inj_lt in H.",
                        "VernacExtend",
                        "e940d4b476567acf18b87ad7a0d602d361e94078"
                    ]
                },
                {
                    "command": [
                        "rewrite (pow_RN_plus x _ (Pos.to_nat m)) by auto with real.",
                        "VernacExtend",
                        "5c24838e39fbbe87bf39609ce8d8bd42e402d795"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm, le_plus_minus_r by auto with real.",
                        "VernacExtend",
                        "13501479fa5cd3d7558434255e36ef2e13c7b50b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powerRZ_add",
            "line_nb": 426,
            "steps": [
                {
                    "command": [
                        "intros x [|n|n] [|m|m]; simpl; intros; auto with real.",
                        "VernacExtend",
                        "f2073c6671c01995eefd64d3e4ba9f2e68757ff4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos2Nat.inj_add; auto with real.",
                        "VernacExtend",
                        "9a10b7dd66d387f65292949dfabb08d5e462837e"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now apply powerRZ_pos_sub.",
                        "VernacExtend",
                        "60a2e71e3eb227c1f03538e1c7e8e36659fde588"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_comm.",
                        "VernacExtend",
                        "fd520335d31c715c2f686e2bdc0b380c493b04c0"
                    ]
                },
                {
                    "command": [
                        "now apply powerRZ_pos_sub.",
                        "VernacExtend",
                        "60a2e71e3eb227c1f03538e1c7e8e36659fde588"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Pos2Nat.inj_add; auto with real.",
                        "VernacExtend",
                        "9a10b7dd66d387f65292949dfabb08d5e462837e"
                    ]
                },
                {
                    "command": [
                        "rewrite pow_add; auto with real.",
                        "VernacExtend",
                        "f4e0cafe9101fab09ae85b24f96e9d5b98f58699"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_mult_distr; apply pow_nonzero; auto.",
                        "VernacExtend",
                        "c46822a24404b239bd61682e06e42806c69053f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zpower_pos_powerRZ",
            "line_nb": 452,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Zpower_pos_nat; simpl.",
                        "VernacExtend",
                        "142dd6c2f594c0ec369a7c362a65e04571f06737"
                    ]
                },
                {
                    "command": [
                        "induction (Pos.to_nat m).",
                        "VernacExtend",
                        "47a7f43efa206a3a75aa5963667f5515bc14032a"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "unfold Zpower_nat; simpl.",
                        "VernacExtend",
                        "fd0b619c491c0534a52462fa3550bdf69de16628"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_IZR.",
                        "VernacExtend",
                        "ee24eb6c50dab4e9cfa2fa287c1816561718b942"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- IHn0.",
                        "VernacExtend",
                        "829004bee582f1ee914f0388a5548e5aeea8c46f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powerRZ_lt",
            "line_nb": 461,
            "steps": [
                {
                    "command": [
                        "intros x z; case z; simpl; auto with real.",
                        "VernacExtend",
                        "0c196df68be32880915c24c5dd31b9074a2ae655"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powerRZ_le",
            "line_nb": 465,
            "steps": [
                {
                    "command": [
                        "intros x z H'; apply Rlt_le; auto with real.",
                        "VernacExtend",
                        "65708e1828904319734c42441b9a52c21618a71b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Zpower_nat_powerRZ_absolu",
            "line_nb": 469,
            "steps": [
                {
                    "command": [
                        "intros n m; case m; simpl; auto with zarith.",
                        "VernacExtend",
                        "32686db710bd9318737334598688376592896bd2"
                    ]
                },
                {
                    "command": [
                        "intros p H'; elim (Pos.to_nat p); simpl; auto with zarith.",
                        "VernacExtend",
                        "0f9a29e01393ef339870a9b5d90f45393c624e59"
                    ]
                },
                {
                    "command": [
                        "intros n0 H'0; rewrite <- H'0; simpl; auto with zarith.",
                        "VernacExtend",
                        "0ca2ce00a99f7681ad0061f73bbddb5560e8f34b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_IZR; auto.",
                        "VernacExtend",
                        "0cc02a194e6bc67301d007e480f31c805dae02fe"
                    ]
                },
                {
                    "command": [
                        "intros p H'; absurd (0 <= Zneg p)%Z; auto with zarith.",
                        "VernacExtend",
                        "af61b105f40378e53f7e7ad49876e1ab8bfd3342"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powerRZ_R1",
            "line_nb": 476,
            "steps": [
                {
                    "command": [
                        "intros n; case n; simpl; auto.",
                        "VernacExtend",
                        "ab60bbcc487ba06f4100c769c45a0ed978fc32e8"
                    ]
                },
                {
                    "command": [
                        "intros p; elim (Pos.to_nat p); simpl; auto; intros n0 H'; rewrite H'; ring.",
                        "VernacExtend",
                        "480622d8fd43cb5b63d7137b80b6b2f11e675b31"
                    ]
                },
                {
                    "command": [
                        "intros p; elim (Pos.to_nat p); simpl.",
                        "VernacExtend",
                        "8c1ce6e1547e9c149082672b64724026dd9c2a82"
                    ]
                },
                {
                    "command": [
                        "exact Rinv_1.",
                        "VernacExtend",
                        "bf4a525e5a06dbedd66f17aec2f3f22b88c2b7f4"
                    ]
                },
                {
                    "command": [
                        "intros n1 H'; rewrite Rinv_mult_distr; try rewrite Rinv_1; try rewrite H'; auto with real.",
                        "VernacExtend",
                        "54e508ba0e9a6c9aebb38d2779b4a261b8ea0d84"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pow_powerRZ",
            "line_nb": 484,
            "steps": [
                {
                    "command": [
                        "induction n; [easy|simpl].",
                        "VernacExtend",
                        "790a9c5c390239f506cc57f1196d955651d411d2"
                    ]
                },
                {
                    "command": [
                        "now rewrite SuccNat2Pos.id_succ.",
                        "VernacExtend",
                        "2e107725458a2ed64352c9b05ce6e64cd314f2a8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powerRZ_ind",
            "line_nb": 488,
            "steps": [
                {
                    "command": [
                        "intros ? ? ? x m.",
                        "VernacExtend",
                        "928734fe3909aea4de161bb87b4c6db93e9e4cb2"
                    ]
                },
                {
                    "command": [
                        "destruct (intP m) as [Hm|n Hm|n Hm].",
                        "VernacExtend",
                        "3dea77518744862272e2f0c0f9bf5af7455ef2d7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- pow_powerRZ.",
                        "VernacExtend",
                        "93c5301d86592b8fd1af45284d5cb4589e733153"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold powerRZ.",
                        "VernacExtend",
                        "fff2d56e67f46a0e26030afd3ee7e592388289f9"
                    ]
                },
                {
                    "command": [
                        "destruct n as [|n]; [ easy |].",
                        "VernacExtend",
                        "14dc37bfff3f5e95efef71773f86b15b7a2fb682"
                    ]
                },
                {
                    "command": [
                        "rewrite Nat2Z.inj_succ, <- Zpos_P_of_succ_nat, Pos2Z.opp_pos.",
                        "VernacExtend",
                        "d38be09ee16b204f020818ecc3b1b3267770c999"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Pos2Z.opp_pos, <- positive_nat_Z.",
                        "VernacExtend",
                        "cf7044e2cc4ee57d3f3a4a61745feca63da23fb8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powerRZ_inv",
            "line_nb": 501,
            "steps": [
                {
                    "command": [
                        "intros; destruct (intP alpha).",
                        "VernacExtend",
                        "698a416dc6b6bf1e271da7ee7bef6104398941d5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now simpl; rewrite Rinv_1.",
                        "VernacExtend",
                        "6275e45fa3fe89ecc6db991ffa5bd6e591e062e3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite <-!pow_powerRZ, ?Rinv_pow, ?pow_powerRZ.",
                        "VernacExtend",
                        "bd33fde60be5041e6cbd9c400473626419c29772"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold powerRZ.",
                        "VernacExtend",
                        "fff2d56e67f46a0e26030afd3ee7e592388289f9"
                    ]
                },
                {
                    "command": [
                        "destruct (- n).",
                        "VernacExtend",
                        "33b877e7994eb145f26db86be5dd25d8b14628c4"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rinv_1.",
                        "VernacExtend",
                        "9fffae577e64b2076f824dc546c4011983ee138d"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rinv_pow.",
                        "VernacExtend",
                        "3e525755ac8ae42c719dbdb44df9f19c00155b57"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now rewrite <-Rinv_pow.",
                        "VernacExtend",
                        "8b3d1cb3e0f053e4b25972f45d9b9e5276c09636"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powerRZ_neg",
            "line_nb": 517,
            "steps": [
                {
                    "command": [
                        "intros [|n|n] H ; simpl.",
                        "VernacExtend",
                        "a231ee46647c3bc5bd8f4ac205e394f7c9246cee"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "easy.",
                        "VernacExtend",
                        "ef1368621ae14ed4e378e6e1c58fbee46db9a962"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rinv_pow.",
                        "VernacExtend",
                        "3e525755ac8ae42c719dbdb44df9f19c00155b57"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_pow by now apply Rinv_neq_0_compat.",
                        "VernacExtend",
                        "7ee889a2466dab9ac2d3744bcc4bfe3f5989ad29"
                    ]
                },
                {
                    "command": [
                        "now rewrite Rinv_involutive.",
                        "VernacExtend",
                        "55b1b92c0d337152d7d329372f6e103cd9f31a88"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "powerRZ_mult_distr",
            "line_nb": 527,
            "steps": [
                {
                    "command": [
                        "intros m x0 y0 Hmxy.",
                        "VernacExtend",
                        "51fca77fe8785ecbeda9078ceed9b900d51d7bad"
                    ]
                },
                {
                    "command": [
                        "destruct (intP m) as [ | | n Hm ].",
                        "VernacExtend",
                        "9fb665819c3a33c0231e8f2cc89b8e2adb864952"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now simpl; rewrite Rmult_1_l.",
                        "VernacExtend",
                        "b9617879ca40b281d00ee2507c65bcf4a3f628a7"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- !pow_powerRZ, Rpow_mult_distr.",
                        "VernacExtend",
                        "8653f5ebcae1870226ba30e2df8a2a8f19be21b6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct Hmxy as [H|H].",
                        "VernacExtend",
                        "a3b4e117f572479b3cf8161eabb34e5380370bf0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert(m = 0) as -> by now omega.",
                        "VernacExtend",
                        "b38edb3fe412542544a73679f4e042ce4507ad47"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- Hm, Rmult_1_l.",
                        "VernacExtend",
                        "a6a0a2331ef88a1704a6f663733243a033990cc3"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "assert(x0 <> 0)%R by now intros ->; apply H; rewrite Rmult_0_l.",
                        "VernacExtend",
                        "e52ddc518c2ec16cfd230e0e3752d528163575c9"
                    ]
                },
                {
                    "command": [
                        "assert(y0 <> 0)%R by now intros ->; apply H; rewrite Rmult_0_r.",
                        "VernacExtend",
                        "d63c9ad2d074f5a2abbd3b99e7c7b2aec7584d43"
                    ]
                },
                {
                    "command": [
                        "rewrite !powerRZ_neg by assumption.",
                        "VernacExtend",
                        "397535db84f55266fc63b74dd1eeb21eb530be90"
                    ]
                },
                {
                    "command": [
                        "rewrite Rinv_mult_distr by assumption.",
                        "VernacExtend",
                        "9bfbfca8c240dfaac7921cfba9438a454f499be0"
                    ]
                },
                {
                    "command": [
                        "now rewrite <- !pow_powerRZ, Rpow_mult_distr.",
                        "VernacExtend",
                        "8653f5ebcae1870226ba30e2df8a2a8f19be21b6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "GP_finite",
            "line_nb": 555,
            "steps": [
                {
                    "command": [
                        "intros; induction n as [| n Hrecn]; simpl.",
                        "VernacExtend",
                        "d63596a1f8c998bb00beda1a03f4891f1a290208"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_plus_distr_r; rewrite Hrecn; cut ((n + 1)%nat = S n).",
                        "VernacExtend",
                        "44e0aca5814bcca1c20091961b1fc09a3045132b"
                    ]
                },
                {
                    "command": [
                        "intro H; rewrite H; simpl; ring.",
                        "VernacExtend",
                        "9c6df4f268854484ae37ba08498d007c9e3416e2"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sum_f_R0_triangle",
            "line_nb": 562,
            "steps": [
                {
                    "command": [
                        "intro; simple induction n; simpl.",
                        "VernacExtend",
                        "4839ab8000019b9caf0b170b3e37f8c89529ee36"
                    ]
                },
                {
                    "command": [
                        "unfold Rle; right; reflexivity.",
                        "VernacExtend",
                        "37eaf209423ac00245c2153d226a7b1dc91b2dc6"
                    ]
                },
                {
                    "command": [
                        "intro m; intro; apply (Rle_trans (Rabs (sum_f_R0 x m + x (S m))) (Rabs (sum_f_R0 x m) + Rabs (x (S m))) (sum_f_R0 (fun i:nat => Rabs (x i)) m + Rabs (x (S m)))).",
                        "VernacExtend",
                        "0ae8249091311015e84858fa720f69399485db53"
                    ]
                },
                {
                    "command": [
                        "apply Rabs_triang.",
                        "VernacExtend",
                        "ac95e0693bced827aa4991eb13639b86503a8150"
                    ]
                },
                {
                    "command": [
                        "rewrite Rplus_comm; rewrite (Rplus_comm (sum_f_R0 (fun i:nat => Rabs (x i)) m) (Rabs (x (S m)))); apply Rplus_le_compat_l; assumption.",
                        "VernacExtend",
                        "10e95822ec7db0200c3eefd4c4037ae28bc02f57"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R_dist_pos",
            "line_nb": 570,
            "steps": [
                {
                    "command": [
                        "intros; unfold R_dist; unfold Rabs; case (Rcase_abs (x - y)); intro l.",
                        "VernacExtend",
                        "4e90f9375d1927140c524496ac2c75ffe649c1dd"
                    ]
                },
                {
                    "command": [
                        "unfold Rge; left; apply (Ropp_gt_lt_0_contravar (x - y) l).",
                        "VernacExtend",
                        "689a55e1fd758da0edf582af5ad1510592e21141"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R_dist_sym",
            "line_nb": 575,
            "steps": [
                {
                    "command": [
                        "unfold R_dist; intros; split_Rabs; try ring.",
                        "VernacExtend",
                        "97e35c6a68fc272ec9fd79b794e2775f5cf5350c"
                    ]
                },
                {
                    "command": [
                        "generalize (Ropp_gt_lt_0_contravar (y - x) Hlt0); intro; rewrite (Ropp_minus_distr y x) in H; generalize (Rlt_asym (x - y) 0 Hlt); intro; unfold Rgt in H; exfalso; auto.",
                        "VernacExtend",
                        "87e12c7977ffdfe1c490d26a83e11d91a9134a1f"
                    ]
                },
                {
                    "command": [
                        "generalize (minus_Rge y x Hge0); intro; generalize (minus_Rge x y Hge); intro; generalize (Rge_antisym x y H0 H); intro; rewrite H1; ring.",
                        "VernacExtend",
                        "72c53549b3fdbd0da73ec609d3457f5228fa95b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R_dist_refl",
            "line_nb": 580,
            "steps": [
                {
                    "command": [
                        "unfold R_dist; intros; split_Rabs; split; intros.",
                        "VernacExtend",
                        "9383687835c9f4b9b24bda3e6db9b759370806d6"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ropp_minus_distr x y) in H; symmetry; apply (Rminus_diag_uniq y x H).",
                        "VernacExtend",
                        "47ac43ddd0cd993a94c37c1cb7ceedaa77b0b1e7"
                    ]
                },
                {
                    "command": [
                        "rewrite (Ropp_minus_distr x y); generalize (eq_sym H); intro; apply (Rminus_diag_eq y x H0).",
                        "VernacExtend",
                        "8004537c12a484b717b58f716ab65e307d72c7c5"
                    ]
                },
                {
                    "command": [
                        "apply (Rminus_diag_uniq x y H).",
                        "VernacExtend",
                        "ce3961702b690286594ab7307e9ad0754157af35"
                    ]
                },
                {
                    "command": [
                        "apply (Rminus_diag_eq x y H).",
                        "VernacExtend",
                        "eb9b8ce2568e2640ecb6259a2752927bc657d5fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R_dist_eq",
            "line_nb": 587,
            "steps": [
                {
                    "command": [
                        "unfold R_dist; intros; split_Rabs; intros; ring.",
                        "VernacExtend",
                        "3830678095dac4739a10c6976930ee7dab5c32e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R_dist_tri",
            "line_nb": 590,
            "steps": [
                {
                    "command": [
                        "intros; unfold R_dist; replace (x - y) with (x - z + (z - y)); [ apply (Rabs_triang (x - z) (z - y)) | ring ].",
                        "VernacExtend",
                        "3ff4041cfb08499c0da890d4842ef7eaa0dd0b39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R_dist_plus",
            "line_nb": 593,
            "steps": [
                {
                    "command": [
                        "intros; unfold R_dist; replace (a + c - (b + d)) with (a - b + (c - d)).",
                        "VernacExtend",
                        "889cd97e3607d6785ab24131118b542ccc8a2cdb"
                    ]
                },
                {
                    "command": [
                        "exact (Rabs_triang (a - b) (c - d)).",
                        "VernacExtend",
                        "223013f739b76be8af4a203419c259afe91704af"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "R_dist_mult_l",
            "line_nb": 598,
            "steps": [
                {
                    "command": [
                        "unfold R_dist.",
                        "VernacExtend",
                        "9d14879a55d02ad54565968e31b64da7aeb66d97"
                    ]
                },
                {
                    "command": [
                        "intros a b c; rewrite <- Rmult_minus_distr_l, Rabs_mult; reflexivity.",
                        "VernacExtend",
                        "645a84d4b73ae8c9b476e3e966e09f5cac75bbc6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}