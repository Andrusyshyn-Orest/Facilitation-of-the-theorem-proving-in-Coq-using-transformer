{
    "filename": "theories/FSets/FMapFacts.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Bool DecidableType DecidableTypeEx OrderedType Morphisms.",
            "VernacRequire",
            "777c35447c7752df99b3656faa23b28a36b31dec"
        ],
        [
            "Require Export FMapInterface.",
            "VernacRequire",
            "5bb26edfe018e95f958c3634d82d9b232a3ef0cc"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Hint Extern 1 (Equivalence _) => constructor; congruence.",
            "VernacHints",
            "af25ddf8b6bf130b7eac73e1b116f9e1afd7ac07"
        ],
        [
            "Module WFacts_fun (E:DecidableType)(Import M:WSfun E).",
            "VernacDefineModule",
            "e4461b02a54853d2a2c851ae46cc7da4a4b0d3e4"
        ],
        [
            "Notation option_map := option_map (compat \"8.7\").",
            "VernacSyntacticDefinition",
            "388ab10b474be4dd4911b61392bd8a055c11d4d3"
        ],
        [
            "Notation eq_dec := E.eq_dec.",
            "VernacSyntacticDefinition",
            "a4d55c0f69914b4426e894a06e106ded8ec6bf43"
        ],
        [
            "Definition eqb x y := if eq_dec x y then true else false.",
            "VernacDefinition",
            "52b47f58b61ae0de545d85cad60422f9ac3c3fcd"
        ],
        [
            "Lemma eq_bool_alt : forall b b', b=b' <-> (b=true <-> b'=true).",
            "VernacStartTheoremProof",
            "ef975b5f780daaeecc87bbdb58c52936906a6727"
        ],
        [
            "destruct b; destruct b'; intuition.",
            "VernacExtend",
            "1b9a6b2d10db3306fa76aa599d3033937f2dfc0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_option_alt : forall (elt:Type)(o o':option elt), o=o' <-> (forall e, o=Some e <-> o'=Some e).",
            "VernacStartTheoremProof",
            "67e6419713579aff927b343ba71eeaad71f2738e"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "subst; split; auto.",
            "VernacExtend",
            "c451ef2914ab67806aed8494e25bb2724f9ace83"
        ],
        [
            "destruct o; destruct o'; try rewrite H; auto.",
            "VernacExtend",
            "e549e42d92ca278e051be41eb31edaf384fe5f19"
        ],
        [
            "symmetry; rewrite <- H; auto.",
            "VernacExtend",
            "8cc0d78aeee2a3af794d0c5aece2ce147fe8d241"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MapsTo_fun : forall (elt:Type) m x (e e':elt), MapsTo x e m -> MapsTo x e' m -> e=e'.",
            "VernacStartTheoremProof",
            "3fe540194a00dc3e2d9b8b7447337c5f019f3f51"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (find_1 H) (find_1 H0); clear H H0.",
            "VernacExtend",
            "9e09435722b7e3f1204a911b20537ae8f07d602f"
        ],
        [
            "intros; rewrite H in H0; injection H0; auto.",
            "VernacExtend",
            "0591548e1edceecda9c1b4febb133929016e0fcc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section IffSpec.",
            "VernacBeginSection",
            "a687caa5473599636ee985e7e4fdee84fe5a27d7"
        ],
        [
            "Variable elt elt' elt'': Type.",
            "VernacAssumption",
            "bf8f6f82bf5fcf2b225f5a782e20a1205b1ec879"
        ],
        [
            "Implicit Type m: t elt.",
            "VernacReserve",
            "d4f53d0a39ec20b73e2612cacb69ed5dddf67a6b"
        ],
        [
            "Implicit Type x y z: key.",
            "VernacReserve",
            "5bb55cca2da16e804194a848cbb3211ed02f0531"
        ],
        [
            "Implicit Type e: elt.",
            "VernacReserve",
            "ac06a64eb104c51e778df522bd57ad4df3e47a12"
        ],
        [
            "Lemma In_iff : forall m x y, E.eq x y -> (In x m <-> In y m).",
            "VernacStartTheoremProof",
            "7a03ee5032e0f6a0be5d1908124271a1db0bcdd0"
        ],
        [
            "unfold In.",
            "VernacExtend",
            "d7a2e438ac145b96769372b3253da28246b60614"
        ],
        [
            "split; intros (e0,H0); exists e0.",
            "VernacExtend",
            "2cabfe6b1e58fe8d78cd5bd9218f1036f27d7e10"
        ],
        [
            "apply (MapsTo_1 H H0); auto.",
            "VernacExtend",
            "13dfd5788416e613a852b2e39c20901d365c3f4b"
        ],
        [
            "apply (MapsTo_1 (E.eq_sym H) H0); auto.",
            "VernacExtend",
            "2630cefb40fcfe5657d3909dc3423c23e959e88d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MapsTo_iff : forall m x y e, E.eq x y -> (MapsTo x e m <-> MapsTo y e m).",
            "VernacStartTheoremProof",
            "061bd2987631a1efffe82e77614951429ad4d6cb"
        ],
        [
            "split; apply MapsTo_1; auto.",
            "VernacExtend",
            "18d192e37beaee639d99b1582c6986f286634a69"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_in_iff : forall m x, In x m <-> mem x m = true.",
            "VernacStartTheoremProof",
            "2c4647af13dc37e81957d8f363ae6b7d14da2d1c"
        ],
        [
            "split; [apply mem_1|apply mem_2].",
            "VernacExtend",
            "5794dfe848ef63c1fec96232cc173747b36467c1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_mem_in_iff : forall m x, ~In x m <-> mem x m = false.",
            "VernacStartTheoremProof",
            "c8d3dc3fea581ceaa1b79a020b66ac2be6fc894f"
        ],
        [
            "intros; rewrite mem_in_iff; destruct (mem x m); intuition.",
            "VernacExtend",
            "ab5729bc6e96f399b4550683c87c8b528bc00e09"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma In_dec : forall m x, { In x m } + { ~ In x m }.",
            "VernacStartTheoremProof",
            "5eabc011e0291f4e33f155dc51c5b69dbbf38598"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (mem_in_iff m x).",
            "VernacExtend",
            "a567d7fcd6a9bbdb6a60a576a8923b2c692e58fb"
        ],
        [
            "destruct (mem x m); [left|right]; intuition.",
            "VernacExtend",
            "19e91a721a9ba10858cd0538c2bd34b15d14a0b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_mapsto_iff : forall m x e, MapsTo x e m <-> find x m = Some e.",
            "VernacStartTheoremProof",
            "d09d4b97748eb2b5b0b65a2bb50b8bd3a6aaf92b"
        ],
        [
            "split; [apply find_1|apply find_2].",
            "VernacExtend",
            "e556f7f6034a6a665a187c1965d61a83e2e15c38"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_find_in_iff : forall m x, ~In x m <-> find x m = None.",
            "VernacStartTheoremProof",
            "d0a168db9e528f9f5ed67d6ae7030d0f7934d396"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "rewrite eq_option_alt.",
            "VernacExtend",
            "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
        ],
        [
            "intro e.",
            "VernacExtend",
            "a775c5443e87e23a1cd85766bdbcdaad211332a3"
        ],
        [
            "rewrite <- find_mapsto_iff.",
            "VernacExtend",
            "7e18f77b48a54ac1959f52bc3c2365848dcb8b13"
        ],
        [
            "split; try discriminate.",
            "VernacExtend",
            "b9a0e4944f458b52a9e45f100ef8b1a7a5b136f6"
        ],
        [
            "intro H'; elim H; exists e; auto.",
            "VernacExtend",
            "02a42631cda0e9edf2a4f98d1406de6ec8159cdf"
        ],
        [
            "intros (e,He); rewrite find_mapsto_iff,H in He; discriminate.",
            "VernacExtend",
            "54ab2cd265153c3314c07ba2ac31133229e9da0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma in_find_iff : forall m x, In x m <-> find x m <> None.",
            "VernacStartTheoremProof",
            "a4bc8584d2851e8626d2dac0ee7d1fe7a6ee49a8"
        ],
        [
            "intros; rewrite <- not_find_in_iff, mem_in_iff.",
            "VernacExtend",
            "c7d61538f9b34e98cd7cd3eac3b16afc469df25d"
        ],
        [
            "destruct mem; intuition.",
            "VernacExtend",
            "6fe9f47bad425d21fb6725e2e80a4dedebf8bbb4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_iff : forall m m' cmp, Equivb cmp m m' <-> equal cmp m m' = true.",
            "VernacStartTheoremProof",
            "4b7e00d424deb750d7710d2dbc99fb2f7b971a67"
        ],
        [
            "split; [apply equal_1|apply equal_2].",
            "VernacExtend",
            "af6ac885a8e41815098c08832b7e4ac4e98e7c40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_mapsto_iff : forall x e, MapsTo x e (empty elt) <-> False.",
            "VernacStartTheoremProof",
            "345245f887ecff8a4294c1ee5f4aaceaa347e0ed"
        ],
        [
            "intuition; apply (empty_1 H).",
            "VernacExtend",
            "06d54bc3b9a5742dfdb40f00963915d07e65bb48"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_in_iff : forall x, In x (empty elt) <-> False.",
            "VernacStartTheoremProof",
            "6a6e08a4d597100bead59bb5713bf7a05e04ec89"
        ],
        [
            "unfold In.",
            "VernacExtend",
            "d7a2e438ac145b96769372b3253da28246b60614"
        ],
        [
            "split; [intros (e,H); rewrite empty_mapsto_iff in H|]; intuition.",
            "VernacExtend",
            "1ba198ae906ff406c4ba917abea35b2da6054dea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_empty_iff : forall m, Empty m <-> is_empty m = true.",
            "VernacStartTheoremProof",
            "60b02b0a353ef84baccf5efcedbd1d500c42eb4b"
        ],
        [
            "split; [apply is_empty_1|apply is_empty_2].",
            "VernacExtend",
            "db4f7020fdf78d6004bc5e87c72f46ef0a390de6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_mapsto_iff : forall m x y e e', MapsTo y e' (add x e m) <-> (E.eq x y /\\ e=e') \\/ (~E.eq x y /\\ MapsTo y e' m).",
            "VernacStartTheoremProof",
            "141e465031c789cc3da6b6db0cb20fc69c44c4d6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "destruct (eq_dec x y); [left|right].",
            "VernacExtend",
            "3a607b1ef4d9de4bbae5b3b619d62d2ab9e587f5"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "symmetry; apply (MapsTo_fun (e':=e) H); auto with map.",
            "VernacExtend",
            "02acf3e767eceb41747c0abe3566a03414800e8b"
        ],
        [
            "split; auto; apply add_3 with x e; auto.",
            "VernacExtend",
            "2cda182b3e347b995473693a7d884d1a5856480a"
        ],
        [
            "subst; auto with map.",
            "VernacExtend",
            "9d1a19c0751a7eb28172d1f9be8466d90ba9f74a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_in_iff : forall m x y e, In y (add x e m) <-> E.eq x y \\/ In y m.",
            "VernacStartTheoremProof",
            "79eee271a3a8a7c9274f7fc7058697da929090ba"
        ],
        [
            "unfold In; split.",
            "VernacExtend",
            "e54898e96030855959ba32f1484eaed9fd86298a"
        ],
        [
            "intros (e',H).",
            "VernacExtend",
            "1546ace5175bc3c1d6729bcc63e581462f8291eb"
        ],
        [
            "destruct (eq_dec x y) as [E|E]; auto.",
            "VernacExtend",
            "f5041975e34803394e7f376978a8cd2dd802c6d7"
        ],
        [
            "right; exists e'; auto.",
            "VernacExtend",
            "4e38887429b5c1974aabe3888a2648812bbe8bc5"
        ],
        [
            "apply (add_3 E H).",
            "VernacExtend",
            "437fbacc5d5032ee0eb4aa95ba261cd618f50b5f"
        ],
        [
            "destruct (eq_dec x y) as [E|E]; auto.",
            "VernacExtend",
            "f5041975e34803394e7f376978a8cd2dd802c6d7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "exists e; apply add_1; auto.",
            "VernacExtend",
            "51a7b6df5cb91f4e81e8292d8f38a479c57fa796"
        ],
        [
            "intros [H|(e',H)].",
            "VernacExtend",
            "22bff9bfb95077c9c20c05dd7319b9f7ddf8c84a"
        ],
        [
            "destruct E; auto.",
            "VernacExtend",
            "b6aefff988ff931796367be679098def877a45b6"
        ],
        [
            "exists e'; apply add_2; auto.",
            "VernacExtend",
            "95fe0f997a686f3196d33f83976b910f0e9a203e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_neq_mapsto_iff : forall m x y e e', ~ E.eq x y -> (MapsTo y e' (add x e m) <-> MapsTo y e' m).",
            "VernacStartTheoremProof",
            "c90fbf60d497222f8e9d867f863c4bc6a68f199f"
        ],
        [
            "split; [apply add_3|apply add_2]; auto.",
            "VernacExtend",
            "18f022774569e792759491d247cbd643af118ac1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_neq_in_iff : forall m x y e, ~ E.eq x y -> (In y (add x e m) <-> In y m).",
            "VernacStartTheoremProof",
            "f736c1a15383b2e19bdaa1e182bc3d7f01a23106"
        ],
        [
            "split; intros (e',H0); exists e'.",
            "VernacExtend",
            "c785d63bdfc7d678dab12082574200f9f605b315"
        ],
        [
            "apply (add_3 H H0).",
            "VernacExtend",
            "e7a544050322bd424b80f02d59bce4e5ffe2495b"
        ],
        [
            "apply add_2; auto.",
            "VernacExtend",
            "8663103388d6bf3c5509b91030359b3dfe3426fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_mapsto_iff : forall m x y e, MapsTo y e (remove x m) <-> ~E.eq x y /\\ MapsTo y e m.",
            "VernacStartTheoremProof",
            "46e063b98c222c375c6ecd84a9dd4dd60dabf1f2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert (In y (remove x m)) by (exists e; auto).",
            "VernacExtend",
            "cc06f4839c181f517e24ae9bbec828480d8cfb5b"
        ],
        [
            "intro H1; apply (remove_1 H1 H0).",
            "VernacExtend",
            "079882f4eeaac1ad3fad369519f492dd90f0a6f6"
        ],
        [
            "apply remove_3 with x; auto.",
            "VernacExtend",
            "04eea3fd74778c1b0521520829bdf26ad4771920"
        ],
        [
            "apply remove_2; intuition.",
            "VernacExtend",
            "99911fe4f0a3a26a26114413a17cee47960239ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_in_iff : forall m x y, In y (remove x m) <-> ~E.eq x y /\\ In y m.",
            "VernacStartTheoremProof",
            "9e8c660f2d7ba275621657c9045f9744a82b66f0"
        ],
        [
            "unfold In; split.",
            "VernacExtend",
            "e54898e96030855959ba32f1484eaed9fd86298a"
        ],
        [
            "intros (e,H).",
            "VernacExtend",
            "26b7a6683908c9527a49cac9ac0b829b0f9d9dca"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "assert (In y (remove x m)) by (exists e; auto).",
            "VernacExtend",
            "cc06f4839c181f517e24ae9bbec828480d8cfb5b"
        ],
        [
            "intro H1; apply (remove_1 H1 H0).",
            "VernacExtend",
            "079882f4eeaac1ad3fad369519f492dd90f0a6f6"
        ],
        [
            "exists e; apply remove_3 with x; auto.",
            "VernacExtend",
            "19f721b77323a109db2ceb75dbc10e27773e8906"
        ],
        [
            "intros (H,(e,H0)); exists e; apply remove_2; auto.",
            "VernacExtend",
            "b21da9eabf676ae1d02339e638345d2620b510d5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_neq_mapsto_iff : forall m x y e, ~ E.eq x y -> (MapsTo y e (remove x m) <-> MapsTo y e m).",
            "VernacStartTheoremProof",
            "2067f3958d12ea5ef5ef264ec31c02efc6a3d8ea"
        ],
        [
            "split; [apply remove_3|apply remove_2]; auto.",
            "VernacExtend",
            "d33fa68307e85e2cf8b2cbd758bf095d773e3c26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_neq_in_iff : forall m x y, ~ E.eq x y -> (In y (remove x m) <-> In y m).",
            "VernacStartTheoremProof",
            "9a4899cd52028ba04909d2318bc320a6dc81a671"
        ],
        [
            "split; intros (e',H0); exists e'.",
            "VernacExtend",
            "c785d63bdfc7d678dab12082574200f9f605b315"
        ],
        [
            "apply (remove_3 H0).",
            "VernacExtend",
            "e727637d97d5fa9b1febafb608935edfc7eeff4f"
        ],
        [
            "apply remove_2; auto.",
            "VernacExtend",
            "463be37842a1e4d891d71849ec899cdd80228832"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_mapsto_iff : forall m x e, MapsTo x e m <-> InA (@eq_key_elt _) (x,e) (elements m).",
            "VernacStartTheoremProof",
            "e6c8252f0784327868bcf0618f30dd401b1da6fe"
        ],
        [
            "split; [apply elements_1 | apply elements_2].",
            "VernacExtend",
            "11b177e7e10f07330eb1e0bd939d67d5c0aa0320"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_in_iff : forall m x, In x m <-> exists e, InA (@eq_key_elt _) (x,e) (elements m).",
            "VernacStartTheoremProof",
            "e2775d3048f5c6f882ec0bfa4375f8479f772882"
        ],
        [
            "unfold In; split; intros (e,H); exists e; [apply elements_1 | apply elements_2]; auto.",
            "VernacExtend",
            "db64b7eb007b0744360f94ad0ed97c9e2064cfb3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_mapsto_iff : forall m x b (f : elt -> elt'), MapsTo x b (map f m) <-> exists a, b = f a /\\ MapsTo x a m.",
            "VernacStartTheoremProof",
            "0af458c3f5ecbae049aedd7405a25487fd5b3445"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "case_eq (find x m); intros.",
            "VernacExtend",
            "ffd164e20a1af7b3d5c82ccac45d044379f151e3"
        ],
        [
            "exists e.",
            "VernacExtend",
            "4e644c830fdbbe811077e17f446c7832b57a4f89"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply (MapsTo_fun (m:=map f m) (x:=x)); auto with map.",
            "VernacExtend",
            "08ef31a0ac401c9d2f6bd6de6f49115f58b86ea2"
        ],
        [
            "apply find_2; auto with map.",
            "VernacExtend",
            "3053f738d0a49ed24c57117df0ee8a7b1b3101f9"
        ],
        [
            "assert (In x (map f m)) by (exists b; auto).",
            "VernacExtend",
            "96d19663d0133ecf7d65d87545a8d0c9ff13ad25"
        ],
        [
            "destruct (map_2 H1) as (a,H2).",
            "VernacExtend",
            "cb88fa1f55f28e9631e4c8bcc1ba8410e4fbc1a6"
        ],
        [
            "rewrite (find_1 H2) in H; discriminate.",
            "VernacExtend",
            "8d75204ea79d15963e0ee40ce26f307eb42e79aa"
        ],
        [
            "intros (a,(H,H0)).",
            "VernacExtend",
            "d3b447d1498118511c6baa2f40a0e912c832a444"
        ],
        [
            "subst b; auto with map.",
            "VernacExtend",
            "f59596ba84c7a5bf0468381cadf90264a0ece164"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_in_iff : forall m x (f : elt -> elt'), In x (map f m) <-> In x m.",
            "VernacStartTheoremProof",
            "c4bb8a0923985408d9d2ce670ead74df00270f38"
        ],
        [
            "split; intros; eauto with map.",
            "VernacExtend",
            "29ca2f9244fc04de9a218312bed96341e6c4deec"
        ],
        [
            "destruct H as (a,H).",
            "VernacExtend",
            "11f0ad535963beef2ed8dd11a59f8c5b484d01c6"
        ],
        [
            "exists (f a); auto with map.",
            "VernacExtend",
            "f441bf1eff701b901606dca8765f2745ec99ea20"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapi_in_iff : forall m x (f:key->elt->elt'), In x (mapi f m) <-> In x m.",
            "VernacStartTheoremProof",
            "4959b4a60b3731a238129fd54471e3b5be130a9f"
        ],
        [
            "split; intros; eauto with map.",
            "VernacExtend",
            "29ca2f9244fc04de9a218312bed96341e6c4deec"
        ],
        [
            "destruct H as (a,H).",
            "VernacExtend",
            "11f0ad535963beef2ed8dd11a59f8c5b484d01c6"
        ],
        [
            "destruct (mapi_1 f H) as (y,(H0,H1)).",
            "VernacExtend",
            "6be1db6d9321f32722fb41d406d3739a8e54d1a9"
        ],
        [
            "exists (f y a); auto.",
            "VernacExtend",
            "95bd7a9b361af57162bee27be610a8f649b7b8c3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapi_inv : forall m x b (f : key -> elt -> elt'), MapsTo x b (mapi f m) -> exists a y, E.eq y x /\\ b = f y a /\\ MapsTo x a m.",
            "VernacStartTheoremProof",
            "d1029d97e6dd24019e220e026c971d31421acc06"
        ],
        [
            "intros; case_eq (find x m); intros.",
            "VernacExtend",
            "69d9e5bc3f1ce38f46e9b91da7448c4cf13422bb"
        ],
        [
            "exists e.",
            "VernacExtend",
            "4e644c830fdbbe811077e17f446c7832b57a4f89"
        ],
        [
            "destruct (@mapi_1 _ _ m x e f) as (y,(H1,H2)).",
            "VernacExtend",
            "0bbcc7217e86a1f1b1525258daa63c3bcfdf1cf7"
        ],
        [
            "apply find_2; auto with map.",
            "VernacExtend",
            "3053f738d0a49ed24c57117df0ee8a7b1b3101f9"
        ],
        [
            "exists y; repeat split; auto with map.",
            "VernacExtend",
            "938afd8311ed9d81675e96dbe972b05ba53f02fa"
        ],
        [
            "apply (MapsTo_fun (m:=mapi f m) (x:=x)); auto with map.",
            "VernacExtend",
            "9d5bbb72fe4393a2501950f4248ec36b309d611b"
        ],
        [
            "assert (In x (mapi f m)) by (exists b; auto).",
            "VernacExtend",
            "1c6a5e3aa2f23e6fcf06ab6b3c87df8b4cc92700"
        ],
        [
            "destruct (mapi_2 H1) as (a,H2).",
            "VernacExtend",
            "f5be4763e8cac2f1f6e0347f0a6f0a2c5c42fb75"
        ],
        [
            "rewrite (find_1 H2) in H0; discriminate.",
            "VernacExtend",
            "3c1c66d944e28ad73b17545d6813f6193ea5b74b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapi_1bis : forall m x e (f:key->elt->elt'), (forall x y e, E.eq x y -> f x e = f y e) -> MapsTo x e m -> MapsTo x (f x e) (mapi f m).",
            "VernacStartTheoremProof",
            "6269f612892afab1c2f211be7cff577ee8396b1d"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (mapi_1 f H0) as (y,(H1,H2)).",
            "VernacExtend",
            "e35abcf4cdb0ff29180e5d52dc59f5941fab9ea3"
        ],
        [
            "replace (f x e) with (f y e) by auto.",
            "VernacExtend",
            "64aa3ab70efa871ca262e3a4a37132df901aa8a1"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapi_mapsto_iff : forall m x b (f:key->elt->elt'), (forall x y e, E.eq x y -> f x e = f y e) -> (MapsTo x b (mapi f m) <-> exists a, b = f x a /\\ MapsTo x a m).",
            "VernacStartTheoremProof",
            "87031755266fb604dd3e0aeee93d160980d4dfa9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (mapi_inv H0) as (a,(y,(H1,(H2,H3)))).",
            "VernacExtend",
            "c73c3eee24e2cbedd16ac73d2993c6bbd05ac5e2"
        ],
        [
            "exists a; split; auto.",
            "VernacExtend",
            "6ced52e045930ee310d935c747875e269f31e154"
        ],
        [
            "subst b; auto.",
            "VernacExtend",
            "84e0a1b88448ef208ec31c5f0813b0018a3cacec"
        ],
        [
            "intros (a,(H0,H1)).",
            "VernacExtend",
            "b406bcde4c672cf1678c518f3614e7fd3937ed60"
        ],
        [
            "subst b.",
            "VernacExtend",
            "f6a3780afda85f3eb20e4cd9f3da775990bbc7d3"
        ],
        [
            "apply mapi_1bis; auto.",
            "VernacExtend",
            "a807b599a037799a7f47605066964673314ea599"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IffSpec.",
            "VernacEndSegment",
            "2ff10f88037470adb6e89d25a979fd51ddbb62d0"
        ],
        [
            "Ltac map_iff := repeat (progress ( rewrite add_mapsto_iff || rewrite add_in_iff || rewrite remove_mapsto_iff || rewrite remove_in_iff || rewrite empty_mapsto_iff || rewrite empty_in_iff || rewrite map_mapsto_iff || rewrite map_in_iff || rewrite mapi_in_iff)).",
            "VernacExtend",
            "bf97586fcbc4ec92190f0c8308fa7f6731a4a2e0"
        ],
        [
            "Section BoolSpec.",
            "VernacBeginSection",
            "553e9da3fabfe502f75324fefb0a0aa32319152f"
        ],
        [
            "Lemma mem_find_b : forall (elt:Type)(m:t elt)(x:key), mem x m = if find x m then true else false.",
            "VernacStartTheoremProof",
            "1f19c046b06d8b2c38fdd2bcb6d573e31c38f512"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (find_mapsto_iff m x)(mem_in_iff m x); unfold In.",
            "VernacExtend",
            "5d83ecc9d67de17bd2b4ed8340de4beff041b843"
        ],
        [
            "destruct (find x m); destruct (mem x m); auto.",
            "VernacExtend",
            "a135b2129b066dc1ab91a6d8a467d9759e4c431e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite <- H0; exists e; rewrite H; auto.",
            "VernacExtend",
            "14be3d7f3b2331755aab7b30eab71973f6f60fb9"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "destruct H0 as (e,H0).",
            "VernacExtend",
            "a50ef5fd5c9665866ff9bc410aa04c54c38510e7"
        ],
        [
            "destruct (H e); intuition discriminate.",
            "VernacExtend",
            "9fd07ab8116331a59ef83283fef187986c20bd12"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable elt elt' elt'' : Type.",
            "VernacAssumption",
            "bf8f6f82bf5fcf2b225f5a782e20a1205b1ec879"
        ],
        [
            "Implicit Types m : t elt.",
            "VernacReserve",
            "d4f53d0a39ec20b73e2612cacb69ed5dddf67a6b"
        ],
        [
            "Implicit Types x y z : key.",
            "VernacReserve",
            "5bb55cca2da16e804194a848cbb3211ed02f0531"
        ],
        [
            "Implicit Types e : elt.",
            "VernacReserve",
            "ac06a64eb104c51e778df522bd57ad4df3e47a12"
        ],
        [
            "Lemma mem_b : forall m x y, E.eq x y -> mem x m = mem y m.",
            "VernacStartTheoremProof",
            "873cab360e536ee5c6799c2fbb3fbbcea8409a5b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (mem_in_iff m x) (mem_in_iff m y)(In_iff m H).",
            "VernacExtend",
            "3cd03fef0af9a29aa0a912f5aa7ef8a57b20ad79"
        ],
        [
            "destruct (mem x m); destruct (mem y m); intuition.",
            "VernacExtend",
            "6dc116b555eacdaad6b512b790aad75ce3582ad7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_o : forall m x y, E.eq x y -> find x m = find y m.",
            "VernacStartTheoremProof",
            "13094d7748f192f923b3da530a23f383f376e1bb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite eq_option_alt.",
            "VernacExtend",
            "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
        ],
        [
            "intro e.",
            "VernacExtend",
            "a775c5443e87e23a1cd85766bdbcdaad211332a3"
        ],
        [
            "rewrite <- 2 find_mapsto_iff.",
            "VernacExtend",
            "4994d9e8a98bcc93529092b8308b10d7015c279c"
        ],
        [
            "apply MapsTo_iff; auto.",
            "VernacExtend",
            "1e093ead3333579f6eabc9606215aacd76821cc4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_o : forall x, find x (empty elt) = None.",
            "VernacStartTheoremProof",
            "82a4e8f317a7a70972d778352ce1b451914631c7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite eq_option_alt.",
            "VernacExtend",
            "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
        ],
        [
            "intro e.",
            "VernacExtend",
            "a775c5443e87e23a1cd85766bdbcdaad211332a3"
        ],
        [
            "rewrite <- find_mapsto_iff, empty_mapsto_iff; now intuition.",
            "VernacExtend",
            "40889bfbe049418421c86c22c68fc1dc6a8f01cd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_a : forall x, mem x (empty elt) = false.",
            "VernacStartTheoremProof",
            "c6a90d26b8d536d5401b391a1c3b2cb50b485783"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (mem x (empty elt)); intros; auto.",
            "VernacExtend",
            "0b7c6efd0d348cda9becc38f9c006a0b796532a0"
        ],
        [
            "generalize (mem_2 H).",
            "VernacExtend",
            "b1e35e336d932335049f6e6511b9538eb28c096e"
        ],
        [
            "rewrite empty_in_iff; intuition.",
            "VernacExtend",
            "d6933368f2ac2f9679cae5a410e50e5c4284638c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_eq_o : forall m x y e, E.eq x y -> find y (add x e m) = Some e.",
            "VernacStartTheoremProof",
            "80a6e9f55f09cef1f1ef953f593cdc583a0a9ba3"
        ],
        [
            "auto with map.",
            "VernacExtend",
            "94b58e670b3e6eb6f35d5fce4b9af965d2ce5bb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_neq_o : forall m x y e, ~ E.eq x y -> find y (add x e m) = find y m.",
            "VernacStartTheoremProof",
            "4b48cd4a1afa4033ceecf7f633e0bf71f85eb8cf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite eq_option_alt.",
            "VernacExtend",
            "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
        ],
        [
            "intro e'.",
            "VernacExtend",
            "b247e659a1a8a69c4fc8c99c9b4ffe992ec85cd2"
        ],
        [
            "rewrite <- 2 find_mapsto_iff.",
            "VernacExtend",
            "4994d9e8a98bcc93529092b8308b10d7015c279c"
        ],
        [
            "apply add_neq_mapsto_iff; auto.",
            "VernacExtend",
            "c2a41c2c5fadace231cfc90608a6d3018e3d3ae7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve add_neq_o : map.",
            "VernacHints",
            "42aef68cf55ec3710f7e21a9b7c48c171b85ee3f"
        ],
        [
            "Lemma add_o : forall m x y e, find y (add x e m) = if eq_dec x y then Some e else find y m.",
            "VernacStartTheoremProof",
            "4077a7f640063fce17f02c9d76865ec1a8d24f1c"
        ],
        [
            "intros; destruct (eq_dec x y); auto with map.",
            "VernacExtend",
            "152c172fce7b594772bfa26427d7c90d9619145e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_eq_b : forall m x y e, E.eq x y -> mem y (add x e m) = true.",
            "VernacStartTheoremProof",
            "8538a0fe318d8cfef1ef31f7d2317a4767449b98"
        ],
        [
            "intros; rewrite mem_find_b; rewrite add_eq_o; auto.",
            "VernacExtend",
            "a04b51d35591e917e45a8cfc834e3cdfbf890644"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_neq_b : forall m x y e, ~E.eq x y -> mem y (add x e m) = mem y m.",
            "VernacStartTheoremProof",
            "58991e29e0e913a7c5be48789177a5867d84c1dd"
        ],
        [
            "intros; do 2 rewrite mem_find_b; rewrite add_neq_o; auto.",
            "VernacExtend",
            "f52ff200bc52a5295a180f7b708f63944ae4aae3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_b : forall m x y e, mem y (add x e m) = eqb x y || mem y m.",
            "VernacStartTheoremProof",
            "a654ed2d928899aabe47f2023053c5de95b6b9f5"
        ],
        [
            "intros; do 2 rewrite mem_find_b; rewrite add_o; unfold eqb.",
            "VernacExtend",
            "60e1f482f070bf690d950e5e665384be58c805aa"
        ],
        [
            "destruct (eq_dec x y); simpl; auto.",
            "VernacExtend",
            "75b6c321370221ed32fbf8895a80174a9b35b844"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_eq_o : forall m x y, E.eq x y -> find y (remove x m) = None.",
            "VernacStartTheoremProof",
            "c43a6026f13c3bd5909a33da7311c05b64790ddd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite eq_option_alt.",
            "VernacExtend",
            "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
        ],
        [
            "intro e.",
            "VernacExtend",
            "a775c5443e87e23a1cd85766bdbcdaad211332a3"
        ],
        [
            "rewrite <- find_mapsto_iff, remove_mapsto_iff; now intuition.",
            "VernacExtend",
            "f66840b8907124e05e894e5e32ceef825337c1e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve remove_eq_o : map.",
            "VernacHints",
            "83c71823eaa5177176c388fb3d795e0241422067"
        ],
        [
            "Lemma remove_neq_o : forall m x y, ~ E.eq x y -> find y (remove x m) = find y m.",
            "VernacStartTheoremProof",
            "c39cd5042a6ccae5bc9e131fd4e3fb9be94c4d4f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite eq_option_alt.",
            "VernacExtend",
            "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
        ],
        [
            "intro e.",
            "VernacExtend",
            "a775c5443e87e23a1cd85766bdbcdaad211332a3"
        ],
        [
            "rewrite <- find_mapsto_iff, remove_neq_mapsto_iff; now intuition.",
            "VernacExtend",
            "bd5d0e1037ead98e24e797b0159ab9cd1acec0c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve remove_neq_o : map.",
            "VernacHints",
            "b1c650e51cbad7510a0d6caff8d93c1d0ca0f815"
        ],
        [
            "Lemma remove_o : forall m x y, find y (remove x m) = if eq_dec x y then None else find y m.",
            "VernacStartTheoremProof",
            "dd8ba34e667a930ce67d27bb560892f7739f391f"
        ],
        [
            "intros; destruct (eq_dec x y); auto with map.",
            "VernacExtend",
            "152c172fce7b594772bfa26427d7c90d9619145e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_eq_b : forall m x y, E.eq x y -> mem y (remove x m) = false.",
            "VernacStartTheoremProof",
            "318a7f97b48cedaa3ce4d21bce8027c9681a309f"
        ],
        [
            "intros; rewrite mem_find_b; rewrite remove_eq_o; auto.",
            "VernacExtend",
            "dfe0caef382fc6f9d29798fd96eb969f441d4d51"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_neq_b : forall m x y, ~ E.eq x y -> mem y (remove x m) = mem y m.",
            "VernacStartTheoremProof",
            "787f0ebed9cd56b6b5115372c5c9a986ac34b7b7"
        ],
        [
            "intros; do 2 rewrite mem_find_b; rewrite remove_neq_o; auto.",
            "VernacExtend",
            "2652ef6c8d19084a47c2302fb9d9db004732da1b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_b : forall m x y, mem y (remove x m) = negb (eqb x y) && mem y m.",
            "VernacStartTheoremProof",
            "48789b8e786f7b7f6eec745268fd5bb243054475"
        ],
        [
            "intros; do 2 rewrite mem_find_b; rewrite remove_o; unfold eqb.",
            "VernacExtend",
            "3bdc784a437832011a935e7286346caffc6cc9d7"
        ],
        [
            "destruct (eq_dec x y); auto.",
            "VernacExtend",
            "3cbf747bc7503a8a75697a25cc053796d8723b5c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_o : forall m x (f:elt->elt'), find x (map f m) = Datatypes.option_map f (find x m).",
            "VernacStartTheoremProof",
            "8f2d96c7381c4f81d233e4c9ad489da2f5903f0f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (find_mapsto_iff (map f m) x) (find_mapsto_iff m x) (fun b => map_mapsto_iff m x b f).",
            "VernacExtend",
            "99bff601d47bd0c072d083a85557bca918144f2c"
        ],
        [
            "destruct (find x (map f m)); destruct (find x m); simpl; auto; intros.",
            "VernacExtend",
            "781132732ed432d9ad49e5647473794d68e46b6e"
        ],
        [
            "rewrite <- H; rewrite H1; exists e0; rewrite H0; auto.",
            "VernacExtend",
            "1e0469b67a1403b89f3246497fae0325b9ec0012"
        ],
        [
            "destruct (H e) as [_ H2].",
            "VernacExtend",
            "ab8104612b250f13df05d17939fd1a3a79280fb4"
        ],
        [
            "rewrite H1 in H2.",
            "VernacExtend",
            "3ddaddaf8f89728f77671f580e26162e25035230"
        ],
        [
            "destruct H2 as (a,(_,H2)); auto.",
            "VernacExtend",
            "9e03ea1f84e298b9136d9ba0a20058fed32bbdc6"
        ],
        [
            "rewrite H0 in H2; discriminate.",
            "VernacExtend",
            "85a27a6d0096bbd5f49cc44e79ece6f6938861c0"
        ],
        [
            "rewrite <- H; rewrite H1; exists e; rewrite H0; auto.",
            "VernacExtend",
            "b989368d8aad7d5fd69461ea02343c6154c8d265"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_b : forall m x (f:elt->elt'), mem x (map f m) = mem x m.",
            "VernacStartTheoremProof",
            "6d906fc40853bc0406ca21d854db642f0fd8c69c"
        ],
        [
            "intros; do 2 rewrite mem_find_b; rewrite map_o.",
            "VernacExtend",
            "9af441223a5ff8e1eac8eaa2710bbed7355f7352"
        ],
        [
            "destruct (find x m); simpl; auto.",
            "VernacExtend",
            "52a8b05db4e941878106d18fb9b9895de2889d4a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapi_b : forall m x (f:key->elt->elt'), mem x (mapi f m) = mem x m.",
            "VernacStartTheoremProof",
            "7637ea025991c00b1427fa4cd8f15f2721421249"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (mem_in_iff (mapi f m) x) (mem_in_iff m x) (mapi_in_iff m x f).",
            "VernacExtend",
            "af75ee8acc7679b9794c7fbb1101702f9f5710f7"
        ],
        [
            "destruct (mem x (mapi f m)); destruct (mem x m); simpl; auto; intros.",
            "VernacExtend",
            "3f74f03103ce9c90a52011e84217dfea6efb323d"
        ],
        [
            "symmetry; rewrite <- H0; rewrite <- H1; rewrite H; auto.",
            "VernacExtend",
            "69e1800b208ea01312708ec0fdd88023c8f679b7"
        ],
        [
            "rewrite <- H; rewrite H1; rewrite H0; auto.",
            "VernacExtend",
            "b0b388d8c00f23f675e32962be366734a727add5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapi_o : forall m x (f:key->elt->elt'), (forall x y e, E.eq x y -> f x e = f y e) -> find x (mapi f m) = Datatypes.option_map (f x) (find x m).",
            "VernacStartTheoremProof",
            "16a2d804a7a58bdbae91c5eddb73d730a9e09b66"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (find_mapsto_iff (mapi f m) x) (find_mapsto_iff m x) (fun b => mapi_mapsto_iff m x b H).",
            "VernacExtend",
            "623ab5992c42f94a915e550616882066287716ab"
        ],
        [
            "destruct (find x (mapi f m)); destruct (find x m); simpl; auto; intros.",
            "VernacExtend",
            "cd0fd7bf4989f6240dab35e3c559dd55b7ed5e66"
        ],
        [
            "rewrite <- H0; rewrite H2; exists e0; rewrite H1; auto.",
            "VernacExtend",
            "d0b429d67225f2c1e36f3adaf430fc4290703900"
        ],
        [
            "destruct (H0 e) as [_ H3].",
            "VernacExtend",
            "c5b49634bdc43e3a7b91ed095dcd79a108e7b660"
        ],
        [
            "rewrite H2 in H3.",
            "VernacExtend",
            "009aed681b5bf7878390422291392aff7e71e42a"
        ],
        [
            "destruct H3 as (a,(_,H3)); auto.",
            "VernacExtend",
            "b72a1b9ea074d0c446af2a1fbf3e4efa9e00ac1a"
        ],
        [
            "rewrite H1 in H3; discriminate.",
            "VernacExtend",
            "c3f8ccb68cf43a77aebb2151045e071183973f30"
        ],
        [
            "rewrite <- H0; rewrite H2; exists e; rewrite H1; auto.",
            "VernacExtend",
            "872cdef7dd3a41419bb07086e4ae4bfe75845e3a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map2_1bis : forall (m: t elt)(m': t elt') x (f:option elt->option elt'->option elt''), f None None = None -> find x (map2 f m m') = f (find x m) (find x m').",
            "VernacStartTheoremProof",
            "0f926453749b16b28f59ab621bec9220a0f3e36c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (find x m); intros.",
            "VernacExtend",
            "ffd164e20a1af7b3d5c82ccac45d044379f151e3"
        ],
        [
            "rewrite <- H0.",
            "VernacExtend",
            "f6718c09e494e327328e3c2003dd236939e231f9"
        ],
        [
            "apply map2_1; auto with map.",
            "VernacExtend",
            "a28fb0e40318a5214248a632f0aac01e837f2bbc"
        ],
        [
            "left; exists e; auto with map.",
            "VernacExtend",
            "796ef48ee82d3210f034e830910a1006efbee7c4"
        ],
        [
            "case_eq (find x m'); intros.",
            "VernacExtend",
            "55647f8f6d735e6e02a36b794591230f0b5e4768"
        ],
        [
            "rewrite <- H0; rewrite <- H1.",
            "VernacExtend",
            "66c701ca9f1cc54dbb13bfe476979dd3c5945511"
        ],
        [
            "apply map2_1; auto.",
            "VernacExtend",
            "3cd83c60a549e9784f54ceb8bd3a6b759d490142"
        ],
        [
            "right; exists e; auto with map.",
            "VernacExtend",
            "f47842489582a999fcd8fac960a08133f2c56fb4"
        ],
        [
            "rewrite H.",
            "VernacExtend",
            "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
        ],
        [
            "case_eq (find x (map2 f m m')); intros; auto with map.",
            "VernacExtend",
            "986729867185bbb289920730af4a123e9877d277"
        ],
        [
            "assert (In x (map2 f m m')) by (exists e; auto with map).",
            "VernacExtend",
            "e96c691e08199d4fb7a66b93f46dfbc23888a040"
        ],
        [
            "destruct (map2_2 H3) as [(e0,H4)|(e0,H4)].",
            "VernacExtend",
            "a63e1411708359ba0e74c6df086113b8d20f4cb8"
        ],
        [
            "rewrite (find_1 H4) in H0; discriminate.",
            "VernacExtend",
            "ce4c3cc3e45015a4cbed771044a0d5455b7c0513"
        ],
        [
            "rewrite (find_1 H4) in H1; discriminate.",
            "VernacExtend",
            "d1ca20986743c1472853a896107d696f1addebc9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_o : forall m x, find x m = findA (eqb x) (elements m).",
            "VernacStartTheoremProof",
            "a2fe964960013b8c2b39f178facd76e3ed1def50"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite eq_option_alt.",
            "VernacExtend",
            "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
        ],
        [
            "intro e.",
            "VernacExtend",
            "a775c5443e87e23a1cd85766bdbcdaad211332a3"
        ],
        [
            "rewrite <- find_mapsto_iff, elements_mapsto_iff.",
            "VernacExtend",
            "bbab5db31ca1e361dbcdcdd89da30ca75c530963"
        ],
        [
            "unfold eqb.",
            "VernacExtend",
            "f9e717295e72955f079840f1bebf6c7bb720ca43"
        ],
        [
            "rewrite <- findA_NoDupA; dintuition; try apply elements_3w; eauto.",
            "VernacExtend",
            "b48a7a0557b9a88cfd977fe613e0784be488875e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_b : forall m x, mem x m = existsb (fun p => eqb x (fst p)) (elements m).",
            "VernacStartTheoremProof",
            "238c07bd4070444cad75589b874bd11014a303c4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (mem_in_iff m x)(elements_in_iff m x) (existsb_exists (fun p => eqb x (fst p)) (elements m)).",
            "VernacExtend",
            "7fb7fb6b94929144f2f34689a6d8849383995aed"
        ],
        [
            "destruct (mem x m); destruct (existsb (fun p => eqb x (fst p)) (elements m)); auto; intros.",
            "VernacExtend",
            "28fc19f1fe302666db0f43eade3fcb9b711af7d5"
        ],
        [
            "symmetry; rewrite H1.",
            "VernacExtend",
            "472215358a4c38f4917ce59ec50ee058206017ff"
        ],
        [
            "destruct H0 as (H0,_).",
            "VernacExtend",
            "808c69de34479fe87b6ee9e17a0850d3be5b548e"
        ],
        [
            "destruct H0 as (e,He); [ intuition |].",
            "VernacExtend",
            "52f06757e0b7852c83dd06a73f75e1e051bac24b"
        ],
        [
            "rewrite InA_alt in He.",
            "VernacExtend",
            "8f47f7f2da554c49cb728028b7aac4cefcf737e7"
        ],
        [
            "destruct He as ((y,e'),(Ha1,Ha2)).",
            "VernacExtend",
            "53630c5c0ffd45f50d812dc9b150df47d998abef"
        ],
        [
            "compute in Ha1; destruct Ha1; subst e'.",
            "VernacExtend",
            "25d696d7e9ae0052e55a3de688d08f10bed6a8df"
        ],
        [
            "exists (y,e); split; simpl; auto.",
            "VernacExtend",
            "fa417dc9c217b856ae0a6ea8b0c091cf905f5a4f"
        ],
        [
            "unfold eqb; destruct (eq_dec x y); intuition.",
            "VernacExtend",
            "4b493e1ba51f80288c2aee29a4decc13391b450c"
        ],
        [
            "rewrite <- H; rewrite H0.",
            "VernacExtend",
            "8c2b09f43ceab7b5485cf9f9aef1ab7d1ba3fd9a"
        ],
        [
            "destruct H1 as (H1,_).",
            "VernacExtend",
            "3e1f757ebfa6eb0443e2f849f1d5a95f18447330"
        ],
        [
            "destruct H1 as ((y,e),(Ha1,Ha2)); [intuition|].",
            "VernacExtend",
            "ac7ee6118f3ca235f2724ee3c33bc9fd9ba87b73"
        ],
        [
            "simpl in Ha2.",
            "VernacExtend",
            "49f4428934e0f577fdd08fabb8b0720efe62219a"
        ],
        [
            "unfold eqb in *; destruct (eq_dec x y); auto; try discriminate.",
            "VernacExtend",
            "2f730c4c1628203c194b87b03dce333981fbb268"
        ],
        [
            "exists e; rewrite InA_alt.",
            "VernacExtend",
            "6f836d5582e2ee436854268a07a3c292c9a0b244"
        ],
        [
            "exists (y,e); intuition.",
            "VernacExtend",
            "2b6ec274b09c2439156bc769058fc19821dbc3a1"
        ],
        [
            "compute; auto.",
            "VernacExtend",
            "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End BoolSpec.",
            "VernacEndSegment",
            "23f8131ddbb5a044c7f7b83b6a8f8a609e5b504d"
        ],
        [
            "Section Equalities.",
            "VernacBeginSection",
            "e8710b1659ac9dcd179e21e955c7e016dd7e0962"
        ],
        [
            "Variable elt:Type.",
            "VernacAssumption",
            "b310aa6dfd45260477c670b93268036cda9cb86b"
        ],
        [
            "Lemma Equal_mapsto_iff : forall m1 m2 : t elt, Equal m1 m2 <-> (forall k e, MapsTo k e m1 <-> MapsTo k e m2).",
            "VernacStartTheoremProof",
            "6f71dc8563e7dac302ce8c65effaa43ced8d4178"
        ],
        [
            "intros m1 m2.",
            "VernacExtend",
            "1d46872b8cbbe0ad9ef8bfe28cfde2d7794cf272"
        ],
        [
            "split; [intros Heq k e|intros Hiff].",
            "VernacExtend",
            "f896b63527f55892d9b0ca84d15da66be7a59bf1"
        ],
        [
            "rewrite 2 find_mapsto_iff, Heq.",
            "VernacExtend",
            "5d5b7b18fda997f50dedea314de87535ee2af551"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "intro k.",
            "VernacExtend",
            "32e738adabd1b2845bb50beed60df9eefe677271"
        ],
        [
            "rewrite eq_option_alt.",
            "VernacExtend",
            "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
        ],
        [
            "intro e.",
            "VernacExtend",
            "a775c5443e87e23a1cd85766bdbcdaad211332a3"
        ],
        [
            "rewrite <- 2 find_mapsto_iff; auto.",
            "VernacExtend",
            "745b169faae659791251ec121434a39af20f6a15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Equal_Equiv : forall (m m' : t elt), Equal m m' <-> Equiv Logic.eq m m'.",
            "VernacStartTheoremProof",
            "e84a94338ad975f3ca8c8e6b7278e9f51e159145"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite Equal_mapsto_iff.",
            "VernacExtend",
            "590ac075a4657447f7a2451b98cd1e962a6d296a"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "split; intros (e,Hin); exists e; [rewrite <- H|rewrite H]; auto.",
            "VernacExtend",
            "76877db15c3379d9b908ee734ea90e3ccfb23f64"
        ],
        [
            "intros; apply MapsTo_fun with m k; auto; rewrite H; auto.",
            "VernacExtend",
            "4556856790c1ed63a0a9acadf97aebc2619c6709"
        ],
        [
            "split; intros H'.",
            "VernacExtend",
            "010c3ee581698c43c620d139c469a2325e8ff08c"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "assert (Hin : In k m') by (rewrite <- H; exists e; auto).",
            "VernacExtend",
            "3bf7dcfed096d539bc5d44a849339b894de0c85a"
        ],
        [
            "destruct Hin as (e',He').",
            "VernacExtend",
            "beaadf6d64ced9d0404f2b3b7edcb5254cbcf2c6"
        ],
        [
            "rewrite (H0 k e e'); auto.",
            "VernacExtend",
            "dbfe63022c535f269b4aea0fc32c5f3fea200c7c"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "assert (Hin : In k m) by (rewrite H; exists e; auto).",
            "VernacExtend",
            "071dc10fbd90f22f83127e65c01afac9b13876df"
        ],
        [
            "destruct Hin as (e',He').",
            "VernacExtend",
            "beaadf6d64ced9d0404f2b3b7edcb5254cbcf2c6"
        ],
        [
            "rewrite <- (H0 k e' e); auto.",
            "VernacExtend",
            "18e07c95685ac0571d391271a2f1fc9da4ce49d8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Cmp.",
            "VernacBeginSection",
            "81a43090398c62aed5b53dcf8690ba5862912604"
        ],
        [
            "Variable eq_elt : elt->elt->Prop.",
            "VernacAssumption",
            "fee42c3c8794c5614ca71d9b76145b1c47b5c3a0"
        ],
        [
            "Variable cmp : elt->elt->bool.",
            "VernacAssumption",
            "44ec5f8194e3ecf4368d8d64a6d995481d6114a9"
        ],
        [
            "Definition compat_cmp := forall e e', cmp e e' = true <-> eq_elt e e'.",
            "VernacDefinition",
            "bb0ba4dea658bacef72bb6f137364efed9709668"
        ],
        [
            "Lemma Equiv_Equivb : compat_cmp -> forall m m', Equiv eq_elt m m' <-> Equivb cmp m m'.",
            "VernacStartTheoremProof",
            "e4ca16fc8afa2350e9eb007d06ae2d241fcfac43"
        ],
        [
            "unfold Equivb, Equiv, Cmp; intuition.",
            "VernacExtend",
            "d4cf5f109b98d95f5386d203a12afabd22717687"
        ],
        [
            "red in H; rewrite H; eauto.",
            "VernacExtend",
            "9596539ddf62c9b2a9658eb0cb89947e8f8a3b2a"
        ],
        [
            "red in H; rewrite <-H; eauto.",
            "VernacExtend",
            "502c75ca3388ebd24ee993fa4795830c2c4be380"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Cmp.",
            "VernacEndSegment",
            "075ab23447b4ef19a8cf4c62f5994e056110d8f3"
        ],
        [
            "Lemma Equal_Equivb : forall cmp, (forall e e', cmp e e' = true <-> e = e') -> forall (m m':t elt), Equal m m' <-> Equivb cmp m m'.",
            "VernacStartTheoremProof",
            "1d54310e28ff4f028faa65b3b51461ef22e45056"
        ],
        [
            "intros; rewrite Equal_Equiv.",
            "VernacExtend",
            "40d437892b0d67049750ae4da75893899e518fb2"
        ],
        [
            "apply Equiv_Equivb; auto.",
            "VernacExtend",
            "a358b02b4f0890f4958bfbd399b2ff6da87f2851"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Equal_Equivb_eqdec : forall eq_elt_dec : (forall e e', { e = e' } + { e <> e' }), let cmp := fun e e' => if eq_elt_dec e e' then true else false in forall (m m':t elt), Equal m m' <-> Equivb cmp m m'.",
            "VernacStartTheoremProof",
            "98038ae32b9375f1b880770635ab9ef5770d9074"
        ],
        [
            "intros; apply Equal_Equivb.",
            "VernacExtend",
            "cf1b8abed23b9e170009053c1addbcb64615fb2f"
        ],
        [
            "unfold cmp; clear cmp; intros.",
            "VernacExtend",
            "13e71ce0e0361ec4ada82748e06e0fdd0ce45051"
        ],
        [
            "destruct eq_elt_dec; now intuition.",
            "VernacExtend",
            "fc28d144bbe94fd0dabb1697aaaa48c11bdfba76"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Equalities.",
            "VernacEndSegment",
            "709e9c938ba80d51dc1fc3fdfe81baf9aecefb4e"
        ],
        [
            "Lemma Equal_refl : forall (elt:Type)(m : t elt), Equal m m.",
            "VernacStartTheoremProof",
            "2f32973fed6c1d4bfc9f6168838b57cfaabbcbf1"
        ],
        [
            "red; reflexivity.",
            "VernacExtend",
            "07ab1bc5a0fe9bc4e18f2ad6881f6008a016c3ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Equal_sym : forall (elt:Type)(m m' : t elt), Equal m m' -> Equal m' m.",
            "VernacStartTheoremProof",
            "f0426404127642a0975d11703f6d70f692939960"
        ],
        [
            "unfold Equal; auto.",
            "VernacExtend",
            "1e7e0346347e06c12539e3a0be4847c5cbc70005"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Equal_trans : forall (elt:Type)(m m' m'' : t elt), Equal m m' -> Equal m' m'' -> Equal m m''.",
            "VernacStartTheoremProof",
            "50c35552ab5ce399500ab504ac9d24478512e22b"
        ],
        [
            "unfold Equal; congruence.",
            "VernacExtend",
            "7a83c296f4ce76ff07567802a34df08b57d1a7d4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Equal_ST : forall elt:Type, Equivalence (@Equal elt).",
            "VernacDefinition",
            "be85c7a908c1ce953c3aaf161ae207e86e387419"
        ],
        [
            "constructor; red; [apply Equal_refl | apply Equal_sym | apply Equal_trans].",
            "VernacExtend",
            "6f629fbe45ca4d98343f6d53532690973f698ae1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Relation key E.eq reflexivity proved by E.eq_refl symmetry proved by E.eq_sym transitivity proved by E.eq_trans as KeySetoid.",
            "VernacExtend",
            "934ad5389eceb67dce077b0359013611557ae1ae"
        ],
        [
            "Arguments Equal {elt} m m'.",
            "VernacArguments",
            "642906807c3cfe2c60e8869d9372073659c26281"
        ],
        [
            "Add Parametric Relation (elt : Type) : (t elt) Equal reflexivity proved by (@Equal_refl elt) symmetry proved by (@Equal_sym elt) transitivity proved by (@Equal_trans elt) as EqualSetoid.",
            "VernacExtend",
            "c563f14dd1aeb30276cb05721b728736dac3635f"
        ],
        [
            "Add Parametric Morphism elt : (@In elt) with signature E.eq ==> Equal ==> iff as In_m.",
            "VernacExtend",
            "3951d398ee9590b76363d1140ea19f0c9c90210d"
        ],
        [
            "unfold Equal; intros k k' Hk m m' Hm.",
            "VernacExtend",
            "82e402514d07c72cc4371c3bb6dcf3ed42e8ef80"
        ],
        [
            "rewrite (In_iff m Hk), in_find_iff, in_find_iff, Hm; intuition.",
            "VernacExtend",
            "582282a5f36c332f40585f7f72f4bdc34c0b7583"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism elt : (@MapsTo elt) with signature E.eq ==> eq ==> Equal ==> iff as MapsTo_m.",
            "VernacExtend",
            "a00461c7843a1d600f7b5f6c0db437e12b25fa75"
        ],
        [
            "unfold Equal; intros k k' Hk e m m' Hm.",
            "VernacExtend",
            "cf8ed8d1644cc918258d62c4abcb62131d7b6c00"
        ],
        [
            "rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; intuition.",
            "VernacExtend",
            "bd81b6d3f9472d76266f81619d06c63033778786"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism elt : (@Empty elt) with signature Equal ==> iff as Empty_m.",
            "VernacExtend",
            "05efe4da7f765961561a7ccdf9933568073c5741"
        ],
        [
            "unfold Empty; intros m m' Hm.",
            "VernacExtend",
            "3da12ef2b3267531a53a5382d21b133c4d696a2b"
        ],
        [
            "split; intros; intro.",
            "VernacExtend",
            "ecc741092f9247e9f26fb17da38c492417f0d812"
        ],
        [
            "rewrite <-Hm in H0; eapply H, H0.",
            "VernacExtend",
            "add68ba5e2ba0f6d35fbe34f92522cb8002e986d"
        ],
        [
            "rewrite Hm in H0; eapply H, H0.",
            "VernacExtend",
            "5a6a235c80f219b054aee80019885c20664e7828"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism elt : (@is_empty elt) with signature Equal ==> eq as is_empty_m.",
            "VernacExtend",
            "a8fe3b5f28a28ea8d6c363349e735150d6d1ddd1"
        ],
        [
            "intros m m' Hm.",
            "VernacExtend",
            "4ab467a09b4805e10751a241ba50375053b51a50"
        ],
        [
            "rewrite eq_bool_alt, <-is_empty_iff, <-is_empty_iff, Hm; intuition.",
            "VernacExtend",
            "95cf50f36a4ab431ceb69c3e26d3ee0ce3cafac7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism elt : (@mem elt) with signature E.eq ==> Equal ==> eq as mem_m.",
            "VernacExtend",
            "645bb499fef6b0b399da91fafa864d2f20852641"
        ],
        [
            "intros k k' Hk m m' Hm.",
            "VernacExtend",
            "d909968d0e7e25a5ff6565934cc2b1bb3e5c469b"
        ],
        [
            "rewrite eq_bool_alt, <- mem_in_iff, <-mem_in_iff, Hk, Hm; intuition.",
            "VernacExtend",
            "3dd6d0a119cc7d2a69e56998bbae7f49a7855c15"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism elt : (@find elt) with signature E.eq ==> Equal ==> eq as find_m.",
            "VernacExtend",
            "61a074807e31fcb0d6b9d2e2b280cc17a8cdc967"
        ],
        [
            "intros k k' Hk m m' Hm.",
            "VernacExtend",
            "d909968d0e7e25a5ff6565934cc2b1bb3e5c469b"
        ],
        [
            "rewrite eq_option_alt.",
            "VernacExtend",
            "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
        ],
        [
            "intro e.",
            "VernacExtend",
            "a775c5443e87e23a1cd85766bdbcdaad211332a3"
        ],
        [
            "rewrite <- 2 find_mapsto_iff, Hk, Hm.",
            "VernacExtend",
            "c8055f43ff964bd97be10f62f8a0994b7ee8b3a1"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism elt : (@add elt) with signature E.eq ==> eq ==> Equal ==> Equal as add_m.",
            "VernacExtend",
            "0457f88dd1eeae7498cd8a86ec4f989f257d551c"
        ],
        [
            "intros k k' Hk e m m' Hm y.",
            "VernacExtend",
            "6b9fdc34cd1dbba1add194faaaa0d1b00585e3dc"
        ],
        [
            "rewrite add_o, add_o; do 2 destruct eq_dec as [|?Hnot]; auto.",
            "VernacExtend",
            "1f83c0583180e9161b9f65532521b2cc8885c51d"
        ],
        [
            "elim Hnot; rewrite <-Hk; auto.",
            "VernacExtend",
            "cadc96918c2c3bd2353e67e8213a2cb7e4e52885"
        ],
        [
            "elim Hnot; rewrite Hk; auto.",
            "VernacExtend",
            "0f61bd52fd98d0b5a3bae21d804bcca72af59727"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism elt : (@remove elt) with signature E.eq ==> Equal ==> Equal as remove_m.",
            "VernacExtend",
            "1506f2eb18a46bab846f8ea6f105ea42b5ae5835"
        ],
        [
            "intros k k' Hk m m' Hm y.",
            "VernacExtend",
            "eac9f876deab1f18c519f686e3d1b602c55791c8"
        ],
        [
            "rewrite remove_o, remove_o; do 2 destruct eq_dec as [|?Hnot]; auto.",
            "VernacExtend",
            "9787333959c9f9e8d850e918852fff4a42a429d6"
        ],
        [
            "elim Hnot; rewrite <-Hk; auto.",
            "VernacExtend",
            "cadc96918c2c3bd2353e67e8213a2cb7e4e52885"
        ],
        [
            "elim Hnot; rewrite Hk; auto.",
            "VernacExtend",
            "0f61bd52fd98d0b5a3bae21d804bcca72af59727"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism elt elt' : (@map elt elt') with signature eq ==> Equal ==> Equal as map_m.",
            "VernacExtend",
            "cb28cb7cfc5f6facfe35d5fbe594b0c1130cde88"
        ],
        [
            "intros f m m' Hm y.",
            "VernacExtend",
            "09fbb3bd3f74208c13d576b8888ebe972c070fe1"
        ],
        [
            "rewrite map_o, map_o, Hm; auto.",
            "VernacExtend",
            "5cafcad1c762fe3eeb005bdfe88d3cf513a01665"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation not_find_mapsto_iff := not_find_in_iff.",
            "VernacSyntacticDefinition",
            "a08bf2e0500abdff8e645c9640dc574f83d2b196"
        ],
        [
            "End WFacts_fun.",
            "VernacEndSegment",
            "592095a5a1c8328f51076426dc4ac36f7d378805"
        ],
        [
            "Module WFacts (M:WS) := WFacts_fun M.E M.",
            "VernacDefineModule",
            "11c29f4858ab79171714145cc216829349a54d98"
        ],
        [
            "Module Facts := WFacts.",
            "VernacDefineModule",
            "8c9bf877acd953681bc344d7e8cb2d4720f2c04c"
        ],
        [
            "Module WProperties_fun (E:DecidableType)(M:WSfun E).",
            "VernacDefineModule",
            "56fbc1ee0aabecb8c77f89101cfb4dc2b7ea4733"
        ],
        [
            "Module Import F:=WFacts_fun E M.",
            "VernacDefineModule",
            "b7dcd6d4bd146cef45341f4ae359387a947fd05d"
        ],
        [
            "Import M.",
            "VernacImport",
            "69325bbd0268095c07cfca05f898394c270b2c07"
        ],
        [
            "Section Elt.",
            "VernacBeginSection",
            "7d8c2b7c85358610d3707ffaa378f25da37c746b"
        ],
        [
            "Variable elt:Type.",
            "VernacAssumption",
            "b310aa6dfd45260477c670b93268036cda9cb86b"
        ],
        [
            "Definition Add x (e:elt) m m' := forall y, find y m' = find y (add x e m).",
            "VernacDefinition",
            "23e50ab317ec0d53bf58301b6a769bc6790e7f1d"
        ],
        [
            "Notation eqke := (@eq_key_elt elt).",
            "VernacSyntacticDefinition",
            "e1a0b29f75b86723e7b6df02308b3741be4e4227"
        ],
        [
            "Notation eqk := (@eq_key elt).",
            "VernacSyntacticDefinition",
            "5d1ab9ba19ec3536b3a24016c61d5e0bc9c657e9"
        ],
        [
            "Instance eqk_equiv : Equivalence eqk.",
            "VernacInstance",
            "1f13691059038da61dea6c3012750872f5225520"
        ],
        [
            "unfold eq_key; split; eauto.",
            "VernacExtend",
            "3d4943767d93f8699d15630d823582691e2d8316"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Instance eqke_equiv : Equivalence eqke.",
            "VernacInstance",
            "c4b5d8a9e3d56cec60cecdff72d57265cbca86cd"
        ],
        [
            "unfold eq_key_elt; split; repeat red; firstorder.",
            "VernacExtend",
            "97f4935173215dfd8bb11b602a8c72d2c32c1518"
        ],
        [
            "eauto with *.",
            "VernacExtend",
            "572dd351521dbb095e4dcc48e4bad331ece18aac"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma InA_eqke_eqk : forall k1 k2 e1 e2 l, E.eq k1 k2 -> InA eqke (k1,e1) l -> InA eqk (k2,e2) l.",
            "VernacStartTheoremProof",
            "94b998f9b44f2122a611bd7c24855b2b941b8a57"
        ],
        [
            "intros k1 k2 e1 e2 l Hk.",
            "VernacExtend",
            "23149441e69f409de613438d6126932ae6fa0bc7"
        ],
        [
            "rewrite 2 InA_alt.",
            "VernacExtend",
            "1ec083f460d12e4b48b07a1a5948edf0eb0fc909"
        ],
        [
            "intros ((k',e') & (Hk',He') & H); simpl in *.",
            "VernacExtend",
            "ec25bae1ee2ab60fcaff5875539db6be1b22a7e2"
        ],
        [
            "exists (k',e'); split; auto.",
            "VernacExtend",
            "1b42ddeb92d69ce3d67d2de2cf3c71ee2c160289"
        ],
        [
            "red; simpl; eauto.",
            "VernacExtend",
            "39398b970083e16fdab7df079f160a4ebb1ed0fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma NoDupA_eqk_eqke : forall l, NoDupA eqk l -> NoDupA eqke l.",
            "VernacStartTheoremProof",
            "b55df097d978b73dcc680524821c33f7fad9fca5"
        ],
        [
            "induction 1; auto.",
            "VernacExtend",
            "1f706f8985097cf30b2449a4fda927a48fc6a84a"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "destruct x as (k,e).",
            "VernacExtend",
            "3b61b93fee35d53b2bf7891801215e573b6311b2"
        ],
        [
            "eauto using InA_eqke_eqk.",
            "VernacExtend",
            "b2c3281273ffdf65d48b17544306c4e49c4edefc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma findA_rev : forall l k, NoDupA eqk l -> findA (eqb k) l = findA (eqb k) (rev l).",
            "VernacStartTheoremProof",
            "e938e9aa1a802846b78eb071f99219a01f9a9eb2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (findA (eqb k) l).",
            "VernacExtend",
            "341d9574bda29a96d4a074f2ae5ce11f3b4a74f0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "unfold eqb.",
            "VernacExtend",
            "f9e717295e72955f079840f1bebf6c7bb720ca43"
        ],
        [
            "rewrite <- findA_NoDupA, InA_rev, findA_NoDupA by (eauto using NoDupA_rev with *); eauto.",
            "VernacExtend",
            "a8fb43dfd7912d2b0a4756440776cf56397835de"
        ],
        [
            "case_eq (findA (eqb k) (rev l)); auto.",
            "VernacExtend",
            "571b1b05e12f8be34ad844b8a0b00f9d8e3163f3"
        ],
        [
            "intros e.",
            "VernacExtend",
            "fbf6e34ba1d32ba2da6d52f1b2b34e5349941b8e"
        ],
        [
            "unfold eqb.",
            "VernacExtend",
            "f9e717295e72955f079840f1bebf6c7bb720ca43"
        ],
        [
            "rewrite <- findA_NoDupA, InA_rev, findA_NoDupA by (eauto using NoDupA_rev with *).",
            "VernacExtend",
            "5272efbc2e0b9e5d8037e13454729392eaf5db13"
        ],
        [
            "intro Eq; rewrite Eq; auto.",
            "VernacExtend",
            "57142a41facf2978762e0eb23f0f2959fd7baaf4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_Empty : forall m:t elt, Empty m <-> elements m = nil.",
            "VernacStartTheoremProof",
            "d1da20d127b687d8c470fba4618772cf41543935"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold Empty.",
            "VernacExtend",
            "5deff0539bdcca88b34c45ca8c61aec97033b4a3"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "assert (forall a, ~ List.In a (elements m)).",
            "VernacExtend",
            "45f2b8fb9c7be1f44e9e4026853c1857a8d2cc4c"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "apply (H (fst a) (snd a)).",
            "VernacExtend",
            "c8fc00f0572040cb669e725e7c5d11fb0730035e"
        ],
        [
            "rewrite elements_mapsto_iff.",
            "VernacExtend",
            "ca5b6d97338b6ed72041fd26d5724b6135e4be1e"
        ],
        [
            "rewrite InA_alt; exists a; auto.",
            "VernacExtend",
            "8634bb87f39215e449a5ff719abacd7e0387f94a"
        ],
        [
            "split; auto; split; auto.",
            "VernacExtend",
            "218effc4f5ae502cbfc34127d31c2e905de106cc"
        ],
        [
            "destruct (elements m); auto.",
            "VernacExtend",
            "344a8cab0a252d818517af64c0c57c0d6336ca7b"
        ],
        [
            "elim (H0 p); simpl; auto.",
            "VernacExtend",
            "a947e9c005cac08e8902bfd44b5b121f8017f535"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "rewrite elements_mapsto_iff in H0.",
            "VernacExtend",
            "762c84c07f7986b413177ff6cac3e67d6d5181d8"
        ],
        [
            "rewrite InA_alt in H0; destruct H0.",
            "VernacExtend",
            "f2927a8488adf474790ec9a7f0300de6ee976930"
        ],
        [
            "rewrite H in H0; destruct H0 as (_,H0); inversion H0.",
            "VernacExtend",
            "0c9877291f8cb9410a4e2f3e95471f19ee421781"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_empty : elements (@empty elt) = nil.",
            "VernacStartTheoremProof",
            "2f8040ef7c569f2c6ab36853bdf40c8eb456ec8d"
        ],
        [
            "rewrite <-elements_Empty; apply empty_1.",
            "VernacExtend",
            "d39bc2737cc51d5b431c40734f6e4fecf208f0e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition uncurry {U V W : Type} (f : U -> V -> W) : U*V -> W := fun p => f (fst p) (snd p).",
            "VernacDefinition",
            "9f8e57644173a0fb81cdce60c93ca36d257c38a9"
        ],
        [
            "Definition of_list := List.fold_right (uncurry (@add _)) (empty elt).",
            "VernacDefinition",
            "161080d484932a8af0058f69172c75c6a7f9608f"
        ],
        [
            "Definition to_list := elements.",
            "VernacDefinition",
            "8d155a5924b4be5b371239aae7919f987c575321"
        ],
        [
            "Lemma of_list_1 : forall l k e, NoDupA eqk l -> (MapsTo k e (of_list l) <-> InA eqke (k,e) l).",
            "VernacStartTheoremProof",
            "a2289e03650cb528208253dfc051fb65a3879899"
        ],
        [
            "induction l as [|(k',e') l IH]; simpl; intros k e Hnodup.",
            "VernacExtend",
            "31710e194876f18d7657d22a53b189a3815a63fc"
        ],
        [
            "rewrite empty_mapsto_iff, InA_nil; intuition.",
            "VernacExtend",
            "a3b8d191686070e8b38a3f849cfc52c177ee581e"
        ],
        [
            "unfold uncurry; simpl.",
            "VernacExtend",
            "7e0777475abacf15df72987600a8f68f5f4a5e98"
        ],
        [
            "inversion_clear Hnodup as [| ? ? Hnotin Hnodup'].",
            "VernacExtend",
            "d0a545b953577660ff986ce2963ab86ac3f58a8b"
        ],
        [
            "specialize (IH k e Hnodup'); clear Hnodup'.",
            "VernacExtend",
            "a67511c796908850e8b03aa73bf0a322dca6dc3a"
        ],
        [
            "rewrite add_mapsto_iff, InA_cons, <- IH.",
            "VernacExtend",
            "43527729d7ec9839622bac828db56e5bfd3a49fa"
        ],
        [
            "unfold eq_key_elt at 1; simpl.",
            "VernacExtend",
            "9dda56cbcf9a9c44f51afc4b880aeea5545f901b"
        ],
        [
            "split; destruct 1 as [H|H]; try (intuition;fail).",
            "VernacExtend",
            "540ca9f3d8ed7127baeecebcc1b733f320f27f84"
        ],
        [
            "destruct (eq_dec k k'); [left|right]; split; auto.",
            "VernacExtend",
            "d29d7a7ba595769cb14a5f05fa50387f12c0a05e"
        ],
        [
            "contradict Hnotin.",
            "VernacExtend",
            "b99a5914cf39bdb6483d9e0af54d3afd372d5459"
        ],
        [
            "apply InA_eqke_eqk with k e; intuition.",
            "VernacExtend",
            "e1c07472c3100006c75d405e3aeec24d36197fb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma of_list_1b : forall l k, NoDupA eqk l -> find k (of_list l) = findA (eqb k) l.",
            "VernacStartTheoremProof",
            "cb3385f8294704dca0ecf40b7f378bbc5d7876ee"
        ],
        [
            "induction l as [|(k',e') l IH]; simpl; intros k Hnodup.",
            "VernacExtend",
            "f6f0542487244e098b31bc4a35f7f607f570a35a"
        ],
        [
            "apply empty_o.",
            "VernacExtend",
            "b1f2330efab2ead04f11876e7897b56b437cd32b"
        ],
        [
            "unfold uncurry; simpl.",
            "VernacExtend",
            "7e0777475abacf15df72987600a8f68f5f4a5e98"
        ],
        [
            "inversion_clear Hnodup as [| ? ? Hnotin Hnodup'].",
            "VernacExtend",
            "d0a545b953577660ff986ce2963ab86ac3f58a8b"
        ],
        [
            "specialize (IH k Hnodup'); clear Hnodup'.",
            "VernacExtend",
            "f362b732e5edda7ea85ba23fcff82d0b94aeb763"
        ],
        [
            "rewrite add_o, IH.",
            "VernacExtend",
            "a1cfda9e69451846d1f9f4311d5355ca807ad58b"
        ],
        [
            "unfold eqb; do 2 destruct eq_dec as [|?Hnot]; auto; elim Hnot; eauto.",
            "VernacExtend",
            "003ad01f78e0d95e29a44cd165cb451289805198"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma of_list_2 : forall l, NoDupA eqk l -> equivlistA eqke l (to_list (of_list l)).",
            "VernacStartTheoremProof",
            "3c9fe280a19168a6ca45dc711725b155a0060d41"
        ],
        [
            "intros l Hnodup (k,e).",
            "VernacExtend",
            "b79f434c8be0edd7a29faacde86333c2e20db4ae"
        ],
        [
            "rewrite <- elements_mapsto_iff, of_list_1; intuition.",
            "VernacExtend",
            "b2ea15ad45203a355bfe7b2a03b7cab88196b9ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma of_list_3 : forall s, Equal (of_list (to_list s)) s.",
            "VernacStartTheoremProof",
            "d1dc21df9a0dfd1873b1389219b3083f9c3f87a2"
        ],
        [
            "intros s k.",
            "VernacExtend",
            "e82ba462062401adc0701ba79b456109e0f1c1ed"
        ],
        [
            "rewrite of_list_1b, elements_o; auto.",
            "VernacExtend",
            "94ce6510c1dbc8ec82cda7d6d1e649c9f67c9683"
        ],
        [
            "apply elements_3w.",
            "VernacExtend",
            "ac3f391efbdb50c07a779fba491bf1085f07caf1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_spec_right m (A:Type)(i:A)(f : key -> elt -> A -> A) : fold f m i = List.fold_right (uncurry f) i (rev (elements m)).",
            "VernacStartTheoremProof",
            "79ea494b67fe4f73afd17cbf42c591f0cb2d70f0"
        ],
        [
            "rewrite fold_1.",
            "VernacExtend",
            "a0854f3ee658c867d58f94fc1bd8d4dd38a8020f"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply fold_left_rev_right.",
            "VernacExtend",
            "ff1a29d94bed1643c688f81a770b1e27fa432f50"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_rec : forall (A:Type)(P : t elt -> A -> Type)(f : key -> elt -> A -> A), forall (i:A)(m:t elt), (forall m, Empty m -> P m i) -> (forall k e a m' m'', MapsTo k e m -> ~In k m' -> Add k e m' m'' -> P m' a -> P m'' (f k e a)) -> P m (fold f m i).",
            "VernacStartTheoremProof",
            "4b32b52ff1d32bbef2cc7a0662c8ed0642505098"
        ],
        [
            "intros A P f i m Hempty Hstep.",
            "VernacExtend",
            "f15cc4b23b742ff8b1a6ee568be649a1206c0c36"
        ],
        [
            "rewrite fold_spec_right.",
            "VernacExtend",
            "237ed0f86af41177333bcc02f2a001775461cdd3"
        ],
        [
            "set (F:=uncurry f).",
            "VernacExtend",
            "a118c0d0ff918aa8ec36e7348d6ad2eb4f11c101"
        ],
        [
            "set (l:=rev (elements m)).",
            "VernacExtend",
            "937e270a44b617d3d70c9a9712bcf796b606a3d3"
        ],
        [
            "assert (Hstep' : forall k e a m' m'', InA eqke (k,e) l -> ~In k m' -> Add k e m' m'' -> P m' a -> P m'' (F (k,e) a)).",
            "VernacExtend",
            "e30ce4c1a34fa314c6bd9505e531698fe49438db"
        ],
        [
            "intros k e a m' m'' H ? ? ?; eapply Hstep; eauto.",
            "VernacExtend",
            "3624bb1e041bf26994cb2969c5d9bfd8954a95df"
        ],
        [
            "revert H; unfold l; rewrite InA_rev, elements_mapsto_iff; auto with *.",
            "VernacExtend",
            "b7d3cd6aeedcf50364b9dabb1646747e1cbc7b67"
        ],
        [
            "assert (Hdup : NoDupA eqk l).",
            "VernacExtend",
            "8044c8c57b2c26dedb9f1603d9e618c71329a6e9"
        ],
        [
            "unfold l.",
            "VernacExtend",
            "da63f36466c42d625dad71fd38245af08b7a4275"
        ],
        [
            "apply NoDupA_rev; try red; unfold eq_key ; eauto with *.",
            "VernacExtend",
            "cad4e6d45a0d990eea8d0d50cb4d5008da40cd8c"
        ],
        [
            "apply elements_3w.",
            "VernacExtend",
            "ac3f391efbdb50c07a779fba491bf1085f07caf1"
        ],
        [
            "assert (Hsame : forall k, find k m = findA (eqb k) l).",
            "VernacExtend",
            "150d93571e9f05af00ea293c830c2f50dedf1902"
        ],
        [
            "intros k.",
            "VernacExtend",
            "494800a8d2673abb596b8be5a6bf555ab7d2a2fb"
        ],
        [
            "unfold l.",
            "VernacExtend",
            "da63f36466c42d625dad71fd38245af08b7a4275"
        ],
        [
            "rewrite elements_o, findA_rev; auto.",
            "VernacExtend",
            "447550fc2622ac2c43301df9d5dc5565d3ee4334"
        ],
        [
            "apply elements_3w.",
            "VernacExtend",
            "ac3f391efbdb50c07a779fba491bf1085f07caf1"
        ],
        [
            "clearbody l.",
            "VernacExtend",
            "0aa80066b018b6c90bd7a35b8d868fcce6781aeb"
        ],
        [
            "clearbody F.",
            "VernacExtend",
            "4e25c8644dbf2130d2473a2f9bdc443d52d69281"
        ],
        [
            "clear Hstep f.",
            "VernacExtend",
            "57dde6da92ba65b69dbab47126eab214c9f5445a"
        ],
        [
            "revert m Hsame.",
            "VernacExtend",
            "a937979d17437fc08342261821771ade25afedd2"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "intros m Hsame; simpl.",
            "VernacExtend",
            "0436dc9bd9857f2e03615017a7dcf2d9a16ece17"
        ],
        [
            "apply Hempty.",
            "VernacExtend",
            "0407a2813723da973a822415ab3cef42a5028815"
        ],
        [
            "intros k e.",
            "VernacExtend",
            "eca52c2499b4713b03b9acda11b2e5755efc388f"
        ],
        [
            "rewrite find_mapsto_iff, Hsame; simpl; discriminate.",
            "VernacExtend",
            "6f0a33e226dbb283d5e8f29f5a04378cd91884c1"
        ],
        [
            "intros m Hsame; destruct a as (k,e); simpl.",
            "VernacExtend",
            "fb3c3481ddd0733a9ec6f42f91d46a04d557cc24"
        ],
        [
            "apply Hstep' with (of_list l); auto.",
            "VernacExtend",
            "6034d37e2c138291ae843eeb860bfdf21a7591d7"
        ],
        [
            "rewrite InA_cons; left; red; auto.",
            "VernacExtend",
            "81a240f2042c2d9c0586e5ce40be81b9220455a3"
        ],
        [
            "inversion_clear Hdup.",
            "VernacExtend",
            "2d885c9bc1327087bd086d7a5254a4ac92389559"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "destruct H as (e',He').",
            "VernacExtend",
            "5c03f6e2cb2e0fe510b17c963cda8d73958b94ff"
        ],
        [
            "apply InA_eqke_eqk with k e'; auto.",
            "VernacExtend",
            "f9b7df0eb2cc4d4d24260bc44401d2da4a02e43f"
        ],
        [
            "rewrite <- of_list_1; auto.",
            "VernacExtend",
            "5366a940857a7e3bbcfec0ee81715d21009d99be"
        ],
        [
            "intro k'.",
            "VernacExtend",
            "ec8de1f26e17fde4c3f3b08d230e8aa36bb81f56"
        ],
        [
            "rewrite Hsame, add_o, of_list_1b.",
            "VernacExtend",
            "d9d6db2e69383a318b3504f65e6c58acb5f85886"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold eqb.",
            "VernacExtend",
            "f9e717295e72955f079840f1bebf6c7bb720ca43"
        ],
        [
            "do 2 destruct eq_dec as [|?Hnot]; auto; elim Hnot; eauto.",
            "VernacExtend",
            "a78913ed52c71d74c6194fb4001e82f3e755f255"
        ],
        [
            "inversion_clear Hdup; auto.",
            "VernacExtend",
            "d73ae71c08004ffa6f6a3f33b522d603451acd06"
        ],
        [
            "apply IHl.",
            "VernacExtend",
            "af412c6009bba78f939aa53ab07dcd1baaf5888b"
        ],
        [
            "intros; eapply Hstep'; eauto.",
            "VernacExtend",
            "4bd7cf025b3ca9438856429f93cab4402effc443"
        ],
        [
            "inversion_clear Hdup; auto.",
            "VernacExtend",
            "d73ae71c08004ffa6f6a3f33b522d603451acd06"
        ],
        [
            "intros; apply of_list_1b.",
            "VernacExtend",
            "ac4cdb3c40e7b4b12cfbcaa89e6155daaeefcb8f"
        ],
        [
            "inversion_clear Hdup; auto.",
            "VernacExtend",
            "d73ae71c08004ffa6f6a3f33b522d603451acd06"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fold_rec_bis : forall (A:Type)(P : t elt -> A -> Type)(f : key -> elt -> A -> A), forall (i:A)(m:t elt), (forall m m' a, Equal m m' -> P m a -> P m' a) -> (P (empty _) i) -> (forall k e a m', MapsTo k e m -> ~In k m' -> P m' a -> P (add k e m') (f k e a)) -> P m (fold f m i).",
            "VernacStartTheoremProof",
            "c6140343a493a6bc1ce320004620646ceeb404e3"
        ],
        [
            "intros A P f i m Pmorphism Pempty Pstep.",
            "VernacExtend",
            "d1ec4c0846712f3a03f1d3ac6661cf3db15523c0"
        ],
        [
            "apply fold_rec; intros.",
            "VernacExtend",
            "f80b5d85c7849302c3492854d947016a2d74d821"
        ],
        [
            "apply Pmorphism with (empty _); auto.",
            "VernacExtend",
            "d5bd31da23e90ebe5f153ee8ee2641487345f0ae"
        ],
        [
            "intro k.",
            "VernacExtend",
            "32e738adabd1b2845bb50beed60df9eefe677271"
        ],
        [
            "rewrite empty_o.",
            "VernacExtend",
            "8c29fad41930be4cd8288186a4441758bd8446f4"
        ],
        [
            "case_eq (find k m0); auto; intros e'; rewrite <- find_mapsto_iff.",
            "VernacExtend",
            "9f9b75f1a729ce8157e53b0f3f41ee6bd713851a"
        ],
        [
            "intro H'; elim (H k e'); auto.",
            "VernacExtend",
            "ec63c31b7669a8312485a19bce11c66765085c78"
        ],
        [
            "apply Pmorphism with (add k e m'); try intro; auto.",
            "VernacExtend",
            "91917fee506f0faf8fcd2bc038ff47a298ee3dd3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_rec_nodep : forall (A:Type)(P : A -> Type)(f : key -> elt -> A -> A)(i:A)(m:t elt), P i -> (forall k e a, MapsTo k e m -> P a -> P (f k e a)) -> P (fold f m i).",
            "VernacStartTheoremProof",
            "21c52645827641845e81393df54d56ffb908083d"
        ],
        [
            "intros; apply fold_rec_bis with (P:=fun _ => P); auto.",
            "VernacExtend",
            "d3d3aac59dca62444ae7da00c2e6b360758791ba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_rec_weak : forall (A:Type)(P : t elt -> A -> Type)(f : key -> elt -> A -> A)(i:A), (forall m m' a, Equal m m' -> P m a -> P m' a) -> P (empty _) i -> (forall k e a m, ~In k m -> P m a -> P (add k e m) (f k e a)) -> forall m, P m (fold f m i).",
            "VernacStartTheoremProof",
            "18549de45492e5d3ceff3b31ba8ea1ab086e113e"
        ],
        [
            "intros; apply fold_rec_bis; auto.",
            "VernacExtend",
            "c2ca49d8845f6d6706235fc510161657eabd3dd0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_rel : forall (A B:Type)(R : A -> B -> Type) (f : key -> elt -> A -> A)(g : key -> elt -> B -> B)(i : A)(j : B) (m : t elt), R i j -> (forall k e a b, MapsTo k e m -> R a b -> R (f k e a) (g k e b)) -> R (fold f m i) (fold g m j).",
            "VernacStartTheoremProof",
            "b1d4342c87d9c8eef9f0f955aa0822df7f7c6efa"
        ],
        [
            "intros A B R f g i j m Rempty Rstep.",
            "VernacExtend",
            "17651e660a850a103226c9bd13208f60128d5dc3"
        ],
        [
            "rewrite 2 fold_spec_right.",
            "VernacExtend",
            "2ecb802fbe7526806613f689f163282abe266452"
        ],
        [
            "set (l:=rev (elements m)).",
            "VernacExtend",
            "937e270a44b617d3d70c9a9712bcf796b606a3d3"
        ],
        [
            "assert (Rstep' : forall k e a b, InA eqke (k,e) l -> R a b -> R (f k e a) (g k e b)) by (intros; apply Rstep; auto; rewrite elements_mapsto_iff, <- InA_rev; auto with *).",
            "VernacExtend",
            "f566622ea98fc26b1f72b8bec5e17742bbf27fc2"
        ],
        [
            "clearbody l; clear Rstep m.",
            "VernacExtend",
            "3d1889759f4a6a028796544a5dd04f09511f6297"
        ],
        [
            "induction l; simpl; auto.",
            "VernacExtend",
            "2300dcaca2cea0b38a7d9c3b8a28bfa9feaddecf"
        ],
        [
            "apply Rstep'; auto.",
            "VernacExtend",
            "232b86120da65c97a51711cbeeea1d6945892415"
        ],
        [
            "destruct a; simpl; rewrite InA_cons; left; red; auto.",
            "VernacExtend",
            "c86c60a2e55b631f397caab26f46141d881dfca3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_induction : forall P : t elt -> Type, (forall m, Empty m -> P m) -> (forall m m', P m -> forall x e, ~In x m -> Add x e m m' -> P m') -> forall m, P m.",
            "VernacStartTheoremProof",
            "b054ff5709a87601d9307b11a1ee5142bf8f07be"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@fold_rec _ (fun s _ => P s) (fun _ _ _ => tt) tt m); eauto.",
            "VernacExtend",
            "a758f736a4f85c3b83150c935fda810b8b76c703"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_induction_bis : forall P : t elt -> Type, (forall m m', Equal m m' -> P m -> P m') -> P (empty _) -> (forall x e m, ~In x m -> P m -> P (add x e m)) -> forall m, P m.",
            "VernacStartTheoremProof",
            "cd9daefe29c7615303a848b39069177037e50bd5"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (@fold_rec_bis _ (fun s _ => P s) (fun _ _ _ => tt) tt m); eauto.",
            "VernacExtend",
            "ab058d6a8999a31109b71878234feb6a2646f354"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_identity : forall m : t elt, Equal (fold (@add _) m (empty _)) m.",
            "VernacStartTheoremProof",
            "08fdab357c8716943733dd561e05e5ccc8c3d496"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply fold_rec with (P:=fun m acc => Equal acc m); auto with map.",
            "VernacExtend",
            "81b2eeff45d20ce2520ba1ce6cd5319c4d38e32b"
        ],
        [
            "intros m' Heq k'.",
            "VernacExtend",
            "712ffb9c2a95ab9790596689e7bdb2a158cfd45a"
        ],
        [
            "rewrite empty_o.",
            "VernacExtend",
            "8c29fad41930be4cd8288186a4441758bd8446f4"
        ],
        [
            "case_eq (find k' m'); auto; intros e'; rewrite <- find_mapsto_iff.",
            "VernacExtend",
            "1520eed1694099314cb15bfd9a1119d83efbe4a6"
        ],
        [
            "intro; elim (Heq k' e'); auto.",
            "VernacExtend",
            "680fd9d2edad61279bc6d429ff2035196a8567b8"
        ],
        [
            "intros k e a m' m'' _ _ Hadd Heq k'.",
            "VernacExtend",
            "ba01a5a7e7789f4df023ff28a246a1b52580d01e"
        ],
        [
            "red in Heq.",
            "VernacExtend",
            "db2173291b8d835ade5f4f8756abb80244ac45c2"
        ],
        [
            "rewrite Hadd, 2 add_o, Heq; auto.",
            "VernacExtend",
            "41e454055623a065be2301af6a9a534fbcb264f3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Fold_More.",
            "VernacBeginSection",
            "c31e06a9638a40879558fda33d2ac62a61755b7f"
        ],
        [
            "Variables (A:Type)(eqA:A->A->Prop)(st:Equivalence eqA)(f:key->elt->A->A).",
            "VernacAssumption",
            "c92b292c688d4e6db47e1d376450b50dbcb01087"
        ],
        [
            "Hypothesis Comp : Proper (E.eq==>eq==>eqA==>eqA) f.",
            "VernacAssumption",
            "8f6581038ba7eb3b629d663e87b15c8559d18c16"
        ],
        [
            "Lemma fold_init : forall m i i', eqA i i' -> eqA (fold f m i) (fold f m i').",
            "VernacStartTheoremProof",
            "ff185e59bfe996c9eed750af55b3d191f1b12c43"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply fold_rel with (R:=eqA); auto.",
            "VernacExtend",
            "5f5d80f1fe79935d99266566e19240f0e0fd629c"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Comp; auto.",
            "VernacExtend",
            "6940f5400f8a56a9db9d1cfe44618b4e1d7cefae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_Empty : forall m i, Empty m -> eqA (fold f m i) i.",
            "VernacStartTheoremProof",
            "6a71429600546d34f8711b7cc1cd651eec5b0804"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply fold_rec_nodep with (P:=fun a => eqA a i).",
            "VernacExtend",
            "13a188920354eebe033504e3e4eafbfa7da444d9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "elim (H k e); auto.",
            "VernacExtend",
            "ded0ec67414e86bdf708465efedd713e0d5b7c91"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition transpose_neqkey := forall k k' e e' a, ~E.eq k k' -> eqA (f k e (f k' e' a)) (f k' e' (f k e a)).",
            "VernacDefinition",
            "9c15c7056e80e40c7293877355e33c72a45b0b47"
        ],
        [
            "Hypothesis Tra : transpose_neqkey.",
            "VernacAssumption",
            "c3e5fb3e677ddfb3a15a908cbb16156cf8c40e42"
        ],
        [
            "Lemma fold_commutes : forall i m k e, ~In k m -> eqA (fold f m (f k e i)) (f k e (fold f m i)).",
            "VernacStartTheoremProof",
            "09cb7dabc729e2865bddb66bb747366ef09342d0"
        ],
        [
            "intros i m k e Hnotin.",
            "VernacExtend",
            "f8ae123294cd1ece191c5ff750b9b74e93541e48"
        ],
        [
            "apply fold_rel with (R:= fun a b => eqA a (f k e b)); auto.",
            "VernacExtend",
            "71a2cc15ae07423755ba4c86571393585e9a6b2d"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "transitivity (f k0 e0 (f k e b)).",
            "VernacExtend",
            "90c380475bfe8b7a6bfe4376e8b1213e91ace30a"
        ],
        [
            "apply Comp; auto.",
            "VernacExtend",
            "6940f5400f8a56a9db9d1cfe44618b4e1d7cefae"
        ],
        [
            "apply Tra; auto.",
            "VernacExtend",
            "75103a2cb86e58719b17cc2bbbd703cc066ed9bf"
        ],
        [
            "contradict Hnotin; rewrite <- Hnotin; exists e0; auto.",
            "VernacExtend",
            "37e7cba6a03b0c292dc5703838022238d034dbd3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve NoDupA_eqk_eqke NoDupA_rev elements_3w : map.",
            "VernacHints",
            "a1293be2ecbb03603fb1f2421c1f1c6828106223"
        ],
        [
            "Lemma fold_Equal : forall m1 m2 i, Equal m1 m2 -> eqA (fold f m1 i) (fold f m2 i).",
            "VernacStartTheoremProof",
            "cb78942cfd8c508ac33c02a2ca0bd36878bb1f48"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite 2 fold_spec_right.",
            "VernacExtend",
            "2ecb802fbe7526806613f689f163282abe266452"
        ],
        [
            "assert (NoDupA eqk (rev (elements m1))) by (auto with *).",
            "VernacExtend",
            "b05bd45d459935c54906a7af9407e16c995b5233"
        ],
        [
            "assert (NoDupA eqk (rev (elements m2))) by (auto with *).",
            "VernacExtend",
            "22db01571ec695d1e575707e22a558179284d945"
        ],
        [
            "apply fold_right_equivlistA_restr with (R:=complement eqk)(eqA:=eqke); auto with *.",
            "VernacExtend",
            "7391ae7ba27d46d1f222e51ffdff1076a2143913"
        ],
        [
            "intros (k1,e1) (k2,e2) (Hk,He) a1 a2 Ha; simpl in *; apply Comp; auto.",
            "VernacExtend",
            "dd99e0fae9696ddb9bbe1b970a5a5d0e5673b9e8"
        ],
        [
            "unfold complement, eq_key, eq_key_elt; repeat red.",
            "VernacExtend",
            "ffa596706a663139bdaec658b4772142a54c8f5f"
        ],
        [
            "intuition eauto.",
            "VernacExtend",
            "dfea5151303e8e1455eb6e7dac607bb27ed86a6a"
        ],
        [
            "intros (k,e) (k',e'); unfold eq_key, uncurry; simpl; auto.",
            "VernacExtend",
            "6bbc1c29875e19bb93bdf66a345c1c0b05ab54c0"
        ],
        [
            "rewrite <- NoDupA_altdef; auto.",
            "VernacExtend",
            "9f5b3852910943a5e2a4b6129df6e0a715ac727b"
        ],
        [
            "intros (k,e).",
            "VernacExtend",
            "78c692e5531289f1ae688394bcb2d856dec2b557"
        ],
        [
            "rewrite 2 InA_rev, <- 2 elements_mapsto_iff, 2 find_mapsto_iff, H; auto with *.",
            "VernacExtend",
            "064fffa199a125843dac6d24b1aba7d2b17e20ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_Equal2 : forall m1 m2 i j, Equal m1 m2 -> eqA i j -> eqA (fold f m1 i) (fold f m2 j).",
            "VernacStartTheoremProof",
            "6a3353abee61608e6502b664df4e6e05228267c4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite 2 fold_spec_right.",
            "VernacExtend",
            "2ecb802fbe7526806613f689f163282abe266452"
        ],
        [
            "assert (NoDupA eqk (rev (elements m1))) by (auto with * ).",
            "VernacExtend",
            "b05bd45d459935c54906a7af9407e16c995b5233"
        ],
        [
            "assert (NoDupA eqk (rev (elements m2))) by (auto with * ).",
            "VernacExtend",
            "22db01571ec695d1e575707e22a558179284d945"
        ],
        [
            "apply fold_right_equivlistA_restr2 with (R:=complement eqk)(eqA:=eqke) ; auto with *.",
            "VernacExtend",
            "cb517c8ac4af86bb499dc2fcc798b3880770a761"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (k1,e1) (k2,e2) (Hk,He) a1 a2 Ha; simpl in *; apply Comp; auto.",
            "VernacExtend",
            "dd99e0fae9696ddb9bbe1b970a5a5d0e5673b9e8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold complement, eq_key, eq_key_elt; repeat red.",
            "VernacExtend",
            "ffa596706a663139bdaec658b4772142a54c8f5f"
        ],
        [
            "intuition eauto.",
            "VernacExtend",
            "dfea5151303e8e1455eb6e7dac607bb27ed86a6a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (k,e) (k',e') z z' h h'; unfold eq_key, uncurry;simpl; auto.",
            "VernacExtend",
            "7459c79b862bd39bc5c15a5a017784ed775f8e85"
        ],
        [
            "rewrite h'.",
            "VernacExtend",
            "d36e7ee91c331d5a27bef7caeb425b06361bcc3f"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite <- NoDupA_altdef; auto.",
            "VernacExtend",
            "9f5b3852910943a5e2a4b6129df6e0a715ac727b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros (k,e).",
            "VernacExtend",
            "78c692e5531289f1ae688394bcb2d856dec2b557"
        ],
        [
            "rewrite 2 InA_rev, <- 2 elements_mapsto_iff, 2 find_mapsto_iff, H; auto with *.",
            "VernacExtend",
            "064fffa199a125843dac6d24b1aba7d2b17e20ac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_Add : forall m1 m2 k e i, ~In k m1 -> Add k e m1 m2 -> eqA (fold f m2 i) (f k e (fold f m1 i)).",
            "VernacStartTheoremProof",
            "63dae83d0a8976fab8c4bbdfd1a64585da2efc72"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite 2 fold_spec_right.",
            "VernacExtend",
            "2ecb802fbe7526806613f689f163282abe266452"
        ],
        [
            "set (f':=uncurry f).",
            "VernacExtend",
            "fd59eaa9f412cb9d7582b1cdaf165ca95dd6ff23"
        ],
        [
            "change (f k e (fold_right f' i (rev (elements m1)))) with (f' (k,e) (fold_right f' i (rev (elements m1)))).",
            "VernacExtend",
            "f10795b5202ff8dc29be74c6a8b6b5ddab45cb63"
        ],
        [
            "assert (NoDupA eqk (rev (elements m1))) by (auto with *).",
            "VernacExtend",
            "b05bd45d459935c54906a7af9407e16c995b5233"
        ],
        [
            "assert (NoDupA eqk (rev (elements m2))) by (auto with *).",
            "VernacExtend",
            "22db01571ec695d1e575707e22a558179284d945"
        ],
        [
            "apply fold_right_add_restr with (R:=complement eqk)(eqA:=eqke)(eqB:=eqA); auto with *.",
            "VernacExtend",
            "04554e13408935c2792425faef184c15ac6b23ea"
        ],
        [
            "intros (k1,e1) (k2,e2) (Hk,He) a a' Ha; unfold f'; simpl in *.",
            "VernacExtend",
            "92bae5c008ef9db67223119959d7f06a4213187b"
        ],
        [
            "apply Comp; auto.",
            "VernacExtend",
            "6940f5400f8a56a9db9d1cfe44618b4e1d7cefae"
        ],
        [
            "unfold complement, eq_key_elt, eq_key; repeat red; intuition eauto.",
            "VernacExtend",
            "cf1240f62389765d1f20b09d9615337d9121b1c4"
        ],
        [
            "unfold f'; intros (k1,e1) (k2,e2); unfold eq_key, uncurry; simpl; auto.",
            "VernacExtend",
            "aaad1fe68bbaf7e9bf03911f23faf8661ab04ea4"
        ],
        [
            "rewrite <- NoDupA_altdef; auto.",
            "VernacExtend",
            "9f5b3852910943a5e2a4b6129df6e0a715ac727b"
        ],
        [
            "rewrite InA_rev, <- elements_mapsto_iff by (auto with *).",
            "VernacExtend",
            "eff1937a15808b2c0620f8578a3475242c9559e2"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "intros (a,b).",
            "VernacExtend",
            "caad4e03de819e1c2b04ea55eca4f01229069a63"
        ],
        [
            "rewrite InA_cons, 2 InA_rev, <- 2 elements_mapsto_iff, 2 find_mapsto_iff by (auto with *).",
            "VernacExtend",
            "9d7edce1065f03c4e2c3a98c3fb120262ec261e8"
        ],
        [
            "unfold eq_key_elt; simpl.",
            "VernacExtend",
            "bf44a4c26398e588d979c827f9b6e13759ab9f76"
        ],
        [
            "rewrite H0.",
            "VernacExtend",
            "1a54b13ac1654793174947eafd5c41a3f024eb49"
        ],
        [
            "rewrite add_o.",
            "VernacExtend",
            "121b6decf20bc36a3bd761621103188dd25d483a"
        ],
        [
            "destruct (eq_dec k a) as [EQ|NEQ]; split; auto.",
            "VernacExtend",
            "3235af61329629aa91d5388b0fa98336709f29f0"
        ],
        [
            "intros EQ'; inversion EQ'; auto.",
            "VernacExtend",
            "a8d96e697cc36b087b6829df0e24e319d83ba34e"
        ],
        [
            "intuition; subst; auto.",
            "VernacExtend",
            "a413b1004b36e70518df6bcd5c477cb046def878"
        ],
        [
            "elim H.",
            "VernacExtend",
            "853aa440c3a3810be05f0f87d0e688c05b92253d"
        ],
        [
            "exists b; rewrite EQ; auto with map.",
            "VernacExtend",
            "dfe1b7dfdfa9ec5241a935f9bf1c44be6459e366"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "elim NEQ; auto.",
            "VernacExtend",
            "eca00ca00059c28e759335205ca57430f41ca80e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_add : forall m k e i, ~In k m -> eqA (fold f (add k e m) i) (f k e (fold f m i)).",
            "VernacStartTheoremProof",
            "3feef0b185a69ce9328235b6e3fd81a940ac936a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply fold_Add; try red; auto.",
            "VernacExtend",
            "c4d1a529e09cfe8ba72019d057b0fc1f9a94b06c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fold_More.",
            "VernacEndSegment",
            "0d4075cea37f95fd599510ba8020a79e3ccdc7dc"
        ],
        [
            "Lemma cardinal_fold : forall m : t elt, cardinal m = fold (fun _ _ => S) m 0.",
            "VernacStartTheoremProof",
            "1a31fc51896fdb0c92b40e9ac7d0fcbb6e6c0ad6"
        ],
        [
            "intros; rewrite cardinal_1, fold_1.",
            "VernacExtend",
            "4f380911a415e672529d7714ffbee5f4d83ef808"
        ],
        [
            "symmetry; apply fold_left_length; auto.",
            "VernacExtend",
            "327b2d260806c39393dea2a2b39a454cdfffb98e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_Empty : forall m : t elt, Empty m <-> cardinal m = 0.",
            "VernacStartTheoremProof",
            "05494de519c53f619a8b50b3899a060469ce4b7b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite cardinal_1, elements_Empty.",
            "VernacExtend",
            "4843a3a8cefd9a76b0a59c80566ad96969a7957e"
        ],
        [
            "destruct (elements m); intuition; discriminate.",
            "VernacExtend",
            "e4c02369cae52a8f6e18e022042ce331234eb899"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Equal_cardinal : forall m m' : t elt, Equal m m' -> cardinal m = cardinal m'.",
            "VernacStartTheoremProof",
            "c0c94ebbbab7a397439052e447c90dc6fb07fdb1"
        ],
        [
            "intros; do 2 rewrite cardinal_fold.",
            "VernacExtend",
            "07a1b2e19c7402f6ab66b64ae943a06f9e7bbfb2"
        ],
        [
            "apply fold_Equal with (eqA:=eq); compute; auto.",
            "VernacExtend",
            "b118d86dc7293f1fa9e530d527015e8780ff40e2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_1 : forall m : t elt, Empty m -> cardinal m = 0.",
            "VernacStartTheoremProof",
            "b94336f65ef32a37ad6fe3828e6889fd42de2867"
        ],
        [
            "intros; rewrite <- cardinal_Empty; auto.",
            "VernacExtend",
            "46a17299e46b7c046bc097def92c7e0a64efad8e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_2 : forall m m' x e, ~ In x m -> Add x e m m' -> cardinal m' = S (cardinal m).",
            "VernacStartTheoremProof",
            "d0a8a1dabbd29574070a208e1b228b071c32486d"
        ],
        [
            "intros; do 2 rewrite cardinal_fold.",
            "VernacExtend",
            "07a1b2e19c7402f6ab66b64ae943a06f9e7bbfb2"
        ],
        [
            "change S with ((fun _ _ => S) x e).",
            "VernacExtend",
            "f05a4351ca5550f1c201c73def69160e6ee2c41c"
        ],
        [
            "apply fold_Add with (eqA:=eq); compute; auto.",
            "VernacExtend",
            "b8a9f6f889f64aa002e4337df3689468bc14cc59"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_inv_1 : forall m : t elt, cardinal m = 0 -> Empty m.",
            "VernacStartTheoremProof",
            "4b45c26de034b7d54ca2381a9b4f30bd6498476d"
        ],
        [
            "intros; rewrite cardinal_Empty; auto.",
            "VernacExtend",
            "c37e7098c5be23d3514442764278093339d23ee0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve cardinal_inv_1 : map.",
            "VernacHints",
            "f90ab51b3bd27fc6930af743e90bc472a9d7bf43"
        ],
        [
            "Lemma cardinal_inv_2 : forall m n, cardinal m = S n -> { p : key*elt | MapsTo (fst p) (snd p) m }.",
            "VernacStartTheoremProof",
            "7eb0311f5ac8b5f057fcd340d602d2cedbe52bc0"
        ],
        [
            "intros; rewrite M.cardinal_1 in *.",
            "VernacExtend",
            "a0e66a2c67cb846ebb71360a7a9c604457aa95f4"
        ],
        [
            "generalize (elements_mapsto_iff m).",
            "VernacExtend",
            "27ab3e78ba3a81c22774d30e531e0f91589a5109"
        ],
        [
            "destruct (elements m); try discriminate.",
            "VernacExtend",
            "e8eb7db4fe6f0b6b673a2cdae08c79ebf782119d"
        ],
        [
            "exists p; auto.",
            "VernacExtend",
            "ce43f93b5525ba4b412c7576bb2db79216326ab5"
        ],
        [
            "rewrite H0; destruct p; simpl; auto.",
            "VernacExtend",
            "cb57bf3d1195d18107556caece5e7daa8cff4897"
        ],
        [
            "constructor; red; auto.",
            "VernacExtend",
            "1fef2bc186d591d5b62b7b66aa42c6c0bf079aeb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_inv_2b : forall m, cardinal m <> 0 -> { p : key*elt | MapsTo (fst p) (snd p) m }.",
            "VernacStartTheoremProof",
            "be85419ba8b63a48b50ab4a4ff290e1e4b5b2012"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (@cardinal_inv_2 m); destruct cardinal.",
            "VernacExtend",
            "490d8a48974274427f6bbe2a71dfdc1fd27bc55e"
        ],
        [
            "elim H;auto.",
            "VernacExtend",
            "93275a139e0a54467a849c9ab468d4fd7beb5813"
        ],
        [
            "eauto.",
            "VernacExtend",
            "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Disjoint (m m' : t elt) := forall k, ~(In k m /\\ In k m').",
            "VernacDefinition",
            "5921ee4c8876eff09c887ad51454cc31ffbddd60"
        ],
        [
            "Definition Partition (m m1 m2 : t elt) := Disjoint m1 m2 /\\ (forall k e, MapsTo k e m <-> MapsTo k e m1 \\/ MapsTo k e m2).",
            "VernacDefinition",
            "6d03dc83b6c0acd84a0b24f94f34d4af6bb85c90"
        ],
        [
            "Definition filter (f : key -> elt -> bool)(m : t elt) := fold (fun k e m => if f k e then add k e m else m) m (empty _).",
            "VernacDefinition",
            "c63aef5e13f751e7bd4d9374e104f1df7c8c0904"
        ],
        [
            "Definition for_all (f : key -> elt -> bool)(m : t elt) := fold (fun k e b => if f k e then b else false) m true.",
            "VernacDefinition",
            "aea84c7810d7bee519367241030a4142e10477ba"
        ],
        [
            "Definition exists_ (f : key -> elt -> bool)(m : t elt) := fold (fun k e b => if f k e then true else b) m false.",
            "VernacDefinition",
            "253bf7131a155089f43b8e759350f6674c8aae67"
        ],
        [
            "Definition partition (f : key -> elt -> bool)(m : t elt) := (filter f m, filter (fun k e => negb (f k e)) m).",
            "VernacDefinition",
            "7145653b1ab8ad5f5d1cd6c6427e930c1fc6b71a"
        ],
        [
            "Definition update (m1 m2 : t elt) := fold (@add _) m2 m1.",
            "VernacDefinition",
            "995a107875ca4cabc028d0422cefc2daa5962907"
        ],
        [
            "Definition restrict (m1 m2 : t elt) := filter (fun k _ => mem k m2) m1.",
            "VernacDefinition",
            "f19484bf89df7b116afe273a83a0c4856b14682a"
        ],
        [
            "Definition diff (m1 m2 : t elt) := filter (fun k _ => negb (mem k m2)) m1.",
            "VernacDefinition",
            "fa9ad891f1839b2d880040d18067e8d42a1ccedf"
        ],
        [
            "Section Specs.",
            "VernacBeginSection",
            "3199301d6770bd7ed5c7ce4534ed3eb3b871eed0"
        ],
        [
            "Variable f : key -> elt -> bool.",
            "VernacAssumption",
            "74b240533460dde6b96ae12f3f230ccdd9dcfda1"
        ],
        [
            "Hypothesis Hf : Proper (E.eq==>eq==>eq) f.",
            "VernacAssumption",
            "c27d74ad12430a607b471919082b6a4952499a84"
        ],
        [
            "Lemma filter_iff : forall m k e, MapsTo k e (filter f m) <-> MapsTo k e m /\\ f k e = true.",
            "VernacStartTheoremProof",
            "6bf4ab0ff9beac94abc7d48c23418f5ba70e86a2"
        ],
        [
            "unfold filter.",
            "VernacExtend",
            "2a9754afcc2211b10451dc16a72ceb8f6c1884dc"
        ],
        [
            "set (f':=fun k e m => if f k e then add k e m else m).",
            "VernacExtend",
            "0c4913abbc9724cca57aafc3442d16dc9bfb4bb6"
        ],
        [
            "intro m.",
            "VernacExtend",
            "4b82221b29d931d49eaab61535235762be4a3968"
        ],
        [
            "pattern m, (fold f' m (empty _)).",
            "VernacExtend",
            "5fedd972f738cc264836c6e83db9588b8029ddb6"
        ],
        [
            "apply fold_rec.",
            "VernacExtend",
            "8446cba6cde578f8cb501f536270712789b8c361"
        ],
        [
            "intros m' Hm' k e.",
            "VernacExtend",
            "77ef110e77eac5d1df79aa2d6b153d6792699d61"
        ],
        [
            "rewrite empty_mapsto_iff.",
            "VernacExtend",
            "3a4b2bc4137f0357570d0347b3817d9170c8e972"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "elim (Hm' k e); auto.",
            "VernacExtend",
            "351d5b202eea4d1a02dd9c75721fad3e30fdb630"
        ],
        [
            "intros k e acc m1 m2 Hke Hn Hadd IH k' e'.",
            "VernacExtend",
            "9658a3d56f58d70391623f7365f1cdbc2a3c3988"
        ],
        [
            "change (Equal m2 (add k e m1)) in Hadd; rewrite Hadd.",
            "VernacExtend",
            "8c1783524d3656f21d67bbad6ee6ac618cfa4895"
        ],
        [
            "unfold f'; simpl.",
            "VernacExtend",
            "41170b69a136eb646686878305bfe4e5cee5740c"
        ],
        [
            "case_eq (f k e); intros Hfke; simpl; rewrite !add_mapsto_iff, IH; clear IH; intuition.",
            "VernacExtend",
            "edba53722b7462ea4d5bcc514bfefb9511858b59"
        ],
        [
            "rewrite <- Hfke; apply Hf; auto.",
            "VernacExtend",
            "1a53672f637dac85e2a68fb45f33ba7dff549a80"
        ],
        [
            "destruct (eq_dec k k') as [Hk|Hk]; [left|right]; auto.",
            "VernacExtend",
            "60ae3abbb060a4e56885f995123c272904b589b3"
        ],
        [
            "elim Hn; exists e'; rewrite Hk; auto.",
            "VernacExtend",
            "0b9fb1269b73b955997f195e5fe5c1059782d2d1"
        ],
        [
            "assert (f k e = f k' e') by (apply Hf; auto).",
            "VernacExtend",
            "7ac234b2a77f0996fbe4a4758f1ef7ddfcc049c4"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma for_all_iff : forall m, for_all f m = true <-> (forall k e, MapsTo k e m -> f k e = true).",
            "VernacStartTheoremProof",
            "d99fdec4b8d64dd2fae037312cd722e4c2d08d46"
        ],
        [
            "unfold for_all.",
            "VernacExtend",
            "0bb39ab1b91f3808b48f6bca5ad1d718c7138eb1"
        ],
        [
            "set (f':=fun k e b => if f k e then b else false).",
            "VernacExtend",
            "6e4d3806fb683d85a4420f2d6e3ff9a3201f8446"
        ],
        [
            "intro m.",
            "VernacExtend",
            "4b82221b29d931d49eaab61535235762be4a3968"
        ],
        [
            "pattern m, (fold f' m true).",
            "VernacExtend",
            "f7bebb82e46adab1453c805ce45fe486e4588dda"
        ],
        [
            "apply fold_rec.",
            "VernacExtend",
            "8446cba6cde578f8cb501f536270712789b8c361"
        ],
        [
            "intros m' Hm'.",
            "VernacExtend",
            "5aaf3d6f2cb1914a14393b69b15d7cc11d264d1c"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "intros _ k e Hke.",
            "VernacExtend",
            "60c7dad7a87fe41e72882c4c2e42e517b47c43d8"
        ],
        [
            "elim (Hm' k e); auto.",
            "VernacExtend",
            "351d5b202eea4d1a02dd9c75721fad3e30fdb630"
        ],
        [
            "intros k e b m1 m2 _ Hn Hadd IH.",
            "VernacExtend",
            "9b3dee61a04d01a1e8755e2b5c2cc042cb9ae898"
        ],
        [
            "clear m.",
            "VernacExtend",
            "a80ca0ce9b47923ab209b2552883e09a4a3f5ac7"
        ],
        [
            "change (Equal m2 (add k e m1)) in Hadd.",
            "VernacExtend",
            "50a6338fc9831572d2eea77685abcb8c27d832d7"
        ],
        [
            "unfold f'; simpl.",
            "VernacExtend",
            "41170b69a136eb646686878305bfe4e5cee5740c"
        ],
        [
            "case_eq (f k e); intros Hfke.",
            "VernacExtend",
            "b97aaca2f780436fa240ea470c1d225744331be6"
        ],
        [
            "rewrite IH.",
            "VernacExtend",
            "dbf4f765dab656705bc8df8600fa3b3017a20858"
        ],
        [
            "clear IH.",
            "VernacExtend",
            "daecf0ea8665f0f6fd551644d47b5ce1d93aef1e"
        ],
        [
            "split; intros Hmapsto k' e' Hke'.",
            "VernacExtend",
            "7bd0b7aa8928aebf308504436d786cf4bb39623a"
        ],
        [
            "rewrite Hadd, add_mapsto_iff in Hke'.",
            "VernacExtend",
            "5bc23de5e6b8b6ed51cf1720c661671b75de5c0c"
        ],
        [
            "destruct Hke' as [(?,?)|(?,?)]; auto.",
            "VernacExtend",
            "b559983583475096d7863467aa1f5ba1eb65ce59"
        ],
        [
            "rewrite <- Hfke; apply Hf; auto.",
            "VernacExtend",
            "1a53672f637dac85e2a68fb45f33ba7dff549a80"
        ],
        [
            "apply Hmapsto.",
            "VernacExtend",
            "28bc3a09a1be2cc8adb9e0e45b7ed165afce8419"
        ],
        [
            "rewrite Hadd, add_mapsto_iff; right; split; auto.",
            "VernacExtend",
            "ea126711961030a5cf6026e53dedd80b1fb5bb0a"
        ],
        [
            "contradict Hn; exists e'; rewrite Hn; auto.",
            "VernacExtend",
            "8ff309a34c6a170f3cfbc7cb53899b80d50babf4"
        ],
        [
            "split; try discriminate.",
            "VernacExtend",
            "b9a0e4944f458b52a9e45f100ef8b1a7a5b136f6"
        ],
        [
            "intros Hmapsto.",
            "VernacExtend",
            "b6c91369624c5ba297ae85afaf3607dfbd2cedaa"
        ],
        [
            "rewrite <- Hfke.",
            "VernacExtend",
            "c154eb750af0b80245bf28eacdbb811071ef98c7"
        ],
        [
            "apply Hmapsto.",
            "VernacExtend",
            "28bc3a09a1be2cc8adb9e0e45b7ed165afce8419"
        ],
        [
            "rewrite Hadd, add_mapsto_iff; auto.",
            "VernacExtend",
            "ecd04b7c82b0643be9c88629d34bf5761f18de1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma exists_iff : forall m, exists_ f m = true <-> (exists p, MapsTo (fst p) (snd p) m /\\ f (fst p) (snd p) = true).",
            "VernacStartTheoremProof",
            "61c00ffca4e0dda4d312d09941b9b50fab15c12a"
        ],
        [
            "unfold exists_.",
            "VernacExtend",
            "d2f748821143b5dc214f1dee23c213aab50935e0"
        ],
        [
            "set (f':=fun k e b => if f k e then true else b).",
            "VernacExtend",
            "ac2901249132340fd5394820143bfd19b9956af1"
        ],
        [
            "intro m.",
            "VernacExtend",
            "4b82221b29d931d49eaab61535235762be4a3968"
        ],
        [
            "pattern m, (fold f' m false).",
            "VernacExtend",
            "e91ad2f21ea669f2c3882fda03d5c4b40fb22512"
        ],
        [
            "apply fold_rec.",
            "VernacExtend",
            "8446cba6cde578f8cb501f536270712789b8c361"
        ],
        [
            "intros m' Hm'.",
            "VernacExtend",
            "5aaf3d6f2cb1914a14393b69b15d7cc11d264d1c"
        ],
        [
            "split; try discriminate.",
            "VernacExtend",
            "b9a0e4944f458b52a9e45f100ef8b1a7a5b136f6"
        ],
        [
            "intros ((k,e),(Hke,_)); simpl in *.",
            "VernacExtend",
            "2cf50cc7c78dcc25a979d7d9118070d503936558"
        ],
        [
            "elim (Hm' k e); auto.",
            "VernacExtend",
            "351d5b202eea4d1a02dd9c75721fad3e30fdb630"
        ],
        [
            "intros k e b m1 m2 _ Hn Hadd IH.",
            "VernacExtend",
            "9b3dee61a04d01a1e8755e2b5c2cc042cb9ae898"
        ],
        [
            "clear m.",
            "VernacExtend",
            "a80ca0ce9b47923ab209b2552883e09a4a3f5ac7"
        ],
        [
            "change (Equal m2 (add k e m1)) in Hadd.",
            "VernacExtend",
            "50a6338fc9831572d2eea77685abcb8c27d832d7"
        ],
        [
            "unfold f'; simpl.",
            "VernacExtend",
            "41170b69a136eb646686878305bfe4e5cee5740c"
        ],
        [
            "case_eq (f k e); intros Hfke.",
            "VernacExtend",
            "b97aaca2f780436fa240ea470c1d225744331be6"
        ],
        [
            "split; [intros _|auto].",
            "VernacExtend",
            "12502858b1511a07e4afdb9bfe52005861c28113"
        ],
        [
            "exists (k,e); simpl; split; auto.",
            "VernacExtend",
            "8daf71a9b91da6e544b6241a211c99b8bfe950ee"
        ],
        [
            "rewrite Hadd, add_mapsto_iff; auto.",
            "VernacExtend",
            "ecd04b7c82b0643be9c88629d34bf5761f18de1e"
        ],
        [
            "rewrite IH.",
            "VernacExtend",
            "dbf4f765dab656705bc8df8600fa3b3017a20858"
        ],
        [
            "clear IH.",
            "VernacExtend",
            "daecf0ea8665f0f6fd551644d47b5ce1d93aef1e"
        ],
        [
            "split; intros ((k',e'),(Hke1,Hke2)); simpl in *.",
            "VernacExtend",
            "0b387d42483590283c06b132483d5564f88af450"
        ],
        [
            "exists (k',e'); simpl; split; auto.",
            "VernacExtend",
            "619ea602d9475b1eed07dd1d2452c8769ded9729"
        ],
        [
            "rewrite Hadd, add_mapsto_iff; right; split; auto.",
            "VernacExtend",
            "ea126711961030a5cf6026e53dedd80b1fb5bb0a"
        ],
        [
            "contradict Hn.",
            "VernacExtend",
            "6a108a37143e2247b77d263fb72dc84667b1f529"
        ],
        [
            "exists e'; rewrite Hn; auto.",
            "VernacExtend",
            "ee16b1d330affc069ad902b98a760fd7d86a16d2"
        ],
        [
            "rewrite Hadd, add_mapsto_iff in Hke1.",
            "VernacExtend",
            "39a6fadcdeaefd94237c386e8eb62f2a09f792b1"
        ],
        [
            "destruct Hke1 as [(?,?)|(?,?)].",
            "VernacExtend",
            "7b6f503ed5abeb7783efeefe7adaccaa1c832d57"
        ],
        [
            "assert (f k' e' = f k e) by (apply Hf; auto).",
            "VernacExtend",
            "2bd5d93ba42b286bf41f13502dcb3f03cb2acf26"
        ],
        [
            "congruence.",
            "VernacExtend",
            "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
        ],
        [
            "exists (k',e'); auto.",
            "VernacExtend",
            "dd9c778700b3a386f768942dac1241986fc85713"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Specs.",
            "VernacEndSegment",
            "cd208cf6549faa997d087fa0ced605d679ec61de"
        ],
        [
            "Lemma Disjoint_alt : forall m m', Disjoint m m' <-> (forall k e e', MapsTo k e m -> MapsTo k e' m' -> False).",
            "VernacStartTheoremProof",
            "7e55bb7790346da984e136cc6c6f9c10b774c22b"
        ],
        [
            "unfold Disjoint; split.",
            "VernacExtend",
            "f151abf924f02188b25516517d598f51910948f1"
        ],
        [
            "intros H k v v' H1 H2.",
            "VernacExtend",
            "a42fa34a5a6ba248ddf96cd956f9acf502a558a7"
        ],
        [
            "apply H with k; split.",
            "VernacExtend",
            "ceb06845e2bd3a4c2c3037e4c88df7c94d3583ef"
        ],
        [
            "exists v; trivial.",
            "VernacExtend",
            "b3b4a9c5df8441357b1332b74fcd5cc720c67ccc"
        ],
        [
            "exists v'; trivial.",
            "VernacExtend",
            "ca114480d36a87c839bb07c52c07771ba67e111f"
        ],
        [
            "intros H k ((v,Hv),(v',Hv')).",
            "VernacExtend",
            "dfce7bab3b5e1e3576d1748db5738cfaf4227dee"
        ],
        [
            "eapply H; eauto.",
            "VernacExtend",
            "d625be3dbb1364dd2bd116c00aefec9fb61c11c0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section Partition.",
            "VernacBeginSection",
            "b3f0eb1fb992c0243d3fcae62e1a61e7860ad7e9"
        ],
        [
            "Variable f : key -> elt -> bool.",
            "VernacAssumption",
            "74b240533460dde6b96ae12f3f230ccdd9dcfda1"
        ],
        [
            "Hypothesis Hf : Proper (E.eq==>eq==>eq) f.",
            "VernacAssumption",
            "c27d74ad12430a607b471919082b6a4952499a84"
        ],
        [
            "Lemma partition_iff_1 : forall m m1 k e, m1 = fst (partition f m) -> (MapsTo k e m1 <-> MapsTo k e m /\\ f k e = true).",
            "VernacStartTheoremProof",
            "2e4733901858518638576160a2ccd061f8006d2c"
        ],
        [
            "unfold partition; simpl; intros.",
            "VernacExtend",
            "bfb5cc161ee21364cb41f4d7ee667f2eb15ea61a"
        ],
        [
            "subst m1.",
            "VernacExtend",
            "734c96307583a0cb5343c3cdc533179c2f2b720e"
        ],
        [
            "apply filter_iff; auto.",
            "VernacExtend",
            "d2667ace7afa123841fa2c7d116d8111012a1788"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_iff_2 : forall m m2 k e, m2 = snd (partition f m) -> (MapsTo k e m2 <-> MapsTo k e m /\\ f k e = false).",
            "VernacStartTheoremProof",
            "6fc89864ddb1caab069487ae63bb2bdb508f7b50"
        ],
        [
            "unfold partition; simpl; intros.",
            "VernacExtend",
            "bfb5cc161ee21364cb41f4d7ee667f2eb15ea61a"
        ],
        [
            "subst m2.",
            "VernacExtend",
            "89272534d527cbd91f0e02df88c6c6db98e2b8eb"
        ],
        [
            "rewrite filter_iff.",
            "VernacExtend",
            "bd367416eeb56baaf950c500deb6f6c288a571b5"
        ],
        [
            "split; intros (H,H'); split; auto.",
            "VernacExtend",
            "23024d38389ad303b3ea54ef97a9828d7511871c"
        ],
        [
            "destruct (f k e); simpl in *; auto.",
            "VernacExtend",
            "e05cc8e7a16a09ad89e32736c51787b5f14ef631"
        ],
        [
            "rewrite H'; auto.",
            "VernacExtend",
            "0481628cb42a32c108ba3d93a9fcf120cdc2ce19"
        ],
        [
            "repeat red; intros.",
            "VernacExtend",
            "3b23460c57f21b9e3c22bb0a3b36545050809490"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "apply Hf; auto.",
            "VernacExtend",
            "0cf90a65fdeec89bb08869eb2f84f0408a558be0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma partition_Partition : forall m m1 m2, partition f m = (m1,m2) -> Partition m m1 m2.",
            "VernacStartTheoremProof",
            "8d492772ebfedb8aed6313b2ad2508e7068c54a6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "rewrite Disjoint_alt.",
            "VernacExtend",
            "04fc22202d8e478124051947db78975371663311"
        ],
        [
            "intros k e e'.",
            "VernacExtend",
            "e35d96ebd50dbca120bf826a989d05d3242a2080"
        ],
        [
            "rewrite (@partition_iff_1 m m1), (@partition_iff_2 m m2) by (rewrite H; auto).",
            "VernacExtend",
            "9f261cb177b832b8d14f3feba71c4a4887027eb5"
        ],
        [
            "intros (U,V) (W,Z).",
            "VernacExtend",
            "6a7d517b26e846ea47062105f4195ed5f892554a"
        ],
        [
            "rewrite <- (MapsTo_fun U W) in Z; congruence.",
            "VernacExtend",
            "449ba56ff3f5f35b7d23e3a7685e4068a444f46b"
        ],
        [
            "intros k e.",
            "VernacExtend",
            "eca52c2499b4713b03b9acda11b2e5755efc388f"
        ],
        [
            "rewrite (@partition_iff_1 m m1), (@partition_iff_2 m m2) by (rewrite H; auto).",
            "VernacExtend",
            "9f261cb177b832b8d14f3feba71c4a4887027eb5"
        ],
        [
            "destruct (f k e); intuition.",
            "VernacExtend",
            "3f8223c5d614e7baeb0de211701765a85ba0e345"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Partition.",
            "VernacEndSegment",
            "818f791fb4639635ee9f8ef20d9b2bdaf524e0a4"
        ],
        [
            "Lemma Partition_In : forall m m1 m2 k, Partition m m1 m2 -> In k m -> {In k m1}+{In k m2}.",
            "VernacStartTheoremProof",
            "11fa8e71f2b3f0a86cc04910c0efd0ffc8025e3e"
        ],
        [
            "intros m m1 m2 k Hm Hk.",
            "VernacExtend",
            "45ac44a36476cc965e369d251b5f274344b3a1ea"
        ],
        [
            "destruct (In_dec m1 k) as [H|H]; [left|right]; auto.",
            "VernacExtend",
            "cf2eb3335337aa334f43b294dbfeae9f2d3ef4bb"
        ],
        [
            "destruct Hm as (Hm,Hm').",
            "VernacExtend",
            "e6611a6a25925b2dc734ddbb49deb0f5767bd686"
        ],
        [
            "destruct Hk as (e,He); rewrite Hm' in He; destruct He.",
            "VernacExtend",
            "9e7cbf33d350e11dbb59649541177a0cb1fd2c3d"
        ],
        [
            "elim H; exists e; auto.",
            "VernacExtend",
            "d5c10bbde802cf3c87773babc6d640993c102dad"
        ],
        [
            "exists e; auto.",
            "VernacExtend",
            "5789629a110c642815687c3512a8c438259c58a1"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma Disjoint_sym : forall m1 m2, Disjoint m1 m2 -> Disjoint m2 m1.",
            "VernacStartTheoremProof",
            "b0db0648f25bc35bb96b3233f3c7c3369d05f0c0"
        ],
        [
            "intros m1 m2 H k (H1,H2).",
            "VernacExtend",
            "bb568be0da17f9b3aba75c4a407cd14520f44d07"
        ],
        [
            "elim (H k); auto.",
            "VernacExtend",
            "8d5dea47ed923d3713c0cbb1eb5ae53bcd18b9cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Partition_sym : forall m m1 m2, Partition m m1 m2 -> Partition m m2 m1.",
            "VernacStartTheoremProof",
            "9352b81ef77b3c733489d13b076c0cd0810a6cb0"
        ],
        [
            "intros m m1 m2 (H,H'); split.",
            "VernacExtend",
            "d19f0899dd9913fbf3055bc17e98848a4485c4b1"
        ],
        [
            "apply Disjoint_sym; auto.",
            "VernacExtend",
            "2fcbd65d5de5016545a7c4b506990b9740fe4114"
        ],
        [
            "intros; rewrite H'; intuition.",
            "VernacExtend",
            "464b7faedeb6b7635a574109674c322ea006cd3d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Partition_Empty : forall m m1 m2, Partition m m1 m2 -> (Empty m <-> (Empty m1 /\\ Empty m2)).",
            "VernacStartTheoremProof",
            "0692a0334d592f927ee07c62e286b76ce5d7ac55"
        ],
        [
            "intros m m1 m2 (Hdisj,Heq).",
            "VernacExtend",
            "20ac802f3cf8cc8ba1de0c52569c6de3cb74b6de"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intro He.",
            "VernacExtend",
            "63d92d034793f255f9fd90d0115a84a7a7c9fa1f"
        ],
        [
            "split; intros k e Hke; elim (He k e); rewrite Heq; auto.",
            "VernacExtend",
            "d449e8a88aa020c014a9121140d2f4ab93c5fc13"
        ],
        [
            "intros (He1,He2) k e Hke.",
            "VernacExtend",
            "573255917d4847ccbd7aaac049003bc83f63c6d7"
        ],
        [
            "rewrite Heq in Hke.",
            "VernacExtend",
            "630ddd3651772c0d835323bcdb8c5da2d706dac5"
        ],
        [
            "destruct Hke.",
            "VernacExtend",
            "9595aaa7dc7e487ad151ef7b80630facf7100488"
        ],
        [
            "elim (He1 k e); auto.",
            "VernacExtend",
            "548453ac44f32d9068e938da3b8ff2d11a2c8d1f"
        ],
        [
            "elim (He2 k e); auto.",
            "VernacExtend",
            "fe6f79bda338def70bfd1db86a6cf96db6f1007e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Partition_Add : forall m m' x e , ~In x m -> Add x e m m' -> forall m1 m2, Partition m' m1 m2 -> exists m3, (Add x e m3 m1 /\\ Partition m m3 m2 \\/ Add x e m3 m2 /\\ Partition m m1 m3).",
            "VernacStartTheoremProof",
            "f33b66eb1ce1483657844917e6cacb22b6cb1783"
        ],
        [
            "unfold Partition.",
            "VernacExtend",
            "357bd4383d649e7941f1061bb7d58762e26298de"
        ],
        [
            "intros m m' x e Hn Hadd m1 m2 (Hdisj,Hor).",
            "VernacExtend",
            "93ba065875ac69a9cc131aa36b461d3a3a9a18c7"
        ],
        [
            "assert (Heq : Equal m (remove x m')).",
            "VernacExtend",
            "b52966d91fb761b4f4dc52af72649eb4870ca320"
        ],
        [
            "change (Equal m' (add x e m)) in Hadd.",
            "VernacExtend",
            "09c9ed0b1f0013c40dbc3a2cc9ed72e1e6df828d"
        ],
        [
            "rewrite Hadd.",
            "VernacExtend",
            "ef9251ea57953b6e6ee5f7ca2274ced636946664"
        ],
        [
            "intro k.",
            "VernacExtend",
            "32e738adabd1b2845bb50beed60df9eefe677271"
        ],
        [
            "rewrite remove_o, add_o.",
            "VernacExtend",
            "4c954ba464fcb5294e7ec8ae9cefc414f0bfa126"
        ],
        [
            "destruct eq_dec as [He|Hne]; auto.",
            "VernacExtend",
            "f680c1e8f8b4c5dc6afa2104c58a0b2eeea5e0b9"
        ],
        [
            "rewrite <- He, <- not_find_in_iff; auto.",
            "VernacExtend",
            "c6e9fd4b2d3be6f2c25b6c9bb1bbb9f073706e63"
        ],
        [
            "assert (H : MapsTo x e m').",
            "VernacExtend",
            "fc9581d6933b79c70880e27076aad7d5dd47cfd8"
        ],
        [
            "change (Equal m' (add x e m)) in Hadd; rewrite Hadd.",
            "VernacExtend",
            "9d51d342eaffacf0575ab413ef328a757fc77b14"
        ],
        [
            "apply add_1; auto.",
            "VernacExtend",
            "5b033b822b1e698507f2fd2dd2418d0f846a350f"
        ],
        [
            "rewrite Hor in H; destruct H.",
            "VernacExtend",
            "a06b17422c3bf27ef9b11ec4e2ca1d6cf01fe339"
        ],
        [
            "exists (remove x m1); left.",
            "VernacExtend",
            "7e5f8b5e27dc110bcd67b959968b31391f661f0a"
        ],
        [
            "split; [|split].",
            "VernacExtend",
            "d2f933e98f73ab8a5c6be2969adff348cdfe06d5"
        ],
        [
            "change (Equal m1 (add x e (remove x m1))).",
            "VernacExtend",
            "e4894730e7f8489c08828a6a3473f6abaf5dc752"
        ],
        [
            "intro k.",
            "VernacExtend",
            "32e738adabd1b2845bb50beed60df9eefe677271"
        ],
        [
            "rewrite add_o, remove_o.",
            "VernacExtend",
            "6c089d144d3f76a8711bb891324dba0798c52f07"
        ],
        [
            "destruct eq_dec as [He|Hne]; auto.",
            "VernacExtend",
            "f680c1e8f8b4c5dc6afa2104c58a0b2eeea5e0b9"
        ],
        [
            "rewrite <- He; apply find_1; auto.",
            "VernacExtend",
            "a2a67af4c5005399efa9e29cfbbd954cc9395f73"
        ],
        [
            "intros k (H1,H2).",
            "VernacExtend",
            "4af9fd142fc7a0b3d46f7de7b68c8297abd7092c"
        ],
        [
            "elim (Hdisj k).",
            "VernacExtend",
            "59f4e25400c2efd0efc24bca328db75d08b2d2ac"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite remove_in_iff in H1; destruct H1; auto.",
            "VernacExtend",
            "478b26d3bada1722aa2b4e0c550b06c44e6f83eb"
        ],
        [
            "intros k' e'.",
            "VernacExtend",
            "c48f47404b5b3065a22f04c043f27d4322fe4b93"
        ],
        [
            "rewrite Heq, 2 remove_mapsto_iff, Hor.",
            "VernacExtend",
            "9b480a497f2a288ac9209515fe4fab7063dcd55d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "elim (Hdisj x); split; [exists e|exists e']; auto.",
            "VernacExtend",
            "f3e959409b9de5b0ed659a43c6763d0977c65d32"
        ],
        [
            "apply MapsTo_1 with k'; auto.",
            "VernacExtend",
            "5de32b46d491d5ff0dc76135c18424f0236082a8"
        ],
        [
            "exists (remove x m2); right.",
            "VernacExtend",
            "fe889978a65de3e8feae5a10a8b2c281e46b431b"
        ],
        [
            "split; [|split].",
            "VernacExtend",
            "d2f933e98f73ab8a5c6be2969adff348cdfe06d5"
        ],
        [
            "change (Equal m2 (add x e (remove x m2))).",
            "VernacExtend",
            "d8ee8f42d4598c3a3bd3674b3b6f3ec00d9035e2"
        ],
        [
            "intro k.",
            "VernacExtend",
            "32e738adabd1b2845bb50beed60df9eefe677271"
        ],
        [
            "rewrite add_o, remove_o.",
            "VernacExtend",
            "6c089d144d3f76a8711bb891324dba0798c52f07"
        ],
        [
            "destruct eq_dec as [He|Hne]; auto.",
            "VernacExtend",
            "f680c1e8f8b4c5dc6afa2104c58a0b2eeea5e0b9"
        ],
        [
            "rewrite <- He; apply find_1; auto.",
            "VernacExtend",
            "a2a67af4c5005399efa9e29cfbbd954cc9395f73"
        ],
        [
            "intros k (H1,H2).",
            "VernacExtend",
            "4af9fd142fc7a0b3d46f7de7b68c8297abd7092c"
        ],
        [
            "elim (Hdisj k).",
            "VernacExtend",
            "59f4e25400c2efd0efc24bca328db75d08b2d2ac"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "rewrite remove_in_iff in H2; destruct H2; auto.",
            "VernacExtend",
            "bb40ca4727bec88f38d8610313ac1c79cb9adb12"
        ],
        [
            "intros k' e'.",
            "VernacExtend",
            "c48f47404b5b3065a22f04c043f27d4322fe4b93"
        ],
        [
            "rewrite Heq, 2 remove_mapsto_iff, Hor.",
            "VernacExtend",
            "9b480a497f2a288ac9209515fe4fab7063dcd55d"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "elim (Hdisj x); split; [exists e'|exists e]; auto.",
            "VernacExtend",
            "68991a36ff079016fb2a79a844120b80dba1a19b"
        ],
        [
            "apply MapsTo_1 with k'; auto.",
            "VernacExtend",
            "5de32b46d491d5ff0dc76135c18424f0236082a8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Partition_fold : forall (A:Type)(eqA:A->A->Prop)(st:Equivalence eqA)(f:key->elt->A->A), Proper (E.eq==>eq==>eqA==>eqA) f -> transpose_neqkey eqA f -> forall m m1 m2 i, Partition m m1 m2 -> eqA (fold f m i) (fold f m1 (fold f m2 i)).",
            "VernacStartTheoremProof",
            "cdbcfe0f00765a260761176a0fea610c74f4f0de"
        ],
        [
            "intros A eqA st f Comp Tra.",
            "VernacExtend",
            "2106229a483dd75b10fdb650600e397b40c632e1"
        ],
        [
            "induction m as [m Hm|m m' IH k e Hn Hadd] using map_induction.",
            "VernacExtend",
            "c05e2a17438e9b92317d2c88613273e98dc5c769"
        ],
        [
            "intros m1 m2 i Hp.",
            "VernacExtend",
            "d7bd6096584fb9bdb8965bb64dba6ff720bce79f"
        ],
        [
            "rewrite (fold_Empty (eqA:=eqA)); auto.",
            "VernacExtend",
            "bd7d3fe1b27c03a726eacf8beebf084d325665d5"
        ],
        [
            "rewrite (Partition_Empty Hp) in Hm.",
            "VernacExtend",
            "6a0de65f24c5da20828b6f894479704f9caf0170"
        ],
        [
            "destruct Hm.",
            "VernacExtend",
            "899213cb9c54109e086c968ca2bf6219054f8765"
        ],
        [
            "rewrite 2 (fold_Empty (eqA:=eqA)); auto.",
            "VernacExtend",
            "35d0ef40a77d21f05a050a3caf1140131e6a7e9b"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros m1 m2 i Hp.",
            "VernacExtend",
            "d7bd6096584fb9bdb8965bb64dba6ff720bce79f"
        ],
        [
            "destruct (Partition_Add Hn Hadd Hp) as (m3,[(Hadd',Hp')|(Hadd',Hp')]).",
            "VernacExtend",
            "004024933259eff23ee532c9a2f2b16b43078bd1"
        ],
        [
            "assert (~In k m3).",
            "VernacExtend",
            "1e9d3d2759569a3ba02e142372519f0ae3c6f30b"
        ],
        [
            "contradict Hn.",
            "VernacExtend",
            "6a108a37143e2247b77d263fb72dc84667b1f529"
        ],
        [
            "destruct Hn as (e',He').",
            "VernacExtend",
            "e41c12f52c7a3ba1805f4076906d45928c5ac0b2"
        ],
        [
            "destruct Hp' as (Hp1,Hp2).",
            "VernacExtend",
            "a2951bc608ea74406e9caf72553f6728ebaa97c6"
        ],
        [
            "exists e'.",
            "VernacExtend",
            "a668b65063a69e3331e3f3a09838f057d45d4c4e"
        ],
        [
            "rewrite Hp2; auto.",
            "VernacExtend",
            "5a4d702e3a3834b93322fbe239fa22eb645ba74c"
        ],
        [
            "transitivity (f k e (fold f m i)).",
            "VernacExtend",
            "b6bfa773ef15756fca2865efd135d0ff8a92338f"
        ],
        [
            "apply fold_Add with (eqA:=eqA); auto.",
            "VernacExtend",
            "4c18f3ad1a11b8af2a8a0e864005d4c6ea2ff9e3"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "transitivity (f k e (fold f m3 (fold f m2 i))).",
            "VernacExtend",
            "340a180fe8efa5f1e94f6a3681b147e9d4766a7f"
        ],
        [
            "apply fold_Add with (eqA:=eqA); auto.",
            "VernacExtend",
            "4c18f3ad1a11b8af2a8a0e864005d4c6ea2ff9e3"
        ],
        [
            "apply Comp; auto.",
            "VernacExtend",
            "6940f5400f8a56a9db9d1cfe44618b4e1d7cefae"
        ],
        [
            "symmetry; apply IH; auto.",
            "VernacExtend",
            "afce0ca30b40c266f32f9f45c4dab827998c331b"
        ],
        [
            "assert (~In k m3).",
            "VernacExtend",
            "1e9d3d2759569a3ba02e142372519f0ae3c6f30b"
        ],
        [
            "contradict Hn.",
            "VernacExtend",
            "6a108a37143e2247b77d263fb72dc84667b1f529"
        ],
        [
            "destruct Hn as (e',He').",
            "VernacExtend",
            "e41c12f52c7a3ba1805f4076906d45928c5ac0b2"
        ],
        [
            "destruct Hp' as (Hp1,Hp2).",
            "VernacExtend",
            "a2951bc608ea74406e9caf72553f6728ebaa97c6"
        ],
        [
            "exists e'.",
            "VernacExtend",
            "a668b65063a69e3331e3f3a09838f057d45d4c4e"
        ],
        [
            "rewrite Hp2; auto.",
            "VernacExtend",
            "5a4d702e3a3834b93322fbe239fa22eb645ba74c"
        ],
        [
            "assert (~In k m1).",
            "VernacExtend",
            "75c346bfa1a3e2d9039199d43647aee16e847d67"
        ],
        [
            "contradict Hn.",
            "VernacExtend",
            "6a108a37143e2247b77d263fb72dc84667b1f529"
        ],
        [
            "destruct Hn as (e',He').",
            "VernacExtend",
            "e41c12f52c7a3ba1805f4076906d45928c5ac0b2"
        ],
        [
            "destruct Hp' as (Hp1,Hp2).",
            "VernacExtend",
            "a2951bc608ea74406e9caf72553f6728ebaa97c6"
        ],
        [
            "exists e'.",
            "VernacExtend",
            "a668b65063a69e3331e3f3a09838f057d45d4c4e"
        ],
        [
            "rewrite Hp2; auto.",
            "VernacExtend",
            "5a4d702e3a3834b93322fbe239fa22eb645ba74c"
        ],
        [
            "transitivity (f k e (fold f m i)).",
            "VernacExtend",
            "b6bfa773ef15756fca2865efd135d0ff8a92338f"
        ],
        [
            "apply fold_Add with (eqA:=eqA); auto.",
            "VernacExtend",
            "4c18f3ad1a11b8af2a8a0e864005d4c6ea2ff9e3"
        ],
        [
            "transitivity (f k e (fold f m1 (fold f m3 i))).",
            "VernacExtend",
            "02f2d3b208c2fe5b53cbbd025d4b4280a620598c"
        ],
        [
            "apply Comp; auto using IH.",
            "VernacExtend",
            "5cc7a787694faa96ee8ef2c9e7ca625b88208dd2"
        ],
        [
            "transitivity (fold f m1 (f k e (fold f m3 i))).",
            "VernacExtend",
            "c6e04e41e87700549b7e169dcec897903cc6594b"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply fold_commutes with (eqA:=eqA); auto.",
            "VernacExtend",
            "8546d79a9e1b55632aa78b98adaa204f3ef14188"
        ],
        [
            "apply fold_init with (eqA:=eqA); auto.",
            "VernacExtend",
            "a6d837c9d58d01854ed1b9ec264186c32dbbb218"
        ],
        [
            "symmetry.",
            "VernacExtend",
            "a08fc0dc04bba893008bded8181f393e2d8db167"
        ],
        [
            "apply fold_Add with (eqA:=eqA); auto.",
            "VernacExtend",
            "4c18f3ad1a11b8af2a8a0e864005d4c6ea2ff9e3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Partition_cardinal : forall m m1 m2, Partition m m1 m2 -> cardinal m = cardinal m1 + cardinal m2.",
            "VernacStartTheoremProof",
            "4b8a62f869bb45dbf41cd7096aacfc37ba0913e7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite (cardinal_fold m), (cardinal_fold m1).",
            "VernacExtend",
            "2ae94273548fccdd316b3719bda5cb0d2295988e"
        ],
        [
            "set (f:=fun (_:key)(_:elt)=>S).",
            "VernacExtend",
            "03b33f5bf952ee9f2692b0e09eb997e7320d765e"
        ],
        [
            "setoid_replace (fold f m 0) with (fold f m1 (fold f m2 0)).",
            "VernacExtend",
            "187aacfd538dc6febed4e4ca4144d4e692d99421"
        ],
        [
            "rewrite <- cardinal_fold.",
            "VernacExtend",
            "8fde755f23425438e2b08b6c5e51ea950b0bedbc"
        ],
        [
            "apply fold_rel with (R:=fun u v => u = v + cardinal m2); simpl; auto.",
            "VernacExtend",
            "7466f9e2992fd6d392703f2e925325de90b72202"
        ],
        [
            "apply Partition_fold with (eqA:=eq); repeat red; auto.",
            "VernacExtend",
            "dd17db98ef164b2a0c4a442c4eaab7276e2ffaff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Partition_partition : forall m m1 m2, Partition m m1 m2 -> let f := fun k (_:elt) => mem k m1 in Equal m1 (fst (partition f m)) /\\ Equal m2 (snd (partition f m)).",
            "VernacStartTheoremProof",
            "5a7b6d8aa387aeb61272d5e3691aaa7477d06ff9"
        ],
        [
            "intros m m1 m2 Hm f.",
            "VernacExtend",
            "2d2d518bda1b2e12a88650f1061cab6efea48f16"
        ],
        [
            "assert (Hf : Proper (E.eq==>eq==>eq) f).",
            "VernacExtend",
            "0f60c35084683a0fd69448796bba36cc906c0696"
        ],
        [
            "intros k k' Hk e e' _; unfold f; rewrite Hk; auto.",
            "VernacExtend",
            "7bd496be5f13e27aeaee8e8ac6dbb9d48871a99a"
        ],
        [
            "set (m1':= fst (partition f m)).",
            "VernacExtend",
            "0bbe254d5a2e7883acea849e056e3b8e29774e59"
        ],
        [
            "set (m2':= snd (partition f m)).",
            "VernacExtend",
            "27eead18c1a7f2d6962a1fcefda79994fb9c12ce"
        ],
        [
            "split; rewrite Equal_mapsto_iff; intros k e.",
            "VernacExtend",
            "61969240ec1f6ce9f8a750edcd3f8c8422c4213e"
        ],
        [
            "rewrite (@partition_iff_1 f Hf m m1') by auto.",
            "VernacExtend",
            "0d494d817559e1dac36850c79b15280897286b19"
        ],
        [
            "unfold f.",
            "VernacExtend",
            "54a386f4161710b69df4a2025df24a14e842ecf2"
        ],
        [
            "rewrite <- mem_in_iff.",
            "VernacExtend",
            "aaa046eddd1be6c25fd48698ae8b15d8f93edc72"
        ],
        [
            "destruct Hm as (Hm,Hm').",
            "VernacExtend",
            "e6611a6a25925b2dc734ddbb49deb0f5767bd686"
        ],
        [
            "rewrite Hm'.",
            "VernacExtend",
            "db2531e513a13df52e282a9f9ef9d7f4a316f362"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "exists e; auto.",
            "VernacExtend",
            "5789629a110c642815687c3512a8c438259c58a1"
        ],
        [
            "elim (Hm k); split; auto; exists e; auto.",
            "VernacExtend",
            "4b15e95784a5ca90da839611f0ce0aa59dfd375f"
        ],
        [
            "rewrite (@partition_iff_2 f Hf m m2') by auto.",
            "VernacExtend",
            "65c66414fab8e54f24a305bbe5ad2c9a6bace0c8"
        ],
        [
            "unfold f.",
            "VernacExtend",
            "54a386f4161710b69df4a2025df24a14e842ecf2"
        ],
        [
            "rewrite <- not_mem_in_iff.",
            "VernacExtend",
            "3617cca0340c6f58d630759d351644f44717003e"
        ],
        [
            "destruct Hm as (Hm,Hm').",
            "VernacExtend",
            "e6611a6a25925b2dc734ddbb49deb0f5767bd686"
        ],
        [
            "rewrite Hm'.",
            "VernacExtend",
            "db2531e513a13df52e282a9f9ef9d7f4a316f362"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "elim (Hm k); split; auto; exists e; auto.",
            "VernacExtend",
            "4b15e95784a5ca90da839611f0ce0aa59dfd375f"
        ],
        [
            "elim H1; exists e; auto.",
            "VernacExtend",
            "4d5a64a0e8e0944f36b24f06347c0c20e65b092d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma update_mapsto_iff : forall m m' k e, MapsTo k e (update m m') <-> (MapsTo k e m' \\/ (MapsTo k e m /\\ ~In k m')).",
            "VernacStartTheoremProof",
            "7a8c9774011498b44b7c25de5db7986f3931480c"
        ],
        [
            "unfold update.",
            "VernacExtend",
            "62e04ebb1477401cedc82913efbc37f9d65c298a"
        ],
        [
            "intros m m'.",
            "VernacExtend",
            "617ebb524c10b94a79f3da66164aa5e3960dcac8"
        ],
        [
            "pattern m', (fold (@add _) m' m).",
            "VernacExtend",
            "e822911ecea9b3a5c920dffe84cb0e829c6e69a1"
        ],
        [
            "apply fold_rec.",
            "VernacExtend",
            "8446cba6cde578f8cb501f536270712789b8c361"
        ],
        [
            "intros m0 Hm0 k e.",
            "VernacExtend",
            "e5a9f29eed3a083798b45caecb98575d26452c4e"
        ],
        [
            "assert (~In k m0) by (intros (e0,He0); apply (Hm0 k e0); auto).",
            "VernacExtend",
            "83b10deb1b4af37647759fe90c311fd0b8c587ee"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "elim (Hm0 k e); auto.",
            "VernacExtend",
            "33bf4c829ac9b3e15785c0acfca28cef8178c892"
        ],
        [
            "intros k e m0 m1 m2 _ Hn Hadd IH k' e'.",
            "VernacExtend",
            "84766d45f7319f42500a4d0d39d657a6e5ac5be2"
        ],
        [
            "change (Equal m2 (add k e m1)) in Hadd.",
            "VernacExtend",
            "50a6338fc9831572d2eea77685abcb8c27d832d7"
        ],
        [
            "rewrite Hadd, 2 add_mapsto_iff, IH, add_in_iff.",
            "VernacExtend",
            "6e8fe79c6627f787c911fac7c054ae9ac168cdef"
        ],
        [
            "clear IH.",
            "VernacExtend",
            "daecf0ea8665f0f6fd551644d47b5ce1d93aef1e"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma update_dec : forall m m' k e, MapsTo k e (update m m') -> { MapsTo k e m' } + { MapsTo k e m /\\ ~In k m'}.",
            "VernacStartTheoremProof",
            "b35ce40b7bf5f6827d6c3da09f22a2b4d22de445"
        ],
        [
            "intros m m' k e H.",
            "VernacExtend",
            "b483206eb769ddf56370671afdd10e545e827d04"
        ],
        [
            "rewrite update_mapsto_iff in H.",
            "VernacExtend",
            "33efa74022a934a1fd56049135e1e919ca55ae6e"
        ],
        [
            "destruct (In_dec m' k) as [H'|H']; [left|right]; intuition.",
            "VernacExtend",
            "e693d70ffda4b23f3b43bf474f61f80df4eb4350"
        ],
        [
            "elim H'; exists e; auto.",
            "VernacExtend",
            "46b41bd2767d50ac2c07fce58e059492665ad2b0"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma update_in_iff : forall m m' k, In k (update m m') <-> In k m \\/ In k m'.",
            "VernacStartTheoremProof",
            "79e2f9329fda5c27df43b011db48fbf668d57fe3"
        ],
        [
            "intros m m' k.",
            "VernacExtend",
            "5b55f4185364a18fdce2c3faf805733a3012f821"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros (e,H); rewrite update_mapsto_iff in H.",
            "VernacExtend",
            "6d2f6384128ff1c27d2cb9c933a738bb3bb6d0ac"
        ],
        [
            "destruct H; [right|left]; exists e; intuition.",
            "VernacExtend",
            "542d4ed7985b22405d62e193a4fda6b266afb376"
        ],
        [
            "destruct (In_dec m' k) as [H|H].",
            "VernacExtend",
            "0fbb691736f37f1f2c18e34248c16e63fa9e385e"
        ],
        [
            "destruct H as (e,H).",
            "VernacExtend",
            "a2fe7ec8c7b58f9ef97d3461e4b1af489a0271aa"
        ],
        [
            "intros _; exists e.",
            "VernacExtend",
            "1ff84144f2c95ee318826eff726e2fbacdbade5f"
        ],
        [
            "rewrite update_mapsto_iff; left; auto.",
            "VernacExtend",
            "5f69672f1ab44acb20416f5e6da6ec3c53a8d357"
        ],
        [
            "destruct 1 as [H'|H']; [|elim H; auto].",
            "VernacExtend",
            "5302b44d8fe46d8e6f565843f185fe74d45ff65e"
        ],
        [
            "destruct H' as (e,H').",
            "VernacExtend",
            "75db3bd754c348d2a6c35d0f298f66362392bb94"
        ],
        [
            "exists e.",
            "VernacExtend",
            "4e644c830fdbbe811077e17f446c7832b57a4f89"
        ],
        [
            "rewrite update_mapsto_iff; right; auto.",
            "VernacExtend",
            "a34153b9a378f451140407b349d75f35ca3ad8dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_mapsto_iff : forall m m' k e, MapsTo k e (diff m m') <-> MapsTo k e m /\\ ~In k m'.",
            "VernacStartTheoremProof",
            "df8ef5654ed01ea419fd7e163312c922d490cecd"
        ],
        [
            "intros m m' k e.",
            "VernacExtend",
            "daf7d2bbd4e3348bf1d71ff83acda9057a6c4575"
        ],
        [
            "unfold diff.",
            "VernacExtend",
            "015c5c45b35e935e1c6dd9febb71b8412c9ab22a"
        ],
        [
            "rewrite filter_iff.",
            "VernacExtend",
            "bd367416eeb56baaf950c500deb6f6c288a571b5"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "rewrite mem_1 in *; auto; discriminate.",
            "VernacExtend",
            "4207903f2645650603235fd5666bfe52fa234d19"
        ],
        [
            "intros ? ? Hk _ _ _; rewrite Hk; auto.",
            "VernacExtend",
            "fd30f759a5d5025ce05ffa23d6991f2c9b618e00"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma diff_in_iff : forall m m' k, In k (diff m m') <-> In k m /\\ ~In k m'.",
            "VernacStartTheoremProof",
            "e6e2b942801bc9a62e1c3ffeee7b4ec1c4f7cd49"
        ],
        [
            "intros m m' k.",
            "VernacExtend",
            "5b55f4185364a18fdce2c3faf805733a3012f821"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros (e,H); rewrite diff_mapsto_iff in H.",
            "VernacExtend",
            "664fef0c7fec6c0113f27d6c005cf23b16e5b394"
        ],
        [
            "destruct H; split; auto.",
            "VernacExtend",
            "6b0b617ec55939190e129ebd913eb5389aac7738"
        ],
        [
            "exists e; auto.",
            "VernacExtend",
            "5789629a110c642815687c3512a8c438259c58a1"
        ],
        [
            "intros ((e,H),H'); exists e; rewrite diff_mapsto_iff; auto.",
            "VernacExtend",
            "37580018a4ab5dffab55a0946a6ed92f7e021946"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma restrict_mapsto_iff : forall m m' k e, MapsTo k e (restrict m m') <-> MapsTo k e m /\\ In k m'.",
            "VernacStartTheoremProof",
            "2beeee98ac1d408b9b9505dbf2b1856b1f42d9cd"
        ],
        [
            "intros m m' k e.",
            "VernacExtend",
            "daf7d2bbd4e3348bf1d71ff83acda9057a6c4575"
        ],
        [
            "unfold restrict.",
            "VernacExtend",
            "a3863d9f634ba2838d286207832792553a81ea6e"
        ],
        [
            "rewrite filter_iff.",
            "VernacExtend",
            "bd367416eeb56baaf950c500deb6f6c288a571b5"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "intros ? ? Hk _ _ _; rewrite Hk; auto.",
            "VernacExtend",
            "fd30f759a5d5025ce05ffa23d6991f2c9b618e00"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma restrict_in_iff : forall m m' k, In k (restrict m m') <-> In k m /\\ In k m'.",
            "VernacStartTheoremProof",
            "4b4d95c464d83229d17e8718d3ea0b438a485cba"
        ],
        [
            "intros m m' k.",
            "VernacExtend",
            "5b55f4185364a18fdce2c3faf805733a3012f821"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "intros (e,H); rewrite restrict_mapsto_iff in H.",
            "VernacExtend",
            "d21b82123adb25d2dd462ac852bdbc2f29b8aca8"
        ],
        [
            "destruct H; split; auto.",
            "VernacExtend",
            "6b0b617ec55939190e129ebd913eb5389aac7738"
        ],
        [
            "exists e; auto.",
            "VernacExtend",
            "5789629a110c642815687c3512a8c438259c58a1"
        ],
        [
            "intros ((e,H),H'); exists e; rewrite restrict_mapsto_iff; auto.",
            "VernacExtend",
            "69b05af702fb5b97ca24f2d8d8b22bbc308167b7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition filter_dom (f : key -> bool) := filter (fun k _ => f k).",
            "VernacDefinition",
            "4420d29a245a432893ad6c020ec4fdd4411ac39c"
        ],
        [
            "Definition filter_range (f : elt -> bool) := filter (fun _ => f).",
            "VernacDefinition",
            "5b122cc0948b6ce58ed972957541eb4c648f0df7"
        ],
        [
            "Definition for_all_dom (f : key -> bool) := for_all (fun k _ => f k).",
            "VernacDefinition",
            "2b8b3bc62cd916e8bea2acbb26a7a756831e4b52"
        ],
        [
            "Definition for_all_range (f : elt -> bool) := for_all (fun _ => f).",
            "VernacDefinition",
            "954f3975c3bd671073efbb829b5f6bc525abc43a"
        ],
        [
            "Definition exists_dom (f : key -> bool) := exists_ (fun k _ => f k).",
            "VernacDefinition",
            "ff5bfa668126f0490968b6daf0c5073462d3a8c5"
        ],
        [
            "Definition exists_range (f : elt -> bool) := exists_ (fun _ => f).",
            "VernacDefinition",
            "30f96f195d7d7d2bb7f3db50558ca179b3631e85"
        ],
        [
            "Definition partition_dom (f : key -> bool) := partition (fun k _ => f k).",
            "VernacDefinition",
            "59aa47cebacbb2222d03e02e34490e7873eb8e4d"
        ],
        [
            "Definition partition_range (f : elt -> bool) := partition (fun _ => f).",
            "VernacDefinition",
            "6f1222846bdfa694e142ca05d77f17956c0fea08"
        ],
        [
            "End Elt.",
            "VernacEndSegment",
            "ef6686463d3f7dfcb40f4805cf8f45019f83fdad"
        ],
        [
            "Add Parametric Morphism elt : (@cardinal elt) with signature Equal ==> eq as cardinal_m.",
            "VernacExtend",
            "311c6fbe1fdad4a9cd84883f37c161737508e15e"
        ],
        [
            "intros; apply Equal_cardinal; auto.",
            "VernacExtend",
            "59424f9ee5d76d7516e0d4425773a921f35609ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism elt : (@Disjoint elt) with signature Equal ==> Equal ==> iff as Disjoint_m.",
            "VernacExtend",
            "502bde438ae693ade571576a130540b3c95a8c4d"
        ],
        [
            "intros m1 m1' Hm1 m2 m2' Hm2.",
            "VernacExtend",
            "d7e959f4129996681270aa691a86f6c5845e49c4"
        ],
        [
            "unfold Disjoint.",
            "VernacExtend",
            "c53717602cdd0b28145d73aed398da0104f03d85"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "rewrite <- Hm1, <- Hm2; auto.",
            "VernacExtend",
            "6b93d2c0e9a4b86e0a126e2f2f7bab3ac02aab6e"
        ],
        [
            "rewrite Hm1, Hm2; auto.",
            "VernacExtend",
            "2035165f895f372068d9b167e66d7357bbfa4b7b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism elt : (@Partition elt) with signature Equal ==> Equal ==> Equal ==> iff as Partition_m.",
            "VernacExtend",
            "c458341e8a852afafe44ec77fdb51e19ad54a72a"
        ],
        [
            "intros m1 m1' Hm1 m2 m2' Hm2 m3 m3' Hm3.",
            "VernacExtend",
            "ca90d95816a785bf4fa95e4418b6d083e1351ccf"
        ],
        [
            "unfold Partition.",
            "VernacExtend",
            "357bd4383d649e7941f1061bb7d58762e26298de"
        ],
        [
            "rewrite <- Hm2, <- Hm3.",
            "VernacExtend",
            "1794e6619f0ce43bc392ef438f8bc3d5693df910"
        ],
        [
            "split; intros (H,H'); split; auto; intros.",
            "VernacExtend",
            "8eb322e33497378a985f213ea78684908e7d6d46"
        ],
        [
            "rewrite <- Hm1, <- Hm2, <- Hm3; auto.",
            "VernacExtend",
            "a16fa2ae00b60ade6461ad1a43386793ffbb56ed"
        ],
        [
            "rewrite Hm1, Hm2, Hm3; auto.",
            "VernacExtend",
            "f25024a387452a5d45e816093c45d5ce7e7426a7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism elt : (@update elt) with signature Equal ==> Equal ==> Equal as update_m.",
            "VernacExtend",
            "9c83506d0df42dd3cf5364011479fceed98530bc"
        ],
        [
            "intros m1 m1' Hm1 m2 m2' Hm2.",
            "VernacExtend",
            "d7e959f4129996681270aa691a86f6c5845e49c4"
        ],
        [
            "setoid_replace (update m1 m2) with (update m1' m2); unfold update.",
            "VernacExtend",
            "c28842a8ef251ae21520db59e59ca14535e5e156"
        ],
        [
            "apply fold_Equal with (eqA:=Equal); auto.",
            "VernacExtend",
            "085cd262815cd187b126070f449791ee2e9b0f54"
        ],
        [
            "intros k k' Hk e e' He m m' Hm; rewrite Hk,He,Hm; red; auto.",
            "VernacExtend",
            "445ca6fb0b8e50754cc75645d943915d76e32ac2"
        ],
        [
            "intros k k' e e' i Hneq x.",
            "VernacExtend",
            "5a62b4d0aa66ff5d3681db9d0163ba49b9a21dc2"
        ],
        [
            "rewrite !add_o; do 2 destruct eq_dec; auto.",
            "VernacExtend",
            "44d1db9d0ae3955026bbbcff3190b9e43cfa6d40"
        ],
        [
            "elim Hneq; eauto.",
            "VernacExtend",
            "fa73699b305b85bd35c272f1d739e6e5c217f279"
        ],
        [
            "apply fold_init with (eqA:=Equal); auto.",
            "VernacExtend",
            "35921222ee9066128325412171d48f879316d102"
        ],
        [
            "intros k k' Hk e e' He m m' Hm; rewrite Hk,He,Hm; red; auto.",
            "VernacExtend",
            "445ca6fb0b8e50754cc75645d943915d76e32ac2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism elt : (@restrict elt) with signature Equal ==> Equal ==> Equal as restrict_m.",
            "VernacExtend",
            "0debf21e9a50f72c4170b9a99b9f6904dbe36793"
        ],
        [
            "intros m1 m1' Hm1 m2 m2' Hm2.",
            "VernacExtend",
            "d7e959f4129996681270aa691a86f6c5845e49c4"
        ],
        [
            "setoid_replace (restrict m1 m2) with (restrict m1' m2); unfold restrict, filter.",
            "VernacExtend",
            "d0f85b6a9aa22862cfdbef7de7e4e883c51262ee"
        ],
        [
            "apply fold_rel with (R:=Equal); try red; auto.",
            "VernacExtend",
            "c4839bcca6c4d8d3ec3b34d2278f2a88e3525b69"
        ],
        [
            "intros k e i i' H Hii' x.",
            "VernacExtend",
            "f02f3374608ec0e87ab759eb3296b8f737e8f81e"
        ],
        [
            "pattern (mem k m2); rewrite Hm2.",
            "VernacExtend",
            "6d47af62041a113871e6e80587823d81fedd0703"
        ],
        [
            "destruct mem; rewrite Hii'; auto.",
            "VernacExtend",
            "a82cb978d33659eabc0fd9df53d5e517cf55268a"
        ],
        [
            "apply fold_Equal with (eqA:=Equal); auto.",
            "VernacExtend",
            "085cd262815cd187b126070f449791ee2e9b0f54"
        ],
        [
            "intros k k' Hk e e' He m m' Hm; simpl in *.",
            "VernacExtend",
            "8081e4c10a89216210aa979cbe42f0cc49075973"
        ],
        [
            "pattern (mem k m2); rewrite Hk.",
            "VernacExtend",
            "dba081c9c11bab4a5518c4580ac2ce59fc5e163b"
        ],
        [
            "destruct mem; rewrite ?Hk,?He,Hm; red; auto.",
            "VernacExtend",
            "ef00680200b3979faadcf92bf253dd5371041170"
        ],
        [
            "intros k k' e e' i Hneq x.",
            "VernacExtend",
            "5a62b4d0aa66ff5d3681db9d0163ba49b9a21dc2"
        ],
        [
            "case_eq (mem k m2); case_eq (mem k' m2); intros; auto.",
            "VernacExtend",
            "b7faba0912471f7023a1e1f0e135877c6660d675"
        ],
        [
            "rewrite !add_o; do 2 destruct eq_dec; auto.",
            "VernacExtend",
            "44d1db9d0ae3955026bbbcff3190b9e43cfa6d40"
        ],
        [
            "elim Hneq; eauto.",
            "VernacExtend",
            "fa73699b305b85bd35c272f1d739e6e5c217f279"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Add Parametric Morphism elt : (@diff elt) with signature Equal ==> Equal ==> Equal as diff_m.",
            "VernacExtend",
            "915d0ab54ce94c29ff421da2b67793566c80f559"
        ],
        [
            "intros m1 m1' Hm1 m2 m2' Hm2.",
            "VernacExtend",
            "d7e959f4129996681270aa691a86f6c5845e49c4"
        ],
        [
            "setoid_replace (diff m1 m2) with (diff m1' m2); unfold diff, filter.",
            "VernacExtend",
            "342b5add88a97a6b65c0bfed288d3c37c0435483"
        ],
        [
            "apply fold_rel with (R:=Equal); try red; auto.",
            "VernacExtend",
            "c4839bcca6c4d8d3ec3b34d2278f2a88e3525b69"
        ],
        [
            "intros k e i i' H Hii' x.",
            "VernacExtend",
            "f02f3374608ec0e87ab759eb3296b8f737e8f81e"
        ],
        [
            "pattern (mem k m2); rewrite Hm2.",
            "VernacExtend",
            "6d47af62041a113871e6e80587823d81fedd0703"
        ],
        [
            "destruct mem; simpl; rewrite Hii'; auto.",
            "VernacExtend",
            "c0b9bf30f7dd0807132654063f70070eda9a6415"
        ],
        [
            "apply fold_Equal with (eqA:=Equal); auto.",
            "VernacExtend",
            "085cd262815cd187b126070f449791ee2e9b0f54"
        ],
        [
            "intros k k' Hk e e' He m m' Hm; simpl in *.",
            "VernacExtend",
            "8081e4c10a89216210aa979cbe42f0cc49075973"
        ],
        [
            "pattern (mem k m2); rewrite Hk.",
            "VernacExtend",
            "dba081c9c11bab4a5518c4580ac2ce59fc5e163b"
        ],
        [
            "destruct mem; simpl; rewrite ?Hk,?He,Hm; red; auto.",
            "VernacExtend",
            "76125b9cb2676700766fbb39fc9857467256292c"
        ],
        [
            "intros k k' e e' i Hneq x.",
            "VernacExtend",
            "5a62b4d0aa66ff5d3681db9d0163ba49b9a21dc2"
        ],
        [
            "case_eq (mem k m2); case_eq (mem k' m2); intros; simpl; auto.",
            "VernacExtend",
            "528acbfe570421a46e608c60a98fd9403e5bf6ea"
        ],
        [
            "rewrite !add_o; do 2 destruct eq_dec; auto.",
            "VernacExtend",
            "44d1db9d0ae3955026bbbcff3190b9e43cfa6d40"
        ],
        [
            "elim Hneq; eauto.",
            "VernacExtend",
            "fa73699b305b85bd35c272f1d739e6e5c217f279"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End WProperties_fun.",
            "VernacEndSegment",
            "9ac5a92beb9ffe0c208a2281565a1657fc8b7245"
        ],
        [
            "Module WProperties (M:WS) := WProperties_fun M.E M.",
            "VernacDefineModule",
            "f7ce0332a07700cab226d0ca1597c2a9d92a1a05"
        ],
        [
            "Module Properties := WProperties.",
            "VernacDefineModule",
            "00ee0b68b607b72a0a365c6bc3a7b31e47037e55"
        ],
        [
            "Module OrdProperties (M:S).",
            "VernacDefineModule",
            "52121dc4a118084573b8e14d1fde6cec1efe469d"
        ],
        [
            "Module Import ME := OrderedTypeFacts M.E.",
            "VernacDefineModule",
            "5ce189b5c739dca2b742b7bfb559c3f2ee88245a"
        ],
        [
            "Module Import O:=KeyOrderedType M.E.",
            "VernacDefineModule",
            "ef88f7e635d0da70e7b2b496a5f5f35d5d7c2cc4"
        ],
        [
            "Module Import P:=Properties M.",
            "VernacDefineModule",
            "bd57eabfc38be2b5fb7f394898cebed2ef7418d5"
        ],
        [
            "Import F.",
            "VernacImport",
            "df8e0ea0e668a8a2662157c05c44187d4a0a86d1"
        ],
        [
            "Import M.",
            "VernacImport",
            "69325bbd0268095c07cfca05f898394c270b2c07"
        ],
        [
            "Section Elt.",
            "VernacBeginSection",
            "7d8c2b7c85358610d3707ffaa378f25da37c746b"
        ],
        [
            "Variable elt:Type.",
            "VernacAssumption",
            "b310aa6dfd45260477c670b93268036cda9cb86b"
        ],
        [
            "Notation eqke := (@eqke elt).",
            "VernacSyntacticDefinition",
            "5201a1c1ba109acaab0109a95975d4f2d2843d57"
        ],
        [
            "Notation eqk := (@eqk elt).",
            "VernacSyntacticDefinition",
            "c11fe3052f56bb6b8b6e74b17d738be7ba1783b8"
        ],
        [
            "Notation ltk := (@ltk elt).",
            "VernacSyntacticDefinition",
            "f2d1f172388f512d453c5153c87a351bc6013e16"
        ],
        [
            "Notation cardinal := (@cardinal elt).",
            "VernacSyntacticDefinition",
            "88b5ac77c595b47675a722c9ba0d09da54890df1"
        ],
        [
            "Notation Equal := (@Equal elt).",
            "VernacSyntacticDefinition",
            "3b9a53711ababe33fe449df0a3ebd011ba9f70f8"
        ],
        [
            "Notation Add := (@Add elt).",
            "VernacSyntacticDefinition",
            "bbd50963b44e91df00f2eebf599bf7facd3a4c7c"
        ],
        [
            "Definition Above x (m:t elt) := forall y, In y m -> E.lt y x.",
            "VernacDefinition",
            "b9fac5442a0e573fec604a2fbc1285f6e3f83ff3"
        ],
        [
            "Definition Below x (m:t elt) := forall y, In y m -> E.lt x y.",
            "VernacDefinition",
            "2bdfc30f059aa783dd27b0d4db083fd8f544cbe6"
        ],
        [
            "Section Elements.",
            "VernacBeginSection",
            "286aeb18e38168d367737056f01c3f6184814e15"
        ],
        [
            "Lemma sort_equivlistA_eqlistA : forall l l' : list (key*elt), sort ltk l -> sort ltk l' -> equivlistA eqke l l' -> eqlistA eqke l l'.",
            "VernacStartTheoremProof",
            "d154053b0009503cb48e83e1d7ccaa5ae5bd1523"
        ],
        [
            "apply SortA_equivlistA_eqlistA; eauto with *.",
            "VernacExtend",
            "56abc697013904c5f7efff93349af478f5b9deb1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac clean_eauto := unfold O.eqke, O.ltk; simpl; intuition; eauto.",
            "VernacExtend",
            "b6c5de25f12bf293e2e01792b3f9f8ab68e2fbfc"
        ],
        [
            "Definition gtb (p p':key*elt) := match E.compare (fst p) (fst p') with GT _ => true | _ => false end.",
            "VernacDefinition",
            "3251779e5e8231abe250247b07b987fbe15fff2a"
        ],
        [
            "Definition leb p := fun p' => negb (gtb p p').",
            "VernacDefinition",
            "2741623f3f0e66f2ba1300fa37e8a550921e1a25"
        ],
        [
            "Definition elements_lt p m := List.filter (gtb p) (elements m).",
            "VernacDefinition",
            "d85e70acf2e997d3586e054cf96e04841394543a"
        ],
        [
            "Definition elements_ge p m := List.filter (leb p) (elements m).",
            "VernacDefinition",
            "682fdb7bb2e5b9edb8f8b2f41926b5cc034b75ff"
        ],
        [
            "Lemma gtb_1 : forall p p', gtb p p' = true <-> ltk p' p.",
            "VernacStartTheoremProof",
            "af8628e428c6e64a8c2fcda9a7d2e0ff924eed69"
        ],
        [
            "intros (x,e) (y,e'); unfold gtb, O.ltk; simpl.",
            "VernacExtend",
            "e0cdd0093a021c1f6e8f58396b97a7a23dd53277"
        ],
        [
            "destruct (E.compare x y); intuition; try discriminate; ME.order.",
            "VernacExtend",
            "b00c79225f4746bb39be1785e6bc66daa19f188c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leb_1 : forall p p', leb p p' = true <-> ~ltk p' p.",
            "VernacStartTheoremProof",
            "0079dff4c477b135d0212aab12ca5af0b18a9458"
        ],
        [
            "intros (x,e) (y,e'); unfold leb, gtb, O.ltk; simpl.",
            "VernacExtend",
            "3de06a2e889aaf4bdccc5add78554f369ec204c7"
        ],
        [
            "destruct (E.compare x y); intuition; try discriminate; ME.order.",
            "VernacExtend",
            "b00c79225f4746bb39be1785e6bc66daa19f188c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma gtb_compat : forall p, Proper (eqke==>eq) (gtb p).",
            "VernacStartTheoremProof",
            "530cba27c2d0a1173b3e7c6c985edbbbdd94338d"
        ],
        [
            "red; intros (x,e) (a,e') (b,e'') H; red in H; simpl in *; destruct H.",
            "VernacExtend",
            "db80cd3f86d070e2a459cd775c900c9a6eef91ae"
        ],
        [
            "generalize (gtb_1 (x,e) (a,e'))(gtb_1 (x,e) (b,e'')); destruct (gtb (x,e) (a,e')); destruct (gtb (x,e) (b,e'')); auto.",
            "VernacExtend",
            "171bd2c7fe9b420fc67517ba547fb5f27afa4c30"
        ],
        [
            "unfold O.ltk in *; simpl in *; intros.",
            "VernacExtend",
            "44c63ece1e35df794b83a75427f36b764b96b5ff"
        ],
        [
            "symmetry; rewrite H2.",
            "VernacExtend",
            "f307df724b527588f2f4a2e22e85bb45e3e9b795"
        ],
        [
            "apply ME.eq_lt with a; auto.",
            "VernacExtend",
            "ce28400cd64483544d9fd6e62a0536ccaee840e7"
        ],
        [
            "rewrite <- H1; auto.",
            "VernacExtend",
            "32b903bcbdd2d6f83dd19185f0534857f043d3ae"
        ],
        [
            "unfold O.ltk in *; simpl in *; intros.",
            "VernacExtend",
            "44c63ece1e35df794b83a75427f36b764b96b5ff"
        ],
        [
            "rewrite H1.",
            "VernacExtend",
            "91099f93f9346d13e3fc00550ba094ceac5333db"
        ],
        [
            "apply ME.eq_lt with b; auto.",
            "VernacExtend",
            "757082bef1f37fa96afb64e1cdc524844e30e0c6"
        ],
        [
            "rewrite <- H2; auto.",
            "VernacExtend",
            "32038346176d7468e98cb8f3f68a500b2e560c7d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma leb_compat : forall p, Proper (eqke==>eq) (leb p).",
            "VernacStartTheoremProof",
            "659385582221dfd8fe4c29b4891dacaf3d4b7497"
        ],
        [
            "red; intros x a b H.",
            "VernacExtend",
            "a98bb001c3719f0d282c35b522c8f03e85348e24"
        ],
        [
            "unfold leb; f_equal; apply gtb_compat; auto.",
            "VernacExtend",
            "68d0b81cca25b2a18582e34aaca704ddb66a803f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve gtb_compat leb_compat elements_3 : map.",
            "VernacHints",
            "5b08fa6953915f920430ae46acfd30952fdb37c8"
        ],
        [
            "Lemma elements_split : forall p m, elements m = elements_lt p m ++ elements_ge p m.",
            "VernacStartTheoremProof",
            "8b3fde6783d7eef1d046f162fba37223b96ad62c"
        ],
        [
            "unfold elements_lt, elements_ge, leb; intros.",
            "VernacExtend",
            "657212ca2e8608707aaef43278d97384117190a1"
        ],
        [
            "apply filter_split with (eqA:=eqk) (ltA:=ltk); eauto with *.",
            "VernacExtend",
            "09385e2506f58dccc4100ac6226eabc3e56b3154"
        ],
        [
            "intros; destruct x; destruct y; destruct p.",
            "VernacExtend",
            "7354bcd08656d723a83012f6d8b5eb3698be7c85"
        ],
        [
            "rewrite gtb_1 in H; unfold O.ltk in H; simpl in *.",
            "VernacExtend",
            "08661814484a941230332b3a819b809b95f3ecfe"
        ],
        [
            "assert (~ltk (t1,e0) (k,e1)).",
            "VernacExtend",
            "43b0b762f3f9892c2842e640410595f57f5b4e5a"
        ],
        [
            "unfold gtb, O.ltk in *; simpl in *.",
            "VernacExtend",
            "0630cb3e0451ff02471ce0602cc5253ef3b5a534"
        ],
        [
            "destruct (E.compare k t1); intuition; try discriminate; ME.order.",
            "VernacExtend",
            "e084effcf960c01248cfcd91211c9c9f0ddb2291"
        ],
        [
            "unfold O.ltk in *; simpl in *; ME.order.",
            "VernacExtend",
            "a78e7804907f409ec22c425a887894a5ef2b6e2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_Add : forall m m' x e, ~In x m -> Add x e m m' -> eqlistA eqke (elements m') (elements_lt (x,e) m ++ (x,e):: elements_ge (x,e) m).",
            "VernacStartTheoremProof",
            "30cac422e5d2973ec08a6a40e32a890dd522d3c8"
        ],
        [
            "intros; unfold elements_lt, elements_ge.",
            "VernacExtend",
            "178619c821c162b67d28505978e395c37352ee62"
        ],
        [
            "apply sort_equivlistA_eqlistA; auto with *.",
            "VernacExtend",
            "61aac0629b762a20d7bbc3281a438c526db00e24"
        ],
        [
            "apply (@SortA_app _ eqke); auto with *.",
            "VernacExtend",
            "2023295d7e02527834fb20c15058933b67e36a24"
        ],
        [
            "apply (@filter_sort _ eqke); auto with *; clean_eauto.",
            "VernacExtend",
            "a33848cb95330aa3908a1dbf24cf0caa4b1ec9ff"
        ],
        [
            "constructor; auto with map.",
            "VernacExtend",
            "12e1801ee4ad1768d01c67881ee3679a82a04997"
        ],
        [
            "apply (@filter_sort _ eqke); auto with *; clean_eauto.",
            "VernacExtend",
            "a33848cb95330aa3908a1dbf24cf0caa4b1ec9ff"
        ],
        [
            "rewrite (@InfA_alt _ eqke); auto with *; try (clean_eauto; fail).",
            "VernacExtend",
            "6adbbe891346a7db8aa517c3ca60b163324b6154"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite filter_InA in H1; auto with *; destruct H1.",
            "VernacExtend",
            "96762a831514734b6ca1ae7eacd7a3a09ffd1211"
        ],
        [
            "rewrite leb_1 in H2.",
            "VernacExtend",
            "9f9c9d54f3f3a57e5889d0791d0aa62fa5f0069c"
        ],
        [
            "destruct y; unfold O.ltk in *; simpl in *.",
            "VernacExtend",
            "7af71b0693a2c6f9076877bbaf44d7d9d94ac54a"
        ],
        [
            "rewrite <- elements_mapsto_iff in H1.",
            "VernacExtend",
            "cfeb6120047a786b767903146504686185b8879d"
        ],
        [
            "assert (~E.eq x t0).",
            "VernacExtend",
            "f5305a3856cbd94ec0bc0b69d506c2d6df1f45b5"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "exists e0; apply MapsTo_1 with t0; auto.",
            "VernacExtend",
            "483f2794a050f4557cc639f91777bf97567aef9a"
        ],
        [
            "ME.order.",
            "VernacExtend",
            "c6a4979a2f9a06c460fc8f868f53d77efc9fdf71"
        ],
        [
            "apply (@filter_sort _ eqke); auto with *; clean_eauto.",
            "VernacExtend",
            "a33848cb95330aa3908a1dbf24cf0caa4b1ec9ff"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite filter_InA in H1; auto with *; destruct H1.",
            "VernacExtend",
            "96762a831514734b6ca1ae7eacd7a3a09ffd1211"
        ],
        [
            "rewrite gtb_1 in H3.",
            "VernacExtend",
            "c5f282269d6b66de8c98eb7f5f6a248571613025"
        ],
        [
            "destruct y; destruct x0; unfold O.ltk in *; simpl in *.",
            "VernacExtend",
            "74a1797f69970e033718ce0a5ff512725641c1c8"
        ],
        [
            "inversion_clear H2.",
            "VernacExtend",
            "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
        ],
        [
            "red in H4; simpl in *; destruct H4.",
            "VernacExtend",
            "d3ae32b593c4e6be37eff7d52da45c3d64fcba67"
        ],
        [
            "ME.order.",
            "VernacExtend",
            "c6a4979a2f9a06c460fc8f868f53d77efc9fdf71"
        ],
        [
            "rewrite filter_InA in H4; auto with *; destruct H4.",
            "VernacExtend",
            "accaaa12f40b54f1410c3f3e56526f995fae75ed"
        ],
        [
            "rewrite leb_1 in H4.",
            "VernacExtend",
            "80ad3c960b63bd146a254af9d5278ee6a05ecf65"
        ],
        [
            "unfold O.ltk in *; simpl in *; ME.order.",
            "VernacExtend",
            "a78e7804907f409ec22c425a887894a5ef2b6e2b"
        ],
        [
            "red; intros a; destruct a.",
            "VernacExtend",
            "1e346f833dc9b59966765210da71d6b6e214585f"
        ],
        [
            "rewrite InA_app_iff, InA_cons, 2 filter_InA, <-2 elements_mapsto_iff, leb_1, gtb_1, find_mapsto_iff, (H0 t0), <- find_mapsto_iff, add_mapsto_iff by (auto with *).",
            "VernacExtend",
            "43fa7f569984b5565f626a3fc3602034d23b7d5a"
        ],
        [
            "unfold O.eqke, O.ltk; simpl.",
            "VernacExtend",
            "43ef9d831cbdc69f2508fc5ed162d33a8ca57edd"
        ],
        [
            "destruct (E.compare t0 x); intuition; try fold (~E.eq x t0); auto.",
            "VernacExtend",
            "4426fbdd9c0bb8d22f8a20b9a8d88077856b35ef"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "elim H; exists e0; apply MapsTo_1 with t0; auto.",
            "VernacExtend",
            "2e327eb0f4124e93ae9510dd92334fac4ac696d2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "fold (~E.lt t0 x); auto.",
            "VernacExtend",
            "c0ffd5df45c21a0284d554f94cd924cf0ab74354"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_Add_Above : forall m m' x e, Above x m -> Add x e m m' -> eqlistA eqke (elements m') (elements m ++ (x,e)::nil).",
            "VernacStartTheoremProof",
            "a049666e180c7a5d82a2d62a70a75b27cd700418"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply sort_equivlistA_eqlistA; auto with *.",
            "VernacExtend",
            "61aac0629b762a20d7bbc3281a438c526db00e24"
        ],
        [
            "apply (@SortA_app _ eqke); auto with *.",
            "VernacExtend",
            "2023295d7e02527834fb20c15058933b67e36a24"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H2.",
            "VernacExtend",
            "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
        ],
        [
            "destruct x0; destruct y.",
            "VernacExtend",
            "2ada5cb8c51429e31f571108f90a52c53f1a8ee6"
        ],
        [
            "rewrite <- elements_mapsto_iff in H1.",
            "VernacExtend",
            "cfeb6120047a786b767903146504686185b8879d"
        ],
        [
            "unfold O.eqke, O.ltk in *; simpl in *; destruct H3.",
            "VernacExtend",
            "4130db97ffa1c866cccaa18494df1bec8b3b2b6c"
        ],
        [
            "apply ME.lt_eq with x; auto.",
            "VernacExtend",
            "ac2e408d051e66cf0ad1699553632e81907b7dfc"
        ],
        [
            "apply H; firstorder.",
            "VernacExtend",
            "a600f49694fc63a669d22c97db4d4d62dc29ec2b"
        ],
        [
            "inversion H3.",
            "VernacExtend",
            "129aa425681b58d2ed0d3637122128b1b28fd63b"
        ],
        [
            "red; intros a; destruct a.",
            "VernacExtend",
            "1e346f833dc9b59966765210da71d6b6e214585f"
        ],
        [
            "rewrite InA_app_iff, InA_cons, InA_nil, <- 2 elements_mapsto_iff, find_mapsto_iff, (H0 t0), <- find_mapsto_iff, add_mapsto_iff by (auto with *).",
            "VernacExtend",
            "3d01108bdcb6ad8f959790d8de8d26533bbf5c42"
        ],
        [
            "unfold O.eqke; simpl.",
            "VernacExtend",
            "51b12888dc69cec5af6ad7f06ccb256f7a5254f6"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "destruct (E.eq_dec x t0) as [Heq|Hneq]; auto.",
            "VernacExtend",
            "5fc1db6eb53a22d6e11e97df2a017b7fecfd4544"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "assert (In t0 m).",
            "VernacExtend",
            "e19f0f3c4b77c50f04f03b9612eccf61c9538847"
        ],
        [
            "exists e0; auto.",
            "VernacExtend",
            "e3fc53089377ff144b9b55ee98f47a9d8b95a928"
        ],
        [
            "generalize (H t0 H1).",
            "VernacExtend",
            "cf8d76d3e8b28e62c2d78c781c74f8da53d1d289"
        ],
        [
            "ME.order.",
            "VernacExtend",
            "c6a4979a2f9a06c460fc8f868f53d77efc9fdf71"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_Add_Below : forall m m' x e, Below x m -> Add x e m m' -> eqlistA eqke (elements m') ((x,e)::elements m).",
            "VernacStartTheoremProof",
            "13248d3af53f0e86c0ed61c9364705d361109d97"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply sort_equivlistA_eqlistA; auto with *.",
            "VernacExtend",
            "61aac0629b762a20d7bbc3281a438c526db00e24"
        ],
        [
            "change (sort ltk (((x,e)::nil) ++ elements m)).",
            "VernacExtend",
            "5c5459e36cac6d225b37bbcd07d79907e8d03c5b"
        ],
        [
            "apply (@SortA_app _ eqke); auto with *.",
            "VernacExtend",
            "2023295d7e02527834fb20c15058933b67e36a24"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear H1.",
            "VernacExtend",
            "1443921cbef97c67d0bd87bf517b302257ed5b28"
        ],
        [
            "destruct y; destruct x0.",
            "VernacExtend",
            "f7c754b97c1977cbccb420160fa1ac4b9a5ba1cf"
        ],
        [
            "rewrite <- elements_mapsto_iff in H2.",
            "VernacExtend",
            "1dc807885f136a3a712fe09667c1aaa19cff9c99"
        ],
        [
            "unfold O.eqke, O.ltk in *; simpl in *; destruct H3.",
            "VernacExtend",
            "4130db97ffa1c866cccaa18494df1bec8b3b2b6c"
        ],
        [
            "apply ME.eq_lt with x; auto.",
            "VernacExtend",
            "3a7ce76a05085d78b91ff425ac96dcf80b543ec4"
        ],
        [
            "apply H; firstorder.",
            "VernacExtend",
            "a600f49694fc63a669d22c97db4d4d62dc29ec2b"
        ],
        [
            "inversion H3.",
            "VernacExtend",
            "129aa425681b58d2ed0d3637122128b1b28fd63b"
        ],
        [
            "red; intros a; destruct a.",
            "VernacExtend",
            "1e346f833dc9b59966765210da71d6b6e214585f"
        ],
        [
            "rewrite InA_cons, <- 2 elements_mapsto_iff, find_mapsto_iff, (H0 t0), <- find_mapsto_iff, add_mapsto_iff by (auto with *).",
            "VernacExtend",
            "9cebffc5ab9080f607a009979949997ad10741db"
        ],
        [
            "unfold O.eqke; simpl.",
            "VernacExtend",
            "51b12888dc69cec5af6ad7f06ccb256f7a5254f6"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "destruct (E.eq_dec x t0) as [Heq|Hneq]; auto.",
            "VernacExtend",
            "5fc1db6eb53a22d6e11e97df2a017b7fecfd4544"
        ],
        [
            "exfalso.",
            "VernacExtend",
            "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
        ],
        [
            "assert (In t0 m).",
            "VernacExtend",
            "e19f0f3c4b77c50f04f03b9612eccf61c9538847"
        ],
        [
            "exists e0; auto.",
            "VernacExtend",
            "e3fc53089377ff144b9b55ee98f47a9d8b95a928"
        ],
        [
            "generalize (H t0 H1).",
            "VernacExtend",
            "cf8d76d3e8b28e62c2d78c781c74f8da53d1d289"
        ],
        [
            "ME.order.",
            "VernacExtend",
            "c6a4979a2f9a06c460fc8f868f53d77efc9fdf71"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_Equal_eqlistA : forall (m m': t elt), Equal m m' -> eqlistA eqke (elements m) (elements m').",
            "VernacStartTheoremProof",
            "b25d92d2d8a56439a223be5588a648888ca3a310"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply sort_equivlistA_eqlistA; auto with *.",
            "VernacExtend",
            "61aac0629b762a20d7bbc3281a438c526db00e24"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "destruct x; do 2 rewrite <- elements_mapsto_iff.",
            "VernacExtend",
            "0e2f2560315f8955e072bb6ba14b8772ae235e7d"
        ],
        [
            "do 2 rewrite find_mapsto_iff; rewrite H; split; auto.",
            "VernacExtend",
            "16f643a1a10dc6ca73f2552f4987c5b710639725"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Elements.",
            "VernacEndSegment",
            "be7e6902f6d1ce8d6fc6b48bb8e8a2af3206355e"
        ],
        [
            "Section Min_Max_Elt.",
            "VernacBeginSection",
            "4dd6abfd3060f788eecebeafa89e11c1fe59ee85"
        ],
        [
            "Fixpoint max_elt_aux (l:list (key*elt)) := match l with | nil => None | (x,e)::nil => Some (x,e) | (x,e)::l => max_elt_aux l end.",
            "VernacFixpoint",
            "5e14c743291d6678e3d886b1a08aaae8a6156b45"
        ],
        [
            "Definition max_elt m := max_elt_aux (elements m).",
            "VernacDefinition",
            "dc862635d8b802ed7052c0ed1e42135df9093097"
        ],
        [
            "Lemma max_elt_Above : forall m x e, max_elt m = Some (x,e) -> Above x (remove x m).",
            "VernacStartTheoremProof",
            "e33ebeb988ae941daba89c25e6b0bf567773a3e0"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "rewrite remove_in_iff in H0.",
            "VernacExtend",
            "5aa49a72973cd16229fdaa3cd877814fe400709c"
        ],
        [
            "destruct H0.",
            "VernacExtend",
            "5c8f6cb3dc303d56935d6ec271a1de04f6790225"
        ],
        [
            "rewrite elements_in_iff in H1.",
            "VernacExtend",
            "81a107cfb8ecb3dbd40bf3f35d1df1653a836b8b"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "unfold max_elt in *.",
            "VernacExtend",
            "c0df250b75397366108caa6ad5b843746053db57"
        ],
        [
            "generalize (elements_3 m).",
            "VernacExtend",
            "02279d62ff9b3a242b8f00b755dd306030926d60"
        ],
        [
            "revert x e H y x0 H0 H1.",
            "VernacExtend",
            "79242148d6d1601b8d28649c842b3c63cabc1c0d"
        ],
        [
            "induction (elements m).",
            "VernacExtend",
            "e89ab25da60062e62796ea7ea678283fc367e189"
        ],
        [
            "simpl; intros; try discriminate.",
            "VernacExtend",
            "280ff322dd4b75a87120e000325f33ebddae5f9a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct a; destruct l; simpl in *.",
            "VernacExtend",
            "d93c9870838a8c29b427c182e784eaa439520e05"
        ],
        [
            "injection H as -> ->.",
            "VernacExtend",
            "3f91596b8d7662521180a54f0ec8e00f04245561"
        ],
        [
            "inversion_clear H1.",
            "VernacExtend",
            "1443921cbef97c67d0bd87bf517b302257ed5b28"
        ],
        [
            "red in H; simpl in *; intuition.",
            "VernacExtend",
            "44f211205f9184cdc7d761814d48ae03c9a9491d"
        ],
        [
            "elim H0; eauto.",
            "VernacExtend",
            "f2fda3589de9d07d61f74e46e7ec402e06b9116a"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "change (max_elt_aux (p::l) = Some (x,e)) in H.",
            "VernacExtend",
            "5a069152b30939161618a6efab61dc080411bfc5"
        ],
        [
            "generalize (IHl x e H); clear IHl; intros IHl.",
            "VernacExtend",
            "4af81fd6c12d93c67a4ae4b8e30c36407526e094"
        ],
        [
            "inversion_clear H1; [ | inversion_clear H2; eauto ].",
            "VernacExtend",
            "46ca2156a01153048efe0b16dffc0a81227844c6"
        ],
        [
            "red in H3; simpl in H3; destruct H3.",
            "VernacExtend",
            "2732a0220c9a4b36e29bb6081ef32c2adaf54198"
        ],
        [
            "destruct p as (p1,p2).",
            "VernacExtend",
            "aa81153b96a21d31a9393468131be4100f3f4b60"
        ],
        [
            "destruct (E.eq_dec p1 x) as [Heq|Hneq].",
            "VernacExtend",
            "cc59a2daff372a568586abf84ac13cb809cc1287"
        ],
        [
            "apply ME.lt_eq with p1; auto.",
            "VernacExtend",
            "579c154c87f2b44db327d2828e4f0b4cee5098de"
        ],
        [
            "inversion_clear H2.",
            "VernacExtend",
            "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
        ],
        [
            "inversion_clear H5.",
            "VernacExtend",
            "1b6b963349bb6ca4033f93c87ba60dca619d5549"
        ],
        [
            "red in H2; simpl in H2; ME.order.",
            "VernacExtend",
            "0c18bea192d00f590e8e1ca9d3bf71cb510b87ec"
        ],
        [
            "apply E.lt_trans with p1; auto.",
            "VernacExtend",
            "667d958b1da400d04385a250b53522c6f803a5c1"
        ],
        [
            "inversion_clear H2.",
            "VernacExtend",
            "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
        ],
        [
            "inversion_clear H5.",
            "VernacExtend",
            "1b6b963349bb6ca4033f93c87ba60dca619d5549"
        ],
        [
            "red in H2; simpl in H2; ME.order.",
            "VernacExtend",
            "0c18bea192d00f590e8e1ca9d3bf71cb510b87ec"
        ],
        [
            "eapply IHl; eauto.",
            "VernacExtend",
            "92bc2acbf028623375d1c2f224a025f9b845a041"
        ],
        [
            "econstructor; eauto.",
            "VernacExtend",
            "faa93781fb8bbf289e651728c4588af1c4169d34"
        ],
        [
            "red; eauto.",
            "VernacExtend",
            "0f4ca3ff377f37195ffc2b637277bf99556e958e"
        ],
        [
            "inversion H2; auto.",
            "VernacExtend",
            "ea1132527ad99368fb4b34137c12eb88448ba881"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_elt_MapsTo : forall m x e, max_elt m = Some (x,e) -> MapsTo x e m.",
            "VernacStartTheoremProof",
            "6616d6758c65708339e672b6264fcb39fb7bffa7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold max_elt in *.",
            "VernacExtend",
            "c0df250b75397366108caa6ad5b843746053db57"
        ],
        [
            "rewrite elements_mapsto_iff.",
            "VernacExtend",
            "ca5b6d97338b6ed72041fd26d5724b6135e4be1e"
        ],
        [
            "induction (elements m).",
            "VernacExtend",
            "e89ab25da60062e62796ea7ea678283fc367e189"
        ],
        [
            "simpl; try discriminate.",
            "VernacExtend",
            "366b01787f68d402ad6cdb98e176add26a44fde3"
        ],
        [
            "destruct a; destruct l; simpl in *.",
            "VernacExtend",
            "d93c9870838a8c29b427c182e784eaa439520e05"
        ],
        [
            "injection H; intros; subst; constructor; red; auto.",
            "VernacExtend",
            "fbd268ed12297e51a5cabe270a93bb3428fedc83"
        ],
        [
            "constructor 2; auto.",
            "VernacExtend",
            "7da0a8caf04c8554762a019f74337cf755edf2f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_elt_Empty : forall m, max_elt m = None -> Empty m.",
            "VernacStartTheoremProof",
            "a231733d5f5ded112f75eb865c48aba09c44d5ac"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold max_elt in *.",
            "VernacExtend",
            "c0df250b75397366108caa6ad5b843746053db57"
        ],
        [
            "rewrite elements_Empty.",
            "VernacExtend",
            "d72e6d69048e425275d50ef3dc9bb2af21dd29aa"
        ],
        [
            "induction (elements m); auto.",
            "VernacExtend",
            "bc7d9413c6a8ae29577841177d4d2e0331dadd9b"
        ],
        [
            "destruct a; destruct l; simpl in *; try discriminate.",
            "VernacExtend",
            "5a9cb554e566f0f9fbc32159405dc1e71bf38646"
        ],
        [
            "assert (H':=IHl H); discriminate.",
            "VernacExtend",
            "6fb3359f4c480fa527a8758f629abf66841e961a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition min_elt m : option (key*elt) := match elements m with | nil => None | (x,e)::_ => Some (x,e) end.",
            "VernacDefinition",
            "4368e466bac57dbbfcab54c7154aa86dfed8a28a"
        ],
        [
            "Lemma min_elt_Below : forall m x e, min_elt m = Some (x,e) -> Below x (remove x m).",
            "VernacStartTheoremProof",
            "dbc9efeb8617f8d77f2fa870a486c49b385467c1"
        ],
        [
            "unfold min_elt, Below; intros.",
            "VernacExtend",
            "5c08205b8ff57b53e0a5710b3fb5c83f6fe19ff2"
        ],
        [
            "rewrite remove_in_iff in H0; destruct H0.",
            "VernacExtend",
            "2388382631583b951150f1ac988c1c7a784aa2a2"
        ],
        [
            "rewrite elements_in_iff in H1.",
            "VernacExtend",
            "81a107cfb8ecb3dbd40bf3f35d1df1653a836b8b"
        ],
        [
            "destruct H1.",
            "VernacExtend",
            "e752c2122f55c888e09082f784a6da990b01fbe7"
        ],
        [
            "generalize (elements_3 m).",
            "VernacExtend",
            "02279d62ff9b3a242b8f00b755dd306030926d60"
        ],
        [
            "destruct (elements m).",
            "VernacExtend",
            "b685deaadfa4e82830f7f314be2ca722d59b9774"
        ],
        [
            "try discriminate.",
            "VernacExtend",
            "de2bc7a3bfd97e6b5378596411010f23f6c9ff06"
        ],
        [
            "destruct p; injection H as -> ->; intros H4.",
            "VernacExtend",
            "d81dd2f7418ba96488a265fcd98a59bb1696554d"
        ],
        [
            "inversion_clear H1 as [? ? H2|? ? H2].",
            "VernacExtend",
            "2d49ebfe9fa5814fa3af54bfe20dd838cb2c50c8"
        ],
        [
            "red in H2; destruct H2; simpl in *; ME.order.",
            "VernacExtend",
            "02c91429a967c5787ef39a98a39638ff2fd4397a"
        ],
        [
            "inversion_clear H4.",
            "VernacExtend",
            "48216828fc957e4d634a0462fc329b427275d260"
        ],
        [
            "rename H1 into H3.",
            "VernacExtend",
            "774ce335f12b175ba346287596f5881ad823a8c1"
        ],
        [
            "rewrite (@InfA_alt _ eqke) in H3; eauto with *.",
            "VernacExtend",
            "235977c4c542e85c9b3cc93032d1c79f299f0e51"
        ],
        [
            "apply (H3 (y,x0)); auto.",
            "VernacExtend",
            "e49c830cc2ff8ae1fab391279a08ed9a59848f51"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_elt_MapsTo : forall m x e, min_elt m = Some (x,e) -> MapsTo x e m.",
            "VernacStartTheoremProof",
            "881ada1b34601e9969cc3b6dc1241e74a68a24cf"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold min_elt in *.",
            "VernacExtend",
            "d737842b1d0b582e7f5facf9ca84167dd9226847"
        ],
        [
            "rewrite elements_mapsto_iff.",
            "VernacExtend",
            "ca5b6d97338b6ed72041fd26d5724b6135e4be1e"
        ],
        [
            "destruct (elements m).",
            "VernacExtend",
            "b685deaadfa4e82830f7f314be2ca722d59b9774"
        ],
        [
            "simpl; try discriminate.",
            "VernacExtend",
            "366b01787f68d402ad6cdb98e176add26a44fde3"
        ],
        [
            "destruct p; simpl in *.",
            "VernacExtend",
            "21fa2abfdaae8a18ac0ac4debd1bca139800054d"
        ],
        [
            "injection H; intros; subst; constructor; red; auto.",
            "VernacExtend",
            "fbd268ed12297e51a5cabe270a93bb3428fedc83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma min_elt_Empty : forall m, min_elt m = None -> Empty m.",
            "VernacStartTheoremProof",
            "bef8b5ec1de019c35fdb518fb8594fc508dc3186"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold min_elt in *.",
            "VernacExtend",
            "d737842b1d0b582e7f5facf9ca84167dd9226847"
        ],
        [
            "rewrite elements_Empty.",
            "VernacExtend",
            "d72e6d69048e425275d50ef3dc9bb2af21dd29aa"
        ],
        [
            "destruct (elements m); auto.",
            "VernacExtend",
            "344a8cab0a252d818517af64c0c57c0d6336ca7b"
        ],
        [
            "destruct p; simpl in *; discriminate.",
            "VernacExtend",
            "8c4c491740e70edbb419d9b3a7ae0f77b1c3fc60"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Min_Max_Elt.",
            "VernacEndSegment",
            "c319552f694eb3e37bcb8af5ad6d7a34ca6bb7cd"
        ],
        [
            "Section Induction_Principles.",
            "VernacBeginSection",
            "1e3834a590f15725fd9ebec3e73c3f93e9df8b2f"
        ],
        [
            "Lemma map_induction_max : forall P : t elt -> Type, (forall m, Empty m -> P m) -> (forall m m', P m -> forall x e, Above x m -> Add x e m m' -> P m') -> forall m, P m.",
            "VernacStartTheoremProof",
            "8ae25fdce40872bf4566c17d3474eeb0c61460f2"
        ],
        [
            "intros; remember (cardinal m) as n; revert m Heqn; induction n; intros.",
            "VernacExtend",
            "fc413fd982ddd1dc17c45a71ffb187352aff83d6"
        ],
        [
            "apply X; apply cardinal_inv_1; auto.",
            "VernacExtend",
            "8663e965504a0c3a46ee180323459b32a6672ba1"
        ],
        [
            "case_eq (max_elt m); intros.",
            "VernacExtend",
            "467837a3d905a842228e9d30b5edf731886bd7fd"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "assert (Add k e (remove k m) m).",
            "VernacExtend",
            "2b690695859899be1ae93aa2ef59b2594e953ada"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "rewrite add_o; rewrite remove_o; destruct (eq_dec k y); eauto.",
            "VernacExtend",
            "3d8ad5edcbca25e7ffca3aea12de907ac0851a15"
        ],
        [
            "apply find_1; apply MapsTo_1 with k; auto.",
            "VernacExtend",
            "d1fa3d2ec0144a9a67978925a402aa93096cee09"
        ],
        [
            "apply max_elt_MapsTo; auto.",
            "VernacExtend",
            "85705555ccaa124f86c08bf9f1bc54c8b2518050"
        ],
        [
            "apply X0 with (remove k m) k e; auto with map.",
            "VernacExtend",
            "095892020c1aa3a7ccee34b7a2efad1a987c3126"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "assert (S n = S (cardinal (remove k m))).",
            "VernacExtend",
            "61b905a9030efdcebd407b5d5766448cb88c3c50"
        ],
        [
            "rewrite Heqn.",
            "VernacExtend",
            "0dac56d301bc88eb216c23fbe061a75f067c7267"
        ],
        [
            "eapply cardinal_2; eauto with map.",
            "VernacExtend",
            "909c0dc4449ba3a665011b3c7a1e09fb8253b14d"
        ],
        [
            "inversion H1; auto.",
            "VernacExtend",
            "06ebf8a64104aad109dacfc79a461bc7fa0773ca"
        ],
        [
            "eapply max_elt_Above; eauto.",
            "VernacExtend",
            "19e034c3c680219fcb79539a46e7fda64e27d4a3"
        ],
        [
            "apply X; apply max_elt_Empty; auto.",
            "VernacExtend",
            "9dce7f3a345be6346acc7efc02eab21495a888fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_induction_min : forall P : t elt -> Type, (forall m, Empty m -> P m) -> (forall m m', P m -> forall x e, Below x m -> Add x e m m' -> P m') -> forall m, P m.",
            "VernacStartTheoremProof",
            "57965c10ca5ed60be2496dcb867cb80850d3b8c1"
        ],
        [
            "intros; remember (cardinal m) as n; revert m Heqn; induction n; intros.",
            "VernacExtend",
            "fc413fd982ddd1dc17c45a71ffb187352aff83d6"
        ],
        [
            "apply X; apply cardinal_inv_1; auto.",
            "VernacExtend",
            "8663e965504a0c3a46ee180323459b32a6672ba1"
        ],
        [
            "case_eq (min_elt m); intros.",
            "VernacExtend",
            "944824fdf1985650c0cd9d05355646124eb5223c"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "assert (Add k e (remove k m) m).",
            "VernacExtend",
            "2b690695859899be1ae93aa2ef59b2594e953ada"
        ],
        [
            "red; intros.",
            "VernacExtend",
            "cac589df0c867c7c46c31951b6da5495d0153212"
        ],
        [
            "rewrite add_o; rewrite remove_o; destruct (eq_dec k y); eauto.",
            "VernacExtend",
            "3d8ad5edcbca25e7ffca3aea12de907ac0851a15"
        ],
        [
            "apply find_1; apply MapsTo_1 with k; auto.",
            "VernacExtend",
            "d1fa3d2ec0144a9a67978925a402aa93096cee09"
        ],
        [
            "apply min_elt_MapsTo; auto.",
            "VernacExtend",
            "3e467350015213ebb0eed7073160d432d601db3e"
        ],
        [
            "apply X0 with (remove k m) k e; auto.",
            "VernacExtend",
            "efc98984db7bb8a654cf965fe5a07ab223e9d946"
        ],
        [
            "apply IHn.",
            "VernacExtend",
            "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
        ],
        [
            "assert (S n = S (cardinal (remove k m))).",
            "VernacExtend",
            "61b905a9030efdcebd407b5d5766448cb88c3c50"
        ],
        [
            "rewrite Heqn.",
            "VernacExtend",
            "0dac56d301bc88eb216c23fbe061a75f067c7267"
        ],
        [
            "eapply cardinal_2; eauto with map.",
            "VernacExtend",
            "909c0dc4449ba3a665011b3c7a1e09fb8253b14d"
        ],
        [
            "inversion H1; auto.",
            "VernacExtend",
            "06ebf8a64104aad109dacfc79a461bc7fa0773ca"
        ],
        [
            "eapply min_elt_Below; eauto.",
            "VernacExtend",
            "469794a6948c0404693f225f942085d1848c83ac"
        ],
        [
            "apply X; apply min_elt_Empty; auto.",
            "VernacExtend",
            "32c37bfd458e0e3442f507293cb8b8219ad00b48"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Induction_Principles.",
            "VernacEndSegment",
            "02d4c79f721282fe3ba1caa5af43957cdb153001"
        ],
        [
            "Section Fold_properties.",
            "VernacBeginSection",
            "71a7e5ed9e9e124177042453df1e820e7de27e47"
        ],
        [
            "Lemma fold_Equal : forall m1 m2 (A:Type)(eqA:A->A->Prop)(st:Equivalence eqA) (f:key->elt->A->A)(i:A), Proper (E.eq==>eq==>eqA==>eqA) f -> Equal m1 m2 -> eqA (fold f m1 i) (fold f m2 i).",
            "VernacStartTheoremProof",
            "b4059754eefa28c4e5cafd7b2afd03d94d7c9dcc"
        ],
        [
            "intros m1 m2 A eqA st f i Hf Heq.",
            "VernacExtend",
            "f477fa7b9e4484af168ddbc06121b22fed4dab92"
        ],
        [
            "rewrite 2 fold_spec_right.",
            "VernacExtend",
            "2ecb802fbe7526806613f689f163282abe266452"
        ],
        [
            "apply fold_right_eqlistA with (eqA:=eqke) (eqB:=eqA); auto.",
            "VernacExtend",
            "496b34e63310be20621ba05d707a28733b90d7b7"
        ],
        [
            "intros (k,e) (k',e') (Hk,He) a a' Ha; simpl in *; apply Hf; auto.",
            "VernacExtend",
            "3b0fd180bafbd5f5523f851a806ada3fded8a3bd"
        ],
        [
            "apply eqlistA_rev.",
            "VernacExtend",
            "8cb0c2da1fcadbfeae208ed152416098f6ef693d"
        ],
        [
            "apply elements_Equal_eqlistA.",
            "VernacExtend",
            "61f44099d6122a1cff1ac7927ad4285c11131028"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_Add_Above : forall m1 m2 x e (A:Type)(eqA:A->A->Prop)(st:Equivalence eqA) (f:key->elt->A->A)(i:A) (P:Proper (E.eq==>eq==>eqA==>eqA) f), Above x m1 -> Add x e m1 m2 -> eqA (fold f m2 i) (f x e (fold f m1 i)).",
            "VernacStartTheoremProof",
            "b91f9b4d69873c82e843efe97a1625679d8d4ef0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite 2 fold_spec_right.",
            "VernacExtend",
            "2ecb802fbe7526806613f689f163282abe266452"
        ],
        [
            "set (f':=uncurry f).",
            "VernacExtend",
            "fd59eaa9f412cb9d7582b1cdaf165ca95dd6ff23"
        ],
        [
            "transitivity (fold_right f' i (rev (elements m1 ++ (x,e)::nil))).",
            "VernacExtend",
            "c1452049e5e0eda9a98628f8f8f02d185d636707"
        ],
        [
            "apply fold_right_eqlistA with (eqA:=eqke) (eqB:=eqA); auto.",
            "VernacExtend",
            "496b34e63310be20621ba05d707a28733b90d7b7"
        ],
        [
            "intros (k1,e1) (k2,e2) (Hk,He) a1 a2 Ha; unfold f'; simpl in *.",
            "VernacExtend",
            "e688bc85171411b1fa3eaaecb6dfad53bf2c0272"
        ],
        [
            "apply P; auto.",
            "VernacExtend",
            "14974419e80c9b3efee9cfd71cd171adeb80fcaf"
        ],
        [
            "apply eqlistA_rev.",
            "VernacExtend",
            "8cb0c2da1fcadbfeae208ed152416098f6ef693d"
        ],
        [
            "apply elements_Add_Above; auto.",
            "VernacExtend",
            "568fdb2de23d1784a4ae34a67be2b3be9a01ff3b"
        ],
        [
            "rewrite distr_rev; simpl.",
            "VernacExtend",
            "9f8328a8a454b7299382a7aad5ff2566ef819fa9"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_Add_Below : forall m1 m2 x e (A:Type)(eqA:A->A->Prop)(st:Equivalence eqA) (f:key->elt->A->A)(i:A) (P:Proper (E.eq==>eq==>eqA==>eqA) f), Below x m1 -> Add x e m1 m2 -> eqA (fold f m2 i) (fold f m1 (f x e i)).",
            "VernacStartTheoremProof",
            "f66a7407f127cc904471d81a8e132ced2ad042ad"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite 2 fold_spec_right.",
            "VernacExtend",
            "2ecb802fbe7526806613f689f163282abe266452"
        ],
        [
            "set (f':=uncurry f).",
            "VernacExtend",
            "fd59eaa9f412cb9d7582b1cdaf165ca95dd6ff23"
        ],
        [
            "transitivity (fold_right f' i (rev (((x,e)::nil)++elements m1))).",
            "VernacExtend",
            "241d051958902ec6f0267226623e761be801e25e"
        ],
        [
            "apply fold_right_eqlistA with (eqA:=eqke) (eqB:=eqA); auto.",
            "VernacExtend",
            "496b34e63310be20621ba05d707a28733b90d7b7"
        ],
        [
            "intros (k1,e1) (k2,e2) (Hk,He) a1 a2 Ha; unfold f'; simpl in *; apply P; auto.",
            "VernacExtend",
            "ca4b9c610e4af3b95bad0fd93a622ff81f3f3547"
        ],
        [
            "apply eqlistA_rev.",
            "VernacExtend",
            "8cb0c2da1fcadbfeae208ed152416098f6ef693d"
        ],
        [
            "simpl; apply elements_Add_Below; auto.",
            "VernacExtend",
            "c2ebdcf0bea9a8fa2b97f2d65f63518b4e2a1d0d"
        ],
        [
            "rewrite distr_rev; simpl.",
            "VernacExtend",
            "9f8328a8a454b7299382a7aad5ff2566ef819fa9"
        ],
        [
            "rewrite fold_right_app.",
            "VernacExtend",
            "5832bcc8cb0f1c9a99f6a678a761e5f66dfa0dba"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fold_properties.",
            "VernacEndSegment",
            "149a27bff61f0ab6a7a4b5b9707a5e91ff34f05d"
        ],
        [
            "End Elt.",
            "VernacEndSegment",
            "ef6686463d3f7dfcb40f4805cf8f45019f83fdad"
        ],
        [
            "End OrdProperties.",
            "VernacEndSegment",
            "e0711feb727edf379adecbf78a1e4b3d8657f16c"
        ]
    ],
    "proofs": [
        {
            "name": "eq_bool_alt",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "destruct b; destruct b'; intuition.",
                        "VernacExtend",
                        "1b9a6b2d10db3306fa76aa599d3033937f2dfc0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_option_alt",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "subst; split; auto.",
                        "VernacExtend",
                        "c451ef2914ab67806aed8494e25bb2724f9ace83"
                    ]
                },
                {
                    "command": [
                        "destruct o; destruct o'; try rewrite H; auto.",
                        "VernacExtend",
                        "e549e42d92ca278e051be41eb31edaf384fe5f19"
                    ]
                },
                {
                    "command": [
                        "symmetry; rewrite <- H; auto.",
                        "VernacExtend",
                        "8cc0d78aeee2a3af794d0c5aece2ce147fe8d241"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MapsTo_fun",
            "line_nb": 18,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (find_1 H) (find_1 H0); clear H H0.",
                        "VernacExtend",
                        "9e09435722b7e3f1204a911b20537ae8f07d602f"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite H in H0; injection H0; auto.",
                        "VernacExtend",
                        "0591548e1edceecda9c1b4febb133929016e0fcc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_iff",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "unfold In.",
                        "VernacExtend",
                        "d7a2e438ac145b96769372b3253da28246b60614"
                    ]
                },
                {
                    "command": [
                        "split; intros (e0,H0); exists e0.",
                        "VernacExtend",
                        "2cabfe6b1e58fe8d78cd5bd9218f1036f27d7e10"
                    ]
                },
                {
                    "command": [
                        "apply (MapsTo_1 H H0); auto.",
                        "VernacExtend",
                        "13dfd5788416e613a852b2e39c20901d365c3f4b"
                    ]
                },
                {
                    "command": [
                        "apply (MapsTo_1 (E.eq_sym H) H0); auto.",
                        "VernacExtend",
                        "2630cefb40fcfe5657d3909dc3423c23e959e88d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MapsTo_iff",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "split; apply MapsTo_1; auto.",
                        "VernacExtend",
                        "18d192e37beaee639d99b1582c6986f286634a69"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_in_iff",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "split; [apply mem_1|apply mem_2].",
                        "VernacExtend",
                        "5794dfe848ef63c1fec96232cc173747b36467c1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_mem_in_iff",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "intros; rewrite mem_in_iff; destruct (mem x m); intuition.",
                        "VernacExtend",
                        "ab5729bc6e96f399b4550683c87c8b528bc00e09"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_dec",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (mem_in_iff m x).",
                        "VernacExtend",
                        "a567d7fcd6a9bbdb6a60a576a8923b2c692e58fb"
                    ]
                },
                {
                    "command": [
                        "destruct (mem x m); [left|right]; intuition.",
                        "VernacExtend",
                        "19e91a721a9ba10858cd0538c2bd34b15d14a0b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_mapsto_iff",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "split; [apply find_1|apply find_2].",
                        "VernacExtend",
                        "e556f7f6034a6a665a187c1965d61a83e2e15c38"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_find_in_iff",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_option_alt.",
                        "VernacExtend",
                        "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
                    ]
                },
                {
                    "command": [
                        "intro e.",
                        "VernacExtend",
                        "a775c5443e87e23a1cd85766bdbcdaad211332a3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- find_mapsto_iff.",
                        "VernacExtend",
                        "7e18f77b48a54ac1959f52bc3c2365848dcb8b13"
                    ]
                },
                {
                    "command": [
                        "split; try discriminate.",
                        "VernacExtend",
                        "b9a0e4944f458b52a9e45f100ef8b1a7a5b136f6"
                    ]
                },
                {
                    "command": [
                        "intro H'; elim H; exists e; auto.",
                        "VernacExtend",
                        "02a42631cda0e9edf2a4f98d1406de6ec8159cdf"
                    ]
                },
                {
                    "command": [
                        "intros (e,He); rewrite find_mapsto_iff,H in He; discriminate.",
                        "VernacExtend",
                        "54ab2cd265153c3314c07ba2ac31133229e9da0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_find_iff",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros; rewrite <- not_find_in_iff, mem_in_iff.",
                        "VernacExtend",
                        "c7d61538f9b34e98cd7cd3eac3b16afc469df25d"
                    ]
                },
                {
                    "command": [
                        "destruct mem; intuition.",
                        "VernacExtend",
                        "6fe9f47bad425d21fb6725e2e80a4dedebf8bbb4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_iff",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "split; [apply equal_1|apply equal_2].",
                        "VernacExtend",
                        "af6ac885a8e41815098c08832b7e4ac4e98e7c40"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_mapsto_iff",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "intuition; apply (empty_1 H).",
                        "VernacExtend",
                        "06d54bc3b9a5742dfdb40f00963915d07e65bb48"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_in_iff",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "unfold In.",
                        "VernacExtend",
                        "d7a2e438ac145b96769372b3253da28246b60614"
                    ]
                },
                {
                    "command": [
                        "split; [intros (e,H); rewrite empty_mapsto_iff in H|]; intuition.",
                        "VernacExtend",
                        "1ba198ae906ff406c4ba917abea35b2da6054dea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_empty_iff",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "split; [apply is_empty_1|apply is_empty_2].",
                        "VernacExtend",
                        "db4f7020fdf78d6004bc5e87c72f46ef0a390de6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_mapsto_iff",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec x y); [left|right].",
                        "VernacExtend",
                        "3a607b1ef4d9de4bbae5b3b619d62d2ab9e587f5"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply (MapsTo_fun (e':=e) H); auto with map.",
                        "VernacExtend",
                        "02acf3e767eceb41747c0abe3566a03414800e8b"
                    ]
                },
                {
                    "command": [
                        "split; auto; apply add_3 with x e; auto.",
                        "VernacExtend",
                        "2cda182b3e347b995473693a7d884d1a5856480a"
                    ]
                },
                {
                    "command": [
                        "subst; auto with map.",
                        "VernacExtend",
                        "9d1a19c0751a7eb28172d1f9be8466d90ba9f74a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_in_iff",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "unfold In; split.",
                        "VernacExtend",
                        "e54898e96030855959ba32f1484eaed9fd86298a"
                    ]
                },
                {
                    "command": [
                        "intros (e',H).",
                        "VernacExtend",
                        "1546ace5175bc3c1d6729bcc63e581462f8291eb"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec x y) as [E|E]; auto.",
                        "VernacExtend",
                        "f5041975e34803394e7f376978a8cd2dd802c6d7"
                    ]
                },
                {
                    "command": [
                        "right; exists e'; auto.",
                        "VernacExtend",
                        "4e38887429b5c1974aabe3888a2648812bbe8bc5"
                    ]
                },
                {
                    "command": [
                        "apply (add_3 E H).",
                        "VernacExtend",
                        "437fbacc5d5032ee0eb4aa95ba261cd618f50b5f"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec x y) as [E|E]; auto.",
                        "VernacExtend",
                        "f5041975e34803394e7f376978a8cd2dd802c6d7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "exists e; apply add_1; auto.",
                        "VernacExtend",
                        "51a7b6df5cb91f4e81e8292d8f38a479c57fa796"
                    ]
                },
                {
                    "command": [
                        "intros [H|(e',H)].",
                        "VernacExtend",
                        "22bff9bfb95077c9c20c05dd7319b9f7ddf8c84a"
                    ]
                },
                {
                    "command": [
                        "destruct E; auto.",
                        "VernacExtend",
                        "b6aefff988ff931796367be679098def877a45b6"
                    ]
                },
                {
                    "command": [
                        "exists e'; apply add_2; auto.",
                        "VernacExtend",
                        "95fe0f997a686f3196d33f83976b910f0e9a203e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_neq_mapsto_iff",
            "line_nb": 99,
            "steps": [
                {
                    "command": [
                        "split; [apply add_3|apply add_2]; auto.",
                        "VernacExtend",
                        "18f022774569e792759491d247cbd643af118ac1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_neq_in_iff",
            "line_nb": 102,
            "steps": [
                {
                    "command": [
                        "split; intros (e',H0); exists e'.",
                        "VernacExtend",
                        "c785d63bdfc7d678dab12082574200f9f605b315"
                    ]
                },
                {
                    "command": [
                        "apply (add_3 H H0).",
                        "VernacExtend",
                        "e7a544050322bd424b80f02d59bce4e5ffe2495b"
                    ]
                },
                {
                    "command": [
                        "apply add_2; auto.",
                        "VernacExtend",
                        "8663103388d6bf3c5509b91030359b3dfe3426fb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_mapsto_iff",
            "line_nb": 107,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assert (In y (remove x m)) by (exists e; auto).",
                        "VernacExtend",
                        "cc06f4839c181f517e24ae9bbec828480d8cfb5b"
                    ]
                },
                {
                    "command": [
                        "intro H1; apply (remove_1 H1 H0).",
                        "VernacExtend",
                        "079882f4eeaac1ad3fad369519f492dd90f0a6f6"
                    ]
                },
                {
                    "command": [
                        "apply remove_3 with x; auto.",
                        "VernacExtend",
                        "04eea3fd74778c1b0521520829bdf26ad4771920"
                    ]
                },
                {
                    "command": [
                        "apply remove_2; intuition.",
                        "VernacExtend",
                        "99911fe4f0a3a26a26114413a17cee47960239ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_in_iff",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "unfold In; split.",
                        "VernacExtend",
                        "e54898e96030855959ba32f1484eaed9fd86298a"
                    ]
                },
                {
                    "command": [
                        "intros (e,H).",
                        "VernacExtend",
                        "26b7a6683908c9527a49cac9ac0b829b0f9d9dca"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "assert (In y (remove x m)) by (exists e; auto).",
                        "VernacExtend",
                        "cc06f4839c181f517e24ae9bbec828480d8cfb5b"
                    ]
                },
                {
                    "command": [
                        "intro H1; apply (remove_1 H1 H0).",
                        "VernacExtend",
                        "079882f4eeaac1ad3fad369519f492dd90f0a6f6"
                    ]
                },
                {
                    "command": [
                        "exists e; apply remove_3 with x; auto.",
                        "VernacExtend",
                        "19f721b77323a109db2ceb75dbc10e27773e8906"
                    ]
                },
                {
                    "command": [
                        "intros (H,(e,H0)); exists e; apply remove_2; auto.",
                        "VernacExtend",
                        "b21da9eabf676ae1d02339e638345d2620b510d5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_neq_mapsto_iff",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "split; [apply remove_3|apply remove_2]; auto.",
                        "VernacExtend",
                        "d33fa68307e85e2cf8b2cbd758bf095d773e3c26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_neq_in_iff",
            "line_nb": 128,
            "steps": [
                {
                    "command": [
                        "split; intros (e',H0); exists e'.",
                        "VernacExtend",
                        "c785d63bdfc7d678dab12082574200f9f605b315"
                    ]
                },
                {
                    "command": [
                        "apply (remove_3 H0).",
                        "VernacExtend",
                        "e727637d97d5fa9b1febafb608935edfc7eeff4f"
                    ]
                },
                {
                    "command": [
                        "apply remove_2; auto.",
                        "VernacExtend",
                        "463be37842a1e4d891d71849ec899cdd80228832"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_mapsto_iff",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "split; [apply elements_1 | apply elements_2].",
                        "VernacExtend",
                        "11b177e7e10f07330eb1e0bd939d67d5c0aa0320"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_in_iff",
            "line_nb": 136,
            "steps": [
                {
                    "command": [
                        "unfold In; split; intros (e,H); exists e; [apply elements_1 | apply elements_2]; auto.",
                        "VernacExtend",
                        "db64b7eb007b0744360f94ad0ed97c9e2064cfb3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_mapsto_iff",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "case_eq (find x m); intros.",
                        "VernacExtend",
                        "ffd164e20a1af7b3d5c82ccac45d044379f151e3"
                    ]
                },
                {
                    "command": [
                        "exists e.",
                        "VernacExtend",
                        "4e644c830fdbbe811077e17f446c7832b57a4f89"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply (MapsTo_fun (m:=map f m) (x:=x)); auto with map.",
                        "VernacExtend",
                        "08ef31a0ac401c9d2f6bd6de6f49115f58b86ea2"
                    ]
                },
                {
                    "command": [
                        "apply find_2; auto with map.",
                        "VernacExtend",
                        "3053f738d0a49ed24c57117df0ee8a7b1b3101f9"
                    ]
                },
                {
                    "command": [
                        "assert (In x (map f m)) by (exists b; auto).",
                        "VernacExtend",
                        "96d19663d0133ecf7d65d87545a8d0c9ff13ad25"
                    ]
                },
                {
                    "command": [
                        "destruct (map_2 H1) as (a,H2).",
                        "VernacExtend",
                        "cb88fa1f55f28e9631e4c8bcc1ba8410e4fbc1a6"
                    ]
                },
                {
                    "command": [
                        "rewrite (find_1 H2) in H; discriminate.",
                        "VernacExtend",
                        "8d75204ea79d15963e0ee40ce26f307eb42e79aa"
                    ]
                },
                {
                    "command": [
                        "intros (a,(H,H0)).",
                        "VernacExtend",
                        "d3b447d1498118511c6baa2f40a0e912c832a444"
                    ]
                },
                {
                    "command": [
                        "subst b; auto with map.",
                        "VernacExtend",
                        "f59596ba84c7a5bf0468381cadf90264a0ece164"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_in_iff",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "split; intros; eauto with map.",
                        "VernacExtend",
                        "29ca2f9244fc04de9a218312bed96341e6c4deec"
                    ]
                },
                {
                    "command": [
                        "destruct H as (a,H).",
                        "VernacExtend",
                        "11f0ad535963beef2ed8dd11a59f8c5b484d01c6"
                    ]
                },
                {
                    "command": [
                        "exists (f a); auto with map.",
                        "VernacExtend",
                        "f441bf1eff701b901606dca8765f2745ec99ea20"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapi_in_iff",
            "line_nb": 157,
            "steps": [
                {
                    "command": [
                        "split; intros; eauto with map.",
                        "VernacExtend",
                        "29ca2f9244fc04de9a218312bed96341e6c4deec"
                    ]
                },
                {
                    "command": [
                        "destruct H as (a,H).",
                        "VernacExtend",
                        "11f0ad535963beef2ed8dd11a59f8c5b484d01c6"
                    ]
                },
                {
                    "command": [
                        "destruct (mapi_1 f H) as (y,(H0,H1)).",
                        "VernacExtend",
                        "6be1db6d9321f32722fb41d406d3739a8e54d1a9"
                    ]
                },
                {
                    "command": [
                        "exists (f y a); auto.",
                        "VernacExtend",
                        "95bd7a9b361af57162bee27be610a8f649b7b8c3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapi_inv",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "intros; case_eq (find x m); intros.",
                        "VernacExtend",
                        "69d9e5bc3f1ce38f46e9b91da7448c4cf13422bb"
                    ]
                },
                {
                    "command": [
                        "exists e.",
                        "VernacExtend",
                        "4e644c830fdbbe811077e17f446c7832b57a4f89"
                    ]
                },
                {
                    "command": [
                        "destruct (@mapi_1 _ _ m x e f) as (y,(H1,H2)).",
                        "VernacExtend",
                        "0bbcc7217e86a1f1b1525258daa63c3bcfdf1cf7"
                    ]
                },
                {
                    "command": [
                        "apply find_2; auto with map.",
                        "VernacExtend",
                        "3053f738d0a49ed24c57117df0ee8a7b1b3101f9"
                    ]
                },
                {
                    "command": [
                        "exists y; repeat split; auto with map.",
                        "VernacExtend",
                        "938afd8311ed9d81675e96dbe972b05ba53f02fa"
                    ]
                },
                {
                    "command": [
                        "apply (MapsTo_fun (m:=mapi f m) (x:=x)); auto with map.",
                        "VernacExtend",
                        "9d5bbb72fe4393a2501950f4248ec36b309d611b"
                    ]
                },
                {
                    "command": [
                        "assert (In x (mapi f m)) by (exists b; auto).",
                        "VernacExtend",
                        "1c6a5e3aa2f23e6fcf06ab6b3c87df8b4cc92700"
                    ]
                },
                {
                    "command": [
                        "destruct (mapi_2 H1) as (a,H2).",
                        "VernacExtend",
                        "f5be4763e8cac2f1f6e0347f0a6f0a2c5c42fb75"
                    ]
                },
                {
                    "command": [
                        "rewrite (find_1 H2) in H0; discriminate.",
                        "VernacExtend",
                        "3c1c66d944e28ad73b17545d6813f6193ea5b74b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapi_1bis",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (mapi_1 f H0) as (y,(H1,H2)).",
                        "VernacExtend",
                        "e35abcf4cdb0ff29180e5d52dc59f5941fab9ea3"
                    ]
                },
                {
                    "command": [
                        "replace (f x e) with (f y e) by auto.",
                        "VernacExtend",
                        "64aa3ab70efa871ca262e3a4a37132df901aa8a1"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapi_mapsto_iff",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (mapi_inv H0) as (a,(y,(H1,(H2,H3)))).",
                        "VernacExtend",
                        "c73c3eee24e2cbedd16ac73d2993c6bbd05ac5e2"
                    ]
                },
                {
                    "command": [
                        "exists a; split; auto.",
                        "VernacExtend",
                        "6ced52e045930ee310d935c747875e269f31e154"
                    ]
                },
                {
                    "command": [
                        "subst b; auto.",
                        "VernacExtend",
                        "84e0a1b88448ef208ec31c5f0813b0018a3cacec"
                    ]
                },
                {
                    "command": [
                        "intros (a,(H0,H1)).",
                        "VernacExtend",
                        "b406bcde4c672cf1678c518f3614e7fd3937ed60"
                    ]
                },
                {
                    "command": [
                        "subst b.",
                        "VernacExtend",
                        "f6a3780afda85f3eb20e4cd9f3da775990bbc7d3"
                    ]
                },
                {
                    "command": [
                        "apply mapi_1bis; auto.",
                        "VernacExtend",
                        "a807b599a037799a7f47605066964673314ea599"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_find_b",
            "line_nb": 193,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (find_mapsto_iff m x)(mem_in_iff m x); unfold In.",
                        "VernacExtend",
                        "5d83ecc9d67de17bd2b4ed8340de4beff041b843"
                    ]
                },
                {
                    "command": [
                        "destruct (find x m); destruct (mem x m); auto.",
                        "VernacExtend",
                        "a135b2129b066dc1ab91a6d8a467d9759e4c431e"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; exists e; rewrite H; auto.",
                        "VernacExtend",
                        "14be3d7f3b2331755aab7b30eab71973f6f60fb9"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as (e,H0).",
                        "VernacExtend",
                        "a50ef5fd5c9665866ff9bc410aa04c54c38510e7"
                    ]
                },
                {
                    "command": [
                        "destruct (H e); intuition discriminate.",
                        "VernacExtend",
                        "9fd07ab8116331a59ef83283fef187986c20bd12"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_b",
            "line_nb": 207,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (mem_in_iff m x) (mem_in_iff m y)(In_iff m H).",
                        "VernacExtend",
                        "3cd03fef0af9a29aa0a912f5aa7ef8a57b20ad79"
                    ]
                },
                {
                    "command": [
                        "destruct (mem x m); destruct (mem y m); intuition.",
                        "VernacExtend",
                        "6dc116b555eacdaad6b512b790aad75ce3582ad7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_o",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_option_alt.",
                        "VernacExtend",
                        "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
                    ]
                },
                {
                    "command": [
                        "intro e.",
                        "VernacExtend",
                        "a775c5443e87e23a1cd85766bdbcdaad211332a3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- 2 find_mapsto_iff.",
                        "VernacExtend",
                        "4994d9e8a98bcc93529092b8308b10d7015c279c"
                    ]
                },
                {
                    "command": [
                        "apply MapsTo_iff; auto.",
                        "VernacExtend",
                        "1e093ead3333579f6eabc9606215aacd76821cc4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_o",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_option_alt.",
                        "VernacExtend",
                        "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
                    ]
                },
                {
                    "command": [
                        "intro e.",
                        "VernacExtend",
                        "a775c5443e87e23a1cd85766bdbcdaad211332a3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- find_mapsto_iff, empty_mapsto_iff; now intuition.",
                        "VernacExtend",
                        "40889bfbe049418421c86c22c68fc1dc6a8f01cd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_a",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case_eq (mem x (empty elt)); intros; auto.",
                        "VernacExtend",
                        "0b7c6efd0d348cda9becc38f9c006a0b796532a0"
                    ]
                },
                {
                    "command": [
                        "generalize (mem_2 H).",
                        "VernacExtend",
                        "b1e35e336d932335049f6e6511b9538eb28c096e"
                    ]
                },
                {
                    "command": [
                        "rewrite empty_in_iff; intuition.",
                        "VernacExtend",
                        "d6933368f2ac2f9679cae5a410e50e5c4284638c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_eq_o",
            "line_nb": 231,
            "steps": [
                {
                    "command": [
                        "auto with map.",
                        "VernacExtend",
                        "94b58e670b3e6eb6f35d5fce4b9af965d2ce5bb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_neq_o",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_option_alt.",
                        "VernacExtend",
                        "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
                    ]
                },
                {
                    "command": [
                        "intro e'.",
                        "VernacExtend",
                        "b247e659a1a8a69c4fc8c99c9b4ffe992ec85cd2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- 2 find_mapsto_iff.",
                        "VernacExtend",
                        "4994d9e8a98bcc93529092b8308b10d7015c279c"
                    ]
                },
                {
                    "command": [
                        "apply add_neq_mapsto_iff; auto.",
                        "VernacExtend",
                        "c2a41c2c5fadace231cfc90608a6d3018e3d3ae7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_o",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "intros; destruct (eq_dec x y); auto with map.",
                        "VernacExtend",
                        "152c172fce7b594772bfa26427d7c90d9619145e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_eq_b",
            "line_nb": 245,
            "steps": [
                {
                    "command": [
                        "intros; rewrite mem_find_b; rewrite add_eq_o; auto.",
                        "VernacExtend",
                        "a04b51d35591e917e45a8cfc834e3cdfbf890644"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_neq_b",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "intros; do 2 rewrite mem_find_b; rewrite add_neq_o; auto.",
                        "VernacExtend",
                        "f52ff200bc52a5295a180f7b708f63944ae4aae3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_b",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "intros; do 2 rewrite mem_find_b; rewrite add_o; unfold eqb.",
                        "VernacExtend",
                        "60e1f482f070bf690d950e5e665384be58c805aa"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec x y); simpl; auto.",
                        "VernacExtend",
                        "75b6c321370221ed32fbf8895a80174a9b35b844"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_eq_o",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_option_alt.",
                        "VernacExtend",
                        "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
                    ]
                },
                {
                    "command": [
                        "intro e.",
                        "VernacExtend",
                        "a775c5443e87e23a1cd85766bdbcdaad211332a3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- find_mapsto_iff, remove_mapsto_iff; now intuition.",
                        "VernacExtend",
                        "f66840b8907124e05e894e5e32ceef825337c1e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_neq_o",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_option_alt.",
                        "VernacExtend",
                        "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
                    ]
                },
                {
                    "command": [
                        "intro e.",
                        "VernacExtend",
                        "a775c5443e87e23a1cd85766bdbcdaad211332a3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- find_mapsto_iff, remove_neq_mapsto_iff; now intuition.",
                        "VernacExtend",
                        "bd5d0e1037ead98e24e797b0159ab9cd1acec0c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_o",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "intros; destruct (eq_dec x y); auto with map.",
                        "VernacExtend",
                        "152c172fce7b594772bfa26427d7c90d9619145e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_eq_b",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "intros; rewrite mem_find_b; rewrite remove_eq_o; auto.",
                        "VernacExtend",
                        "dfe0caef382fc6f9d29798fd96eb969f441d4d51"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_neq_b",
            "line_nb": 275,
            "steps": [
                {
                    "command": [
                        "intros; do 2 rewrite mem_find_b; rewrite remove_neq_o; auto.",
                        "VernacExtend",
                        "2652ef6c8d19084a47c2302fb9d9db004732da1b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_b",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "intros; do 2 rewrite mem_find_b; rewrite remove_o; unfold eqb.",
                        "VernacExtend",
                        "3bdc784a437832011a935e7286346caffc6cc9d7"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec x y); auto.",
                        "VernacExtend",
                        "3cbf747bc7503a8a75697a25cc053796d8723b5c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_o",
            "line_nb": 282,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (find_mapsto_iff (map f m) x) (find_mapsto_iff m x) (fun b => map_mapsto_iff m x b f).",
                        "VernacExtend",
                        "99bff601d47bd0c072d083a85557bca918144f2c"
                    ]
                },
                {
                    "command": [
                        "destruct (find x (map f m)); destruct (find x m); simpl; auto; intros.",
                        "VernacExtend",
                        "781132732ed432d9ad49e5647473794d68e46b6e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; rewrite H1; exists e0; rewrite H0; auto.",
                        "VernacExtend",
                        "1e0469b67a1403b89f3246497fae0325b9ec0012"
                    ]
                },
                {
                    "command": [
                        "destruct (H e) as [_ H2].",
                        "VernacExtend",
                        "ab8104612b250f13df05d17939fd1a3a79280fb4"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H2.",
                        "VernacExtend",
                        "3ddaddaf8f89728f77671f580e26162e25035230"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as (a,(_,H2)); auto.",
                        "VernacExtend",
                        "9e03ea1f84e298b9136d9ba0a20058fed32bbdc6"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 in H2; discriminate.",
                        "VernacExtend",
                        "85a27a6d0096bbd5f49cc44e79ece6f6938861c0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; rewrite H1; exists e; rewrite H0; auto.",
                        "VernacExtend",
                        "b989368d8aad7d5fd69461ea02343c6154c8d265"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_b",
            "line_nb": 293,
            "steps": [
                {
                    "command": [
                        "intros; do 2 rewrite mem_find_b; rewrite map_o.",
                        "VernacExtend",
                        "9af441223a5ff8e1eac8eaa2710bbed7355f7352"
                    ]
                },
                {
                    "command": [
                        "destruct (find x m); simpl; auto.",
                        "VernacExtend",
                        "52a8b05db4e941878106d18fb9b9895de2889d4a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapi_b",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (mem_in_iff (mapi f m) x) (mem_in_iff m x) (mapi_in_iff m x f).",
                        "VernacExtend",
                        "af75ee8acc7679b9794c7fbb1101702f9f5710f7"
                    ]
                },
                {
                    "command": [
                        "destruct (mem x (mapi f m)); destruct (mem x m); simpl; auto; intros.",
                        "VernacExtend",
                        "3f74f03103ce9c90a52011e84217dfea6efb323d"
                    ]
                },
                {
                    "command": [
                        "symmetry; rewrite <- H0; rewrite <- H1; rewrite H; auto.",
                        "VernacExtend",
                        "69e1800b208ea01312708ec0fdd88023c8f679b7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; rewrite H1; rewrite H0; auto.",
                        "VernacExtend",
                        "b0b388d8c00f23f675e32962be366734a727add5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapi_o",
            "line_nb": 304,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (find_mapsto_iff (mapi f m) x) (find_mapsto_iff m x) (fun b => mapi_mapsto_iff m x b H).",
                        "VernacExtend",
                        "623ab5992c42f94a915e550616882066287716ab"
                    ]
                },
                {
                    "command": [
                        "destruct (find x (mapi f m)); destruct (find x m); simpl; auto; intros.",
                        "VernacExtend",
                        "cd0fd7bf4989f6240dab35e3c559dd55b7ed5e66"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; rewrite H2; exists e0; rewrite H1; auto.",
                        "VernacExtend",
                        "d0b429d67225f2c1e36f3adaf430fc4290703900"
                    ]
                },
                {
                    "command": [
                        "destruct (H0 e) as [_ H3].",
                        "VernacExtend",
                        "c5b49634bdc43e3a7b91ed095dcd79a108e7b660"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in H3.",
                        "VernacExtend",
                        "009aed681b5bf7878390422291392aff7e71e42a"
                    ]
                },
                {
                    "command": [
                        "destruct H3 as (a,(_,H3)); auto.",
                        "VernacExtend",
                        "b72a1b9ea074d0c446af2a1fbf3e4efa9e00ac1a"
                    ]
                },
                {
                    "command": [
                        "rewrite H1 in H3; discriminate.",
                        "VernacExtend",
                        "c3f8ccb68cf43a77aebb2151045e071183973f30"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; rewrite H2; exists e; rewrite H1; auto.",
                        "VernacExtend",
                        "872cdef7dd3a41419bb07086e4ae4bfe75845e3a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map2_1bis",
            "line_nb": 315,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case_eq (find x m); intros.",
                        "VernacExtend",
                        "ffd164e20a1af7b3d5c82ccac45d044379f151e3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0.",
                        "VernacExtend",
                        "f6718c09e494e327328e3c2003dd236939e231f9"
                    ]
                },
                {
                    "command": [
                        "apply map2_1; auto with map.",
                        "VernacExtend",
                        "a28fb0e40318a5214248a632f0aac01e837f2bbc"
                    ]
                },
                {
                    "command": [
                        "left; exists e; auto with map.",
                        "VernacExtend",
                        "796ef48ee82d3210f034e830910a1006efbee7c4"
                    ]
                },
                {
                    "command": [
                        "case_eq (find x m'); intros.",
                        "VernacExtend",
                        "55647f8f6d735e6e02a36b794591230f0b5e4768"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; rewrite <- H1.",
                        "VernacExtend",
                        "66c701ca9f1cc54dbb13bfe476979dd3c5945511"
                    ]
                },
                {
                    "command": [
                        "apply map2_1; auto.",
                        "VernacExtend",
                        "3cd83c60a549e9784f54ceb8bd3a6b759d490142"
                    ]
                },
                {
                    "command": [
                        "right; exists e; auto with map.",
                        "VernacExtend",
                        "f47842489582a999fcd8fac960a08133f2c56fb4"
                    ]
                },
                {
                    "command": [
                        "rewrite H.",
                        "VernacExtend",
                        "6192df8b89486a3ba89a78e26e0d70cae2dc94c2"
                    ]
                },
                {
                    "command": [
                        "case_eq (find x (map2 f m m')); intros; auto with map.",
                        "VernacExtend",
                        "986729867185bbb289920730af4a123e9877d277"
                    ]
                },
                {
                    "command": [
                        "assert (In x (map2 f m m')) by (exists e; auto with map).",
                        "VernacExtend",
                        "e96c691e08199d4fb7a66b93f46dfbc23888a040"
                    ]
                },
                {
                    "command": [
                        "destruct (map2_2 H3) as [(e0,H4)|(e0,H4)].",
                        "VernacExtend",
                        "a63e1411708359ba0e74c6df086113b8d20f4cb8"
                    ]
                },
                {
                    "command": [
                        "rewrite (find_1 H4) in H0; discriminate.",
                        "VernacExtend",
                        "ce4c3cc3e45015a4cbed771044a0d5455b7c0513"
                    ]
                },
                {
                    "command": [
                        "rewrite (find_1 H4) in H1; discriminate.",
                        "VernacExtend",
                        "d1ca20986743c1472853a896107d696f1addebc9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_o",
            "line_nb": 332,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_option_alt.",
                        "VernacExtend",
                        "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
                    ]
                },
                {
                    "command": [
                        "intro e.",
                        "VernacExtend",
                        "a775c5443e87e23a1cd85766bdbcdaad211332a3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- find_mapsto_iff, elements_mapsto_iff.",
                        "VernacExtend",
                        "bbab5db31ca1e361dbcdcdd89da30ca75c530963"
                    ]
                },
                {
                    "command": [
                        "unfold eqb.",
                        "VernacExtend",
                        "f9e717295e72955f079840f1bebf6c7bb720ca43"
                    ]
                },
                {
                    "command": [
                        "rewrite <- findA_NoDupA; dintuition; try apply elements_3w; eauto.",
                        "VernacExtend",
                        "b48a7a0557b9a88cfd977fe613e0784be488875e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_b",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (mem_in_iff m x)(elements_in_iff m x) (existsb_exists (fun p => eqb x (fst p)) (elements m)).",
                        "VernacExtend",
                        "7fb7fb6b94929144f2f34689a6d8849383995aed"
                    ]
                },
                {
                    "command": [
                        "destruct (mem x m); destruct (existsb (fun p => eqb x (fst p)) (elements m)); auto; intros.",
                        "VernacExtend",
                        "28fc19f1fe302666db0f43eade3fcb9b711af7d5"
                    ]
                },
                {
                    "command": [
                        "symmetry; rewrite H1.",
                        "VernacExtend",
                        "472215358a4c38f4917ce59ec50ee058206017ff"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as (H0,_).",
                        "VernacExtend",
                        "808c69de34479fe87b6ee9e17a0850d3be5b548e"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as (e,He); [ intuition |].",
                        "VernacExtend",
                        "52f06757e0b7852c83dd06a73f75e1e051bac24b"
                    ]
                },
                {
                    "command": [
                        "rewrite InA_alt in He.",
                        "VernacExtend",
                        "8f47f7f2da554c49cb728028b7aac4cefcf737e7"
                    ]
                },
                {
                    "command": [
                        "destruct He as ((y,e'),(Ha1,Ha2)).",
                        "VernacExtend",
                        "53630c5c0ffd45f50d812dc9b150df47d998abef"
                    ]
                },
                {
                    "command": [
                        "compute in Ha1; destruct Ha1; subst e'.",
                        "VernacExtend",
                        "25d696d7e9ae0052e55a3de688d08f10bed6a8df"
                    ]
                },
                {
                    "command": [
                        "exists (y,e); split; simpl; auto.",
                        "VernacExtend",
                        "fa417dc9c217b856ae0a6ea8b0c091cf905f5a4f"
                    ]
                },
                {
                    "command": [
                        "unfold eqb; destruct (eq_dec x y); intuition.",
                        "VernacExtend",
                        "4b493e1ba51f80288c2aee29a4decc13391b450c"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; rewrite H0.",
                        "VernacExtend",
                        "8c2b09f43ceab7b5485cf9f9aef1ab7d1ba3fd9a"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as (H1,_).",
                        "VernacExtend",
                        "3e1f757ebfa6eb0443e2f849f1d5a95f18447330"
                    ]
                },
                {
                    "command": [
                        "destruct H1 as ((y,e),(Ha1,Ha2)); [intuition|].",
                        "VernacExtend",
                        "ac7ee6118f3ca235f2724ee3c33bc9fd9ba87b73"
                    ]
                },
                {
                    "command": [
                        "simpl in Ha2.",
                        "VernacExtend",
                        "49f4428934e0f577fdd08fabb8b0720efe62219a"
                    ]
                },
                {
                    "command": [
                        "unfold eqb in *; destruct (eq_dec x y); auto; try discriminate.",
                        "VernacExtend",
                        "2f730c4c1628203c194b87b03dce333981fbb268"
                    ]
                },
                {
                    "command": [
                        "exists e; rewrite InA_alt.",
                        "VernacExtend",
                        "6f836d5582e2ee436854268a07a3c292c9a0b244"
                    ]
                },
                {
                    "command": [
                        "exists (y,e); intuition.",
                        "VernacExtend",
                        "2b6ec274b09c2439156bc769058fc19821dbc3a1"
                    ]
                },
                {
                    "command": [
                        "compute; auto.",
                        "VernacExtend",
                        "1311beca6cdf16cb2f815d9c6adb8bab9eb2d9e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equal_mapsto_iff",
            "line_nb": 364,
            "steps": [
                {
                    "command": [
                        "intros m1 m2.",
                        "VernacExtend",
                        "1d46872b8cbbe0ad9ef8bfe28cfde2d7794cf272"
                    ]
                },
                {
                    "command": [
                        "split; [intros Heq k e|intros Hiff].",
                        "VernacExtend",
                        "f896b63527f55892d9b0ca84d15da66be7a59bf1"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 find_mapsto_iff, Heq.",
                        "VernacExtend",
                        "5d5b7b18fda997f50dedea314de87535ee2af551"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "intro k.",
                        "VernacExtend",
                        "32e738adabd1b2845bb50beed60df9eefe677271"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_option_alt.",
                        "VernacExtend",
                        "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
                    ]
                },
                {
                    "command": [
                        "intro e.",
                        "VernacExtend",
                        "a775c5443e87e23a1cd85766bdbcdaad211332a3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- 2 find_mapsto_iff; auto.",
                        "VernacExtend",
                        "745b169faae659791251ec121434a39af20f6a15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equal_Equiv",
            "line_nb": 374,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite Equal_mapsto_iff.",
                        "VernacExtend",
                        "590ac075a4657447f7a2451b98cd1e962a6d296a"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "split; intros (e,Hin); exists e; [rewrite <- H|rewrite H]; auto.",
                        "VernacExtend",
                        "76877db15c3379d9b908ee734ea90e3ccfb23f64"
                    ]
                },
                {
                    "command": [
                        "intros; apply MapsTo_fun with m k; auto; rewrite H; auto.",
                        "VernacExtend",
                        "4556856790c1ed63a0a9acadf97aebc2619c6709"
                    ]
                },
                {
                    "command": [
                        "split; intros H'.",
                        "VernacExtend",
                        "010c3ee581698c43c620d139c469a2325e8ff08c"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "assert (Hin : In k m') by (rewrite <- H; exists e; auto).",
                        "VernacExtend",
                        "3bf7dcfed096d539bc5d44a849339b894de0c85a"
                    ]
                },
                {
                    "command": [
                        "destruct Hin as (e',He').",
                        "VernacExtend",
                        "beaadf6d64ced9d0404f2b3b7edcb5254cbcf2c6"
                    ]
                },
                {
                    "command": [
                        "rewrite (H0 k e e'); auto.",
                        "VernacExtend",
                        "dbfe63022c535f269b4aea0fc32c5f3fea200c7c"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "assert (Hin : In k m) by (rewrite H; exists e; auto).",
                        "VernacExtend",
                        "071dc10fbd90f22f83127e65c01afac9b13876df"
                    ]
                },
                {
                    "command": [
                        "destruct Hin as (e',He').",
                        "VernacExtend",
                        "beaadf6d64ced9d0404f2b3b7edcb5254cbcf2c6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (H0 k e' e); auto.",
                        "VernacExtend",
                        "18e07c95685ac0571d391271a2f1fc9da4ce49d8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equiv_Equivb",
            "line_nb": 395,
            "steps": [
                {
                    "command": [
                        "unfold Equivb, Equiv, Cmp; intuition.",
                        "VernacExtend",
                        "d4cf5f109b98d95f5386d203a12afabd22717687"
                    ]
                },
                {
                    "command": [
                        "red in H; rewrite H; eauto.",
                        "VernacExtend",
                        "9596539ddf62c9b2a9658eb0cb89947e8f8a3b2a"
                    ]
                },
                {
                    "command": [
                        "red in H; rewrite <-H; eauto.",
                        "VernacExtend",
                        "502c75ca3388ebd24ee993fa4795830c2c4be380"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equal_Equivb",
            "line_nb": 401,
            "steps": [
                {
                    "command": [
                        "intros; rewrite Equal_Equiv.",
                        "VernacExtend",
                        "40d437892b0d67049750ae4da75893899e518fb2"
                    ]
                },
                {
                    "command": [
                        "apply Equiv_Equivb; auto.",
                        "VernacExtend",
                        "a358b02b4f0890f4958bfbd399b2ff6da87f2851"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equal_Equivb_eqdec",
            "line_nb": 405,
            "steps": [
                {
                    "command": [
                        "intros; apply Equal_Equivb.",
                        "VernacExtend",
                        "cf1b8abed23b9e170009053c1addbcb64615fb2f"
                    ]
                },
                {
                    "command": [
                        "unfold cmp; clear cmp; intros.",
                        "VernacExtend",
                        "13e71ce0e0361ec4ada82748e06e0fdd0ce45051"
                    ]
                },
                {
                    "command": [
                        "destruct eq_elt_dec; now intuition.",
                        "VernacExtend",
                        "fc28d144bbe94fd0dabb1697aaaa48c11bdfba76"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equal_refl",
            "line_nb": 411,
            "steps": [
                {
                    "command": [
                        "red; reflexivity.",
                        "VernacExtend",
                        "07ab1bc5a0fe9bc4e18f2ad6881f6008a016c3ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equal_sym",
            "line_nb": 414,
            "steps": [
                {
                    "command": [
                        "unfold Equal; auto.",
                        "VernacExtend",
                        "1e7e0346347e06c12539e3a0be4847c5cbc70005"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equal_trans",
            "line_nb": 417,
            "steps": [
                {
                    "command": [
                        "unfold Equal; congruence.",
                        "VernacExtend",
                        "7a83c296f4ce76ff07567802a34df08b57d1a7d4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equal_ST",
            "line_nb": 420,
            "steps": [
                {
                    "command": [
                        "constructor; red; [apply Equal_refl | apply Equal_sym | apply Equal_trans].",
                        "VernacExtend",
                        "6f629fbe45ca4d98343f6d53532690973f698ae1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "In_m_Proper",
            "line_nb": 426,
            "steps": [
                {
                    "command": [
                        "unfold Equal; intros k k' Hk m m' Hm.",
                        "VernacExtend",
                        "82e402514d07c72cc4371c3bb6dcf3ed42e8ef80"
                    ]
                },
                {
                    "command": [
                        "rewrite (In_iff m Hk), in_find_iff, in_find_iff, Hm; intuition.",
                        "VernacExtend",
                        "582282a5f36c332f40585f7f72f4bdc34c0b7583"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MapsTo_m_Proper",
            "line_nb": 430,
            "steps": [
                {
                    "command": [
                        "unfold Equal; intros k k' Hk e m m' Hm.",
                        "VernacExtend",
                        "cf8ed8d1644cc918258d62c4abcb62131d7b6c00"
                    ]
                },
                {
                    "command": [
                        "rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; intuition.",
                        "VernacExtend",
                        "bd81b6d3f9472d76266f81619d06c63033778786"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Empty_m_Proper",
            "line_nb": 434,
            "steps": [
                {
                    "command": [
                        "unfold Empty; intros m m' Hm.",
                        "VernacExtend",
                        "3da12ef2b3267531a53a5382d21b133c4d696a2b"
                    ]
                },
                {
                    "command": [
                        "split; intros; intro.",
                        "VernacExtend",
                        "ecc741092f9247e9f26fb17da38c492417f0d812"
                    ]
                },
                {
                    "command": [
                        "rewrite <-Hm in H0; eapply H, H0.",
                        "VernacExtend",
                        "add68ba5e2ba0f6d35fbe34f92522cb8002e986d"
                    ]
                },
                {
                    "command": [
                        "rewrite Hm in H0; eapply H, H0.",
                        "VernacExtend",
                        "5a6a235c80f219b054aee80019885c20664e7828"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_empty_m_Proper",
            "line_nb": 440,
            "steps": [
                {
                    "command": [
                        "intros m m' Hm.",
                        "VernacExtend",
                        "4ab467a09b4805e10751a241ba50375053b51a50"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_bool_alt, <-is_empty_iff, <-is_empty_iff, Hm; intuition.",
                        "VernacExtend",
                        "95cf50f36a4ab431ceb69c3e26d3ee0ce3cafac7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_m_Proper",
            "line_nb": 444,
            "steps": [
                {
                    "command": [
                        "intros k k' Hk m m' Hm.",
                        "VernacExtend",
                        "d909968d0e7e25a5ff6565934cc2b1bb3e5c469b"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_bool_alt, <- mem_in_iff, <-mem_in_iff, Hk, Hm; intuition.",
                        "VernacExtend",
                        "3dd6d0a119cc7d2a69e56998bbae7f49a7855c15"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_m_Proper",
            "line_nb": 448,
            "steps": [
                {
                    "command": [
                        "intros k k' Hk m m' Hm.",
                        "VernacExtend",
                        "d909968d0e7e25a5ff6565934cc2b1bb3e5c469b"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_option_alt.",
                        "VernacExtend",
                        "029bc8cd24c11082ff29b992d4dc166c3d8b4393"
                    ]
                },
                {
                    "command": [
                        "intro e.",
                        "VernacExtend",
                        "a775c5443e87e23a1cd85766bdbcdaad211332a3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- 2 find_mapsto_iff, Hk, Hm.",
                        "VernacExtend",
                        "c8055f43ff964bd97be10f62f8a0994b7ee8b3a1"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_m_Proper",
            "line_nb": 455,
            "steps": [
                {
                    "command": [
                        "intros k k' Hk e m m' Hm y.",
                        "VernacExtend",
                        "6b9fdc34cd1dbba1add194faaaa0d1b00585e3dc"
                    ]
                },
                {
                    "command": [
                        "rewrite add_o, add_o; do 2 destruct eq_dec as [|?Hnot]; auto.",
                        "VernacExtend",
                        "1f83c0583180e9161b9f65532521b2cc8885c51d"
                    ]
                },
                {
                    "command": [
                        "elim Hnot; rewrite <-Hk; auto.",
                        "VernacExtend",
                        "cadc96918c2c3bd2353e67e8213a2cb7e4e52885"
                    ]
                },
                {
                    "command": [
                        "elim Hnot; rewrite Hk; auto.",
                        "VernacExtend",
                        "0f61bd52fd98d0b5a3bae21d804bcca72af59727"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_m_Proper",
            "line_nb": 461,
            "steps": [
                {
                    "command": [
                        "intros k k' Hk m m' Hm y.",
                        "VernacExtend",
                        "eac9f876deab1f18c519f686e3d1b602c55791c8"
                    ]
                },
                {
                    "command": [
                        "rewrite remove_o, remove_o; do 2 destruct eq_dec as [|?Hnot]; auto.",
                        "VernacExtend",
                        "9787333959c9f9e8d850e918852fff4a42a429d6"
                    ]
                },
                {
                    "command": [
                        "elim Hnot; rewrite <-Hk; auto.",
                        "VernacExtend",
                        "cadc96918c2c3bd2353e67e8213a2cb7e4e52885"
                    ]
                },
                {
                    "command": [
                        "elim Hnot; rewrite Hk; auto.",
                        "VernacExtend",
                        "0f61bd52fd98d0b5a3bae21d804bcca72af59727"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_m_Proper",
            "line_nb": 467,
            "steps": [
                {
                    "command": [
                        "intros f m m' Hm y.",
                        "VernacExtend",
                        "09fbb3bd3f74208c13d576b8888ebe972c070fe1"
                    ]
                },
                {
                    "command": [
                        "rewrite map_o, map_o, Hm; auto.",
                        "VernacExtend",
                        "5cafcad1c762fe3eeb005bdfe88d3cf513a01665"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqk_equiv",
            "line_nb": 483,
            "steps": [
                {
                    "command": [
                        "unfold eq_key; split; eauto.",
                        "VernacExtend",
                        "3d4943767d93f8699d15630d823582691e2d8316"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eqke_equiv",
            "line_nb": 486,
            "steps": [
                {
                    "command": [
                        "unfold eq_key_elt; split; repeat red; firstorder.",
                        "VernacExtend",
                        "97f4935173215dfd8bb11b602a8c72d2c32c1518"
                    ]
                },
                {
                    "command": [
                        "eauto with *.",
                        "VernacExtend",
                        "572dd351521dbb095e4dcc48e4bad331ece18aac"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "InA_eqke_eqk",
            "line_nb": 491,
            "steps": [
                {
                    "command": [
                        "intros k1 k2 e1 e2 l Hk.",
                        "VernacExtend",
                        "23149441e69f409de613438d6126932ae6fa0bc7"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 InA_alt.",
                        "VernacExtend",
                        "1ec083f460d12e4b48b07a1a5948edf0eb0fc909"
                    ]
                },
                {
                    "command": [
                        "intros ((k',e') & (Hk',He') & H); simpl in *.",
                        "VernacExtend",
                        "ec25bae1ee2ab60fcaff5875539db6be1b22a7e2"
                    ]
                },
                {
                    "command": [
                        "exists (k',e'); split; auto.",
                        "VernacExtend",
                        "1b42ddeb92d69ce3d67d2de2cf3c71ee2c160289"
                    ]
                },
                {
                    "command": [
                        "red; simpl; eauto.",
                        "VernacExtend",
                        "39398b970083e16fdab7df079f160a4ebb1ed0fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "NoDupA_eqk_eqke",
            "line_nb": 498,
            "steps": [
                {
                    "command": [
                        "induction 1; auto.",
                        "VernacExtend",
                        "1f706f8985097cf30b2449a4fda927a48fc6a84a"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "destruct x as (k,e).",
                        "VernacExtend",
                        "3b61b93fee35d53b2bf7891801215e573b6311b2"
                    ]
                },
                {
                    "command": [
                        "eauto using InA_eqke_eqk.",
                        "VernacExtend",
                        "b2c3281273ffdf65d48b17544306c4e49c4edefc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_Empty",
            "line_nb": 517,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold Empty.",
                        "VernacExtend",
                        "5deff0539bdcca88b34c45ca8c61aec97033b4a3"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "assert (forall a, ~ List.In a (elements m)).",
                        "VernacExtend",
                        "45f2b8fb9c7be1f44e9e4026853c1857a8d2cc4c"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "apply (H (fst a) (snd a)).",
                        "VernacExtend",
                        "c8fc00f0572040cb669e725e7c5d11fb0730035e"
                    ]
                },
                {
                    "command": [
                        "rewrite elements_mapsto_iff.",
                        "VernacExtend",
                        "ca5b6d97338b6ed72041fd26d5724b6135e4be1e"
                    ]
                },
                {
                    "command": [
                        "rewrite InA_alt; exists a; auto.",
                        "VernacExtend",
                        "8634bb87f39215e449a5ff719abacd7e0387f94a"
                    ]
                },
                {
                    "command": [
                        "split; auto; split; auto.",
                        "VernacExtend",
                        "218effc4f5ae502cbfc34127d31c2e905de106cc"
                    ]
                },
                {
                    "command": [
                        "destruct (elements m); auto.",
                        "VernacExtend",
                        "344a8cab0a252d818517af64c0c57c0d6336ca7b"
                    ]
                },
                {
                    "command": [
                        "elim (H0 p); simpl; auto.",
                        "VernacExtend",
                        "a947e9c005cac08e8902bfd44b5b121f8017f535"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "rewrite elements_mapsto_iff in H0.",
                        "VernacExtend",
                        "762c84c07f7986b413177ff6cac3e67d6d5181d8"
                    ]
                },
                {
                    "command": [
                        "rewrite InA_alt in H0; destruct H0.",
                        "VernacExtend",
                        "f2927a8488adf474790ec9a7f0300de6ee976930"
                    ]
                },
                {
                    "command": [
                        "rewrite H in H0; destruct H0 as (_,H0); inversion H0.",
                        "VernacExtend",
                        "0c9877291f8cb9410a4e2f3e95471f19ee421781"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_empty",
            "line_nb": 534,
            "steps": [
                {
                    "command": [
                        "rewrite <-elements_Empty; apply empty_1.",
                        "VernacExtend",
                        "d39bc2737cc51d5b431c40734f6e4fecf208f0e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_list_1",
            "line_nb": 540,
            "steps": [
                {
                    "command": [
                        "induction l as [|(k',e') l IH]; simpl; intros k e Hnodup.",
                        "VernacExtend",
                        "31710e194876f18d7657d22a53b189a3815a63fc"
                    ]
                },
                {
                    "command": [
                        "rewrite empty_mapsto_iff, InA_nil; intuition.",
                        "VernacExtend",
                        "a3b8d191686070e8b38a3f849cfc52c177ee581e"
                    ]
                },
                {
                    "command": [
                        "unfold uncurry; simpl.",
                        "VernacExtend",
                        "7e0777475abacf15df72987600a8f68f5f4a5e98"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hnodup as [| ? ? Hnotin Hnodup'].",
                        "VernacExtend",
                        "d0a545b953577660ff986ce2963ab86ac3f58a8b"
                    ]
                },
                {
                    "command": [
                        "specialize (IH k e Hnodup'); clear Hnodup'.",
                        "VernacExtend",
                        "a67511c796908850e8b03aa73bf0a322dca6dc3a"
                    ]
                },
                {
                    "command": [
                        "rewrite add_mapsto_iff, InA_cons, <- IH.",
                        "VernacExtend",
                        "43527729d7ec9839622bac828db56e5bfd3a49fa"
                    ]
                },
                {
                    "command": [
                        "unfold eq_key_elt at 1; simpl.",
                        "VernacExtend",
                        "9dda56cbcf9a9c44f51afc4b880aeea5545f901b"
                    ]
                },
                {
                    "command": [
                        "split; destruct 1 as [H|H]; try (intuition;fail).",
                        "VernacExtend",
                        "540ca9f3d8ed7127baeecebcc1b733f320f27f84"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec k k'); [left|right]; split; auto.",
                        "VernacExtend",
                        "d29d7a7ba595769cb14a5f05fa50387f12c0a05e"
                    ]
                },
                {
                    "command": [
                        "contradict Hnotin.",
                        "VernacExtend",
                        "b99a5914cf39bdb6483d9e0af54d3afd372d5459"
                    ]
                },
                {
                    "command": [
                        "apply InA_eqke_eqk with k e; intuition.",
                        "VernacExtend",
                        "e1c07472c3100006c75d405e3aeec24d36197fb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_list_1b",
            "line_nb": 553,
            "steps": [
                {
                    "command": [
                        "induction l as [|(k',e') l IH]; simpl; intros k Hnodup.",
                        "VernacExtend",
                        "f6f0542487244e098b31bc4a35f7f607f570a35a"
                    ]
                },
                {
                    "command": [
                        "apply empty_o.",
                        "VernacExtend",
                        "b1f2330efab2ead04f11876e7897b56b437cd32b"
                    ]
                },
                {
                    "command": [
                        "unfold uncurry; simpl.",
                        "VernacExtend",
                        "7e0777475abacf15df72987600a8f68f5f4a5e98"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hnodup as [| ? ? Hnotin Hnodup'].",
                        "VernacExtend",
                        "d0a545b953577660ff986ce2963ab86ac3f58a8b"
                    ]
                },
                {
                    "command": [
                        "specialize (IH k Hnodup'); clear Hnodup'.",
                        "VernacExtend",
                        "f362b732e5edda7ea85ba23fcff82d0b94aeb763"
                    ]
                },
                {
                    "command": [
                        "rewrite add_o, IH.",
                        "VernacExtend",
                        "a1cfda9e69451846d1f9f4311d5355ca807ad58b"
                    ]
                },
                {
                    "command": [
                        "unfold eqb; do 2 destruct eq_dec as [|?Hnot]; auto; elim Hnot; eauto.",
                        "VernacExtend",
                        "003ad01f78e0d95e29a44cd165cb451289805198"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_list_2",
            "line_nb": 562,
            "steps": [
                {
                    "command": [
                        "intros l Hnodup (k,e).",
                        "VernacExtend",
                        "b79f434c8be0edd7a29faacde86333c2e20db4ae"
                    ]
                },
                {
                    "command": [
                        "rewrite <- elements_mapsto_iff, of_list_1; intuition.",
                        "VernacExtend",
                        "b2ea15ad45203a355bfe7b2a03b7cab88196b9ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "of_list_3",
            "line_nb": 566,
            "steps": [
                {
                    "command": [
                        "intros s k.",
                        "VernacExtend",
                        "e82ba462062401adc0701ba79b456109e0f1c1ed"
                    ]
                },
                {
                    "command": [
                        "rewrite of_list_1b, elements_o; auto.",
                        "VernacExtend",
                        "94ce6510c1dbc8ec82cda7d6d1e649c9f67c9683"
                    ]
                },
                {
                    "command": [
                        "apply elements_3w.",
                        "VernacExtend",
                        "ac3f391efbdb50c07a779fba491bf1085f07caf1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_spec_right",
            "line_nb": 571,
            "steps": [
                {
                    "command": [
                        "rewrite fold_1.",
                        "VernacExtend",
                        "a0854f3ee658c867d58f94fc1bd8d4dd38a8020f"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply fold_left_rev_right.",
                        "VernacExtend",
                        "ff1a29d94bed1643c688f81a770b1e27fa432f50"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_rec",
            "line_nb": 576,
            "steps": [
                {
                    "command": [
                        "intros A P f i m Hempty Hstep.",
                        "VernacExtend",
                        "f15cc4b23b742ff8b1a6ee568be649a1206c0c36"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_spec_right.",
                        "VernacExtend",
                        "237ed0f86af41177333bcc02f2a001775461cdd3"
                    ]
                },
                {
                    "command": [
                        "set (F:=uncurry f).",
                        "VernacExtend",
                        "a118c0d0ff918aa8ec36e7348d6ad2eb4f11c101"
                    ]
                },
                {
                    "command": [
                        "set (l:=rev (elements m)).",
                        "VernacExtend",
                        "937e270a44b617d3d70c9a9712bcf796b606a3d3"
                    ]
                },
                {
                    "command": [
                        "assert (Hstep' : forall k e a m' m'', InA eqke (k,e) l -> ~In k m' -> Add k e m' m'' -> P m' a -> P m'' (F (k,e) a)).",
                        "VernacExtend",
                        "e30ce4c1a34fa314c6bd9505e531698fe49438db"
                    ]
                },
                {
                    "command": [
                        "intros k e a m' m'' H ? ? ?; eapply Hstep; eauto.",
                        "VernacExtend",
                        "3624bb1e041bf26994cb2969c5d9bfd8954a95df"
                    ]
                },
                {
                    "command": [
                        "revert H; unfold l; rewrite InA_rev, elements_mapsto_iff; auto with *.",
                        "VernacExtend",
                        "b7d3cd6aeedcf50364b9dabb1646747e1cbc7b67"
                    ]
                },
                {
                    "command": [
                        "assert (Hdup : NoDupA eqk l).",
                        "VernacExtend",
                        "8044c8c57b2c26dedb9f1603d9e618c71329a6e9"
                    ]
                },
                {
                    "command": [
                        "unfold l.",
                        "VernacExtend",
                        "da63f36466c42d625dad71fd38245af08b7a4275"
                    ]
                },
                {
                    "command": [
                        "apply NoDupA_rev; try red; unfold eq_key ; eauto with *.",
                        "VernacExtend",
                        "cad4e6d45a0d990eea8d0d50cb4d5008da40cd8c"
                    ]
                },
                {
                    "command": [
                        "apply elements_3w.",
                        "VernacExtend",
                        "ac3f391efbdb50c07a779fba491bf1085f07caf1"
                    ]
                },
                {
                    "command": [
                        "assert (Hsame : forall k, find k m = findA (eqb k) l).",
                        "VernacExtend",
                        "150d93571e9f05af00ea293c830c2f50dedf1902"
                    ]
                },
                {
                    "command": [
                        "intros k.",
                        "VernacExtend",
                        "494800a8d2673abb596b8be5a6bf555ab7d2a2fb"
                    ]
                },
                {
                    "command": [
                        "unfold l.",
                        "VernacExtend",
                        "da63f36466c42d625dad71fd38245af08b7a4275"
                    ]
                },
                {
                    "command": [
                        "rewrite elements_o, findA_rev; auto.",
                        "VernacExtend",
                        "447550fc2622ac2c43301df9d5dc5565d3ee4334"
                    ]
                },
                {
                    "command": [
                        "apply elements_3w.",
                        "VernacExtend",
                        "ac3f391efbdb50c07a779fba491bf1085f07caf1"
                    ]
                },
                {
                    "command": [
                        "clearbody l.",
                        "VernacExtend",
                        "0aa80066b018b6c90bd7a35b8d868fcce6781aeb"
                    ]
                },
                {
                    "command": [
                        "clearbody F.",
                        "VernacExtend",
                        "4e25c8644dbf2130d2473a2f9bdc443d52d69281"
                    ]
                },
                {
                    "command": [
                        "clear Hstep f.",
                        "VernacExtend",
                        "57dde6da92ba65b69dbab47126eab214c9f5445a"
                    ]
                },
                {
                    "command": [
                        "revert m Hsame.",
                        "VernacExtend",
                        "a937979d17437fc08342261821771ade25afedd2"
                    ]
                },
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "intros m Hsame; simpl.",
                        "VernacExtend",
                        "0436dc9bd9857f2e03615017a7dcf2d9a16ece17"
                    ]
                },
                {
                    "command": [
                        "apply Hempty.",
                        "VernacExtend",
                        "0407a2813723da973a822415ab3cef42a5028815"
                    ]
                },
                {
                    "command": [
                        "intros k e.",
                        "VernacExtend",
                        "eca52c2499b4713b03b9acda11b2e5755efc388f"
                    ]
                },
                {
                    "command": [
                        "rewrite find_mapsto_iff, Hsame; simpl; discriminate.",
                        "VernacExtend",
                        "6f0a33e226dbb283d5e8f29f5a04378cd91884c1"
                    ]
                },
                {
                    "command": [
                        "intros m Hsame; destruct a as (k,e); simpl.",
                        "VernacExtend",
                        "fb3c3481ddd0733a9ec6f42f91d46a04d557cc24"
                    ]
                },
                {
                    "command": [
                        "apply Hstep' with (of_list l); auto.",
                        "VernacExtend",
                        "6034d37e2c138291ae843eeb860bfdf21a7591d7"
                    ]
                },
                {
                    "command": [
                        "rewrite InA_cons; left; red; auto.",
                        "VernacExtend",
                        "81a240f2042c2d9c0586e5ce40be81b9220455a3"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hdup.",
                        "VernacExtend",
                        "2d885c9bc1327087bd086d7a5254a4ac92389559"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "destruct H as (e',He').",
                        "VernacExtend",
                        "5c03f6e2cb2e0fe510b17c963cda8d73958b94ff"
                    ]
                },
                {
                    "command": [
                        "apply InA_eqke_eqk with k e'; auto.",
                        "VernacExtend",
                        "f9b7df0eb2cc4d4d24260bc44401d2da4a02e43f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- of_list_1; auto.",
                        "VernacExtend",
                        "5366a940857a7e3bbcfec0ee81715d21009d99be"
                    ]
                },
                {
                    "command": [
                        "intro k'.",
                        "VernacExtend",
                        "ec8de1f26e17fde4c3f3b08d230e8aa36bb81f56"
                    ]
                },
                {
                    "command": [
                        "rewrite Hsame, add_o, of_list_1b.",
                        "VernacExtend",
                        "d9d6db2e69383a318b3504f65e6c58acb5f85886"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold eqb.",
                        "VernacExtend",
                        "f9e717295e72955f079840f1bebf6c7bb720ca43"
                    ]
                },
                {
                    "command": [
                        "do 2 destruct eq_dec as [|?Hnot]; auto; elim Hnot; eauto.",
                        "VernacExtend",
                        "a78913ed52c71d74c6194fb4001e82f3e755f255"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hdup; auto.",
                        "VernacExtend",
                        "d73ae71c08004ffa6f6a3f33b522d603451acd06"
                    ]
                },
                {
                    "command": [
                        "apply IHl.",
                        "VernacExtend",
                        "af412c6009bba78f939aa53ab07dcd1baaf5888b"
                    ]
                },
                {
                    "command": [
                        "intros; eapply Hstep'; eauto.",
                        "VernacExtend",
                        "4bd7cf025b3ca9438856429f93cab4402effc443"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hdup; auto.",
                        "VernacExtend",
                        "d73ae71c08004ffa6f6a3f33b522d603451acd06"
                    ]
                },
                {
                    "command": [
                        "intros; apply of_list_1b.",
                        "VernacExtend",
                        "ac4cdb3c40e7b4b12cfbcaa89e6155daaeefcb8f"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hdup; auto.",
                        "VernacExtend",
                        "d73ae71c08004ffa6f6a3f33b522d603451acd06"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_rec_bis",
            "line_nb": 622,
            "steps": [
                {
                    "command": [
                        "intros A P f i m Pmorphism Pempty Pstep.",
                        "VernacExtend",
                        "d1ec4c0846712f3a03f1d3ac6661cf3db15523c0"
                    ]
                },
                {
                    "command": [
                        "apply fold_rec; intros.",
                        "VernacExtend",
                        "f80b5d85c7849302c3492854d947016a2d74d821"
                    ]
                },
                {
                    "command": [
                        "apply Pmorphism with (empty _); auto.",
                        "VernacExtend",
                        "d5bd31da23e90ebe5f153ee8ee2641487345f0ae"
                    ]
                },
                {
                    "command": [
                        "intro k.",
                        "VernacExtend",
                        "32e738adabd1b2845bb50beed60df9eefe677271"
                    ]
                },
                {
                    "command": [
                        "rewrite empty_o.",
                        "VernacExtend",
                        "8c29fad41930be4cd8288186a4441758bd8446f4"
                    ]
                },
                {
                    "command": [
                        "case_eq (find k m0); auto; intros e'; rewrite <- find_mapsto_iff.",
                        "VernacExtend",
                        "9f9b75f1a729ce8157e53b0f3f41ee6bd713851a"
                    ]
                },
                {
                    "command": [
                        "intro H'; elim (H k e'); auto.",
                        "VernacExtend",
                        "ec63c31b7669a8312485a19bce11c66765085c78"
                    ]
                },
                {
                    "command": [
                        "apply Pmorphism with (add k e m'); try intro; auto.",
                        "VernacExtend",
                        "91917fee506f0faf8fcd2bc038ff47a298ee3dd3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_rec_nodep",
            "line_nb": 632,
            "steps": [
                {
                    "command": [
                        "intros; apply fold_rec_bis with (P:=fun _ => P); auto.",
                        "VernacExtend",
                        "d3d3aac59dca62444ae7da00c2e6b360758791ba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_rec_weak",
            "line_nb": 635,
            "steps": [
                {
                    "command": [
                        "intros; apply fold_rec_bis; auto.",
                        "VernacExtend",
                        "c2ca49d8845f6d6706235fc510161657eabd3dd0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_rel",
            "line_nb": 638,
            "steps": [
                {
                    "command": [
                        "intros A B R f g i j m Rempty Rstep.",
                        "VernacExtend",
                        "17651e660a850a103226c9bd13208f60128d5dc3"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 fold_spec_right.",
                        "VernacExtend",
                        "2ecb802fbe7526806613f689f163282abe266452"
                    ]
                },
                {
                    "command": [
                        "set (l:=rev (elements m)).",
                        "VernacExtend",
                        "937e270a44b617d3d70c9a9712bcf796b606a3d3"
                    ]
                },
                {
                    "command": [
                        "assert (Rstep' : forall k e a b, InA eqke (k,e) l -> R a b -> R (f k e a) (g k e b)) by (intros; apply Rstep; auto; rewrite elements_mapsto_iff, <- InA_rev; auto with *).",
                        "VernacExtend",
                        "f566622ea98fc26b1f72b8bec5e17742bbf27fc2"
                    ]
                },
                {
                    "command": [
                        "clearbody l; clear Rstep m.",
                        "VernacExtend",
                        "3d1889759f4a6a028796544a5dd04f09511f6297"
                    ]
                },
                {
                    "command": [
                        "induction l; simpl; auto.",
                        "VernacExtend",
                        "2300dcaca2cea0b38a7d9c3b8a28bfa9feaddecf"
                    ]
                },
                {
                    "command": [
                        "apply Rstep'; auto.",
                        "VernacExtend",
                        "232b86120da65c97a51711cbeeea1d6945892415"
                    ]
                },
                {
                    "command": [
                        "destruct a; simpl; rewrite InA_cons; left; red; auto.",
                        "VernacExtend",
                        "c86c60a2e55b631f397caab26f46141d881dfca3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_induction",
            "line_nb": 648,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@fold_rec _ (fun s _ => P s) (fun _ _ _ => tt) tt m); eauto.",
                        "VernacExtend",
                        "a758f736a4f85c3b83150c935fda810b8b76c703"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_induction_bis",
            "line_nb": 652,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply (@fold_rec_bis _ (fun s _ => P s) (fun _ _ _ => tt) tt m); eauto.",
                        "VernacExtend",
                        "ab058d6a8999a31109b71878234feb6a2646f354"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_identity",
            "line_nb": 656,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply fold_rec with (P:=fun m acc => Equal acc m); auto with map.",
                        "VernacExtend",
                        "81b2eeff45d20ce2520ba1ce6cd5319c4d38e32b"
                    ]
                },
                {
                    "command": [
                        "intros m' Heq k'.",
                        "VernacExtend",
                        "712ffb9c2a95ab9790596689e7bdb2a158cfd45a"
                    ]
                },
                {
                    "command": [
                        "rewrite empty_o.",
                        "VernacExtend",
                        "8c29fad41930be4cd8288186a4441758bd8446f4"
                    ]
                },
                {
                    "command": [
                        "case_eq (find k' m'); auto; intros e'; rewrite <- find_mapsto_iff.",
                        "VernacExtend",
                        "1520eed1694099314cb15bfd9a1119d83efbe4a6"
                    ]
                },
                {
                    "command": [
                        "intro; elim (Heq k' e'); auto.",
                        "VernacExtend",
                        "680fd9d2edad61279bc6d429ff2035196a8567b8"
                    ]
                },
                {
                    "command": [
                        "intros k e a m' m'' _ _ Hadd Heq k'.",
                        "VernacExtend",
                        "ba01a5a7e7789f4df023ff28a246a1b52580d01e"
                    ]
                },
                {
                    "command": [
                        "red in Heq.",
                        "VernacExtend",
                        "db2173291b8d835ade5f4f8756abb80244ac45c2"
                    ]
                },
                {
                    "command": [
                        "rewrite Hadd, 2 add_o, Heq; auto.",
                        "VernacExtend",
                        "41e454055623a065be2301af6a9a534fbcb264f3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_init",
            "line_nb": 670,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply fold_rel with (R:=eqA); auto.",
                        "VernacExtend",
                        "5f5d80f1fe79935d99266566e19240f0e0fd629c"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply Comp; auto.",
                        "VernacExtend",
                        "6940f5400f8a56a9db9d1cfe44618b4e1d7cefae"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_Empty",
            "line_nb": 676,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply fold_rec_nodep with (P:=fun a => eqA a i).",
                        "VernacExtend",
                        "13a188920354eebe033504e3e4eafbfa7da444d9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "elim (H k e); auto.",
                        "VernacExtend",
                        "ded0ec67414e86bdf708465efedd713e0d5b7c91"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_commutes",
            "line_nb": 685,
            "steps": [
                {
                    "command": [
                        "intros i m k e Hnotin.",
                        "VernacExtend",
                        "f8ae123294cd1ece191c5ff750b9b74e93541e48"
                    ]
                },
                {
                    "command": [
                        "apply fold_rel with (R:= fun a b => eqA a (f k e b)); auto.",
                        "VernacExtend",
                        "71a2cc15ae07423755ba4c86571393585e9a6b2d"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "transitivity (f k0 e0 (f k e b)).",
                        "VernacExtend",
                        "90c380475bfe8b7a6bfe4376e8b1213e91ace30a"
                    ]
                },
                {
                    "command": [
                        "apply Comp; auto.",
                        "VernacExtend",
                        "6940f5400f8a56a9db9d1cfe44618b4e1d7cefae"
                    ]
                },
                {
                    "command": [
                        "apply Tra; auto.",
                        "VernacExtend",
                        "75103a2cb86e58719b17cc2bbbd703cc066ed9bf"
                    ]
                },
                {
                    "command": [
                        "contradict Hnotin; rewrite <- Hnotin; exists e0; auto.",
                        "VernacExtend",
                        "37e7cba6a03b0c292dc5703838022238d034dbd3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_Equal",
            "line_nb": 696,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 fold_spec_right.",
                        "VernacExtend",
                        "2ecb802fbe7526806613f689f163282abe266452"
                    ]
                },
                {
                    "command": [
                        "assert (NoDupA eqk (rev (elements m1))) by (auto with *).",
                        "VernacExtend",
                        "b05bd45d459935c54906a7af9407e16c995b5233"
                    ]
                },
                {
                    "command": [
                        "assert (NoDupA eqk (rev (elements m2))) by (auto with *).",
                        "VernacExtend",
                        "22db01571ec695d1e575707e22a558179284d945"
                    ]
                },
                {
                    "command": [
                        "apply fold_right_equivlistA_restr with (R:=complement eqk)(eqA:=eqke); auto with *.",
                        "VernacExtend",
                        "7391ae7ba27d46d1f222e51ffdff1076a2143913"
                    ]
                },
                {
                    "command": [
                        "intros (k1,e1) (k2,e2) (Hk,He) a1 a2 Ha; simpl in *; apply Comp; auto.",
                        "VernacExtend",
                        "dd99e0fae9696ddb9bbe1b970a5a5d0e5673b9e8"
                    ]
                },
                {
                    "command": [
                        "unfold complement, eq_key, eq_key_elt; repeat red.",
                        "VernacExtend",
                        "ffa596706a663139bdaec658b4772142a54c8f5f"
                    ]
                },
                {
                    "command": [
                        "intuition eauto.",
                        "VernacExtend",
                        "dfea5151303e8e1455eb6e7dac607bb27ed86a6a"
                    ]
                },
                {
                    "command": [
                        "intros (k,e) (k',e'); unfold eq_key, uncurry; simpl; auto.",
                        "VernacExtend",
                        "6bbc1c29875e19bb93bdf66a345c1c0b05ab54c0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- NoDupA_altdef; auto.",
                        "VernacExtend",
                        "9f5b3852910943a5e2a4b6129df6e0a715ac727b"
                    ]
                },
                {
                    "command": [
                        "intros (k,e).",
                        "VernacExtend",
                        "78c692e5531289f1ae688394bcb2d856dec2b557"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 InA_rev, <- 2 elements_mapsto_iff, 2 find_mapsto_iff, H; auto with *.",
                        "VernacExtend",
                        "064fffa199a125843dac6d24b1aba7d2b17e20ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_Equal2",
            "line_nb": 710,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 fold_spec_right.",
                        "VernacExtend",
                        "2ecb802fbe7526806613f689f163282abe266452"
                    ]
                },
                {
                    "command": [
                        "assert (NoDupA eqk (rev (elements m1))) by (auto with * ).",
                        "VernacExtend",
                        "b05bd45d459935c54906a7af9407e16c995b5233"
                    ]
                },
                {
                    "command": [
                        "assert (NoDupA eqk (rev (elements m2))) by (auto with * ).",
                        "VernacExtend",
                        "22db01571ec695d1e575707e22a558179284d945"
                    ]
                },
                {
                    "command": [
                        "apply fold_right_equivlistA_restr2 with (R:=complement eqk)(eqA:=eqke) ; auto with *.",
                        "VernacExtend",
                        "cb517c8ac4af86bb499dc2fcc798b3880770a761"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (k1,e1) (k2,e2) (Hk,He) a1 a2 Ha; simpl in *; apply Comp; auto.",
                        "VernacExtend",
                        "dd99e0fae9696ddb9bbe1b970a5a5d0e5673b9e8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold complement, eq_key, eq_key_elt; repeat red.",
                        "VernacExtend",
                        "ffa596706a663139bdaec658b4772142a54c8f5f"
                    ]
                },
                {
                    "command": [
                        "intuition eauto.",
                        "VernacExtend",
                        "dfea5151303e8e1455eb6e7dac607bb27ed86a6a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (k,e) (k',e') z z' h h'; unfold eq_key, uncurry;simpl; auto.",
                        "VernacExtend",
                        "7459c79b862bd39bc5c15a5a017784ed775f8e85"
                    ]
                },
                {
                    "command": [
                        "rewrite h'.",
                        "VernacExtend",
                        "d36e7ee91c331d5a27bef7caeb425b06361bcc3f"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite <- NoDupA_altdef; auto.",
                        "VernacExtend",
                        "9f5b3852910943a5e2a4b6129df6e0a715ac727b"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros (k,e).",
                        "VernacExtend",
                        "78c692e5531289f1ae688394bcb2d856dec2b557"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 InA_rev, <- 2 elements_mapsto_iff, 2 find_mapsto_iff, H; auto with *.",
                        "VernacExtend",
                        "064fffa199a125843dac6d24b1aba7d2b17e20ac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_Add",
            "line_nb": 731,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 fold_spec_right.",
                        "VernacExtend",
                        "2ecb802fbe7526806613f689f163282abe266452"
                    ]
                },
                {
                    "command": [
                        "set (f':=uncurry f).",
                        "VernacExtend",
                        "fd59eaa9f412cb9d7582b1cdaf165ca95dd6ff23"
                    ]
                },
                {
                    "command": [
                        "change (f k e (fold_right f' i (rev (elements m1)))) with (f' (k,e) (fold_right f' i (rev (elements m1)))).",
                        "VernacExtend",
                        "f10795b5202ff8dc29be74c6a8b6b5ddab45cb63"
                    ]
                },
                {
                    "command": [
                        "assert (NoDupA eqk (rev (elements m1))) by (auto with *).",
                        "VernacExtend",
                        "b05bd45d459935c54906a7af9407e16c995b5233"
                    ]
                },
                {
                    "command": [
                        "assert (NoDupA eqk (rev (elements m2))) by (auto with *).",
                        "VernacExtend",
                        "22db01571ec695d1e575707e22a558179284d945"
                    ]
                },
                {
                    "command": [
                        "apply fold_right_add_restr with (R:=complement eqk)(eqA:=eqke)(eqB:=eqA); auto with *.",
                        "VernacExtend",
                        "04554e13408935c2792425faef184c15ac6b23ea"
                    ]
                },
                {
                    "command": [
                        "intros (k1,e1) (k2,e2) (Hk,He) a a' Ha; unfold f'; simpl in *.",
                        "VernacExtend",
                        "92bae5c008ef9db67223119959d7f06a4213187b"
                    ]
                },
                {
                    "command": [
                        "apply Comp; auto.",
                        "VernacExtend",
                        "6940f5400f8a56a9db9d1cfe44618b4e1d7cefae"
                    ]
                },
                {
                    "command": [
                        "unfold complement, eq_key_elt, eq_key; repeat red; intuition eauto.",
                        "VernacExtend",
                        "cf1240f62389765d1f20b09d9615337d9121b1c4"
                    ]
                },
                {
                    "command": [
                        "unfold f'; intros (k1,e1) (k2,e2); unfold eq_key, uncurry; simpl; auto.",
                        "VernacExtend",
                        "aaad1fe68bbaf7e9bf03911f23faf8661ab04ea4"
                    ]
                },
                {
                    "command": [
                        "rewrite <- NoDupA_altdef; auto.",
                        "VernacExtend",
                        "9f5b3852910943a5e2a4b6129df6e0a715ac727b"
                    ]
                },
                {
                    "command": [
                        "rewrite InA_rev, <- elements_mapsto_iff by (auto with *).",
                        "VernacExtend",
                        "eff1937a15808b2c0620f8578a3475242c9559e2"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "intros (a,b).",
                        "VernacExtend",
                        "caad4e03de819e1c2b04ea55eca4f01229069a63"
                    ]
                },
                {
                    "command": [
                        "rewrite InA_cons, 2 InA_rev, <- 2 elements_mapsto_iff, 2 find_mapsto_iff by (auto with *).",
                        "VernacExtend",
                        "9d7edce1065f03c4e2c3a98c3fb120262ec261e8"
                    ]
                },
                {
                    "command": [
                        "unfold eq_key_elt; simpl.",
                        "VernacExtend",
                        "bf44a4c26398e588d979c827f9b6e13759ab9f76"
                    ]
                },
                {
                    "command": [
                        "rewrite H0.",
                        "VernacExtend",
                        "1a54b13ac1654793174947eafd5c41a3f024eb49"
                    ]
                },
                {
                    "command": [
                        "rewrite add_o.",
                        "VernacExtend",
                        "121b6decf20bc36a3bd761621103188dd25d483a"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec k a) as [EQ|NEQ]; split; auto.",
                        "VernacExtend",
                        "3235af61329629aa91d5388b0fa98336709f29f0"
                    ]
                },
                {
                    "command": [
                        "intros EQ'; inversion EQ'; auto.",
                        "VernacExtend",
                        "a8d96e697cc36b087b6829df0e24e319d83ba34e"
                    ]
                },
                {
                    "command": [
                        "intuition; subst; auto.",
                        "VernacExtend",
                        "a413b1004b36e70518df6bcd5c477cb046def878"
                    ]
                },
                {
                    "command": [
                        "elim H.",
                        "VernacExtend",
                        "853aa440c3a3810be05f0f87d0e688c05b92253d"
                    ]
                },
                {
                    "command": [
                        "exists b; rewrite EQ; auto with map.",
                        "VernacExtend",
                        "dfe1b7dfdfa9ec5241a935f9bf1c44be6459e366"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "elim NEQ; auto.",
                        "VernacExtend",
                        "eca00ca00059c28e759335205ca57430f41ca80e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_add",
            "line_nb": 759,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply fold_Add; try red; auto.",
                        "VernacExtend",
                        "c4d1a529e09cfe8ba72019d057b0fc1f9a94b06c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_fold",
            "line_nb": 764,
            "steps": [
                {
                    "command": [
                        "intros; rewrite cardinal_1, fold_1.",
                        "VernacExtend",
                        "4f380911a415e672529d7714ffbee5f4d83ef808"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply fold_left_length; auto.",
                        "VernacExtend",
                        "327b2d260806c39393dea2a2b39a454cdfffb98e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_Empty",
            "line_nb": 768,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite cardinal_1, elements_Empty.",
                        "VernacExtend",
                        "4843a3a8cefd9a76b0a59c80566ad96969a7957e"
                    ]
                },
                {
                    "command": [
                        "destruct (elements m); intuition; discriminate.",
                        "VernacExtend",
                        "e4c02369cae52a8f6e18e022042ce331234eb899"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equal_cardinal",
            "line_nb": 773,
            "steps": [
                {
                    "command": [
                        "intros; do 2 rewrite cardinal_fold.",
                        "VernacExtend",
                        "07a1b2e19c7402f6ab66b64ae943a06f9e7bbfb2"
                    ]
                },
                {
                    "command": [
                        "apply fold_Equal with (eqA:=eq); compute; auto.",
                        "VernacExtend",
                        "b118d86dc7293f1fa9e530d527015e8780ff40e2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_1",
            "line_nb": 777,
            "steps": [
                {
                    "command": [
                        "intros; rewrite <- cardinal_Empty; auto.",
                        "VernacExtend",
                        "46a17299e46b7c046bc097def92c7e0a64efad8e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_2",
            "line_nb": 780,
            "steps": [
                {
                    "command": [
                        "intros; do 2 rewrite cardinal_fold.",
                        "VernacExtend",
                        "07a1b2e19c7402f6ab66b64ae943a06f9e7bbfb2"
                    ]
                },
                {
                    "command": [
                        "change S with ((fun _ _ => S) x e).",
                        "VernacExtend",
                        "f05a4351ca5550f1c201c73def69160e6ee2c41c"
                    ]
                },
                {
                    "command": [
                        "apply fold_Add with (eqA:=eq); compute; auto.",
                        "VernacExtend",
                        "b8a9f6f889f64aa002e4337df3689468bc14cc59"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_inv_1",
            "line_nb": 785,
            "steps": [
                {
                    "command": [
                        "intros; rewrite cardinal_Empty; auto.",
                        "VernacExtend",
                        "c37e7098c5be23d3514442764278093339d23ee0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_inv_2",
            "line_nb": 789,
            "steps": [
                {
                    "command": [
                        "intros; rewrite M.cardinal_1 in *.",
                        "VernacExtend",
                        "a0e66a2c67cb846ebb71360a7a9c604457aa95f4"
                    ]
                },
                {
                    "command": [
                        "generalize (elements_mapsto_iff m).",
                        "VernacExtend",
                        "27ab3e78ba3a81c22774d30e531e0f91589a5109"
                    ]
                },
                {
                    "command": [
                        "destruct (elements m); try discriminate.",
                        "VernacExtend",
                        "e8eb7db4fe6f0b6b673a2cdae08c79ebf782119d"
                    ]
                },
                {
                    "command": [
                        "exists p; auto.",
                        "VernacExtend",
                        "ce43f93b5525ba4b412c7576bb2db79216326ab5"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; destruct p; simpl; auto.",
                        "VernacExtend",
                        "cb57bf3d1195d18107556caece5e7daa8cff4897"
                    ]
                },
                {
                    "command": [
                        "constructor; red; auto.",
                        "VernacExtend",
                        "1fef2bc186d591d5b62b7b66aa42c6c0bf079aeb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_inv_2b",
            "line_nb": 797,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (@cardinal_inv_2 m); destruct cardinal.",
                        "VernacExtend",
                        "490d8a48974274427f6bbe2a71dfdc1fd27bc55e"
                    ]
                },
                {
                    "command": [
                        "elim H;auto.",
                        "VernacExtend",
                        "93275a139e0a54467a849c9ab468d4fd7beb5813"
                    ]
                },
                {
                    "command": [
                        "eauto.",
                        "VernacExtend",
                        "d5f3a05ca887c29bb0b422fc64ae2775fea3935e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "filter_iff",
            "line_nb": 815,
            "steps": [
                {
                    "command": [
                        "unfold filter.",
                        "VernacExtend",
                        "2a9754afcc2211b10451dc16a72ceb8f6c1884dc"
                    ]
                },
                {
                    "command": [
                        "set (f':=fun k e m => if f k e then add k e m else m).",
                        "VernacExtend",
                        "0c4913abbc9724cca57aafc3442d16dc9bfb4bb6"
                    ]
                },
                {
                    "command": [
                        "intro m.",
                        "VernacExtend",
                        "4b82221b29d931d49eaab61535235762be4a3968"
                    ]
                },
                {
                    "command": [
                        "pattern m, (fold f' m (empty _)).",
                        "VernacExtend",
                        "5fedd972f738cc264836c6e83db9588b8029ddb6"
                    ]
                },
                {
                    "command": [
                        "apply fold_rec.",
                        "VernacExtend",
                        "8446cba6cde578f8cb501f536270712789b8c361"
                    ]
                },
                {
                    "command": [
                        "intros m' Hm' k e.",
                        "VernacExtend",
                        "77ef110e77eac5d1df79aa2d6b153d6792699d61"
                    ]
                },
                {
                    "command": [
                        "rewrite empty_mapsto_iff.",
                        "VernacExtend",
                        "3a4b2bc4137f0357570d0347b3817d9170c8e972"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "elim (Hm' k e); auto.",
                        "VernacExtend",
                        "351d5b202eea4d1a02dd9c75721fad3e30fdb630"
                    ]
                },
                {
                    "command": [
                        "intros k e acc m1 m2 Hke Hn Hadd IH k' e'.",
                        "VernacExtend",
                        "9658a3d56f58d70391623f7365f1cdbc2a3c3988"
                    ]
                },
                {
                    "command": [
                        "change (Equal m2 (add k e m1)) in Hadd; rewrite Hadd.",
                        "VernacExtend",
                        "8c1783524d3656f21d67bbad6ee6ac618cfa4895"
                    ]
                },
                {
                    "command": [
                        "unfold f'; simpl.",
                        "VernacExtend",
                        "41170b69a136eb646686878305bfe4e5cee5740c"
                    ]
                },
                {
                    "command": [
                        "case_eq (f k e); intros Hfke; simpl; rewrite !add_mapsto_iff, IH; clear IH; intuition.",
                        "VernacExtend",
                        "edba53722b7462ea4d5bcc514bfefb9511858b59"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hfke; apply Hf; auto.",
                        "VernacExtend",
                        "1a53672f637dac85e2a68fb45f33ba7dff549a80"
                    ]
                },
                {
                    "command": [
                        "destruct (eq_dec k k') as [Hk|Hk]; [left|right]; auto.",
                        "VernacExtend",
                        "60ae3abbb060a4e56885f995123c272904b589b3"
                    ]
                },
                {
                    "command": [
                        "elim Hn; exists e'; rewrite Hk; auto.",
                        "VernacExtend",
                        "0b9fb1269b73b955997f195e5fe5c1059782d2d1"
                    ]
                },
                {
                    "command": [
                        "assert (f k e = f k' e') by (apply Hf; auto).",
                        "VernacExtend",
                        "7ac234b2a77f0996fbe4a4758f1ef7ddfcc049c4"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "for_all_iff",
            "line_nb": 835,
            "steps": [
                {
                    "command": [
                        "unfold for_all.",
                        "VernacExtend",
                        "0bb39ab1b91f3808b48f6bca5ad1d718c7138eb1"
                    ]
                },
                {
                    "command": [
                        "set (f':=fun k e b => if f k e then b else false).",
                        "VernacExtend",
                        "6e4d3806fb683d85a4420f2d6e3ff9a3201f8446"
                    ]
                },
                {
                    "command": [
                        "intro m.",
                        "VernacExtend",
                        "4b82221b29d931d49eaab61535235762be4a3968"
                    ]
                },
                {
                    "command": [
                        "pattern m, (fold f' m true).",
                        "VernacExtend",
                        "f7bebb82e46adab1453c805ce45fe486e4588dda"
                    ]
                },
                {
                    "command": [
                        "apply fold_rec.",
                        "VernacExtend",
                        "8446cba6cde578f8cb501f536270712789b8c361"
                    ]
                },
                {
                    "command": [
                        "intros m' Hm'.",
                        "VernacExtend",
                        "5aaf3d6f2cb1914a14393b69b15d7cc11d264d1c"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "intros _ k e Hke.",
                        "VernacExtend",
                        "60c7dad7a87fe41e72882c4c2e42e517b47c43d8"
                    ]
                },
                {
                    "command": [
                        "elim (Hm' k e); auto.",
                        "VernacExtend",
                        "351d5b202eea4d1a02dd9c75721fad3e30fdb630"
                    ]
                },
                {
                    "command": [
                        "intros k e b m1 m2 _ Hn Hadd IH.",
                        "VernacExtend",
                        "9b3dee61a04d01a1e8755e2b5c2cc042cb9ae898"
                    ]
                },
                {
                    "command": [
                        "clear m.",
                        "VernacExtend",
                        "a80ca0ce9b47923ab209b2552883e09a4a3f5ac7"
                    ]
                },
                {
                    "command": [
                        "change (Equal m2 (add k e m1)) in Hadd.",
                        "VernacExtend",
                        "50a6338fc9831572d2eea77685abcb8c27d832d7"
                    ]
                },
                {
                    "command": [
                        "unfold f'; simpl.",
                        "VernacExtend",
                        "41170b69a136eb646686878305bfe4e5cee5740c"
                    ]
                },
                {
                    "command": [
                        "case_eq (f k e); intros Hfke.",
                        "VernacExtend",
                        "b97aaca2f780436fa240ea470c1d225744331be6"
                    ]
                },
                {
                    "command": [
                        "rewrite IH.",
                        "VernacExtend",
                        "dbf4f765dab656705bc8df8600fa3b3017a20858"
                    ]
                },
                {
                    "command": [
                        "clear IH.",
                        "VernacExtend",
                        "daecf0ea8665f0f6fd551644d47b5ce1d93aef1e"
                    ]
                },
                {
                    "command": [
                        "split; intros Hmapsto k' e' Hke'.",
                        "VernacExtend",
                        "7bd0b7aa8928aebf308504436d786cf4bb39623a"
                    ]
                },
                {
                    "command": [
                        "rewrite Hadd, add_mapsto_iff in Hke'.",
                        "VernacExtend",
                        "5bc23de5e6b8b6ed51cf1720c661671b75de5c0c"
                    ]
                },
                {
                    "command": [
                        "destruct Hke' as [(?,?)|(?,?)]; auto.",
                        "VernacExtend",
                        "b559983583475096d7863467aa1f5ba1eb65ce59"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hfke; apply Hf; auto.",
                        "VernacExtend",
                        "1a53672f637dac85e2a68fb45f33ba7dff549a80"
                    ]
                },
                {
                    "command": [
                        "apply Hmapsto.",
                        "VernacExtend",
                        "28bc3a09a1be2cc8adb9e0e45b7ed165afce8419"
                    ]
                },
                {
                    "command": [
                        "rewrite Hadd, add_mapsto_iff; right; split; auto.",
                        "VernacExtend",
                        "ea126711961030a5cf6026e53dedd80b1fb5bb0a"
                    ]
                },
                {
                    "command": [
                        "contradict Hn; exists e'; rewrite Hn; auto.",
                        "VernacExtend",
                        "8ff309a34c6a170f3cfbc7cb53899b80d50babf4"
                    ]
                },
                {
                    "command": [
                        "split; try discriminate.",
                        "VernacExtend",
                        "b9a0e4944f458b52a9e45f100ef8b1a7a5b136f6"
                    ]
                },
                {
                    "command": [
                        "intros Hmapsto.",
                        "VernacExtend",
                        "b6c91369624c5ba297ae85afaf3607dfbd2cedaa"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hfke.",
                        "VernacExtend",
                        "c154eb750af0b80245bf28eacdbb811071ef98c7"
                    ]
                },
                {
                    "command": [
                        "apply Hmapsto.",
                        "VernacExtend",
                        "28bc3a09a1be2cc8adb9e0e45b7ed165afce8419"
                    ]
                },
                {
                    "command": [
                        "rewrite Hadd, add_mapsto_iff; auto.",
                        "VernacExtend",
                        "ecd04b7c82b0643be9c88629d34bf5761f18de1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exists_iff",
            "line_nb": 865,
            "steps": [
                {
                    "command": [
                        "unfold exists_.",
                        "VernacExtend",
                        "d2f748821143b5dc214f1dee23c213aab50935e0"
                    ]
                },
                {
                    "command": [
                        "set (f':=fun k e b => if f k e then true else b).",
                        "VernacExtend",
                        "ac2901249132340fd5394820143bfd19b9956af1"
                    ]
                },
                {
                    "command": [
                        "intro m.",
                        "VernacExtend",
                        "4b82221b29d931d49eaab61535235762be4a3968"
                    ]
                },
                {
                    "command": [
                        "pattern m, (fold f' m false).",
                        "VernacExtend",
                        "e91ad2f21ea669f2c3882fda03d5c4b40fb22512"
                    ]
                },
                {
                    "command": [
                        "apply fold_rec.",
                        "VernacExtend",
                        "8446cba6cde578f8cb501f536270712789b8c361"
                    ]
                },
                {
                    "command": [
                        "intros m' Hm'.",
                        "VernacExtend",
                        "5aaf3d6f2cb1914a14393b69b15d7cc11d264d1c"
                    ]
                },
                {
                    "command": [
                        "split; try discriminate.",
                        "VernacExtend",
                        "b9a0e4944f458b52a9e45f100ef8b1a7a5b136f6"
                    ]
                },
                {
                    "command": [
                        "intros ((k,e),(Hke,_)); simpl in *.",
                        "VernacExtend",
                        "2cf50cc7c78dcc25a979d7d9118070d503936558"
                    ]
                },
                {
                    "command": [
                        "elim (Hm' k e); auto.",
                        "VernacExtend",
                        "351d5b202eea4d1a02dd9c75721fad3e30fdb630"
                    ]
                },
                {
                    "command": [
                        "intros k e b m1 m2 _ Hn Hadd IH.",
                        "VernacExtend",
                        "9b3dee61a04d01a1e8755e2b5c2cc042cb9ae898"
                    ]
                },
                {
                    "command": [
                        "clear m.",
                        "VernacExtend",
                        "a80ca0ce9b47923ab209b2552883e09a4a3f5ac7"
                    ]
                },
                {
                    "command": [
                        "change (Equal m2 (add k e m1)) in Hadd.",
                        "VernacExtend",
                        "50a6338fc9831572d2eea77685abcb8c27d832d7"
                    ]
                },
                {
                    "command": [
                        "unfold f'; simpl.",
                        "VernacExtend",
                        "41170b69a136eb646686878305bfe4e5cee5740c"
                    ]
                },
                {
                    "command": [
                        "case_eq (f k e); intros Hfke.",
                        "VernacExtend",
                        "b97aaca2f780436fa240ea470c1d225744331be6"
                    ]
                },
                {
                    "command": [
                        "split; [intros _|auto].",
                        "VernacExtend",
                        "12502858b1511a07e4afdb9bfe52005861c28113"
                    ]
                },
                {
                    "command": [
                        "exists (k,e); simpl; split; auto.",
                        "VernacExtend",
                        "8daf71a9b91da6e544b6241a211c99b8bfe950ee"
                    ]
                },
                {
                    "command": [
                        "rewrite Hadd, add_mapsto_iff; auto.",
                        "VernacExtend",
                        "ecd04b7c82b0643be9c88629d34bf5761f18de1e"
                    ]
                },
                {
                    "command": [
                        "rewrite IH.",
                        "VernacExtend",
                        "dbf4f765dab656705bc8df8600fa3b3017a20858"
                    ]
                },
                {
                    "command": [
                        "clear IH.",
                        "VernacExtend",
                        "daecf0ea8665f0f6fd551644d47b5ce1d93aef1e"
                    ]
                },
                {
                    "command": [
                        "split; intros ((k',e'),(Hke1,Hke2)); simpl in *.",
                        "VernacExtend",
                        "0b387d42483590283c06b132483d5564f88af450"
                    ]
                },
                {
                    "command": [
                        "exists (k',e'); simpl; split; auto.",
                        "VernacExtend",
                        "619ea602d9475b1eed07dd1d2452c8769ded9729"
                    ]
                },
                {
                    "command": [
                        "rewrite Hadd, add_mapsto_iff; right; split; auto.",
                        "VernacExtend",
                        "ea126711961030a5cf6026e53dedd80b1fb5bb0a"
                    ]
                },
                {
                    "command": [
                        "contradict Hn.",
                        "VernacExtend",
                        "6a108a37143e2247b77d263fb72dc84667b1f529"
                    ]
                },
                {
                    "command": [
                        "exists e'; rewrite Hn; auto.",
                        "VernacExtend",
                        "ee16b1d330affc069ad902b98a760fd7d86a16d2"
                    ]
                },
                {
                    "command": [
                        "rewrite Hadd, add_mapsto_iff in Hke1.",
                        "VernacExtend",
                        "39a6fadcdeaefd94237c386e8eb62f2a09f792b1"
                    ]
                },
                {
                    "command": [
                        "destruct Hke1 as [(?,?)|(?,?)].",
                        "VernacExtend",
                        "7b6f503ed5abeb7783efeefe7adaccaa1c832d57"
                    ]
                },
                {
                    "command": [
                        "assert (f k' e' = f k e) by (apply Hf; auto).",
                        "VernacExtend",
                        "2bd5d93ba42b286bf41f13502dcb3f03cb2acf26"
                    ]
                },
                {
                    "command": [
                        "congruence.",
                        "VernacExtend",
                        "d8c818f6cffeaee6a722a71acc77f2d6e5199eb9"
                    ]
                },
                {
                    "command": [
                        "exists (k',e'); auto.",
                        "VernacExtend",
                        "dd9c778700b3a386f768942dac1241986fc85713"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Disjoint_alt",
            "line_nb": 897,
            "steps": [
                {
                    "command": [
                        "unfold Disjoint; split.",
                        "VernacExtend",
                        "f151abf924f02188b25516517d598f51910948f1"
                    ]
                },
                {
                    "command": [
                        "intros H k v v' H1 H2.",
                        "VernacExtend",
                        "a42fa34a5a6ba248ddf96cd956f9acf502a558a7"
                    ]
                },
                {
                    "command": [
                        "apply H with k; split.",
                        "VernacExtend",
                        "ceb06845e2bd3a4c2c3037e4c88df7c94d3583ef"
                    ]
                },
                {
                    "command": [
                        "exists v; trivial.",
                        "VernacExtend",
                        "b3b4a9c5df8441357b1332b74fcd5cc720c67ccc"
                    ]
                },
                {
                    "command": [
                        "exists v'; trivial.",
                        "VernacExtend",
                        "ca114480d36a87c839bb07c52c07771ba67e111f"
                    ]
                },
                {
                    "command": [
                        "intros H k ((v,Hv),(v',Hv')).",
                        "VernacExtend",
                        "dfce7bab3b5e1e3576d1748db5738cfaf4227dee"
                    ]
                },
                {
                    "command": [
                        "eapply H; eauto.",
                        "VernacExtend",
                        "d625be3dbb1364dd2bd116c00aefec9fb61c11c0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_iff_1",
            "line_nb": 909,
            "steps": [
                {
                    "command": [
                        "unfold partition; simpl; intros.",
                        "VernacExtend",
                        "bfb5cc161ee21364cb41f4d7ee667f2eb15ea61a"
                    ]
                },
                {
                    "command": [
                        "subst m1.",
                        "VernacExtend",
                        "734c96307583a0cb5343c3cdc533179c2f2b720e"
                    ]
                },
                {
                    "command": [
                        "apply filter_iff; auto.",
                        "VernacExtend",
                        "d2667ace7afa123841fa2c7d116d8111012a1788"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_iff_2",
            "line_nb": 914,
            "steps": [
                {
                    "command": [
                        "unfold partition; simpl; intros.",
                        "VernacExtend",
                        "bfb5cc161ee21364cb41f4d7ee667f2eb15ea61a"
                    ]
                },
                {
                    "command": [
                        "subst m2.",
                        "VernacExtend",
                        "89272534d527cbd91f0e02df88c6c6db98e2b8eb"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_iff.",
                        "VernacExtend",
                        "bd367416eeb56baaf950c500deb6f6c288a571b5"
                    ]
                },
                {
                    "command": [
                        "split; intros (H,H'); split; auto.",
                        "VernacExtend",
                        "23024d38389ad303b3ea54ef97a9828d7511871c"
                    ]
                },
                {
                    "command": [
                        "destruct (f k e); simpl in *; auto.",
                        "VernacExtend",
                        "e05cc8e7a16a09ad89e32736c51787b5f14ef631"
                    ]
                },
                {
                    "command": [
                        "rewrite H'; auto.",
                        "VernacExtend",
                        "0481628cb42a32c108ba3d93a9fcf120cdc2ce19"
                    ]
                },
                {
                    "command": [
                        "repeat red; intros.",
                        "VernacExtend",
                        "3b23460c57f21b9e3c22bb0a3b36545050809490"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "apply Hf; auto.",
                        "VernacExtend",
                        "0cf90a65fdeec89bb08869eb2f84f0408a558be0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "partition_Partition",
            "line_nb": 925,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "rewrite Disjoint_alt.",
                        "VernacExtend",
                        "04fc22202d8e478124051947db78975371663311"
                    ]
                },
                {
                    "command": [
                        "intros k e e'.",
                        "VernacExtend",
                        "e35d96ebd50dbca120bf826a989d05d3242a2080"
                    ]
                },
                {
                    "command": [
                        "rewrite (@partition_iff_1 m m1), (@partition_iff_2 m m2) by (rewrite H; auto).",
                        "VernacExtend",
                        "9f261cb177b832b8d14f3feba71c4a4887027eb5"
                    ]
                },
                {
                    "command": [
                        "intros (U,V) (W,Z).",
                        "VernacExtend",
                        "6a7d517b26e846ea47062105f4195ed5f892554a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (MapsTo_fun U W) in Z; congruence.",
                        "VernacExtend",
                        "449ba56ff3f5f35b7d23e3a7685e4068a444f46b"
                    ]
                },
                {
                    "command": [
                        "intros k e.",
                        "VernacExtend",
                        "eca52c2499b4713b03b9acda11b2e5755efc388f"
                    ]
                },
                {
                    "command": [
                        "rewrite (@partition_iff_1 m m1), (@partition_iff_2 m m2) by (rewrite H; auto).",
                        "VernacExtend",
                        "9f261cb177b832b8d14f3feba71c4a4887027eb5"
                    ]
                },
                {
                    "command": [
                        "destruct (f k e); intuition.",
                        "VernacExtend",
                        "3f8223c5d614e7baeb0de211701765a85ba0e345"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Partition_In",
            "line_nb": 938,
            "steps": [
                {
                    "command": [
                        "intros m m1 m2 k Hm Hk.",
                        "VernacExtend",
                        "45ac44a36476cc965e369d251b5f274344b3a1ea"
                    ]
                },
                {
                    "command": [
                        "destruct (In_dec m1 k) as [H|H]; [left|right]; auto.",
                        "VernacExtend",
                        "cf2eb3335337aa334f43b294dbfeae9f2d3ef4bb"
                    ]
                },
                {
                    "command": [
                        "destruct Hm as (Hm,Hm').",
                        "VernacExtend",
                        "e6611a6a25925b2dc734ddbb49deb0f5767bd686"
                    ]
                },
                {
                    "command": [
                        "destruct Hk as (e,He); rewrite Hm' in He; destruct He.",
                        "VernacExtend",
                        "9e7cbf33d350e11dbb59649541177a0cb1fd2c3d"
                    ]
                },
                {
                    "command": [
                        "elim H; exists e; auto.",
                        "VernacExtend",
                        "d5c10bbde802cf3c87773babc6d640993c102dad"
                    ]
                },
                {
                    "command": [
                        "exists e; auto.",
                        "VernacExtend",
                        "5789629a110c642815687c3512a8c438259c58a1"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "Disjoint_sym",
            "line_nb": 946,
            "steps": [
                {
                    "command": [
                        "intros m1 m2 H k (H1,H2).",
                        "VernacExtend",
                        "bb568be0da17f9b3aba75c4a407cd14520f44d07"
                    ]
                },
                {
                    "command": [
                        "elim (H k); auto.",
                        "VernacExtend",
                        "8d5dea47ed923d3713c0cbb1eb5ae53bcd18b9cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Partition_sym",
            "line_nb": 950,
            "steps": [
                {
                    "command": [
                        "intros m m1 m2 (H,H'); split.",
                        "VernacExtend",
                        "d19f0899dd9913fbf3055bc17e98848a4485c4b1"
                    ]
                },
                {
                    "command": [
                        "apply Disjoint_sym; auto.",
                        "VernacExtend",
                        "2fcbd65d5de5016545a7c4b506990b9740fe4114"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite H'; intuition.",
                        "VernacExtend",
                        "464b7faedeb6b7635a574109674c322ea006cd3d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Partition_Empty",
            "line_nb": 955,
            "steps": [
                {
                    "command": [
                        "intros m m1 m2 (Hdisj,Heq).",
                        "VernacExtend",
                        "20ac802f3cf8cc8ba1de0c52569c6de3cb74b6de"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intro He.",
                        "VernacExtend",
                        "63d92d034793f255f9fd90d0115a84a7a7c9fa1f"
                    ]
                },
                {
                    "command": [
                        "split; intros k e Hke; elim (He k e); rewrite Heq; auto.",
                        "VernacExtend",
                        "d449e8a88aa020c014a9121140d2f4ab93c5fc13"
                    ]
                },
                {
                    "command": [
                        "intros (He1,He2) k e Hke.",
                        "VernacExtend",
                        "573255917d4847ccbd7aaac049003bc83f63c6d7"
                    ]
                },
                {
                    "command": [
                        "rewrite Heq in Hke.",
                        "VernacExtend",
                        "630ddd3651772c0d835323bcdb8c5da2d706dac5"
                    ]
                },
                {
                    "command": [
                        "destruct Hke.",
                        "VernacExtend",
                        "9595aaa7dc7e487ad151ef7b80630facf7100488"
                    ]
                },
                {
                    "command": [
                        "elim (He1 k e); auto.",
                        "VernacExtend",
                        "548453ac44f32d9068e938da3b8ff2d11a2c8d1f"
                    ]
                },
                {
                    "command": [
                        "elim (He2 k e); auto.",
                        "VernacExtend",
                        "fe6f79bda338def70bfd1db86a6cf96db6f1007e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Partition_Add",
            "line_nb": 966,
            "steps": [
                {
                    "command": [
                        "unfold Partition.",
                        "VernacExtend",
                        "357bd4383d649e7941f1061bb7d58762e26298de"
                    ]
                },
                {
                    "command": [
                        "intros m m' x e Hn Hadd m1 m2 (Hdisj,Hor).",
                        "VernacExtend",
                        "93ba065875ac69a9cc131aa36b461d3a3a9a18c7"
                    ]
                },
                {
                    "command": [
                        "assert (Heq : Equal m (remove x m')).",
                        "VernacExtend",
                        "b52966d91fb761b4f4dc52af72649eb4870ca320"
                    ]
                },
                {
                    "command": [
                        "change (Equal m' (add x e m)) in Hadd.",
                        "VernacExtend",
                        "09c9ed0b1f0013c40dbc3a2cc9ed72e1e6df828d"
                    ]
                },
                {
                    "command": [
                        "rewrite Hadd.",
                        "VernacExtend",
                        "ef9251ea57953b6e6ee5f7ca2274ced636946664"
                    ]
                },
                {
                    "command": [
                        "intro k.",
                        "VernacExtend",
                        "32e738adabd1b2845bb50beed60df9eefe677271"
                    ]
                },
                {
                    "command": [
                        "rewrite remove_o, add_o.",
                        "VernacExtend",
                        "4c954ba464fcb5294e7ec8ae9cefc414f0bfa126"
                    ]
                },
                {
                    "command": [
                        "destruct eq_dec as [He|Hne]; auto.",
                        "VernacExtend",
                        "f680c1e8f8b4c5dc6afa2104c58a0b2eeea5e0b9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- He, <- not_find_in_iff; auto.",
                        "VernacExtend",
                        "c6e9fd4b2d3be6f2c25b6c9bb1bbb9f073706e63"
                    ]
                },
                {
                    "command": [
                        "assert (H : MapsTo x e m').",
                        "VernacExtend",
                        "fc9581d6933b79c70880e27076aad7d5dd47cfd8"
                    ]
                },
                {
                    "command": [
                        "change (Equal m' (add x e m)) in Hadd; rewrite Hadd.",
                        "VernacExtend",
                        "9d51d342eaffacf0575ab413ef328a757fc77b14"
                    ]
                },
                {
                    "command": [
                        "apply add_1; auto.",
                        "VernacExtend",
                        "5b033b822b1e698507f2fd2dd2418d0f846a350f"
                    ]
                },
                {
                    "command": [
                        "rewrite Hor in H; destruct H.",
                        "VernacExtend",
                        "a06b17422c3bf27ef9b11ec4e2ca1d6cf01fe339"
                    ]
                },
                {
                    "command": [
                        "exists (remove x m1); left.",
                        "VernacExtend",
                        "7e5f8b5e27dc110bcd67b959968b31391f661f0a"
                    ]
                },
                {
                    "command": [
                        "split; [|split].",
                        "VernacExtend",
                        "d2f933e98f73ab8a5c6be2969adff348cdfe06d5"
                    ]
                },
                {
                    "command": [
                        "change (Equal m1 (add x e (remove x m1))).",
                        "VernacExtend",
                        "e4894730e7f8489c08828a6a3473f6abaf5dc752"
                    ]
                },
                {
                    "command": [
                        "intro k.",
                        "VernacExtend",
                        "32e738adabd1b2845bb50beed60df9eefe677271"
                    ]
                },
                {
                    "command": [
                        "rewrite add_o, remove_o.",
                        "VernacExtend",
                        "6c089d144d3f76a8711bb891324dba0798c52f07"
                    ]
                },
                {
                    "command": [
                        "destruct eq_dec as [He|Hne]; auto.",
                        "VernacExtend",
                        "f680c1e8f8b4c5dc6afa2104c58a0b2eeea5e0b9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- He; apply find_1; auto.",
                        "VernacExtend",
                        "a2a67af4c5005399efa9e29cfbbd954cc9395f73"
                    ]
                },
                {
                    "command": [
                        "intros k (H1,H2).",
                        "VernacExtend",
                        "4af9fd142fc7a0b3d46f7de7b68c8297abd7092c"
                    ]
                },
                {
                    "command": [
                        "elim (Hdisj k).",
                        "VernacExtend",
                        "59f4e25400c2efd0efc24bca328db75d08b2d2ac"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "rewrite remove_in_iff in H1; destruct H1; auto.",
                        "VernacExtend",
                        "478b26d3bada1722aa2b4e0c550b06c44e6f83eb"
                    ]
                },
                {
                    "command": [
                        "intros k' e'.",
                        "VernacExtend",
                        "c48f47404b5b3065a22f04c043f27d4322fe4b93"
                    ]
                },
                {
                    "command": [
                        "rewrite Heq, 2 remove_mapsto_iff, Hor.",
                        "VernacExtend",
                        "9b480a497f2a288ac9209515fe4fab7063dcd55d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "elim (Hdisj x); split; [exists e|exists e']; auto.",
                        "VernacExtend",
                        "f3e959409b9de5b0ed659a43c6763d0977c65d32"
                    ]
                },
                {
                    "command": [
                        "apply MapsTo_1 with k'; auto.",
                        "VernacExtend",
                        "5de32b46d491d5ff0dc76135c18424f0236082a8"
                    ]
                },
                {
                    "command": [
                        "exists (remove x m2); right.",
                        "VernacExtend",
                        "fe889978a65de3e8feae5a10a8b2c281e46b431b"
                    ]
                },
                {
                    "command": [
                        "split; [|split].",
                        "VernacExtend",
                        "d2f933e98f73ab8a5c6be2969adff348cdfe06d5"
                    ]
                },
                {
                    "command": [
                        "change (Equal m2 (add x e (remove x m2))).",
                        "VernacExtend",
                        "d8ee8f42d4598c3a3bd3674b3b6f3ec00d9035e2"
                    ]
                },
                {
                    "command": [
                        "intro k.",
                        "VernacExtend",
                        "32e738adabd1b2845bb50beed60df9eefe677271"
                    ]
                },
                {
                    "command": [
                        "rewrite add_o, remove_o.",
                        "VernacExtend",
                        "6c089d144d3f76a8711bb891324dba0798c52f07"
                    ]
                },
                {
                    "command": [
                        "destruct eq_dec as [He|Hne]; auto.",
                        "VernacExtend",
                        "f680c1e8f8b4c5dc6afa2104c58a0b2eeea5e0b9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- He; apply find_1; auto.",
                        "VernacExtend",
                        "a2a67af4c5005399efa9e29cfbbd954cc9395f73"
                    ]
                },
                {
                    "command": [
                        "intros k (H1,H2).",
                        "VernacExtend",
                        "4af9fd142fc7a0b3d46f7de7b68c8297abd7092c"
                    ]
                },
                {
                    "command": [
                        "elim (Hdisj k).",
                        "VernacExtend",
                        "59f4e25400c2efd0efc24bca328db75d08b2d2ac"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "rewrite remove_in_iff in H2; destruct H2; auto.",
                        "VernacExtend",
                        "bb40ca4727bec88f38d8610313ac1c79cb9adb12"
                    ]
                },
                {
                    "command": [
                        "intros k' e'.",
                        "VernacExtend",
                        "c48f47404b5b3065a22f04c043f27d4322fe4b93"
                    ]
                },
                {
                    "command": [
                        "rewrite Heq, 2 remove_mapsto_iff, Hor.",
                        "VernacExtend",
                        "9b480a497f2a288ac9209515fe4fab7063dcd55d"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "elim (Hdisj x); split; [exists e'|exists e]; auto.",
                        "VernacExtend",
                        "68991a36ff079016fb2a79a844120b80dba1a19b"
                    ]
                },
                {
                    "command": [
                        "apply MapsTo_1 with k'; auto.",
                        "VernacExtend",
                        "5de32b46d491d5ff0dc76135c18424f0236082a8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Partition_fold",
            "line_nb": 1013,
            "steps": [
                {
                    "command": [
                        "intros A eqA st f Comp Tra.",
                        "VernacExtend",
                        "2106229a483dd75b10fdb650600e397b40c632e1"
                    ]
                },
                {
                    "command": [
                        "induction m as [m Hm|m m' IH k e Hn Hadd] using map_induction.",
                        "VernacExtend",
                        "c05e2a17438e9b92317d2c88613273e98dc5c769"
                    ]
                },
                {
                    "command": [
                        "intros m1 m2 i Hp.",
                        "VernacExtend",
                        "d7bd6096584fb9bdb8965bb64dba6ff720bce79f"
                    ]
                },
                {
                    "command": [
                        "rewrite (fold_Empty (eqA:=eqA)); auto.",
                        "VernacExtend",
                        "bd7d3fe1b27c03a726eacf8beebf084d325665d5"
                    ]
                },
                {
                    "command": [
                        "rewrite (Partition_Empty Hp) in Hm.",
                        "VernacExtend",
                        "6a0de65f24c5da20828b6f894479704f9caf0170"
                    ]
                },
                {
                    "command": [
                        "destruct Hm.",
                        "VernacExtend",
                        "899213cb9c54109e086c968ca2bf6219054f8765"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 (fold_Empty (eqA:=eqA)); auto.",
                        "VernacExtend",
                        "35d0ef40a77d21f05a050a3caf1140131e6a7e9b"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros m1 m2 i Hp.",
                        "VernacExtend",
                        "d7bd6096584fb9bdb8965bb64dba6ff720bce79f"
                    ]
                },
                {
                    "command": [
                        "destruct (Partition_Add Hn Hadd Hp) as (m3,[(Hadd',Hp')|(Hadd',Hp')]).",
                        "VernacExtend",
                        "004024933259eff23ee532c9a2f2b16b43078bd1"
                    ]
                },
                {
                    "command": [
                        "assert (~In k m3).",
                        "VernacExtend",
                        "1e9d3d2759569a3ba02e142372519f0ae3c6f30b"
                    ]
                },
                {
                    "command": [
                        "contradict Hn.",
                        "VernacExtend",
                        "6a108a37143e2247b77d263fb72dc84667b1f529"
                    ]
                },
                {
                    "command": [
                        "destruct Hn as (e',He').",
                        "VernacExtend",
                        "e41c12f52c7a3ba1805f4076906d45928c5ac0b2"
                    ]
                },
                {
                    "command": [
                        "destruct Hp' as (Hp1,Hp2).",
                        "VernacExtend",
                        "a2951bc608ea74406e9caf72553f6728ebaa97c6"
                    ]
                },
                {
                    "command": [
                        "exists e'.",
                        "VernacExtend",
                        "a668b65063a69e3331e3f3a09838f057d45d4c4e"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp2; auto.",
                        "VernacExtend",
                        "5a4d702e3a3834b93322fbe239fa22eb645ba74c"
                    ]
                },
                {
                    "command": [
                        "transitivity (f k e (fold f m i)).",
                        "VernacExtend",
                        "b6bfa773ef15756fca2865efd135d0ff8a92338f"
                    ]
                },
                {
                    "command": [
                        "apply fold_Add with (eqA:=eqA); auto.",
                        "VernacExtend",
                        "4c18f3ad1a11b8af2a8a0e864005d4c6ea2ff9e3"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "transitivity (f k e (fold f m3 (fold f m2 i))).",
                        "VernacExtend",
                        "340a180fe8efa5f1e94f6a3681b147e9d4766a7f"
                    ]
                },
                {
                    "command": [
                        "apply fold_Add with (eqA:=eqA); auto.",
                        "VernacExtend",
                        "4c18f3ad1a11b8af2a8a0e864005d4c6ea2ff9e3"
                    ]
                },
                {
                    "command": [
                        "apply Comp; auto.",
                        "VernacExtend",
                        "6940f5400f8a56a9db9d1cfe44618b4e1d7cefae"
                    ]
                },
                {
                    "command": [
                        "symmetry; apply IH; auto.",
                        "VernacExtend",
                        "afce0ca30b40c266f32f9f45c4dab827998c331b"
                    ]
                },
                {
                    "command": [
                        "assert (~In k m3).",
                        "VernacExtend",
                        "1e9d3d2759569a3ba02e142372519f0ae3c6f30b"
                    ]
                },
                {
                    "command": [
                        "contradict Hn.",
                        "VernacExtend",
                        "6a108a37143e2247b77d263fb72dc84667b1f529"
                    ]
                },
                {
                    "command": [
                        "destruct Hn as (e',He').",
                        "VernacExtend",
                        "e41c12f52c7a3ba1805f4076906d45928c5ac0b2"
                    ]
                },
                {
                    "command": [
                        "destruct Hp' as (Hp1,Hp2).",
                        "VernacExtend",
                        "a2951bc608ea74406e9caf72553f6728ebaa97c6"
                    ]
                },
                {
                    "command": [
                        "exists e'.",
                        "VernacExtend",
                        "a668b65063a69e3331e3f3a09838f057d45d4c4e"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp2; auto.",
                        "VernacExtend",
                        "5a4d702e3a3834b93322fbe239fa22eb645ba74c"
                    ]
                },
                {
                    "command": [
                        "assert (~In k m1).",
                        "VernacExtend",
                        "75c346bfa1a3e2d9039199d43647aee16e847d67"
                    ]
                },
                {
                    "command": [
                        "contradict Hn.",
                        "VernacExtend",
                        "6a108a37143e2247b77d263fb72dc84667b1f529"
                    ]
                },
                {
                    "command": [
                        "destruct Hn as (e',He').",
                        "VernacExtend",
                        "e41c12f52c7a3ba1805f4076906d45928c5ac0b2"
                    ]
                },
                {
                    "command": [
                        "destruct Hp' as (Hp1,Hp2).",
                        "VernacExtend",
                        "a2951bc608ea74406e9caf72553f6728ebaa97c6"
                    ]
                },
                {
                    "command": [
                        "exists e'.",
                        "VernacExtend",
                        "a668b65063a69e3331e3f3a09838f057d45d4c4e"
                    ]
                },
                {
                    "command": [
                        "rewrite Hp2; auto.",
                        "VernacExtend",
                        "5a4d702e3a3834b93322fbe239fa22eb645ba74c"
                    ]
                },
                {
                    "command": [
                        "transitivity (f k e (fold f m i)).",
                        "VernacExtend",
                        "b6bfa773ef15756fca2865efd135d0ff8a92338f"
                    ]
                },
                {
                    "command": [
                        "apply fold_Add with (eqA:=eqA); auto.",
                        "VernacExtend",
                        "4c18f3ad1a11b8af2a8a0e864005d4c6ea2ff9e3"
                    ]
                },
                {
                    "command": [
                        "transitivity (f k e (fold f m1 (fold f m3 i))).",
                        "VernacExtend",
                        "02f2d3b208c2fe5b53cbbd025d4b4280a620598c"
                    ]
                },
                {
                    "command": [
                        "apply Comp; auto using IH.",
                        "VernacExtend",
                        "5cc7a787694faa96ee8ef2c9e7ca625b88208dd2"
                    ]
                },
                {
                    "command": [
                        "transitivity (fold f m1 (f k e (fold f m3 i))).",
                        "VernacExtend",
                        "c6e04e41e87700549b7e169dcec897903cc6594b"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply fold_commutes with (eqA:=eqA); auto.",
                        "VernacExtend",
                        "8546d79a9e1b55632aa78b98adaa204f3ef14188"
                    ]
                },
                {
                    "command": [
                        "apply fold_init with (eqA:=eqA); auto.",
                        "VernacExtend",
                        "a6d837c9d58d01854ed1b9ec264186c32dbbb218"
                    ]
                },
                {
                    "command": [
                        "symmetry.",
                        "VernacExtend",
                        "a08fc0dc04bba893008bded8181f393e2d8db167"
                    ]
                },
                {
                    "command": [
                        "apply fold_Add with (eqA:=eqA); auto.",
                        "VernacExtend",
                        "4c18f3ad1a11b8af2a8a0e864005d4c6ea2ff9e3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Partition_cardinal",
            "line_nb": 1060,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite (cardinal_fold m), (cardinal_fold m1).",
                        "VernacExtend",
                        "2ae94273548fccdd316b3719bda5cb0d2295988e"
                    ]
                },
                {
                    "command": [
                        "set (f:=fun (_:key)(_:elt)=>S).",
                        "VernacExtend",
                        "03b33f5bf952ee9f2692b0e09eb997e7320d765e"
                    ]
                },
                {
                    "command": [
                        "setoid_replace (fold f m 0) with (fold f m1 (fold f m2 0)).",
                        "VernacExtend",
                        "187aacfd538dc6febed4e4ca4144d4e692d99421"
                    ]
                },
                {
                    "command": [
                        "rewrite <- cardinal_fold.",
                        "VernacExtend",
                        "8fde755f23425438e2b08b6c5e51ea950b0bedbc"
                    ]
                },
                {
                    "command": [
                        "apply fold_rel with (R:=fun u v => u = v + cardinal m2); simpl; auto.",
                        "VernacExtend",
                        "7466f9e2992fd6d392703f2e925325de90b72202"
                    ]
                },
                {
                    "command": [
                        "apply Partition_fold with (eqA:=eq); repeat red; auto.",
                        "VernacExtend",
                        "dd17db98ef164b2a0c4a442c4eaab7276e2ffaff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Partition_partition",
            "line_nb": 1069,
            "steps": [
                {
                    "command": [
                        "intros m m1 m2 Hm f.",
                        "VernacExtend",
                        "2d2d518bda1b2e12a88650f1061cab6efea48f16"
                    ]
                },
                {
                    "command": [
                        "assert (Hf : Proper (E.eq==>eq==>eq) f).",
                        "VernacExtend",
                        "0f60c35084683a0fd69448796bba36cc906c0696"
                    ]
                },
                {
                    "command": [
                        "intros k k' Hk e e' _; unfold f; rewrite Hk; auto.",
                        "VernacExtend",
                        "7bd496be5f13e27aeaee8e8ac6dbb9d48871a99a"
                    ]
                },
                {
                    "command": [
                        "set (m1':= fst (partition f m)).",
                        "VernacExtend",
                        "0bbe254d5a2e7883acea849e056e3b8e29774e59"
                    ]
                },
                {
                    "command": [
                        "set (m2':= snd (partition f m)).",
                        "VernacExtend",
                        "27eead18c1a7f2d6962a1fcefda79994fb9c12ce"
                    ]
                },
                {
                    "command": [
                        "split; rewrite Equal_mapsto_iff; intros k e.",
                        "VernacExtend",
                        "61969240ec1f6ce9f8a750edcd3f8c8422c4213e"
                    ]
                },
                {
                    "command": [
                        "rewrite (@partition_iff_1 f Hf m m1') by auto.",
                        "VernacExtend",
                        "0d494d817559e1dac36850c79b15280897286b19"
                    ]
                },
                {
                    "command": [
                        "unfold f.",
                        "VernacExtend",
                        "54a386f4161710b69df4a2025df24a14e842ecf2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mem_in_iff.",
                        "VernacExtend",
                        "aaa046eddd1be6c25fd48698ae8b15d8f93edc72"
                    ]
                },
                {
                    "command": [
                        "destruct Hm as (Hm,Hm').",
                        "VernacExtend",
                        "e6611a6a25925b2dc734ddbb49deb0f5767bd686"
                    ]
                },
                {
                    "command": [
                        "rewrite Hm'.",
                        "VernacExtend",
                        "db2531e513a13df52e282a9f9ef9d7f4a316f362"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "exists e; auto.",
                        "VernacExtend",
                        "5789629a110c642815687c3512a8c438259c58a1"
                    ]
                },
                {
                    "command": [
                        "elim (Hm k); split; auto; exists e; auto.",
                        "VernacExtend",
                        "4b15e95784a5ca90da839611f0ce0aa59dfd375f"
                    ]
                },
                {
                    "command": [
                        "rewrite (@partition_iff_2 f Hf m m2') by auto.",
                        "VernacExtend",
                        "65c66414fab8e54f24a305bbe5ad2c9a6bace0c8"
                    ]
                },
                {
                    "command": [
                        "unfold f.",
                        "VernacExtend",
                        "54a386f4161710b69df4a2025df24a14e842ecf2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- not_mem_in_iff.",
                        "VernacExtend",
                        "3617cca0340c6f58d630759d351644f44717003e"
                    ]
                },
                {
                    "command": [
                        "destruct Hm as (Hm,Hm').",
                        "VernacExtend",
                        "e6611a6a25925b2dc734ddbb49deb0f5767bd686"
                    ]
                },
                {
                    "command": [
                        "rewrite Hm'.",
                        "VernacExtend",
                        "db2531e513a13df52e282a9f9ef9d7f4a316f362"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "elim (Hm k); split; auto; exists e; auto.",
                        "VernacExtend",
                        "4b15e95784a5ca90da839611f0ce0aa59dfd375f"
                    ]
                },
                {
                    "command": [
                        "elim H1; exists e; auto.",
                        "VernacExtend",
                        "4d5a64a0e8e0944f36b24f06347c0c20e65b092d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "update_mapsto_iff",
            "line_nb": 1093,
            "steps": [
                {
                    "command": [
                        "unfold update.",
                        "VernacExtend",
                        "62e04ebb1477401cedc82913efbc37f9d65c298a"
                    ]
                },
                {
                    "command": [
                        "intros m m'.",
                        "VernacExtend",
                        "617ebb524c10b94a79f3da66164aa5e3960dcac8"
                    ]
                },
                {
                    "command": [
                        "pattern m', (fold (@add _) m' m).",
                        "VernacExtend",
                        "e822911ecea9b3a5c920dffe84cb0e829c6e69a1"
                    ]
                },
                {
                    "command": [
                        "apply fold_rec.",
                        "VernacExtend",
                        "8446cba6cde578f8cb501f536270712789b8c361"
                    ]
                },
                {
                    "command": [
                        "intros m0 Hm0 k e.",
                        "VernacExtend",
                        "e5a9f29eed3a083798b45caecb98575d26452c4e"
                    ]
                },
                {
                    "command": [
                        "assert (~In k m0) by (intros (e0,He0); apply (Hm0 k e0); auto).",
                        "VernacExtend",
                        "83b10deb1b4af37647759fe90c311fd0b8c587ee"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "elim (Hm0 k e); auto.",
                        "VernacExtend",
                        "33bf4c829ac9b3e15785c0acfca28cef8178c892"
                    ]
                },
                {
                    "command": [
                        "intros k e m0 m1 m2 _ Hn Hadd IH k' e'.",
                        "VernacExtend",
                        "84766d45f7319f42500a4d0d39d657a6e5ac5be2"
                    ]
                },
                {
                    "command": [
                        "change (Equal m2 (add k e m1)) in Hadd.",
                        "VernacExtend",
                        "50a6338fc9831572d2eea77685abcb8c27d832d7"
                    ]
                },
                {
                    "command": [
                        "rewrite Hadd, 2 add_mapsto_iff, IH, add_in_iff.",
                        "VernacExtend",
                        "6e8fe79c6627f787c911fac7c054ae9ac168cdef"
                    ]
                },
                {
                    "command": [
                        "clear IH.",
                        "VernacExtend",
                        "daecf0ea8665f0f6fd551644d47b5ce1d93aef1e"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "update_dec",
            "line_nb": 1108,
            "steps": [
                {
                    "command": [
                        "intros m m' k e H.",
                        "VernacExtend",
                        "b483206eb769ddf56370671afdd10e545e827d04"
                    ]
                },
                {
                    "command": [
                        "rewrite update_mapsto_iff in H.",
                        "VernacExtend",
                        "33efa74022a934a1fd56049135e1e919ca55ae6e"
                    ]
                },
                {
                    "command": [
                        "destruct (In_dec m' k) as [H'|H']; [left|right]; intuition.",
                        "VernacExtend",
                        "e693d70ffda4b23f3b43bf474f61f80df4eb4350"
                    ]
                },
                {
                    "command": [
                        "elim H'; exists e; auto.",
                        "VernacExtend",
                        "46b41bd2767d50ac2c07fce58e059492665ad2b0"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "update_in_iff",
            "line_nb": 1114,
            "steps": [
                {
                    "command": [
                        "intros m m' k.",
                        "VernacExtend",
                        "5b55f4185364a18fdce2c3faf805733a3012f821"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros (e,H); rewrite update_mapsto_iff in H.",
                        "VernacExtend",
                        "6d2f6384128ff1c27d2cb9c933a738bb3bb6d0ac"
                    ]
                },
                {
                    "command": [
                        "destruct H; [right|left]; exists e; intuition.",
                        "VernacExtend",
                        "542d4ed7985b22405d62e193a4fda6b266afb376"
                    ]
                },
                {
                    "command": [
                        "destruct (In_dec m' k) as [H|H].",
                        "VernacExtend",
                        "0fbb691736f37f1f2c18e34248c16e63fa9e385e"
                    ]
                },
                {
                    "command": [
                        "destruct H as (e,H).",
                        "VernacExtend",
                        "a2fe7ec8c7b58f9ef97d3461e4b1af489a0271aa"
                    ]
                },
                {
                    "command": [
                        "intros _; exists e.",
                        "VernacExtend",
                        "1ff84144f2c95ee318826eff726e2fbacdbade5f"
                    ]
                },
                {
                    "command": [
                        "rewrite update_mapsto_iff; left; auto.",
                        "VernacExtend",
                        "5f69672f1ab44acb20416f5e6da6ec3c53a8d357"
                    ]
                },
                {
                    "command": [
                        "destruct 1 as [H'|H']; [|elim H; auto].",
                        "VernacExtend",
                        "5302b44d8fe46d8e6f565843f185fe74d45ff65e"
                    ]
                },
                {
                    "command": [
                        "destruct H' as (e,H').",
                        "VernacExtend",
                        "75db3bd754c348d2a6c35d0f298f66362392bb94"
                    ]
                },
                {
                    "command": [
                        "exists e.",
                        "VernacExtend",
                        "4e644c830fdbbe811077e17f446c7832b57a4f89"
                    ]
                },
                {
                    "command": [
                        "rewrite update_mapsto_iff; right; auto.",
                        "VernacExtend",
                        "a34153b9a378f451140407b349d75f35ca3ad8dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_mapsto_iff",
            "line_nb": 1128,
            "steps": [
                {
                    "command": [
                        "intros m m' k e.",
                        "VernacExtend",
                        "daf7d2bbd4e3348bf1d71ff83acda9057a6c4575"
                    ]
                },
                {
                    "command": [
                        "unfold diff.",
                        "VernacExtend",
                        "015c5c45b35e935e1c6dd9febb71b8412c9ab22a"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_iff.",
                        "VernacExtend",
                        "bd367416eeb56baaf950c500deb6f6c288a571b5"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "rewrite mem_1 in *; auto; discriminate.",
                        "VernacExtend",
                        "4207903f2645650603235fd5666bfe52fa234d19"
                    ]
                },
                {
                    "command": [
                        "intros ? ? Hk _ _ _; rewrite Hk; auto.",
                        "VernacExtend",
                        "fd30f759a5d5025ce05ffa23d6991f2c9b618e00"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_in_iff",
            "line_nb": 1136,
            "steps": [
                {
                    "command": [
                        "intros m m' k.",
                        "VernacExtend",
                        "5b55f4185364a18fdce2c3faf805733a3012f821"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros (e,H); rewrite diff_mapsto_iff in H.",
                        "VernacExtend",
                        "664fef0c7fec6c0113f27d6c005cf23b16e5b394"
                    ]
                },
                {
                    "command": [
                        "destruct H; split; auto.",
                        "VernacExtend",
                        "6b0b617ec55939190e129ebd913eb5389aac7738"
                    ]
                },
                {
                    "command": [
                        "exists e; auto.",
                        "VernacExtend",
                        "5789629a110c642815687c3512a8c438259c58a1"
                    ]
                },
                {
                    "command": [
                        "intros ((e,H),H'); exists e; rewrite diff_mapsto_iff; auto.",
                        "VernacExtend",
                        "37580018a4ab5dffab55a0946a6ed92f7e021946"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "restrict_mapsto_iff",
            "line_nb": 1144,
            "steps": [
                {
                    "command": [
                        "intros m m' k e.",
                        "VernacExtend",
                        "daf7d2bbd4e3348bf1d71ff83acda9057a6c4575"
                    ]
                },
                {
                    "command": [
                        "unfold restrict.",
                        "VernacExtend",
                        "a3863d9f634ba2838d286207832792553a81ea6e"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_iff.",
                        "VernacExtend",
                        "bd367416eeb56baaf950c500deb6f6c288a571b5"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "intros ? ? Hk _ _ _; rewrite Hk; auto.",
                        "VernacExtend",
                        "fd30f759a5d5025ce05ffa23d6991f2c9b618e00"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "restrict_in_iff",
            "line_nb": 1151,
            "steps": [
                {
                    "command": [
                        "intros m m' k.",
                        "VernacExtend",
                        "5b55f4185364a18fdce2c3faf805733a3012f821"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "intros (e,H); rewrite restrict_mapsto_iff in H.",
                        "VernacExtend",
                        "d21b82123adb25d2dd462ac852bdbc2f29b8aca8"
                    ]
                },
                {
                    "command": [
                        "destruct H; split; auto.",
                        "VernacExtend",
                        "6b0b617ec55939190e129ebd913eb5389aac7738"
                    ]
                },
                {
                    "command": [
                        "exists e; auto.",
                        "VernacExtend",
                        "5789629a110c642815687c3512a8c438259c58a1"
                    ]
                },
                {
                    "command": [
                        "intros ((e,H),H'); exists e; rewrite restrict_mapsto_iff; auto.",
                        "VernacExtend",
                        "69b05af702fb5b97ca24f2d8d8b22bbc308167b7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_m_Proper",
            "line_nb": 1168,
            "steps": [
                {
                    "command": [
                        "intros; apply Equal_cardinal; auto.",
                        "VernacExtend",
                        "59424f9ee5d76d7516e0d4425773a921f35609ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Disjoint_m_Proper",
            "line_nb": 1171,
            "steps": [
                {
                    "command": [
                        "intros m1 m1' Hm1 m2 m2' Hm2.",
                        "VernacExtend",
                        "d7e959f4129996681270aa691a86f6c5845e49c4"
                    ]
                },
                {
                    "command": [
                        "unfold Disjoint.",
                        "VernacExtend",
                        "c53717602cdd0b28145d73aed398da0104f03d85"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hm1, <- Hm2; auto.",
                        "VernacExtend",
                        "6b93d2c0e9a4b86e0a126e2f2f7bab3ac02aab6e"
                    ]
                },
                {
                    "command": [
                        "rewrite Hm1, Hm2; auto.",
                        "VernacExtend",
                        "2035165f895f372068d9b167e66d7357bbfa4b7b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Partition_m_Proper",
            "line_nb": 1178,
            "steps": [
                {
                    "command": [
                        "intros m1 m1' Hm1 m2 m2' Hm2 m3 m3' Hm3.",
                        "VernacExtend",
                        "ca90d95816a785bf4fa95e4418b6d083e1351ccf"
                    ]
                },
                {
                    "command": [
                        "unfold Partition.",
                        "VernacExtend",
                        "357bd4383d649e7941f1061bb7d58762e26298de"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hm2, <- Hm3.",
                        "VernacExtend",
                        "1794e6619f0ce43bc392ef438f8bc3d5693df910"
                    ]
                },
                {
                    "command": [
                        "split; intros (H,H'); split; auto; intros.",
                        "VernacExtend",
                        "8eb322e33497378a985f213ea78684908e7d6d46"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Hm1, <- Hm2, <- Hm3; auto.",
                        "VernacExtend",
                        "a16fa2ae00b60ade6461ad1a43386793ffbb56ed"
                    ]
                },
                {
                    "command": [
                        "rewrite Hm1, Hm2, Hm3; auto.",
                        "VernacExtend",
                        "f25024a387452a5d45e816093c45d5ce7e7426a7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "update_m_Proper",
            "line_nb": 1186,
            "steps": [
                {
                    "command": [
                        "intros m1 m1' Hm1 m2 m2' Hm2.",
                        "VernacExtend",
                        "d7e959f4129996681270aa691a86f6c5845e49c4"
                    ]
                },
                {
                    "command": [
                        "setoid_replace (update m1 m2) with (update m1' m2); unfold update.",
                        "VernacExtend",
                        "c28842a8ef251ae21520db59e59ca14535e5e156"
                    ]
                },
                {
                    "command": [
                        "apply fold_Equal with (eqA:=Equal); auto.",
                        "VernacExtend",
                        "085cd262815cd187b126070f449791ee2e9b0f54"
                    ]
                },
                {
                    "command": [
                        "intros k k' Hk e e' He m m' Hm; rewrite Hk,He,Hm; red; auto.",
                        "VernacExtend",
                        "445ca6fb0b8e50754cc75645d943915d76e32ac2"
                    ]
                },
                {
                    "command": [
                        "intros k k' e e' i Hneq x.",
                        "VernacExtend",
                        "5a62b4d0aa66ff5d3681db9d0163ba49b9a21dc2"
                    ]
                },
                {
                    "command": [
                        "rewrite !add_o; do 2 destruct eq_dec; auto.",
                        "VernacExtend",
                        "44d1db9d0ae3955026bbbcff3190b9e43cfa6d40"
                    ]
                },
                {
                    "command": [
                        "elim Hneq; eauto.",
                        "VernacExtend",
                        "fa73699b305b85bd35c272f1d739e6e5c217f279"
                    ]
                },
                {
                    "command": [
                        "apply fold_init with (eqA:=Equal); auto.",
                        "VernacExtend",
                        "35921222ee9066128325412171d48f879316d102"
                    ]
                },
                {
                    "command": [
                        "intros k k' Hk e e' He m m' Hm; rewrite Hk,He,Hm; red; auto.",
                        "VernacExtend",
                        "445ca6fb0b8e50754cc75645d943915d76e32ac2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "restrict_m_Proper",
            "line_nb": 1197,
            "steps": [
                {
                    "command": [
                        "intros m1 m1' Hm1 m2 m2' Hm2.",
                        "VernacExtend",
                        "d7e959f4129996681270aa691a86f6c5845e49c4"
                    ]
                },
                {
                    "command": [
                        "setoid_replace (restrict m1 m2) with (restrict m1' m2); unfold restrict, filter.",
                        "VernacExtend",
                        "d0f85b6a9aa22862cfdbef7de7e4e883c51262ee"
                    ]
                },
                {
                    "command": [
                        "apply fold_rel with (R:=Equal); try red; auto.",
                        "VernacExtend",
                        "c4839bcca6c4d8d3ec3b34d2278f2a88e3525b69"
                    ]
                },
                {
                    "command": [
                        "intros k e i i' H Hii' x.",
                        "VernacExtend",
                        "f02f3374608ec0e87ab759eb3296b8f737e8f81e"
                    ]
                },
                {
                    "command": [
                        "pattern (mem k m2); rewrite Hm2.",
                        "VernacExtend",
                        "6d47af62041a113871e6e80587823d81fedd0703"
                    ]
                },
                {
                    "command": [
                        "destruct mem; rewrite Hii'; auto.",
                        "VernacExtend",
                        "a82cb978d33659eabc0fd9df53d5e517cf55268a"
                    ]
                },
                {
                    "command": [
                        "apply fold_Equal with (eqA:=Equal); auto.",
                        "VernacExtend",
                        "085cd262815cd187b126070f449791ee2e9b0f54"
                    ]
                },
                {
                    "command": [
                        "intros k k' Hk e e' He m m' Hm; simpl in *.",
                        "VernacExtend",
                        "8081e4c10a89216210aa979cbe42f0cc49075973"
                    ]
                },
                {
                    "command": [
                        "pattern (mem k m2); rewrite Hk.",
                        "VernacExtend",
                        "dba081c9c11bab4a5518c4580ac2ce59fc5e163b"
                    ]
                },
                {
                    "command": [
                        "destruct mem; rewrite ?Hk,?He,Hm; red; auto.",
                        "VernacExtend",
                        "ef00680200b3979faadcf92bf253dd5371041170"
                    ]
                },
                {
                    "command": [
                        "intros k k' e e' i Hneq x.",
                        "VernacExtend",
                        "5a62b4d0aa66ff5d3681db9d0163ba49b9a21dc2"
                    ]
                },
                {
                    "command": [
                        "case_eq (mem k m2); case_eq (mem k' m2); intros; auto.",
                        "VernacExtend",
                        "b7faba0912471f7023a1e1f0e135877c6660d675"
                    ]
                },
                {
                    "command": [
                        "rewrite !add_o; do 2 destruct eq_dec; auto.",
                        "VernacExtend",
                        "44d1db9d0ae3955026bbbcff3190b9e43cfa6d40"
                    ]
                },
                {
                    "command": [
                        "elim Hneq; eauto.",
                        "VernacExtend",
                        "fa73699b305b85bd35c272f1d739e6e5c217f279"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "diff_m_Proper",
            "line_nb": 1213,
            "steps": [
                {
                    "command": [
                        "intros m1 m1' Hm1 m2 m2' Hm2.",
                        "VernacExtend",
                        "d7e959f4129996681270aa691a86f6c5845e49c4"
                    ]
                },
                {
                    "command": [
                        "setoid_replace (diff m1 m2) with (diff m1' m2); unfold diff, filter.",
                        "VernacExtend",
                        "342b5add88a97a6b65c0bfed288d3c37c0435483"
                    ]
                },
                {
                    "command": [
                        "apply fold_rel with (R:=Equal); try red; auto.",
                        "VernacExtend",
                        "c4839bcca6c4d8d3ec3b34d2278f2a88e3525b69"
                    ]
                },
                {
                    "command": [
                        "intros k e i i' H Hii' x.",
                        "VernacExtend",
                        "f02f3374608ec0e87ab759eb3296b8f737e8f81e"
                    ]
                },
                {
                    "command": [
                        "pattern (mem k m2); rewrite Hm2.",
                        "VernacExtend",
                        "6d47af62041a113871e6e80587823d81fedd0703"
                    ]
                },
                {
                    "command": [
                        "destruct mem; simpl; rewrite Hii'; auto.",
                        "VernacExtend",
                        "c0b9bf30f7dd0807132654063f70070eda9a6415"
                    ]
                },
                {
                    "command": [
                        "apply fold_Equal with (eqA:=Equal); auto.",
                        "VernacExtend",
                        "085cd262815cd187b126070f449791ee2e9b0f54"
                    ]
                },
                {
                    "command": [
                        "intros k k' Hk e e' He m m' Hm; simpl in *.",
                        "VernacExtend",
                        "8081e4c10a89216210aa979cbe42f0cc49075973"
                    ]
                },
                {
                    "command": [
                        "pattern (mem k m2); rewrite Hk.",
                        "VernacExtend",
                        "dba081c9c11bab4a5518c4580ac2ce59fc5e163b"
                    ]
                },
                {
                    "command": [
                        "destruct mem; simpl; rewrite ?Hk,?He,Hm; red; auto.",
                        "VernacExtend",
                        "76125b9cb2676700766fbb39fc9857467256292c"
                    ]
                },
                {
                    "command": [
                        "intros k k' e e' i Hneq x.",
                        "VernacExtend",
                        "5a62b4d0aa66ff5d3681db9d0163ba49b9a21dc2"
                    ]
                },
                {
                    "command": [
                        "case_eq (mem k m2); case_eq (mem k' m2); intros; simpl; auto.",
                        "VernacExtend",
                        "528acbfe570421a46e608c60a98fd9403e5bf6ea"
                    ]
                },
                {
                    "command": [
                        "rewrite !add_o; do 2 destruct eq_dec; auto.",
                        "VernacExtend",
                        "44d1db9d0ae3955026bbbcff3190b9e43cfa6d40"
                    ]
                },
                {
                    "command": [
                        "elim Hneq; eauto.",
                        "VernacExtend",
                        "fa73699b305b85bd35c272f1d739e6e5c217f279"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sort_equivlistA_eqlistA",
            "line_nb": 1249,
            "steps": [
                {
                    "command": [
                        "apply SortA_equivlistA_eqlistA; eauto with *.",
                        "VernacExtend",
                        "56abc697013904c5f7efff93349af478f5b9deb1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtb_1",
            "line_nb": 1257,
            "steps": [
                {
                    "command": [
                        "intros (x,e) (y,e'); unfold gtb, O.ltk; simpl.",
                        "VernacExtend",
                        "e0cdd0093a021c1f6e8f58396b97a7a23dd53277"
                    ]
                },
                {
                    "command": [
                        "destruct (E.compare x y); intuition; try discriminate; ME.order.",
                        "VernacExtend",
                        "b00c79225f4746bb39be1785e6bc66daa19f188c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leb_1",
            "line_nb": 1261,
            "steps": [
                {
                    "command": [
                        "intros (x,e) (y,e'); unfold leb, gtb, O.ltk; simpl.",
                        "VernacExtend",
                        "3de06a2e889aaf4bdccc5add78554f369ec204c7"
                    ]
                },
                {
                    "command": [
                        "destruct (E.compare x y); intuition; try discriminate; ME.order.",
                        "VernacExtend",
                        "b00c79225f4746bb39be1785e6bc66daa19f188c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "gtb_compat",
            "line_nb": 1265,
            "steps": [
                {
                    "command": [
                        "red; intros (x,e) (a,e') (b,e'') H; red in H; simpl in *; destruct H.",
                        "VernacExtend",
                        "db80cd3f86d070e2a459cd775c900c9a6eef91ae"
                    ]
                },
                {
                    "command": [
                        "generalize (gtb_1 (x,e) (a,e'))(gtb_1 (x,e) (b,e'')); destruct (gtb (x,e) (a,e')); destruct (gtb (x,e) (b,e'')); auto.",
                        "VernacExtend",
                        "171bd2c7fe9b420fc67517ba547fb5f27afa4c30"
                    ]
                },
                {
                    "command": [
                        "unfold O.ltk in *; simpl in *; intros.",
                        "VernacExtend",
                        "44c63ece1e35df794b83a75427f36b764b96b5ff"
                    ]
                },
                {
                    "command": [
                        "symmetry; rewrite H2.",
                        "VernacExtend",
                        "f307df724b527588f2f4a2e22e85bb45e3e9b795"
                    ]
                },
                {
                    "command": [
                        "apply ME.eq_lt with a; auto.",
                        "VernacExtend",
                        "ce28400cd64483544d9fd6e62a0536ccaee840e7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1; auto.",
                        "VernacExtend",
                        "32b903bcbdd2d6f83dd19185f0534857f043d3ae"
                    ]
                },
                {
                    "command": [
                        "unfold O.ltk in *; simpl in *; intros.",
                        "VernacExtend",
                        "44c63ece1e35df794b83a75427f36b764b96b5ff"
                    ]
                },
                {
                    "command": [
                        "rewrite H1.",
                        "VernacExtend",
                        "91099f93f9346d13e3fc00550ba094ceac5333db"
                    ]
                },
                {
                    "command": [
                        "apply ME.eq_lt with b; auto.",
                        "VernacExtend",
                        "757082bef1f37fa96afb64e1cdc524844e30e0c6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2; auto.",
                        "VernacExtend",
                        "32038346176d7468e98cb8f3f68a500b2e560c7d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "leb_compat",
            "line_nb": 1277,
            "steps": [
                {
                    "command": [
                        "red; intros x a b H.",
                        "VernacExtend",
                        "a98bb001c3719f0d282c35b522c8f03e85348e24"
                    ]
                },
                {
                    "command": [
                        "unfold leb; f_equal; apply gtb_compat; auto.",
                        "VernacExtend",
                        "68d0b81cca25b2a18582e34aaca704ddb66a803f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_split",
            "line_nb": 1282,
            "steps": [
                {
                    "command": [
                        "unfold elements_lt, elements_ge, leb; intros.",
                        "VernacExtend",
                        "657212ca2e8608707aaef43278d97384117190a1"
                    ]
                },
                {
                    "command": [
                        "apply filter_split with (eqA:=eqk) (ltA:=ltk); eauto with *.",
                        "VernacExtend",
                        "09385e2506f58dccc4100ac6226eabc3e56b3154"
                    ]
                },
                {
                    "command": [
                        "intros; destruct x; destruct y; destruct p.",
                        "VernacExtend",
                        "7354bcd08656d723a83012f6d8b5eb3698be7c85"
                    ]
                },
                {
                    "command": [
                        "rewrite gtb_1 in H; unfold O.ltk in H; simpl in *.",
                        "VernacExtend",
                        "08661814484a941230332b3a819b809b95f3ecfe"
                    ]
                },
                {
                    "command": [
                        "assert (~ltk (t1,e0) (k,e1)).",
                        "VernacExtend",
                        "43b0b762f3f9892c2842e640410595f57f5b4e5a"
                    ]
                },
                {
                    "command": [
                        "unfold gtb, O.ltk in *; simpl in *.",
                        "VernacExtend",
                        "0630cb3e0451ff02471ce0602cc5253ef3b5a534"
                    ]
                },
                {
                    "command": [
                        "destruct (E.compare k t1); intuition; try discriminate; ME.order.",
                        "VernacExtend",
                        "e084effcf960c01248cfcd91211c9c9f0ddb2291"
                    ]
                },
                {
                    "command": [
                        "unfold O.ltk in *; simpl in *; ME.order.",
                        "VernacExtend",
                        "a78e7804907f409ec22c425a887894a5ef2b6e2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_Add",
            "line_nb": 1292,
            "steps": [
                {
                    "command": [
                        "intros; unfold elements_lt, elements_ge.",
                        "VernacExtend",
                        "178619c821c162b67d28505978e395c37352ee62"
                    ]
                },
                {
                    "command": [
                        "apply sort_equivlistA_eqlistA; auto with *.",
                        "VernacExtend",
                        "61aac0629b762a20d7bbc3281a438c526db00e24"
                    ]
                },
                {
                    "command": [
                        "apply (@SortA_app _ eqke); auto with *.",
                        "VernacExtend",
                        "2023295d7e02527834fb20c15058933b67e36a24"
                    ]
                },
                {
                    "command": [
                        "apply (@filter_sort _ eqke); auto with *; clean_eauto.",
                        "VernacExtend",
                        "a33848cb95330aa3908a1dbf24cf0caa4b1ec9ff"
                    ]
                },
                {
                    "command": [
                        "constructor; auto with map.",
                        "VernacExtend",
                        "12e1801ee4ad1768d01c67881ee3679a82a04997"
                    ]
                },
                {
                    "command": [
                        "apply (@filter_sort _ eqke); auto with *; clean_eauto.",
                        "VernacExtend",
                        "a33848cb95330aa3908a1dbf24cf0caa4b1ec9ff"
                    ]
                },
                {
                    "command": [
                        "rewrite (@InfA_alt _ eqke); auto with *; try (clean_eauto; fail).",
                        "VernacExtend",
                        "6adbbe891346a7db8aa517c3ca60b163324b6154"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_InA in H1; auto with *; destruct H1.",
                        "VernacExtend",
                        "96762a831514734b6ca1ae7eacd7a3a09ffd1211"
                    ]
                },
                {
                    "command": [
                        "rewrite leb_1 in H2.",
                        "VernacExtend",
                        "9f9c9d54f3f3a57e5889d0791d0aa62fa5f0069c"
                    ]
                },
                {
                    "command": [
                        "destruct y; unfold O.ltk in *; simpl in *.",
                        "VernacExtend",
                        "7af71b0693a2c6f9076877bbaf44d7d9d94ac54a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- elements_mapsto_iff in H1.",
                        "VernacExtend",
                        "cfeb6120047a786b767903146504686185b8879d"
                    ]
                },
                {
                    "command": [
                        "assert (~E.eq x t0).",
                        "VernacExtend",
                        "f5305a3856cbd94ec0bc0b69d506c2d6df1f45b5"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "exists e0; apply MapsTo_1 with t0; auto.",
                        "VernacExtend",
                        "483f2794a050f4557cc639f91777bf97567aef9a"
                    ]
                },
                {
                    "command": [
                        "ME.order.",
                        "VernacExtend",
                        "c6a4979a2f9a06c460fc8f868f53d77efc9fdf71"
                    ]
                },
                {
                    "command": [
                        "apply (@filter_sort _ eqke); auto with *; clean_eauto.",
                        "VernacExtend",
                        "a33848cb95330aa3908a1dbf24cf0caa4b1ec9ff"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_InA in H1; auto with *; destruct H1.",
                        "VernacExtend",
                        "96762a831514734b6ca1ae7eacd7a3a09ffd1211"
                    ]
                },
                {
                    "command": [
                        "rewrite gtb_1 in H3.",
                        "VernacExtend",
                        "c5f282269d6b66de8c98eb7f5f6a248571613025"
                    ]
                },
                {
                    "command": [
                        "destruct y; destruct x0; unfold O.ltk in *; simpl in *.",
                        "VernacExtend",
                        "74a1797f69970e033718ce0a5ff512725641c1c8"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H2.",
                        "VernacExtend",
                        "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
                    ]
                },
                {
                    "command": [
                        "red in H4; simpl in *; destruct H4.",
                        "VernacExtend",
                        "d3ae32b593c4e6be37eff7d52da45c3d64fcba67"
                    ]
                },
                {
                    "command": [
                        "ME.order.",
                        "VernacExtend",
                        "c6a4979a2f9a06c460fc8f868f53d77efc9fdf71"
                    ]
                },
                {
                    "command": [
                        "rewrite filter_InA in H4; auto with *; destruct H4.",
                        "VernacExtend",
                        "accaaa12f40b54f1410c3f3e56526f995fae75ed"
                    ]
                },
                {
                    "command": [
                        "rewrite leb_1 in H4.",
                        "VernacExtend",
                        "80ad3c960b63bd146a254af9d5278ee6a05ecf65"
                    ]
                },
                {
                    "command": [
                        "unfold O.ltk in *; simpl in *; ME.order.",
                        "VernacExtend",
                        "a78e7804907f409ec22c425a887894a5ef2b6e2b"
                    ]
                },
                {
                    "command": [
                        "red; intros a; destruct a.",
                        "VernacExtend",
                        "1e346f833dc9b59966765210da71d6b6e214585f"
                    ]
                },
                {
                    "command": [
                        "rewrite InA_app_iff, InA_cons, 2 filter_InA, <-2 elements_mapsto_iff, leb_1, gtb_1, find_mapsto_iff, (H0 t0), <- find_mapsto_iff, add_mapsto_iff by (auto with *).",
                        "VernacExtend",
                        "43fa7f569984b5565f626a3fc3602034d23b7d5a"
                    ]
                },
                {
                    "command": [
                        "unfold O.eqke, O.ltk; simpl.",
                        "VernacExtend",
                        "43ef9d831cbdc69f2508fc5ed162d33a8ca57edd"
                    ]
                },
                {
                    "command": [
                        "destruct (E.compare t0 x); intuition; try fold (~E.eq x t0); auto.",
                        "VernacExtend",
                        "4426fbdd9c0bb8d22f8a20b9a8d88077856b35ef"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "elim H; exists e0; apply MapsTo_1 with t0; auto.",
                        "VernacExtend",
                        "2e327eb0f4124e93ae9510dd92334fac4ac696d2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "fold (~E.lt t0 x); auto.",
                        "VernacExtend",
                        "c0ffd5df45c21a0284d554f94cd924cf0ab74354"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_Add_Above",
            "line_nb": 1329,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply sort_equivlistA_eqlistA; auto with *.",
                        "VernacExtend",
                        "61aac0629b762a20d7bbc3281a438c526db00e24"
                    ]
                },
                {
                    "command": [
                        "apply (@SortA_app _ eqke); auto with *.",
                        "VernacExtend",
                        "2023295d7e02527834fb20c15058933b67e36a24"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H2.",
                        "VernacExtend",
                        "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
                    ]
                },
                {
                    "command": [
                        "destruct x0; destruct y.",
                        "VernacExtend",
                        "2ada5cb8c51429e31f571108f90a52c53f1a8ee6"
                    ]
                },
                {
                    "command": [
                        "rewrite <- elements_mapsto_iff in H1.",
                        "VernacExtend",
                        "cfeb6120047a786b767903146504686185b8879d"
                    ]
                },
                {
                    "command": [
                        "unfold O.eqke, O.ltk in *; simpl in *; destruct H3.",
                        "VernacExtend",
                        "4130db97ffa1c866cccaa18494df1bec8b3b2b6c"
                    ]
                },
                {
                    "command": [
                        "apply ME.lt_eq with x; auto.",
                        "VernacExtend",
                        "ac2e408d051e66cf0ad1699553632e81907b7dfc"
                    ]
                },
                {
                    "command": [
                        "apply H; firstorder.",
                        "VernacExtend",
                        "a600f49694fc63a669d22c97db4d4d62dc29ec2b"
                    ]
                },
                {
                    "command": [
                        "inversion H3.",
                        "VernacExtend",
                        "129aa425681b58d2ed0d3637122128b1b28fd63b"
                    ]
                },
                {
                    "command": [
                        "red; intros a; destruct a.",
                        "VernacExtend",
                        "1e346f833dc9b59966765210da71d6b6e214585f"
                    ]
                },
                {
                    "command": [
                        "rewrite InA_app_iff, InA_cons, InA_nil, <- 2 elements_mapsto_iff, find_mapsto_iff, (H0 t0), <- find_mapsto_iff, add_mapsto_iff by (auto with *).",
                        "VernacExtend",
                        "3d01108bdcb6ad8f959790d8de8d26533bbf5c42"
                    ]
                },
                {
                    "command": [
                        "unfold O.eqke; simpl.",
                        "VernacExtend",
                        "51b12888dc69cec5af6ad7f06ccb256f7a5254f6"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "destruct (E.eq_dec x t0) as [Heq|Hneq]; auto.",
                        "VernacExtend",
                        "5fc1db6eb53a22d6e11e97df2a017b7fecfd4544"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "assert (In t0 m).",
                        "VernacExtend",
                        "e19f0f3c4b77c50f04f03b9612eccf61c9538847"
                    ]
                },
                {
                    "command": [
                        "exists e0; auto.",
                        "VernacExtend",
                        "e3fc53089377ff144b9b55ee98f47a9d8b95a928"
                    ]
                },
                {
                    "command": [
                        "generalize (H t0 H1).",
                        "VernacExtend",
                        "cf8d76d3e8b28e62c2d78c781c74f8da53d1d289"
                    ]
                },
                {
                    "command": [
                        "ME.order.",
                        "VernacExtend",
                        "c6a4979a2f9a06c460fc8f868f53d77efc9fdf71"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_Add_Below",
            "line_nb": 1352,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply sort_equivlistA_eqlistA; auto with *.",
                        "VernacExtend",
                        "61aac0629b762a20d7bbc3281a438c526db00e24"
                    ]
                },
                {
                    "command": [
                        "change (sort ltk (((x,e)::nil) ++ elements m)).",
                        "VernacExtend",
                        "5c5459e36cac6d225b37bbcd07d79907e8d03c5b"
                    ]
                },
                {
                    "command": [
                        "apply (@SortA_app _ eqke); auto with *.",
                        "VernacExtend",
                        "2023295d7e02527834fb20c15058933b67e36a24"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H1.",
                        "VernacExtend",
                        "1443921cbef97c67d0bd87bf517b302257ed5b28"
                    ]
                },
                {
                    "command": [
                        "destruct y; destruct x0.",
                        "VernacExtend",
                        "f7c754b97c1977cbccb420160fa1ac4b9a5ba1cf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- elements_mapsto_iff in H2.",
                        "VernacExtend",
                        "1dc807885f136a3a712fe09667c1aaa19cff9c99"
                    ]
                },
                {
                    "command": [
                        "unfold O.eqke, O.ltk in *; simpl in *; destruct H3.",
                        "VernacExtend",
                        "4130db97ffa1c866cccaa18494df1bec8b3b2b6c"
                    ]
                },
                {
                    "command": [
                        "apply ME.eq_lt with x; auto.",
                        "VernacExtend",
                        "3a7ce76a05085d78b91ff425ac96dcf80b543ec4"
                    ]
                },
                {
                    "command": [
                        "apply H; firstorder.",
                        "VernacExtend",
                        "a600f49694fc63a669d22c97db4d4d62dc29ec2b"
                    ]
                },
                {
                    "command": [
                        "inversion H3.",
                        "VernacExtend",
                        "129aa425681b58d2ed0d3637122128b1b28fd63b"
                    ]
                },
                {
                    "command": [
                        "red; intros a; destruct a.",
                        "VernacExtend",
                        "1e346f833dc9b59966765210da71d6b6e214585f"
                    ]
                },
                {
                    "command": [
                        "rewrite InA_cons, <- 2 elements_mapsto_iff, find_mapsto_iff, (H0 t0), <- find_mapsto_iff, add_mapsto_iff by (auto with *).",
                        "VernacExtend",
                        "9cebffc5ab9080f607a009979949997ad10741db"
                    ]
                },
                {
                    "command": [
                        "unfold O.eqke; simpl.",
                        "VernacExtend",
                        "51b12888dc69cec5af6ad7f06ccb256f7a5254f6"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "destruct (E.eq_dec x t0) as [Heq|Hneq]; auto.",
                        "VernacExtend",
                        "5fc1db6eb53a22d6e11e97df2a017b7fecfd4544"
                    ]
                },
                {
                    "command": [
                        "exfalso.",
                        "VernacExtend",
                        "f6514338e7c49f3c5a647bc69b7154700a8e57f1"
                    ]
                },
                {
                    "command": [
                        "assert (In t0 m).",
                        "VernacExtend",
                        "e19f0f3c4b77c50f04f03b9612eccf61c9538847"
                    ]
                },
                {
                    "command": [
                        "exists e0; auto.",
                        "VernacExtend",
                        "e3fc53089377ff144b9b55ee98f47a9d8b95a928"
                    ]
                },
                {
                    "command": [
                        "generalize (H t0 H1).",
                        "VernacExtend",
                        "cf8d76d3e8b28e62c2d78c781c74f8da53d1d289"
                    ]
                },
                {
                    "command": [
                        "ME.order.",
                        "VernacExtend",
                        "c6a4979a2f9a06c460fc8f868f53d77efc9fdf71"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_Equal_eqlistA",
            "line_nb": 1376,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply sort_equivlistA_eqlistA; auto with *.",
                        "VernacExtend",
                        "61aac0629b762a20d7bbc3281a438c526db00e24"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "destruct x; do 2 rewrite <- elements_mapsto_iff.",
                        "VernacExtend",
                        "0e2f2560315f8955e072bb6ba14b8772ae235e7d"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite find_mapsto_iff; rewrite H; split; auto.",
                        "VernacExtend",
                        "16f643a1a10dc6ca73f2552f4987c5b710639725"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_elt_MapsTo",
            "line_nb": 1424,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold max_elt in *.",
                        "VernacExtend",
                        "c0df250b75397366108caa6ad5b843746053db57"
                    ]
                },
                {
                    "command": [
                        "rewrite elements_mapsto_iff.",
                        "VernacExtend",
                        "ca5b6d97338b6ed72041fd26d5724b6135e4be1e"
                    ]
                },
                {
                    "command": [
                        "induction (elements m).",
                        "VernacExtend",
                        "e89ab25da60062e62796ea7ea678283fc367e189"
                    ]
                },
                {
                    "command": [
                        "simpl; try discriminate.",
                        "VernacExtend",
                        "366b01787f68d402ad6cdb98e176add26a44fde3"
                    ]
                },
                {
                    "command": [
                        "destruct a; destruct l; simpl in *.",
                        "VernacExtend",
                        "d93c9870838a8c29b427c182e784eaa439520e05"
                    ]
                },
                {
                    "command": [
                        "injection H; intros; subst; constructor; red; auto.",
                        "VernacExtend",
                        "fbd268ed12297e51a5cabe270a93bb3428fedc83"
                    ]
                },
                {
                    "command": [
                        "constructor 2; auto.",
                        "VernacExtend",
                        "7da0a8caf04c8554762a019f74337cf755edf2f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_elt_Empty",
            "line_nb": 1434,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold max_elt in *.",
                        "VernacExtend",
                        "c0df250b75397366108caa6ad5b843746053db57"
                    ]
                },
                {
                    "command": [
                        "rewrite elements_Empty.",
                        "VernacExtend",
                        "d72e6d69048e425275d50ef3dc9bb2af21dd29aa"
                    ]
                },
                {
                    "command": [
                        "induction (elements m); auto.",
                        "VernacExtend",
                        "bc7d9413c6a8ae29577841177d4d2e0331dadd9b"
                    ]
                },
                {
                    "command": [
                        "destruct a; destruct l; simpl in *; try discriminate.",
                        "VernacExtend",
                        "5a9cb554e566f0f9fbc32159405dc1e71bf38646"
                    ]
                },
                {
                    "command": [
                        "assert (H':=IHl H); discriminate.",
                        "VernacExtend",
                        "6fb3359f4c480fa527a8758f629abf66841e961a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_elt_Below",
            "line_nb": 1443,
            "steps": [
                {
                    "command": [
                        "unfold min_elt, Below; intros.",
                        "VernacExtend",
                        "5c08205b8ff57b53e0a5710b3fb5c83f6fe19ff2"
                    ]
                },
                {
                    "command": [
                        "rewrite remove_in_iff in H0; destruct H0.",
                        "VernacExtend",
                        "2388382631583b951150f1ac988c1c7a784aa2a2"
                    ]
                },
                {
                    "command": [
                        "rewrite elements_in_iff in H1.",
                        "VernacExtend",
                        "81a107cfb8ecb3dbd40bf3f35d1df1653a836b8b"
                    ]
                },
                {
                    "command": [
                        "destruct H1.",
                        "VernacExtend",
                        "e752c2122f55c888e09082f784a6da990b01fbe7"
                    ]
                },
                {
                    "command": [
                        "generalize (elements_3 m).",
                        "VernacExtend",
                        "02279d62ff9b3a242b8f00b755dd306030926d60"
                    ]
                },
                {
                    "command": [
                        "destruct (elements m).",
                        "VernacExtend",
                        "b685deaadfa4e82830f7f314be2ca722d59b9774"
                    ]
                },
                {
                    "command": [
                        "try discriminate.",
                        "VernacExtend",
                        "de2bc7a3bfd97e6b5378596411010f23f6c9ff06"
                    ]
                },
                {
                    "command": [
                        "destruct p; injection H as -> ->; intros H4.",
                        "VernacExtend",
                        "d81dd2f7418ba96488a265fcd98a59bb1696554d"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H1 as [? ? H2|? ? H2].",
                        "VernacExtend",
                        "2d49ebfe9fa5814fa3af54bfe20dd838cb2c50c8"
                    ]
                },
                {
                    "command": [
                        "red in H2; destruct H2; simpl in *; ME.order.",
                        "VernacExtend",
                        "02c91429a967c5787ef39a98a39638ff2fd4397a"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H4.",
                        "VernacExtend",
                        "48216828fc957e4d634a0462fc329b427275d260"
                    ]
                },
                {
                    "command": [
                        "rename H1 into H3.",
                        "VernacExtend",
                        "774ce335f12b175ba346287596f5881ad823a8c1"
                    ]
                },
                {
                    "command": [
                        "rewrite (@InfA_alt _ eqke) in H3; eauto with *.",
                        "VernacExtend",
                        "235977c4c542e85c9b3cc93032d1c79f299f0e51"
                    ]
                },
                {
                    "command": [
                        "apply (H3 (y,x0)); auto.",
                        "VernacExtend",
                        "e49c830cc2ff8ae1fab391279a08ed9a59848f51"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_elt_MapsTo",
            "line_nb": 1459,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold min_elt in *.",
                        "VernacExtend",
                        "d737842b1d0b582e7f5facf9ca84167dd9226847"
                    ]
                },
                {
                    "command": [
                        "rewrite elements_mapsto_iff.",
                        "VernacExtend",
                        "ca5b6d97338b6ed72041fd26d5724b6135e4be1e"
                    ]
                },
                {
                    "command": [
                        "destruct (elements m).",
                        "VernacExtend",
                        "b685deaadfa4e82830f7f314be2ca722d59b9774"
                    ]
                },
                {
                    "command": [
                        "simpl; try discriminate.",
                        "VernacExtend",
                        "366b01787f68d402ad6cdb98e176add26a44fde3"
                    ]
                },
                {
                    "command": [
                        "destruct p; simpl in *.",
                        "VernacExtend",
                        "21fa2abfdaae8a18ac0ac4debd1bca139800054d"
                    ]
                },
                {
                    "command": [
                        "injection H; intros; subst; constructor; red; auto.",
                        "VernacExtend",
                        "fbd268ed12297e51a5cabe270a93bb3428fedc83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "min_elt_Empty",
            "line_nb": 1468,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold min_elt in *.",
                        "VernacExtend",
                        "d737842b1d0b582e7f5facf9ca84167dd9226847"
                    ]
                },
                {
                    "command": [
                        "rewrite elements_Empty.",
                        "VernacExtend",
                        "d72e6d69048e425275d50ef3dc9bb2af21dd29aa"
                    ]
                },
                {
                    "command": [
                        "destruct (elements m); auto.",
                        "VernacExtend",
                        "344a8cab0a252d818517af64c0c57c0d6336ca7b"
                    ]
                },
                {
                    "command": [
                        "destruct p; simpl in *; discriminate.",
                        "VernacExtend",
                        "8c4c491740e70edbb419d9b3a7ae0f77b1c3fc60"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_induction_max",
            "line_nb": 1477,
            "steps": [
                {
                    "command": [
                        "intros; remember (cardinal m) as n; revert m Heqn; induction n; intros.",
                        "VernacExtend",
                        "fc413fd982ddd1dc17c45a71ffb187352aff83d6"
                    ]
                },
                {
                    "command": [
                        "apply X; apply cardinal_inv_1; auto.",
                        "VernacExtend",
                        "8663e965504a0c3a46ee180323459b32a6672ba1"
                    ]
                },
                {
                    "command": [
                        "case_eq (max_elt m); intros.",
                        "VernacExtend",
                        "467837a3d905a842228e9d30b5edf731886bd7fd"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "assert (Add k e (remove k m) m).",
                        "VernacExtend",
                        "2b690695859899be1ae93aa2ef59b2594e953ada"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "rewrite add_o; rewrite remove_o; destruct (eq_dec k y); eauto.",
                        "VernacExtend",
                        "3d8ad5edcbca25e7ffca3aea12de907ac0851a15"
                    ]
                },
                {
                    "command": [
                        "apply find_1; apply MapsTo_1 with k; auto.",
                        "VernacExtend",
                        "d1fa3d2ec0144a9a67978925a402aa93096cee09"
                    ]
                },
                {
                    "command": [
                        "apply max_elt_MapsTo; auto.",
                        "VernacExtend",
                        "85705555ccaa124f86c08bf9f1bc54c8b2518050"
                    ]
                },
                {
                    "command": [
                        "apply X0 with (remove k m) k e; auto with map.",
                        "VernacExtend",
                        "095892020c1aa3a7ccee34b7a2efad1a987c3126"
                    ]
                },
                {
                    "command": [
                        "apply IHn.",
                        "VernacExtend",
                        "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
                    ]
                },
                {
                    "command": [
                        "assert (S n = S (cardinal (remove k m))).",
                        "VernacExtend",
                        "61b905a9030efdcebd407b5d5766448cb88c3c50"
                    ]
                },
                {
                    "command": [
                        "rewrite Heqn.",
                        "VernacExtend",
                        "0dac56d301bc88eb216c23fbe061a75f067c7267"
                    ]
                },
                {
                    "command": [
                        "eapply cardinal_2; eauto with map.",
                        "VernacExtend",
                        "909c0dc4449ba3a665011b3c7a1e09fb8253b14d"
                    ]
                },
                {
                    "command": [
                        "inversion H1; auto.",
                        "VernacExtend",
                        "06ebf8a64104aad109dacfc79a461bc7fa0773ca"
                    ]
                },
                {
                    "command": [
                        "eapply max_elt_Above; eauto.",
                        "VernacExtend",
                        "19e034c3c680219fcb79539a46e7fda64e27d4a3"
                    ]
                },
                {
                    "command": [
                        "apply X; apply max_elt_Empty; auto.",
                        "VernacExtend",
                        "9dce7f3a345be6346acc7efc02eab21495a888fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_induction_min",
            "line_nb": 1496,
            "steps": [
                {
                    "command": [
                        "intros; remember (cardinal m) as n; revert m Heqn; induction n; intros.",
                        "VernacExtend",
                        "fc413fd982ddd1dc17c45a71ffb187352aff83d6"
                    ]
                },
                {
                    "command": [
                        "apply X; apply cardinal_inv_1; auto.",
                        "VernacExtend",
                        "8663e965504a0c3a46ee180323459b32a6672ba1"
                    ]
                },
                {
                    "command": [
                        "case_eq (min_elt m); intros.",
                        "VernacExtend",
                        "944824fdf1985650c0cd9d05355646124eb5223c"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "assert (Add k e (remove k m) m).",
                        "VernacExtend",
                        "2b690695859899be1ae93aa2ef59b2594e953ada"
                    ]
                },
                {
                    "command": [
                        "red; intros.",
                        "VernacExtend",
                        "cac589df0c867c7c46c31951b6da5495d0153212"
                    ]
                },
                {
                    "command": [
                        "rewrite add_o; rewrite remove_o; destruct (eq_dec k y); eauto.",
                        "VernacExtend",
                        "3d8ad5edcbca25e7ffca3aea12de907ac0851a15"
                    ]
                },
                {
                    "command": [
                        "apply find_1; apply MapsTo_1 with k; auto.",
                        "VernacExtend",
                        "d1fa3d2ec0144a9a67978925a402aa93096cee09"
                    ]
                },
                {
                    "command": [
                        "apply min_elt_MapsTo; auto.",
                        "VernacExtend",
                        "3e467350015213ebb0eed7073160d432d601db3e"
                    ]
                },
                {
                    "command": [
                        "apply X0 with (remove k m) k e; auto.",
                        "VernacExtend",
                        "efc98984db7bb8a654cf965fe5a07ab223e9d946"
                    ]
                },
                {
                    "command": [
                        "apply IHn.",
                        "VernacExtend",
                        "1c9414f4f052b2727ca012553a4a3a2a0fc85649"
                    ]
                },
                {
                    "command": [
                        "assert (S n = S (cardinal (remove k m))).",
                        "VernacExtend",
                        "61b905a9030efdcebd407b5d5766448cb88c3c50"
                    ]
                },
                {
                    "command": [
                        "rewrite Heqn.",
                        "VernacExtend",
                        "0dac56d301bc88eb216c23fbe061a75f067c7267"
                    ]
                },
                {
                    "command": [
                        "eapply cardinal_2; eauto with map.",
                        "VernacExtend",
                        "909c0dc4449ba3a665011b3c7a1e09fb8253b14d"
                    ]
                },
                {
                    "command": [
                        "inversion H1; auto.",
                        "VernacExtend",
                        "06ebf8a64104aad109dacfc79a461bc7fa0773ca"
                    ]
                },
                {
                    "command": [
                        "eapply min_elt_Below; eauto.",
                        "VernacExtend",
                        "469794a6948c0404693f225f942085d1848c83ac"
                    ]
                },
                {
                    "command": [
                        "apply X; apply min_elt_Empty; auto.",
                        "VernacExtend",
                        "32c37bfd458e0e3442f507293cb8b8219ad00b48"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_Add_Above",
            "line_nb": 1526,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 fold_spec_right.",
                        "VernacExtend",
                        "2ecb802fbe7526806613f689f163282abe266452"
                    ]
                },
                {
                    "command": [
                        "set (f':=uncurry f).",
                        "VernacExtend",
                        "fd59eaa9f412cb9d7582b1cdaf165ca95dd6ff23"
                    ]
                },
                {
                    "command": [
                        "transitivity (fold_right f' i (rev (elements m1 ++ (x,e)::nil))).",
                        "VernacExtend",
                        "c1452049e5e0eda9a98628f8f8f02d185d636707"
                    ]
                },
                {
                    "command": [
                        "apply fold_right_eqlistA with (eqA:=eqke) (eqB:=eqA); auto.",
                        "VernacExtend",
                        "496b34e63310be20621ba05d707a28733b90d7b7"
                    ]
                },
                {
                    "command": [
                        "intros (k1,e1) (k2,e2) (Hk,He) a1 a2 Ha; unfold f'; simpl in *.",
                        "VernacExtend",
                        "e688bc85171411b1fa3eaaecb6dfad53bf2c0272"
                    ]
                },
                {
                    "command": [
                        "apply P; auto.",
                        "VernacExtend",
                        "14974419e80c9b3efee9cfd71cd171adeb80fcaf"
                    ]
                },
                {
                    "command": [
                        "apply eqlistA_rev.",
                        "VernacExtend",
                        "8cb0c2da1fcadbfeae208ed152416098f6ef693d"
                    ]
                },
                {
                    "command": [
                        "apply elements_Add_Above; auto.",
                        "VernacExtend",
                        "568fdb2de23d1784a4ae34a67be2b3be9a01ff3b"
                    ]
                },
                {
                    "command": [
                        "rewrite distr_rev; simpl.",
                        "VernacExtend",
                        "9f8328a8a454b7299382a7aad5ff2566ef819fa9"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_Add_Below",
            "line_nb": 1539,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 fold_spec_right.",
                        "VernacExtend",
                        "2ecb802fbe7526806613f689f163282abe266452"
                    ]
                },
                {
                    "command": [
                        "set (f':=uncurry f).",
                        "VernacExtend",
                        "fd59eaa9f412cb9d7582b1cdaf165ca95dd6ff23"
                    ]
                },
                {
                    "command": [
                        "transitivity (fold_right f' i (rev (((x,e)::nil)++elements m1))).",
                        "VernacExtend",
                        "241d051958902ec6f0267226623e761be801e25e"
                    ]
                },
                {
                    "command": [
                        "apply fold_right_eqlistA with (eqA:=eqke) (eqB:=eqA); auto.",
                        "VernacExtend",
                        "496b34e63310be20621ba05d707a28733b90d7b7"
                    ]
                },
                {
                    "command": [
                        "intros (k1,e1) (k2,e2) (Hk,He) a1 a2 Ha; unfold f'; simpl in *; apply P; auto.",
                        "VernacExtend",
                        "ca4b9c610e4af3b95bad0fd93a622ff81f3f3547"
                    ]
                },
                {
                    "command": [
                        "apply eqlistA_rev.",
                        "VernacExtend",
                        "8cb0c2da1fcadbfeae208ed152416098f6ef693d"
                    ]
                },
                {
                    "command": [
                        "simpl; apply elements_Add_Below; auto.",
                        "VernacExtend",
                        "c2ebdcf0bea9a8fa2b97f2d65f63518b4e2a1d0d"
                    ]
                },
                {
                    "command": [
                        "rewrite distr_rev; simpl.",
                        "VernacExtend",
                        "9f8328a8a454b7299382a7aad5ff2566ef819fa9"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_right_app.",
                        "VernacExtend",
                        "5832bcc8cb0f1c9a99f6a678a761e5f66dfa0dba"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}