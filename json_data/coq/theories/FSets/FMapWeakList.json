{
    "filename": "theories/FSets/FMapWeakList.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import FunInd FMapInterface.",
            "VernacRequire",
            "51a6dac6fe854d1418c994e63bc46d5504572191"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Module Raw (X:DecidableType).",
            "VernacDefineModule",
            "8d8739bf740bc760bef614d495a00d89a2901c77"
        ],
        [
            "Module Import PX := KeyDecidableType X.",
            "VernacDefineModule",
            "d80341d0a8cf24204da827bc4cc8dd4579824186"
        ],
        [
            "Definition key := X.t.",
            "VernacDefinition",
            "a4017bb4ea3d793c2c3a043de86c8620ded974b2"
        ],
        [
            "Definition t (elt:Type) := list (X.t * elt).",
            "VernacDefinition",
            "46756173586224cadcfffa2ea8e87823adc14e08"
        ],
        [
            "Section Elt.",
            "VernacBeginSection",
            "7d8c2b7c85358610d3707ffaa378f25da37c746b"
        ],
        [
            "Variable elt : Type.",
            "VernacAssumption",
            "b310aa6dfd45260477c670b93268036cda9cb86b"
        ],
        [
            "Notation eqk := (eqk (elt:=elt)).",
            "VernacSyntacticDefinition",
            "d89daf6fd4f3a0eb0cf0294e852a690072abde2d"
        ],
        [
            "Notation eqke := (eqke (elt:=elt)).",
            "VernacSyntacticDefinition",
            "337dba8ab89c6914cce7e3b1d0e5e2339809985f"
        ],
        [
            "Notation MapsTo := (MapsTo (elt:=elt)).",
            "VernacSyntacticDefinition",
            "0664243e463c411778e5e9253fdf60e7e6d3915e"
        ],
        [
            "Notation In := (In (elt:=elt)).",
            "VernacSyntacticDefinition",
            "29a99081fe2561f7d4c6983844b70486843f2f0e"
        ],
        [
            "Notation NoDupA := (NoDupA eqk).",
            "VernacSyntacticDefinition",
            "95d24f2374784a854c413cb87d1e2ec0bd9e3938"
        ],
        [
            "Definition empty : t elt := nil.",
            "VernacDefinition",
            "a741302bd487209b97a485b4f8eae35647af54ea"
        ],
        [
            "Definition Empty m := forall (a : key)(e:elt), ~ MapsTo a e m.",
            "VernacDefinition",
            "8d194df0e3c0baf7ef86194fa2dae620855a84ff"
        ],
        [
            "Lemma empty_1 : Empty empty.",
            "VernacStartTheoremProof",
            "7522f2b7a60d5493f09b33f63d37755f64932135"
        ],
        [
            "unfold Empty,empty.",
            "VernacExtend",
            "eb0f006317d2339d04026b9a0bcb2e2a59e57e24"
        ],
        [
            "intros a e.",
            "VernacExtend",
            "a0b71b763c6981cfc7e8f20bed193a1a863b36d3"
        ],
        [
            "intro abs.",
            "VernacExtend",
            "507faad5f60d8bacbff74bbb8b97320ddc30b274"
        ],
        [
            "inversion abs.",
            "VernacExtend",
            "09d03e9db7724be33019ea71216bb4ca7b9eded9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve empty_1.",
            "VernacHints",
            "34f7cd002a319971d84cbca6da2920b24d9352b3"
        ],
        [
            "Lemma empty_NoDup : NoDupA empty.",
            "VernacStartTheoremProof",
            "42072ed5b56bc9ebd8bc10dfe665893b0d184b6d"
        ],
        [
            "unfold empty; auto.",
            "VernacExtend",
            "a2693eb12ba268d474a985e95db0bb58ccb52aa5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition is_empty (l : t elt) : bool := if l then true else false.",
            "VernacDefinition",
            "ed033a5118798d2b6399d163ba4c79f1150b623c"
        ],
        [
            "Lemma is_empty_1 :forall m, Empty m -> is_empty m = true.",
            "VernacStartTheoremProof",
            "628b7ce292bdf73b2cba9ef8febb80dbce9ab9ca"
        ],
        [
            "unfold Empty, PX.MapsTo.",
            "VernacExtend",
            "f811512a5732e625d0492212123e45f1641edc82"
        ],
        [
            "intros m.",
            "VernacExtend",
            "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
        ],
        [
            "case m;auto.",
            "VernacExtend",
            "03d32148bea2d780819ccfe565dcc700b7cdbbd0"
        ],
        [
            "intros p l inlist.",
            "VernacExtend",
            "349d13e083de16f5eb886e3a4d34f1ab9e950355"
        ],
        [
            "destruct p.",
            "VernacExtend",
            "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
        ],
        [
            "absurd (InA eqke (t0, e) ((t0, e) :: l));auto.",
            "VernacExtend",
            "527d60aca9613ec67cd7849ec5f89fc739682c1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_empty_2 : forall m, is_empty m = true -> Empty m.",
            "VernacStartTheoremProof",
            "0f82c7c668abe77d36ee9dc489312870431944e3"
        ],
        [
            "intros m.",
            "VernacExtend",
            "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
        ],
        [
            "case m;auto.",
            "VernacExtend",
            "03d32148bea2d780819ccfe565dcc700b7cdbbd0"
        ],
        [
            "intros p l abs.",
            "VernacExtend",
            "93d9f615c2d1c8ec6b31fd6b6adacc8d058385da"
        ],
        [
            "inversion abs.",
            "VernacExtend",
            "09d03e9db7724be33019ea71216bb4ca7b9eded9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Function mem (k : key) (s : t elt) {struct s} : bool := match s with | nil => false | (k',_) :: l => if X.eq_dec k k' then true else mem k l end.",
            "VernacExtend",
            "0f1e50a63ab27bfc2367b47ab8f11a81884f6e70"
        ],
        [
            "Lemma mem_1 : forall m (Hm:NoDupA m) x, In x m -> mem x m = true.",
            "VernacStartTheoremProof",
            "48ab7563739c415eda7d736fdfcee73b53df65cf"
        ],
        [
            "intros m Hm x; generalize Hm; clear Hm.",
            "VernacExtend",
            "f18c7dd61905fc14282e611703a08b845daf8edf"
        ],
        [
            "functional induction (mem x m);intros NoDup belong1;trivial.",
            "VernacExtend",
            "b6e35cc3297a98ad0e4162ccb5755e037d24ed34"
        ],
        [
            "inversion belong1.",
            "VernacExtend",
            "96e7d80255a8e42eb916d9f41f72c866f32e7ea8"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "inversion_clear NoDup.",
            "VernacExtend",
            "56a5fae3935f2e230e0b662fe691bf2296812203"
        ],
        [
            "inversion_clear belong1.",
            "VernacExtend",
            "df4c127af0bbba84e8c7b4f48cb1031add1f45c9"
        ],
        [
            "inversion_clear H1.",
            "VernacExtend",
            "1443921cbef97c67d0bd87bf517b302257ed5b28"
        ],
        [
            "compute in H2; destruct H2.",
            "VernacExtend",
            "a20b940b220091c439fe9719a6e03273448630e6"
        ],
        [
            "contradiction.",
            "VernacExtend",
            "9b6a5c45e1144cbbccd544effb2a97082518704a"
        ],
        [
            "apply IHb; auto.",
            "VernacExtend",
            "3b7c96110dcf8d2188a60ff409007debb7175f5d"
        ],
        [
            "exists x0; auto.",
            "VernacExtend",
            "22d688388e0f7182748449b589a97b3a426b8fee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_2 : forall m (Hm:NoDupA m) x, mem x m = true -> In x m.",
            "VernacStartTheoremProof",
            "3534b799bb9bfead23b3359a12446a2a886fba20"
        ],
        [
            "intros m Hm x; generalize Hm; clear Hm; unfold PX.In,PX.MapsTo.",
            "VernacExtend",
            "817ee83099bde99ced43bbc047fbd740bf4ba98f"
        ],
        [
            "functional induction (mem x m); intros NoDup hyp; try discriminate.",
            "VernacExtend",
            "1150b2876581cbd2c2def52139acadc667d42174"
        ],
        [
            "exists _x; auto.",
            "VernacExtend",
            "1425ae5ada92bf0f458dbe9e15d130ade72c23c6"
        ],
        [
            "inversion_clear NoDup.",
            "VernacExtend",
            "56a5fae3935f2e230e0b662fe691bf2296812203"
        ],
        [
            "destruct IHb; auto.",
            "VernacExtend",
            "ae8f580ff5c28809c4f3f64ab3b8a099f1fb3a94"
        ],
        [
            "exists x0; auto.",
            "VernacExtend",
            "22d688388e0f7182748449b589a97b3a426b8fee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Function find (k:key) (s: t elt) {struct s} : option elt := match s with | nil => None | (k',x)::s' => if X.eq_dec k k' then Some x else find k s' end.",
            "VernacExtend",
            "2fe1ccff8462c46f725979af06ef42f5d96dcf63"
        ],
        [
            "Lemma find_2 : forall m x e, find x m = Some e -> MapsTo x e m.",
            "VernacStartTheoremProof",
            "3836b618816ed2c6e9ccfed50231b9f4c0fdd2c0"
        ],
        [
            "intros m x.",
            "VernacExtend",
            "4bd0685a13944a2f9bdd9e3eba948dc74ae31a96"
        ],
        [
            "unfold PX.MapsTo.",
            "VernacExtend",
            "34dc055e556ce116d7d0386cccc9a1e8df521b0e"
        ],
        [
            "functional induction (find x m);simpl;intros e' eqfind; inversion eqfind; auto.",
            "VernacExtend",
            "82c449c0310020b93cc0d7e02cbd7a50acf912f9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_1 : forall m (Hm:NoDupA m) x e, MapsTo x e m -> find x m = Some e.",
            "VernacStartTheoremProof",
            "59658813e92c65d2eee08cb70bd379b4a61757a1"
        ],
        [
            "intros m Hm x e; generalize Hm; clear Hm; unfold PX.MapsTo.",
            "VernacExtend",
            "cf2abd3f82d69560f971d3e402d870aef42f3124"
        ],
        [
            "functional induction (find x m);simpl; subst; try clear H_eq_1.",
            "VernacExtend",
            "82a78af2c571abd263c23e970241532a40fe6f8f"
        ],
        [
            "inversion 2.",
            "VernacExtend",
            "9b1e056b41fea71e2db9d8977c86e79e382f15d7"
        ],
        [
            "do 2 inversion_clear 1.",
            "VernacExtend",
            "f5198afd93477309cb1cfb9a3ee4c8c8026f6631"
        ],
        [
            "compute in H2; destruct H2; subst; trivial.",
            "VernacExtend",
            "1e4ccc0fdeb33c2942cb81b12f3782eff9c06d33"
        ],
        [
            "elim H; apply InA_eqk with (x,e); auto.",
            "VernacExtend",
            "3819b3d5a483a8db6505bf9727a79a7656f69535"
        ],
        [
            "do 2 inversion_clear 1; auto.",
            "VernacExtend",
            "d63952efec2adb75eb850b2fffc505b4900d923a"
        ],
        [
            "compute in H2; destruct H2; elim _x; auto.",
            "VernacExtend",
            "2400df925ad06773a1ed922fdc8a4a70eecb555f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_eq : forall m (Hm:NoDupA m) x x', X.eq x x' -> find x m = find x' m.",
            "VernacStartTheoremProof",
            "d72f5fc50ccfca3f2e19147b0203008e42e67f38"
        ],
        [
            "induction m; simpl; auto; destruct a; intros.",
            "VernacExtend",
            "ebae245b87fee3e5f993ca95083ac19cd336c512"
        ],
        [
            "inversion_clear Hm.",
            "VernacExtend",
            "ec3cc4482f86f8fa18b7399a6519331c51c1bbae"
        ],
        [
            "rewrite (IHm H1 x x'); auto.",
            "VernacExtend",
            "b65e130fde6a7be73487990400b5cc339c80f2b3"
        ],
        [
            "destruct (X.eq_dec x t0) as [|Hneq]; destruct (X.eq_dec x' t0) as [|?Hneq']; trivial.",
            "VernacExtend",
            "2488be561738fee932b5ffecaa721e67c2f793da"
        ],
        [
            "elim Hneq'; apply X.eq_trans with x; auto.",
            "VernacExtend",
            "53345434ba3fd8fa10887fa9cd2a600339874cb3"
        ],
        [
            "elim Hneq; apply X.eq_trans with x'; auto.",
            "VernacExtend",
            "bc4bcb6f47e22a4bb2a31d266ffe11d573c3f525"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Function add (k : key) (x : elt) (s : t elt) {struct s} : t elt := match s with | nil => (k,x) :: nil | (k',y) :: l => if X.eq_dec k k' then (k,x)::l else (k',y)::add k x l end.",
            "VernacExtend",
            "9c644c36c9dea8f25d43d96d53c1af6a4521623a"
        ],
        [
            "Lemma add_1 : forall m x y e, X.eq x y -> MapsTo y e (add x e m).",
            "VernacStartTheoremProof",
            "932ff7bccdd1343ad94ba9db038c47434066b858"
        ],
        [
            "intros m x y e; generalize y; clear y; unfold PX.MapsTo.",
            "VernacExtend",
            "afb1faabf190aa10d12283628113d0bca41229a9"
        ],
        [
            "functional induction (add x e m);simpl;auto.",
            "VernacExtend",
            "09ceacb307c5d2f21069ac505071480e19f39d4d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_2 : forall m x y e e', ~ X.eq x y -> MapsTo y e m -> MapsTo y e (add x e' m).",
            "VernacStartTheoremProof",
            "3a492bba8b8eadf655f456fd9c0a98e7d64b8aa0"
        ],
        [
            "intros m x y e e'; generalize y e; clear y e; unfold PX.MapsTo.",
            "VernacExtend",
            "a06a2a080b29371a36d92159e381d0275cb72908"
        ],
        [
            "functional induction (add x e' m);simpl;auto.",
            "VernacExtend",
            "45543b9ad624a98523fa5f6dcbe98e232c90eed2"
        ],
        [
            "intros y' e'' eqky'; inversion_clear 1.",
            "VernacExtend",
            "a5c48c6f85a029ac679c9098b0d3fc3c387b1b50"
        ],
        [
            "destruct H0; simpl in *.",
            "VernacExtend",
            "ab12333ccab3c8ca5851593f04b1522b6e052fca"
        ],
        [
            "elim eqky'; apply X.eq_trans with k'; auto.",
            "VernacExtend",
            "55dec3dfd700e085b7c58930ec6d52175e3f3737"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "intros y' e'' eqky'; inversion_clear 1; intuition.",
            "VernacExtend",
            "ac720bab8eb4ae790f550e2d7031d6f1228a5800"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_3 : forall m x y e e', ~ X.eq x y -> MapsTo y e (add x e' m) -> MapsTo y e m.",
            "VernacStartTheoremProof",
            "72bbe5e646093de0c6bab38833f38727a01bf774"
        ],
        [
            "intros m x y e e'.",
            "VernacExtend",
            "7da8d1fee9a14515bb3c4fb4b892322dea23acda"
        ],
        [
            "generalize y e; clear y e; unfold PX.MapsTo.",
            "VernacExtend",
            "120c259b5d8e5e7c14cb7c61cae725afeda3302d"
        ],
        [
            "functional induction (add x e' m);simpl;auto.",
            "VernacExtend",
            "45543b9ad624a98523fa5f6dcbe98e232c90eed2"
        ],
        [
            "intros; apply (In_inv_3 H0); auto.",
            "VernacExtend",
            "ca99b6f14152c3122226d2092da59de3bdbec1ac"
        ],
        [
            "constructor 2; apply (In_inv_3 H0); auto.",
            "VernacExtend",
            "6e2207643f061bdc07d360d9dcbb4dc122916f3a"
        ],
        [
            "inversion_clear 2; auto.",
            "VernacExtend",
            "bc290f7b6503e8551b729a4ab8600b7e030b2922"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_3' : forall m x y e e', ~ X.eq x y -> InA eqk (y,e) (add x e' m) -> InA eqk (y,e) m.",
            "VernacStartTheoremProof",
            "2418566fbf83bb9ee2ceb4c340ac9a09388119a5"
        ],
        [
            "intros m x y e e'.",
            "VernacExtend",
            "7da8d1fee9a14515bb3c4fb4b892322dea23acda"
        ],
        [
            "generalize y e; clear y e.",
            "VernacExtend",
            "14f89bd7dd5f608c3c390fc3e553d73126cad3dd"
        ],
        [
            "functional induction (add x e' m);simpl;auto.",
            "VernacExtend",
            "45543b9ad624a98523fa5f6dcbe98e232c90eed2"
        ],
        [
            "inversion_clear 2.",
            "VernacExtend",
            "2e0ae6be1fbdb7dadf1dd309278899532b35fe99"
        ],
        [
            "compute in H1; elim H; auto.",
            "VernacExtend",
            "d820da44738ad3658e529fa4492ad6f4b1be50c7"
        ],
        [
            "inversion H1.",
            "VernacExtend",
            "58dee2cce9b13b50b065ba894c1b533413715754"
        ],
        [
            "constructor 2; inversion_clear H0; auto.",
            "VernacExtend",
            "3b0e15a368bbfa43ee71ecc5ec215d338d451502"
        ],
        [
            "compute in H1; elim H; auto.",
            "VernacExtend",
            "d820da44738ad3658e529fa4492ad6f4b1be50c7"
        ],
        [
            "inversion_clear 2; auto.",
            "VernacExtend",
            "bc290f7b6503e8551b729a4ab8600b7e030b2922"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_NoDup : forall m (Hm:NoDupA m) x e, NoDupA (add x e m).",
            "VernacStartTheoremProof",
            "707983d3a65fda2b1f79964bc287a8eedc5f6f33"
        ],
        [
            "induction m.",
            "VernacExtend",
            "6f6279e892ad221278939a9b429a59edaeeb1676"
        ],
        [
            "simpl; constructor; auto; red; inversion 1.",
            "VernacExtend",
            "9e8ba66cbffc530834341508abe402fa1b1db0cd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct a as (x',e').",
            "VernacExtend",
            "764c310807bc567724a7a3a14ff3afd5a32c8635"
        ],
        [
            "simpl; case (X.eq_dec x x'); inversion_clear Hm; auto.",
            "VernacExtend",
            "1f0c1bc90916997acfd4fc1b53a551b1c3755bbc"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply InA_eqk with (x,e); auto.",
            "VernacExtend",
            "88583e7b05e1bb1b7222fd204d082f90fc46727a"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "contradict H; apply add_3' with x e; auto.",
            "VernacExtend",
            "5e3853da4ef1fef744a033795629768b962017ed"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_eq : forall m (Hm:NoDupA m) x a e, X.eq x a -> find x (add a e m) = Some e.",
            "VernacStartTheoremProof",
            "0e09e01c46d6bfadd5cc928e134b97bab87bd5da"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply find_1; auto.",
            "VernacExtend",
            "fbc62f085a9b001085e937996a14400269b19beb"
        ],
        [
            "apply add_NoDup; auto.",
            "VernacExtend",
            "138dc9d85af6055547ea0848722efdb22822480c"
        ],
        [
            "apply add_1; auto.",
            "VernacExtend",
            "5b033b822b1e698507f2fd2dd2418d0f846a350f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_not_eq : forall m (Hm:NoDupA m) x a e, ~X.eq x a -> find x (add a e m) = find x m.",
            "VernacStartTheoremProof",
            "18110b06142e3139105798ecdeece8a5e86f63df"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (find x m); intros.",
            "VernacExtend",
            "ffd164e20a1af7b3d5c82ccac45d044379f151e3"
        ],
        [
            "apply find_1; auto.",
            "VernacExtend",
            "fbc62f085a9b001085e937996a14400269b19beb"
        ],
        [
            "apply add_NoDup; auto.",
            "VernacExtend",
            "138dc9d85af6055547ea0848722efdb22822480c"
        ],
        [
            "apply add_2; auto.",
            "VernacExtend",
            "8663103388d6bf3c5509b91030359b3dfe3426fb"
        ],
        [
            "apply find_2; auto.",
            "VernacExtend",
            "56e9131934083edf2be54c3a1dec9cdb05243df6"
        ],
        [
            "case_eq (find x (add a e m)); intros; auto.",
            "VernacExtend",
            "5ceb1be791b2d5ec8bdde392834445297182bcc3"
        ],
        [
            "rewrite <- H0; symmetry.",
            "VernacExtend",
            "77d545d842b10d883bbe9485103a99e3276f6248"
        ],
        [
            "apply find_1; auto.",
            "VernacExtend",
            "fbc62f085a9b001085e937996a14400269b19beb"
        ],
        [
            "apply add_3 with a e; auto.",
            "VernacExtend",
            "e24362780dadbdd1ca14236709bce0996ea63062"
        ],
        [
            "apply find_2; auto.",
            "VernacExtend",
            "56e9131934083edf2be54c3a1dec9cdb05243df6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Function remove (k : key) (s : t elt) {struct s} : t elt := match s with | nil => nil | (k',x) :: l => if X.eq_dec k k' then l else (k',x) :: remove k l end.",
            "VernacExtend",
            "b8fecc5e8dd067cc389118de68d087d929507d76"
        ],
        [
            "Lemma remove_1 : forall m (Hm:NoDupA m) x y, X.eq x y -> ~ In y (remove x m).",
            "VernacStartTheoremProof",
            "48cee3d3dca69658cf0a80ec5c61256bb185dd19"
        ],
        [
            "intros m Hm x y; generalize Hm; clear Hm.",
            "VernacExtend",
            "7e57e28224aacfbcfde15b82a89d81ee1495355c"
        ],
        [
            "functional induction (remove x m);simpl;intros;auto.",
            "VernacExtend",
            "82bedd5a64ec43debb8bc8f604bb1dc1e4c99226"
        ],
        [
            "red; inversion 1; inversion H1.",
            "VernacExtend",
            "2916fd2a82f740a86f32c032d82e3b61b6840ed3"
        ],
        [
            "inversion_clear Hm.",
            "VernacExtend",
            "ec3cc4482f86f8fa18b7399a6519331c51c1bbae"
        ],
        [
            "subst.",
            "VernacExtend",
            "ccc9cb848804101be22a0bb6c324861981c5c7f1"
        ],
        [
            "contradict H0.",
            "VernacExtend",
            "e9276d92c17ea182f1ef13aa74464b33eea923d9"
        ],
        [
            "destruct H0 as (e,H2); unfold PX.MapsTo in H2.",
            "VernacExtend",
            "9251d8b48c981c494e5343d525cdbf877fba595f"
        ],
        [
            "apply InA_eqk with (y,e); auto.",
            "VernacExtend",
            "bff9d59ed6c6d4cbbbf4ba1e870cc8570405e1d5"
        ],
        [
            "compute; apply X.eq_trans with x; auto.",
            "VernacExtend",
            "1ed51b0e99f87436f74ceb4cdc41479a0ce0fb7f"
        ],
        [
            "intro H2.",
            "VernacExtend",
            "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
        ],
        [
            "destruct H2 as (e,H2); inversion_clear H2.",
            "VernacExtend",
            "601db57ae7c82255f017184f5cacb1da9e36a641"
        ],
        [
            "compute in H0; destruct H0.",
            "VernacExtend",
            "669ac2767880b14b934068697ca8c9703a6746fd"
        ],
        [
            "elim _x; apply X.eq_trans with y; auto.",
            "VernacExtend",
            "e395cb99a3dd9195da0dc9abdb40dcea7cf7f7f6"
        ],
        [
            "inversion_clear Hm.",
            "VernacExtend",
            "ec3cc4482f86f8fa18b7399a6519331c51c1bbae"
        ],
        [
            "elim (IHt0 H2 H).",
            "VernacExtend",
            "b2074adc442667e6a163f06ef7dbc2a03165497d"
        ],
        [
            "exists e; auto.",
            "VernacExtend",
            "5789629a110c642815687c3512a8c438259c58a1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_2 : forall m (Hm:NoDupA m) x y e, ~ X.eq x y -> MapsTo y e m -> MapsTo y e (remove x m).",
            "VernacStartTheoremProof",
            "986a5a94183345c1ce048a8228fbee05cd794b35"
        ],
        [
            "intros m Hm x y e; generalize Hm; clear Hm; unfold PX.MapsTo.",
            "VernacExtend",
            "860a414a274febe2f320984c3fea05969985e792"
        ],
        [
            "functional induction (remove x m);auto.",
            "VernacExtend",
            "43bee9362fa9e33ce6ef4379b65c6448901c69b2"
        ],
        [
            "inversion_clear 3; auto.",
            "VernacExtend",
            "4682c14a4dedb52f2c05be0350a0f56248aabd7c"
        ],
        [
            "compute in H1; destruct H1.",
            "VernacExtend",
            "21ca49af7da13c7348f1f2230259a8179d80e279"
        ],
        [
            "elim H; apply X.eq_trans with k'; auto.",
            "VernacExtend",
            "d1db2345a2e01473c144ab08c804407db5901ec0"
        ],
        [
            "inversion_clear 1; inversion_clear 2; auto.",
            "VernacExtend",
            "21853d67aa30512f79c173c9850895adc328e356"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_3 : forall m (Hm:NoDupA m) x y e, MapsTo y e (remove x m) -> MapsTo y e m.",
            "VernacStartTheoremProof",
            "e666f92c21632f9a525f2e4cb4eec6f0135c8e61"
        ],
        [
            "intros m Hm x y e; generalize Hm; clear Hm; unfold PX.MapsTo.",
            "VernacExtend",
            "860a414a274febe2f320984c3fea05969985e792"
        ],
        [
            "functional induction (remove x m);auto.",
            "VernacExtend",
            "43bee9362fa9e33ce6ef4379b65c6448901c69b2"
        ],
        [
            "do 2 inversion_clear 1; auto.",
            "VernacExtend",
            "d63952efec2adb75eb850b2fffc505b4900d923a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_3' : forall m (Hm:NoDupA m) x y e, InA eqk (y,e) (remove x m) -> InA eqk (y,e) m.",
            "VernacStartTheoremProof",
            "9daa1bbb4f2a4703a79a0e291e16b84819bf24ff"
        ],
        [
            "intros m Hm x y e; generalize Hm; clear Hm; unfold PX.MapsTo.",
            "VernacExtend",
            "860a414a274febe2f320984c3fea05969985e792"
        ],
        [
            "functional induction (remove x m);auto.",
            "VernacExtend",
            "43bee9362fa9e33ce6ef4379b65c6448901c69b2"
        ],
        [
            "do 2 inversion_clear 1; auto.",
            "VernacExtend",
            "d63952efec2adb75eb850b2fffc505b4900d923a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_NoDup : forall m (Hm:NoDupA m) x, NoDupA (remove x m).",
            "VernacStartTheoremProof",
            "6ea9fcf7e34da8880062fb90eff076766f69d5d6"
        ],
        [
            "induction m.",
            "VernacExtend",
            "6f6279e892ad221278939a9b429a59edaeeb1676"
        ],
        [
            "simpl; intuition.",
            "VernacExtend",
            "2a8f84ed3abedbe9d9fbb80aa4215114cbdbe500"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "inversion_clear Hm.",
            "VernacExtend",
            "ec3cc4482f86f8fa18b7399a6519331c51c1bbae"
        ],
        [
            "destruct a as (x',e').",
            "VernacExtend",
            "764c310807bc567724a7a3a14ff3afd5a32c8635"
        ],
        [
            "simpl; case (X.eq_dec x x'); auto.",
            "VernacExtend",
            "af0b9369d146fa173c1e84f24ed47dce8ffad91e"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "contradict H; apply remove_3' with x; auto.",
            "VernacExtend",
            "ea2ccae98aac03c4c091b0cb4edf55e9790861c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition elements (m: t elt) := m.",
            "VernacDefinition",
            "352bb441032ae3f7cbcd8be62c72b2938fe9a1bb"
        ],
        [
            "Lemma elements_1 : forall m x e, MapsTo x e m -> InA eqke (x,e) (elements m).",
            "VernacStartTheoremProof",
            "6b488942658c4beefe6c1cefd3aa87676106cc83"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_2 : forall m x e, InA eqke (x,e) (elements m) -> MapsTo x e m.",
            "VernacStartTheoremProof",
            "5cf23fc6dd4625c9bb0bba9373dbeb2970c52904"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_3w : forall m (Hm:NoDupA m), NoDupA (elements m).",
            "VernacStartTheoremProof",
            "48c1d358e6084ded846a3c8cf894c79251b139ac"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Function fold (A:Type)(f:key->elt->A->A)(m:t elt) (acc : A) {struct m} : A := match m with | nil => acc | (k,e)::m' => fold f m' (f k e acc) end.",
            "VernacExtend",
            "de190190c8dd7300dc4320222f9632b5ba4d61e8"
        ],
        [
            "Lemma fold_1 : forall m (A:Type)(i:A)(f:key->elt->A->A), fold f m i = fold_left (fun a p => f (fst p) (snd p) a) (elements m) i.",
            "VernacStartTheoremProof",
            "3f9eccb77601fb87dcbc813fae883044a2c866f5"
        ],
        [
            "intros; functional induction (@fold A f m i); auto.",
            "VernacExtend",
            "2cfe3197bd2d70659964ede35c8d0f2bd4d58855"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition check (cmp : elt -> elt -> bool)(k:key)(e:elt)(m': t elt) := match find k m' with | None => false | Some e' => cmp e e' end.",
            "VernacDefinition",
            "ff27155cb0bd9766360060f168e0e47f866503f4"
        ],
        [
            "Definition submap (cmp : elt -> elt -> bool)(m m' : t elt) : bool := fold (fun k e b => andb (check cmp k e m') b) m true.",
            "VernacDefinition",
            "5bf46958a37d59e9e9b1f8ab5fcf7629793896f0"
        ],
        [
            "Definition equal (cmp : elt -> elt -> bool)(m m' : t elt) : bool := andb (submap cmp m m') (submap (fun e' e => cmp e e') m' m).",
            "VernacDefinition",
            "c3529c19ffe81d97081704abe1288692dc6f7623"
        ],
        [
            "Definition Submap cmp m m' := (forall k, In k m -> In k m') /\\ (forall k e e', MapsTo k e m -> MapsTo k e' m' -> cmp e e' = true).",
            "VernacDefinition",
            "4b9e6da153329633a5c66eec4f5f2ddfc0ff765b"
        ],
        [
            "Definition Equivb cmp m m' := (forall k, In k m <-> In k m') /\\ (forall k e e', MapsTo k e m -> MapsTo k e' m' -> cmp e e' = true).",
            "VernacDefinition",
            "1f6cf4c9ce7ab8c8940a39ac957ad5ad63d97dd3"
        ],
        [
            "Lemma submap_1 : forall m (Hm:NoDupA m) m' (Hm': NoDupA m') cmp, Submap cmp m m' -> submap cmp m m' = true.",
            "VernacStartTheoremProof",
            "a1528539c7511ef636a430730083e5d0fdf21d41"
        ],
        [
            "unfold Submap, submap.",
            "VernacExtend",
            "cfde2c5ae2a954079045beade78a48a14667869b"
        ],
        [
            "induction m.",
            "VernacExtend",
            "6f6279e892ad221278939a9b429a59edaeeb1676"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "destruct a; simpl; intros.",
            "VernacExtend",
            "4e49b6b3b5abaf277bf3b6da7299270661478196"
        ],
        [
            "destruct H.",
            "VernacExtend",
            "8b2bca015429da94c456243b461e17a2a0582c40"
        ],
        [
            "inversion_clear Hm.",
            "VernacExtend",
            "ec3cc4482f86f8fa18b7399a6519331c51c1bbae"
        ],
        [
            "assert (H3 : In t0 m').",
            "VernacExtend",
            "656d2fabdd733da6c024b68e71be6c258b34768e"
        ],
        [
            "apply H; exists e; auto.",
            "VernacExtend",
            "d50a045ba5ba08d3d579df817a9bf810f0a5fcbb"
        ],
        [
            "destruct H3 as (e', H3).",
            "VernacExtend",
            "433c5c118374f60f1840495f94d43d9b31b5a81b"
        ],
        [
            "unfold check at 2; rewrite (find_1 Hm' H3).",
            "VernacExtend",
            "6574c13346a6765ca9038092a07a2f8a967f6a2b"
        ],
        [
            "rewrite (H0 t0); simpl; auto.",
            "VernacExtend",
            "11e00be74a6faf0fa276bc0ce6ae795725203fb0"
        ],
        [
            "eapply IHm; auto.",
            "VernacExtend",
            "2c03d86f95e7e20289469415a81d3361e298d82f"
        ],
        [
            "split; intuition.",
            "VernacExtend",
            "ad92f41c7c6120efbfc528c4c895eac1600e6297"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "destruct H5 as (e'',H5); exists e''; auto.",
            "VernacExtend",
            "89da297bc412eafe7b63b7ac524ac82a1351f77a"
        ],
        [
            "apply H0 with k; auto.",
            "VernacExtend",
            "0cdccdbf6ef798296f354832c7689d10c8be93cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma submap_2 : forall m (Hm:NoDupA m) m' (Hm': NoDupA m') cmp, submap cmp m m' = true -> Submap cmp m m'.",
            "VernacStartTheoremProof",
            "66cfc2cd355791de1ae0d6741bc81afc4fc9b368"
        ],
        [
            "unfold Submap, submap.",
            "VernacExtend",
            "cfde2c5ae2a954079045beade78a48a14667869b"
        ],
        [
            "induction m.",
            "VernacExtend",
            "6f6279e892ad221278939a9b429a59edaeeb1676"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "destruct H0; inversion H0.",
            "VernacExtend",
            "74973f71f4282ded413008096923957ee00b8f4a"
        ],
        [
            "inversion H0.",
            "VernacExtend",
            "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
        ],
        [
            "destruct a; simpl; intros.",
            "VernacExtend",
            "4e49b6b3b5abaf277bf3b6da7299270661478196"
        ],
        [
            "inversion_clear Hm.",
            "VernacExtend",
            "ec3cc4482f86f8fa18b7399a6519331c51c1bbae"
        ],
        [
            "rewrite andb_b_true in H.",
            "VernacExtend",
            "bcd0ea41d9fb93287790cd201f00899afe5dd453"
        ],
        [
            "assert (check cmp t0 e m' = true).",
            "VernacExtend",
            "f86a3d437df69576d8842fdc6969e581e7b46610"
        ],
        [
            "clear H1 H0 Hm' IHm.",
            "VernacExtend",
            "0d23868da10c33828e71f3a43f626f41a208008c"
        ],
        [
            "set (b:=check cmp t0 e m') in *.",
            "VernacExtend",
            "3324d0722957f730e3c122a47664c3d3afceaa2e"
        ],
        [
            "generalize H; clear H; generalize b; clear b.",
            "VernacExtend",
            "bfc05e785ee20c3d01a95fed48730af15a42f7b9"
        ],
        [
            "induction m; simpl; auto; intros.",
            "VernacExtend",
            "6cc44e2cf968f6d1111d6be72d9944cc2c307dcc"
        ],
        [
            "destruct a; simpl in *.",
            "VernacExtend",
            "f16ce63ce10cf4add043d122c2aa557e3f699d02"
        ],
        [
            "destruct (andb_prop _ _ (IHm _ H)); auto.",
            "VernacExtend",
            "a88d61b0a5bf3dc5e603f098cf4586f5dd436d5c"
        ],
        [
            "rewrite H2 in H.",
            "VernacExtend",
            "5c57065bc35a25df99bc7f4746a61a8b7705ac48"
        ],
        [
            "destruct (IHm H1 m' Hm' cmp H); auto.",
            "VernacExtend",
            "904b04cd592c52db96d64c582bf2e2fdceca99c2"
        ],
        [
            "unfold check in H2.",
            "VernacExtend",
            "556a89af1709dd6bbf730a84073797e20a4f7b80"
        ],
        [
            "case_eq (find t0 m'); [intros e' H5 | intros H5]; rewrite H5 in H2; try discriminate.",
            "VernacExtend",
            "3062cba74e67ccef1723835ada0e92f937caf921"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "destruct H6 as (e0,H6); inversion_clear H6.",
            "VernacExtend",
            "5cfe1a55cccdbe48102418f3790c1aa0baaa1ef3"
        ],
        [
            "compute in H7; destruct H7; subst.",
            "VernacExtend",
            "08cd7e15312a2431c1793c830552e8c3350a535c"
        ],
        [
            "exists e'.",
            "VernacExtend",
            "a668b65063a69e3331e3f3a09838f057d45d4c4e"
        ],
        [
            "apply PX.MapsTo_eq with t0; auto.",
            "VernacExtend",
            "f48833ec96213e6085c011c4eae6e3a0400bf7a0"
        ],
        [
            "apply find_2; auto.",
            "VernacExtend",
            "56e9131934083edf2be54c3a1dec9cdb05243df6"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "exists e0; auto.",
            "VernacExtend",
            "e3fc53089377ff144b9b55ee98f47a9d8b95a928"
        ],
        [
            "inversion_clear H6.",
            "VernacExtend",
            "9461b763d8f2f379b38aff429cc618322617178f"
        ],
        [
            "compute in H8; destruct H8; subst.",
            "VernacExtend",
            "a63b9777757139380809e755b3a50a1beb146d96"
        ],
        [
            "rewrite (find_1 Hm' (PX.MapsTo_eq H6 H7)) in H5; congruence.",
            "VernacExtend",
            "3cb66be0391d027743a0f711531cca24b6dcbd4a"
        ],
        [
            "apply H4 with k; auto.",
            "VernacExtend",
            "89df87a8852bf7adc27cc5ab86a27eb1d861ee02"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_1 : forall m (Hm:NoDupA m) m' (Hm': NoDupA m') cmp, Equivb cmp m m' -> equal cmp m m' = true.",
            "VernacStartTheoremProof",
            "3c0d8c1d85a4cec6609fe7662c63e6264ec1e223"
        ],
        [
            "unfold Equivb, equal.",
            "VernacExtend",
            "039b068b5048c5420e69bed351ed2783fc5957fd"
        ],
        [
            "intuition.",
            "VernacExtend",
            "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
        ],
        [
            "apply andb_true_intro; split; apply submap_1; unfold Submap; firstorder.",
            "VernacExtend",
            "04ea93b38f46b6dd1ca432450e2cdb9c6c3da22d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_2 : forall m (Hm:NoDupA m) m' (Hm':NoDupA m') cmp, equal cmp m m' = true -> Equivb cmp m m'.",
            "VernacStartTheoremProof",
            "e7df3abbf6b0331feff242a9369ee949cf532c68"
        ],
        [
            "unfold Equivb, equal.",
            "VernacExtend",
            "039b068b5048c5420e69bed351ed2783fc5957fd"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct (andb_prop _ _ H); clear H.",
            "VernacExtend",
            "57755fdff20ffbcb1611c85a136751e71b7a949f"
        ],
        [
            "generalize (submap_2 Hm Hm' H0).",
            "VernacExtend",
            "6a227ba83e2ce28cfca624c8287a71e0ee17d18c"
        ],
        [
            "generalize (submap_2 Hm' Hm H1).",
            "VernacExtend",
            "3623f370d43a43ed11c3cda7aeb4c6f97dbaacac"
        ],
        [
            "firstorder.",
            "VernacExtend",
            "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable elt':Type.",
            "VernacAssumption",
            "0a8df71489bbf561183a9f2a5fcadbdb8a215411"
        ],
        [
            "Fixpoint map (f:elt -> elt') (m:t elt) : t elt' := match m with | nil => nil | (k,e)::m' => (k,f e) :: map f m' end.",
            "VernacFixpoint",
            "509458b28686bc44521b646a19c9c11d3b0709f5"
        ],
        [
            "Fixpoint mapi (f: key -> elt -> elt') (m:t elt) : t elt' := match m with | nil => nil | (k,e)::m' => (k,f k e) :: mapi f m' end.",
            "VernacFixpoint",
            "c93269bd4c73e938a91b9a6b0539405ecf19b033"
        ],
        [
            "End Elt.",
            "VernacEndSegment",
            "ef6686463d3f7dfcb40f4805cf8f45019f83fdad"
        ],
        [
            "Section Elt2.",
            "VernacBeginSection",
            "047fa3ce9c37dad60c68a3a550cd72db8d162861"
        ],
        [
            "Variable elt elt' : Type.",
            "VernacAssumption",
            "75e2ab475766496c51355c093e5b307931d67c82"
        ],
        [
            "Lemma map_1 : forall (m:t elt)(x:key)(e:elt)(f:elt->elt'), MapsTo x e m -> MapsTo x (f e) (map f m).",
            "VernacStartTheoremProof",
            "46d5be10bb2d92e526c0c924539b78e4abbfe787"
        ],
        [
            "intros m x e f.",
            "VernacExtend",
            "7b57936d95608d61f666fde26a6c3a28463433dd"
        ],
        [
            "induction m.",
            "VernacExtend",
            "6f6279e892ad221278939a9b429a59edaeeb1676"
        ],
        [
            "inversion 1.",
            "VernacExtend",
            "9152817da0dc28ba4701e3ff01c293af28a1059f"
        ],
        [
            "destruct a as (x',e').",
            "VernacExtend",
            "764c310807bc567724a7a3a14ff3afd5a32c8635"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "inversion_clear 1.",
            "VernacExtend",
            "389c04e455824abd99633abf60667aeaa306819a"
        ],
        [
            "constructor 1.",
            "VernacExtend",
            "08a5b9fd59ad59b27ce13f998c760c4014bfab97"
        ],
        [
            "unfold eqke in *; simpl in *; intuition congruence.",
            "VernacExtend",
            "34bd3ffc66c3048151ab7f46ea875dc7c254b2c5"
        ],
        [
            "constructor 2.",
            "VernacExtend",
            "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
        ],
        [
            "unfold MapsTo in *; auto.",
            "VernacExtend",
            "65920f9e6487518f778384da4a6545920edd7658"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_2 : forall (m:t elt)(x:key)(f:elt->elt'), In x (map f m) -> In x m.",
            "VernacStartTheoremProof",
            "3348e5951e30e08e1ba3b320e1ac8d2a4dac6db8"
        ],
        [
            "intros m x f.",
            "VernacExtend",
            "32bfc2c3cecdf2fe29550f529fbd8b25e0080490"
        ],
        [
            "induction m; simpl.",
            "VernacExtend",
            "8eeca9e02ca7b585e952baf1eea0278de04f5480"
        ],
        [
            "intros (e,abs).",
            "VernacExtend",
            "eaf2b96acd5c4e45d07ba986a09f64fbd7c691a0"
        ],
        [
            "inversion abs.",
            "VernacExtend",
            "09d03e9db7724be33019ea71216bb4ca7b9eded9"
        ],
        [
            "destruct a as (x',e).",
            "VernacExtend",
            "ea8219623bc505bf41cfacd9371179c92c85348f"
        ],
        [
            "intros hyp.",
            "VernacExtend",
            "d38783d7d6b69ca847114c65facb8086bc8ed6a0"
        ],
        [
            "inversion hyp.",
            "VernacExtend",
            "d98f8e6a86bfdac2e601f2f880bd2a19b4ca6eba"
        ],
        [
            "clear hyp.",
            "VernacExtend",
            "fd1c5d6ee7a008e9a88de8c279e52930c713d71b"
        ],
        [
            "inversion H; subst; rename x0 into e'.",
            "VernacExtend",
            "8355301973dadeccf364e3406fc3a744e66ac1c2"
        ],
        [
            "exists e; constructor.",
            "VernacExtend",
            "cbc3f025d2b799a846773daa1d3c5d50915e449c"
        ],
        [
            "unfold eqke in *; simpl in *; intuition.",
            "VernacExtend",
            "7f17437d013399908382cd71cb1b66fafe9e777a"
        ],
        [
            "destruct IHm as (e'',hyp).",
            "VernacExtend",
            "91525e69450cfe35989aa52861e78f857604825c"
        ],
        [
            "exists e'; auto.",
            "VernacExtend",
            "905002a8aa67af5640ec1c8770286416699398b3"
        ],
        [
            "exists e''.",
            "VernacExtend",
            "1d635fc816d0c4c508cc071714ab58ffd409c3b4"
        ],
        [
            "constructor 2; auto.",
            "VernacExtend",
            "7da0a8caf04c8554762a019f74337cf755edf2f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_NoDup : forall m (Hm : NoDupA (@eqk elt) m)(f:elt->elt'), NoDupA (@eqk elt') (map f m).",
            "VernacStartTheoremProof",
            "84155539c46f8af113df364717f70ae8776e789d"
        ],
        [
            "induction m; simpl; auto.",
            "VernacExtend",
            "fef957ed452ac0981dd5620d82fa8cb3b652f75b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct a as (x',e').",
            "VernacExtend",
            "764c310807bc567724a7a3a14ff3afd5a32c8635"
        ],
        [
            "inversion_clear Hm.",
            "VernacExtend",
            "ec3cc4482f86f8fa18b7399a6519331c51c1bbae"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "clear IHm H0.",
            "VernacExtend",
            "a75926bdf46a6bd9f25789b4641ef11b29225667"
        ],
        [
            "induction m; simpl in *; auto.",
            "VernacExtend",
            "8a32fce9a5181e79442db184d89baa81734e3d05"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "destruct a; inversion H; auto.",
            "VernacExtend",
            "b2193f3cf32fb55d61f574b0e2a5aa84bccf7160"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapi_1 : forall (m:t elt)(x:key)(e:elt)(f:key->elt->elt'), MapsTo x e m -> exists y, X.eq y x /\\ MapsTo x (f y e) (mapi f m).",
            "VernacStartTheoremProof",
            "03e190ec78cb4eb5529b96de0b9379b54d6ddcb0"
        ],
        [
            "intros m x e f.",
            "VernacExtend",
            "7b57936d95608d61f666fde26a6c3a28463433dd"
        ],
        [
            "induction m.",
            "VernacExtend",
            "6f6279e892ad221278939a9b429a59edaeeb1676"
        ],
        [
            "inversion 1.",
            "VernacExtend",
            "9152817da0dc28ba4701e3ff01c293af28a1059f"
        ],
        [
            "destruct a as (x',e').",
            "VernacExtend",
            "764c310807bc567724a7a3a14ff3afd5a32c8635"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "inversion_clear 1.",
            "VernacExtend",
            "389c04e455824abd99633abf60667aeaa306819a"
        ],
        [
            "exists x'.",
            "VernacExtend",
            "62741617e2f199cfb9538ac58a668218579faa2e"
        ],
        [
            "destruct H0; simpl in *.",
            "VernacExtend",
            "ab12333ccab3c8ca5851593f04b1522b6e052fca"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "constructor 1.",
            "VernacExtend",
            "08a5b9fd59ad59b27ce13f998c760c4014bfab97"
        ],
        [
            "unfold eqke in *; simpl in *; intuition congruence.",
            "VernacExtend",
            "34bd3ffc66c3048151ab7f46ea875dc7c254b2c5"
        ],
        [
            "destruct IHm as (y, hyp); auto.",
            "VernacExtend",
            "ec29ee51e726e06c87a39c9fe9f7fb84fd904f55"
        ],
        [
            "exists y; intuition.",
            "VernacExtend",
            "b647df3d6b2a69e5d68d0fac9593fef284885e4e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapi_2 : forall (m:t elt)(x:key)(f:key->elt->elt'), In x (mapi f m) -> In x m.",
            "VernacStartTheoremProof",
            "41dfd843e316e534fce2025c6e0146dfa0bc28c1"
        ],
        [
            "intros m x f.",
            "VernacExtend",
            "32bfc2c3cecdf2fe29550f529fbd8b25e0080490"
        ],
        [
            "induction m; simpl.",
            "VernacExtend",
            "8eeca9e02ca7b585e952baf1eea0278de04f5480"
        ],
        [
            "intros (e,abs).",
            "VernacExtend",
            "eaf2b96acd5c4e45d07ba986a09f64fbd7c691a0"
        ],
        [
            "inversion abs.",
            "VernacExtend",
            "09d03e9db7724be33019ea71216bb4ca7b9eded9"
        ],
        [
            "destruct a as (x',e).",
            "VernacExtend",
            "ea8219623bc505bf41cfacd9371179c92c85348f"
        ],
        [
            "intros hyp.",
            "VernacExtend",
            "d38783d7d6b69ca847114c65facb8086bc8ed6a0"
        ],
        [
            "inversion hyp.",
            "VernacExtend",
            "d98f8e6a86bfdac2e601f2f880bd2a19b4ca6eba"
        ],
        [
            "clear hyp.",
            "VernacExtend",
            "fd1c5d6ee7a008e9a88de8c279e52930c713d71b"
        ],
        [
            "inversion H; subst; rename x0 into e'.",
            "VernacExtend",
            "8355301973dadeccf364e3406fc3a744e66ac1c2"
        ],
        [
            "exists e; constructor.",
            "VernacExtend",
            "cbc3f025d2b799a846773daa1d3c5d50915e449c"
        ],
        [
            "unfold eqke in *; simpl in *; intuition.",
            "VernacExtend",
            "7f17437d013399908382cd71cb1b66fafe9e777a"
        ],
        [
            "destruct IHm as (e'',hyp).",
            "VernacExtend",
            "91525e69450cfe35989aa52861e78f857604825c"
        ],
        [
            "exists e'; auto.",
            "VernacExtend",
            "905002a8aa67af5640ec1c8770286416699398b3"
        ],
        [
            "exists e''.",
            "VernacExtend",
            "1d635fc816d0c4c508cc071714ab58ffd409c3b4"
        ],
        [
            "constructor 2; auto.",
            "VernacExtend",
            "7da0a8caf04c8554762a019f74337cf755edf2f1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapi_NoDup : forall m (Hm : NoDupA (@eqk elt) m)(f: key->elt->elt'), NoDupA (@eqk elt') (mapi f m).",
            "VernacStartTheoremProof",
            "43469e6e45305ae7ef0d6ac40f8185aa78ae2fbe"
        ],
        [
            "induction m; simpl; auto.",
            "VernacExtend",
            "fef957ed452ac0981dd5620d82fa8cb3b652f75b"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct a as (x',e').",
            "VernacExtend",
            "764c310807bc567724a7a3a14ff3afd5a32c8635"
        ],
        [
            "inversion_clear Hm; auto.",
            "VernacExtend",
            "c38d30dc04eaff6dc1c9ab18f0f989a99cc35d65"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "clear IHm H0.",
            "VernacExtend",
            "a75926bdf46a6bd9f25789b4641ef11b29225667"
        ],
        [
            "induction m; simpl in *; auto.",
            "VernacExtend",
            "8a32fce9a5181e79442db184d89baa81734e3d05"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "destruct a; inversion_clear H; auto.",
            "VernacExtend",
            "2a9c43ce59abc99dde4b7d1f5d1239643f452a4c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Elt2.",
            "VernacEndSegment",
            "53ea38687e7f78e3485f56e1eb3b471de87134b7"
        ],
        [
            "Section Elt3.",
            "VernacBeginSection",
            "9768fb61700ec83313cec6fac135a3c6a149676c"
        ],
        [
            "Variable elt elt' elt'' : Type.",
            "VernacAssumption",
            "bf8f6f82bf5fcf2b225f5a782e20a1205b1ec879"
        ],
        [
            "Notation oee' := (option elt * option elt')%type.",
            "VernacSyntacticDefinition",
            "0df0914485a2720610efdd4e52b4d4c7befe118d"
        ],
        [
            "Definition combine_l (m:t elt)(m':t elt') : t oee' := mapi (fun k e => (Some e, find k m')) m.",
            "VernacDefinition",
            "cfceb28088e361a97261083bd6fd9411f885f5fd"
        ],
        [
            "Definition combine_r (m:t elt)(m':t elt') : t oee' := mapi (fun k e' => (find k m, Some e')) m'.",
            "VernacDefinition",
            "c5481de8f3fa3828058a5120213cc3476260cab7"
        ],
        [
            "Definition fold_right_pair (A B C:Type)(f:A->B->C->C) := List.fold_right (fun p => f (fst p) (snd p)).",
            "VernacDefinition",
            "9f3cd6931340499e5dca3f13416825a0e669bd4b"
        ],
        [
            "Definition combine (m:t elt)(m':t elt') : t oee' := let l := combine_l m m' in let r := combine_r m m' in fold_right_pair (add (elt:=oee')) r l.",
            "VernacDefinition",
            "265c7f8e6875cc1c92693ed359d06b643e22f286"
        ],
        [
            "Lemma fold_right_pair_NoDup : forall l r (Hl: NoDupA (eqk (elt:=oee')) l) (Hl: NoDupA (eqk (elt:=oee')) r), NoDupA (eqk (elt:=oee')) (fold_right_pair (add (elt:=oee')) r l).",
            "VernacStartTheoremProof",
            "56ed0b3a227c641e602de33b7f190a8591648dfc"
        ],
        [
            "induction l; simpl; auto.",
            "VernacExtend",
            "2300dcaca2cea0b38a7d9c3b8a28bfa9feaddecf"
        ],
        [
            "destruct a; simpl; auto.",
            "VernacExtend",
            "d3281b1ac93d1263ea39f3556240463bbc6e4604"
        ],
        [
            "inversion_clear 1.",
            "VernacExtend",
            "389c04e455824abd99633abf60667aeaa306819a"
        ],
        [
            "intros; apply add_NoDup; auto.",
            "VernacExtend",
            "5c38f0911d4139eacb792725b42706864292773a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve fold_right_pair_NoDup.",
            "VernacHints",
            "474e09dfabaa0cc613405e4b37355e5d7cf3aeb8"
        ],
        [
            "Lemma combine_NoDup : forall m (Hm:NoDupA (@eqk elt) m) m' (Hm':NoDupA (@eqk elt') m'), NoDupA (@eqk oee') (combine m m').",
            "VernacStartTheoremProof",
            "0154e99129bae6699f81fc7c8340439c54170d78"
        ],
        [
            "unfold combine, combine_r, combine_l.",
            "VernacExtend",
            "5cf964f11facdf71cab96a75a1d185818d6952ef"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "set (f1 := fun (k : key) (e : elt) => (Some e, find k m')).",
            "VernacExtend",
            "48f3d38a34a9ab7b34a2b9e63d21291d2ef45433"
        ],
        [
            "set (f2 := fun (k : key) (e' : elt') => (find k m, Some e')).",
            "VernacExtend",
            "07d641f643af5d86139b8d54c7c699e1997d0fdd"
        ],
        [
            "generalize (mapi_NoDup Hm f1).",
            "VernacExtend",
            "5b41c6272a8d6f4e5c89318978d60a832f04b23a"
        ],
        [
            "generalize (mapi_NoDup Hm' f2).",
            "VernacExtend",
            "b45f1bd04ab75b64a8f799cc0ff2d20e1260304b"
        ],
        [
            "set (l := mapi f1 m); clearbody l.",
            "VernacExtend",
            "4bb85fff592f9d3f20f07e71c0d0841f05396ee7"
        ],
        [
            "set (r := mapi f2 m'); clearbody r.",
            "VernacExtend",
            "76a8e7d7d9ad9ee1496b96dccfda2bd321d5dc88"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition at_least_left (o:option elt)(o':option elt') := match o with | None => None | _ => Some (o,o') end.",
            "VernacDefinition",
            "b113c428124d28e8cec3e37fab2f094007dd0e23"
        ],
        [
            "Definition at_least_right (o:option elt)(o':option elt') := match o' with | None => None | _ => Some (o,o') end.",
            "VernacDefinition",
            "7ec1ed0fc891308858efd0779fba072fb3dd4cd4"
        ],
        [
            "Lemma combine_l_1 : forall m (Hm:NoDupA (@eqk elt) m) m' (Hm':NoDupA (@eqk elt') m')(x:key), find x (combine_l m m') = at_least_left (find x m) (find x m').",
            "VernacStartTheoremProof",
            "5dd58b27f9d6b8abeff1456b273e6a0fe535f000"
        ],
        [
            "unfold combine_l.",
            "VernacExtend",
            "c268c61b4831e3d0f3dcad59117bc0899d494fd7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (find x m); intros.",
            "VernacExtend",
            "ffd164e20a1af7b3d5c82ccac45d044379f151e3"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply find_1.",
            "VernacExtend",
            "2022fd05df0f077ce2f57bd8287f9efe9fcb2b9d"
        ],
        [
            "apply mapi_NoDup; auto.",
            "VernacExtend",
            "69e270776cf546f60610e2fab91f2264cb8c6dee"
        ],
        [
            "destruct (mapi_1 (fun k e => (Some e, find k m')) (find_2 H)) as (y,(H0,H1)).",
            "VernacExtend",
            "d7b16ac1297b9570ee1dde604d44d895b2d98a74"
        ],
        [
            "rewrite (find_eq Hm' (X.eq_sym H0)); auto.",
            "VernacExtend",
            "bd2e3516d87d446a338d205bac88803d649d9189"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case_eq (find x (mapi (fun k e => (Some e, find k m')) m)); intros; auto.",
            "VernacExtend",
            "13f7d7f857848b599b2095e4ccf1e877af466067"
        ],
        [
            "destruct (@mapi_2 _ _ m x (fun k e => (Some e, find k m'))).",
            "VernacExtend",
            "29c0365acb4518513475f5a33b9e2bc86586c9ad"
        ],
        [
            "exists p; apply find_2; auto.",
            "VernacExtend",
            "0fee1d53dac816d32df42842c7c32b327f3a2547"
        ],
        [
            "rewrite (find_1 Hm H1) in H; discriminate.",
            "VernacExtend",
            "1df94a64ce082ddbb2fc9a5f624ed1d982a8a721"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma combine_r_1 : forall m (Hm:NoDupA (@eqk elt) m) m' (Hm':NoDupA (@eqk elt') m')(x:key), find x (combine_r m m') = at_least_right (find x m) (find x m').",
            "VernacStartTheoremProof",
            "88090f215d79e250cd6656673ea02bb374f73b8c"
        ],
        [
            "unfold combine_r.",
            "VernacExtend",
            "002cbfd25ce1b9094381e6205f30227b3993f298"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case_eq (find x m'); intros.",
            "VernacExtend",
            "55647f8f6d735e6e02a36b794591230f0b5e4768"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply find_1.",
            "VernacExtend",
            "2022fd05df0f077ce2f57bd8287f9efe9fcb2b9d"
        ],
        [
            "apply mapi_NoDup; auto.",
            "VernacExtend",
            "69e270776cf546f60610e2fab91f2264cb8c6dee"
        ],
        [
            "destruct (mapi_1 (fun k e => (find k m, Some e)) (find_2 H)) as (y,(H0,H1)).",
            "VernacExtend",
            "5fbb28d47ecadc2ad7bf58513c7a40edae98bde9"
        ],
        [
            "rewrite (find_eq Hm (X.eq_sym H0)); auto.",
            "VernacExtend",
            "337b27d17efa332657e8bb71eb00b03a182c7893"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "case_eq (find x (mapi (fun k e' => (find k m, Some e')) m')); intros; auto.",
            "VernacExtend",
            "bba739725679f70f3ada38ad9c69d814499ba255"
        ],
        [
            "destruct (@mapi_2 _ _ m' x (fun k e' => (find k m, Some e'))).",
            "VernacExtend",
            "8cb68b79d4ab7a748c055047c9546d1ed2f7ce81"
        ],
        [
            "exists p; apply find_2; auto.",
            "VernacExtend",
            "0fee1d53dac816d32df42842c7c32b327f3a2547"
        ],
        [
            "rewrite (find_1 Hm' H1) in H; discriminate.",
            "VernacExtend",
            "d0f1c280897debfbc1e7c68b47aced80fda258ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition at_least_one (o:option elt)(o':option elt') := match o, o' with | None, None => None | _, _ => Some (o,o') end.",
            "VernacDefinition",
            "c5ecc27f0b311ae6291903f92f035cb9478c1c61"
        ],
        [
            "Lemma combine_1 : forall m (Hm:NoDupA (@eqk elt) m) m' (Hm':NoDupA (@eqk elt') m')(x:key), find x (combine m m') = at_least_one (find x m) (find x m').",
            "VernacStartTheoremProof",
            "43bbfa52cc3e3fe5fdb2ec65e67c3dd92537f21b"
        ],
        [
            "unfold combine.",
            "VernacExtend",
            "3edb9a802aa40130f600e158ebfb10551d172159"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (combine_r_1 Hm Hm' x).",
            "VernacExtend",
            "14069c82620f597b2925372fb446e894c74473c1"
        ],
        [
            "generalize (combine_l_1 Hm Hm' x).",
            "VernacExtend",
            "232b8ff9c40f1f95c9f7bb57b36f547fbd436eb5"
        ],
        [
            "assert (NoDupA (eqk (elt:=oee')) (combine_l m m')).",
            "VernacExtend",
            "ff917f763cce20a596efd53134f6151440a40099"
        ],
        [
            "unfold combine_l; apply mapi_NoDup; auto.",
            "VernacExtend",
            "36ba49e3a163ea7591be19f0a584e6945fe1f50c"
        ],
        [
            "assert (NoDupA (eqk (elt:=oee')) (combine_r m m')).",
            "VernacExtend",
            "ee96251a7664aefa0f4bf5c0e2f90230d7c29470"
        ],
        [
            "unfold combine_r; apply mapi_NoDup; auto.",
            "VernacExtend",
            "53bf11ffbad2e3fd077571f402f0894a7f789927"
        ],
        [
            "set (l := combine_l m m') in *; clearbody l.",
            "VernacExtend",
            "c04790f522fd1d2297c316aa9f09f55292e414fe"
        ],
        [
            "set (r := combine_r m m') in *; clearbody r.",
            "VernacExtend",
            "05e2310df12b48c1c2b0961668a61ab6c87d4037"
        ],
        [
            "set (o := find x m); clearbody o.",
            "VernacExtend",
            "87e7147e59e4389ba660b9c54099764764a2304c"
        ],
        [
            "set (o' := find x m'); clearbody o'.",
            "VernacExtend",
            "e1cd7caa3601d83ffc3294039550466f8aed318a"
        ],
        [
            "clear Hm' Hm m m'.",
            "VernacExtend",
            "f0d5afb9347e1b5a8f255a1fb327878c487f8ab3"
        ],
        [
            "induction l.",
            "VernacExtend",
            "1194af70832939708f8c7fde2f18f81c37b97a0c"
        ],
        [
            "destruct o; destruct o'; simpl; intros; discriminate || auto.",
            "VernacExtend",
            "30d6705d83a98b5e5f340014d9e41a4f0be223ab"
        ],
        [
            "destruct a; simpl in *; intros.",
            "VernacExtend",
            "213c4b343e12cfb4820eadc15b7c2b74bee66341"
        ],
        [
            "destruct (X.eq_dec x t0); simpl in *.",
            "VernacExtend",
            "7b0ad978e0a78c09942d944949289997965f2845"
        ],
        [
            "unfold at_least_left in H1.",
            "VernacExtend",
            "5dc23d8b3b0ff069ef947826b27311cddf1190f7"
        ],
        [
            "destruct o; simpl in *; try discriminate.",
            "VernacExtend",
            "7bd19d39e80a0661a4e4b5d0618ac00dd2196ea2"
        ],
        [
            "inversion H1; subst.",
            "VernacExtend",
            "0d6098b7de8d43e8e8e8d2cd73cf811a6b3dbedf"
        ],
        [
            "apply add_eq; auto.",
            "VernacExtend",
            "24ea22209d4c29d115d720033505c12ef669adb7"
        ],
        [
            "inversion_clear H; auto.",
            "VernacExtend",
            "d3d75a19294b96dbafba557f2d6b54b4e866b1a0"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "rewrite <- IHl; auto.",
            "VernacExtend",
            "3caf862ca6806d59542cc74bf9ce681744f7a041"
        ],
        [
            "apply add_not_eq; auto.",
            "VernacExtend",
            "c66d44d0b33ee75a641dfa24ceb0720f34781603"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable f : option elt -> option elt' -> option elt''.",
            "VernacAssumption",
            "5c2bf6fde81f6e3dd77961f7c70459242790763c"
        ],
        [
            "Definition option_cons (A:Type)(k:key)(o:option A)(l:list (key*A)) := match o with | Some e => (k,e)::l | None => l end.",
            "VernacDefinition",
            "6e278c430233d7fe8dc6875674d7c5b370a4e54b"
        ],
        [
            "Definition map2 m m' := let m0 : t oee' := combine m m' in let m1 : t (option elt'') := map (fun p => f (fst p) (snd p)) m0 in fold_right_pair (option_cons (A:=elt'')) nil m1.",
            "VernacDefinition",
            "33f550b3f744383c4d49666cb5a47474da3abee4"
        ],
        [
            "Lemma map2_NoDup : forall m (Hm:NoDupA (@eqk elt) m) m' (Hm':NoDupA (@eqk elt') m'), NoDupA (@eqk elt'') (map2 m m').",
            "VernacStartTheoremProof",
            "1b170053cbab293884ec3358fea67b84696bfe0f"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold map2.",
            "VernacExtend",
            "f2e7d7de0ffbe24b94c4846f3762782a1653d449"
        ],
        [
            "assert (H0:=combine_NoDup Hm Hm').",
            "VernacExtend",
            "7513b64cd50b8fcf04ca5dd233f426429a3ebea3"
        ],
        [
            "set (l0:=combine m m') in *; clearbody l0.",
            "VernacExtend",
            "7e68a38055f2d48b799d514ea7ad05981ecdc661"
        ],
        [
            "set (f':= fun p : oee' => f (fst p) (snd p)).",
            "VernacExtend",
            "bc99541732917a16f325d6cac042571a809b6f1c"
        ],
        [
            "assert (H1:=map_NoDup (elt' := option elt'') H0 f').",
            "VernacExtend",
            "cfc7ab67037abd08014933696368538264bdf8d4"
        ],
        [
            "set (l1:=map f' l0) in *; clearbody l1.",
            "VernacExtend",
            "c77692936a50784fff3fbe6d259bd6b5d5b4e177"
        ],
        [
            "clear f' f H0 l0 Hm Hm' m m'.",
            "VernacExtend",
            "995cd71dd88ec941136a763e75f2b6f9634bd67f"
        ],
        [
            "induction l1.",
            "VernacExtend",
            "dfeb7bb70eb7390d22f3eada025c33a176cd1338"
        ],
        [
            "simpl; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "inversion_clear H1.",
            "VernacExtend",
            "1443921cbef97c67d0bd87bf517b302257ed5b28"
        ],
        [
            "destruct a; destruct o; simpl; auto.",
            "VernacExtend",
            "62aed9f5a26e4cadc1ff106c72dfeddb3236e9e2"
        ],
        [
            "constructor; auto.",
            "VernacExtend",
            "686f227fe0f57af60032eb35216aef1e62d0c0e5"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "clear IHl1.",
            "VernacExtend",
            "13bedd3ca87614160716de8b665c5675b1eb4359"
        ],
        [
            "induction l1.",
            "VernacExtend",
            "dfeb7bb70eb7390d22f3eada025c33a176cd1338"
        ],
        [
            "inversion H.",
            "VernacExtend",
            "ee20838bdd77512b43142d655a3924bf07bffebb"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "destruct a; destruct o; simpl in *; auto.",
            "VernacExtend",
            "f0c7ec12bfa6d699514a9b8bfce858d8e67b3b53"
        ],
        [
            "inversion_clear H; auto.",
            "VernacExtend",
            "d3d75a19294b96dbafba557f2d6b54b4e866b1a0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition at_least_one_then_f (o:option elt)(o':option elt') := match o, o' with | None, None => None | _, _ => f o o' end.",
            "VernacDefinition",
            "50229de6866e8a39b774acfb1c5a9b1beb70e5b9"
        ],
        [
            "Lemma map2_0 : forall m (Hm:NoDupA (@eqk elt) m) m' (Hm':NoDupA (@eqk elt') m')(x:key), find x (map2 m m') = at_least_one_then_f (find x m) (find x m').",
            "VernacStartTheoremProof",
            "e2dc4f7f3abaef7b7e99be92e5df786eafd79e28"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold map2.",
            "VernacExtend",
            "f2e7d7de0ffbe24b94c4846f3762782a1653d449"
        ],
        [
            "assert (H:=combine_1 Hm Hm' x).",
            "VernacExtend",
            "949ca25cf933dc6f788513a3e6230c0a07aaa4ca"
        ],
        [
            "assert (H2:=combine_NoDup Hm Hm').",
            "VernacExtend",
            "658023276709d3ccf4ec10e48d8bfe88c11e3ab8"
        ],
        [
            "set (f':= fun p : oee' => f (fst p) (snd p)).",
            "VernacExtend",
            "bc99541732917a16f325d6cac042571a809b6f1c"
        ],
        [
            "set (m0 := combine m m') in *; clearbody m0.",
            "VernacExtend",
            "617c82ec9257ac494a746e14e98cba0c8531e2a9"
        ],
        [
            "set (o:=find x m) in *; clearbody o.",
            "VernacExtend",
            "a8229b5bcce8104716065eacb20f0de3bea3a581"
        ],
        [
            "set (o':=find x m') in *; clearbody o'.",
            "VernacExtend",
            "37c70128b8827de7e2c56496c69dc8ebe43c8da1"
        ],
        [
            "clear Hm Hm' m m'.",
            "VernacExtend",
            "acd6d0f3b323c661811d8223ae488a5bbae04466"
        ],
        [
            "generalize H; clear H.",
            "VernacExtend",
            "11a8e8bdae40bbaf90ad63809f486c3fcb4cd3a4"
        ],
        [
            "match goal with |- ?m=?n -> ?p=?q => assert ((m=n->p=q)/\\(m=None -> p=None)); [|intuition] end.",
            "VernacExtend",
            "1b0b02e8612e25bdb995088b87b01f5ce13f3135"
        ],
        [
            "induction m0; simpl in *; intuition.",
            "VernacExtend",
            "398ce84fef66d9ea387acd2c44ccae1f66d99975"
        ],
        [
            "destruct o; destruct o'; simpl in *; try discriminate; auto.",
            "VernacExtend",
            "e47740fa4d78e24c62a03dbfc7b1f606d8590247"
        ],
        [
            "destruct a as (k,(oo,oo')); simpl in *.",
            "VernacExtend",
            "e907ef0b79886dfa73daf28127b910eb04b0c955"
        ],
        [
            "inversion_clear H2.",
            "VernacExtend",
            "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
        ],
        [
            "destruct (X.eq_dec x k) as [|Hneq]; simpl in *.",
            "VernacExtend",
            "ee7f9e0397530400ea554772336138d041d6f008"
        ],
        [
            "assert (at_least_one_then_f o o' = f oo oo').",
            "VernacExtend",
            "b98226e6db6e00ac5c5cb3ff55b60dab5398ddb8"
        ],
        [
            "destruct o; destruct o'; simpl in *; inversion_clear H; auto.",
            "VernacExtend",
            "6207801334c1121aa5593e60c1860b6399d592a3"
        ],
        [
            "rewrite H2.",
            "VernacExtend",
            "c34b98a4ea7c987830199fe378bb7a145a0d652e"
        ],
        [
            "unfold f'; simpl.",
            "VernacExtend",
            "41170b69a136eb646686878305bfe4e5cee5740c"
        ],
        [
            "destruct (f oo oo'); simpl.",
            "VernacExtend",
            "d334aadab2915f999b1762bb77a5a7702a43e0d6"
        ],
        [
            "destruct (X.eq_dec x k) as [|Hneq]; try contradict Hneq; auto.",
            "VernacExtend",
            "f2fdaae6e789b2ff69b26050d2c3a1d9b19d82a1"
        ],
        [
            "destruct (IHm0 H1) as (_,H4); apply H4; auto.",
            "VernacExtend",
            "4932e41509ad6e4826e7f8cded986f37e0689260"
        ],
        [
            "case_eq (find x m0); intros; auto.",
            "VernacExtend",
            "2f851647b1d09d2f6230ea1040ebebe9ed69914d"
        ],
        [
            "elim H0.",
            "VernacExtend",
            "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
        ],
        [
            "apply InA_eqk with (x,p); auto.",
            "VernacExtend",
            "713de3f20117bbd835f9f6f2d4f5acc84911bae3"
        ],
        [
            "apply InA_eqke_eqk.",
            "VernacExtend",
            "64ccaa92918f0de62f86a0951da9d4fcfb70355a"
        ],
        [
            "exact (find_2 H3).",
            "VernacExtend",
            "51f7bee4d806cd50ae6b92a448f4633fc9831b94"
        ],
        [
            "unfold f'; simpl.",
            "VernacExtend",
            "41170b69a136eb646686878305bfe4e5cee5740c"
        ],
        [
            "destruct (f oo oo'); simpl.",
            "VernacExtend",
            "d334aadab2915f999b1762bb77a5a7702a43e0d6"
        ],
        [
            "destruct (X.eq_dec x k); [ contradict Hneq; auto | auto].",
            "VernacExtend",
            "b87da69e5185f47eeb1501f6c00b7ed55ef41e5c"
        ],
        [
            "destruct (IHm0 H1) as (H3,_); apply H3; auto.",
            "VernacExtend",
            "9f02621ac7d152cc1f52be2c813150328ff19578"
        ],
        [
            "destruct (IHm0 H1) as (H3,_); apply H3; auto.",
            "VernacExtend",
            "9f02621ac7d152cc1f52be2c813150328ff19578"
        ],
        [
            "destruct a as (k,(oo,oo')).",
            "VernacExtend",
            "06ce06983f44c2344e855a9fa78fcb2567bf3e0d"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "inversion_clear H2.",
            "VernacExtend",
            "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
        ],
        [
            "destruct (X.eq_dec x k) as [|Hneq].",
            "VernacExtend",
            "d13473039897523b9120fc1c1855cadd93c03335"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "unfold f'; simpl.",
            "VernacExtend",
            "41170b69a136eb646686878305bfe4e5cee5740c"
        ],
        [
            "destruct (f oo oo'); simpl.",
            "VernacExtend",
            "d334aadab2915f999b1762bb77a5a7702a43e0d6"
        ],
        [
            "destruct (X.eq_dec x k); [ contradict Hneq; auto | auto].",
            "VernacExtend",
            "b87da69e5185f47eeb1501f6c00b7ed55ef41e5c"
        ],
        [
            "destruct (IHm0 H1) as (_,H4); apply H4; auto.",
            "VernacExtend",
            "4932e41509ad6e4826e7f8cded986f37e0689260"
        ],
        [
            "destruct (IHm0 H1) as (_,H4); apply H4; auto.",
            "VernacExtend",
            "4932e41509ad6e4826e7f8cded986f37e0689260"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map2_1 : forall m (Hm:NoDupA (@eqk elt) m) m' (Hm':NoDupA (@eqk elt') m')(x:key), In x m \\/ In x m' -> find x (map2 m m') = f (find x m) (find x m').",
            "VernacStartTheoremProof",
            "b033ed168535e7720d2662871e19f6c4354a6bb7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite map2_0; auto.",
            "VernacExtend",
            "00b896f6901d5f6fe85d53fb1c61147556d6b64c"
        ],
        [
            "destruct H as [(e,H)|(e,H)].",
            "VernacExtend",
            "fe49115bfbfa5885a110d62366d6ea1b25c7c590"
        ],
        [
            "rewrite (find_1 Hm H).",
            "VernacExtend",
            "4a223a7f8b9b6c1f967acb617050bad3b78cd9ab"
        ],
        [
            "destruct (find x m'); simpl; auto.",
            "VernacExtend",
            "61a517839a9118d840b2181e00815e956b7f0866"
        ],
        [
            "rewrite (find_1 Hm' H).",
            "VernacExtend",
            "cb895b487f0b74aa127736af3e2c2d799faa3dce"
        ],
        [
            "destruct (find x m); simpl; auto.",
            "VernacExtend",
            "52a8b05db4e941878106d18fb9b9895de2889d4a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map2_2 : forall m (Hm:NoDupA (@eqk elt) m) m' (Hm':NoDupA (@eqk elt') m')(x:key), In x (map2 m m') -> In x m \\/ In x m'.",
            "VernacStartTheoremProof",
            "30cbed454efa78408258f082615a8efbf55703ad"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct H as (e,H).",
            "VernacExtend",
            "a2fe7ec8c7b58f9ef97d3461e4b1af489a0271aa"
        ],
        [
            "generalize (map2_0 Hm Hm' x).",
            "VernacExtend",
            "3d763d386ea321f008a7661fa2d76b168ebfd795"
        ],
        [
            "rewrite (find_1 (map2_NoDup Hm Hm') H).",
            "VernacExtend",
            "243352b7df168a47a5dff09b017155de28ac6787"
        ],
        [
            "generalize (@find_2 _ m x).",
            "VernacExtend",
            "4619596b4d244364b624bb575723b5375a41bed4"
        ],
        [
            "generalize (@find_2 _ m' x).",
            "VernacExtend",
            "daf154f8a7e9bea8fed95c700433874a2538be3a"
        ],
        [
            "destruct (find x m); destruct (find x m'); simpl; intros.",
            "VernacExtend",
            "8479c897fdebe6ee31f3e0c24952ed7130e2e9bb"
        ],
        [
            "left; exists e0; auto.",
            "VernacExtend",
            "0d4c41f574c7db21e78a0ff917c355af9b4d84ed"
        ],
        [
            "left; exists e0; auto.",
            "VernacExtend",
            "0d4c41f574c7db21e78a0ff917c355af9b4d84ed"
        ],
        [
            "right; exists e0; auto.",
            "VernacExtend",
            "09e1fa8e04a44b26322618b72ab7c16466ce1328"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Elt3.",
            "VernacEndSegment",
            "c6523c04f84c352ef09c5c162049f997639c4f56"
        ],
        [
            "End Raw.",
            "VernacEndSegment",
            "2fd749d80ea291efaaecadd9d1993cc21838a722"
        ],
        [
            "Module Make (X: DecidableType) <: WS with Module E:=X.",
            "VernacDefineModule",
            "720d90d46ebc0d841b0e3d907b6cb9057ec325ce"
        ],
        [
            "Module Raw := Raw X.",
            "VernacDefineModule",
            "ca625f78b8ff8d66f5187a3d638c0a58f383d41e"
        ],
        [
            "Module E := X.",
            "VernacDefineModule",
            "dd5467716b9394b87429487ba1be9693c17fd44c"
        ],
        [
            "Definition key := E.t.",
            "VernacDefinition",
            "fd09f36b2126b865eb099cbc442b5be4de605813"
        ],
        [
            "Record slist (elt:Type) := {this :> Raw.t elt; NoDup : NoDupA (@Raw.PX.eqk elt) this}.",
            "VernacInductive",
            "ebbb4898405743243c0d4728cd79f0c957d1e28b"
        ],
        [
            "Definition t (elt:Type) := slist elt.",
            "VernacDefinition",
            "89104ce64238a33b46d21028bfed3a8211d2bf6c"
        ],
        [
            "Section Elt.",
            "VernacBeginSection",
            "7d8c2b7c85358610d3707ffaa378f25da37c746b"
        ],
        [
            "Variable elt elt' elt'':Type.",
            "VernacAssumption",
            "bf8f6f82bf5fcf2b225f5a782e20a1205b1ec879"
        ],
        [
            "Implicit Types m : t elt.",
            "VernacReserve",
            "d4f53d0a39ec20b73e2612cacb69ed5dddf67a6b"
        ],
        [
            "Implicit Types x y : key.",
            "VernacReserve",
            "3625728a16e3dec4fd95d75d69595f7d0e8376a2"
        ],
        [
            "Implicit Types e : elt.",
            "VernacReserve",
            "ac06a64eb104c51e778df522bd57ad4df3e47a12"
        ],
        [
            "Definition empty : t elt := Build_slist (Raw.empty_NoDup elt).",
            "VernacDefinition",
            "50647a6e914e89241db3fa762f3e850389265a3c"
        ],
        [
            "Definition is_empty m : bool := Raw.is_empty m.(this).",
            "VernacDefinition",
            "a2fdcc04fce01f4c6b1ab5af231ff889895c6f6d"
        ],
        [
            "Definition add x e m : t elt := Build_slist (Raw.add_NoDup m.(NoDup) x e).",
            "VernacDefinition",
            "c59cb1d75488a5708a3d450978850a9f3b4cce95"
        ],
        [
            "Definition find x m : option elt := Raw.find x m.(this).",
            "VernacDefinition",
            "8e35b9d64f59afe59a502d1980a46e8c5e4d9c97"
        ],
        [
            "Definition remove x m : t elt := Build_slist (Raw.remove_NoDup m.(NoDup) x).",
            "VernacDefinition",
            "cb4958e024f5d0a408ecacc09a1eb275074a2d52"
        ],
        [
            "Definition mem x m : bool := Raw.mem x m.(this).",
            "VernacDefinition",
            "c84e50bf440420cbf9b218ad88abac1648899a74"
        ],
        [
            "Definition map f m : t elt' := Build_slist (Raw.map_NoDup m.(NoDup) f).",
            "VernacDefinition",
            "88c8fff6c3f5a15163459de86c44a31de2ceb2f2"
        ],
        [
            "Definition mapi (f:key->elt->elt') m : t elt' := Build_slist (Raw.mapi_NoDup m.(NoDup) f).",
            "VernacDefinition",
            "f126aeead5dc1e1b3f2d333a420ad395512c785f"
        ],
        [
            "Definition map2 f m (m':t elt') : t elt'' := Build_slist (Raw.map2_NoDup f m.(NoDup) m'.(NoDup)).",
            "VernacDefinition",
            "ed7d621746df4e148df413ac3cf3d3e342163c94"
        ],
        [
            "Definition elements m : list (key*elt) := @Raw.elements elt m.(this).",
            "VernacDefinition",
            "5a5680375e308e1447459145f8f61e665ac74167"
        ],
        [
            "Definition cardinal m := length m.(this).",
            "VernacDefinition",
            "f202338c0ae957cdeb3459893627665e7e21f8aa"
        ],
        [
            "Definition fold (A:Type)(f:key->elt->A->A) m (i:A) : A := @Raw.fold elt A f m.(this) i.",
            "VernacDefinition",
            "870f3de23eeb6d77c0eaeeb3f3ec51c9a1c3c62f"
        ],
        [
            "Definition equal cmp m m' : bool := @Raw.equal elt cmp m.(this) m'.(this).",
            "VernacDefinition",
            "6d71b570f5385a187db489af00c58fc95579caa2"
        ],
        [
            "Definition MapsTo x e m : Prop := Raw.PX.MapsTo x e m.(this).",
            "VernacDefinition",
            "adaf10e51932e017a691c70d028ec9ed7322c585"
        ],
        [
            "Definition In x m : Prop := Raw.PX.In x m.(this).",
            "VernacDefinition",
            "05f4c420e8e6148d52f5cdf7b2f0be32607ff78c"
        ],
        [
            "Definition Empty m : Prop := Raw.Empty m.(this).",
            "VernacDefinition",
            "0c0828441845efc3cc3375461f0294222a76824a"
        ],
        [
            "Definition Equal m m' := forall y, find y m = find y m'.",
            "VernacDefinition",
            "06ccbe2ad525772df84cf3466a7c055ca59c8508"
        ],
        [
            "Definition Equiv (eq_elt:elt->elt->Prop) m m' := (forall k, In k m <-> In k m') /\\ (forall k e e', MapsTo k e m -> MapsTo k e' m' -> eq_elt e e').",
            "VernacDefinition",
            "442cc2976421ab343212ad7d40dbea1021c30690"
        ],
        [
            "Definition Equivb cmp m m' : Prop := @Raw.Equivb elt cmp m.(this) m'.(this).",
            "VernacDefinition",
            "814491e04d14dde7bf0d958ab91866ca23ee980b"
        ],
        [
            "Definition eq_key : (key*elt) -> (key*elt) -> Prop := @Raw.PX.eqk elt.",
            "VernacDefinition",
            "b4a1ebdbcd3de4f8d855bf082c987f445c050877"
        ],
        [
            "Definition eq_key_elt : (key*elt) -> (key*elt) -> Prop:= @Raw.PX.eqke elt.",
            "VernacDefinition",
            "d880feb849b93575c9e6405e87e057798a000505"
        ],
        [
            "Lemma MapsTo_1 : forall m x y e, E.eq x y -> MapsTo x e m -> MapsTo y e m.",
            "VernacStartTheoremProof",
            "236e193b12e75c6faf36f1b32e13fafd742bd121"
        ],
        [
            "intros m; exact (@Raw.PX.MapsTo_eq elt m.(this)).",
            "VernacExtend",
            "5fa4378a27c819cc0f15ba811a31a83a0da9a2d6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_1 : forall m x, In x m -> mem x m = true.",
            "VernacStartTheoremProof",
            "53af0a412d4c6f4c4cbc1dc817302d4bfb4af597"
        ],
        [
            "intros m; exact (@Raw.mem_1 elt m.(this) m.(NoDup)).",
            "VernacExtend",
            "59be460ea8d54d5ce176411cceba37cdfee2c50f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_2 : forall m x, mem x m = true -> In x m.",
            "VernacStartTheoremProof",
            "4dcad3c69977d67f0f833466356e3779831d3d4e"
        ],
        [
            "intros m; exact (@Raw.mem_2 elt m.(this) m.(NoDup)).",
            "VernacExtend",
            "3f5821c2a7dbea5212494a37e06366a338573246"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_1 : Empty empty.",
            "VernacStartTheoremProof",
            "7522f2b7a60d5493f09b33f63d37755f64932135"
        ],
        [
            "exact (@Raw.empty_1 elt).",
            "VernacExtend",
            "836aacb8a91630722e4d4ce1fe816e1b319f661c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_empty_1 : forall m, Empty m -> is_empty m = true.",
            "VernacStartTheoremProof",
            "628b7ce292bdf73b2cba9ef8febb80dbce9ab9ca"
        ],
        [
            "intros m; exact (@Raw.is_empty_1 elt m.(this)).",
            "VernacExtend",
            "9cc828ff6299a69eae2b50e3b3ed5130abf85451"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_empty_2 : forall m, is_empty m = true -> Empty m.",
            "VernacStartTheoremProof",
            "0f82c7c668abe77d36ee9dc489312870431944e3"
        ],
        [
            "intros m; exact (@Raw.is_empty_2 elt m.(this)).",
            "VernacExtend",
            "fbae2d61e5108cb4c4abd1de1d675698afd3ec87"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_1 : forall m x y e, E.eq x y -> MapsTo y e (add x e m).",
            "VernacStartTheoremProof",
            "387d4c09eef57243a3b1a59a71595e103e492bf5"
        ],
        [
            "intros m; exact (@Raw.add_1 elt m.(this)).",
            "VernacExtend",
            "eb8f97caff8a075905daf655b1ab7ef22a42f1a7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_2 : forall m x y e e', ~ E.eq x y -> MapsTo y e m -> MapsTo y e (add x e' m).",
            "VernacStartTheoremProof",
            "b4b372b49877ade47044ff293a448d7b76535d99"
        ],
        [
            "intros m; exact (@Raw.add_2 elt m.(this)).",
            "VernacExtend",
            "933eac59320073d29b62d6ae28bc145de6c5455c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_3 : forall m x y e e', ~ E.eq x y -> MapsTo y e (add x e' m) -> MapsTo y e m.",
            "VernacStartTheoremProof",
            "faae6494468653de34d596c09d5ce1e698478471"
        ],
        [
            "intros m; exact (@Raw.add_3 elt m.(this)).",
            "VernacExtend",
            "07738a220d5de0331629ed1716f3ee4a59ac929b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_1 : forall m x y, E.eq x y -> ~ In y (remove x m).",
            "VernacStartTheoremProof",
            "fbf28b0f05e8158a0b50d4786ac497f751b90395"
        ],
        [
            "intros m; exact (@Raw.remove_1 elt m.(this) m.(NoDup)).",
            "VernacExtend",
            "7378ec8209cdc2f131a02f458fed2301d41816b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_2 : forall m x y e, ~ E.eq x y -> MapsTo y e m -> MapsTo y e (remove x m).",
            "VernacStartTheoremProof",
            "585d0ee8befca3bea3679c16b3101a98feef2d4d"
        ],
        [
            "intros m; exact (@Raw.remove_2 elt m.(this) m.(NoDup)).",
            "VernacExtend",
            "11054d8b67ee548a986f33ad091768f1e0e0b22c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_3 : forall m x y e, MapsTo y e (remove x m) -> MapsTo y e m.",
            "VernacStartTheoremProof",
            "de38975c8ce80a907f1fa2da03ad92b8eea7f4fe"
        ],
        [
            "intros m; exact (@Raw.remove_3 elt m.(this) m.(NoDup)).",
            "VernacExtend",
            "c727775a549b017da0029bda97f2340a95c9dab5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_1 : forall m x e, MapsTo x e m -> find x m = Some e.",
            "VernacStartTheoremProof",
            "9f3974ce4c9fe9ec1aaee64c8ea8c682b7882a4d"
        ],
        [
            "intros m; exact (@Raw.find_1 elt m.(this) m.(NoDup)).",
            "VernacExtend",
            "0cbccb2d1fc6b5bbec5efaaedbdd2c11731eeee0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_2 : forall m x e, find x m = Some e -> MapsTo x e m.",
            "VernacStartTheoremProof",
            "3836b618816ed2c6e9ccfed50231b9f4c0fdd2c0"
        ],
        [
            "intros m; exact (@Raw.find_2 elt m.(this)).",
            "VernacExtend",
            "3d88a4d35195eb3e03fc4e8fe0e1878d97bfa57a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_1 : forall m x e, MapsTo x e m -> InA eq_key_elt (x,e) (elements m).",
            "VernacStartTheoremProof",
            "db64bb8ac9de62851889ea518b5661428bd2f2ae"
        ],
        [
            "intros m; exact (@Raw.elements_1 elt m.(this)).",
            "VernacExtend",
            "a5ce950e275ded59ee2c5ccd080b320179115593"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_2 : forall m x e, InA eq_key_elt (x,e) (elements m) -> MapsTo x e m.",
            "VernacStartTheoremProof",
            "86a573eb790c07e67636569383bc0b412900455f"
        ],
        [
            "intros m; exact (@Raw.elements_2 elt m.(this)).",
            "VernacExtend",
            "a440e873b1b1faa7f448691efa7d09210c3e4e98"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_3w : forall m, NoDupA eq_key (elements m).",
            "VernacStartTheoremProof",
            "b6bfca2c73d2f91d063d0d5611644e287fa9551a"
        ],
        [
            "intros m; exact (@Raw.elements_3w elt m.(this) m.(NoDup)).",
            "VernacExtend",
            "a36fc4c33d04f7054ce178231d18092135eb2b94"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_1 : forall m, cardinal m = length (elements m).",
            "VernacStartTheoremProof",
            "287b29d944df021bc5dc1caf364ddc3c0d974c72"
        ],
        [
            "intros; reflexivity.",
            "VernacExtend",
            "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_1 : forall m (A : Type) (i : A) (f : key -> elt -> A -> A), fold f m i = fold_left (fun a p => f (fst p) (snd p) a) (elements m) i.",
            "VernacStartTheoremProof",
            "3f9eccb77601fb87dcbc813fae883044a2c866f5"
        ],
        [
            "intros m; exact (@Raw.fold_1 elt m.(this)).",
            "VernacExtend",
            "6e7da6af700c7bb2bb3f0ee091dd574ed205c986"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_1 : forall m m' cmp, Equivb cmp m m' -> equal cmp m m' = true.",
            "VernacStartTheoremProof",
            "4e3380e8d5d00798de92a0f634c9b639634d041d"
        ],
        [
            "intros m m'; exact (@Raw.equal_1 elt m.(this) m.(NoDup) m'.(this) m'.(NoDup)).",
            "VernacExtend",
            "2ce4954f2463df8d00a047e801f3221616a08a86"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_2 : forall m m' cmp, equal cmp m m' = true -> Equivb cmp m m'.",
            "VernacStartTheoremProof",
            "0a3e6332234234e5064dee245e91ef87b60e59ed"
        ],
        [
            "intros m m'; exact (@Raw.equal_2 elt m.(this) m.(NoDup) m'.(this) m'.(NoDup)).",
            "VernacExtend",
            "77369b116ff6bd05a7de22517470a278b1e93a83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Elt.",
            "VernacEndSegment",
            "ef6686463d3f7dfcb40f4805cf8f45019f83fdad"
        ],
        [
            "Lemma map_1 : forall (elt elt':Type)(m: t elt)(x:key)(e:elt)(f:elt->elt'), MapsTo x e m -> MapsTo x (f e) (map f m).",
            "VernacStartTheoremProof",
            "027831aeae0a12f308f70711834c67f777a47dd2"
        ],
        [
            "intros elt elt' m; exact (@Raw.map_1 elt elt' m.(this)).",
            "VernacExtend",
            "136117eae9cf76e3f5bc6ac0c7bb3403ca754ddb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_2 : forall (elt elt':Type)(m: t elt)(x:key)(f:elt->elt'), In x (map f m) -> In x m.",
            "VernacStartTheoremProof",
            "4f35923037fc76633d3829114ddb403e82fda61a"
        ],
        [
            "intros elt elt' m; exact (@Raw.map_2 elt elt' m.(this)).",
            "VernacExtend",
            "41cbbaea742540651b6acd20c2bcb8581fd90a10"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapi_1 : forall (elt elt':Type)(m: t elt)(x:key)(e:elt) (f:key->elt->elt'), MapsTo x e m -> exists y, E.eq y x /\\ MapsTo x (f y e) (mapi f m).",
            "VernacStartTheoremProof",
            "d8167586f558cb12b099d01333e74d8190c208d4"
        ],
        [
            "intros elt elt' m; exact (@Raw.mapi_1 elt elt' m.(this)).",
            "VernacExtend",
            "5ee191dc4284db9d0e613c14910bddfa39767642"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapi_2 : forall (elt elt':Type)(m: t elt)(x:key) (f:key->elt->elt'), In x (mapi f m) -> In x m.",
            "VernacStartTheoremProof",
            "f8df0096e48cdc0f5b1e0e0ebf4916fa875bf3fc"
        ],
        [
            "intros elt elt' m; exact (@Raw.mapi_2 elt elt' m.(this)).",
            "VernacExtend",
            "e323bafa3a77796b6a67ce5cceea2d82e8b71afe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map2_1 : forall (elt elt' elt'':Type)(m: t elt)(m': t elt') (x:key)(f:option elt->option elt'->option elt''), In x m \\/ In x m' -> find x (map2 f m m') = f (find x m) (find x m').",
            "VernacStartTheoremProof",
            "1a21f7a88012be566bfb557908fbca1e62177951"
        ],
        [
            "intros elt elt' elt'' m m' x f; exact (@Raw.map2_1 elt elt' elt'' f m.(this) m.(NoDup) m'.(this) m'.(NoDup) x).",
            "VernacExtend",
            "4e8a429d2a357a6c02fb88d6bdc1da4317265b23"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map2_2 : forall (elt elt' elt'':Type)(m: t elt)(m': t elt') (x:key)(f:option elt->option elt'->option elt''), In x (map2 f m m') -> In x m \\/ In x m'.",
            "VernacStartTheoremProof",
            "c9a4bfe524623e9105614d341a15b410a729c2ef"
        ],
        [
            "intros elt elt' elt'' m m' x f; exact (@Raw.map2_2 elt elt' elt'' f m.(this) m.(NoDup) m'.(this) m'.(NoDup) x).",
            "VernacExtend",
            "956eed7f99940d7ad269e8097025676fb6aa64fb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Make.",
            "VernacEndSegment",
            "158dcf795fe84f422408437686b9ec9e7417690b"
        ]
    ],
    "proofs": [
        {
            "name": "empty_1",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "unfold Empty,empty.",
                        "VernacExtend",
                        "eb0f006317d2339d04026b9a0bcb2e2a59e57e24"
                    ]
                },
                {
                    "command": [
                        "intros a e.",
                        "VernacExtend",
                        "a0b71b763c6981cfc7e8f20bed193a1a863b36d3"
                    ]
                },
                {
                    "command": [
                        "intro abs.",
                        "VernacExtend",
                        "507faad5f60d8bacbff74bbb8b97320ddc30b274"
                    ]
                },
                {
                    "command": [
                        "inversion abs.",
                        "VernacExtend",
                        "09d03e9db7724be33019ea71216bb4ca7b9eded9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_NoDup",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "unfold empty; auto.",
                        "VernacExtend",
                        "a2693eb12ba268d474a985e95db0bb58ccb52aa5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_empty_1",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "unfold Empty, PX.MapsTo.",
                        "VernacExtend",
                        "f811512a5732e625d0492212123e45f1641edc82"
                    ]
                },
                {
                    "command": [
                        "intros m.",
                        "VernacExtend",
                        "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
                    ]
                },
                {
                    "command": [
                        "case m;auto.",
                        "VernacExtend",
                        "03d32148bea2d780819ccfe565dcc700b7cdbbd0"
                    ]
                },
                {
                    "command": [
                        "intros p l inlist.",
                        "VernacExtend",
                        "349d13e083de16f5eb886e3a4d34f1ab9e950355"
                    ]
                },
                {
                    "command": [
                        "destruct p.",
                        "VernacExtend",
                        "b4e16e38d42fc59fab0ab4e95e065fc358d5a1ad"
                    ]
                },
                {
                    "command": [
                        "absurd (InA eqke (t0, e) ((t0, e) :: l));auto.",
                        "VernacExtend",
                        "527d60aca9613ec67cd7849ec5f89fc739682c1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_empty_2",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "intros m.",
                        "VernacExtend",
                        "c09fb64a4c58d7cc03a731f8399ff847939fe4f0"
                    ]
                },
                {
                    "command": [
                        "case m;auto.",
                        "VernacExtend",
                        "03d32148bea2d780819ccfe565dcc700b7cdbbd0"
                    ]
                },
                {
                    "command": [
                        "intros p l abs.",
                        "VernacExtend",
                        "93d9f615c2d1c8ec6b31fd6b6adacc8d058385da"
                    ]
                },
                {
                    "command": [
                        "inversion abs.",
                        "VernacExtend",
                        "09d03e9db7724be33019ea71216bb4ca7b9eded9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_1",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros m Hm x; generalize Hm; clear Hm.",
                        "VernacExtend",
                        "f18c7dd61905fc14282e611703a08b845daf8edf"
                    ]
                },
                {
                    "command": [
                        "functional induction (mem x m);intros NoDup belong1;trivial.",
                        "VernacExtend",
                        "b6e35cc3297a98ad0e4162ccb5755e037d24ed34"
                    ]
                },
                {
                    "command": [
                        "inversion belong1.",
                        "VernacExtend",
                        "96e7d80255a8e42eb916d9f41f72c866f32e7ea8"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "inversion_clear NoDup.",
                        "VernacExtend",
                        "56a5fae3935f2e230e0b662fe691bf2296812203"
                    ]
                },
                {
                    "command": [
                        "inversion_clear belong1.",
                        "VernacExtend",
                        "df4c127af0bbba84e8c7b4f48cb1031add1f45c9"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H1.",
                        "VernacExtend",
                        "1443921cbef97c67d0bd87bf517b302257ed5b28"
                    ]
                },
                {
                    "command": [
                        "compute in H2; destruct H2.",
                        "VernacExtend",
                        "a20b940b220091c439fe9719a6e03273448630e6"
                    ]
                },
                {
                    "command": [
                        "contradiction.",
                        "VernacExtend",
                        "9b6a5c45e1144cbbccd544effb2a97082518704a"
                    ]
                },
                {
                    "command": [
                        "apply IHb; auto.",
                        "VernacExtend",
                        "3b7c96110dcf8d2188a60ff409007debb7175f5d"
                    ]
                },
                {
                    "command": [
                        "exists x0; auto.",
                        "VernacExtend",
                        "22d688388e0f7182748449b589a97b3a426b8fee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_2",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "intros m Hm x; generalize Hm; clear Hm; unfold PX.In,PX.MapsTo.",
                        "VernacExtend",
                        "817ee83099bde99ced43bbc047fbd740bf4ba98f"
                    ]
                },
                {
                    "command": [
                        "functional induction (mem x m); intros NoDup hyp; try discriminate.",
                        "VernacExtend",
                        "1150b2876581cbd2c2def52139acadc667d42174"
                    ]
                },
                {
                    "command": [
                        "exists _x; auto.",
                        "VernacExtend",
                        "1425ae5ada92bf0f458dbe9e15d130ade72c23c6"
                    ]
                },
                {
                    "command": [
                        "inversion_clear NoDup.",
                        "VernacExtend",
                        "56a5fae3935f2e230e0b662fe691bf2296812203"
                    ]
                },
                {
                    "command": [
                        "destruct IHb; auto.",
                        "VernacExtend",
                        "ae8f580ff5c28809c4f3f64ab3b8a099f1fb3a94"
                    ]
                },
                {
                    "command": [
                        "exists x0; auto.",
                        "VernacExtend",
                        "22d688388e0f7182748449b589a97b3a426b8fee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_2",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "intros m x.",
                        "VernacExtend",
                        "4bd0685a13944a2f9bdd9e3eba948dc74ae31a96"
                    ]
                },
                {
                    "command": [
                        "unfold PX.MapsTo.",
                        "VernacExtend",
                        "34dc055e556ce116d7d0386cccc9a1e8df521b0e"
                    ]
                },
                {
                    "command": [
                        "functional induction (find x m);simpl;intros e' eqfind; inversion eqfind; auto.",
                        "VernacExtend",
                        "82c449c0310020b93cc0d7e02cbd7a50acf912f9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_1",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "intros m Hm x e; generalize Hm; clear Hm; unfold PX.MapsTo.",
                        "VernacExtend",
                        "cf2abd3f82d69560f971d3e402d870aef42f3124"
                    ]
                },
                {
                    "command": [
                        "functional induction (find x m);simpl; subst; try clear H_eq_1.",
                        "VernacExtend",
                        "82a78af2c571abd263c23e970241532a40fe6f8f"
                    ]
                },
                {
                    "command": [
                        "inversion 2.",
                        "VernacExtend",
                        "9b1e056b41fea71e2db9d8977c86e79e382f15d7"
                    ]
                },
                {
                    "command": [
                        "do 2 inversion_clear 1.",
                        "VernacExtend",
                        "f5198afd93477309cb1cfb9a3ee4c8c8026f6631"
                    ]
                },
                {
                    "command": [
                        "compute in H2; destruct H2; subst; trivial.",
                        "VernacExtend",
                        "1e4ccc0fdeb33c2942cb81b12f3782eff9c06d33"
                    ]
                },
                {
                    "command": [
                        "elim H; apply InA_eqk with (x,e); auto.",
                        "VernacExtend",
                        "3819b3d5a483a8db6505bf9727a79a7656f69535"
                    ]
                },
                {
                    "command": [
                        "do 2 inversion_clear 1; auto.",
                        "VernacExtend",
                        "d63952efec2adb75eb850b2fffc505b4900d923a"
                    ]
                },
                {
                    "command": [
                        "compute in H2; destruct H2; elim _x; auto.",
                        "VernacExtend",
                        "2400df925ad06773a1ed922fdc8a4a70eecb555f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_eq",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "induction m; simpl; auto; destruct a; intros.",
                        "VernacExtend",
                        "ebae245b87fee3e5f993ca95083ac19cd336c512"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hm.",
                        "VernacExtend",
                        "ec3cc4482f86f8fa18b7399a6519331c51c1bbae"
                    ]
                },
                {
                    "command": [
                        "rewrite (IHm H1 x x'); auto.",
                        "VernacExtend",
                        "b65e130fde6a7be73487990400b5cc339c80f2b3"
                    ]
                },
                {
                    "command": [
                        "destruct (X.eq_dec x t0) as [|Hneq]; destruct (X.eq_dec x' t0) as [|?Hneq']; trivial.",
                        "VernacExtend",
                        "2488be561738fee932b5ffecaa721e67c2f793da"
                    ]
                },
                {
                    "command": [
                        "elim Hneq'; apply X.eq_trans with x; auto.",
                        "VernacExtend",
                        "53345434ba3fd8fa10887fa9cd2a600339874cb3"
                    ]
                },
                {
                    "command": [
                        "elim Hneq; apply X.eq_trans with x'; auto.",
                        "VernacExtend",
                        "bc4bcb6f47e22a4bb2a31d266ffe11d573c3f525"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_1",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "intros m x y e; generalize y; clear y; unfold PX.MapsTo.",
                        "VernacExtend",
                        "afb1faabf190aa10d12283628113d0bca41229a9"
                    ]
                },
                {
                    "command": [
                        "functional induction (add x e m);simpl;auto.",
                        "VernacExtend",
                        "09ceacb307c5d2f21069ac505071480e19f39d4d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_2",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros m x y e e'; generalize y e; clear y e; unfold PX.MapsTo.",
                        "VernacExtend",
                        "a06a2a080b29371a36d92159e381d0275cb72908"
                    ]
                },
                {
                    "command": [
                        "functional induction (add x e' m);simpl;auto.",
                        "VernacExtend",
                        "45543b9ad624a98523fa5f6dcbe98e232c90eed2"
                    ]
                },
                {
                    "command": [
                        "intros y' e'' eqky'; inversion_clear 1.",
                        "VernacExtend",
                        "a5c48c6f85a029ac679c9098b0d3fc3c387b1b50"
                    ]
                },
                {
                    "command": [
                        "destruct H0; simpl in *.",
                        "VernacExtend",
                        "ab12333ccab3c8ca5851593f04b1522b6e052fca"
                    ]
                },
                {
                    "command": [
                        "elim eqky'; apply X.eq_trans with k'; auto.",
                        "VernacExtend",
                        "55dec3dfd700e085b7c58930ec6d52175e3f3737"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "intros y' e'' eqky'; inversion_clear 1; intuition.",
                        "VernacExtend",
                        "ac720bab8eb4ae790f550e2d7031d6f1228a5800"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_3",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "intros m x y e e'.",
                        "VernacExtend",
                        "7da8d1fee9a14515bb3c4fb4b892322dea23acda"
                    ]
                },
                {
                    "command": [
                        "generalize y e; clear y e; unfold PX.MapsTo.",
                        "VernacExtend",
                        "120c259b5d8e5e7c14cb7c61cae725afeda3302d"
                    ]
                },
                {
                    "command": [
                        "functional induction (add x e' m);simpl;auto.",
                        "VernacExtend",
                        "45543b9ad624a98523fa5f6dcbe98e232c90eed2"
                    ]
                },
                {
                    "command": [
                        "intros; apply (In_inv_3 H0); auto.",
                        "VernacExtend",
                        "ca99b6f14152c3122226d2092da59de3bdbec1ac"
                    ]
                },
                {
                    "command": [
                        "constructor 2; apply (In_inv_3 H0); auto.",
                        "VernacExtend",
                        "6e2207643f061bdc07d360d9dcbb4dc122916f3a"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 2; auto.",
                        "VernacExtend",
                        "bc290f7b6503e8551b729a4ab8600b7e030b2922"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_3'",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "intros m x y e e'.",
                        "VernacExtend",
                        "7da8d1fee9a14515bb3c4fb4b892322dea23acda"
                    ]
                },
                {
                    "command": [
                        "generalize y e; clear y e.",
                        "VernacExtend",
                        "14f89bd7dd5f608c3c390fc3e553d73126cad3dd"
                    ]
                },
                {
                    "command": [
                        "functional induction (add x e' m);simpl;auto.",
                        "VernacExtend",
                        "45543b9ad624a98523fa5f6dcbe98e232c90eed2"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 2.",
                        "VernacExtend",
                        "2e0ae6be1fbdb7dadf1dd309278899532b35fe99"
                    ]
                },
                {
                    "command": [
                        "compute in H1; elim H; auto.",
                        "VernacExtend",
                        "d820da44738ad3658e529fa4492ad6f4b1be50c7"
                    ]
                },
                {
                    "command": [
                        "inversion H1.",
                        "VernacExtend",
                        "58dee2cce9b13b50b065ba894c1b533413715754"
                    ]
                },
                {
                    "command": [
                        "constructor 2; inversion_clear H0; auto.",
                        "VernacExtend",
                        "3b0e15a368bbfa43ee71ecc5ec215d338d451502"
                    ]
                },
                {
                    "command": [
                        "compute in H1; elim H; auto.",
                        "VernacExtend",
                        "d820da44738ad3658e529fa4492ad6f4b1be50c7"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 2; auto.",
                        "VernacExtend",
                        "bc290f7b6503e8551b729a4ab8600b7e030b2922"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_NoDup",
            "line_nb": 120,
            "steps": [
                {
                    "command": [
                        "induction m.",
                        "VernacExtend",
                        "6f6279e892ad221278939a9b429a59edaeeb1676"
                    ]
                },
                {
                    "command": [
                        "simpl; constructor; auto; red; inversion 1.",
                        "VernacExtend",
                        "9e8ba66cbffc530834341508abe402fa1b1db0cd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct a as (x',e').",
                        "VernacExtend",
                        "764c310807bc567724a7a3a14ff3afd5a32c8635"
                    ]
                },
                {
                    "command": [
                        "simpl; case (X.eq_dec x x'); inversion_clear Hm; auto.",
                        "VernacExtend",
                        "1f0c1bc90916997acfd4fc1b53a551b1c3755bbc"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply InA_eqk with (x,e); auto.",
                        "VernacExtend",
                        "88583e7b05e1bb1b7222fd204d082f90fc46727a"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "contradict H; apply add_3' with x e; auto.",
                        "VernacExtend",
                        "5e3853da4ef1fef744a033795629768b962017ed"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_eq",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply find_1; auto.",
                        "VernacExtend",
                        "fbc62f085a9b001085e937996a14400269b19beb"
                    ]
                },
                {
                    "command": [
                        "apply add_NoDup; auto.",
                        "VernacExtend",
                        "138dc9d85af6055547ea0848722efdb22822480c"
                    ]
                },
                {
                    "command": [
                        "apply add_1; auto.",
                        "VernacExtend",
                        "5b033b822b1e698507f2fd2dd2418d0f846a350f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_not_eq",
            "line_nb": 138,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case_eq (find x m); intros.",
                        "VernacExtend",
                        "ffd164e20a1af7b3d5c82ccac45d044379f151e3"
                    ]
                },
                {
                    "command": [
                        "apply find_1; auto.",
                        "VernacExtend",
                        "fbc62f085a9b001085e937996a14400269b19beb"
                    ]
                },
                {
                    "command": [
                        "apply add_NoDup; auto.",
                        "VernacExtend",
                        "138dc9d85af6055547ea0848722efdb22822480c"
                    ]
                },
                {
                    "command": [
                        "apply add_2; auto.",
                        "VernacExtend",
                        "8663103388d6bf3c5509b91030359b3dfe3426fb"
                    ]
                },
                {
                    "command": [
                        "apply find_2; auto.",
                        "VernacExtend",
                        "56e9131934083edf2be54c3a1dec9cdb05243df6"
                    ]
                },
                {
                    "command": [
                        "case_eq (find x (add a e m)); intros; auto.",
                        "VernacExtend",
                        "5ceb1be791b2d5ec8bdde392834445297182bcc3"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H0; symmetry.",
                        "VernacExtend",
                        "77d545d842b10d883bbe9485103a99e3276f6248"
                    ]
                },
                {
                    "command": [
                        "apply find_1; auto.",
                        "VernacExtend",
                        "fbc62f085a9b001085e937996a14400269b19beb"
                    ]
                },
                {
                    "command": [
                        "apply add_3 with a e; auto.",
                        "VernacExtend",
                        "e24362780dadbdd1ca14236709bce0996ea63062"
                    ]
                },
                {
                    "command": [
                        "apply find_2; auto.",
                        "VernacExtend",
                        "56e9131934083edf2be54c3a1dec9cdb05243df6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_1",
            "line_nb": 152,
            "steps": [
                {
                    "command": [
                        "intros m Hm x y; generalize Hm; clear Hm.",
                        "VernacExtend",
                        "7e57e28224aacfbcfde15b82a89d81ee1495355c"
                    ]
                },
                {
                    "command": [
                        "functional induction (remove x m);simpl;intros;auto.",
                        "VernacExtend",
                        "82bedd5a64ec43debb8bc8f604bb1dc1e4c99226"
                    ]
                },
                {
                    "command": [
                        "red; inversion 1; inversion H1.",
                        "VernacExtend",
                        "2916fd2a82f740a86f32c032d82e3b61b6840ed3"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hm.",
                        "VernacExtend",
                        "ec3cc4482f86f8fa18b7399a6519331c51c1bbae"
                    ]
                },
                {
                    "command": [
                        "subst.",
                        "VernacExtend",
                        "ccc9cb848804101be22a0bb6c324861981c5c7f1"
                    ]
                },
                {
                    "command": [
                        "contradict H0.",
                        "VernacExtend",
                        "e9276d92c17ea182f1ef13aa74464b33eea923d9"
                    ]
                },
                {
                    "command": [
                        "destruct H0 as (e,H2); unfold PX.MapsTo in H2.",
                        "VernacExtend",
                        "9251d8b48c981c494e5343d525cdbf877fba595f"
                    ]
                },
                {
                    "command": [
                        "apply InA_eqk with (y,e); auto.",
                        "VernacExtend",
                        "bff9d59ed6c6d4cbbbf4ba1e870cc8570405e1d5"
                    ]
                },
                {
                    "command": [
                        "compute; apply X.eq_trans with x; auto.",
                        "VernacExtend",
                        "1ed51b0e99f87436f74ceb4cdc41479a0ce0fb7f"
                    ]
                },
                {
                    "command": [
                        "intro H2.",
                        "VernacExtend",
                        "dec8eeff0df79bb9fb9b43f21bb02b0e6c67c603"
                    ]
                },
                {
                    "command": [
                        "destruct H2 as (e,H2); inversion_clear H2.",
                        "VernacExtend",
                        "601db57ae7c82255f017184f5cacb1da9e36a641"
                    ]
                },
                {
                    "command": [
                        "compute in H0; destruct H0.",
                        "VernacExtend",
                        "669ac2767880b14b934068697ca8c9703a6746fd"
                    ]
                },
                {
                    "command": [
                        "elim _x; apply X.eq_trans with y; auto.",
                        "VernacExtend",
                        "e395cb99a3dd9195da0dc9abdb40dcea7cf7f7f6"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hm.",
                        "VernacExtend",
                        "ec3cc4482f86f8fa18b7399a6519331c51c1bbae"
                    ]
                },
                {
                    "command": [
                        "elim (IHt0 H2 H).",
                        "VernacExtend",
                        "b2074adc442667e6a163f06ef7dbc2a03165497d"
                    ]
                },
                {
                    "command": [
                        "exists e; auto.",
                        "VernacExtend",
                        "5789629a110c642815687c3512a8c438259c58a1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_2",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "intros m Hm x y e; generalize Hm; clear Hm; unfold PX.MapsTo.",
                        "VernacExtend",
                        "860a414a274febe2f320984c3fea05969985e792"
                    ]
                },
                {
                    "command": [
                        "functional induction (remove x m);auto.",
                        "VernacExtend",
                        "43bee9362fa9e33ce6ef4379b65c6448901c69b2"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 3; auto.",
                        "VernacExtend",
                        "4682c14a4dedb52f2c05be0350a0f56248aabd7c"
                    ]
                },
                {
                    "command": [
                        "compute in H1; destruct H1.",
                        "VernacExtend",
                        "21ca49af7da13c7348f1f2230259a8179d80e279"
                    ]
                },
                {
                    "command": [
                        "elim H; apply X.eq_trans with k'; auto.",
                        "VernacExtend",
                        "d1db2345a2e01473c144ab08c804407db5901ec0"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 1; inversion_clear 2; auto.",
                        "VernacExtend",
                        "21853d67aa30512f79c173c9850895adc328e356"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_3",
            "line_nb": 178,
            "steps": [
                {
                    "command": [
                        "intros m Hm x y e; generalize Hm; clear Hm; unfold PX.MapsTo.",
                        "VernacExtend",
                        "860a414a274febe2f320984c3fea05969985e792"
                    ]
                },
                {
                    "command": [
                        "functional induction (remove x m);auto.",
                        "VernacExtend",
                        "43bee9362fa9e33ce6ef4379b65c6448901c69b2"
                    ]
                },
                {
                    "command": [
                        "do 2 inversion_clear 1; auto.",
                        "VernacExtend",
                        "d63952efec2adb75eb850b2fffc505b4900d923a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_3'",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "intros m Hm x y e; generalize Hm; clear Hm; unfold PX.MapsTo.",
                        "VernacExtend",
                        "860a414a274febe2f320984c3fea05969985e792"
                    ]
                },
                {
                    "command": [
                        "functional induction (remove x m);auto.",
                        "VernacExtend",
                        "43bee9362fa9e33ce6ef4379b65c6448901c69b2"
                    ]
                },
                {
                    "command": [
                        "do 2 inversion_clear 1; auto.",
                        "VernacExtend",
                        "d63952efec2adb75eb850b2fffc505b4900d923a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_NoDup",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "induction m.",
                        "VernacExtend",
                        "6f6279e892ad221278939a9b429a59edaeeb1676"
                    ]
                },
                {
                    "command": [
                        "simpl; intuition.",
                        "VernacExtend",
                        "2a8f84ed3abedbe9d9fbb80aa4215114cbdbe500"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hm.",
                        "VernacExtend",
                        "ec3cc4482f86f8fa18b7399a6519331c51c1bbae"
                    ]
                },
                {
                    "command": [
                        "destruct a as (x',e').",
                        "VernacExtend",
                        "764c310807bc567724a7a3a14ff3afd5a32c8635"
                    ]
                },
                {
                    "command": [
                        "simpl; case (X.eq_dec x x'); auto.",
                        "VernacExtend",
                        "af0b9369d146fa173c1e84f24ed47dce8ffad91e"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "contradict H; apply remove_3' with x; auto.",
                        "VernacExtend",
                        "ea2ccae98aac03c4c091b0cb4edf55e9790861c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_1",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_2",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_3w",
            "line_nb": 205,
            "steps": [
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_1",
            "line_nb": 209,
            "steps": [
                {
                    "command": [
                        "intros; functional induction (@fold A f m i); auto.",
                        "VernacExtend",
                        "2cfe3197bd2d70659964ede35c8d0f2bd4d58855"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "submap_1",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "unfold Submap, submap.",
                        "VernacExtend",
                        "cfde2c5ae2a954079045beade78a48a14667869b"
                    ]
                },
                {
                    "command": [
                        "induction m.",
                        "VernacExtend",
                        "6f6279e892ad221278939a9b429a59edaeeb1676"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "destruct a; simpl; intros.",
                        "VernacExtend",
                        "4e49b6b3b5abaf277bf3b6da7299270661478196"
                    ]
                },
                {
                    "command": [
                        "destruct H.",
                        "VernacExtend",
                        "8b2bca015429da94c456243b461e17a2a0582c40"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hm.",
                        "VernacExtend",
                        "ec3cc4482f86f8fa18b7399a6519331c51c1bbae"
                    ]
                },
                {
                    "command": [
                        "assert (H3 : In t0 m').",
                        "VernacExtend",
                        "656d2fabdd733da6c024b68e71be6c258b34768e"
                    ]
                },
                {
                    "command": [
                        "apply H; exists e; auto.",
                        "VernacExtend",
                        "d50a045ba5ba08d3d579df817a9bf810f0a5fcbb"
                    ]
                },
                {
                    "command": [
                        "destruct H3 as (e', H3).",
                        "VernacExtend",
                        "433c5c118374f60f1840495f94d43d9b31b5a81b"
                    ]
                },
                {
                    "command": [
                        "unfold check at 2; rewrite (find_1 Hm' H3).",
                        "VernacExtend",
                        "6574c13346a6765ca9038092a07a2f8a967f6a2b"
                    ]
                },
                {
                    "command": [
                        "rewrite (H0 t0); simpl; auto.",
                        "VernacExtend",
                        "11e00be74a6faf0fa276bc0ce6ae795725203fb0"
                    ]
                },
                {
                    "command": [
                        "eapply IHm; auto.",
                        "VernacExtend",
                        "2c03d86f95e7e20289469415a81d3361e298d82f"
                    ]
                },
                {
                    "command": [
                        "split; intuition.",
                        "VernacExtend",
                        "ad92f41c7c6120efbfc528c4c895eac1600e6297"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "destruct H5 as (e'',H5); exists e''; auto.",
                        "VernacExtend",
                        "89da297bc412eafe7b63b7ac524ac82a1351f77a"
                    ]
                },
                {
                    "command": [
                        "apply H0 with k; auto.",
                        "VernacExtend",
                        "0cdccdbf6ef798296f354832c7689d10c8be93cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "submap_2",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "unfold Submap, submap.",
                        "VernacExtend",
                        "cfde2c5ae2a954079045beade78a48a14667869b"
                    ]
                },
                {
                    "command": [
                        "induction m.",
                        "VernacExtend",
                        "6f6279e892ad221278939a9b429a59edaeeb1676"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "destruct H0; inversion H0.",
                        "VernacExtend",
                        "74973f71f4282ded413008096923957ee00b8f4a"
                    ]
                },
                {
                    "command": [
                        "inversion H0.",
                        "VernacExtend",
                        "38a13882efcff2ae2c6c07fc8055d56c6c1776f2"
                    ]
                },
                {
                    "command": [
                        "destruct a; simpl; intros.",
                        "VernacExtend",
                        "4e49b6b3b5abaf277bf3b6da7299270661478196"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hm.",
                        "VernacExtend",
                        "ec3cc4482f86f8fa18b7399a6519331c51c1bbae"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_b_true in H.",
                        "VernacExtend",
                        "bcd0ea41d9fb93287790cd201f00899afe5dd453"
                    ]
                },
                {
                    "command": [
                        "assert (check cmp t0 e m' = true).",
                        "VernacExtend",
                        "f86a3d437df69576d8842fdc6969e581e7b46610"
                    ]
                },
                {
                    "command": [
                        "clear H1 H0 Hm' IHm.",
                        "VernacExtend",
                        "0d23868da10c33828e71f3a43f626f41a208008c"
                    ]
                },
                {
                    "command": [
                        "set (b:=check cmp t0 e m') in *.",
                        "VernacExtend",
                        "3324d0722957f730e3c122a47664c3d3afceaa2e"
                    ]
                },
                {
                    "command": [
                        "generalize H; clear H; generalize b; clear b.",
                        "VernacExtend",
                        "bfc05e785ee20c3d01a95fed48730af15a42f7b9"
                    ]
                },
                {
                    "command": [
                        "induction m; simpl; auto; intros.",
                        "VernacExtend",
                        "6cc44e2cf968f6d1111d6be72d9944cc2c307dcc"
                    ]
                },
                {
                    "command": [
                        "destruct a; simpl in *.",
                        "VernacExtend",
                        "f16ce63ce10cf4add043d122c2aa557e3f699d02"
                    ]
                },
                {
                    "command": [
                        "destruct (andb_prop _ _ (IHm _ H)); auto.",
                        "VernacExtend",
                        "a88d61b0a5bf3dc5e603f098cf4586f5dd436d5c"
                    ]
                },
                {
                    "command": [
                        "rewrite H2 in H.",
                        "VernacExtend",
                        "5c57065bc35a25df99bc7f4746a61a8b7705ac48"
                    ]
                },
                {
                    "command": [
                        "destruct (IHm H1 m' Hm' cmp H); auto.",
                        "VernacExtend",
                        "904b04cd592c52db96d64c582bf2e2fdceca99c2"
                    ]
                },
                {
                    "command": [
                        "unfold check in H2.",
                        "VernacExtend",
                        "556a89af1709dd6bbf730a84073797e20a4f7b80"
                    ]
                },
                {
                    "command": [
                        "case_eq (find t0 m'); [intros e' H5 | intros H5]; rewrite H5 in H2; try discriminate.",
                        "VernacExtend",
                        "3062cba74e67ccef1723835ada0e92f937caf921"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "destruct H6 as (e0,H6); inversion_clear H6.",
                        "VernacExtend",
                        "5cfe1a55cccdbe48102418f3790c1aa0baaa1ef3"
                    ]
                },
                {
                    "command": [
                        "compute in H7; destruct H7; subst.",
                        "VernacExtend",
                        "08cd7e15312a2431c1793c830552e8c3350a535c"
                    ]
                },
                {
                    "command": [
                        "exists e'.",
                        "VernacExtend",
                        "a668b65063a69e3331e3f3a09838f057d45d4c4e"
                    ]
                },
                {
                    "command": [
                        "apply PX.MapsTo_eq with t0; auto.",
                        "VernacExtend",
                        "f48833ec96213e6085c011c4eae6e3a0400bf7a0"
                    ]
                },
                {
                    "command": [
                        "apply find_2; auto.",
                        "VernacExtend",
                        "56e9131934083edf2be54c3a1dec9cdb05243df6"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "exists e0; auto.",
                        "VernacExtend",
                        "e3fc53089377ff144b9b55ee98f47a9d8b95a928"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H6.",
                        "VernacExtend",
                        "9461b763d8f2f379b38aff429cc618322617178f"
                    ]
                },
                {
                    "command": [
                        "compute in H8; destruct H8; subst.",
                        "VernacExtend",
                        "a63b9777757139380809e755b3a50a1beb146d96"
                    ]
                },
                {
                    "command": [
                        "rewrite (find_1 Hm' (PX.MapsTo_eq H6 H7)) in H5; congruence.",
                        "VernacExtend",
                        "3cb66be0391d027743a0f711531cca24b6dcbd4a"
                    ]
                },
                {
                    "command": [
                        "apply H4 with k; auto.",
                        "VernacExtend",
                        "89df87a8852bf7adc27cc5ab86a27eb1d861ee02"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_1",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "unfold Equivb, equal.",
                        "VernacExtend",
                        "039b068b5048c5420e69bed351ed2783fc5957fd"
                    ]
                },
                {
                    "command": [
                        "intuition.",
                        "VernacExtend",
                        "ebd9388eeb482972743f9cce5cbddbd85ca5bdfd"
                    ]
                },
                {
                    "command": [
                        "apply andb_true_intro; split; apply submap_1; unfold Submap; firstorder.",
                        "VernacExtend",
                        "04ea93b38f46b6dd1ca432450e2cdb9c6c3da22d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_2",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "unfold Equivb, equal.",
                        "VernacExtend",
                        "039b068b5048c5420e69bed351ed2783fc5957fd"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct (andb_prop _ _ H); clear H.",
                        "VernacExtend",
                        "57755fdff20ffbcb1611c85a136751e71b7a949f"
                    ]
                },
                {
                    "command": [
                        "generalize (submap_2 Hm Hm' H0).",
                        "VernacExtend",
                        "6a227ba83e2ce28cfca624c8287a71e0ee17d18c"
                    ]
                },
                {
                    "command": [
                        "generalize (submap_2 Hm' Hm H1).",
                        "VernacExtend",
                        "3623f370d43a43ed11c3cda7aeb4c6f97dbaacac"
                    ]
                },
                {
                    "command": [
                        "firstorder.",
                        "VernacExtend",
                        "ceb9f57e98a5f5a73ee421cf30fd2f4f09432d14"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_1",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "intros m x e f.",
                        "VernacExtend",
                        "7b57936d95608d61f666fde26a6c3a28463433dd"
                    ]
                },
                {
                    "command": [
                        "induction m.",
                        "VernacExtend",
                        "6f6279e892ad221278939a9b429a59edaeeb1676"
                    ]
                },
                {
                    "command": [
                        "inversion 1.",
                        "VernacExtend",
                        "9152817da0dc28ba4701e3ff01c293af28a1059f"
                    ]
                },
                {
                    "command": [
                        "destruct a as (x',e').",
                        "VernacExtend",
                        "764c310807bc567724a7a3a14ff3afd5a32c8635"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 1.",
                        "VernacExtend",
                        "389c04e455824abd99633abf60667aeaa306819a"
                    ]
                },
                {
                    "command": [
                        "constructor 1.",
                        "VernacExtend",
                        "08a5b9fd59ad59b27ce13f998c760c4014bfab97"
                    ]
                },
                {
                    "command": [
                        "unfold eqke in *; simpl in *; intuition congruence.",
                        "VernacExtend",
                        "34bd3ffc66c3048151ab7f46ea875dc7c254b2c5"
                    ]
                },
                {
                    "command": [
                        "constructor 2.",
                        "VernacExtend",
                        "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
                    ]
                },
                {
                    "command": [
                        "unfold MapsTo in *; auto.",
                        "VernacExtend",
                        "65920f9e6487518f778384da4a6545920edd7658"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_2",
            "line_nb": 300,
            "steps": [
                {
                    "command": [
                        "intros m x f.",
                        "VernacExtend",
                        "32bfc2c3cecdf2fe29550f529fbd8b25e0080490"
                    ]
                },
                {
                    "command": [
                        "induction m; simpl.",
                        "VernacExtend",
                        "8eeca9e02ca7b585e952baf1eea0278de04f5480"
                    ]
                },
                {
                    "command": [
                        "intros (e,abs).",
                        "VernacExtend",
                        "eaf2b96acd5c4e45d07ba986a09f64fbd7c691a0"
                    ]
                },
                {
                    "command": [
                        "inversion abs.",
                        "VernacExtend",
                        "09d03e9db7724be33019ea71216bb4ca7b9eded9"
                    ]
                },
                {
                    "command": [
                        "destruct a as (x',e).",
                        "VernacExtend",
                        "ea8219623bc505bf41cfacd9371179c92c85348f"
                    ]
                },
                {
                    "command": [
                        "intros hyp.",
                        "VernacExtend",
                        "d38783d7d6b69ca847114c65facb8086bc8ed6a0"
                    ]
                },
                {
                    "command": [
                        "inversion hyp.",
                        "VernacExtend",
                        "d98f8e6a86bfdac2e601f2f880bd2a19b4ca6eba"
                    ]
                },
                {
                    "command": [
                        "clear hyp.",
                        "VernacExtend",
                        "fd1c5d6ee7a008e9a88de8c279e52930c713d71b"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst; rename x0 into e'.",
                        "VernacExtend",
                        "8355301973dadeccf364e3406fc3a744e66ac1c2"
                    ]
                },
                {
                    "command": [
                        "exists e; constructor.",
                        "VernacExtend",
                        "cbc3f025d2b799a846773daa1d3c5d50915e449c"
                    ]
                },
                {
                    "command": [
                        "unfold eqke in *; simpl in *; intuition.",
                        "VernacExtend",
                        "7f17437d013399908382cd71cb1b66fafe9e777a"
                    ]
                },
                {
                    "command": [
                        "destruct IHm as (e'',hyp).",
                        "VernacExtend",
                        "91525e69450cfe35989aa52861e78f857604825c"
                    ]
                },
                {
                    "command": [
                        "exists e'; auto.",
                        "VernacExtend",
                        "905002a8aa67af5640ec1c8770286416699398b3"
                    ]
                },
                {
                    "command": [
                        "exists e''.",
                        "VernacExtend",
                        "1d635fc816d0c4c508cc071714ab58ffd409c3b4"
                    ]
                },
                {
                    "command": [
                        "constructor 2; auto.",
                        "VernacExtend",
                        "7da0a8caf04c8554762a019f74337cf755edf2f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_NoDup",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "induction m; simpl; auto.",
                        "VernacExtend",
                        "fef957ed452ac0981dd5620d82fa8cb3b652f75b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct a as (x',e').",
                        "VernacExtend",
                        "764c310807bc567724a7a3a14ff3afd5a32c8635"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hm.",
                        "VernacExtend",
                        "ec3cc4482f86f8fa18b7399a6519331c51c1bbae"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "clear IHm H0.",
                        "VernacExtend",
                        "a75926bdf46a6bd9f25789b4641ef11b29225667"
                    ]
                },
                {
                    "command": [
                        "induction m; simpl in *; auto.",
                        "VernacExtend",
                        "8a32fce9a5181e79442db184d89baa81734e3d05"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "destruct a; inversion H; auto.",
                        "VernacExtend",
                        "b2193f3cf32fb55d61f574b0e2a5aa84bccf7160"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapi_1",
            "line_nb": 329,
            "steps": [
                {
                    "command": [
                        "intros m x e f.",
                        "VernacExtend",
                        "7b57936d95608d61f666fde26a6c3a28463433dd"
                    ]
                },
                {
                    "command": [
                        "induction m.",
                        "VernacExtend",
                        "6f6279e892ad221278939a9b429a59edaeeb1676"
                    ]
                },
                {
                    "command": [
                        "inversion 1.",
                        "VernacExtend",
                        "9152817da0dc28ba4701e3ff01c293af28a1059f"
                    ]
                },
                {
                    "command": [
                        "destruct a as (x',e').",
                        "VernacExtend",
                        "764c310807bc567724a7a3a14ff3afd5a32c8635"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 1.",
                        "VernacExtend",
                        "389c04e455824abd99633abf60667aeaa306819a"
                    ]
                },
                {
                    "command": [
                        "exists x'.",
                        "VernacExtend",
                        "62741617e2f199cfb9538ac58a668218579faa2e"
                    ]
                },
                {
                    "command": [
                        "destruct H0; simpl in *.",
                        "VernacExtend",
                        "ab12333ccab3c8ca5851593f04b1522b6e052fca"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "constructor 1.",
                        "VernacExtend",
                        "08a5b9fd59ad59b27ce13f998c760c4014bfab97"
                    ]
                },
                {
                    "command": [
                        "unfold eqke in *; simpl in *; intuition congruence.",
                        "VernacExtend",
                        "34bd3ffc66c3048151ab7f46ea875dc7c254b2c5"
                    ]
                },
                {
                    "command": [
                        "destruct IHm as (y, hyp); auto.",
                        "VernacExtend",
                        "ec29ee51e726e06c87a39c9fe9f7fb84fd904f55"
                    ]
                },
                {
                    "command": [
                        "exists y; intuition.",
                        "VernacExtend",
                        "b647df3d6b2a69e5d68d0fac9593fef284885e4e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapi_2",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "intros m x f.",
                        "VernacExtend",
                        "32bfc2c3cecdf2fe29550f529fbd8b25e0080490"
                    ]
                },
                {
                    "command": [
                        "induction m; simpl.",
                        "VernacExtend",
                        "8eeca9e02ca7b585e952baf1eea0278de04f5480"
                    ]
                },
                {
                    "command": [
                        "intros (e,abs).",
                        "VernacExtend",
                        "eaf2b96acd5c4e45d07ba986a09f64fbd7c691a0"
                    ]
                },
                {
                    "command": [
                        "inversion abs.",
                        "VernacExtend",
                        "09d03e9db7724be33019ea71216bb4ca7b9eded9"
                    ]
                },
                {
                    "command": [
                        "destruct a as (x',e).",
                        "VernacExtend",
                        "ea8219623bc505bf41cfacd9371179c92c85348f"
                    ]
                },
                {
                    "command": [
                        "intros hyp.",
                        "VernacExtend",
                        "d38783d7d6b69ca847114c65facb8086bc8ed6a0"
                    ]
                },
                {
                    "command": [
                        "inversion hyp.",
                        "VernacExtend",
                        "d98f8e6a86bfdac2e601f2f880bd2a19b4ca6eba"
                    ]
                },
                {
                    "command": [
                        "clear hyp.",
                        "VernacExtend",
                        "fd1c5d6ee7a008e9a88de8c279e52930c713d71b"
                    ]
                },
                {
                    "command": [
                        "inversion H; subst; rename x0 into e'.",
                        "VernacExtend",
                        "8355301973dadeccf364e3406fc3a744e66ac1c2"
                    ]
                },
                {
                    "command": [
                        "exists e; constructor.",
                        "VernacExtend",
                        "cbc3f025d2b799a846773daa1d3c5d50915e449c"
                    ]
                },
                {
                    "command": [
                        "unfold eqke in *; simpl in *; intuition.",
                        "VernacExtend",
                        "7f17437d013399908382cd71cb1b66fafe9e777a"
                    ]
                },
                {
                    "command": [
                        "destruct IHm as (e'',hyp).",
                        "VernacExtend",
                        "91525e69450cfe35989aa52861e78f857604825c"
                    ]
                },
                {
                    "command": [
                        "exists e'; auto.",
                        "VernacExtend",
                        "905002a8aa67af5640ec1c8770286416699398b3"
                    ]
                },
                {
                    "command": [
                        "exists e''.",
                        "VernacExtend",
                        "1d635fc816d0c4c508cc071714ab58ffd409c3b4"
                    ]
                },
                {
                    "command": [
                        "constructor 2; auto.",
                        "VernacExtend",
                        "7da0a8caf04c8554762a019f74337cf755edf2f1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapi_NoDup",
            "line_nb": 361,
            "steps": [
                {
                    "command": [
                        "induction m; simpl; auto.",
                        "VernacExtend",
                        "fef957ed452ac0981dd5620d82fa8cb3b652f75b"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct a as (x',e').",
                        "VernacExtend",
                        "764c310807bc567724a7a3a14ff3afd5a32c8635"
                    ]
                },
                {
                    "command": [
                        "inversion_clear Hm; auto.",
                        "VernacExtend",
                        "c38d30dc04eaff6dc1c9ab18f0f989a99cc35d65"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "clear IHm H0.",
                        "VernacExtend",
                        "a75926bdf46a6bd9f25789b4641ef11b29225667"
                    ]
                },
                {
                    "command": [
                        "induction m; simpl in *; auto.",
                        "VernacExtend",
                        "8a32fce9a5181e79442db184d89baa81734e3d05"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "destruct a; inversion_clear H; auto.",
                        "VernacExtend",
                        "2a9c43ce59abc99dde4b7d1f5d1239643f452a4c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_right_pair_NoDup",
            "line_nb": 381,
            "steps": [
                {
                    "command": [
                        "induction l; simpl; auto.",
                        "VernacExtend",
                        "2300dcaca2cea0b38a7d9c3b8a28bfa9feaddecf"
                    ]
                },
                {
                    "command": [
                        "destruct a; simpl; auto.",
                        "VernacExtend",
                        "d3281b1ac93d1263ea39f3556240463bbc6e4604"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 1.",
                        "VernacExtend",
                        "389c04e455824abd99633abf60667aeaa306819a"
                    ]
                },
                {
                    "command": [
                        "intros; apply add_NoDup; auto.",
                        "VernacExtend",
                        "5c38f0911d4139eacb792725b42706864292773a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_NoDup",
            "line_nb": 388,
            "steps": [
                {
                    "command": [
                        "unfold combine, combine_r, combine_l.",
                        "VernacExtend",
                        "5cf964f11facdf71cab96a75a1d185818d6952ef"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "set (f1 := fun (k : key) (e : elt) => (Some e, find k m')).",
                        "VernacExtend",
                        "48f3d38a34a9ab7b34a2b9e63d21291d2ef45433"
                    ]
                },
                {
                    "command": [
                        "set (f2 := fun (k : key) (e' : elt') => (find k m, Some e')).",
                        "VernacExtend",
                        "07d641f643af5d86139b8d54c7c699e1997d0fdd"
                    ]
                },
                {
                    "command": [
                        "generalize (mapi_NoDup Hm f1).",
                        "VernacExtend",
                        "5b41c6272a8d6f4e5c89318978d60a832f04b23a"
                    ]
                },
                {
                    "command": [
                        "generalize (mapi_NoDup Hm' f2).",
                        "VernacExtend",
                        "b45f1bd04ab75b64a8f799cc0ff2d20e1260304b"
                    ]
                },
                {
                    "command": [
                        "set (l := mapi f1 m); clearbody l.",
                        "VernacExtend",
                        "4bb85fff592f9d3f20f07e71c0d0841f05396ee7"
                    ]
                },
                {
                    "command": [
                        "set (r := mapi f2 m'); clearbody r.",
                        "VernacExtend",
                        "76a8e7d7d9ad9ee1496b96dccfda2bd321d5dc88"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_l_1",
            "line_nb": 401,
            "steps": [
                {
                    "command": [
                        "unfold combine_l.",
                        "VernacExtend",
                        "c268c61b4831e3d0f3dcad59117bc0899d494fd7"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case_eq (find x m); intros.",
                        "VernacExtend",
                        "ffd164e20a1af7b3d5c82ccac45d044379f151e3"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply find_1.",
                        "VernacExtend",
                        "2022fd05df0f077ce2f57bd8287f9efe9fcb2b9d"
                    ]
                },
                {
                    "command": [
                        "apply mapi_NoDup; auto.",
                        "VernacExtend",
                        "69e270776cf546f60610e2fab91f2264cb8c6dee"
                    ]
                },
                {
                    "command": [
                        "destruct (mapi_1 (fun k e => (Some e, find k m')) (find_2 H)) as (y,(H0,H1)).",
                        "VernacExtend",
                        "d7b16ac1297b9570ee1dde604d44d895b2d98a74"
                    ]
                },
                {
                    "command": [
                        "rewrite (find_eq Hm' (X.eq_sym H0)); auto.",
                        "VernacExtend",
                        "bd2e3516d87d446a338d205bac88803d649d9189"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case_eq (find x (mapi (fun k e => (Some e, find k m')) m)); intros; auto.",
                        "VernacExtend",
                        "13f7d7f857848b599b2095e4ccf1e877af466067"
                    ]
                },
                {
                    "command": [
                        "destruct (@mapi_2 _ _ m x (fun k e => (Some e, find k m'))).",
                        "VernacExtend",
                        "29c0365acb4518513475f5a33b9e2bc86586c9ad"
                    ]
                },
                {
                    "command": [
                        "exists p; apply find_2; auto.",
                        "VernacExtend",
                        "0fee1d53dac816d32df42842c7c32b327f3a2547"
                    ]
                },
                {
                    "command": [
                        "rewrite (find_1 Hm H1) in H; discriminate.",
                        "VernacExtend",
                        "1df94a64ce082ddbb2fc9a5f624ed1d982a8a721"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_r_1",
            "line_nb": 416,
            "steps": [
                {
                    "command": [
                        "unfold combine_r.",
                        "VernacExtend",
                        "002cbfd25ce1b9094381e6205f30227b3993f298"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case_eq (find x m'); intros.",
                        "VernacExtend",
                        "55647f8f6d735e6e02a36b794591230f0b5e4768"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply find_1.",
                        "VernacExtend",
                        "2022fd05df0f077ce2f57bd8287f9efe9fcb2b9d"
                    ]
                },
                {
                    "command": [
                        "apply mapi_NoDup; auto.",
                        "VernacExtend",
                        "69e270776cf546f60610e2fab91f2264cb8c6dee"
                    ]
                },
                {
                    "command": [
                        "destruct (mapi_1 (fun k e => (find k m, Some e)) (find_2 H)) as (y,(H0,H1)).",
                        "VernacExtend",
                        "5fbb28d47ecadc2ad7bf58513c7a40edae98bde9"
                    ]
                },
                {
                    "command": [
                        "rewrite (find_eq Hm (X.eq_sym H0)); auto.",
                        "VernacExtend",
                        "337b27d17efa332657e8bb71eb00b03a182c7893"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "case_eq (find x (mapi (fun k e' => (find k m, Some e')) m')); intros; auto.",
                        "VernacExtend",
                        "bba739725679f70f3ada38ad9c69d814499ba255"
                    ]
                },
                {
                    "command": [
                        "destruct (@mapi_2 _ _ m' x (fun k e' => (find k m, Some e'))).",
                        "VernacExtend",
                        "8cb68b79d4ab7a748c055047c9546d1ed2f7ce81"
                    ]
                },
                {
                    "command": [
                        "exists p; apply find_2; auto.",
                        "VernacExtend",
                        "0fee1d53dac816d32df42842c7c32b327f3a2547"
                    ]
                },
                {
                    "command": [
                        "rewrite (find_1 Hm' H1) in H; discriminate.",
                        "VernacExtend",
                        "d0f1c280897debfbc1e7c68b47aced80fda258ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "combine_1",
            "line_nb": 432,
            "steps": [
                {
                    "command": [
                        "unfold combine.",
                        "VernacExtend",
                        "3edb9a802aa40130f600e158ebfb10551d172159"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (combine_r_1 Hm Hm' x).",
                        "VernacExtend",
                        "14069c82620f597b2925372fb446e894c74473c1"
                    ]
                },
                {
                    "command": [
                        "generalize (combine_l_1 Hm Hm' x).",
                        "VernacExtend",
                        "232b8ff9c40f1f95c9f7bb57b36f547fbd436eb5"
                    ]
                },
                {
                    "command": [
                        "assert (NoDupA (eqk (elt:=oee')) (combine_l m m')).",
                        "VernacExtend",
                        "ff917f763cce20a596efd53134f6151440a40099"
                    ]
                },
                {
                    "command": [
                        "unfold combine_l; apply mapi_NoDup; auto.",
                        "VernacExtend",
                        "36ba49e3a163ea7591be19f0a584e6945fe1f50c"
                    ]
                },
                {
                    "command": [
                        "assert (NoDupA (eqk (elt:=oee')) (combine_r m m')).",
                        "VernacExtend",
                        "ee96251a7664aefa0f4bf5c0e2f90230d7c29470"
                    ]
                },
                {
                    "command": [
                        "unfold combine_r; apply mapi_NoDup; auto.",
                        "VernacExtend",
                        "53bf11ffbad2e3fd077571f402f0894a7f789927"
                    ]
                },
                {
                    "command": [
                        "set (l := combine_l m m') in *; clearbody l.",
                        "VernacExtend",
                        "c04790f522fd1d2297c316aa9f09f55292e414fe"
                    ]
                },
                {
                    "command": [
                        "set (r := combine_r m m') in *; clearbody r.",
                        "VernacExtend",
                        "05e2310df12b48c1c2b0961668a61ab6c87d4037"
                    ]
                },
                {
                    "command": [
                        "set (o := find x m); clearbody o.",
                        "VernacExtend",
                        "87e7147e59e4389ba660b9c54099764764a2304c"
                    ]
                },
                {
                    "command": [
                        "set (o' := find x m'); clearbody o'.",
                        "VernacExtend",
                        "e1cd7caa3601d83ffc3294039550466f8aed318a"
                    ]
                },
                {
                    "command": [
                        "clear Hm' Hm m m'.",
                        "VernacExtend",
                        "f0d5afb9347e1b5a8f255a1fb327878c487f8ab3"
                    ]
                },
                {
                    "command": [
                        "induction l.",
                        "VernacExtend",
                        "1194af70832939708f8c7fde2f18f81c37b97a0c"
                    ]
                },
                {
                    "command": [
                        "destruct o; destruct o'; simpl; intros; discriminate || auto.",
                        "VernacExtend",
                        "30d6705d83a98b5e5f340014d9e41a4f0be223ab"
                    ]
                },
                {
                    "command": [
                        "destruct a; simpl in *; intros.",
                        "VernacExtend",
                        "213c4b343e12cfb4820eadc15b7c2b74bee66341"
                    ]
                },
                {
                    "command": [
                        "destruct (X.eq_dec x t0); simpl in *.",
                        "VernacExtend",
                        "7b0ad978e0a78c09942d944949289997965f2845"
                    ]
                },
                {
                    "command": [
                        "unfold at_least_left in H1.",
                        "VernacExtend",
                        "5dc23d8b3b0ff069ef947826b27311cddf1190f7"
                    ]
                },
                {
                    "command": [
                        "destruct o; simpl in *; try discriminate.",
                        "VernacExtend",
                        "7bd19d39e80a0661a4e4b5d0618ac00dd2196ea2"
                    ]
                },
                {
                    "command": [
                        "inversion H1; subst.",
                        "VernacExtend",
                        "0d6098b7de8d43e8e8e8d2cd73cf811a6b3dbedf"
                    ]
                },
                {
                    "command": [
                        "apply add_eq; auto.",
                        "VernacExtend",
                        "24ea22209d4c29d115d720033505c12ef669adb7"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H; auto.",
                        "VernacExtend",
                        "d3d75a19294b96dbafba557f2d6b54b4e866b1a0"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "rewrite <- IHl; auto.",
                        "VernacExtend",
                        "3caf862ca6806d59542cc74bf9ce681744f7a041"
                    ]
                },
                {
                    "command": [
                        "apply add_not_eq; auto.",
                        "VernacExtend",
                        "c66d44d0b33ee75a641dfa24ceb0720f34781603"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map2_NoDup",
            "line_nb": 462,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold map2.",
                        "VernacExtend",
                        "f2e7d7de0ffbe24b94c4846f3762782a1653d449"
                    ]
                },
                {
                    "command": [
                        "assert (H0:=combine_NoDup Hm Hm').",
                        "VernacExtend",
                        "7513b64cd50b8fcf04ca5dd233f426429a3ebea3"
                    ]
                },
                {
                    "command": [
                        "set (l0:=combine m m') in *; clearbody l0.",
                        "VernacExtend",
                        "7e68a38055f2d48b799d514ea7ad05981ecdc661"
                    ]
                },
                {
                    "command": [
                        "set (f':= fun p : oee' => f (fst p) (snd p)).",
                        "VernacExtend",
                        "bc99541732917a16f325d6cac042571a809b6f1c"
                    ]
                },
                {
                    "command": [
                        "assert (H1:=map_NoDup (elt' := option elt'') H0 f').",
                        "VernacExtend",
                        "cfc7ab67037abd08014933696368538264bdf8d4"
                    ]
                },
                {
                    "command": [
                        "set (l1:=map f' l0) in *; clearbody l1.",
                        "VernacExtend",
                        "c77692936a50784fff3fbe6d259bd6b5d5b4e177"
                    ]
                },
                {
                    "command": [
                        "clear f' f H0 l0 Hm Hm' m m'.",
                        "VernacExtend",
                        "995cd71dd88ec941136a763e75f2b6f9634bd67f"
                    ]
                },
                {
                    "command": [
                        "induction l1.",
                        "VernacExtend",
                        "dfeb7bb70eb7390d22f3eada025c33a176cd1338"
                    ]
                },
                {
                    "command": [
                        "simpl; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H1.",
                        "VernacExtend",
                        "1443921cbef97c67d0bd87bf517b302257ed5b28"
                    ]
                },
                {
                    "command": [
                        "destruct a; destruct o; simpl; auto.",
                        "VernacExtend",
                        "62aed9f5a26e4cadc1ff106c72dfeddb3236e9e2"
                    ]
                },
                {
                    "command": [
                        "constructor; auto.",
                        "VernacExtend",
                        "686f227fe0f57af60032eb35216aef1e62d0c0e5"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "clear IHl1.",
                        "VernacExtend",
                        "13bedd3ca87614160716de8b665c5675b1eb4359"
                    ]
                },
                {
                    "command": [
                        "induction l1.",
                        "VernacExtend",
                        "dfeb7bb70eb7390d22f3eada025c33a176cd1338"
                    ]
                },
                {
                    "command": [
                        "inversion H.",
                        "VernacExtend",
                        "ee20838bdd77512b43142d655a3924bf07bffebb"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H0.",
                        "VernacExtend",
                        "e21f851b9423020c7f22dae666bca7829c9b1967"
                    ]
                },
                {
                    "command": [
                        "destruct a; destruct o; simpl in *; auto.",
                        "VernacExtend",
                        "f0c7ec12bfa6d699514a9b8bfce858d8e67b3b53"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H; auto.",
                        "VernacExtend",
                        "d3d75a19294b96dbafba557f2d6b54b4e866b1a0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map2_0",
            "line_nb": 485,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold map2.",
                        "VernacExtend",
                        "f2e7d7de0ffbe24b94c4846f3762782a1653d449"
                    ]
                },
                {
                    "command": [
                        "assert (H:=combine_1 Hm Hm' x).",
                        "VernacExtend",
                        "949ca25cf933dc6f788513a3e6230c0a07aaa4ca"
                    ]
                },
                {
                    "command": [
                        "assert (H2:=combine_NoDup Hm Hm').",
                        "VernacExtend",
                        "658023276709d3ccf4ec10e48d8bfe88c11e3ab8"
                    ]
                },
                {
                    "command": [
                        "set (f':= fun p : oee' => f (fst p) (snd p)).",
                        "VernacExtend",
                        "bc99541732917a16f325d6cac042571a809b6f1c"
                    ]
                },
                {
                    "command": [
                        "set (m0 := combine m m') in *; clearbody m0.",
                        "VernacExtend",
                        "617c82ec9257ac494a746e14e98cba0c8531e2a9"
                    ]
                },
                {
                    "command": [
                        "set (o:=find x m) in *; clearbody o.",
                        "VernacExtend",
                        "a8229b5bcce8104716065eacb20f0de3bea3a581"
                    ]
                },
                {
                    "command": [
                        "set (o':=find x m') in *; clearbody o'.",
                        "VernacExtend",
                        "37c70128b8827de7e2c56496c69dc8ebe43c8da1"
                    ]
                },
                {
                    "command": [
                        "clear Hm Hm' m m'.",
                        "VernacExtend",
                        "acd6d0f3b323c661811d8223ae488a5bbae04466"
                    ]
                },
                {
                    "command": [
                        "generalize H; clear H.",
                        "VernacExtend",
                        "11a8e8bdae40bbaf90ad63809f486c3fcb4cd3a4"
                    ]
                },
                {
                    "command": [
                        "match goal with |- ?m=?n -> ?p=?q => assert ((m=n->p=q)/\\(m=None -> p=None)); [|intuition] end.",
                        "VernacExtend",
                        "1b0b02e8612e25bdb995088b87b01f5ce13f3135"
                    ]
                },
                {
                    "command": [
                        "induction m0; simpl in *; intuition.",
                        "VernacExtend",
                        "398ce84fef66d9ea387acd2c44ccae1f66d99975"
                    ]
                },
                {
                    "command": [
                        "destruct o; destruct o'; simpl in *; try discriminate; auto.",
                        "VernacExtend",
                        "e47740fa4d78e24c62a03dbfc7b1f606d8590247"
                    ]
                },
                {
                    "command": [
                        "destruct a as (k,(oo,oo')); simpl in *.",
                        "VernacExtend",
                        "e907ef0b79886dfa73daf28127b910eb04b0c955"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H2.",
                        "VernacExtend",
                        "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
                    ]
                },
                {
                    "command": [
                        "destruct (X.eq_dec x k) as [|Hneq]; simpl in *.",
                        "VernacExtend",
                        "ee7f9e0397530400ea554772336138d041d6f008"
                    ]
                },
                {
                    "command": [
                        "assert (at_least_one_then_f o o' = f oo oo').",
                        "VernacExtend",
                        "b98226e6db6e00ac5c5cb3ff55b60dab5398ddb8"
                    ]
                },
                {
                    "command": [
                        "destruct o; destruct o'; simpl in *; inversion_clear H; auto.",
                        "VernacExtend",
                        "6207801334c1121aa5593e60c1860b6399d592a3"
                    ]
                },
                {
                    "command": [
                        "rewrite H2.",
                        "VernacExtend",
                        "c34b98a4ea7c987830199fe378bb7a145a0d652e"
                    ]
                },
                {
                    "command": [
                        "unfold f'; simpl.",
                        "VernacExtend",
                        "41170b69a136eb646686878305bfe4e5cee5740c"
                    ]
                },
                {
                    "command": [
                        "destruct (f oo oo'); simpl.",
                        "VernacExtend",
                        "d334aadab2915f999b1762bb77a5a7702a43e0d6"
                    ]
                },
                {
                    "command": [
                        "destruct (X.eq_dec x k) as [|Hneq]; try contradict Hneq; auto.",
                        "VernacExtend",
                        "f2fdaae6e789b2ff69b26050d2c3a1d9b19d82a1"
                    ]
                },
                {
                    "command": [
                        "destruct (IHm0 H1) as (_,H4); apply H4; auto.",
                        "VernacExtend",
                        "4932e41509ad6e4826e7f8cded986f37e0689260"
                    ]
                },
                {
                    "command": [
                        "case_eq (find x m0); intros; auto.",
                        "VernacExtend",
                        "2f851647b1d09d2f6230ea1040ebebe9ed69914d"
                    ]
                },
                {
                    "command": [
                        "elim H0.",
                        "VernacExtend",
                        "2d71de27573d5f7f982cd3c14a3bba29df8752cb"
                    ]
                },
                {
                    "command": [
                        "apply InA_eqk with (x,p); auto.",
                        "VernacExtend",
                        "713de3f20117bbd835f9f6f2d4f5acc84911bae3"
                    ]
                },
                {
                    "command": [
                        "apply InA_eqke_eqk.",
                        "VernacExtend",
                        "64ccaa92918f0de62f86a0951da9d4fcfb70355a"
                    ]
                },
                {
                    "command": [
                        "exact (find_2 H3).",
                        "VernacExtend",
                        "51f7bee4d806cd50ae6b92a448f4633fc9831b94"
                    ]
                },
                {
                    "command": [
                        "unfold f'; simpl.",
                        "VernacExtend",
                        "41170b69a136eb646686878305bfe4e5cee5740c"
                    ]
                },
                {
                    "command": [
                        "destruct (f oo oo'); simpl.",
                        "VernacExtend",
                        "d334aadab2915f999b1762bb77a5a7702a43e0d6"
                    ]
                },
                {
                    "command": [
                        "destruct (X.eq_dec x k); [ contradict Hneq; auto | auto].",
                        "VernacExtend",
                        "b87da69e5185f47eeb1501f6c00b7ed55ef41e5c"
                    ]
                },
                {
                    "command": [
                        "destruct (IHm0 H1) as (H3,_); apply H3; auto.",
                        "VernacExtend",
                        "9f02621ac7d152cc1f52be2c813150328ff19578"
                    ]
                },
                {
                    "command": [
                        "destruct (IHm0 H1) as (H3,_); apply H3; auto.",
                        "VernacExtend",
                        "9f02621ac7d152cc1f52be2c813150328ff19578"
                    ]
                },
                {
                    "command": [
                        "destruct a as (k,(oo,oo')).",
                        "VernacExtend",
                        "06ce06983f44c2344e855a9fa78fcb2567bf3e0d"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H2.",
                        "VernacExtend",
                        "951d59869a2bafa3e041b055bd4a8bdff67bdad5"
                    ]
                },
                {
                    "command": [
                        "destruct (X.eq_dec x k) as [|Hneq].",
                        "VernacExtend",
                        "d13473039897523b9120fc1c1855cadd93c03335"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "unfold f'; simpl.",
                        "VernacExtend",
                        "41170b69a136eb646686878305bfe4e5cee5740c"
                    ]
                },
                {
                    "command": [
                        "destruct (f oo oo'); simpl.",
                        "VernacExtend",
                        "d334aadab2915f999b1762bb77a5a7702a43e0d6"
                    ]
                },
                {
                    "command": [
                        "destruct (X.eq_dec x k); [ contradict Hneq; auto | auto].",
                        "VernacExtend",
                        "b87da69e5185f47eeb1501f6c00b7ed55ef41e5c"
                    ]
                },
                {
                    "command": [
                        "destruct (IHm0 H1) as (_,H4); apply H4; auto.",
                        "VernacExtend",
                        "4932e41509ad6e4826e7f8cded986f37e0689260"
                    ]
                },
                {
                    "command": [
                        "destruct (IHm0 H1) as (_,H4); apply H4; auto.",
                        "VernacExtend",
                        "4932e41509ad6e4826e7f8cded986f37e0689260"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map2_1",
            "line_nb": 530,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite map2_0; auto.",
                        "VernacExtend",
                        "00b896f6901d5f6fe85d53fb1c61147556d6b64c"
                    ]
                },
                {
                    "command": [
                        "destruct H as [(e,H)|(e,H)].",
                        "VernacExtend",
                        "fe49115bfbfa5885a110d62366d6ea1b25c7c590"
                    ]
                },
                {
                    "command": [
                        "rewrite (find_1 Hm H).",
                        "VernacExtend",
                        "4a223a7f8b9b6c1f967acb617050bad3b78cd9ab"
                    ]
                },
                {
                    "command": [
                        "destruct (find x m'); simpl; auto.",
                        "VernacExtend",
                        "61a517839a9118d840b2181e00815e956b7f0866"
                    ]
                },
                {
                    "command": [
                        "rewrite (find_1 Hm' H).",
                        "VernacExtend",
                        "cb895b487f0b74aa127736af3e2c2d799faa3dce"
                    ]
                },
                {
                    "command": [
                        "destruct (find x m); simpl; auto.",
                        "VernacExtend",
                        "52a8b05db4e941878106d18fb9b9895de2889d4a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map2_2",
            "line_nb": 539,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct H as (e,H).",
                        "VernacExtend",
                        "a2fe7ec8c7b58f9ef97d3461e4b1af489a0271aa"
                    ]
                },
                {
                    "command": [
                        "generalize (map2_0 Hm Hm' x).",
                        "VernacExtend",
                        "3d763d386ea321f008a7661fa2d76b168ebfd795"
                    ]
                },
                {
                    "command": [
                        "rewrite (find_1 (map2_NoDup Hm Hm') H).",
                        "VernacExtend",
                        "243352b7df168a47a5dff09b017155de28ac6787"
                    ]
                },
                {
                    "command": [
                        "generalize (@find_2 _ m x).",
                        "VernacExtend",
                        "4619596b4d244364b624bb575723b5375a41bed4"
                    ]
                },
                {
                    "command": [
                        "generalize (@find_2 _ m' x).",
                        "VernacExtend",
                        "daf154f8a7e9bea8fed95c700433874a2538be3a"
                    ]
                },
                {
                    "command": [
                        "destruct (find x m); destruct (find x m'); simpl; intros.",
                        "VernacExtend",
                        "8479c897fdebe6ee31f3e0c24952ed7130e2e9bb"
                    ]
                },
                {
                    "command": [
                        "left; exists e0; auto.",
                        "VernacExtend",
                        "0d4c41f574c7db21e78a0ff917c355af9b4d84ed"
                    ]
                },
                {
                    "command": [
                        "left; exists e0; auto.",
                        "VernacExtend",
                        "0d4c41f574c7db21e78a0ff917c355af9b4d84ed"
                    ]
                },
                {
                    "command": [
                        "right; exists e0; auto.",
                        "VernacExtend",
                        "09e1fa8e04a44b26322618b72ab7c16466ce1328"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MapsTo_1",
            "line_nb": 586,
            "steps": [
                {
                    "command": [
                        "intros m; exact (@Raw.PX.MapsTo_eq elt m.(this)).",
                        "VernacExtend",
                        "5fa4378a27c819cc0f15ba811a31a83a0da9a2d6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_1",
            "line_nb": 637,
            "steps": [
                {
                    "command": [
                        "intros; reflexivity.",
                        "VernacExtend",
                        "c20cfa06d7b692e82c145d2df3bde4c2fe4eb461"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}