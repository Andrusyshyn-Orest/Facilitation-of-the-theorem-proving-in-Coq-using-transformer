{
    "filename": "theories/FSets/FMapFullAVL.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import FunInd Recdef FMapInterface FMapList ZArith Int FMapAVL Lia.",
            "VernacRequire",
            "b1379b34492770e6f516c641115b57e18236c20b"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Module AvlProofs (Import I:Int)(X: OrderedType).",
            "VernacDefineModule",
            "35f6f660d5c7afe82062a08cc79229e7e366af47"
        ],
        [
            "Module Import Raw := Raw I X.",
            "VernacDefineModule",
            "e8b22a8db614343d832f02be9e1fe35216595122"
        ],
        [
            "Module Import II:=MoreInt(I).",
            "VernacDefineModule",
            "1bbaa6f1583a5a1d194f6d068d3f813f81836484"
        ],
        [
            "Import Raw.Proofs.",
            "VernacImport",
            "634614f64b599e90276abb2be591f306813fbdb1"
        ],
        [
            "Local Open Scope pair_scope.",
            "VernacOpenCloseScope",
            "dc0dcd7d851fdcb4f21419978fcd045b285d11f4"
        ],
        [
            "Local Open Scope Int_scope.",
            "VernacOpenCloseScope",
            "7ceb4e893c3620e71cc3f8f031adbda11a943f86"
        ],
        [
            "Ltac omega_max := i2z_refl; lia.",
            "VernacExtend",
            "c085b5562b51b8915e5bf681fde76f3b0f5cbc2e"
        ],
        [
            "Section Elt.",
            "VernacBeginSection",
            "7d8c2b7c85358610d3707ffaa378f25da37c746b"
        ],
        [
            "Variable elt : Type.",
            "VernacAssumption",
            "b310aa6dfd45260477c670b93268036cda9cb86b"
        ],
        [
            "Implicit Types m r : t elt.",
            "VernacReserve",
            "f93820f56337dfc84a5a07aade23fdcb7b1724ca"
        ],
        [
            "Inductive avl : t elt -> Prop := | RBLeaf : avl (Leaf _) | RBNode : forall x e l r h, avl l -> avl r -> -(2) <= height l - height r <= 2 -> h = max (height l) (height r) + 1 -> avl (Node l x e r h).",
            "VernacInductive",
            "cd892a9b39f2d54a904268ee427575cb29c0fc22"
        ],
        [
            "Hint Constructors avl.",
            "VernacHints",
            "fac3cbe02053cfc50c2f49a1d2355b46d9eb6682"
        ],
        [
            "Lemma height_non_negative : forall (s : t elt), avl s -> height s >= 0.",
            "VernacStartTheoremProof",
            "bf32496c59dce15ac44250ad1b07fbeeed1f499a"
        ],
        [
            "induction s; simpl; intros; auto with zarith.",
            "VernacExtend",
            "3b39dad199753beb175e19bb82de76ba1f089b39"
        ],
        [
            "inv avl; intuition; omega_max.",
            "VernacExtend",
            "c81aea26e3060f96f7d16c06a2859eec938a8f56"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac avl_nn_hyp H := let nz := fresh \"nz\" in assert (nz := height_non_negative H).",
            "VernacExtend",
            "b392a25715c1347637d8bfc219eeed744baeeb73"
        ],
        [
            "Ltac avl_nn h := let t := type of h in match type of t with | Prop => avl_nn_hyp h | _ => match goal with H : avl h |- _ => avl_nn_hyp H end end.",
            "VernacExtend",
            "c8ef37395fdc14274b4f4c45caaf8ab66d49a90b"
        ],
        [
            "Ltac avl_nns := match goal with | H:avl _ |- _ => avl_nn_hyp H; clear H; avl_nns | _ => idtac end.",
            "VernacExtend",
            "914e77eb4eea02e34a0409d67fc4bdac362b0e49"
        ],
        [
            "Lemma avl_node : forall x e l r, avl l -> avl r -> -(2) <= height l - height r <= 2 -> avl (Node l x e r (max (height l) (height r) + 1)).",
            "VernacStartTheoremProof",
            "d784afa8f58918bb7898ad5ebe666f5d93c93943"
        ],
        [
            "intros; auto.",
            "VernacExtend",
            "d08fa6a6cf0cffe77a1b06ed19eb1fcfb0b64546"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve avl_node.",
            "VernacHints",
            "eb6995a8467861b45389eace6cae3e274d3e0c4b"
        ],
        [
            "Lemma height_0 : forall l, avl l -> height l = 0 -> l = Leaf _.",
            "VernacStartTheoremProof",
            "c3201d6bd86ddbcb320ed6f2764cf224871ddeed"
        ],
        [
            "destruct 1; intuition; simpl in *.",
            "VernacExtend",
            "0758dee040b02ed2a07bd6d77e0f35d28b59021d"
        ],
        [
            "avl_nns; simpl in *; exfalso; omega_max.",
            "VernacExtend",
            "6920c4f91f75690979ac043e2cd22eb1a4054ce8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_avl : avl (empty elt).",
            "VernacStartTheoremProof",
            "4e5ad9f431e769625f7b4a9abbf958807460c045"
        ],
        [
            "unfold empty; auto.",
            "VernacExtend",
            "a2693eb12ba268d474a985e95db0bb58ccb52aa5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma create_avl : forall l x e r, avl l -> avl r -> -(2) <= height l - height r <= 2 -> avl (create l x e r).",
            "VernacStartTheoremProof",
            "53eab9b2741ab4ff3c1c3bfd531fbe579bc65791"
        ],
        [
            "unfold create; auto.",
            "VernacExtend",
            "4d89f4b44a39fae4ef436be7c5a318c2b03c802d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma create_height : forall l x e r, avl l -> avl r -> -(2) <= height l - height r <= 2 -> height (create l x e r) = max (height l) (height r) + 1.",
            "VernacStartTheoremProof",
            "0b29b0d21ef0caadbbcac40c46138e4315d6ab76"
        ],
        [
            "unfold create; intros; auto.",
            "VernacExtend",
            "da01e65ccc4388e0898e886288cead977eaccf3c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bal_avl : forall l x e r, avl l -> avl r -> -(3) <= height l - height r <= 3 -> avl (bal l x e r).",
            "VernacStartTheoremProof",
            "dd921757648acec3d3f20fbb2044e1af2dc4d4c3"
        ],
        [
            "intros l x e r; functional induction (bal l x e r); intros; clearf; inv avl; simpl in *; match goal with |- avl (assert_false _ _ _ _) => avl_nns | _ => repeat apply create_avl; simpl in *; auto end; omega_max.",
            "VernacExtend",
            "3c519fa1a1b3ddbcb78badf4ffce6a05653a60bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bal_height_1 : forall l x e r, avl l -> avl r -> -(3) <= height l - height r <= 3 -> 0 <= height (bal l x e r) - max (height l) (height r) <= 1.",
            "VernacStartTheoremProof",
            "20b774a8a544b3c3289bc525600372eebe234dce"
        ],
        [
            "intros l x e r; functional induction (bal l x e r); intros; clearf; inv avl; avl_nns; simpl in *; omega_max.",
            "VernacExtend",
            "c0c819eab717b4a94fd32ca8d569f8ea816dc219"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bal_height_2 : forall l x e r, avl l -> avl r -> -(2) <= height l - height r <= 2 -> height (bal l x e r) == max (height l) (height r) +1.",
            "VernacStartTheoremProof",
            "86970448cd8cfc265e4c5f616da3d3871b54f5d5"
        ],
        [
            "intros l x e r; functional induction (bal l x e r); intros; clearf; inv avl; avl_nns; simpl in *; omega_max.",
            "VernacExtend",
            "c0c819eab717b4a94fd32ca8d569f8ea816dc219"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac omega_bal := match goal with | H:avl ?l, H':avl ?r |- context [ bal ?l ?x ?e ?r ] => generalize (bal_height_1 x e H H') (bal_height_2 x e H H'); omega_max end.",
            "VernacExtend",
            "08046b53db81c37d2a2f0c31aaf34f353470f085"
        ],
        [
            "Lemma add_avl_1 : forall m x e, avl m -> avl (add x e m) /\\ 0 <= height (add x e m) - height m <= 1.",
            "VernacStartTheoremProof",
            "6080bb22ba5614af7ea9e188e090df3279964d45"
        ],
        [
            "intros m x e; functional induction (add x e m); intros; inv avl; simpl in *.",
            "VernacExtend",
            "958093fad0a971e3113bcdc1bb19006a17f424b9"
        ],
        [
            "intuition; try constructor; simpl; auto; try omega_max.",
            "VernacExtend",
            "9990221ee874bdde548e43d907972dadc4f3ac1b"
        ],
        [
            "destruct IHt; auto.",
            "VernacExtend",
            "14f1e040026932fedfba4c3bd8b9e8b36d3c69fd"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply bal_avl; auto; omega_max.",
            "VernacExtend",
            "77b298b4c9091b78358dc9eaeabdaeb006f7ef58"
        ],
        [
            "omega_bal.",
            "VernacExtend",
            "4df0d075d0e711bc3b271b0516e984323a64764e"
        ],
        [
            "intuition; omega_max.",
            "VernacExtend",
            "3f4d146664a865316232a994272dc04ec2d8c0e7"
        ],
        [
            "destruct IHt; auto.",
            "VernacExtend",
            "14f1e040026932fedfba4c3bd8b9e8b36d3c69fd"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply bal_avl; auto; omega_max.",
            "VernacExtend",
            "77b298b4c9091b78358dc9eaeabdaeb006f7ef58"
        ],
        [
            "omega_bal.",
            "VernacExtend",
            "4df0d075d0e711bc3b271b0516e984323a64764e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_avl : forall m x e, avl m -> avl (add x e m).",
            "VernacStartTheoremProof",
            "54739e505bb57ee20871d88d6e2e7dc99c280949"
        ],
        [
            "intros; generalize (add_avl_1 x e H); intuition.",
            "VernacExtend",
            "c1f0a98e76be375c0898195a7ac2d0cd700636c0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve add_avl.",
            "VernacHints",
            "cc334cb59a9c816c2398cd7e379ab104f5c3d119"
        ],
        [
            "Lemma remove_min_avl_1 : forall l x e r h, avl (Node l x e r h) -> avl (remove_min l x e r)#1 /\\ 0 <= height (Node l x e r h) - height (remove_min l x e r)#1 <= 1.",
            "VernacStartTheoremProof",
            "c8b95f810095f890fa62c17fa5367ef033ac04b8"
        ],
        [
            "intros l x e r; functional induction (remove_min l x e r); simpl in *; intros.",
            "VernacExtend",
            "b502c42666fa2f8e1aacdbf6e8d6ffd52a33b956"
        ],
        [
            "inv avl; simpl in *; split; auto.",
            "VernacExtend",
            "0268329b3ef4bcb6232426d5e9b6c27ed021a8cf"
        ],
        [
            "avl_nns; omega_max.",
            "VernacExtend",
            "32e0a93659ba3d54574bbadcd2073a70ad58215e"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "rewrite e0 in IHp;simpl in IHp;destruct (IHp _x); auto.",
            "VernacExtend",
            "180f7ff43f179e115094e3243018caa52b0632c5"
        ],
        [
            "split; simpl in *.",
            "VernacExtend",
            "4361e889f6852d85b380e5b18e7956d4ec5b7f46"
        ],
        [
            "apply bal_avl; auto; omega_max.",
            "VernacExtend",
            "77b298b4c9091b78358dc9eaeabdaeb006f7ef58"
        ],
        [
            "omega_bal.",
            "VernacExtend",
            "4df0d075d0e711bc3b271b0516e984323a64764e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_min_avl : forall l x e r h, avl (Node l x e r h) -> avl (remove_min l x e r)#1.",
            "VernacStartTheoremProof",
            "85f1ebd4fa5b14cdb0e200c3014e82e23d68cd94"
        ],
        [
            "intros; generalize (remove_min_avl_1 H); intuition.",
            "VernacExtend",
            "a561f15dea56345a827b145ea56ba7240f8b923d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma merge_avl_1 : forall m1 m2, avl m1 -> avl m2 -> -(2) <= height m1 - height m2 <= 2 -> avl (merge m1 m2) /\\ 0<= height (merge m1 m2) - max (height m1) (height m2) <=1.",
            "VernacStartTheoremProof",
            "c0f2f539215c17c9cd25a4b467423349dbc36d66"
        ],
        [
            "intros m1 m2; functional induction (merge m1 m2); intros; try factornode _x _x0 _x1 _x2 _x3 as m1.",
            "VernacExtend",
            "07de463e88ea1763b8808dbb8d00a0b256fd68c3"
        ],
        [
            "simpl; split; auto; avl_nns; omega_max.",
            "VernacExtend",
            "ab7209d3f6dd025f90964cbc638965626614b513"
        ],
        [
            "simpl; split; auto; avl_nns; omega_max.",
            "VernacExtend",
            "ab7209d3f6dd025f90964cbc638965626614b513"
        ],
        [
            "generalize (remove_min_avl_1 H0).",
            "VernacExtend",
            "de3e40c694cef79d737bf947b1b4a5b4c61fec28"
        ],
        [
            "rewrite e1; destruct 1.",
            "VernacExtend",
            "80be42181fdd2343e580ab1f1638c7f25099f559"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply bal_avl; auto.",
            "VernacExtend",
            "e6414c78d2c53666d23e65c265e5194cdc4d4b35"
        ],
        [
            "omega_max.",
            "VernacExtend",
            "2759a551b1951fbac837fa29762a4a86b1bc093c"
        ],
        [
            "omega_bal.",
            "VernacExtend",
            "4df0d075d0e711bc3b271b0516e984323a64764e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma merge_avl : forall m1 m2, avl m1 -> avl m2 -> -(2) <= height m1 - height m2 <= 2 -> avl (merge m1 m2).",
            "VernacStartTheoremProof",
            "13719d6c66fb5011819842de29e2dc3e7bdccdc2"
        ],
        [
            "intros; generalize (merge_avl_1 H H0 H1); intuition.",
            "VernacExtend",
            "9d9d6234c04a39601a6ffef27662e06f9109c709"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_avl_1 : forall m x, avl m -> avl (remove x m) /\\ 0 <= height m - height (remove x m) <= 1.",
            "VernacStartTheoremProof",
            "641676a91147875b373a10cbe72fc3fd8ad47c9a"
        ],
        [
            "intros m x; functional induction (remove x m); intros.",
            "VernacExtend",
            "8c67ae7000788ed017a2bc5332b36d05e1b12ed4"
        ],
        [
            "split; auto; omega_max.",
            "VernacExtend",
            "10bbd035229af7f197137c6fd2cd94300d36637c"
        ],
        [
            "inv avl.",
            "VernacExtend",
            "8194c33501f2f96f879e31c1685b62a32931f297"
        ],
        [
            "destruct (IHt H0).",
            "VernacExtend",
            "329adae48ff0a41586c278cc8eb3f54d623fb0f3"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply bal_avl; auto.",
            "VernacExtend",
            "e6414c78d2c53666d23e65c265e5194cdc4d4b35"
        ],
        [
            "omega_max.",
            "VernacExtend",
            "2759a551b1951fbac837fa29762a4a86b1bc093c"
        ],
        [
            "omega_bal.",
            "VernacExtend",
            "4df0d075d0e711bc3b271b0516e984323a64764e"
        ],
        [
            "inv avl.",
            "VernacExtend",
            "8194c33501f2f96f879e31c1685b62a32931f297"
        ],
        [
            "generalize (merge_avl_1 H0 H1 H2).",
            "VernacExtend",
            "f0ee78bf91e9e226bec5c12e06529a5a7a433e4c"
        ],
        [
            "intuition omega_max.",
            "VernacExtend",
            "4f66456dc1a5804b9246eb633c5dc333cc1c22c8"
        ],
        [
            "inv avl.",
            "VernacExtend",
            "8194c33501f2f96f879e31c1685b62a32931f297"
        ],
        [
            "destruct (IHt H1).",
            "VernacExtend",
            "d90947d978391c5526a83eea23ebebd1cf046296"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply bal_avl; auto.",
            "VernacExtend",
            "e6414c78d2c53666d23e65c265e5194cdc4d4b35"
        ],
        [
            "omega_max.",
            "VernacExtend",
            "2759a551b1951fbac837fa29762a4a86b1bc093c"
        ],
        [
            "omega_bal.",
            "VernacExtend",
            "4df0d075d0e711bc3b271b0516e984323a64764e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_avl : forall m x, avl m -> avl (remove x m).",
            "VernacStartTheoremProof",
            "7a2cf22f2a2a2e166864f60de7846b307bd4daa5"
        ],
        [
            "intros; generalize (remove_avl_1 x H); intuition.",
            "VernacExtend",
            "4a77465d383b613a5490b9ad71c98e7bf30a6d71"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve remove_avl.",
            "VernacHints",
            "9f989fc8d4b17a87c071346d281626c8f8d7933d"
        ],
        [
            "Lemma join_avl_1 : forall l x d r, avl l -> avl r -> avl (join l x d r) /\\ 0<= height (join l x d r) - max (height l) (height r) <= 1.",
            "VernacStartTheoremProof",
            "fbc15432f62a34cf0a10128bb4e9c69a09b1a032"
        ],
        [
            "join_tac.",
            "VernacExtend",
            "fcadd626977256d2b588fba3ffaada8d55550e24"
        ],
        [
            "split; simpl; auto.",
            "VernacExtend",
            "e2ee7819fbb32d2c4a8d46eec291a3c64ca8c3fb"
        ],
        [
            "destruct (add_avl_1 x d H0).",
            "VernacExtend",
            "c579cf6466b047edec2a7f88dcfbf90cd2db2d8d"
        ],
        [
            "avl_nns; omega_max.",
            "VernacExtend",
            "32e0a93659ba3d54574bbadcd2073a70ad58215e"
        ],
        [
            "set (l:=Node ll lx ld lr lh) in *.",
            "VernacExtend",
            "3e4c3fb90793d6f8db3c4f6128fda26cb2c51148"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "destruct (add_avl_1 x d H).",
            "VernacExtend",
            "e43b1e47595ddb575656168f725f060b3d42a4e6"
        ],
        [
            "simpl (height (Leaf elt)).",
            "VernacExtend",
            "97c6f62a0f6371409302dc007765a49a8de4e020"
        ],
        [
            "avl_nns; omega_max.",
            "VernacExtend",
            "32e0a93659ba3d54574bbadcd2073a70ad58215e"
        ],
        [
            "inversion_clear H.",
            "VernacExtend",
            "90909d92eb32e95a21a5b90b29a49dc97bcea342"
        ],
        [
            "assert (height (Node rl rx rd rr rh) = rh); auto.",
            "VernacExtend",
            "d4f4f9a5c8bbae34e68acd40afa2a7bce519211f"
        ],
        [
            "set (r := Node rl rx rd rr rh) in *; clearbody r.",
            "VernacExtend",
            "d023423ec549c323b882b3cbfabb22b3b2d3c01d"
        ],
        [
            "destruct (Hlr x d r H2 H0); clear Hrl Hlr.",
            "VernacExtend",
            "9384abfa8fee204940aa739f706b2de5f306e490"
        ],
        [
            "set (j := join lr x d r) in *; clearbody j.",
            "VernacExtend",
            "94dc57f91585b956e250a01a247ffce9812b35ac"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (-(3) <= height ll - height j <= 3) by omega_max.",
            "VernacExtend",
            "0da1f7e53a71b24109d54a722e2c9e0091a4c6ff"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply bal_avl; auto.",
            "VernacExtend",
            "e6414c78d2c53666d23e65c265e5194cdc4d4b35"
        ],
        [
            "omega_bal.",
            "VernacExtend",
            "4df0d075d0e711bc3b271b0516e984323a64764e"
        ],
        [
            "inversion_clear H0.",
            "VernacExtend",
            "e21f851b9423020c7f22dae666bca7829c9b1967"
        ],
        [
            "assert (height (Node ll lx ld lr lh) = lh); auto.",
            "VernacExtend",
            "02b866ca5c9bd92cc27fd5e1d69a3c18c88bde82"
        ],
        [
            "set (l := Node ll lx ld lr lh) in *; clearbody l.",
            "VernacExtend",
            "8ae4aefe3bb236196c03b1592741c1768a46fc7d"
        ],
        [
            "destruct (Hrl H H1); clear Hrl Hlr.",
            "VernacExtend",
            "9aea56cf169f81f0eb79b61e9155f18d641d339d"
        ],
        [
            "set (j := join l x d rl) in *; clearbody j.",
            "VernacExtend",
            "a1041155e7e2f600d486693a47d3acb896204fa0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "assert (-(3) <= height j - height rr <= 3) by omega_max.",
            "VernacExtend",
            "f2d0d235023b1f5937254aecd5c8fcb7156e7ae4"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply bal_avl; auto.",
            "VernacExtend",
            "e6414c78d2c53666d23e65c265e5194cdc4d4b35"
        ],
        [
            "omega_bal.",
            "VernacExtend",
            "4df0d075d0e711bc3b271b0516e984323a64764e"
        ],
        [
            "clear Hrl Hlr.",
            "VernacExtend",
            "cbce5377e13d119e68b9c090fe2a2872a5500d59"
        ],
        [
            "assert (height (Node ll lx ld lr lh) = lh); auto.",
            "VernacExtend",
            "02b866ca5c9bd92cc27fd5e1d69a3c18c88bde82"
        ],
        [
            "assert (height (Node rl rx rd rr rh) = rh); auto.",
            "VernacExtend",
            "d4f4f9a5c8bbae34e68acd40afa2a7bce519211f"
        ],
        [
            "set (l := Node ll lx ld lr lh) in *; clearbody l.",
            "VernacExtend",
            "8ae4aefe3bb236196c03b1592741c1768a46fc7d"
        ],
        [
            "set (r := Node rl rx rd rr rh) in *; clearbody r.",
            "VernacExtend",
            "d023423ec549c323b882b3cbfabb22b3b2d3c01d"
        ],
        [
            "assert (-(2) <= height l - height r <= 2) by omega_max.",
            "VernacExtend",
            "bed60c7d34a8b09c8c1aae56236b4696c13a7dec"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "apply create_avl; auto.",
            "VernacExtend",
            "f9ac291dc0f99b8ba64ffb3d09c4febcc453933b"
        ],
        [
            "rewrite create_height; auto; omega_max.",
            "VernacExtend",
            "a6db62a3c34e4103ba6269e0e25c2e46ef4adede"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma join_avl : forall l x d r, avl l -> avl r -> avl (join l x d r).",
            "VernacStartTheoremProof",
            "06602e87d69feb3ecbc7b5f9dd66d388c5c2756e"
        ],
        [
            "intros; destruct (join_avl_1 x d H H0); auto.",
            "VernacExtend",
            "a0a8ea7f7fc92f4c88b68ec2c7362659de19bbf3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve join_avl.",
            "VernacHints",
            "0b23d476d611f886e27ba347bb89515cf297d5ba"
        ],
        [
            "Lemma concat_avl : forall m1 m2, avl m1 -> avl m2 -> avl (concat m1 m2).",
            "VernacStartTheoremProof",
            "c3593c23c16945d79920ecec5b274f7a32227f30"
        ],
        [
            "intros m1 m2; functional induction (concat m1 m2); auto.",
            "VernacExtend",
            "75ad6a4395c20d9643e4b01db7b06e25933d6f59"
        ],
        [
            "intros; apply join_avl; auto.",
            "VernacExtend",
            "1a47fef5bab7c87a5b7bd375124ce9a3c17de7e5"
        ],
        [
            "generalize (remove_min_avl H0); rewrite e1; simpl; auto.",
            "VernacExtend",
            "3aac2950a237ce0ab575ee2ee768806385d203e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve concat_avl.",
            "VernacHints",
            "4d2f2274ebc890ac91ba2d61be7c3df4aa05b1c2"
        ],
        [
            "Lemma split_avl : forall m x, avl m -> avl (split x m)#l /\\ avl (split x m)#r.",
            "VernacStartTheoremProof",
            "1f3d2e93459f715f688fc0ccd016002400d7f9b4"
        ],
        [
            "intros m x; functional induction (split x m); simpl; auto.",
            "VernacExtend",
            "37cc76b49a15db0bd3ba6a94d2e9cc99f66b327e"
        ],
        [
            "rewrite e1 in IHt;simpl in IHt;inversion_clear 1; intuition.",
            "VernacExtend",
            "0cc6b1d90008e1ce911933aa7a1dca3b872ed7e0"
        ],
        [
            "simpl; inversion_clear 1; auto.",
            "VernacExtend",
            "f8c459d426f9bd51a2d2e4c11f970857b6d67c52"
        ],
        [
            "rewrite e1 in IHt;simpl in IHt;inversion_clear 1; intuition.",
            "VernacExtend",
            "0cc6b1d90008e1ce911933aa7a1dca3b872ed7e0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Elt.",
            "VernacEndSegment",
            "ef6686463d3f7dfcb40f4805cf8f45019f83fdad"
        ],
        [
            "Hint Constructors avl.",
            "VernacHints",
            "fac3cbe02053cfc50c2f49a1d2355b46d9eb6682"
        ],
        [
            "Section Map.",
            "VernacBeginSection",
            "12ca5ab2f7de3292eec6072cc06769cd51c25553"
        ],
        [
            "Variable elt elt' : Type.",
            "VernacAssumption",
            "75e2ab475766496c51355c093e5b307931d67c82"
        ],
        [
            "Variable f : elt -> elt'.",
            "VernacAssumption",
            "eb0bc3e9ce5ad6c2d8cd82a51bfa42784178d922"
        ],
        [
            "Lemma map_height : forall m, height (map f m) = height m.",
            "VernacStartTheoremProof",
            "4595f639079f9d73e1777c196e1a43c1c56bb3ea"
        ],
        [
            "destruct m; simpl; auto.",
            "VernacExtend",
            "94781fbacb55d6a7e74b34f87daed7127004ccb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_avl : forall m, avl m -> avl (map f m).",
            "VernacStartTheoremProof",
            "5cede67cc4076cc9165be5bfd2cc78c954724c2a"
        ],
        [
            "induction m; simpl; auto.",
            "VernacExtend",
            "fef957ed452ac0981dd5620d82fa8cb3b652f75b"
        ],
        [
            "inversion_clear 1; constructor; auto; do 2 rewrite map_height; auto.",
            "VernacExtend",
            "df06e6eecb2bbc258391211819eefa87cbcd9aec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Map.",
            "VernacEndSegment",
            "8fa7735d92e76131e10c5cfe95a2247db65a4b9f"
        ],
        [
            "Section Mapi.",
            "VernacBeginSection",
            "0582f5d525e5d38139cbfb8e3d1a1106ab04d8db"
        ],
        [
            "Variable elt elt' : Type.",
            "VernacAssumption",
            "75e2ab475766496c51355c093e5b307931d67c82"
        ],
        [
            "Variable f : key -> elt -> elt'.",
            "VernacAssumption",
            "6e757c0087a0146bed539a352c41d32879d7f257"
        ],
        [
            "Lemma mapi_height : forall m, height (mapi f m) = height m.",
            "VernacStartTheoremProof",
            "5e8ccc16b848afc53f1155156ea13093e260a135"
        ],
        [
            "destruct m; simpl; auto.",
            "VernacExtend",
            "94781fbacb55d6a7e74b34f87daed7127004ccb8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapi_avl : forall m, avl m -> avl (mapi f m).",
            "VernacStartTheoremProof",
            "6bda4f9083cbb3a938f634505b5b8d985b0767de"
        ],
        [
            "induction m; simpl; auto.",
            "VernacExtend",
            "fef957ed452ac0981dd5620d82fa8cb3b652f75b"
        ],
        [
            "inversion_clear 1; constructor; auto; do 2 rewrite mapi_height; auto.",
            "VernacExtend",
            "1bf166f6138a955560f850a1887ee2e679c05e22"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Mapi.",
            "VernacEndSegment",
            "450125240f70fa598260db1ffde7d3ba90692641"
        ],
        [
            "Section Map_option.",
            "VernacBeginSection",
            "838490cb3cea5c318aa9757ba7fcb4043ce0ab37"
        ],
        [
            "Variable elt elt' : Type.",
            "VernacAssumption",
            "75e2ab475766496c51355c093e5b307931d67c82"
        ],
        [
            "Variable f : key -> elt -> option elt'.",
            "VernacAssumption",
            "bdee4e50008c1114dd86a1be45f861da76bb1dfe"
        ],
        [
            "Lemma map_option_avl : forall m, avl m -> avl (map_option f m).",
            "VernacStartTheoremProof",
            "07d539c4fa925ad3b7492ee2664424e1d360e507"
        ],
        [
            "induction m; simpl; auto; intros.",
            "VernacExtend",
            "6cc44e2cf968f6d1111d6be72d9944cc2c307dcc"
        ],
        [
            "inv avl; destruct (f k e); auto using join_avl, concat_avl.",
            "VernacExtend",
            "485af69ed630a707a085f1902f6689ab7fda097c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Map_option.",
            "VernacEndSegment",
            "bf97f17271e1085a5739f04ff4af112833cf66c7"
        ],
        [
            "Section Map2_opt.",
            "VernacBeginSection",
            "059752336374022831adc958a93190abd0679419"
        ],
        [
            "Variable elt elt' elt'' : Type.",
            "VernacAssumption",
            "bf8f6f82bf5fcf2b225f5a782e20a1205b1ec879"
        ],
        [
            "Variable f : key -> elt -> option elt' -> option elt''.",
            "VernacAssumption",
            "f8292fe09825370e9d2d86b82699e2781ffd7282"
        ],
        [
            "Variable mapl : t elt -> t elt''.",
            "VernacAssumption",
            "c34b564f43720c603f04fde4285977f85d96f776"
        ],
        [
            "Variable mapr : t elt' -> t elt''.",
            "VernacAssumption",
            "1935c39a36c0932adcc9cdd325e9545e609b2c01"
        ],
        [
            "Hypothesis mapl_avl : forall m, avl m -> avl (mapl m).",
            "VernacAssumption",
            "c77f2a3d61e1d74d90293fd18f3ad12307d84866"
        ],
        [
            "Hypothesis mapr_avl : forall m', avl m' -> avl (mapr m').",
            "VernacAssumption",
            "76ceefab76700908586878e24566f5333918650c"
        ],
        [
            "Notation map2_opt := (map2_opt f mapl mapr).",
            "VernacSyntacticDefinition",
            "cf20915347a47ef21302c16a0ec16d19fb0197a2"
        ],
        [
            "Lemma map2_opt_avl : forall m1 m2, avl m1 -> avl m2 -> avl (map2_opt m1 m2).",
            "VernacStartTheoremProof",
            "71b1b83439ca901fd7d75af4c0b338122e99b696"
        ],
        [
            "intros m1 m2; functional induction (map2_opt m1 m2); auto; factornode _x0 _x1 _x2 _x3 _x4 as r2; intros; destruct (split_avl x1 H0); rewrite e1 in *; simpl in *; inv avl; auto using join_avl, concat_avl.",
            "VernacExtend",
            "e77acab5b9b148f6bc1f5ec5cd1b9894e6b909b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Map2_opt.",
            "VernacEndSegment",
            "44b12ccb48a1c9067a5347f5397e83ab0cc4df04"
        ],
        [
            "Section Map2.",
            "VernacBeginSection",
            "a20fcc0973d231a9779b32459547d72ce8555020"
        ],
        [
            "Variable elt elt' elt'' : Type.",
            "VernacAssumption",
            "bf8f6f82bf5fcf2b225f5a782e20a1205b1ec879"
        ],
        [
            "Variable f : option elt -> option elt' -> option elt''.",
            "VernacAssumption",
            "5c2bf6fde81f6e3dd77961f7c70459242790763c"
        ],
        [
            "Lemma map2_avl : forall m1 m2, avl m1 -> avl m2 -> avl (map2 f m1 m2).",
            "VernacStartTheoremProof",
            "dea7f271ef40780db7c6f1a8ac4c72d4b9331741"
        ],
        [
            "unfold map2; auto using map2_opt_avl, map_option_avl.",
            "VernacExtend",
            "9bb06194abdec49e94409d2c60aa1cbbe9295d93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Map2.",
            "VernacEndSegment",
            "203f30e285aaeffd619bfa6c0902c22eb06c5f17"
        ],
        [
            "End AvlProofs.",
            "VernacEndSegment",
            "d29e0f8ae19e268dff8499a502e7403de240a383"
        ],
        [
            "Module IntMake (I:Int)(X: OrderedType) <: S with Module E := X.",
            "VernacDefineModule",
            "27983f657924756f17a29e31901d4638e1e40594"
        ],
        [
            "Module E := X.",
            "VernacDefineModule",
            "dd5467716b9394b87429487ba1be9693c17fd44c"
        ],
        [
            "Module Import AvlProofs := AvlProofs I X.",
            "VernacDefineModule",
            "9b74f6cfeef5f4940e44d3734fc4b89b7f809059"
        ],
        [
            "Import Raw.",
            "VernacImport",
            "f142260499a37cae3c4bd610fe8ef52d61f8acb1"
        ],
        [
            "Import Raw.Proofs.",
            "VernacImport",
            "634614f64b599e90276abb2be591f306813fbdb1"
        ],
        [
            "Record bbst (elt:Type) := Bbst {this :> tree elt; is_bst : bst this; is_avl: avl this}.",
            "VernacInductive",
            "131371e552bed9fec2abbfcdb3bc40e12cdbb724"
        ],
        [
            "Definition t := bbst.",
            "VernacDefinition",
            "bc4b19828a9e5f22ed2d732b58f3f8a45ae956fb"
        ],
        [
            "Definition key := E.t.",
            "VernacDefinition",
            "fd09f36b2126b865eb099cbc442b5be4de605813"
        ],
        [
            "Section Elt.",
            "VernacBeginSection",
            "7d8c2b7c85358610d3707ffaa378f25da37c746b"
        ],
        [
            "Variable elt elt' elt'': Type.",
            "VernacAssumption",
            "bf8f6f82bf5fcf2b225f5a782e20a1205b1ec879"
        ],
        [
            "Implicit Types m : t elt.",
            "VernacReserve",
            "d4f53d0a39ec20b73e2612cacb69ed5dddf67a6b"
        ],
        [
            "Implicit Types x y : key.",
            "VernacReserve",
            "3625728a16e3dec4fd95d75d69595f7d0e8376a2"
        ],
        [
            "Implicit Types e : elt.",
            "VernacReserve",
            "ac06a64eb104c51e778df522bd57ad4df3e47a12"
        ],
        [
            "Definition empty : t elt := Bbst (empty_bst elt) (empty_avl elt).",
            "VernacDefinition",
            "9d4486e12ed5def30727a59700640d7c47cf48a9"
        ],
        [
            "Definition is_empty m : bool := is_empty m.(this).",
            "VernacDefinition",
            "5ab7a91f65f529d657e5765b43145270596a6dd2"
        ],
        [
            "Definition add x e m : t elt := Bbst (add_bst x e m.(is_bst)) (add_avl x e m.(is_avl)).",
            "VernacDefinition",
            "de5558446315f8acd2a53f7741df8117c5f6d802"
        ],
        [
            "Definition remove x m : t elt := Bbst (remove_bst x m.(is_bst)) (remove_avl x m.(is_avl)).",
            "VernacDefinition",
            "f2601fdf32ebb78a5b635bf9d5744e7e0db7b590"
        ],
        [
            "Definition mem x m : bool := mem x m.(this).",
            "VernacDefinition",
            "1eff9f764b6f44e3fae484132df9a37c57cbdc5f"
        ],
        [
            "Definition find x m : option elt := find x m.(this).",
            "VernacDefinition",
            "218d9ae59c59f9defe3b829ba55a1b9cb256a074"
        ],
        [
            "Definition map f m : t elt' := Bbst (map_bst f m.(is_bst)) (map_avl f m.(is_avl)).",
            "VernacDefinition",
            "403436cac436f93f8091761185367dc96b715ea9"
        ],
        [
            "Definition mapi (f:key->elt->elt') m : t elt' := Bbst (mapi_bst f m.(is_bst)) (mapi_avl f m.(is_avl)).",
            "VernacDefinition",
            "4a7e8f3af1b0b2d24f53f8598c5ef974a611b3c5"
        ],
        [
            "Definition map2 f m (m':t elt') : t elt'' := Bbst (map2_bst f m.(is_bst) m'.(is_bst)) (map2_avl f m.(is_avl) m'.(is_avl)).",
            "VernacDefinition",
            "08c7c1e7b861a78d7893f929903a435620a05d01"
        ],
        [
            "Definition elements m : list (key*elt) := elements m.(this).",
            "VernacDefinition",
            "7bab9c6ac4c748cb1a382473fab1374b9d7c5e44"
        ],
        [
            "Definition cardinal m := cardinal m.(this).",
            "VernacDefinition",
            "0492e50f262e2625352f5d9ca509353c9b497102"
        ],
        [
            "Definition fold (A:Type) (f:key->elt->A->A) m i := fold (A:=A) f m.(this) i.",
            "VernacDefinition",
            "9636d0bc262f6ff57ecbfd43b862a86b69fca885"
        ],
        [
            "Definition equal cmp m m' : bool := equal cmp m.(this) m'.(this).",
            "VernacDefinition",
            "6a95f9aa323fb39588cd972df20a4ef2b37656c6"
        ],
        [
            "Definition MapsTo x e m : Prop := MapsTo x e m.(this).",
            "VernacDefinition",
            "8371a76df4ac0fba09ccc2dbc18b3d14e04abfbb"
        ],
        [
            "Definition In x m : Prop := In0 x m.(this).",
            "VernacDefinition",
            "504c6eceae78e3962cf3f1ee9b7ec941a79fe54e"
        ],
        [
            "Definition Empty m : Prop := Empty m.(this).",
            "VernacDefinition",
            "071f3989439edc4c136f72873ebe02aad346e392"
        ],
        [
            "Definition eq_key : (key*elt) -> (key*elt) -> Prop := @PX.eqk elt.",
            "VernacDefinition",
            "56c892c90b50521c9e034a8236c7e5d51c82c23f"
        ],
        [
            "Definition eq_key_elt : (key*elt) -> (key*elt) -> Prop := @PX.eqke elt.",
            "VernacDefinition",
            "bbfaa5b35f801dcf5c8a2b2f375d490f77093ad2"
        ],
        [
            "Definition lt_key : (key*elt) -> (key*elt) -> Prop := @PX.ltk elt.",
            "VernacDefinition",
            "7c4475297227f9ffd8358d49530dd2213a408a1e"
        ],
        [
            "Lemma MapsTo_1 : forall m x y e, E.eq x y -> MapsTo x e m -> MapsTo y e m.",
            "VernacStartTheoremProof",
            "236e193b12e75c6faf36f1b32e13fafd742bd121"
        ],
        [
            "intros m; exact (@MapsTo_1 _ m.(this)).",
            "VernacExtend",
            "c90ecfdc8d3faf0d32b0c3ff4d16f1131d67ef33"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_1 : forall m x, In x m -> mem x m = true.",
            "VernacStartTheoremProof",
            "53af0a412d4c6f4c4cbc1dc817302d4bfb4af597"
        ],
        [
            "unfold In, mem; intros m x; rewrite In_alt; simpl; apply mem_1; auto.",
            "VernacExtend",
            "f9c260a166b01601cad1370d97c814e7e930870b"
        ],
        [
            "apply m.(is_bst).",
            "VernacExtend",
            "0ef8eba2302b0f71f9ac3e9b8e7040530e31f6df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mem_2 : forall m x, mem x m = true -> In x m.",
            "VernacStartTheoremProof",
            "4dcad3c69977d67f0f833466356e3779831d3d4e"
        ],
        [
            "unfold In, mem; intros m x; rewrite In_alt; simpl; apply mem_2; auto.",
            "VernacExtend",
            "5f2e3d449723a77ecb7ee20d0da60ac526fc9a88"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma empty_1 : Empty empty.",
            "VernacStartTheoremProof",
            "7522f2b7a60d5493f09b33f63d37755f64932135"
        ],
        [
            "exact (@empty_1 elt).",
            "VernacExtend",
            "343739a20ec10ce66de63f37124406e38f832fa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_empty_1 : forall m, Empty m -> is_empty m = true.",
            "VernacStartTheoremProof",
            "628b7ce292bdf73b2cba9ef8febb80dbce9ab9ca"
        ],
        [
            "intros m; exact (@is_empty_1 _ m.(this)).",
            "VernacExtend",
            "9f34eb5d1149619e67e3d6313fe81bae2e271c5a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma is_empty_2 : forall m, is_empty m = true -> Empty m.",
            "VernacStartTheoremProof",
            "0f82c7c668abe77d36ee9dc489312870431944e3"
        ],
        [
            "intros m; exact (@is_empty_2 _ m.(this)).",
            "VernacExtend",
            "fb9d4d3d099588612bbf11d370bb794e22a0b0bb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_1 : forall m x y e, E.eq x y -> MapsTo y e (add x e m).",
            "VernacStartTheoremProof",
            "387d4c09eef57243a3b1a59a71595e103e492bf5"
        ],
        [
            "intros m x y e; exact (@add_1 elt _ x y e).",
            "VernacExtend",
            "7e63a938860aec53550349eadb44d6a6cb27c65b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_2 : forall m x y e e', ~ E.eq x y -> MapsTo y e m -> MapsTo y e (add x e' m).",
            "VernacStartTheoremProof",
            "b4b372b49877ade47044ff293a448d7b76535d99"
        ],
        [
            "intros m x y e e'; exact (@add_2 elt _ x y e e').",
            "VernacExtend",
            "b9f5602e4e7922f4ebc9b566bf4c90431e6e9a2e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma add_3 : forall m x y e e', ~ E.eq x y -> MapsTo y e (add x e' m) -> MapsTo y e m.",
            "VernacStartTheoremProof",
            "faae6494468653de34d596c09d5ce1e698478471"
        ],
        [
            "intros m x y e e'; exact (@add_3 elt _ x y e e').",
            "VernacExtend",
            "7f0e9550263c57716b794935e59a7d7190960453"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_1 : forall m x y, E.eq x y -> ~ In y (remove x m).",
            "VernacStartTheoremProof",
            "fbf28b0f05e8158a0b50d4786ac497f751b90395"
        ],
        [
            "unfold In, remove; intros m x y; rewrite In_alt; simpl; apply remove_1; auto.",
            "VernacExtend",
            "eeaf4ad590bb7235d51b56743055cd944283b776"
        ],
        [
            "apply m.(is_bst).",
            "VernacExtend",
            "0ef8eba2302b0f71f9ac3e9b8e7040530e31f6df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_2 : forall m x y e, ~ E.eq x y -> MapsTo y e m -> MapsTo y e (remove x m).",
            "VernacStartTheoremProof",
            "585d0ee8befca3bea3679c16b3101a98feef2d4d"
        ],
        [
            "intros m x y e; exact (@remove_2 elt _ x y e m.(is_bst)).",
            "VernacExtend",
            "2b6cd682300953bb4fa8c05db1a71928b8df4f2f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma remove_3 : forall m x y e, MapsTo y e (remove x m) -> MapsTo y e m.",
            "VernacStartTheoremProof",
            "de38975c8ce80a907f1fa2da03ad92b8eea7f4fe"
        ],
        [
            "intros m x y e; exact (@remove_3 elt _ x y e m.(is_bst)).",
            "VernacExtend",
            "bc2ca5e69de864aab6796f263b07baa421a5cc4f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_1 : forall m x e, MapsTo x e m -> find x m = Some e.",
            "VernacStartTheoremProof",
            "9f3974ce4c9fe9ec1aaee64c8ea8c682b7882a4d"
        ],
        [
            "intros m x e; exact (@find_1 elt _ x e m.(is_bst)).",
            "VernacExtend",
            "865909fb91aab7b9df49b6ff05f0253840458862"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma find_2 : forall m x e, find x m = Some e -> MapsTo x e m.",
            "VernacStartTheoremProof",
            "3836b618816ed2c6e9ccfed50231b9f4c0fdd2c0"
        ],
        [
            "intros m; exact (@find_2 elt m.(this)).",
            "VernacExtend",
            "46011616780cee71f1ea3bc0863ca7551d159810"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fold_1 : forall m (A : Type) (i : A) (f : key -> elt -> A -> A), fold f m i = fold_left (fun a p => f (fst p) (snd p) a) (elements m) i.",
            "VernacStartTheoremProof",
            "3f9eccb77601fb87dcbc813fae883044a2c866f5"
        ],
        [
            "intros m; exact (@fold_1 elt m.(this) m.(is_bst)).",
            "VernacExtend",
            "4b73165f7339dd8e8af2ff1a44210deda895b345"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_1 : forall m x e, MapsTo x e m -> InA eq_key_elt (x,e) (elements m).",
            "VernacStartTheoremProof",
            "db64bb8ac9de62851889ea518b5661428bd2f2ae"
        ],
        [
            "intros; unfold elements, MapsTo, eq_key_elt; rewrite elements_mapsto; auto.",
            "VernacExtend",
            "3bd925a09de89b68d12e39d538e24b0474e3aa93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_2 : forall m x e, InA eq_key_elt (x,e) (elements m) -> MapsTo x e m.",
            "VernacStartTheoremProof",
            "86a573eb790c07e67636569383bc0b412900455f"
        ],
        [
            "intros; unfold elements, MapsTo, eq_key_elt; rewrite <- elements_mapsto; auto.",
            "VernacExtend",
            "081dcb0ff5367efbaa54fc7b23bcdf414653f6d2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_3 : forall m, sort lt_key (elements m).",
            "VernacStartTheoremProof",
            "f44e1c315c58c6a7c446c56c81ff06635ccefa8d"
        ],
        [
            "intros m; exact (@elements_sort elt m.(this) m.(is_bst)).",
            "VernacExtend",
            "90e5d13cb97a1140ba43745c93140d726d358cbf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma elements_3w : forall m, NoDupA eq_key (elements m).",
            "VernacStartTheoremProof",
            "b6bfca2c73d2f91d063d0d5611644e287fa9551a"
        ],
        [
            "intros m; exact (@elements_nodup elt m.(this) m.(is_bst)).",
            "VernacExtend",
            "778efe9762a145281d11a1624a07611be6e85fe9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cardinal_1 : forall m, cardinal m = length (elements m).",
            "VernacStartTheoremProof",
            "287b29d944df021bc5dc1caf364ddc3c0d974c72"
        ],
        [
            "intro m; exact (@elements_cardinal elt m.(this)).",
            "VernacExtend",
            "01f6cfedfbba2b187c1ef3334684138f90545633"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Equal m m' := forall y, find y m = find y m'.",
            "VernacDefinition",
            "06ccbe2ad525772df84cf3466a7c055ca59c8508"
        ],
        [
            "Definition Equiv (eq_elt:elt->elt->Prop) m m' := (forall k, In k m <-> In k m') /\\ (forall k e e', MapsTo k e m -> MapsTo k e' m' -> eq_elt e e').",
            "VernacDefinition",
            "442cc2976421ab343212ad7d40dbea1021c30690"
        ],
        [
            "Definition Equivb cmp := Equiv (Cmp cmp).",
            "VernacDefinition",
            "30aa14693b8bfe713452d0f4f1b9d6eb0dc4b5c3"
        ],
        [
            "Lemma Equivb_Equivb : forall cmp m m', Equivb cmp m m' <-> Raw.Proofs.Equivb cmp m m'.",
            "VernacStartTheoremProof",
            "d049df598b6fc204baa66d019c629f85fc2c8d36"
        ],
        [
            "intros; unfold Equivb, Equiv, Raw.Proofs.Equivb, In; intuition.",
            "VernacExtend",
            "1a7a6146585186dbe98a1752110e01442a7f9f23"
        ],
        [
            "generalize (H0 k); do 2 rewrite In_alt; intuition.",
            "VernacExtend",
            "da8983e340df010e64d5cb12565c4993f060dfc8"
        ],
        [
            "generalize (H0 k); do 2 rewrite In_alt; intuition.",
            "VernacExtend",
            "da8983e340df010e64d5cb12565c4993f060dfc8"
        ],
        [
            "generalize (H0 k); do 2 rewrite <- In_alt; intuition.",
            "VernacExtend",
            "943fb480c4f239fb9f33cd93ce1280fefed57289"
        ],
        [
            "generalize (H0 k); do 2 rewrite <- In_alt; intuition.",
            "VernacExtend",
            "943fb480c4f239fb9f33cd93ce1280fefed57289"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_1 : forall m m' cmp, Equivb cmp m m' -> equal cmp m m' = true.",
            "VernacStartTheoremProof",
            "4e3380e8d5d00798de92a0f634c9b639634d041d"
        ],
        [
            "unfold equal; intros (m,b,a) (m',b',a') cmp; rewrite Equivb_Equivb; intros; simpl in *; rewrite equal_Equivb; auto.",
            "VernacExtend",
            "9c2ed1d6ebc2a7cf6f90d16ad230d957be11300a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma equal_2 : forall m m' cmp, equal cmp m m' = true -> Equivb cmp m m'.",
            "VernacStartTheoremProof",
            "0a3e6332234234e5064dee245e91ef87b60e59ed"
        ],
        [
            "unfold equal; intros (m,b,a) (m',b',a') cmp; rewrite Equivb_Equivb; intros; simpl in *; rewrite <-equal_Equivb; auto.",
            "VernacExtend",
            "9911a5dfa489712fb521c247f5d3ea8401ec878d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Elt.",
            "VernacEndSegment",
            "ef6686463d3f7dfcb40f4805cf8f45019f83fdad"
        ],
        [
            "Lemma map_1 : forall (elt elt':Type)(m: t elt)(x:key)(e:elt)(f:elt->elt'), MapsTo x e m -> MapsTo x (f e) (map f m).",
            "VernacStartTheoremProof",
            "027831aeae0a12f308f70711834c67f777a47dd2"
        ],
        [
            "intros elt elt' m x e f; exact (@map_1 elt elt' f m.(this) x e).",
            "VernacExtend",
            "94c552455136fc010f0a979f6d04bc9453cd4bbc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_2 : forall (elt elt':Type)(m:t elt)(x:key)(f:elt->elt'), In x (map f m) -> In x m.",
            "VernacStartTheoremProof",
            "4f35923037fc76633d3829114ddb403e82fda61a"
        ],
        [
            "intros elt elt' m x f; do 2 unfold In in *; do 2 rewrite In_alt; simpl.",
            "VernacExtend",
            "f8d6d413775a45c23d555a4c0419281f0848fc05"
        ],
        [
            "apply map_2; auto.",
            "VernacExtend",
            "33bb962e2eafd283761b45691661ab50a3a39469"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapi_1 : forall (elt elt':Type)(m: t elt)(x:key)(e:elt) (f:key->elt->elt'), MapsTo x e m -> exists y, E.eq y x /\\ MapsTo x (f y e) (mapi f m).",
            "VernacStartTheoremProof",
            "d8167586f558cb12b099d01333e74d8190c208d4"
        ],
        [
            "intros elt elt' m x e f; exact (@mapi_1 elt elt' f m.(this) x e).",
            "VernacExtend",
            "2fd588d04490e77bfea057865f381e018869f00d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma mapi_2 : forall (elt elt':Type)(m: t elt)(x:key) (f:key->elt->elt'), In x (mapi f m) -> In x m.",
            "VernacStartTheoremProof",
            "f8df0096e48cdc0f5b1e0e0ebf4916fa875bf3fc"
        ],
        [
            "intros elt elt' m x f; unfold In in *; do 2 rewrite In_alt; simpl; apply mapi_2; auto.",
            "VernacExtend",
            "31168e49839101a730f123ded292f339b58f820f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map2_1 : forall (elt elt' elt'':Type)(m: t elt)(m': t elt') (x:key)(f:option elt->option elt'->option elt''), In x m \\/ In x m' -> find x (map2 f m m') = f (find x m) (find x m').",
            "VernacStartTheoremProof",
            "1a21f7a88012be566bfb557908fbca1e62177951"
        ],
        [
            "unfold find, map2, In; intros elt elt' elt'' m m' x f.",
            "VernacExtend",
            "11c33e5730a09a023c2e5a71990718af464755d5"
        ],
        [
            "do 2 rewrite In_alt; intros; simpl; apply map2_1; auto.",
            "VernacExtend",
            "6f56c75f49fcd86ad515d3a12464874e3df3eb76"
        ],
        [
            "apply m.(is_bst).",
            "VernacExtend",
            "0ef8eba2302b0f71f9ac3e9b8e7040530e31f6df"
        ],
        [
            "apply m'.(is_bst).",
            "VernacExtend",
            "bdee2c928b748d1f85dc70e4f38ef0b3f5394098"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map2_2 : forall (elt elt' elt'':Type)(m: t elt)(m': t elt') (x:key)(f:option elt->option elt'->option elt''), In x (map2 f m m') -> In x m \\/ In x m'.",
            "VernacStartTheoremProof",
            "c9a4bfe524623e9105614d341a15b410a729c2ef"
        ],
        [
            "unfold In, map2; intros elt elt' elt'' m m' x f.",
            "VernacExtend",
            "9155a883e0fa56f94a8baf2480bc749a3e6e427d"
        ],
        [
            "do 3 rewrite In_alt; intros; simpl in *; eapply map2_2; eauto.",
            "VernacExtend",
            "e926535b45e1afba7dcaca0eadfcbdfca943389b"
        ],
        [
            "apply m.(is_bst).",
            "VernacExtend",
            "0ef8eba2302b0f71f9ac3e9b8e7040530e31f6df"
        ],
        [
            "apply m'.(is_bst).",
            "VernacExtend",
            "bdee2c928b748d1f85dc70e4f38ef0b3f5394098"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IntMake.",
            "VernacEndSegment",
            "ffe73b4930e1bd1c15e0d86c1aba077160e53f0f"
        ],
        [
            "Module IntMake_ord (I:Int)(X: OrderedType)(D : OrderedType) <: Sord with Module Data := D with Module MapS.E := X.",
            "VernacDefineModule",
            "9823b3a1131bea7117931d691d325d09d550aadf"
        ],
        [
            "Module Data := D.",
            "VernacDefineModule",
            "01ed9424ba01e7b75bec4d0086d03142d0a334a4"
        ],
        [
            "Module Import MapS := IntMake(I)(X).",
            "VernacDefineModule",
            "540d280b44da05f34d9a86f85f480fca0c049b34"
        ],
        [
            "Import AvlProofs.",
            "VernacImport",
            "7a765abb8a4a1eef83f2da4138290cc578631127"
        ],
        [
            "Import Raw.Proofs.",
            "VernacImport",
            "634614f64b599e90276abb2be591f306813fbdb1"
        ],
        [
            "Module Import MD := OrderedTypeFacts(D).",
            "VernacDefineModule",
            "f7e3232f41de27b63e0a148717f397b8aef5ec25"
        ],
        [
            "Module LO := FMapList.Make_ord(X)(D).",
            "VernacDefineModule",
            "0bb44236307065ee09706733439a464e370fb84d"
        ],
        [
            "Definition t := MapS.t D.t.",
            "VernacDefinition",
            "557d982e478b506419daeab63ff0666f8cfe66ba"
        ],
        [
            "Definition cmp e e' := match D.compare e e' with EQ _ => true | _ => false end.",
            "VernacDefinition",
            "e653fab33c070635a1f5ababb0c33851219cd24a"
        ],
        [
            "Definition elements (m:t) := LO.MapS.Build_slist (Raw.Proofs.elements_sort m.(is_bst)).",
            "VernacDefinition",
            "28dd74d59a3f6baeab7f7ccfea419d7fe0a3e996"
        ],
        [
            "Fixpoint cardinal_e (e:Raw.enumeration D.t) := match e with | Raw.End _ => 0%nat | Raw.More _ _ r e => S (Raw.cardinal r + cardinal_e e) end.",
            "VernacFixpoint",
            "35b4a00f030d4bf9a7e013f60b0a3349ea660932"
        ],
        [
            "Lemma cons_cardinal_e : forall m e, cardinal_e (Raw.cons m e) = (Raw.cardinal m + cardinal_e e)%nat.",
            "VernacStartTheoremProof",
            "20ad813ad4a7d8c594b98e8a017ce0be7957d078"
        ],
        [
            "induction m; simpl; intros; auto.",
            "VernacExtend",
            "489e56f92c4f73f4cd0440845d046923410759b3"
        ],
        [
            "rewrite IHm1; simpl; rewrite <- plus_n_Sm; auto with arith.",
            "VernacExtend",
            "213256650f112641fff77c6a38612fdf3d92fe1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cardinal_e_2 ee := (cardinal_e (fst ee) + cardinal_e (snd ee))%nat.",
            "VernacDefinition",
            "0cdb41fbb3bdff1fcf393e921866b2955d96c152"
        ],
        [
            "Local Unset Keyed Unification.",
            "VernacUnsetOption",
            "056ff7230ab207832983f49151f6bfc2760934f3"
        ],
        [
            "Function compare_aux (ee:Raw.enumeration D.t * Raw.enumeration D.t) { measure cardinal_e_2 ee } : comparison := match ee with | (Raw.End _, Raw.End _) => Eq | (Raw.End _, Raw.More _ _ _ _) => Lt | (Raw.More _ _ _ _, Raw.End _) => Gt | (Raw.More x1 d1 r1 e1, Raw.More x2 d2 r2 e2) => match X.compare x1 x2 with | EQ _ => match D.compare d1 d2 with | EQ _ => compare_aux (Raw.cons r1 e1, Raw.cons r2 e2) | LT _ => Lt | GT _ => Gt end | LT _ => Lt | GT _ => Gt end end.",
            "VernacExtend",
            "65f315be5b7c06dbed27ed8c151192a8e213b073"
        ],
        [
            "intros; unfold cardinal_e_2; simpl; abstract (do 2 rewrite cons_cardinal_e; lia ).",
            "VernacExtend",
            "7e9fbfb8aec8d9addfe913625b9288d35d29aa19"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition Cmp c := match c with | Eq => LO.eq_list | Lt => LO.lt_list | Gt => (fun l1 l2 => LO.lt_list l2 l1) end.",
            "VernacDefinition",
            "4731cb4bdbb9aa8f1b60a23121fc184c6f66fa11"
        ],
        [
            "Lemma cons_Cmp : forall c x1 x2 d1 d2 l1 l2, X.eq x1 x2 -> D.eq d1 d2 -> Cmp c l1 l2 -> Cmp c ((x1,d1)::l1) ((x2,d2)::l2).",
            "VernacStartTheoremProof",
            "df86f018234aa5d3e55109852c7ef9309c55103f"
        ],
        [
            "destruct c; simpl; intros; MX.elim_comp; auto.",
            "VernacExtend",
            "a9736c035e5945e8ca6b36b607a5061d1f69315c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve cons_Cmp.",
            "VernacHints",
            "b92b21fc21a90d303cadbb7dac1ff095101db91a"
        ],
        [
            "Lemma compare_aux_Cmp : forall e, Cmp (compare_aux e) (flatten_e (fst e)) (flatten_e (snd e)).",
            "VernacStartTheoremProof",
            "38e0cfd6b6a6af6fdc6d874d02f08f2497f6be74"
        ],
        [
            "intros e; functional induction (compare_aux e); simpl in *; auto; intros; try clear e0; try clear e3; try MX.elim_comp; auto.",
            "VernacExtend",
            "aece4672e44e77f01d4c1947c532d0a46b4fc844"
        ],
        [
            "rewrite 2 cons_1 in IHc; auto.",
            "VernacExtend",
            "0d5ebc7d2bb5cd711ba4db54b194251dbbd98321"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma compare_Cmp : forall m1 m2, Cmp (compare_aux (Raw.cons m1 (Raw.End _), Raw.cons m2 (Raw.End _))) (Raw.elements m1) (Raw.elements m2).",
            "VernacStartTheoremProof",
            "568f27f1dd5cca380e08b766840820fe4fa37006"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (H1:=cons_1 m1 (Raw.End _)).",
            "VernacExtend",
            "f03326b9f224a67a166804f7820da2898a26972f"
        ],
        [
            "assert (H2:=cons_1 m2 (Raw.End _)).",
            "VernacExtend",
            "df3b91f55fb674b86717b1430d9783335085065c"
        ],
        [
            "simpl in *; rewrite app_nil_r in *; rewrite <-H1,<-H2.",
            "VernacExtend",
            "bd0e0a5165c075c185f91f55d24eacc75cc5c8e2"
        ],
        [
            "apply (@compare_aux_Cmp (Raw.cons m1 (Raw.End _), Raw.cons m2 (Raw.End _))).",
            "VernacExtend",
            "c308df56945948e147b54b97e2d3f89d1e3ff562"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition eq (m1 m2 : t) := LO.eq_list (Raw.elements m1) (Raw.elements m2).",
            "VernacDefinition",
            "ab71a68542ce1753cb60111223d074ec7add7dd8"
        ],
        [
            "Definition lt (m1 m2 : t) := LO.lt_list (Raw.elements m1) (Raw.elements m2).",
            "VernacDefinition",
            "3ba7496cde9caf0594742ae8de70d7fcbde11a15"
        ],
        [
            "Definition compare (s s':t) : Compare lt eq s s'.",
            "VernacDefinition",
            "b3db3c9cd1057669643c51980892657387a1cefa"
        ],
        [
            "destruct s as (s,b,a), s' as (s',b',a').",
            "VernacExtend",
            "53d84cd73f35e66efe269f979a1b6e24b204af51"
        ],
        [
            "generalize (compare_Cmp s s').",
            "VernacExtend",
            "ec1cc16b900f601c509d6c4efc54b7608cdb6c6b"
        ],
        [
            "destruct compare_aux; intros; [apply EQ|apply LT|apply GT]; red; auto.",
            "VernacExtend",
            "7197d7785e433e0dca6b2eeb5dfbbe2339811390"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition selements (m1 : t) := LO.MapS.Build_slist (elements_sort m1.(is_bst)).",
            "VernacDefinition",
            "81d9b5798b3708bc6e6eee96779592078ee63d8b"
        ],
        [
            "Definition seq (m1 m2 : t) := LO.eq (selements m1) (selements m2).",
            "VernacDefinition",
            "afbd4317c0e7e8d9dbbb8e0bdd3f68377a201b64"
        ],
        [
            "Definition slt (m1 m2 : t) := LO.lt (selements m1) (selements m2).",
            "VernacDefinition",
            "44258f3905758bb51dffe5bc9f8cef79cf079cf1"
        ],
        [
            "Lemma eq_seq : forall m1 m2, eq m1 m2 <-> seq m1 m2.",
            "VernacStartTheoremProof",
            "c4fb086ddbee69681975deb613165f2a93be79a9"
        ],
        [
            "unfold eq, seq, selements, elements, LO.eq; intuition.",
            "VernacExtend",
            "f1b87ec9cba6716377dc2c6914c2fd87c3f3e490"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_slt : forall m1 m2, lt m1 m2 <-> slt m1 m2.",
            "VernacStartTheoremProof",
            "47bd6cf82d684c85049df2e50ac40e2001683e14"
        ],
        [
            "unfold lt, slt, selements, elements, LO.lt; intuition.",
            "VernacExtend",
            "8c5d62688bbb8f08aa1f26dd3f05d2c51e6cdb0d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_1 : forall (m m' : t), MapS.Equivb cmp m m' -> eq m m'.",
            "VernacStartTheoremProof",
            "7c6ea3e1ad9bf624aff72ec5d4ee583dedc93927"
        ],
        [
            "intros m m'.",
            "VernacExtend",
            "617ebb524c10b94a79f3da66164aa5e3960dcac8"
        ],
        [
            "rewrite eq_seq; unfold seq.",
            "VernacExtend",
            "ca8a32ee8b7194903be6c7526f7034c2990a83b7"
        ],
        [
            "rewrite Equivb_Equivb.",
            "VernacExtend",
            "170c2a8a3cf5e094a49f59b4410e3b6c60a5d3b6"
        ],
        [
            "rewrite Equivb_elements.",
            "VernacExtend",
            "793d1fdd95d761c7838a9548b358ceb1332d56a3"
        ],
        [
            "auto using LO.eq_1.",
            "VernacExtend",
            "af9a5d142df2b0d65ffc0b037f51b45fdf7d30bd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_2 : forall m m', eq m m' -> MapS.Equivb cmp m m'.",
            "VernacStartTheoremProof",
            "0a956920e8e558e0a781cfcb56dcbde061be0575"
        ],
        [
            "intros m m'.",
            "VernacExtend",
            "617ebb524c10b94a79f3da66164aa5e3960dcac8"
        ],
        [
            "rewrite eq_seq; unfold seq.",
            "VernacExtend",
            "ca8a32ee8b7194903be6c7526f7034c2990a83b7"
        ],
        [
            "rewrite Equivb_Equivb.",
            "VernacExtend",
            "170c2a8a3cf5e094a49f59b4410e3b6c60a5d3b6"
        ],
        [
            "rewrite Equivb_elements.",
            "VernacExtend",
            "793d1fdd95d761c7838a9548b358ceb1332d56a3"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "generalize (LO.eq_2 H).",
            "VernacExtend",
            "44d07de09b961ade0d4192fdbbe59ea368b10dbb"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_refl : forall m : t, eq m m.",
            "VernacStartTheoremProof",
            "f0918db2d8b72b37a9538de6909f3ff1bc680083"
        ],
        [
            "intros; rewrite eq_seq; unfold seq; intros; apply LO.eq_refl.",
            "VernacExtend",
            "633c4a51af6d588f7950123e7bad5bd1bf421345"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_sym : forall m1 m2 : t, eq m1 m2 -> eq m2 m1.",
            "VernacStartTheoremProof",
            "f683acad99e020461d70e6fb9afe1ea6bc67091f"
        ],
        [
            "intros m1 m2; rewrite 2 eq_seq; unfold seq; intros; apply LO.eq_sym; auto.",
            "VernacExtend",
            "e0d993183acac4f90a2754f50105781e3ec97270"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eq_trans : forall m1 m2 m3 : t, eq m1 m2 -> eq m2 m3 -> eq m1 m3.",
            "VernacStartTheoremProof",
            "be15a55834141362cd82a8dfca477265d3671fd6"
        ],
        [
            "intros m1 m2 M3; rewrite 3 eq_seq; unfold seq.",
            "VernacExtend",
            "6708854da61ff7ecc51591589748f73fbcf5144b"
        ],
        [
            "intros; eapply LO.eq_trans; eauto.",
            "VernacExtend",
            "102e13138d77f959fbc1542434bf54fe03ee509a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_trans : forall m1 m2 m3 : t, lt m1 m2 -> lt m2 m3 -> lt m1 m3.",
            "VernacStartTheoremProof",
            "2e207e30725561e88b0c53a5de0f09aba9b8c821"
        ],
        [
            "intros m1 m2 m3; rewrite 3 lt_slt; unfold slt; intros; eapply LO.lt_trans; eauto.",
            "VernacExtend",
            "5ddb770e0d76f7f28c94d293bfc0582ab336cf38"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_not_eq : forall m1 m2 : t, lt m1 m2 -> ~ eq m1 m2.",
            "VernacStartTheoremProof",
            "035b059bb7f1cabd294a31313f2e54f9f5752abf"
        ],
        [
            "intros m1 m2; rewrite lt_slt, eq_seq; unfold slt, seq; intros; apply LO.lt_not_eq; auto.",
            "VernacExtend",
            "1da3241f32daad70ea11257aff2a4a2691909fa1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End IntMake_ord.",
            "VernacEndSegment",
            "362dd85760a4c2c3276d56fb0117255853893c0e"
        ],
        [
            "Module Make (X: OrderedType) <: S with Module E := X :=IntMake(Z_as_Int)(X).",
            "VernacDefineModule",
            "72ff8ec4799bd6b7d7ad0601f54d91fbb6446bc0"
        ],
        [
            "Module Make_ord (X: OrderedType)(D: OrderedType) <: Sord with Module Data := D with Module MapS.E := X :=IntMake_ord(Z_as_Int)(X)(D).",
            "VernacDefineModule",
            "e866e2815e98be8e1e9ecc05a02a58115fc5b7ce"
        ]
    ],
    "proofs": [
        {
            "name": "height_non_negative",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "induction s; simpl; intros; auto with zarith.",
                        "VernacExtend",
                        "3b39dad199753beb175e19bb82de76ba1f089b39"
                    ]
                },
                {
                    "command": [
                        "inv avl; intuition; omega_max.",
                        "VernacExtend",
                        "c81aea26e3060f96f7d16c06a2859eec938a8f56"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "avl_node",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros; auto.",
                        "VernacExtend",
                        "d08fa6a6cf0cffe77a1b06ed19eb1fcfb0b64546"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "height_0",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "destruct 1; intuition; simpl in *.",
                        "VernacExtend",
                        "0758dee040b02ed2a07bd6d77e0f35d28b59021d"
                    ]
                },
                {
                    "command": [
                        "avl_nns; simpl in *; exfalso; omega_max.",
                        "VernacExtend",
                        "6920c4f91f75690979ac043e2cd22eb1a4054ce8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_avl",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "unfold empty; auto.",
                        "VernacExtend",
                        "a2693eb12ba268d474a985e95db0bb58ccb52aa5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "create_avl",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "unfold create; auto.",
                        "VernacExtend",
                        "4d89f4b44a39fae4ef436be7c5a318c2b03c802d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "create_height",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "unfold create; intros; auto.",
                        "VernacExtend",
                        "da01e65ccc4388e0898e886288cead977eaccf3c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bal_avl",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "intros l x e r; functional induction (bal l x e r); intros; clearf; inv avl; simpl in *; match goal with |- avl (assert_false _ _ _ _) => avl_nns | _ => repeat apply create_avl; simpl in *; auto end; omega_max.",
                        "VernacExtend",
                        "3c519fa1a1b3ddbcb78badf4ffce6a05653a60bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bal_height_1",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "intros l x e r; functional induction (bal l x e r); intros; clearf; inv avl; avl_nns; simpl in *; omega_max.",
                        "VernacExtend",
                        "c0c819eab717b4a94fd32ca8d569f8ea816dc219"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bal_height_2",
            "line_nb": 45,
            "steps": [
                {
                    "command": [
                        "intros l x e r; functional induction (bal l x e r); intros; clearf; inv avl; avl_nns; simpl in *; omega_max.",
                        "VernacExtend",
                        "c0c819eab717b4a94fd32ca8d569f8ea816dc219"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_avl_1",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros m x e; functional induction (add x e m); intros; inv avl; simpl in *.",
                        "VernacExtend",
                        "958093fad0a971e3113bcdc1bb19006a17f424b9"
                    ]
                },
                {
                    "command": [
                        "intuition; try constructor; simpl; auto; try omega_max.",
                        "VernacExtend",
                        "9990221ee874bdde548e43d907972dadc4f3ac1b"
                    ]
                },
                {
                    "command": [
                        "destruct IHt; auto.",
                        "VernacExtend",
                        "14f1e040026932fedfba4c3bd8b9e8b36d3c69fd"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply bal_avl; auto; omega_max.",
                        "VernacExtend",
                        "77b298b4c9091b78358dc9eaeabdaeb006f7ef58"
                    ]
                },
                {
                    "command": [
                        "omega_bal.",
                        "VernacExtend",
                        "4df0d075d0e711bc3b271b0516e984323a64764e"
                    ]
                },
                {
                    "command": [
                        "intuition; omega_max.",
                        "VernacExtend",
                        "3f4d146664a865316232a994272dc04ec2d8c0e7"
                    ]
                },
                {
                    "command": [
                        "destruct IHt; auto.",
                        "VernacExtend",
                        "14f1e040026932fedfba4c3bd8b9e8b36d3c69fd"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply bal_avl; auto; omega_max.",
                        "VernacExtend",
                        "77b298b4c9091b78358dc9eaeabdaeb006f7ef58"
                    ]
                },
                {
                    "command": [
                        "omega_bal.",
                        "VernacExtend",
                        "4df0d075d0e711bc3b271b0516e984323a64764e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_avl",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "intros; generalize (add_avl_1 x e H); intuition.",
                        "VernacExtend",
                        "c1f0a98e76be375c0898195a7ac2d0cd700636c0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_min_avl_1",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intros l x e r; functional induction (remove_min l x e r); simpl in *; intros.",
                        "VernacExtend",
                        "b502c42666fa2f8e1aacdbf6e8d6ffd52a33b956"
                    ]
                },
                {
                    "command": [
                        "inv avl; simpl in *; split; auto.",
                        "VernacExtend",
                        "0268329b3ef4bcb6232426d5e9b6c27ed021a8cf"
                    ]
                },
                {
                    "command": [
                        "avl_nns; omega_max.",
                        "VernacExtend",
                        "32e0a93659ba3d54574bbadcd2073a70ad58215e"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "rewrite e0 in IHp;simpl in IHp;destruct (IHp _x); auto.",
                        "VernacExtend",
                        "180f7ff43f179e115094e3243018caa52b0632c5"
                    ]
                },
                {
                    "command": [
                        "split; simpl in *.",
                        "VernacExtend",
                        "4361e889f6852d85b380e5b18e7956d4ec5b7f46"
                    ]
                },
                {
                    "command": [
                        "apply bal_avl; auto; omega_max.",
                        "VernacExtend",
                        "77b298b4c9091b78358dc9eaeabdaeb006f7ef58"
                    ]
                },
                {
                    "command": [
                        "omega_bal.",
                        "VernacExtend",
                        "4df0d075d0e711bc3b271b0516e984323a64764e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_min_avl",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "intros; generalize (remove_min_avl_1 H); intuition.",
                        "VernacExtend",
                        "a561f15dea56345a827b145ea56ba7240f8b923d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "merge_avl_1",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "intros m1 m2; functional induction (merge m1 m2); intros; try factornode _x _x0 _x1 _x2 _x3 as m1.",
                        "VernacExtend",
                        "07de463e88ea1763b8808dbb8d00a0b256fd68c3"
                    ]
                },
                {
                    "command": [
                        "simpl; split; auto; avl_nns; omega_max.",
                        "VernacExtend",
                        "ab7209d3f6dd025f90964cbc638965626614b513"
                    ]
                },
                {
                    "command": [
                        "simpl; split; auto; avl_nns; omega_max.",
                        "VernacExtend",
                        "ab7209d3f6dd025f90964cbc638965626614b513"
                    ]
                },
                {
                    "command": [
                        "generalize (remove_min_avl_1 H0).",
                        "VernacExtend",
                        "de3e40c694cef79d737bf947b1b4a5b4c61fec28"
                    ]
                },
                {
                    "command": [
                        "rewrite e1; destruct 1.",
                        "VernacExtend",
                        "80be42181fdd2343e580ab1f1638c7f25099f559"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply bal_avl; auto.",
                        "VernacExtend",
                        "e6414c78d2c53666d23e65c265e5194cdc4d4b35"
                    ]
                },
                {
                    "command": [
                        "omega_max.",
                        "VernacExtend",
                        "2759a551b1951fbac837fa29762a4a86b1bc093c"
                    ]
                },
                {
                    "command": [
                        "omega_bal.",
                        "VernacExtend",
                        "4df0d075d0e711bc3b271b0516e984323a64764e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "merge_avl",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intros; generalize (merge_avl_1 H H0 H1); intuition.",
                        "VernacExtend",
                        "9d9d6234c04a39601a6ffef27662e06f9109c709"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_avl_1",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "intros m x; functional induction (remove x m); intros.",
                        "VernacExtend",
                        "8c67ae7000788ed017a2bc5332b36d05e1b12ed4"
                    ]
                },
                {
                    "command": [
                        "split; auto; omega_max.",
                        "VernacExtend",
                        "10bbd035229af7f197137c6fd2cd94300d36637c"
                    ]
                },
                {
                    "command": [
                        "inv avl.",
                        "VernacExtend",
                        "8194c33501f2f96f879e31c1685b62a32931f297"
                    ]
                },
                {
                    "command": [
                        "destruct (IHt H0).",
                        "VernacExtend",
                        "329adae48ff0a41586c278cc8eb3f54d623fb0f3"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply bal_avl; auto.",
                        "VernacExtend",
                        "e6414c78d2c53666d23e65c265e5194cdc4d4b35"
                    ]
                },
                {
                    "command": [
                        "omega_max.",
                        "VernacExtend",
                        "2759a551b1951fbac837fa29762a4a86b1bc093c"
                    ]
                },
                {
                    "command": [
                        "omega_bal.",
                        "VernacExtend",
                        "4df0d075d0e711bc3b271b0516e984323a64764e"
                    ]
                },
                {
                    "command": [
                        "inv avl.",
                        "VernacExtend",
                        "8194c33501f2f96f879e31c1685b62a32931f297"
                    ]
                },
                {
                    "command": [
                        "generalize (merge_avl_1 H0 H1 H2).",
                        "VernacExtend",
                        "f0ee78bf91e9e226bec5c12e06529a5a7a433e4c"
                    ]
                },
                {
                    "command": [
                        "intuition omega_max.",
                        "VernacExtend",
                        "4f66456dc1a5804b9246eb633c5dc333cc1c22c8"
                    ]
                },
                {
                    "command": [
                        "inv avl.",
                        "VernacExtend",
                        "8194c33501f2f96f879e31c1685b62a32931f297"
                    ]
                },
                {
                    "command": [
                        "destruct (IHt H1).",
                        "VernacExtend",
                        "d90947d978391c5526a83eea23ebebd1cf046296"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply bal_avl; auto.",
                        "VernacExtend",
                        "e6414c78d2c53666d23e65c265e5194cdc4d4b35"
                    ]
                },
                {
                    "command": [
                        "omega_max.",
                        "VernacExtend",
                        "2759a551b1951fbac837fa29762a4a86b1bc093c"
                    ]
                },
                {
                    "command": [
                        "omega_bal.",
                        "VernacExtend",
                        "4df0d075d0e711bc3b271b0516e984323a64764e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_avl",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "intros; generalize (remove_avl_1 x H); intuition.",
                        "VernacExtend",
                        "4a77465d383b613a5490b9ad71c98e7bf30a6d71"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_avl_1",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "join_tac.",
                        "VernacExtend",
                        "fcadd626977256d2b588fba3ffaada8d55550e24"
                    ]
                },
                {
                    "command": [
                        "split; simpl; auto.",
                        "VernacExtend",
                        "e2ee7819fbb32d2c4a8d46eec291a3c64ca8c3fb"
                    ]
                },
                {
                    "command": [
                        "destruct (add_avl_1 x d H0).",
                        "VernacExtend",
                        "c579cf6466b047edec2a7f88dcfbf90cd2db2d8d"
                    ]
                },
                {
                    "command": [
                        "avl_nns; omega_max.",
                        "VernacExtend",
                        "32e0a93659ba3d54574bbadcd2073a70ad58215e"
                    ]
                },
                {
                    "command": [
                        "set (l:=Node ll lx ld lr lh) in *.",
                        "VernacExtend",
                        "3e4c3fb90793d6f8db3c4f6128fda26cb2c51148"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "destruct (add_avl_1 x d H).",
                        "VernacExtend",
                        "e43b1e47595ddb575656168f725f060b3d42a4e6"
                    ]
                },
                {
                    "command": [
                        "simpl (height (Leaf elt)).",
                        "VernacExtend",
                        "97c6f62a0f6371409302dc007765a49a8de4e020"
                    ]
                },
                {
                    "command": [
                        "avl_nns; omega_max.",
                        "VernacExtend",
                        "32e0a93659ba3d54574bbadcd2073a70ad58215e"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H.",
                        "VernacExtend",
                        "90909d92eb32e95a21a5b90b29a49dc97bcea342"
                    ]
                },
                {
                    "command": [
                        "assert (height (Node rl rx rd rr rh) = rh); auto.",
                        "VernacExtend",
                        "d4f4f9a5c8bbae34e68acd40afa2a7bce519211f"
                    ]
                },
                {
                    "command": [
                        "set (r := Node rl rx rd rr rh) in *; clearbody r.",
                        "VernacExtend",
                        "d023423ec549c323b882b3cbfabb22b3b2d3c01d"
                    ]
                },
                {
                    "command": [
                        "destruct (Hlr x d r H2 H0); clear Hrl Hlr.",
                        "VernacExtend",
                        "9384abfa8fee204940aa739f706b2de5f306e490"
                    ]
                },
                {
                    "command": [
                        "set (j := join lr x d r) in *; clearbody j.",
                        "VernacExtend",
                        "94dc57f91585b956e250a01a247ffce9812b35ac"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (-(3) <= height ll - height j <= 3) by omega_max.",
                        "VernacExtend",
                        "0da1f7e53a71b24109d54a722e2c9e0091a4c6ff"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply bal_avl; auto.",
                        "VernacExtend",
                        "e6414c78d2c53666d23e65c265e5194cdc4d4b35"
                    ]
                },
                {
                    "command": [
                        "omega_bal.",
                        "VernacExtend",
                        "4df0d075d0e711bc3b271b0516e984323a64764e"
                    ]
                },
                {
                    "command": [
                        "inversion_clear H0.",
                        "VernacExtend",
                        "e21f851b9423020c7f22dae666bca7829c9b1967"
                    ]
                },
                {
                    "command": [
                        "assert (height (Node ll lx ld lr lh) = lh); auto.",
                        "VernacExtend",
                        "02b866ca5c9bd92cc27fd5e1d69a3c18c88bde82"
                    ]
                },
                {
                    "command": [
                        "set (l := Node ll lx ld lr lh) in *; clearbody l.",
                        "VernacExtend",
                        "8ae4aefe3bb236196c03b1592741c1768a46fc7d"
                    ]
                },
                {
                    "command": [
                        "destruct (Hrl H H1); clear Hrl Hlr.",
                        "VernacExtend",
                        "9aea56cf169f81f0eb79b61e9155f18d641d339d"
                    ]
                },
                {
                    "command": [
                        "set (j := join l x d rl) in *; clearbody j.",
                        "VernacExtend",
                        "a1041155e7e2f600d486693a47d3acb896204fa0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "assert (-(3) <= height j - height rr <= 3) by omega_max.",
                        "VernacExtend",
                        "f2d0d235023b1f5937254aecd5c8fcb7156e7ae4"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply bal_avl; auto.",
                        "VernacExtend",
                        "e6414c78d2c53666d23e65c265e5194cdc4d4b35"
                    ]
                },
                {
                    "command": [
                        "omega_bal.",
                        "VernacExtend",
                        "4df0d075d0e711bc3b271b0516e984323a64764e"
                    ]
                },
                {
                    "command": [
                        "clear Hrl Hlr.",
                        "VernacExtend",
                        "cbce5377e13d119e68b9c090fe2a2872a5500d59"
                    ]
                },
                {
                    "command": [
                        "assert (height (Node ll lx ld lr lh) = lh); auto.",
                        "VernacExtend",
                        "02b866ca5c9bd92cc27fd5e1d69a3c18c88bde82"
                    ]
                },
                {
                    "command": [
                        "assert (height (Node rl rx rd rr rh) = rh); auto.",
                        "VernacExtend",
                        "d4f4f9a5c8bbae34e68acd40afa2a7bce519211f"
                    ]
                },
                {
                    "command": [
                        "set (l := Node ll lx ld lr lh) in *; clearbody l.",
                        "VernacExtend",
                        "8ae4aefe3bb236196c03b1592741c1768a46fc7d"
                    ]
                },
                {
                    "command": [
                        "set (r := Node rl rx rd rr rh) in *; clearbody r.",
                        "VernacExtend",
                        "d023423ec549c323b882b3cbfabb22b3b2d3c01d"
                    ]
                },
                {
                    "command": [
                        "assert (-(2) <= height l - height r <= 2) by omega_max.",
                        "VernacExtend",
                        "bed60c7d34a8b09c8c1aae56236b4696c13a7dec"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "apply create_avl; auto.",
                        "VernacExtend",
                        "f9ac291dc0f99b8ba64ffb3d09c4febcc453933b"
                    ]
                },
                {
                    "command": [
                        "rewrite create_height; auto; omega_max.",
                        "VernacExtend",
                        "a6db62a3c34e4103ba6269e0e25c2e46ef4adede"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "join_avl",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "intros; destruct (join_avl_1 x d H H0); auto.",
                        "VernacExtend",
                        "a0a8ea7f7fc92f4c88b68ec2c7362659de19bbf3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "concat_avl",
            "line_nb": 160,
            "steps": [
                {
                    "command": [
                        "intros m1 m2; functional induction (concat m1 m2); auto.",
                        "VernacExtend",
                        "75ad6a4395c20d9643e4b01db7b06e25933d6f59"
                    ]
                },
                {
                    "command": [
                        "intros; apply join_avl; auto.",
                        "VernacExtend",
                        "1a47fef5bab7c87a5b7bd375124ce9a3c17de7e5"
                    ]
                },
                {
                    "command": [
                        "generalize (remove_min_avl H0); rewrite e1; simpl; auto.",
                        "VernacExtend",
                        "3aac2950a237ce0ab575ee2ee768806385d203e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "split_avl",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "intros m x; functional induction (split x m); simpl; auto.",
                        "VernacExtend",
                        "37cc76b49a15db0bd3ba6a94d2e9cc99f66b327e"
                    ]
                },
                {
                    "command": [
                        "rewrite e1 in IHt;simpl in IHt;inversion_clear 1; intuition.",
                        "VernacExtend",
                        "0cc6b1d90008e1ce911933aa7a1dca3b872ed7e0"
                    ]
                },
                {
                    "command": [
                        "simpl; inversion_clear 1; auto.",
                        "VernacExtend",
                        "f8c459d426f9bd51a2d2e4c11f970857b6d67c52"
                    ]
                },
                {
                    "command": [
                        "rewrite e1 in IHt;simpl in IHt;inversion_clear 1; intuition.",
                        "VernacExtend",
                        "0cc6b1d90008e1ce911933aa7a1dca3b872ed7e0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_height",
            "line_nb": 177,
            "steps": [
                {
                    "command": [
                        "destruct m; simpl; auto.",
                        "VernacExtend",
                        "94781fbacb55d6a7e74b34f87daed7127004ccb8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_avl",
            "line_nb": 180,
            "steps": [
                {
                    "command": [
                        "induction m; simpl; auto.",
                        "VernacExtend",
                        "fef957ed452ac0981dd5620d82fa8cb3b652f75b"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 1; constructor; auto; do 2 rewrite map_height; auto.",
                        "VernacExtend",
                        "df06e6eecb2bbc258391211819eefa87cbcd9aec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapi_height",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "destruct m; simpl; auto.",
                        "VernacExtend",
                        "94781fbacb55d6a7e74b34f87daed7127004ccb8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapi_avl",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "induction m; simpl; auto.",
                        "VernacExtend",
                        "fef957ed452ac0981dd5620d82fa8cb3b652f75b"
                    ]
                },
                {
                    "command": [
                        "inversion_clear 1; constructor; auto; do 2 rewrite mapi_height; auto.",
                        "VernacExtend",
                        "1bf166f6138a955560f850a1887ee2e679c05e22"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_option_avl",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "induction m; simpl; auto; intros.",
                        "VernacExtend",
                        "6cc44e2cf968f6d1111d6be72d9944cc2c307dcc"
                    ]
                },
                {
                    "command": [
                        "inv avl; destruct (f k e); auto using join_avl, concat_avl.",
                        "VernacExtend",
                        "485af69ed630a707a085f1902f6689ab7fda097c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map2_opt_avl",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "intros m1 m2; functional induction (map2_opt m1 m2); auto; factornode _x0 _x1 _x2 _x3 _x4 as r2; intros; destruct (split_avl x1 H0); rewrite e1 in *; simpl in *; inv avl; auto using join_avl, concat_avl.",
                        "VernacExtend",
                        "e77acab5b9b148f6bc1f5ec5cd1b9894e6b909b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map2_avl",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "unfold map2; auto using map2_opt_avl, map_option_avl.",
                        "VernacExtend",
                        "9bb06194abdec49e94409d2c60aa1cbbe9295d93"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MapsTo_1",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "intros m; exact (@MapsTo_1 _ m.(this)).",
                        "VernacExtend",
                        "c90ecfdc8d3faf0d32b0c3ff4d16f1131d67ef33"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_1",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "unfold In, mem; intros m x; rewrite In_alt; simpl; apply mem_1; auto.",
                        "VernacExtend",
                        "f9c260a166b01601cad1370d97c814e7e930870b"
                    ]
                },
                {
                    "command": [
                        "apply m.(is_bst).",
                        "VernacExtend",
                        "0ef8eba2302b0f71f9ac3e9b8e7040530e31f6df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mem_2",
            "line_nb": 263,
            "steps": [
                {
                    "command": [
                        "unfold In, mem; intros m x; rewrite In_alt; simpl; apply mem_2; auto.",
                        "VernacExtend",
                        "5f2e3d449723a77ecb7ee20d0da60ac526fc9a88"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "empty_1",
            "line_nb": 266,
            "steps": [
                {
                    "command": [
                        "exact (@empty_1 elt).",
                        "VernacExtend",
                        "343739a20ec10ce66de63f37124406e38f832fa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_empty_1",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "intros m; exact (@is_empty_1 _ m.(this)).",
                        "VernacExtend",
                        "9f34eb5d1149619e67e3d6313fe81bae2e271c5a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_empty_2",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "intros m; exact (@is_empty_2 _ m.(this)).",
                        "VernacExtend",
                        "fb9d4d3d099588612bbf11d370bb794e22a0b0bb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_1",
            "line_nb": 275,
            "steps": [
                {
                    "command": [
                        "intros m x y e; exact (@add_1 elt _ x y e).",
                        "VernacExtend",
                        "7e63a938860aec53550349eadb44d6a6cb27c65b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_2",
            "line_nb": 278,
            "steps": [
                {
                    "command": [
                        "intros m x y e e'; exact (@add_2 elt _ x y e e').",
                        "VernacExtend",
                        "b9f5602e4e7922f4ebc9b566bf4c90431e6e9a2e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "add_3",
            "line_nb": 281,
            "steps": [
                {
                    "command": [
                        "intros m x y e e'; exact (@add_3 elt _ x y e e').",
                        "VernacExtend",
                        "7f0e9550263c57716b794935e59a7d7190960453"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_1",
            "line_nb": 284,
            "steps": [
                {
                    "command": [
                        "unfold In, remove; intros m x y; rewrite In_alt; simpl; apply remove_1; auto.",
                        "VernacExtend",
                        "eeaf4ad590bb7235d51b56743055cd944283b776"
                    ]
                },
                {
                    "command": [
                        "apply m.(is_bst).",
                        "VernacExtend",
                        "0ef8eba2302b0f71f9ac3e9b8e7040530e31f6df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_2",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "intros m x y e; exact (@remove_2 elt _ x y e m.(is_bst)).",
                        "VernacExtend",
                        "2b6cd682300953bb4fa8c05db1a71928b8df4f2f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "remove_3",
            "line_nb": 291,
            "steps": [
                {
                    "command": [
                        "intros m x y e; exact (@remove_3 elt _ x y e m.(is_bst)).",
                        "VernacExtend",
                        "bc2ca5e69de864aab6796f263b07baa421a5cc4f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_1",
            "line_nb": 294,
            "steps": [
                {
                    "command": [
                        "intros m x e; exact (@find_1 elt _ x e m.(is_bst)).",
                        "VernacExtend",
                        "865909fb91aab7b9df49b6ff05f0253840458862"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_2",
            "line_nb": 297,
            "steps": [
                {
                    "command": [
                        "intros m; exact (@find_2 elt m.(this)).",
                        "VernacExtend",
                        "46011616780cee71f1ea3bc0863ca7551d159810"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_1",
            "line_nb": 300,
            "steps": [
                {
                    "command": [
                        "intros m; exact (@fold_1 elt m.(this) m.(is_bst)).",
                        "VernacExtend",
                        "4b73165f7339dd8e8af2ff1a44210deda895b345"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_1",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "intros; unfold elements, MapsTo, eq_key_elt; rewrite elements_mapsto; auto.",
                        "VernacExtend",
                        "3bd925a09de89b68d12e39d538e24b0474e3aa93"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_2",
            "line_nb": 306,
            "steps": [
                {
                    "command": [
                        "intros; unfold elements, MapsTo, eq_key_elt; rewrite <- elements_mapsto; auto.",
                        "VernacExtend",
                        "081dcb0ff5367efbaa54fc7b23bcdf414653f6d2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_3",
            "line_nb": 309,
            "steps": [
                {
                    "command": [
                        "intros m; exact (@elements_sort elt m.(this) m.(is_bst)).",
                        "VernacExtend",
                        "90e5d13cb97a1140ba43745c93140d726d358cbf"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "elements_3w",
            "line_nb": 312,
            "steps": [
                {
                    "command": [
                        "intros m; exact (@elements_nodup elt m.(this) m.(is_bst)).",
                        "VernacExtend",
                        "778efe9762a145281d11a1624a07611be6e85fe9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cardinal_1",
            "line_nb": 315,
            "steps": [
                {
                    "command": [
                        "intro m; exact (@elements_cardinal elt m.(this)).",
                        "VernacExtend",
                        "01f6cfedfbba2b187c1ef3334684138f90545633"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Equivb_Equivb",
            "line_nb": 321,
            "steps": [
                {
                    "command": [
                        "intros; unfold Equivb, Equiv, Raw.Proofs.Equivb, In; intuition.",
                        "VernacExtend",
                        "1a7a6146585186dbe98a1752110e01442a7f9f23"
                    ]
                },
                {
                    "command": [
                        "generalize (H0 k); do 2 rewrite In_alt; intuition.",
                        "VernacExtend",
                        "da8983e340df010e64d5cb12565c4993f060dfc8"
                    ]
                },
                {
                    "command": [
                        "generalize (H0 k); do 2 rewrite In_alt; intuition.",
                        "VernacExtend",
                        "da8983e340df010e64d5cb12565c4993f060dfc8"
                    ]
                },
                {
                    "command": [
                        "generalize (H0 k); do 2 rewrite <- In_alt; intuition.",
                        "VernacExtend",
                        "943fb480c4f239fb9f33cd93ce1280fefed57289"
                    ]
                },
                {
                    "command": [
                        "generalize (H0 k); do 2 rewrite <- In_alt; intuition.",
                        "VernacExtend",
                        "943fb480c4f239fb9f33cd93ce1280fefed57289"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_1",
            "line_nb": 328,
            "steps": [
                {
                    "command": [
                        "unfold equal; intros (m,b,a) (m',b',a') cmp; rewrite Equivb_Equivb; intros; simpl in *; rewrite equal_Equivb; auto.",
                        "VernacExtend",
                        "9c2ed1d6ebc2a7cf6f90d16ad230d957be11300a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "equal_2",
            "line_nb": 331,
            "steps": [
                {
                    "command": [
                        "unfold equal; intros (m,b,a) (m',b',a') cmp; rewrite Equivb_Equivb; intros; simpl in *; rewrite <-equal_Equivb; auto.",
                        "VernacExtend",
                        "9911a5dfa489712fb521c247f5d3ea8401ec878d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_1",
            "line_nb": 335,
            "steps": [
                {
                    "command": [
                        "intros elt elt' m x e f; exact (@map_1 elt elt' f m.(this) x e).",
                        "VernacExtend",
                        "94c552455136fc010f0a979f6d04bc9453cd4bbc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_2",
            "line_nb": 338,
            "steps": [
                {
                    "command": [
                        "intros elt elt' m x f; do 2 unfold In in *; do 2 rewrite In_alt; simpl.",
                        "VernacExtend",
                        "f8d6d413775a45c23d555a4c0419281f0848fc05"
                    ]
                },
                {
                    "command": [
                        "apply map_2; auto.",
                        "VernacExtend",
                        "33bb962e2eafd283761b45691661ab50a3a39469"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapi_1",
            "line_nb": 342,
            "steps": [
                {
                    "command": [
                        "intros elt elt' m x e f; exact (@mapi_1 elt elt' f m.(this) x e).",
                        "VernacExtend",
                        "2fd588d04490e77bfea057865f381e018869f00d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mapi_2",
            "line_nb": 345,
            "steps": [
                {
                    "command": [
                        "intros elt elt' m x f; unfold In in *; do 2 rewrite In_alt; simpl; apply mapi_2; auto.",
                        "VernacExtend",
                        "31168e49839101a730f123ded292f339b58f820f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map2_1",
            "line_nb": 348,
            "steps": [
                {
                    "command": [
                        "unfold find, map2, In; intros elt elt' elt'' m m' x f.",
                        "VernacExtend",
                        "11c33e5730a09a023c2e5a71990718af464755d5"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite In_alt; intros; simpl; apply map2_1; auto.",
                        "VernacExtend",
                        "6f56c75f49fcd86ad515d3a12464874e3df3eb76"
                    ]
                },
                {
                    "command": [
                        "apply m.(is_bst).",
                        "VernacExtend",
                        "0ef8eba2302b0f71f9ac3e9b8e7040530e31f6df"
                    ]
                },
                {
                    "command": [
                        "apply m'.(is_bst).",
                        "VernacExtend",
                        "bdee2c928b748d1f85dc70e4f38ef0b3f5394098"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map2_2",
            "line_nb": 354,
            "steps": [
                {
                    "command": [
                        "unfold In, map2; intros elt elt' elt'' m m' x f.",
                        "VernacExtend",
                        "9155a883e0fa56f94a8baf2480bc749a3e6e427d"
                    ]
                },
                {
                    "command": [
                        "do 3 rewrite In_alt; intros; simpl in *; eapply map2_2; eauto.",
                        "VernacExtend",
                        "e926535b45e1afba7dcaca0eadfcbdfca943389b"
                    ]
                },
                {
                    "command": [
                        "apply m.(is_bst).",
                        "VernacExtend",
                        "0ef8eba2302b0f71f9ac3e9b8e7040530e31f6df"
                    ]
                },
                {
                    "command": [
                        "apply m'.(is_bst).",
                        "VernacExtend",
                        "bdee2c928b748d1f85dc70e4f38ef0b3f5394098"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cons_cardinal_e",
            "line_nb": 372,
            "steps": [
                {
                    "command": [
                        "induction m; simpl; intros; auto.",
                        "VernacExtend",
                        "489e56f92c4f73f4cd0440845d046923410759b3"
                    ]
                },
                {
                    "command": [
                        "rewrite IHm1; simpl; rewrite <- plus_n_Sm; auto with arith.",
                        "VernacExtend",
                        "213256650f112641fff77c6a38612fdf3d92fe1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_aux_tcc",
            "line_nb": 378,
            "steps": [
                {
                    "command": [
                        "intros; unfold cardinal_e_2; simpl; abstract (do 2 rewrite cons_cardinal_e; lia ).",
                        "VernacExtend",
                        "7e9fbfb8aec8d9addfe913625b9288d35d29aa19"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "cons_Cmp",
            "line_nb": 382,
            "steps": [
                {
                    "command": [
                        "destruct c; simpl; intros; MX.elim_comp; auto.",
                        "VernacExtend",
                        "a9736c035e5945e8ca6b36b607a5061d1f69315c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare_aux_Cmp",
            "line_nb": 386,
            "steps": [
                {
                    "command": [
                        "intros e; functional induction (compare_aux e); simpl in *; auto; intros; try clear e0; try clear e3; try MX.elim_comp; auto.",
                        "VernacExtend",
                        "aece4672e44e77f01d4c1947c532d0a46b4fc844"
                    ]
                },
                {
                    "command": [
                        "rewrite 2 cons_1 in IHc; auto.",
                        "VernacExtend",
                        "0d5ebc7d2bb5cd711ba4db54b194251dbbd98321"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "compare",
            "line_nb": 399,
            "steps": [
                {
                    "command": [
                        "destruct s as (s,b,a), s' as (s',b',a').",
                        "VernacExtend",
                        "53d84cd73f35e66efe269f979a1b6e24b204af51"
                    ]
                },
                {
                    "command": [
                        "generalize (compare_Cmp s s').",
                        "VernacExtend",
                        "ec1cc16b900f601c509d6c4efc54b7608cdb6c6b"
                    ]
                },
                {
                    "command": [
                        "destruct compare_aux; intros; [apply EQ|apply LT|apply GT]; red; auto.",
                        "VernacExtend",
                        "7197d7785e433e0dca6b2eeb5dfbbe2339811390"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "eq_seq",
            "line_nb": 407,
            "steps": [
                {
                    "command": [
                        "unfold eq, seq, selements, elements, LO.eq; intuition.",
                        "VernacExtend",
                        "f1b87ec9cba6716377dc2c6914c2fd87c3f3e490"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_slt",
            "line_nb": 410,
            "steps": [
                {
                    "command": [
                        "unfold lt, slt, selements, elements, LO.lt; intuition.",
                        "VernacExtend",
                        "8c5d62688bbb8f08aa1f26dd3f05d2c51e6cdb0d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_1",
            "line_nb": 413,
            "steps": [
                {
                    "command": [
                        "intros m m'.",
                        "VernacExtend",
                        "617ebb524c10b94a79f3da66164aa5e3960dcac8"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_seq; unfold seq.",
                        "VernacExtend",
                        "ca8a32ee8b7194903be6c7526f7034c2990a83b7"
                    ]
                },
                {
                    "command": [
                        "rewrite Equivb_Equivb.",
                        "VernacExtend",
                        "170c2a8a3cf5e094a49f59b4410e3b6c60a5d3b6"
                    ]
                },
                {
                    "command": [
                        "rewrite Equivb_elements.",
                        "VernacExtend",
                        "793d1fdd95d761c7838a9548b358ceb1332d56a3"
                    ]
                },
                {
                    "command": [
                        "auto using LO.eq_1.",
                        "VernacExtend",
                        "af9a5d142df2b0d65ffc0b037f51b45fdf7d30bd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_2",
            "line_nb": 420,
            "steps": [
                {
                    "command": [
                        "intros m m'.",
                        "VernacExtend",
                        "617ebb524c10b94a79f3da66164aa5e3960dcac8"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_seq; unfold seq.",
                        "VernacExtend",
                        "ca8a32ee8b7194903be6c7526f7034c2990a83b7"
                    ]
                },
                {
                    "command": [
                        "rewrite Equivb_Equivb.",
                        "VernacExtend",
                        "170c2a8a3cf5e094a49f59b4410e3b6c60a5d3b6"
                    ]
                },
                {
                    "command": [
                        "rewrite Equivb_elements.",
                        "VernacExtend",
                        "793d1fdd95d761c7838a9548b358ceb1332d56a3"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "generalize (LO.eq_2 H).",
                        "VernacExtend",
                        "44d07de09b961ade0d4192fdbbe59ea368b10dbb"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_refl",
            "line_nb": 429,
            "steps": [
                {
                    "command": [
                        "intros; rewrite eq_seq; unfold seq; intros; apply LO.eq_refl.",
                        "VernacExtend",
                        "633c4a51af6d588f7950123e7bad5bd1bf421345"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_sym",
            "line_nb": 432,
            "steps": [
                {
                    "command": [
                        "intros m1 m2; rewrite 2 eq_seq; unfold seq; intros; apply LO.eq_sym; auto.",
                        "VernacExtend",
                        "e0d993183acac4f90a2754f50105781e3ec97270"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_trans",
            "line_nb": 435,
            "steps": [
                {
                    "command": [
                        "intros m1 m2 M3; rewrite 3 eq_seq; unfold seq.",
                        "VernacExtend",
                        "6708854da61ff7ecc51591589748f73fbcf5144b"
                    ]
                },
                {
                    "command": [
                        "intros; eapply LO.eq_trans; eauto.",
                        "VernacExtend",
                        "102e13138d77f959fbc1542434bf54fe03ee509a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_trans",
            "line_nb": 439,
            "steps": [
                {
                    "command": [
                        "intros m1 m2 m3; rewrite 3 lt_slt; unfold slt; intros; eapply LO.lt_trans; eauto.",
                        "VernacExtend",
                        "5ddb770e0d76f7f28c94d293bfc0582ab336cf38"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_not_eq",
            "line_nb": 442,
            "steps": [
                {
                    "command": [
                        "intros m1 m2; rewrite lt_slt, eq_seq; unfold slt, seq; intros; apply LO.lt_not_eq; auto.",
                        "VernacExtend",
                        "1da3241f32daad70ea11257aff2a4a2691909fa1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}