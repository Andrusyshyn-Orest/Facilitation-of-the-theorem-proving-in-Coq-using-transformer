{
    "filename": "theories/Program/Wf.v",
    "coq_project": "coq",
    "vernac_cmds": [
        [
            "Require Import Coq.Init.Wf.",
            "VernacRequire",
            "1a95b3ae4cd386d846456e63f84bf06f6ceee961"
        ],
        [
            "Require Import Coq.Program.Utils.",
            "VernacRequire",
            "a8bdab7ca80d255c656a152d1062117f9c32c8da"
        ],
        [
            "Require Import ProofIrrelevance.",
            "VernacRequire",
            "8c3238ee3e3ff3fa43974681c335fc84a4cb0fe8"
        ],
        [
            "Require Import FunctionalExtensionality.",
            "VernacRequire",
            "bb1bf6a28f9de1b2ad0dab7920189198216ed486"
        ],
        [
            "Local Open Scope program_scope.",
            "VernacOpenCloseScope",
            "6bb21a93b668247e2dedc8ec6af2f052c3ec2a49"
        ],
        [
            "Section Well_founded.",
            "VernacBeginSection",
            "717b97bb4b474ea688e4b82ef95f4960cafe0a9c"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Variable R : A -> A -> Prop.",
            "VernacAssumption",
            "0d2b4236b120d599ff44dbf895c951c0abab01e8"
        ],
        [
            "Hypothesis Rwf : well_founded R.",
            "VernacAssumption",
            "46a13ab59aade6d77ca89bb980b4e9335db4c40a"
        ],
        [
            "Variable P : A -> Type.",
            "VernacAssumption",
            "628756d73f9ea95eb107647bbda9dd5c73aba0c1"
        ],
        [
            "Variable F_sub : forall x:A, (forall y: { y : A | R y x }, P (proj1_sig y)) -> P x.",
            "VernacAssumption",
            "acd858baa2a5a00a0bdd0d1b80bf1a4b19e049f9"
        ],
        [
            "Fixpoint Fix_F_sub (x : A) (r : Acc R x) : P x := F_sub x (fun y: { y : A | R y x} => Fix_F_sub (proj1_sig y) (Acc_inv r (proj2_sig y))).",
            "VernacFixpoint",
            "4627e2386905a655704ec4237e6aaafe4738b915"
        ],
        [
            "Definition Fix_sub (x : A) := Fix_F_sub x (Rwf x).",
            "VernacDefinition",
            "c488aad3fab978a1c236ab3d662c3de9f829aebc"
        ],
        [
            "Hypothesis F_ext : forall (x:A) (f g:forall y:{y:A | R y x}, P (`y)), (forall y:{y : A | R y x}, f y = g y) -> F_sub x f = F_sub x g.",
            "VernacAssumption",
            "d767c5bce07d84ab907ad056439b6700b2873635"
        ],
        [
            "Lemma Fix_F_eq : forall (x:A) (r:Acc R x), F_sub x (fun y:{y:A | R y x} => Fix_F_sub (`y) (Acc_inv r (proj2_sig y))) = Fix_F_sub x r.",
            "VernacStartTheoremProof",
            "a5e3e80d0756c8460df5d34803f30aa1590bfe1c"
        ],
        [
            "destruct r using Acc_inv_dep; auto.",
            "VernacExtend",
            "da779665940219b97916b9cf2c4628ec185c6af5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fix_F_inv : forall (x:A) (r s:Acc R x), Fix_F_sub x r = Fix_F_sub x s.",
            "VernacStartTheoremProof",
            "e3d12fb4bc6704b9a529b3472202380c2fb068ab"
        ],
        [
            "intro x; induction (Rwf x); intros.",
            "VernacExtend",
            "fb6355150f19991512128eae367a7e8b7b8baef0"
        ],
        [
            "rewrite (proof_irrelevance (Acc R x) r s) ; auto.",
            "VernacExtend",
            "2b6a207a092e3f5dfeac9888a06602c5ddf38de0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fix_eq : forall x:A, Fix_sub x = F_sub x (fun y:{ y:A | R y x} => Fix_sub (proj1_sig y)).",
            "VernacStartTheoremProof",
            "777e6ee0b5a0abe0c8a0728df504aba4ad71f935"
        ],
        [
            "intro x; unfold Fix_sub.",
            "VernacExtend",
            "cb00a3f605ddb38d0a6956ccc864ccccb48c3d50"
        ],
        [
            "rewrite <- (Fix_F_eq ).",
            "VernacExtend",
            "598742e622bc670873acbb8576d291d2d92d2d9a"
        ],
        [
            "apply F_ext; intros.",
            "VernacExtend",
            "dbe9f31bc047e65e815075d5d23b05a4cb1dee8c"
        ],
        [
            "apply Fix_F_inv.",
            "VernacExtend",
            "2c73c3cd3d2180a61306b0987682c46a984370a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fix_sub_eq : forall x : A, Fix_sub x = let f_sub := F_sub in f_sub x (fun y: {y : A | R y x} => Fix_sub (`y)).",
            "VernacStartTheoremProof",
            "6674202fa7f7a806139ee46a91956157f16282cb"
        ],
        [
            "exact Fix_eq.",
            "VernacExtend",
            "f7fe7751dd570c2dcf8bfd3e6e44130122ff7fba"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Well_founded.",
            "VernacEndSegment",
            "349c5ec8656a424f4e2c004b1dcdc950e63fe280"
        ],
        [
            "Require Coq.extraction.Extraction.",
            "VernacRequire",
            "8871ecfa36aaeba0cab7edbd8cbafe487da2662e"
        ],
        [
            "Extraction Inline Fix_F_sub Fix_sub.",
            "VernacExtend",
            "dde206b6d89152bea9f721b260384bed200ab031"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Section Measure_well_founded.",
            "VernacBeginSection",
            "ce641b2c887252cf0a9f804ae190667ebd734dbf"
        ],
        [
            "Variables T M: Type.",
            "VernacAssumption",
            "b0ee95091648096250d428607a3f384754017943"
        ],
        [
            "Variable R: M -> M -> Prop.",
            "VernacAssumption",
            "367d20bc836040c42aeaf5f25abbe1e460017301"
        ],
        [
            "Hypothesis wf: well_founded R.",
            "VernacAssumption",
            "c51930cfb3113314348e10ebd1ef7755e593a612"
        ],
        [
            "Variable m: T -> M.",
            "VernacAssumption",
            "9fac99f57dc33f870cd08311c3237cd0ae3e9697"
        ],
        [
            "Definition MR (x y: T): Prop := R (m x) (m y).",
            "VernacDefinition",
            "46d954e380753bb3e79748de3e6e92c849863a84"
        ],
        [
            "Lemma measure_wf: well_founded MR.",
            "VernacStartTheoremProof",
            "8366521af5829dab9f936883a42f016f08c6d3e3"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "unfold well_founded.",
            "VernacExtend",
            "e54483b8d4c15affa5848e44e1a0e79bf38074ce"
        ],
        [
            "cut (forall (a: M) (a0: T), m a0 = a -> Acc MR a0).",
            "VernacExtend",
            "e288856c0c4cc542c17df4205ef3cba35dd03b12"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply (H (m a))...",
            "VernacExtend",
            "69a25fa88e1168800de9b517fc34d951e4a725b1"
        ],
        [
            "apply (@well_founded_ind M R wf (fun mm => forall a, m a = mm -> Acc MR a)).",
            "VernacExtend",
            "bf9607ef7dc796034a3076e97fe055b264793215"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Acc_intro.",
            "VernacExtend",
            "2b155962537e5aa33952f28b98ee9d20165727a6"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold MR in H1.",
            "VernacExtend",
            "139795fb92c627fcad76a02dbc71e9d82c55df76"
        ],
        [
            "rewrite H0 in H1.",
            "VernacExtend",
            "45eb32137302b214d582b77378332f104f8e1d7f"
        ],
        [
            "apply (H (m y))...",
            "VernacExtend",
            "b94596dafe1808de7e7fd55e94e335e5ae1961cb"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Measure_well_founded.",
            "VernacEndSegment",
            "aa391560f69fdeab31dec94a2f42d42c9b4d965e"
        ],
        [
            "Hint Resolve measure_wf.",
            "VernacHints",
            "5c5d9c016c7811cb26855c7bc2ccfe3568829bf3"
        ],
        [
            "Section Fix_rects.",
            "VernacBeginSection",
            "912aac575b23984ea4f990c1df6217e1a0e72d3c"
        ],
        [
            "Variable A: Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Variable P: A -> Type.",
            "VernacAssumption",
            "628756d73f9ea95eb107647bbda9dd5c73aba0c1"
        ],
        [
            "Variable R : A -> A -> Prop.",
            "VernacAssumption",
            "0d2b4236b120d599ff44dbf895c951c0abab01e8"
        ],
        [
            "Variable Rwf : well_founded R.",
            "VernacAssumption",
            "a6aa4cb96490df45e5935d64c699f55e68f37c89"
        ],
        [
            "Variable f: forall (x : A), (forall y: { y: A | R y x }, P (proj1_sig y)) -> P x.",
            "VernacAssumption",
            "5546b0e14473099e9eaffe81158b23cf4327ceee"
        ],
        [
            "Lemma F_unfold x r: Fix_F_sub A R P f x r = f (fun y => Fix_F_sub A R P f (proj1_sig y) (Acc_inv r (proj2_sig y))).",
            "VernacStartTheoremProof",
            "8775e9c093876a3609f94be27b478c6ea7ff1321"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "case r; auto.",
            "VernacExtend",
            "2b6e9cda65ff4c73bd1d4452c6964e035850d461"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fix_F_sub_rect (Q: forall x, P x -> Type) (inv: forall x: A, (forall (y: A) (H: R y x) (a: Acc R y), Q y (Fix_F_sub A R P f y a)) -> forall (a: Acc R x), Q x (f (fun y: {y: A | R y x} => Fix_F_sub A R P f (proj1_sig y) (Acc_inv a (proj2_sig y))))) : forall x a, Q _ (Fix_F_sub A R P f x a).",
            "VernacStartTheoremProof",
            "0e46ab9083d46ccde108ec647705b05ac680e812"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "set (R' := fun (x: A) => forall a, Q _ (Fix_F_sub A R P f x a)).",
            "VernacExtend",
            "7aebd13a2645c219d892c045d1d8782159a463db"
        ],
        [
            "cut (forall x, R' x)...",
            "VernacExtend",
            "50651c5c6bc89130facdf46daf2715ecb5e281f4"
        ],
        [
            "apply (well_founded_induction_type Rwf).",
            "VernacExtend",
            "49613b330325f0c70b8f8120b6e7955b7e774ee1"
        ],
        [
            "subst R'.",
            "VernacExtend",
            "0ea396ce469b63382f0dd0feba1592528fe8b9e2"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite F_unfold...",
            "VernacExtend",
            "23060f512c5a166b87dfaa086bef14e921b30205"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hypothesis equiv_lowers: forall x0 (g h: forall x: {y: A | R y x0}, P (proj1_sig x)), (forall x p p', g (exist (fun y: A => R y x0) x p) = h (exist (fun y => R y x0) x p')) -> f g = f h.",
            "VernacAssumption",
            "b8332ac988d9571269ddecdd3f68bd87b48c3f91"
        ],
        [
            "Lemma eq_Fix_F_sub x (a a': Acc R x): Fix_F_sub A R P f x a = Fix_F_sub A R P f x a'.",
            "VernacStartTheoremProof",
            "8705438515da94fcb6e5aa6f759190192c714420"
        ],
        [
            "revert a'.",
            "VernacExtend",
            "2091243a1270cacf4bbf11449797f3776e6b191b"
        ],
        [
            "pattern x, (Fix_F_sub A R P f x a).",
            "VernacExtend",
            "44250fbc491405dd5af376d87d76fa1fc280c17c"
        ],
        [
            "apply Fix_F_sub_rect.",
            "VernacExtend",
            "79b740997baa4327020f1267f4ae3942afa8ccd2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "rewrite F_unfold.",
            "VernacExtend",
            "ece4763cf25796ca38565022592f89fc6b85105d"
        ],
        [
            "apply equiv_lowers.",
            "VernacExtend",
            "7cd367da170e6596e68a02ba8b77003117687345"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply H.",
            "VernacExtend",
            "4b47b71ad0f800d57cbdc591d68949e07decb540"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Fix_sub_rect (Q: forall x, P x -> Type) (inv: forall (x: A) (H: forall (y: A), R y x -> Q y (Fix_sub A R Rwf P f y)) (a: Acc R x), Q x (f (fun y: {y: A | R y x} => Fix_sub A R Rwf P f (proj1_sig y)))) : forall x, Q _ (Fix_sub A R Rwf P f x).",
            "VernacStartTheoremProof",
            "9da9309010bc85b2026b5c0c67f032b5cf40ae35"
        ],
        [
            "Proof with auto.",
            "VernacProof",
            "a7e71b78b5628467da426641e148a0229b525f22"
        ],
        [
            "unfold Fix_sub.",
            "VernacExtend",
            "0a7130b6aa2771e8e8fbcf9fa26a1244a4cdaff4"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply Fix_F_sub_rect.",
            "VernacExtend",
            "79b740997baa4327020f1267f4ae3942afa8ccd2"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert (forall y: A, R y x0 -> Q y (Fix_F_sub A R P f y (Rwf y)))...",
            "VernacExtend",
            "6991b4c0e1dd44789bfeb32f2b154dbeb82dddbf"
        ],
        [
            "set (inv x0 X0 a).",
            "VernacExtend",
            "e0a8cd577c9eab663631ad7b9b4d06cb06a65b9a"
        ],
        [
            "clearbody q.",
            "VernacExtend",
            "2121a92629fcc53efb0118b970a516e2818535e4"
        ],
        [
            "rewrite <- (equiv_lowers (fun y: {y: A | R y x0} => Fix_F_sub A R P f (proj1_sig y) (Rwf (proj1_sig y))) (fun y: {y: A | R y x0} => Fix_F_sub A R P f (proj1_sig y) (Acc_inv a (proj2_sig y))))...",
            "VernacExtend",
            "8317f701f689c2595ff6a320569b26b4fd3bdff7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply eq_Fix_F_sub.",
            "VernacExtend",
            "fcb2fe030ae3f251051d92e22afcb3aa2d1cf99e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Fix_rects.",
            "VernacEndSegment",
            "06fa61f2e496df83caa4a00e8119b9f992620433"
        ],
        [
            "Ltac fold_sub f := match goal with | [ |- ?T ] => match T with context C [ @Fix_sub _ _ _ _ _ ?arg ] => let app := context C [ f arg ] in change app end end.",
            "VernacExtend",
            "2fd03af94218e12e9b8e66422a20b3918551ae4b"
        ],
        [
            "Module WfExtensionality.",
            "VernacDefineModule",
            "283a6357862b32eabffab1e2e28b8c8a19e327a7"
        ],
        [
            "Program Lemma fix_sub_eq_ext : forall (A : Type) (R : A -> A -> Prop) (Rwf : well_founded R) (P : A -> Type) (F_sub : forall x : A, (forall y:{y : A | R y x}, P (` y)) -> P x), forall x : A, Fix_sub A R Rwf P F_sub x = F_sub x (fun y:{y : A | R y x} => Fix_sub A R Rwf P F_sub (` y)).",
            "VernacStartTheoremProof",
            "2e3f4284c92cc9036510bfeedce326039de4a965"
        ],
        [
            "intros ; apply Fix_eq ; auto.",
            "VernacExtend",
            "336a4c10477110134d55f624c81d9b8c0bf905eb"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "assert(f = g).",
            "VernacExtend",
            "1eed63176b5652e7614ce439631471457c607985"
        ],
        [
            "extensionality y ; apply H.",
            "VernacExtend",
            "dadf071ff442456c7083c2bc72eb326b13c49bed"
        ],
        [
            "rewrite H0 ; auto.",
            "VernacExtend",
            "48df2b0b453adadcea8e6914bccb68bfc33b286b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac unfold_sub f fargs := set (call:=fargs) ; unfold f in call ; unfold call ; clear call ; rewrite fix_sub_eq_ext ; repeat fold_sub f ; simpl proj1_sig.",
            "VernacExtend",
            "d59c8c57fe8fa72d272c682b1c73d7dd8b92b9bb"
        ],
        [
            "End WfExtensionality.",
            "VernacEndSegment",
            "8ae80ccbf66b9f36f83c5d0e7b9b2c4cf864579e"
        ]
    ],
    "proofs": [
        {
            "name": "Fix_F_eq",
            "line_nb": 14,
            "steps": [
                {
                    "command": [
                        "destruct r using Acc_inv_dep; auto.",
                        "VernacExtend",
                        "da779665940219b97916b9cf2c4628ec185c6af5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fix_F_inv",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intro x; induction (Rwf x); intros.",
                        "VernacExtend",
                        "fb6355150f19991512128eae367a7e8b7b8baef0"
                    ]
                },
                {
                    "command": [
                        "rewrite (proof_irrelevance (Acc R x) r s) ; auto.",
                        "VernacExtend",
                        "2b6a207a092e3f5dfeac9888a06602c5ddf38de0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Fix_eq",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intro x; unfold Fix_sub.",
                        "VernacExtend",
                        "cb00a3f605ddb38d0a6956ccc864ccccb48c3d50"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (Fix_F_eq ).",
                        "VernacExtend",
                        "598742e622bc670873acbb8576d291d2d92d2d9a"
                    ]
                },
                {
                    "command": [
                        "apply F_ext; intros.",
                        "VernacExtend",
                        "dbe9f31bc047e65e815075d5d23b05a4cb1dee8c"
                    ]
                },
                {
                    "command": [
                        "apply Fix_F_inv.",
                        "VernacExtend",
                        "2c73c3cd3d2180a61306b0987682c46a984370a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fix_sub_eq",
            "line_nb": 27,
            "steps": [
                {
                    "command": [
                        "exact Fix_eq.",
                        "VernacExtend",
                        "f7fe7751dd570c2dcf8bfd3e6e44130122ff7fba"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "F_unfold",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "case r; auto.",
                        "VernacExtend",
                        "2b6e9cda65ff4c73bd1d4452c6964e035850d461"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_Fix_F_sub",
            "line_nb": 77,
            "steps": [
                {
                    "command": [
                        "revert a'.",
                        "VernacExtend",
                        "2091243a1270cacf4bbf11449797f3776e6b191b"
                    ]
                },
                {
                    "command": [
                        "pattern x, (Fix_F_sub A R P f x a).",
                        "VernacExtend",
                        "44250fbc491405dd5af376d87d76fa1fc280c17c"
                    ]
                },
                {
                    "command": [
                        "apply Fix_F_sub_rect.",
                        "VernacExtend",
                        "79b740997baa4327020f1267f4ae3942afa8ccd2"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "rewrite F_unfold.",
                        "VernacExtend",
                        "ece4763cf25796ca38565022592f89fc6b85105d"
                    ]
                },
                {
                    "command": [
                        "apply equiv_lowers.",
                        "VernacExtend",
                        "7cd367da170e6596e68a02ba8b77003117687345"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply H.",
                        "VernacExtend",
                        "4b47b71ad0f800d57cbdc591d68949e07decb540"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fix_sub_eq_ext",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intros ; apply Fix_eq ; auto.",
                        "VernacExtend",
                        "336a4c10477110134d55f624c81d9b8c0bf905eb"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "assert(f = g).",
                        "VernacExtend",
                        "1eed63176b5652e7614ce439631471457c607985"
                    ]
                },
                {
                    "command": [
                        "extensionality y ; apply H.",
                        "VernacExtend",
                        "dadf071ff442456c7083c2bc72eb326b13c49bed"
                    ]
                },
                {
                    "command": [
                        "rewrite H0 ; auto.",
                        "VernacExtend",
                        "48df2b0b453adadcea8e6914bccb68bfc33b286b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}