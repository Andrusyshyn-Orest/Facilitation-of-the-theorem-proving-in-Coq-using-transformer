{
    "filename": "infseq.v",
    "coq_project": "InfSeqExt",
    "vernac_cmds": [
        [
            "Ltac genclear H := generalize H; clear H.",
            "VernacExtend",
            "09a4f87ff2b32bb8ac4289341059ec91ceff76b5"
        ],
        [
            "Ltac clearall := repeat match goal with [H : _ |- _ ] => clear H end || match goal with [H : _ |- _ ] => genclear H end.",
            "VernacExtend",
            "72bd449912fbae4557e789a679e12e4f90303bad"
        ],
        [
            "Section sec_infseq.",
            "VernacBeginSection",
            "34909e9cf40856021e6658e45a7b9277a7c234d4"
        ],
        [
            "Variable T: Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "CoInductive infseq : Type := Cons : T -> infseq -> infseq.",
            "VernacInductive",
            "1e20815f839942a9337d81fffe71fda2db74117f"
        ],
        [
            "Definition hd (s:infseq) : T := match s with Cons x _ => x end.",
            "VernacDefinition",
            "15765ac93253a46d582d6406b35b67388c6dbf19"
        ],
        [
            "Definition tl (s:infseq) : infseq := match s with Cons _ s => s end.",
            "VernacDefinition",
            "2e1964285a09b72b29a45268e54b91d681476d0e"
        ],
        [
            "Lemma recons : forall s, Cons (hd s) (tl s) = s.",
            "VernacStartTheoremProof",
            "863e811dcd9bd6d6ab720e7253065af02dc6f6a6"
        ],
        [
            "intros s.",
            "VernacExtend",
            "f24a724dc5e422652c0513af3278d221ab4df04a"
        ],
        [
            "case s.",
            "VernacExtend",
            "efad6b1c39b577b9895537b26593810b0956f859"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End sec_infseq.",
            "VernacEndSegment",
            "fd62d53597342e574d7f3c02827115bad59ce49a"
        ],
        [
            "Arguments Cons [T] _ _.",
            "VernacArguments",
            "4e6f9aa6bf965b2d10c843146d8d948412ac87b8"
        ],
        [
            "Arguments hd [T] _.",
            "VernacArguments",
            "fb05fda5c18a05f6147da08a55e83bf477e6bb10"
        ],
        [
            "Arguments tl [T] _.",
            "VernacArguments",
            "056700623e2fb6ff9d9c4431423685ad287acee4"
        ],
        [
            "Arguments recons [T] _.",
            "VernacArguments",
            "e8e642860dc1ba563d8eaa63f3160b58551fd766"
        ],
        [
            "Section sec_modal_op_defn.",
            "VernacBeginSection",
            "0597557cf28bc138cedfeb75997f6103ef93ecb2"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Definition now (P: T->Prop) (s: infseq T) : Prop := match s with Cons x s => P x end.",
            "VernacDefinition",
            "f8a0606ba0dc84d0e686a605023a228c173d4463"
        ],
        [
            "Definition next (P: infseq T -> Prop) (s: infseq T) : Prop := match s with Cons x s => P s end.",
            "VernacDefinition",
            "5c6cadebd8104512f79e6246561da395c40c79b3"
        ],
        [
            "Definition consecutive (R: T -> T -> Prop) (s: infseq T) : Prop := match s with Cons x1 (Cons x2 s) => R x1 x2 end.",
            "VernacDefinition",
            "3fd3eb98cd0cf81ad3f1981db1c366ae6a5aa68d"
        ],
        [
            "CoInductive always1 (P: T->Prop) : infseq T -> Prop := | Always1 : forall x s, P x -> always1 P s -> always1 P (Cons x s).",
            "VernacInductive",
            "945c51b127414d5e70bd1358639eb7ec1e37be91"
        ],
        [
            "CoInductive always (P: infseq T->Prop) : infseq T -> Prop := | Always : forall s, P s -> always P (tl s) -> always P s.",
            "VernacInductive",
            "4c87013398f141e3aae8ae496ab1767cbddd7e9b"
        ],
        [
            "CoInductive weak_until (J P: infseq T->Prop) : infseq T -> Prop := | W0 : forall s, P s -> weak_until J P s | W_tl : forall s, J s -> weak_until J P (tl s) -> weak_until J P s.",
            "VernacInductive",
            "8c094e6df849bb81dd8b1f991edd0d7926586976"
        ],
        [
            "Inductive until (J P: infseq T->Prop) : infseq T -> Prop := | U0 : forall s, P s -> until J P s | U_next : forall x s, J (Cons x s) -> until J P s -> until J P (Cons x s).",
            "VernacInductive",
            "345adcda200a08fab86dbf54074aca3cd625993c"
        ],
        [
            "CoInductive release (J P: infseq T->Prop) : infseq T -> Prop := | R0 : forall s, P s -> J s -> release J P s | R_tl : forall s, P s -> release J P (tl s) -> release J P s.",
            "VernacInductive",
            "df353fa09650b17a03ec7c6098ab0e61175ae449"
        ],
        [
            "Inductive eventually (P: infseq T->Prop) : infseq T -> Prop := | E0 : forall s, P s -> eventually P s | E_next : forall x s, eventually P s -> eventually P (Cons x s).",
            "VernacInductive",
            "7244c877a425ebb10a5d47b4aa714452df870939"
        ],
        [
            "Definition inf_often (P: infseq T->Prop) (s: infseq T) : Prop := always (eventually P) s.",
            "VernacDefinition",
            "d756061fb05a3ea66f05b9cfc19e4ee201e1018a"
        ],
        [
            "Definition continuously (P: infseq T->Prop) (s: infseq T) : Prop := eventually (always P) s.",
            "VernacDefinition",
            "187d824283005e734e31db02c8756a3628883bba"
        ],
        [
            "Definition impl_tl (P Q: infseq T -> Prop) : infseq T -> Prop := fun s => P s -> Q s.",
            "VernacDefinition",
            "a0f2420b679afa2e647d63674b8190150bcaecca"
        ],
        [
            "Definition and_tl (P Q: infseq T -> Prop) : infseq T -> Prop := fun s => P s /\\ Q s.",
            "VernacDefinition",
            "652cec28483394580a4c48725788028f6cb837ca"
        ],
        [
            "Definition or_tl (P Q: infseq T -> Prop) : infseq T -> Prop := fun s => P s \\/ Q s.",
            "VernacDefinition",
            "6dede219bdbdfdb525d566131f8f2eb498c1d762"
        ],
        [
            "Definition not_tl (P : infseq T -> Prop) : infseq T -> Prop := fun s => ~ P s.",
            "VernacDefinition",
            "44d0a53568c305a45a5609cbbaf5065021f65098"
        ],
        [
            "Definition True_tl : infseq T -> Prop := fun _ => True.",
            "VernacDefinition",
            "f807318627102d4f1ed9fa3d5f622707f9ec15ee"
        ],
        [
            "Definition False_tl : infseq T -> Prop := fun _ => False.",
            "VernacDefinition",
            "82161430d71f6d4ff9ea42c191a15d96f063906e"
        ],
        [
            "End sec_modal_op_defn.",
            "VernacEndSegment",
            "1dc3fde075815ff44f42305ca97443f519a5787e"
        ],
        [
            "Hint Unfold True_tl False_tl : core.",
            "VernacHints",
            "87d32793eaedea6c4713cd3627cce0d4e9986cff"
        ],
        [
            "Arguments now [T] _ _.",
            "VernacArguments",
            "3d593ed4bc60f420e15b18cf0c87a1c00c310b1e"
        ],
        [
            "Arguments next [T] _ _.",
            "VernacArguments",
            "961701340ce341dd050bf217e211fb6b38d96584"
        ],
        [
            "Arguments consecutive [T] _ _.",
            "VernacArguments",
            "410b5f99f976fa0338dabb842a7428b8734a0319"
        ],
        [
            "Arguments always [T] _ _.",
            "VernacArguments",
            "a16cb80393b343cd9e7bb36bd125124bb62ab62b"
        ],
        [
            "Arguments always1 [T] _ _.",
            "VernacArguments",
            "a937c30d20ae7fb81834cb0c692ec7b09c5779e2"
        ],
        [
            "Arguments eventually [T] _ _.",
            "VernacArguments",
            "7e6ee7b346415f6fcb6315e58ed0a441d552a8d2"
        ],
        [
            "Arguments weak_until [T] _ _ _.",
            "VernacArguments",
            "86bca9226605975a05ffc0257aeac193bc33b806"
        ],
        [
            "Arguments until [T] _ _ _.",
            "VernacArguments",
            "a71f350c0dddb5c675f0a55c9c5fc7f93e9422bf"
        ],
        [
            "Arguments release [T] _ _ _.",
            "VernacArguments",
            "2e54ae44eb54f8b9f619ac4657098a42fdd907ea"
        ],
        [
            "Arguments inf_often [T] _ _.",
            "VernacArguments",
            "67b7d514e0df9739a8b6178c7d0f98baaae629a6"
        ],
        [
            "Arguments continuously [T] _ _.",
            "VernacArguments",
            "3ea9c7024fd1bbddbb47e0a98444b1bc8698ab35"
        ],
        [
            "Arguments impl_tl [T] _ _ _.",
            "VernacArguments",
            "7cc650f2f8d768d2f1d945efffd98dade99826e7"
        ],
        [
            "Arguments and_tl [T] _ _ _.",
            "VernacArguments",
            "ebc814820ee22a0a1e7a2e461f0bb3bae1d1f0a4"
        ],
        [
            "Arguments or_tl [T] _ _ _.",
            "VernacArguments",
            "567dc3b85af495305f6252b52a87410743bfcc26"
        ],
        [
            "Arguments not_tl [T] _ _.",
            "VernacArguments",
            "ebf2aa4403f2df3fc999e67618abbc761e1dcdfd"
        ],
        [
            "Arguments True_tl {T} _.",
            "VernacArguments",
            "a0c7c4e5e783b49530f42106fce50d0da75a258f"
        ],
        [
            "Arguments False_tl {T} _.",
            "VernacArguments",
            "12a52805b0bf1cceafd80202e162666ad405c832"
        ],
        [
            "Notation \"A ->_ B\" := (impl_tl A B) (right associativity, at level 90).",
            "VernacNotation",
            "f606b8cfe5c6f7c18c1d842c08fce72318c7a375"
        ],
        [
            "Notation \"A /\\_ B\" := (and_tl A B) (right associativity, at level 80).",
            "VernacNotation",
            "94c5a5888641891af032e3e135cdddcecc1158a9"
        ],
        [
            "Notation \"A \\/_ B\" := (or_tl A B) (right associativity, at level 85).",
            "VernacNotation",
            "4597122f492fad38c0cfc0eb6f0d6cb84a644d8a"
        ],
        [
            "Notation \"~_ A\" := (not_tl A) (right associativity, at level 75).",
            "VernacNotation",
            "9d14086a847fa1e9a68223c76a9b89afdaa45621"
        ],
        [
            "Section sec_modal_op_lemmas.",
            "VernacBeginSection",
            "fbf0912685e5fead0f48fd96239010dfc2cd083a"
        ],
        [
            "Variable T : Type.",
            "VernacAssumption",
            "a15b17e37c4241158d544882375356c273dc93f2"
        ],
        [
            "Lemma now_hd : forall (P : T -> Prop) ex, now P ex -> P (hd ex).",
            "VernacStartTheoremProof",
            "c896c854fb59ad3cb0820fb325a32f39fea11d2b"
        ],
        [
            "now destruct ex.",
            "VernacExtend",
            "b3fac7c685376f36ab48c974088a3980d95ba040"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_inv : forall (inv: infseq T -> Prop), (forall x s, inv (Cons x s) -> inv s) -> forall s, inv s -> always inv s.",
            "VernacStartTheoremProof",
            "58ae3cd36f13369b54fcf4a0fb23e9d6bafb7d38"
        ],
        [
            "intros P invP.",
            "VernacExtend",
            "269eb334753fcc8c4e3cab0f0cae796f3a0ea841"
        ],
        [
            "cofix c.",
            "VernacExtend",
            "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
        ],
        [
            "intros [x s] Pxs; apply Always; trivial.",
            "VernacExtend",
            "c74fc58adda96e68c772608f4b849688491b0ffd"
        ],
        [
            "apply c; apply invP in Pxs.",
            "VernacExtend",
            "8cccd72a177f8754e03b6180b4bca7f103584566"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_Cons : forall (x: T) (s: infseq T) P, always P (Cons x s) -> P (Cons x s) /\\ always P s.",
            "VernacStartTheoremProof",
            "fdb9a8962c321454435f9263d7b9ecf09c862b68"
        ],
        [
            "intros x s P al.",
            "VernacExtend",
            "0320c2ab7355affc526686f45f46d33900b8adc1"
        ],
        [
            "change (P (Cons x s) /\\ always P (tl (Cons x s))).",
            "VernacExtend",
            "83ec252109c60bf160c20654ed316844681d9f7c"
        ],
        [
            "destruct al.",
            "VernacExtend",
            "213cf32cc8262575eb30d941d2caeadf74967cb0"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_now : forall (x: T) (s: infseq T) P, always P (Cons x s) -> P (Cons x s).",
            "VernacStartTheoremProof",
            "a5514800aed35443c1e3efb81045b28141d9879e"
        ],
        [
            "intros x s P al.",
            "VernacExtend",
            "0320c2ab7355affc526686f45f46d33900b8adc1"
        ],
        [
            "case (always_Cons x s P al); trivial.",
            "VernacExtend",
            "71a21c6c3e31ded8dbaeac3acbfefc1f7c8b5c2d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_now' : forall (P : infseq T -> Prop) ex, always P ex -> P ex.",
            "VernacStartTheoremProof",
            "780f0fd354911d8d3b22a7eb45a4e9337f1f2ade"
        ],
        [
            "destruct ex.",
            "VernacExtend",
            "a924b95bc7e18e0dc08811a5cdcfdcefceadc403"
        ],
        [
            "apply always_now.",
            "VernacExtend",
            "19533b4b06fe23966d0f7692586c6ed06984ad52"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_invar : forall (x: T) (s: infseq T) P, always P (Cons x s) -> always P s.",
            "VernacStartTheoremProof",
            "0c20f3783b1e54d37ae23db7e24ead2bd0a79a5f"
        ],
        [
            "intros x s P al.",
            "VernacExtend",
            "0320c2ab7355affc526686f45f46d33900b8adc1"
        ],
        [
            "case (always_Cons x s P al); trivial.",
            "VernacExtend",
            "71a21c6c3e31ded8dbaeac3acbfefc1f7c8b5c2d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_tl : forall (s: infseq T) P, always P s -> always P (tl s).",
            "VernacStartTheoremProof",
            "729197dc7bb27bce04da48c3c0c39a699830572b"
        ],
        [
            "intros (x, s).",
            "VernacExtend",
            "538a1e9c4e0844b221a127458332d77604da5db4"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply always_invar.",
            "VernacExtend",
            "0f30c62f17b000c45affacf4077b41b7cacf4209"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_not_false : forall s : infseq T, always (~_ False_tl) s.",
            "VernacStartTheoremProof",
            "0eef4471624c62d6c7d763b798f13a99df0865bd"
        ],
        [
            "cofix c.",
            "VernacExtend",
            "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
        ],
        [
            "intros [x s].",
            "VernacExtend",
            "3be428760ec632752d433d64b0045aace3241033"
        ],
        [
            "apply Always.",
            "VernacExtend",
            "c743b0ca9a7ea8b9b680618f731bd37f3dfd95f5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold not_tl, False_tl; auto.",
            "VernacExtend",
            "12d3f36e52becdb6b4856d20d4a06e93671fc7d4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply c.",
            "VernacExtend",
            "8bfc1f1e5a5fc1a5b698b6028b6f0aa9c3b12f6d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_true : forall s : infseq T, always True_tl s.",
            "VernacStartTheoremProof",
            "32539678b19ed4978ca663fc6179059c39f2a74f"
        ],
        [
            "cofix c.",
            "VernacExtend",
            "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
        ],
        [
            "intros [x s].",
            "VernacExtend",
            "3be428760ec632752d433d64b0045aace3241033"
        ],
        [
            "apply Always.",
            "VernacExtend",
            "c743b0ca9a7ea8b9b680618f731bd37f3dfd95f5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold True_tl; trivial.",
            "VernacExtend",
            "17a96bbeddce471d7e4ca3f5ad091ebd87fcfba3"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply c.",
            "VernacExtend",
            "8bfc1f1e5a5fc1a5b698b6028b6f0aa9c3b12f6d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_and_tl : forall (P Q : infseq T -> Prop), forall s, always P s -> always Q s -> always (P /\\_ Q) s.",
            "VernacStartTheoremProof",
            "3ae347a981281dfc5c1db9ce717cc3c202f8bf5a"
        ],
        [
            "intros P Q.",
            "VernacExtend",
            "7751791de3f7d3a51bb606370c6c0e8f8866edb8"
        ],
        [
            "cofix c.",
            "VernacExtend",
            "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
        ],
        [
            "intros s alP alQ.",
            "VernacExtend",
            "b3a7bfbf7da575d02dcc487a0645c39a7dd46363"
        ],
        [
            "destruct alP.",
            "VernacExtend",
            "fab86b0fc00d9b0c57ade4b3f8a9a0a2a65d9c3b"
        ],
        [
            "destruct alQ.",
            "VernacExtend",
            "7dff1b6aab1773bb15107d5ca974db567961e1cb"
        ],
        [
            "apply Always.",
            "VernacExtend",
            "c743b0ca9a7ea8b9b680618f731bd37f3dfd95f5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply c; assumption.",
            "VernacExtend",
            "9e3e4d80d517eb0c889c872623fd702f442a743a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_always : forall (P : infseq T -> Prop) s, always P s -> always (always P) s.",
            "VernacStartTheoremProof",
            "7a963d83cee8add496bda69e6c2620ea5bd93ba2"
        ],
        [
            "intro P.",
            "VernacExtend",
            "0910b274c6bc3191fb894c537bf6a9d8a015a918"
        ],
        [
            "cofix c.",
            "VernacExtend",
            "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "do 2 destruct s.",
            "VernacExtend",
            "c761f08a7b0b45872dff1b23b2ccff3c4c793ed3"
        ],
        [
            "constructor; eauto using always_invar.",
            "VernacExtend",
            "bf5b0bfca2373d1c3eee2f3eb7190c8d16f21111"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_always1 : forall P (s: infseq T), always (now P) s -> always1 P s.",
            "VernacStartTheoremProof",
            "ae8dafa7fcc61d0afcbd76b3f510b4a418c32fb4"
        ],
        [
            "intros P.",
            "VernacExtend",
            "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
        ],
        [
            "cofix alwn.",
            "VernacExtend",
            "88da2f3a37d70efba63298acbb673a932e8121f5"
        ],
        [
            "intros s a; case a; clear a s.",
            "VernacExtend",
            "bc742b437c1c8efa285459320ab24118489285f0"
        ],
        [
            "intros (x, s); simpl.",
            "VernacExtend",
            "360d894d5ce3f4bf71b30b4ac628c3a60595fe9e"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply alwn; assumption.",
            "VernacExtend",
            "b55f7734768d581571e6aa9207b79e8b805dfbf2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always1_always : forall P (s: infseq T), always1 P s -> always (now P) s.",
            "VernacStartTheoremProof",
            "75d0396d554aa1a80d5a47291079deb80857b1de"
        ],
        [
            "intros P.",
            "VernacExtend",
            "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
        ],
        [
            "cofix alwn.",
            "VernacExtend",
            "88da2f3a37d70efba63298acbb673a932e8121f5"
        ],
        [
            "destruct 1.",
            "VernacExtend",
            "0e61c29dbe9a16af1faa0807bdb22c467076a9d2"
        ],
        [
            "constructor; simpl.",
            "VernacExtend",
            "dedfc8791248d9f0998b0bf2378e59b81a2e0146"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply alwn; assumption.",
            "VernacExtend",
            "b55f7734768d581571e6aa9207b79e8b805dfbf2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_weak_until : forall (J P : infseq T -> Prop) (s : infseq T), always J s -> weak_until J P s.",
            "VernacStartTheoremProof",
            "57082ddbaf5bce86ac7b1d938ffdd82008105aef"
        ],
        [
            "intros J P.",
            "VernacExtend",
            "5daaf05ad0206d0c329fb00a2ad32e7df58a30cd"
        ],
        [
            "cofix c.",
            "VernacExtend",
            "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
        ],
        [
            "intros [x s] alJ.",
            "VernacExtend",
            "1fe39811fb29db1ed94526c604eec11a31c5879e"
        ],
        [
            "apply W_tl.",
            "VernacExtend",
            "44178c488da18848af5ccc850b779a277ea16aad"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply always_now in alJ.",
            "VernacExtend",
            "9c2430cb84716c57c9d0968b02db06e81e603412"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply c.",
            "VernacExtend",
            "8bfc1f1e5a5fc1a5b698b6028b6f0aa9c3b12f6d"
        ],
        [
            "apply always_invar in alJ.",
            "VernacExtend",
            "076a7bb3f5377a3da92d059d9da1bbd5b596a201"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_release : forall (J P : infseq T -> Prop) (s : infseq T), always P s -> release J P s.",
            "VernacStartTheoremProof",
            "fafbd8ee34da5d03b864efe92abc9c13084788b7"
        ],
        [
            "intros J P.",
            "VernacExtend",
            "5daaf05ad0206d0c329fb00a2ad32e7df58a30cd"
        ],
        [
            "cofix c.",
            "VernacExtend",
            "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
        ],
        [
            "intros [x s] al.",
            "VernacExtend",
            "edcfe60de682d2f9553ddbb1a3f733e7b8e195a1"
        ],
        [
            "apply R_tl.",
            "VernacExtend",
            "802456d3de13dd02b156b2c090e45bc64943d1eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply always_now in al.",
            "VernacExtend",
            "0e793b6c665b75b90c85db26b4d95054dab97a29"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply c.",
            "VernacExtend",
            "8bfc1f1e5a5fc1a5b698b6028b6f0aa9c3b12f6d"
        ],
        [
            "apply always_invar in al.",
            "VernacExtend",
            "87a0c903244f7a536f1ce3eb86ca30a1aada3c86"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_inf_often : forall (P: infseq T -> Prop) (s : infseq T), always P s -> inf_often P s.",
            "VernacStartTheoremProof",
            "60991885bb0a274b723727e13b26b60c55db59d5"
        ],
        [
            "intros P.",
            "VernacExtend",
            "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
        ],
        [
            "cofix f.",
            "VernacExtend",
            "15914e0cf39e3a4e626e8ea123702e166e00137f"
        ],
        [
            "intros s a.",
            "VernacExtend",
            "ad7fb1a2c4eb7ea9ef9317afb3869448eb89cdf5"
        ],
        [
            "destruct a.",
            "VernacExtend",
            "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
        ],
        [
            "constructor.",
            "VernacExtend",
            "3c77e6be855b5086df5e918bf2a0537e1010479a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor 1.",
            "VernacExtend",
            "08a5b9fd59ad59b27ce13f998c760c4014bfab97"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply f.",
            "VernacExtend",
            "851094a1006a80f6de4b5f5d7bde0265b1f2aa77"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_continuously : forall (P: infseq T -> Prop) (s : infseq T), always P s -> continuously P s.",
            "VernacStartTheoremProof",
            "dc1e22e7c00508e37ca418b6cf717262fc81f7b3"
        ],
        [
            "intros P s alP.",
            "VernacExtend",
            "91c61667da83fac35d62d1de934e636e9d836c52"
        ],
        [
            "apply E0.",
            "VernacExtend",
            "df471c57e9be53f9f7938e8848fb9d5a51ccfc24"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_until_Cons : forall (x: T) (s: infseq T) J P, weak_until J P (Cons x s) -> P (Cons x s) \\/ (J (Cons x s) /\\ weak_until J P s).",
            "VernacStartTheoremProof",
            "8c6841b5d08371b67b4b44ecbe33acd930eb6b8e"
        ],
        [
            "intros x s J P un.",
            "VernacExtend",
            "d893207011d653e1772f866c31be3883a18430ab"
        ],
        [
            "change (P (Cons x s) \\/ (J (Cons x s) /\\ weak_until J P (tl (Cons x s)))).",
            "VernacExtend",
            "40684afc7019d3a63aff5435149b30e262466004"
        ],
        [
            "destruct un; intuition.",
            "VernacExtend",
            "ec0e40b253f0333d43bf495d4f5539a8c5448393"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_until_always : forall (J J' P : infseq T -> Prop) s, weak_until J P s -> always J' s -> weak_until (J' /\\_ J) P s.",
            "VernacStartTheoremProof",
            "88a6e50ff4426556f519057189781b016b8a81eb"
        ],
        [
            "cofix cf.",
            "VernacExtend",
            "2223d6590abe75c4110c64eec6185c896db38177"
        ],
        [
            "intros J J' P s Hweak Halways.",
            "VernacExtend",
            "eae4fdab1d6257e950295efad7441f4717717f96"
        ],
        [
            "destruct s.",
            "VernacExtend",
            "25b900e268e7851d959aa45edce33af62b3fca65"
        ],
        [
            "inversion Hweak.",
            "VernacExtend",
            "d1f47580b6614f5440825dad5b6c64696a64af29"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "now eauto using W0.",
            "VernacExtend",
            "5ae70c5acf82547abfd810888967acbfc6763b75"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "inversion Halways.",
            "VernacExtend",
            "b75dd13a67bb0a692434f6824cf818af4a2f4444"
        ],
        [
            "eapply W_tl.",
            "VernacExtend",
            "2e0257febe3a8b364cb2a1bc86b690c736bee329"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "now unfold and_tl.",
            "VernacExtend",
            "de854ec3050424aed596683b0574c657c0e2f224"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "now eauto.",
            "VernacExtend",
            "e7df581db5ab113b3d1e7800d56a5e3e3c22071c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma until_weak_until : forall (J P : infseq T -> Prop) (s : infseq T), until J P s -> weak_until J P s.",
            "VernacStartTheoremProof",
            "026ac89cc83cfd69c00ecd4292b39c4203da87c1"
        ],
        [
            "intros J P s un.",
            "VernacExtend",
            "0b8775c9bbf24d523807b8be1b3c4494b546b786"
        ],
        [
            "induction un.",
            "VernacExtend",
            "68e23346dfed3471d68789a2faab11796ab7bc36"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply W0.",
            "VernacExtend",
            "ea4ea4288f6a583e4eed37fcff4ec5bd5bd664d0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply W_tl; trivial.",
            "VernacExtend",
            "cdd3dcc3d704457f325ffe67bbd8be9b0ea9abfb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eventually_Cons : forall (x: T) (s: infseq T) P, eventually P (Cons x s) -> P (Cons x s) \\/ eventually P s.",
            "VernacStartTheoremProof",
            "505294ebd120f95873e8b1cbcd8bede0010d3ce8"
        ],
        [
            "intros x s P al.",
            "VernacExtend",
            "0320c2ab7355affc526686f45f46d33900b8adc1"
        ],
        [
            "change (P (Cons x s) \\/ eventually P (tl (Cons x s))).",
            "VernacExtend",
            "033cddd83f9b2fc25f5e9a41e1b461ef747d6720"
        ],
        [
            "case al; auto.",
            "VernacExtend",
            "028bd3ab9f196d616d39ee5ae254cb49330bf335"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eventually_trans : forall (P Q inv: infseq T -> Prop), (forall x s, inv (Cons x s) -> inv s) -> (forall s, inv s -> P s -> eventually Q s) -> forall s, inv s -> eventually P s -> eventually Q s.",
            "VernacStartTheoremProof",
            "a5f37fb1f736fea11d8a53343c717d56500e49c5"
        ],
        [
            "intros P Q inv is_inv PeQ s invs ev.",
            "VernacExtend",
            "c67e2ee7af6d4ca320c9fdf0a307a87458f8fdbe"
        ],
        [
            "induction ev as [s Ps | x s ev IHev].",
            "VernacExtend",
            "26c9bda0d335998ec80c4b89721b481ffcdf2bcb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply PeQ; assumption.",
            "VernacExtend",
            "97ae5671e585c0ddb9d8c2aadb8c501b2d735e69"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor 2.",
            "VernacExtend",
            "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
        ],
        [
            "apply IHev.",
            "VernacExtend",
            "1879c8abdff3fe90a2a14bc650a2f429d90efb69"
        ],
        [
            "apply is_inv with x; assumption.",
            "VernacExtend",
            "01edefb439248523776a60518bbced7683e59ae3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_eventually : forall (P : infseq T -> Prop), forall x s, ~ eventually P (Cons x s) -> ~ eventually P s.",
            "VernacStartTheoremProof",
            "04b5ec5080550c7107119225dfabe35798317f5b"
        ],
        [
            "intros P x s evCP evP.",
            "VernacExtend",
            "b8314a96a2560e27455186597fd28efb9b4e5b8b"
        ],
        [
            "contradict evCP.",
            "VernacExtend",
            "140479bfe4de7a35603bd631cdbdbe3f3d7d8cb1"
        ],
        [
            "apply E_next.",
            "VernacExtend",
            "94ef81f1740a77599e7f9def4b266f10d437a7fb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eventually_next : forall (s: infseq T) P, eventually (next P) s -> eventually P s.",
            "VernacStartTheoremProof",
            "f51a383b158c9711c549331a046412f083fb04ec"
        ],
        [
            "intros e P ev.",
            "VernacExtend",
            "bf9661634368dd7d265644d6bbc7c0e7cc631ddc"
        ],
        [
            "induction ev as [(x, s) Ps | x s ev induc_hyp].",
            "VernacExtend",
            "647d9413908305951831250356d8fcda5270d858"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor 2; constructor 1; exact Ps.",
            "VernacExtend",
            "c2d6a1133654198c16122bec76991c8348a53e87"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor 2.",
            "VernacExtend",
            "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
        ],
        [
            "apply induc_hyp.",
            "VernacExtend",
            "b4803fad9f990958e0b12cdefa5e53a012d97458"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eventually_always_cumul : forall (s: infseq T) P Q, eventually P s -> always Q s -> eventually (P /\\_ always Q) s.",
            "VernacStartTheoremProof",
            "79a89f4345329bef2e66723ba0c395d68a850ee2"
        ],
        [
            "induction 1 as [s Ps | x s evPs induc_hyp]; intro al.",
            "VernacExtend",
            "40743512888c7d48922560668de133f58caa9cbf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor 1.",
            "VernacExtend",
            "08a5b9fd59ad59b27ce13f998c760c4014bfab97"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor 2.",
            "VernacExtend",
            "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
        ],
        [
            "apply induc_hyp.",
            "VernacExtend",
            "b4803fad9f990958e0b12cdefa5e53a012d97458"
        ],
        [
            "eapply always_invar; eauto.",
            "VernacExtend",
            "2c3f611570517eb9705b4c274aea36a94565ec2a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eventually_weak_until_cumul : forall (s: infseq T) P J, eventually P s -> weak_until J P s -> eventually (P /\\_ weak_until J P) s.",
            "VernacStartTheoremProof",
            "f70292650ea90b784ee1e8fe3695d5f23e833161"
        ],
        [
            "intros s P J ev.",
            "VernacExtend",
            "83c521ac1ecf6f934bf6a801ca1bb62a0fcef270"
        ],
        [
            "induction ev as [s Ps | x s evPs induc_hyp].",
            "VernacExtend",
            "9a9810f521306b5de910ab62d10438fcf3df6306"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro un.",
            "VernacExtend",
            "b0350d879a7ccd503e783455fa3c910dd41df554"
        ],
        [
            "constructor 1.",
            "VernacExtend",
            "08a5b9fd59ad59b27ce13f998c760c4014bfab97"
        ],
        [
            "split; assumption.",
            "VernacExtend",
            "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro unxs.",
            "VernacExtend",
            "1b2f130f124834d19c46757d70af9a21f234a96d"
        ],
        [
            "case (weak_until_Cons _ _ _ _ unxs).",
            "VernacExtend",
            "099ef38f52885d06ed3db452d1c003f5fecb7619"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intro Pxs.",
            "VernacExtend",
            "ea9a30640782249053268cc955c916e5b8d45072"
        ],
        [
            "constructor 1; split; assumption.",
            "VernacExtend",
            "a9f6fd8296e6e3f2d6f8cf127f663474cade2d9f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros (_, uns).",
            "VernacExtend",
            "7ad2573ee895f7a261dc7f1329d050f0adc3e768"
        ],
        [
            "constructor 2.",
            "VernacExtend",
            "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
        ],
        [
            "apply induc_hyp.",
            "VernacExtend",
            "b4803fad9f990958e0b12cdefa5e53a012d97458"
        ],
        [
            "exact uns.",
            "VernacExtend",
            "78257a622c2ece6cc493077abf743f0c9b5e380a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_until_eventually : forall (P Q J: infseq T -> Prop), (forall s, J s -> P s -> Q s) -> forall s, J s -> weak_until J Q s -> eventually P s -> eventually Q s.",
            "VernacStartTheoremProof",
            "3163b5d317042bffaeed97c4c2a1ba060e6946fa"
        ],
        [
            "intros P Q J impl s Js J_weak_until_Q ev.",
            "VernacExtend",
            "456e38575bca723d87c507566d5dff27c8d8d947"
        ],
        [
            "genclear J_weak_until_Q; genclear Js.",
            "VernacExtend",
            "5b99ccbb09f199391869c14d5096f1509ead9859"
        ],
        [
            "induction ev as [s Ps | x s ev induc_hyp].",
            "VernacExtend",
            "0d472e528964e380d6065fc8cf9ea92e0f030abd"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros Js J_weak_until_Q.",
            "VernacExtend",
            "ea97569b2a75e908e8b215aa62cd86e58a2cbce4"
        ],
        [
            "constructor 1.",
            "VernacExtend",
            "08a5b9fd59ad59b27ce13f998c760c4014bfab97"
        ],
        [
            "apply impl; assumption.",
            "VernacExtend",
            "d1db6fa8536d4d4be4866953e76fb9c50e13490c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros _ J_weak_until_Q.",
            "VernacExtend",
            "7dd9350e517de3ce9b939c81a00a85aa86f9e8cc"
        ],
        [
            "cut (s = tl (Cons x s)); [idtac | reflexivity].",
            "VernacExtend",
            "a750411b767d9438311567093a1b4d545198f13c"
        ],
        [
            "case J_weak_until_Q; clear J_weak_until_Q x.",
            "VernacExtend",
            "40f8c78a89e1ce3ebf6a239c3ca466b59c5bfaeb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "constructor 1; assumption.",
            "VernacExtend",
            "f84672d84299f2633ec8efc6293368ade37330b7"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros (x, s1) _ J_weak_until_Q e; simpl in *.",
            "VernacExtend",
            "5dca1ea7f92359a92cfcfdc4ab6187fb5c958e0f"
        ],
        [
            "constructor 2.",
            "VernacExtend",
            "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
        ],
        [
            "generalize e J_weak_until_Q; clear e x.",
            "VernacExtend",
            "7784679c23944609c831d6e0497dbdb82e34c6a2"
        ],
        [
            "case J_weak_until_Q; clear J_weak_until_Q s1.",
            "VernacExtend",
            "51f17c3a191c6183931852d1b76cb765654133de"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "clearall.",
            "VernacExtend",
            "9581efd4cea98813ebea77b3d3117d978c6981a7"
        ],
        [
            "constructor 1; assumption.",
            "VernacExtend",
            "f84672d84299f2633ec8efc6293368ade37330b7"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "intros s2 Js2 _ e J_weak_until_Q2.",
            "VernacExtend",
            "83bac69f72ad4533529e4eac954abf8090f943fc"
        ],
        [
            "rewrite e in induc_hyp; clear e.",
            "VernacExtend",
            "c9b083d51c37c3376cacc9832ab585092b7e7513"
        ],
        [
            "apply induc_hyp; assumption.",
            "VernacExtend",
            "7c700b12c61f02f6ad8c2825bc9a973bf037a0fa"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eventually_or_tl_intror : forall (P Q : infseq T -> Prop) s, eventually Q s -> eventually (P \\/_ Q) s.",
            "VernacStartTheoremProof",
            "db6248d8d0f86edace1b2c42b0029c278b1204db"
        ],
        [
            "induction 1; firstorder using E0, E_next.",
            "VernacExtend",
            "c6057841043a3b5f237700b221b0ac94d1c51662"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eventually_or_tl_introl : forall (P Q : infseq T -> Prop) s, eventually P s -> eventually (P \\/_ Q) s.",
            "VernacStartTheoremProof",
            "c4499804b43749eb9aa8fec1d350fb9690e7f4a9"
        ],
        [
            "induction 1; firstorder using E0, E_next.",
            "VernacExtend",
            "c6057841043a3b5f237700b221b0ac94d1c51662"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eventually_or_tl_or : forall (P Q : infseq T -> Prop) s, eventually (P \\/_ Q) s -> eventually P s \\/ eventually Q s.",
            "VernacStartTheoremProof",
            "00e85f690822f47bc50268a314f4c79fc9320f65"
        ],
        [
            "induction 1; firstorder using E0, E_next.",
            "VernacExtend",
            "c6057841043a3b5f237700b221b0ac94d1c51662"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma until_Cons : forall (x: T) (s: infseq T) J P, until J P (Cons x s) -> P (Cons x s) \\/ (J (Cons x s) /\\ until J P s).",
            "VernacStartTheoremProof",
            "98ef5d7a6a4efa00dba5fd349a38987a4a8b99f1"
        ],
        [
            "intros x s J P ul.",
            "VernacExtend",
            "ff4cc8d869bf7e2d6a0487212c3e3d4d7f9fc435"
        ],
        [
            "change (P (Cons x s) \\/ (J (Cons x s) /\\ until J P (tl (Cons x s)))).",
            "VernacExtend",
            "7a86ba7fc372b3a6689e2548dc094061994b91b5"
        ],
        [
            "case ul; auto.",
            "VernacExtend",
            "2280a17e521f735de64c383e0fe472f0ad54ff52"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma until_eventually : forall (J P : infseq T -> Prop), forall s, until J P s -> eventually P s.",
            "VernacStartTheoremProof",
            "84556e9c57750a313cec55094377a05c7336d48c"
        ],
        [
            "intros P J s unP.",
            "VernacExtend",
            "be778f3dd8589214b62a49ca5db9a6a3842fc5f7"
        ],
        [
            "induction unP.",
            "VernacExtend",
            "57791b394b3ced1a0dcf4fd613c113bf72ea92f1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply E0; assumption.",
            "VernacExtend",
            "305a45fdc4968f0a47722d8b8da8ea7cbc92ab24"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply E_next; assumption.",
            "VernacExtend",
            "2b9c5babf25e8d0d2f6f26c6e8adc8f8a715a6f6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma release_Cons : forall (x: T) (s: infseq T) J P, release J P (Cons x s) -> P (Cons x s) /\\ (J (Cons x s) \\/ release J P s).",
            "VernacStartTheoremProof",
            "a1b9f951350412fbde9370861d0945b845fb3ace"
        ],
        [
            "intros x s J P rl.",
            "VernacExtend",
            "8df1a4593ecf450e2e918f5a7d6a6f622a90944f"
        ],
        [
            "change (P (Cons x s) /\\ (J (Cons x s) \\/ release J P (tl (Cons x s)))).",
            "VernacExtend",
            "ea41ec2ec5161d9156d00c931d70d9a11589bdc1"
        ],
        [
            "destruct rl; intuition.",
            "VernacExtend",
            "40856463f00a2b27367136e00109eb804d49ea20"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inf_often_invar : forall (x: T) (s: infseq T) P, inf_often P (Cons x s) -> inf_often P s.",
            "VernacStartTheoremProof",
            "e784bfd8a5ba7bb62319a9f85ca0bef282a1e6b6"
        ],
        [
            "intros x s P; apply always_invar.",
            "VernacExtend",
            "64f7f60bb9873eb43de437243c21a1c1eba02fac"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuously_invar : forall (x: T) (s: infseq T) P, continuously P (Cons x s) -> continuously P s.",
            "VernacStartTheoremProof",
            "c484c37f10718e97e5cdd363a84cbff758d224ae"
        ],
        [
            "intros x s P cny.",
            "VernacExtend",
            "792f02d6da3903ebebfafe21b0f9345d5f3f43f3"
        ],
        [
            "apply eventually_Cons in cny.",
            "VernacExtend",
            "ca14a5cfc935df9772be1fb1fc78473986f8aaba"
        ],
        [
            "case cny; trivial.",
            "VernacExtend",
            "84d094a8f7d08e7ee8464227cc41833cc3b072bf"
        ],
        [
            "intro alP.",
            "VernacExtend",
            "5005ed02f7b0d60cb95e20f46a3fdaac43ea3348"
        ],
        [
            "apply E0.",
            "VernacExtend",
            "df471c57e9be53f9f7938e8848fb9d5a51ccfc24"
        ],
        [
            "apply always_invar in alP; assumption.",
            "VernacExtend",
            "e4d0649cf44af812213b25f37a5b31d62c549d07"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuously_and_tl : forall (P Q : infseq T -> Prop) (s : infseq T), continuously P s -> continuously Q s -> continuously (P /\\_ Q) s.",
            "VernacStartTheoremProof",
            "6e65e0c00e8cf0b1c317bb09e6616887f6ddd5b0"
        ],
        [
            "intros P Q s cnyP.",
            "VernacExtend",
            "a3c9df7da0487bf2fc67e538c02c59c938e5497f"
        ],
        [
            "induction cnyP as [s alP|].",
            "VernacExtend",
            "62f20927e93974f24355617ee0c59f34f9505195"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro cnyQ.",
            "VernacExtend",
            "891b41ffa44ef6930c38041480d4749342e44a85"
        ],
        [
            "induction cnyQ.",
            "VernacExtend",
            "a29e86315797e42dd47aff4679657d55e8665f6b"
        ],
        [
            "apply E0.",
            "VernacExtend",
            "df471c57e9be53f9f7938e8848fb9d5a51ccfc24"
        ],
        [
            "apply always_and_tl; trivial.",
            "VernacExtend",
            "836d5afec33b8c15b4203e1ba9a8da71aba11aa6"
        ],
        [
            "apply E_next.",
            "VernacExtend",
            "94ef81f1740a77599e7f9def4b266f10d437a7fb"
        ],
        [
            "apply IHcnyQ.",
            "VernacExtend",
            "10c3ccefcfb293fea5737cd6dc0f474be649a2e9"
        ],
        [
            "apply always_invar in alP; assumption.",
            "VernacExtend",
            "e4d0649cf44af812213b25f37a5b31d62c549d07"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro cnyQ.",
            "VernacExtend",
            "891b41ffa44ef6930c38041480d4749342e44a85"
        ],
        [
            "apply E_next.",
            "VernacExtend",
            "94ef81f1740a77599e7f9def4b266f10d437a7fb"
        ],
        [
            "apply IHcnyP.",
            "VernacExtend",
            "d52ffea4e21be66e69921a7d6297d30ff017b3ca"
        ],
        [
            "apply continuously_invar in cnyQ; assumption.",
            "VernacExtend",
            "7a289daa6480443670848bd5d4dfd0658ff29978"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuously_inf_often : forall (P : infseq T -> Prop) (s : infseq T), continuously P s -> inf_often P s.",
            "VernacStartTheoremProof",
            "998daec69441a1120385cbc901b0f15d7468deaf"
        ],
        [
            "intros P.",
            "VernacExtend",
            "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
        ],
        [
            "cofix c.",
            "VernacExtend",
            "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
        ],
        [
            "intros s cnyP.",
            "VernacExtend",
            "b762e3241021e606a9b97f4cf118f376380a8f1d"
        ],
        [
            "induction cnyP.",
            "VernacExtend",
            "40239d6bea19218cb634bc1b4a7cc9ab6b10752a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply always_inf_often.",
            "VernacExtend",
            "0524a27e4ccf3b5380d1073e551685a2ce5730b0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply Always.",
            "VernacExtend",
            "c743b0ca9a7ea8b9b680618f731bd37f3dfd95f5"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply E_next.",
            "VernacExtend",
            "94ef81f1740a77599e7f9def4b266f10d437a7fb"
        ],
        [
            "destruct s as [s x'].",
            "VernacExtend",
            "87d01ca84bb68794b2e1142baaabb0c347ca6eb5"
        ],
        [
            "apply always_now in IHcnyP.",
            "VernacExtend",
            "1acdbd864bce5930f6b131a32e1f5686c143b942"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply IHcnyP.",
            "VernacExtend",
            "d52ffea4e21be66e69921a7d6297d30ff017b3ca"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma now_monotonic : forall (P Q: T -> Prop), (forall x, P x -> Q x) -> forall s, now P s -> now Q s.",
            "VernacStartTheoremProof",
            "de1ae24e0b957a5094b48c583e1f97f991643f98"
        ],
        [
            "intros P Q PQ (x, s) nP; simpl.",
            "VernacExtend",
            "b83d90c29cf614f8e89a31a9e2d287ac3963c392"
        ],
        [
            "apply PQ.",
            "VernacExtend",
            "713dddfb6e67d4999aa5e6d207dd3fcee2b9e29c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma next_monotonic : forall (P Q: infseq T -> Prop), (forall s, P s -> Q s) -> forall s, next P s -> next Q s.",
            "VernacStartTheoremProof",
            "dad924ad13fcef93afc655e9a1fb639b356f8dbb"
        ],
        [
            "intros P Q PQ [x s]; apply PQ.",
            "VernacExtend",
            "6e075622cb60340474b6267cc9fdaa136bf50946"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma consecutive_monotonic : forall (P Q: T -> T -> Prop), (forall x y, P x y -> Q x y) -> forall s, consecutive P s -> consecutive Q s.",
            "VernacStartTheoremProof",
            "4000f7be71f6f45863471f2f6b5060046720f1a8"
        ],
        [
            "intros P Q PQ (x, (y, s)) nP; simpl.",
            "VernacExtend",
            "5c5b980ccbff71f0cb04575ffb13e0cc8a5b41ba"
        ],
        [
            "apply PQ.",
            "VernacExtend",
            "713dddfb6e67d4999aa5e6d207dd3fcee2b9e29c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_monotonic : forall (P Q: infseq T -> Prop), (forall s, P s -> Q s) -> forall s, always P s -> always Q s.",
            "VernacStartTheoremProof",
            "2f102a99bc5926cad0eae50a98aa69b2010420bb"
        ],
        [
            "intros P Q PQ.",
            "VernacExtend",
            "b641e470a7192b720b3c9e86e087e35f28edecfe"
        ],
        [
            "cofix cf.",
            "VernacExtend",
            "2223d6590abe75c4110c64eec6185c896db38177"
        ],
        [
            "intros(x, s) a.",
            "VernacExtend",
            "dd9c368cefe66cb7e95840341065df773207784e"
        ],
        [
            "generalize (always_Cons x s P a); simpl; intros (a1, a2).",
            "VernacExtend",
            "a1d80351df01575c7fb675d90ebad599b8e52fe6"
        ],
        [
            "constructor; simpl.",
            "VernacExtend",
            "dedfc8791248d9f0998b0bf2378e59b81a2e0146"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply PQ.",
            "VernacExtend",
            "713dddfb6e67d4999aa5e6d207dd3fcee2b9e29c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply cf.",
            "VernacExtend",
            "854ae6f0755d8ae82882825b8b225848a6534503"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_until_monotonic : forall (P Q J K: infseq T -> Prop), (forall s, P s -> Q s) -> (forall s, J s -> K s) -> forall s, weak_until J P s -> weak_until K Q s.",
            "VernacStartTheoremProof",
            "bb67aa61083d3fc319c51240cf5513b9c4dfe4d5"
        ],
        [
            "intros P Q J K PQ JK.",
            "VernacExtend",
            "39fd5ef980f67ede49a06f2e0de4e3cc58b52f61"
        ],
        [
            "cofix cf.",
            "VernacExtend",
            "2223d6590abe75c4110c64eec6185c896db38177"
        ],
        [
            "intros(x, s) un.",
            "VernacExtend",
            "f504c4bba28a931b4d834c6aa4662b4b48624078"
        ],
        [
            "generalize (weak_until_Cons x s J P un); simpl.",
            "VernacExtend",
            "63d20204a1f68385b5e50e968d6a251953d0bb11"
        ],
        [
            "intros [Pxs | (Jxs, uns)].",
            "VernacExtend",
            "805f1aa1a2386335ce8ba0e95df3f329a16e9f1f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor 1; simpl; auto.",
            "VernacExtend",
            "c093670f2067efbb8e461b3096e78d66998a2e90"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "constructor 2; simpl; auto.",
            "VernacExtend",
            "c2d582d0932bf40234ae0dd347a6c007cdb51fa0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma until_monotonic : forall (P Q J K: infseq T -> Prop), (forall s, P s -> Q s) -> (forall s, J s -> K s) -> forall s, until J P s -> until K Q s.",
            "VernacStartTheoremProof",
            "3f0dcb3b892404fa24fe31fc4a1e45336598f84f"
        ],
        [
            "intros P Q J K PQ JK s unJP.",
            "VernacExtend",
            "df50f05ba16bfc50836216a421fed7da84af3839"
        ],
        [
            "induction unJP.",
            "VernacExtend",
            "fd9a83432d9f610542c9956d5db3808877faf354"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply U0, PQ; assumption.",
            "VernacExtend",
            "d27e3b1f353fd257494a26f911de15792db7bea9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply U_next.",
            "VernacExtend",
            "5e6ca6fcba195257e296c0c468a1e66b47d97d3e"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply JK; assumption.",
            "VernacExtend",
            "3713fdca640643895dfa0b70a159d83e33f096c1"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma release_monotonic : forall (P Q J K: infseq T -> Prop), (forall s, P s -> Q s) -> (forall s, J s -> K s) -> forall s, release J P s -> release K Q s.",
            "VernacStartTheoremProof",
            "70cdc0fd81c47207325889a8477dd80c92307c3c"
        ],
        [
            "intros P Q J K PQ JK.",
            "VernacExtend",
            "39fd5ef980f67ede49a06f2e0de4e3cc58b52f61"
        ],
        [
            "cofix cf.",
            "VernacExtend",
            "2223d6590abe75c4110c64eec6185c896db38177"
        ],
        [
            "intros [x s] rl.",
            "VernacExtend",
            "a99c14ad7c42bec67102ffa53febeef9168a26a9"
        ],
        [
            "generalize (release_Cons x s J P rl); simpl.",
            "VernacExtend",
            "581e1880c691ed56246f448bed967a76aa748605"
        ],
        [
            "intros [Pxs rlCJP].",
            "VernacExtend",
            "5c73049745ccf076a833a15b18a0018a2ad426e1"
        ],
        [
            "case rlCJP; intros rlJP.",
            "VernacExtend",
            "a24f1303b29400d0461d137d1a3d316916c059db"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply R0.",
            "VernacExtend",
            "b6b918557d922367c776470dbb50ea3f3a73e1cc"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply PQ; assumption.",
            "VernacExtend",
            "e8bf029651424df840891dcfb0c9b0811ac55e9d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply JK; assumption.",
            "VernacExtend",
            "3713fdca640643895dfa0b70a159d83e33f096c1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply R_tl.",
            "VernacExtend",
            "802456d3de13dd02b156b2c090e45bc64943d1eb"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply PQ; assumption.",
            "VernacExtend",
            "e8bf029651424df840891dcfb0c9b0811ac55e9d"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "apply cf.",
            "VernacExtend",
            "854ae6f0755d8ae82882825b8b225848a6534503"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eventually_monotonic : forall (P Q J: infseq T -> Prop), (forall x s, J (Cons x s) -> J s) -> (forall s, J s -> P s -> Q s) -> forall s, J s -> eventually P s -> eventually Q s.",
            "VernacStartTheoremProof",
            "601a9b223879b72ab74a3855cd27e9c7a2b87045"
        ],
        [
            "intros P Q J is_inv JPQ s Js ev.",
            "VernacExtend",
            "c91b5c38ec48362d5c5f082534ebd78e25416c45"
        ],
        [
            "apply (eventually_trans P Q J is_inv); try assumption.",
            "VernacExtend",
            "80f76674e298dbd1c2396b7c14b3697f886fbc7c"
        ],
        [
            "intros; constructor 1.",
            "VernacExtend",
            "76bba1421ec0d3aa56b3795d57a8d7709fe21231"
        ],
        [
            "apply JPQ; assumption.",
            "VernacExtend",
            "85c9402df4a96b2405f105b481338c47c0ca09fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eventually_monotonic_simple : forall (P Q: infseq T -> Prop), (forall s, P s -> Q s) -> forall s, eventually P s -> eventually Q s.",
            "VernacStartTheoremProof",
            "af1ed846bf0f106ac6e37272c24d1be66b5e8a38"
        ],
        [
            "intros P Q PQ s.",
            "VernacExtend",
            "9da989787132ecb2be596a814d70bd6d5e625107"
        ],
        [
            "apply (eventually_monotonic P Q True_tl); auto.",
            "VernacExtend",
            "93090de11d615b7708e2520015c74dc0344fbea4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inf_often_monotonic : forall (P Q : infseq T -> Prop), (forall s, P s -> Q s) -> forall s, inf_often P s -> inf_often Q s.",
            "VernacStartTheoremProof",
            "7b243b17500aee6263b029e6da48c66c920f893b"
        ],
        [
            "intros P Q impl.",
            "VernacExtend",
            "0d513d60957d2b2b0e2cd27b16370c55011898e6"
        ],
        [
            "apply always_monotonic.",
            "VernacExtend",
            "3a8fd3d197e443f0aabfd20027d7e3ea9653576b"
        ],
        [
            "apply eventually_monotonic_simple.",
            "VernacExtend",
            "63090bba6b56757aedc1047b9f71c27124e876df"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cumul_eventually_always : forall (P Q : infseq T -> Prop) s, always P s -> eventually Q s -> eventually (P /\\_ Q) s.",
            "VernacStartTheoremProof",
            "0548d072ca0ca49b2cfd26555af3214355185e2d"
        ],
        [
            "intros until 1.",
            "VernacExtend",
            "02a88d708d00fec9315af96f54c66efbe80acead"
        ],
        [
            "intro H_eventually.",
            "VernacExtend",
            "ea65d99789382b5d054c7ae8f51b750733e314fc"
        ],
        [
            "induction H_eventually.",
            "VernacExtend",
            "95c21aeb5fc5f08099cbed85d39477c557588bbb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply E0.",
            "VernacExtend",
            "df471c57e9be53f9f7938e8848fb9d5a51ccfc24"
        ],
        [
            "destruct s.",
            "VernacExtend",
            "25b900e268e7851d959aa45edce33af62b3fca65"
        ],
        [
            "firstorder using always_Cons.",
            "VernacExtend",
            "ad524a7b73e0ac345d27c3a841487353ac85ca21"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eauto using E_next, always_invar.",
            "VernacExtend",
            "5ee5225ab57ac30863efc2b07b703fe2d0878947"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cumul_inf_often_always : forall (P Q : infseq T -> Prop) s, always P s -> inf_often Q s -> inf_often (P /\\_ Q) s.",
            "VernacStartTheoremProof",
            "eac4684d1c6902a2cd527fb96526ff8b48c9b176"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply always_monotonic with (P := always P /\\_ eventually Q) (Q := eventually (P /\\_ Q)).",
            "VernacExtend",
            "62d26183cc2efb6ad545d8ec9ad1a68364622852"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold and_tl in * |-.",
            "VernacExtend",
            "0ce4bd7b610accc0b89ecffe3cef8cbf9b1b7cc9"
        ],
        [
            "firstorder using cumul_eventually_always.",
            "VernacExtend",
            "b4d02d5c1001cded664ab6c9936aaddd983d4734"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply always_and_tl; eauto using always_always.",
            "VernacExtend",
            "3703f402a2a30046eb70007269d8cab0be7142af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inf_often_monotonic_invar : forall (invariant P Q : infseq T -> Prop), (forall s, invariant s -> P s -> Q s) -> forall ex, always invariant ex -> inf_often P ex -> inf_often Q ex.",
            "VernacStartTheoremProof",
            "63237b3dbe60c0f6ac57d3596ca8e4c8a33b5fbe"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "eapply inf_often_monotonic with (P:=invariant /\\_ P).",
            "VernacExtend",
            "37daaab8cc412c229246dad362b8b8c928ae5ad6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "unfold and_tl in *; firstorder.",
            "VernacExtend",
            "f124864edc4a0be3c64ba7271a4d96e5915791f1"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "eapply cumul_inf_often_always; eauto.",
            "VernacExtend",
            "198b60b5f8658b55bcdd8a643480896e61f2ea0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuously_monotonic : forall (P Q : infseq T -> Prop), (forall s, P s -> Q s) -> forall s, continuously P s -> continuously Q s.",
            "VernacStartTheoremProof",
            "5bbd750d799f76e12bd63fbdaef3e60c1c3962e3"
        ],
        [
            "intros P Q impl.",
            "VernacExtend",
            "0d513d60957d2b2b0e2cd27b16370c55011898e6"
        ],
        [
            "apply eventually_monotonic_simple.",
            "VernacExtend",
            "63090bba6b56757aedc1047b9f71c27124e876df"
        ],
        [
            "apply always_monotonic.",
            "VernacExtend",
            "3a8fd3d197e443f0aabfd20027d7e3ea9653576b"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_eventually_always_not : forall (P : infseq T -> Prop) (s : infseq T), ~ eventually P s -> always (~_ P) s.",
            "VernacStartTheoremProof",
            "859401101137bc677a6cf2154fc906d634d3c6aa"
        ],
        [
            "intros P.",
            "VernacExtend",
            "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
        ],
        [
            "cofix c.",
            "VernacExtend",
            "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
        ],
        [
            "intros s evP.",
            "VernacExtend",
            "d29d0ec9ec05a590c7e8ab7916fad0eb0be1db2f"
        ],
        [
            "destruct s as [e s].",
            "VernacExtend",
            "996a84297415d75ea87b5e18c1fffe4411d0dbd5"
        ],
        [
            "apply Always.",
            "VernacExtend",
            "c743b0ca9a7ea8b9b680618f731bd37f3dfd95f5"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold not_tl.",
            "VernacExtend",
            "7978b88f3e68a3c9d3d2ac0117cfb2c4bb7bf803"
        ],
        [
            "intro Pn.",
            "VernacExtend",
            "8c14c31cc46d9ff64418622e38307130fc1aee97"
        ],
        [
            "case evP.",
            "VernacExtend",
            "5540da822e125c1576033817cf4b0e4ed1b80d1e"
        ],
        [
            "apply E0.",
            "VernacExtend",
            "df471c57e9be53f9f7938e8848fb9d5a51ccfc24"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply c.",
            "VernacExtend",
            "8bfc1f1e5a5fc1a5b698b6028b6f0aa9c3b12f6d"
        ],
        [
            "intro evPn.",
            "VernacExtend",
            "c0f8f344ea67de3c88fd24f68a738a73f069842b"
        ],
        [
            "contradict evP.",
            "VernacExtend",
            "d2f500cc6b9c14462732a607b0b69cc90c3a343c"
        ],
        [
            "apply E_next.",
            "VernacExtend",
            "94ef81f1740a77599e7f9def4b266f10d437a7fb"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_not_eventually : forall (P : infseq T -> Prop) (s : infseq T), always (~_ P) s -> ~ eventually P s.",
            "VernacStartTheoremProof",
            "9621d1fd6a3060f0aa01d6bfeabf2fc6c1d94e38"
        ],
        [
            "intros P.",
            "VernacExtend",
            "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
        ],
        [
            "intros s alP evP.",
            "VernacExtend",
            "a5c43b91234d2543c68ddc83dda6c24e11f2e452"
        ],
        [
            "induction evP.",
            "VernacExtend",
            "326e5bc45e205a1ac07d81b3720f554791a4bc1f"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct s as [e s].",
            "VernacExtend",
            "996a84297415d75ea87b5e18c1fffe4411d0dbd5"
        ],
        [
            "apply always_Cons in alP.",
            "VernacExtend",
            "64d80aa4cfb63fd9169e7fd61093a0366037ce61"
        ],
        [
            "destruct alP as [nP alP].",
            "VernacExtend",
            "ccbbe61fce4eb41d86b72dab2b1dc5b85ad9c939"
        ],
        [
            "unfold not_tl in nP.",
            "VernacExtend",
            "cca444a0cf5ca06ae931c4022506c3354cf7dcdc"
        ],
        [
            "contradict nP; assumption.",
            "VernacExtend",
            "9d3f7a650082e1752ab9ecc5b50ccca6fcea145b"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply always_invar in alP.",
            "VernacExtend",
            "7cd894d1e66c34076a3a45a5e0e12e41ee6d0cd8"
        ],
        [
            "contradict IHevP; assumption.",
            "VernacExtend",
            "94160a7926a741b63cfac82fb87e7b9a9655956b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma eventually_not_always : forall (P : infseq T -> Prop) (s : infseq T), eventually (~_ P) s -> ~ always P s.",
            "VernacStartTheoremProof",
            "a61cd32088cbea5f957698d28c8276589b33a4bb"
        ],
        [
            "intros P s eP alP.",
            "VernacExtend",
            "be060fd4c3d2a84d25071d979741adb796b06358"
        ],
        [
            "induction eP.",
            "VernacExtend",
            "0d5eee2bfba0ae30f1d5f9d8e6be367ce24a742d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct s as [x s].",
            "VernacExtend",
            "22d25b59ca5df004e02ea0d2bfa9b8cce8165f12"
        ],
        [
            "unfold not_tl in H.",
            "VernacExtend",
            "6b6a03db6bdd1c497336502aeee29f237023bb3c"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply always_Cons in alP.",
            "VernacExtend",
            "64d80aa4cfb63fd9169e7fd61093a0366037ce61"
        ],
        [
            "destruct alP as [PC alP].",
            "VernacExtend",
            "dd0e0481595172332048dcaaa020100b51324fd0"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply always_invar in alP.",
            "VernacExtend",
            "7cd894d1e66c34076a3a45a5e0e12e41ee6d0cd8"
        ],
        [
            "contradict IHeP.",
            "VernacExtend",
            "587b8b2b1b1cfa21c5e9e06eca2f08c5b3900598"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_until_always_not_always : forall (J P : infseq T -> Prop) (s : infseq T), weak_until J P s -> always (~_ P) s -> always J s.",
            "VernacStartTheoremProof",
            "01791371267be55ce27e67861ca84804f1e31f08"
        ],
        [
            "intros J P.",
            "VernacExtend",
            "5daaf05ad0206d0c329fb00a2ad32e7df58a30cd"
        ],
        [
            "cofix c.",
            "VernacExtend",
            "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
        ],
        [
            "intros s unJP alP.",
            "VernacExtend",
            "f6bf844576c107eaada02918ae8ab84416f5399e"
        ],
        [
            "destruct s as [e s].",
            "VernacExtend",
            "996a84297415d75ea87b5e18c1fffe4411d0dbd5"
        ],
        [
            "apply weak_until_Cons in unJP.",
            "VernacExtend",
            "17d2cfd40caa8933f3bf7cc34622364c4f8fb968"
        ],
        [
            "case unJP.",
            "VernacExtend",
            "3523da777f18af480b287efabff3abed5880e74f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro PC.",
            "VernacExtend",
            "629a1a040ce5560f5a313f1d1d1892c433417a6a"
        ],
        [
            "apply always_Cons in alP.",
            "VernacExtend",
            "64d80aa4cfb63fd9169e7fd61093a0366037ce61"
        ],
        [
            "destruct alP as [nP alP].",
            "VernacExtend",
            "ccbbe61fce4eb41d86b72dab2b1dc5b85ad9c939"
        ],
        [
            "unfold not_tl in nP.",
            "VernacExtend",
            "cca444a0cf5ca06ae931c4022506c3354cf7dcdc"
        ],
        [
            "contradict nP.",
            "VernacExtend",
            "138cf9beee700b04bccb97f61bbefed5fe4d8cec"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intros Jun.",
            "VernacExtend",
            "8e2fac68649fc3e5c909814f7d2de8439811d80c"
        ],
        [
            "destruct Jun as [JC unJPs].",
            "VernacExtend",
            "3fa998f67b77a3c34501d85198475536514d266f"
        ],
        [
            "apply Always; trivial.",
            "VernacExtend",
            "33ea120fc883332bd01168e46e2a93395d512595"
        ],
        [
            "apply c; trivial.",
            "VernacExtend",
            "098cb28c71bc447627b396d229c12924a88782c1"
        ],
        [
            "apply always_invar in alP.",
            "VernacExtend",
            "7cd894d1e66c34076a3a45a5e0e12e41ee6d0cd8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_until_latch_eventually : forall (P Q : infseq T -> Prop) ex, weak_until (P /\\_ ~_ Q) (P /\\_ Q) ex -> eventually Q ex -> eventually (P /\\_ Q) ex.",
            "VernacStartTheoremProof",
            "45d70966e798cd6180ecc27798091718b0cdde6e"
        ],
        [
            "intros P Q ex H_w.",
            "VernacExtend",
            "403006ac9a78875f03170daf14abdc6d374c89ca"
        ],
        [
            "induction 1; inversion H_w; firstorder using E0, E_next.",
            "VernacExtend",
            "58bd59f528547386a8d61635d09272662a33e8ad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma always_not_eventually_not : forall (P : infseq T -> Prop) (s : infseq T), always P s -> ~ eventually (~_ P) s.",
            "VernacStartTheoremProof",
            "07900acd012516672b418fcb46bb03113fa2293d"
        ],
        [
            "intros P s alP evP.",
            "VernacExtend",
            "e2abf7b6d7ae5896a2e7cbc038e8cfc1d1fe55cc"
        ],
        [
            "induction evP.",
            "VernacExtend",
            "326e5bc45e205a1ac07d81b3720f554791a4bc1f"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "unfold not_tl in H.",
            "VernacExtend",
            "6b6a03db6bdd1c497336502aeee29f237023bb3c"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "destruct s as [x s].",
            "VernacExtend",
            "22d25b59ca5df004e02ea0d2bfa9b8cce8165f12"
        ],
        [
            "apply always_now in alP.",
            "VernacExtend",
            "c10974998f5602da0227be2d3d40df4afc2afac5"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "contradict IHevP.",
            "VernacExtend",
            "b5f05c520662803b19b830cf92badd2393af3066"
        ],
        [
            "apply always_invar in alP.",
            "VernacExtend",
            "7cd894d1e66c34076a3a45a5e0e12e41ee6d0cd8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma continuously_not_inf_often : forall (P : infseq T -> Prop) (s : infseq T), continuously (~_ P) s -> ~ inf_often P s.",
            "VernacStartTheoremProof",
            "aa11e9de49037f6db626115569386ae7b5d04ef1"
        ],
        [
            "intros P s cnyP.",
            "VernacExtend",
            "d36baffa0025ca3521cf70568ed11bef6e85626a"
        ],
        [
            "induction cnyP.",
            "VernacExtend",
            "40239d6bea19218cb634bc1b4a7cc9ab6b10752a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct s as [e s].",
            "VernacExtend",
            "996a84297415d75ea87b5e18c1fffe4411d0dbd5"
        ],
        [
            "intros ifP.",
            "VernacExtend",
            "77192aa3d156f98f4d0ab19d890a18a3f1df8aa9"
        ],
        [
            "apply always_now in ifP.",
            "VernacExtend",
            "0d1a0b9d78343b393e076c655b8a8c1cbf6d1bc2"
        ],
        [
            "induction ifP.",
            "VernacExtend",
            "8e6dacc7c728f570b962bfe5757c052f29018e19"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct s0 as [e0 s0].",
            "VernacExtend",
            "4631458930b20492f66161b90d05c8636b9b3fd1"
        ],
        [
            "apply always_now in H.",
            "VernacExtend",
            "6b66db4ce7569faa669971fc4531cabd7ad5b92b"
        ],
        [
            "unfold not_tl in H.",
            "VernacExtend",
            "6b6a03db6bdd1c497336502aeee29f237023bb3c"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply always_invar in H.",
            "VernacExtend",
            "239d016999fceaff37d10d260933a516df1b835a"
        ],
        [
            "contradict IHifP.",
            "VernacExtend",
            "f735d24edb4304fb3ab1c0d7952e1877b65077ec"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "intro ioP.",
            "VernacExtend",
            "ccba950a68bf581957606d98396061c605f123fc"
        ],
        [
            "apply always_invar in ioP.",
            "VernacExtend",
            "d23bc0ebab950a88f7bac549ef850fff35ba2470"
        ],
        [
            "contradict IHcnyP.",
            "VernacExtend",
            "eac1648f52b15b7fc687b10f7906cb1962b22fe2"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inf_often_not_continuously : forall (P : infseq T -> Prop) (s : infseq T), inf_often (~_ P) s -> ~ continuously P s.",
            "VernacStartTheoremProof",
            "e0cfb29c7bf655b77ab602cf4cd8363b389b5160"
        ],
        [
            "intros P s ioP cnyP.",
            "VernacExtend",
            "b04dc903a22151363c45b131a31689aee626b8af"
        ],
        [
            "induction cnyP.",
            "VernacExtend",
            "40239d6bea19218cb634bc1b4a7cc9ab6b10752a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct s as [x s].",
            "VernacExtend",
            "22d25b59ca5df004e02ea0d2bfa9b8cce8165f12"
        ],
        [
            "apply always_now in ioP.",
            "VernacExtend",
            "0809134a7bcb730b13706fe9aa5b9ecc990e677d"
        ],
        [
            "induction ioP.",
            "VernacExtend",
            "00a3a33c14c27ccfb05567b9ebddf83eaa33be55"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "destruct s0 as [x' s0].",
            "VernacExtend",
            "2ad99be7b074a5112d8c2ec1f800874a5e230183"
        ],
        [
            "apply always_now in H.",
            "VernacExtend",
            "6b66db4ce7569faa669971fc4531cabd7ad5b92b"
        ],
        [
            "unfold not_tl in H0.",
            "VernacExtend",
            "f2dfe5ed10b0aec09290cd8df858ac77cb9c40ac"
        ],
        [
            "contradict H0.",
            "VernacExtend",
            "e9276d92c17ea182f1ef13aa74464b33eea923d9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "apply always_invar in H.",
            "VernacExtend",
            "239d016999fceaff37d10d260933a516df1b835a"
        ],
        [
            "contradict IHioP.",
            "VernacExtend",
            "56e0d46a2fe334eb14ff52e58eab7240c59268b9"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply inf_often_invar in ioP.",
            "VernacExtend",
            "a33ccb6422ef63ab1ab833eab448d9eff41d7eeb"
        ],
        [
            "contradict IHcnyP.",
            "VernacExtend",
            "eac1648f52b15b7fc687b10f7906cb1962b22fe2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma release_not_until : forall (J P : infseq T -> Prop) (s : infseq T), release J P s -> ~ until (~_ J) (~_ P) s.",
            "VernacStartTheoremProof",
            "11db8e931827c642159cbd8237a901f68d0ada3d"
        ],
        [
            "intros J P s rl un.",
            "VernacExtend",
            "2659fd8ea7eb228078550e566cb5ed1e01c1c6f6"
        ],
        [
            "induction un as [s Ps |x s Js IHun IH].",
            "VernacExtend",
            "1a980be4ba3b267059cf8f38f31ae17a42fabbd2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct s as [x s].",
            "VernacExtend",
            "22d25b59ca5df004e02ea0d2bfa9b8cce8165f12"
        ],
        [
            "unfold not_tl in Ps.",
            "VernacExtend",
            "e457466f60c8a838ce2386cdb79df312b98996d9"
        ],
        [
            "apply release_Cons in rl.",
            "VernacExtend",
            "ed94f88c28b802ed1cc276ee072a4c769d51d4c9"
        ],
        [
            "destruct rl as [Psr rl].",
            "VernacExtend",
            "a445a950755fb4e71b63fde98f00e24cc99b5b1f"
        ],
        [
            "contradict Ps.",
            "VernacExtend",
            "551f1b31a092a7d5c512b26c0d658f1a6615f9fe"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply release_Cons in rl.",
            "VernacExtend",
            "ed94f88c28b802ed1cc276ee072a4c769d51d4c9"
        ],
        [
            "destruct rl as [Ps rl].",
            "VernacExtend",
            "12bc46b4c33a0094636ea1fa11388eb09d13f7ee"
        ],
        [
            "unfold not_tl in Js.",
            "VernacExtend",
            "cd3a3efff4e19a5f4caa6e2540eec378a7669c13"
        ],
        [
            "case rl; trivial.",
            "VernacExtend",
            "9adb527c8dc587113d77f09bb1738ccfd5b968ec"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma until_not_release : forall (J P : infseq T -> Prop) (s : infseq T), until J P s -> ~ release (~_ J) (~_ P) s.",
            "VernacStartTheoremProof",
            "1d3e34920598e776261d0dcbcad650109247c058"
        ],
        [
            "intros J P s un rl.",
            "VernacExtend",
            "78b428c4c8704027211c786526ea2e0aa65e677d"
        ],
        [
            "induction un.",
            "VernacExtend",
            "68e23346dfed3471d68789a2faab11796ab7bc36"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct s as [x s].",
            "VernacExtend",
            "22d25b59ca5df004e02ea0d2bfa9b8cce8165f12"
        ],
        [
            "apply release_Cons in rl.",
            "VernacExtend",
            "ed94f88c28b802ed1cc276ee072a4c769d51d4c9"
        ],
        [
            "destruct rl as [Ps rl].",
            "VernacExtend",
            "12bc46b4c33a0094636ea1fa11388eb09d13f7ee"
        ],
        [
            "unfold not_tl in Ps.",
            "VernacExtend",
            "e457466f60c8a838ce2386cdb79df312b98996d9"
        ],
        [
            "contradict Ps.",
            "VernacExtend",
            "551f1b31a092a7d5c512b26c0d658f1a6615f9fe"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply release_Cons in rl.",
            "VernacExtend",
            "ed94f88c28b802ed1cc276ee072a4c769d51d4c9"
        ],
        [
            "destruct rl as [Ps rl].",
            "VernacExtend",
            "12bc46b4c33a0094636ea1fa11388eb09d13f7ee"
        ],
        [
            "case rl; trivial.",
            "VernacExtend",
            "9adb527c8dc587113d77f09bb1738ccfd5b968ec"
        ],
        [
            "unfold not_tl.",
            "VernacExtend",
            "7978b88f3e68a3c9d3d2ac0117cfb2c4bb7bf803"
        ],
        [
            "intros Js.",
            "VernacExtend",
            "102520ff11e6774a15dfbf2cc3a254eb805b053a"
        ],
        [
            "contradict Js.",
            "VernacExtend",
            "8b42f5665e1aaaee074e5011228cec7515edb9a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma weak_until_not_until : forall (J P : infseq T -> Prop) (s : infseq T), weak_until (J /\\_ ~_ P) (~_ J /\\_ ~_ P) s -> ~ until J P s.",
            "VernacStartTheoremProof",
            "286b586322ccc258628614e34d7eb6938801d07f"
        ],
        [
            "intros J P s wu un.",
            "VernacExtend",
            "096d8472c6e3318028ce1e16f0936f7d4ed7b5c5"
        ],
        [
            "induction un.",
            "VernacExtend",
            "68e23346dfed3471d68789a2faab11796ab7bc36"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct s as [x s].",
            "VernacExtend",
            "22d25b59ca5df004e02ea0d2bfa9b8cce8165f12"
        ],
        [
            "apply weak_until_Cons in wu.",
            "VernacExtend",
            "e609be02603688ec6983060fb93c214ddd9815c8"
        ],
        [
            "case wu; unfold not_tl, and_tl.",
            "VernacExtend",
            "77da3d9ea97257619cb758713ca8b426e5ae0440"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros [Js Ps].",
            "VernacExtend",
            "fd9e39aa244c034d864a1bb78f01a64216336e78"
        ],
        [
            "contradict Ps.",
            "VernacExtend",
            "551f1b31a092a7d5c512b26c0d658f1a6615f9fe"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros [[Js Ps] wun].",
            "VernacExtend",
            "095a49ef76561a33d3ff3894b2a15573892576cf"
        ],
        [
            "contradict Ps.",
            "VernacExtend",
            "551f1b31a092a7d5c512b26c0d658f1a6615f9fe"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply weak_until_Cons in wu.",
            "VernacExtend",
            "e609be02603688ec6983060fb93c214ddd9815c8"
        ],
        [
            "case wu.",
            "VernacExtend",
            "3d5e98da3990e453f74744eab31143a605cb8d24"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "unfold not_tl, and_tl.",
            "VernacExtend",
            "1c6e1f995e853ab277f2fa8c69b3921f3651a415"
        ],
        [
            "intros [Js Ps].",
            "VernacExtend",
            "fd9e39aa244c034d864a1bb78f01a64216336e78"
        ],
        [
            "contradict Js.",
            "VernacExtend",
            "8b42f5665e1aaaee074e5011228cec7515edb9a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros [[Js Ps] wun].",
            "VernacExtend",
            "095a49ef76561a33d3ff3894b2a15573892576cf"
        ],
        [
            "contradict IHun.",
            "VernacExtend",
            "172d902fddf6c4d9848a2bd54b07007cb84a0516"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma until_not_weak_until : forall (J P : infseq T -> Prop) (s : infseq T), until (J /\\_ ~_ P) (~_ J /\\_ ~_ P) s -> ~ weak_until J P s.",
            "VernacStartTheoremProof",
            "4643605178f5cf1c654f1a7dbdc420e847dd85d5"
        ],
        [
            "intros J P s un wun.",
            "VernacExtend",
            "571ea6aaf948b3d5f494694c1f41d8c74db116f2"
        ],
        [
            "induction un as [s JPs | x s JPs IHun IH]; unfold not_tl, and_tl in JPs; destruct JPs as [Js Ps].",
            "VernacExtend",
            "81df1bca8f84aea77647628212b136c4044001c6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "destruct s as [x s].",
            "VernacExtend",
            "22d25b59ca5df004e02ea0d2bfa9b8cce8165f12"
        ],
        [
            "apply weak_until_Cons in wun.",
            "VernacExtend",
            "c8e093189b154c7c9b54f2c5cc63852fa8ed3178"
        ],
        [
            "case wun; trivial.",
            "VernacExtend",
            "0cb0753cdcaf1c8a2c8951e0a8a313cfddc57fc3"
        ],
        [
            "intros [JCs wu].",
            "VernacExtend",
            "9cf8f955d0f95bf726de97ebdec3e41b12305d74"
        ],
        [
            "contradict Js.",
            "VernacExtend",
            "8b42f5665e1aaaee074e5011228cec7515edb9a6"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply weak_until_Cons in wun.",
            "VernacExtend",
            "c8e093189b154c7c9b54f2c5cc63852fa8ed3178"
        ],
        [
            "case wun.",
            "VernacExtend",
            "62a40bc3b19f6fd79bd5e8aeeea8d14fcc381678"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros PCs.",
            "VernacExtend",
            "593606e4c253a310c6f0a400a77ac03e75363483"
        ],
        [
            "contradict Ps.",
            "VernacExtend",
            "551f1b31a092a7d5c512b26c0d658f1a6615f9fe"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "*",
            "VernacBullet",
            "8a329d054468e0c41ce333043e0978e30eed7b98"
        ],
        [
            "intros [JCs wu].",
            "VernacExtend",
            "9cf8f955d0f95bf726de97ebdec3e41b12305d74"
        ],
        [
            "contradict IH.",
            "VernacExtend",
            "c5c4302c0e18904950ab5f89f8035491521051a7"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma and_tl_comm : forall (P Q : infseq T -> Prop) (s : infseq T), (P /\\_ Q) s <-> (Q /\\_ P) s.",
            "VernacStartTheoremProof",
            "0975d6df6c9c0cb428a82554bf34fd9595d988d2"
        ],
        [
            "intros; split; unfold and_tl; apply and_comm.",
            "VernacExtend",
            "99bb9cb27a867fe359d3d717a4421314396c8d2b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma and_tl_assoc : forall (P Q R : infseq T -> Prop) (s : infseq T), ((P /\\_ Q) /\\_ R) s <-> (P /\\_ Q /\\_ R) s.",
            "VernacStartTheoremProof",
            "0831d9e03f4c20d94924dee0bab6d96f2b9f3481"
        ],
        [
            "intros; split; unfold and_tl; apply and_assoc.",
            "VernacExtend",
            "be91b0ea056e29cf8da35c83416b40d42f4b0792"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or_tl_comm : forall (P Q : infseq T -> Prop) (s : infseq T), (P \\/_ Q) s <-> (Q \\/_ P) s.",
            "VernacStartTheoremProof",
            "09ae0e6143a6f31dfa4fd8a2abbf9fa0b6138ac4"
        ],
        [
            "intros; split; unfold or_tl; apply or_comm.",
            "VernacExtend",
            "4cb99a5f1d3d6e5dc3e80c4551f809f15067f61d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma or_tl_assoc : forall (P Q R : infseq T -> Prop) (s : infseq T), ((P \\/_ Q) \\/_ R) s <-> (P \\/_ Q \\/_ R) s.",
            "VernacStartTheoremProof",
            "337c3fe2a4a99003e60f09d719c411802b112223"
        ],
        [
            "intros; split; unfold or_tl; apply or_assoc.",
            "VernacExtend",
            "371da30ab85c7d7c9db51f3837d7f698a56b6783"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_tl_or_tl : forall (P Q : infseq T -> Prop) (s : infseq T), (~_ (P \\/_ Q)) s <-> ((~_ P) /\\_ (~_ Q)) s.",
            "VernacStartTheoremProof",
            "9ca6d5d0df14d3cf8ae97cf4293ed033cd325778"
        ],
        [
            "intros P Q s; unfold not_tl, and_tl, or_tl; split; [ intros PQs | intros [Ps Qs] PQs].",
            "VernacExtend",
            "05e717dabe25abef5a7bed8825ef87f9a1d195ea"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; intro Ps; contradict PQs; [left|right]; assumption.",
            "VernacExtend",
            "b0d292252feff868bfb68d53f651a5baa374f284"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case PQs; assumption.",
            "VernacExtend",
            "a2bed431277121bb03d3c89941a3d377cbe89178"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma not_tl_or_tl_and_tl : forall (P Q : infseq T -> Prop) (s : infseq T), ((~_ P) \\/_ (~_ Q)) s -> (~_ (P /\\_ Q)) s.",
            "VernacStartTheoremProof",
            "9d45f1b7b7f2708b126ace6733dd017c79da1bf5"
        ],
        [
            "intros P Q s; unfold not_tl, and_tl, or_tl; intros PQs [Ps Qs]; case PQs; intros nPQs; contradict nPQs; assumption.",
            "VernacExtend",
            "08093698678f9ae34772a86fd02b7d3f716e437f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End sec_modal_op_lemmas.",
            "VernacEndSegment",
            "d70ccbf0db8d060c0c130980f2c991a392682e92"
        ],
        [
            "Arguments always_inv [T inv] _ [s] _.",
            "VernacArguments",
            "d2febfa609cb9726b8c4c955ad23123639ec8d20"
        ],
        [
            "Arguments always_Cons [T x s P] _.",
            "VernacArguments",
            "ca397032a5277f0e335de1e8476039dfaad5a27c"
        ],
        [
            "Arguments always_now [T x s P] _.",
            "VernacArguments",
            "8387eb5a97a9b069471565d92fca180f4f9a0e09"
        ],
        [
            "Arguments always_invar [T x s P] _.",
            "VernacArguments",
            "a3406400d2ff2f001441fad1427b15d13f530f44"
        ],
        [
            "Arguments always_tl [T s P] _.",
            "VernacArguments",
            "e961db0bafe447a64a35081bd330cb5d04b4c566"
        ],
        [
            "Arguments always_not_false [T s].",
            "VernacArguments",
            "9da1e681d2752c8b13857903f96c3eeecdbf8f50"
        ],
        [
            "Arguments always_true [T s].",
            "VernacArguments",
            "b969a8f7715084ac046eb6880a18d7801ec401c7"
        ],
        [
            "Arguments always_and_tl [T P Q s] _ _.",
            "VernacArguments",
            "c5e761270cb088a8b4fcb3ac6b8b249b40cc3a51"
        ],
        [
            "Arguments always_always1 [T P s] _.",
            "VernacArguments",
            "efe0568a3ccbe8b2ace43cd1b3261f12a4303e34"
        ],
        [
            "Arguments always1_always [T P s] _.",
            "VernacArguments",
            "4ddcd35f4d62afa2a6910da759c846eedcd141b1"
        ],
        [
            "Arguments always_weak_until [T J P s] _.",
            "VernacArguments",
            "1b9909158786c3357b6398db82d3df34b0e684ea"
        ],
        [
            "Arguments always_release [T J P s] _.",
            "VernacArguments",
            "809f8be6f3809662ff49f7f56c393ed79022758c"
        ],
        [
            "Arguments always_inf_often [T P s] _.",
            "VernacArguments",
            "5fbaaf05a785606ec3666912c386fe868ac136bc"
        ],
        [
            "Arguments always_continuously [T P s] _.",
            "VernacArguments",
            "08f2ea6df9cc2eefe9fa48a8c4e134f11b828963"
        ],
        [
            "Arguments weak_until_Cons [T x s J P] _.",
            "VernacArguments",
            "ba39eccc1ddedff2c1420bd6cc0f10c228c16a4a"
        ],
        [
            "Arguments weak_until_always [T J J' P s] _ _.",
            "VernacArguments",
            "d2e32d2d147b4571f4e7a52a0dd4e765920f6ee2"
        ],
        [
            "Arguments until_weak_until [T J P s] _.",
            "VernacArguments",
            "6d1b3a36c5255064bab01685084ee7cfc153c25a"
        ],
        [
            "Arguments eventually_Cons [T x s P] _.",
            "VernacArguments",
            "e2b8f387b7e379aa808353d685f63e670ecab843"
        ],
        [
            "Arguments eventually_trans [T P Q inv] _ _ [s] _ _.",
            "VernacArguments",
            "72884eb6bc4424d33e980adde3f0aac2163c1da8"
        ],
        [
            "Arguments not_eventually [T P x s] _ _.",
            "VernacArguments",
            "1210d3324dde0bf84775069ca07279a4a3f11023"
        ],
        [
            "Arguments eventually_next [T s P] _.",
            "VernacArguments",
            "45255bd839c201bca25810bac4a28323b0879509"
        ],
        [
            "Arguments eventually_always_cumul [T s P Q] _ _.",
            "VernacArguments",
            "81683cceca54f767d0b938a2950f37aaaabe7a62"
        ],
        [
            "Arguments eventually_weak_until_cumul [T s P J] _ _.",
            "VernacArguments",
            "972e09f250241a450f6a2e6d2bae10b2704a8d29"
        ],
        [
            "Arguments weak_until_eventually [T P Q J] _ [s] _ _ _.",
            "VernacArguments",
            "37ea722f9cdd1ff852bdb4adb48de188f54ceae1"
        ],
        [
            "Arguments until_Cons [T x s J P] _.",
            "VernacArguments",
            "7e91edbda5da5d47d22d159474a5fc597da85660"
        ],
        [
            "Arguments until_eventually [T J P s] _.",
            "VernacArguments",
            "ef1da591d0f1ae086fcb7dcbc5eb4ac9367ec573"
        ],
        [
            "Arguments release_Cons [T x s J P] _.",
            "VernacArguments",
            "22c112d07c219c42b2a00b4faaa7b0c3fe52ded9"
        ],
        [
            "Arguments inf_often_invar [T x s P] _.",
            "VernacArguments",
            "335b327d89cf2e3bc23b000ea418d76f98b6ade9"
        ],
        [
            "Arguments continuously_invar [T x s P] _.",
            "VernacArguments",
            "edaac367a7f765bffdf74a5f729355f7b22021ce"
        ],
        [
            "Arguments continuously_and_tl [T P Q s] _ _.",
            "VernacArguments",
            "fa3f1a5c6db3d6e9462c2f35e42c29a78f4eb500"
        ],
        [
            "Arguments continuously_inf_often [T P s] _.",
            "VernacArguments",
            "a6b83eeb84532e0c53a7ef76d4170fc0486de36b"
        ],
        [
            "Arguments now_monotonic [T P Q] _ [s] _.",
            "VernacArguments",
            "0792d065e2891ff79abcc2d9a756dce313323789"
        ],
        [
            "Arguments next_monotonic [T P Q] _ [s] _.",
            "VernacArguments",
            "b09379df99c55d616734014779407a9b0680ec3d"
        ],
        [
            "Arguments consecutive_monotonic [T P Q] _ [s] _.",
            "VernacArguments",
            "9541883d88a6978ef40ff7f84d5ca45993249b0e"
        ],
        [
            "Arguments always_monotonic [T P Q] _ [s] _.",
            "VernacArguments",
            "31ec176a5bd2a64e0d8a1d9801ff3bedcf90c557"
        ],
        [
            "Arguments weak_until_monotonic [T P Q J K] _ _ [s] _.",
            "VernacArguments",
            "75e83b97813028fca0bef45bc80fcc9c456bc511"
        ],
        [
            "Arguments until_monotonic [T P Q J K] _ _ [s] _.",
            "VernacArguments",
            "dc401154b7bf6d3054b3157b7853dc026d327deb"
        ],
        [
            "Arguments release_monotonic [T P Q J K] _ _ [s] _.",
            "VernacArguments",
            "0391cebeba9813d038123c8cd28c688ae72fc108"
        ],
        [
            "Arguments eventually_monotonic [T P Q] _ _ _ [s] _ _.",
            "VernacArguments",
            "69e5a28f2b601b487430362a795e1bf5a4677695"
        ],
        [
            "Arguments eventually_monotonic_simple [T P Q] _ [s] _.",
            "VernacArguments",
            "6b2412f181e18202bf7c6fa3348ac8d912d66d7f"
        ],
        [
            "Arguments inf_often_monotonic [T P Q] _ [s] _.",
            "VernacArguments",
            "99bcef82549151746036b58a15b2516bf6c5cd81"
        ],
        [
            "Arguments continuously_monotonic [T P Q] _ [s] _.",
            "VernacArguments",
            "532446af34f6ebe5623c6ce5629a7c199b55a60e"
        ],
        [
            "Arguments not_eventually_always_not [T P s] _.",
            "VernacArguments",
            "cf16e4ac9c1c5f7dbc33bb8c35d30e3e47f1db3a"
        ],
        [
            "Arguments always_not_eventually [T P s] _ _.",
            "VernacArguments",
            "d511325703f1e6361fbfabb49c673bd38e4e2280"
        ],
        [
            "Arguments eventually_not_always [T P s] _ _.",
            "VernacArguments",
            "75972e795eed0e7f4bf98287b3d8ee67b6945cde"
        ],
        [
            "Arguments weak_until_always_not_always [T J P s] _ _.",
            "VernacArguments",
            "aecab06eda3c709daada6ecf082c99eadcedd35e"
        ],
        [
            "Arguments always_not_eventually_not [T P s] _ _.",
            "VernacArguments",
            "889ecc8427435b2201ec26aaee4840b78f19daaf"
        ],
        [
            "Arguments continuously_not_inf_often [T P s] _ _.",
            "VernacArguments",
            "b74825c672c94977bd56f620e2b4f69e81680c95"
        ],
        [
            "Arguments inf_often_not_continuously [T P s] _ _.",
            "VernacArguments",
            "83038a295fa90b14291c050eca8543d81630a1b0"
        ],
        [
            "Arguments release_not_until [T J P s] _ _.",
            "VernacArguments",
            "a7c63a36e4a0e9517e1dc90b9f346aa9a5f8a7a3"
        ],
        [
            "Arguments until_not_release [T J P s] _ _.",
            "VernacArguments",
            "3ca58c34fcd2643260f7704934edcca031c258fc"
        ],
        [
            "Arguments weak_until_not_until [T J P s] _ _.",
            "VernacArguments",
            "d35d5ee19fb73915e8cba2fe71fbae4e520a436e"
        ],
        [
            "Arguments until_not_weak_until [T J P s] _ _.",
            "VernacArguments",
            "337343b447458c5f0c20369dada77f5944bac191"
        ],
        [
            "Arguments and_tl_comm [T P Q s].",
            "VernacArguments",
            "bb539a0506d7c35e33a9e705b43053f832771483"
        ],
        [
            "Arguments and_tl_assoc [T P Q R s].",
            "VernacArguments",
            "36cdb6e2ba2d3a90f62fddbae841c21451e1fe98"
        ],
        [
            "Arguments or_tl_comm [T P Q s].",
            "VernacArguments",
            "1514201c351642c3fe4bbc851f6d75216f4aefc5"
        ],
        [
            "Arguments or_tl_assoc [T P Q R s].",
            "VernacArguments",
            "ed68f8f7c882293459309239b040dceead8bf9f4"
        ],
        [
            "Arguments not_tl_or_tl [T P Q s].",
            "VernacArguments",
            "cada4b67af275f5cbb0b3aa4ecd5fdd06b103014"
        ],
        [
            "Arguments not_tl_or_tl_and_tl [T P Q s] _ _.",
            "VernacArguments",
            "69a83ad55482b63e90bcb0b3122e3f7751b98493"
        ],
        [
            "Ltac monotony := match goal with | [ |- now ?P ?s -> now ?Q ?s ] => apply now_monotonic | [ |- next ?P ?s -> next ?Q ?s ] => apply next_monotonic | [ |- consecutive ?P ?s -> consecutive ?Q ?s ] => apply consecutive_monotonic | [ |- always ?P ?s -> always ?Q ?s ] => apply always_monotonic | [ |- weak_until ?J ?P ?s -> weak_until ?K ?Q ?s ] => apply weak_until_monotonic | [ |- until ?J ?P ?s -> until ?K ?Q ?s ] => apply until_monotonic | [ |- release ?J ?P ?s -> release ?K ?Q ?s ] => apply release_monotonic | [ |- ?J ?s -> eventually ?P ?s -> eventually ?Q ?s ] => apply eventually_monotonic | [ |- continuously ?P ?s -> continuously ?Q ?s ] => apply continuously_monotonic | [ |- inf_often ?P ?s -> inf_often ?Q ?s ] => apply inf_often_monotonic end.",
            "VernacExtend",
            "7abace50e854c563409252bbb56cddea319351f0"
        ]
    ],
    "proofs": [
        {
            "name": "recons",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros s.",
                        "VernacExtend",
                        "f24a724dc5e422652c0513af3278d221ab4df04a"
                    ]
                },
                {
                    "command": [
                        "case s.",
                        "VernacExtend",
                        "efad6b1c39b577b9895537b26593810b0956f859"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "now_hd",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "now destruct ex.",
                        "VernacExtend",
                        "b3fac7c685376f36ab48c974088a3980d95ba040"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_inv",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "intros P invP.",
                        "VernacExtend",
                        "269eb334753fcc8c4e3cab0f0cae796f3a0ea841"
                    ]
                },
                {
                    "command": [
                        "cofix c.",
                        "VernacExtend",
                        "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
                    ]
                },
                {
                    "command": [
                        "intros [x s] Pxs; apply Always; trivial.",
                        "VernacExtend",
                        "c74fc58adda96e68c772608f4b849688491b0ffd"
                    ]
                },
                {
                    "command": [
                        "apply c; apply invP in Pxs.",
                        "VernacExtend",
                        "8cccd72a177f8754e03b6180b4bca7f103584566"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_Cons",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "intros x s P al.",
                        "VernacExtend",
                        "0320c2ab7355affc526686f45f46d33900b8adc1"
                    ]
                },
                {
                    "command": [
                        "change (P (Cons x s) /\\ always P (tl (Cons x s))).",
                        "VernacExtend",
                        "83ec252109c60bf160c20654ed316844681d9f7c"
                    ]
                },
                {
                    "command": [
                        "destruct al.",
                        "VernacExtend",
                        "213cf32cc8262575eb30d941d2caeadf74967cb0"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_now",
            "line_nb": 78,
            "steps": [
                {
                    "command": [
                        "intros x s P al.",
                        "VernacExtend",
                        "0320c2ab7355affc526686f45f46d33900b8adc1"
                    ]
                },
                {
                    "command": [
                        "case (always_Cons x s P al); trivial.",
                        "VernacExtend",
                        "71a21c6c3e31ded8dbaeac3acbfefc1f7c8b5c2d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_now'",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "destruct ex.",
                        "VernacExtend",
                        "a924b95bc7e18e0dc08811a5cdcfdcefceadc403"
                    ]
                },
                {
                    "command": [
                        "apply always_now.",
                        "VernacExtend",
                        "19533b4b06fe23966d0f7692586c6ed06984ad52"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_invar",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "intros x s P al.",
                        "VernacExtend",
                        "0320c2ab7355affc526686f45f46d33900b8adc1"
                    ]
                },
                {
                    "command": [
                        "case (always_Cons x s P al); trivial.",
                        "VernacExtend",
                        "71a21c6c3e31ded8dbaeac3acbfefc1f7c8b5c2d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_tl",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "intros (x, s).",
                        "VernacExtend",
                        "538a1e9c4e0844b221a127458332d77604da5db4"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply always_invar.",
                        "VernacExtend",
                        "0f30c62f17b000c45affacf4077b41b7cacf4209"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_not_false",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "cofix c.",
                        "VernacExtend",
                        "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
                    ]
                },
                {
                    "command": [
                        "intros [x s].",
                        "VernacExtend",
                        "3be428760ec632752d433d64b0045aace3241033"
                    ]
                },
                {
                    "command": [
                        "apply Always.",
                        "VernacExtend",
                        "c743b0ca9a7ea8b9b680618f731bd37f3dfd95f5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold not_tl, False_tl; auto.",
                        "VernacExtend",
                        "12d3f36e52becdb6b4856d20d4a06e93671fc7d4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply c.",
                        "VernacExtend",
                        "8bfc1f1e5a5fc1a5b698b6028b6f0aa9c3b12f6d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_true",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "cofix c.",
                        "VernacExtend",
                        "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
                    ]
                },
                {
                    "command": [
                        "intros [x s].",
                        "VernacExtend",
                        "3be428760ec632752d433d64b0045aace3241033"
                    ]
                },
                {
                    "command": [
                        "apply Always.",
                        "VernacExtend",
                        "c743b0ca9a7ea8b9b680618f731bd37f3dfd95f5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold True_tl; trivial.",
                        "VernacExtend",
                        "17a96bbeddce471d7e4ca3f5ad091ebd87fcfba3"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply c.",
                        "VernacExtend",
                        "8bfc1f1e5a5fc1a5b698b6028b6f0aa9c3b12f6d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_and_tl",
            "line_nb": 113,
            "steps": [
                {
                    "command": [
                        "intros P Q.",
                        "VernacExtend",
                        "7751791de3f7d3a51bb606370c6c0e8f8866edb8"
                    ]
                },
                {
                    "command": [
                        "cofix c.",
                        "VernacExtend",
                        "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
                    ]
                },
                {
                    "command": [
                        "intros s alP alQ.",
                        "VernacExtend",
                        "b3a7bfbf7da575d02dcc487a0645c39a7dd46363"
                    ]
                },
                {
                    "command": [
                        "destruct alP.",
                        "VernacExtend",
                        "fab86b0fc00d9b0c57ade4b3f8a9a0a2a65d9c3b"
                    ]
                },
                {
                    "command": [
                        "destruct alQ.",
                        "VernacExtend",
                        "7dff1b6aab1773bb15107d5ca974db567961e1cb"
                    ]
                },
                {
                    "command": [
                        "apply Always.",
                        "VernacExtend",
                        "c743b0ca9a7ea8b9b680618f731bd37f3dfd95f5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply c; assumption.",
                        "VernacExtend",
                        "9e3e4d80d517eb0c889c872623fd702f442a743a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_always",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "intro P.",
                        "VernacExtend",
                        "0910b274c6bc3191fb894c537bf6a9d8a015a918"
                    ]
                },
                {
                    "command": [
                        "cofix c.",
                        "VernacExtend",
                        "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "do 2 destruct s.",
                        "VernacExtend",
                        "c761f08a7b0b45872dff1b23b2ccff3c4c793ed3"
                    ]
                },
                {
                    "command": [
                        "constructor; eauto using always_invar.",
                        "VernacExtend",
                        "bf5b0bfca2373d1c3eee2f3eb7190c8d16f21111"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_always1",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "intros P.",
                        "VernacExtend",
                        "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
                    ]
                },
                {
                    "command": [
                        "cofix alwn.",
                        "VernacExtend",
                        "88da2f3a37d70efba63298acbb673a932e8121f5"
                    ]
                },
                {
                    "command": [
                        "intros s a; case a; clear a s.",
                        "VernacExtend",
                        "bc742b437c1c8efa285459320ab24118489285f0"
                    ]
                },
                {
                    "command": [
                        "intros (x, s); simpl.",
                        "VernacExtend",
                        "360d894d5ce3f4bf71b30b4ac628c3a60595fe9e"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply alwn; assumption.",
                        "VernacExtend",
                        "b55f7734768d581571e6aa9207b79e8b805dfbf2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always1_always",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "intros P.",
                        "VernacExtend",
                        "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
                    ]
                },
                {
                    "command": [
                        "cofix alwn.",
                        "VernacExtend",
                        "88da2f3a37d70efba63298acbb673a932e8121f5"
                    ]
                },
                {
                    "command": [
                        "destruct 1.",
                        "VernacExtend",
                        "0e61c29dbe9a16af1faa0807bdb22c467076a9d2"
                    ]
                },
                {
                    "command": [
                        "constructor; simpl.",
                        "VernacExtend",
                        "dedfc8791248d9f0998b0bf2378e59b81a2e0146"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply alwn; assumption.",
                        "VernacExtend",
                        "b55f7734768d581571e6aa9207b79e8b805dfbf2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_weak_until",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "intros J P.",
                        "VernacExtend",
                        "5daaf05ad0206d0c329fb00a2ad32e7df58a30cd"
                    ]
                },
                {
                    "command": [
                        "cofix c.",
                        "VernacExtend",
                        "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
                    ]
                },
                {
                    "command": [
                        "intros [x s] alJ.",
                        "VernacExtend",
                        "1fe39811fb29db1ed94526c604eec11a31c5879e"
                    ]
                },
                {
                    "command": [
                        "apply W_tl.",
                        "VernacExtend",
                        "44178c488da18848af5ccc850b779a277ea16aad"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply always_now in alJ.",
                        "VernacExtend",
                        "9c2430cb84716c57c9d0968b02db06e81e603412"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply c.",
                        "VernacExtend",
                        "8bfc1f1e5a5fc1a5b698b6028b6f0aa9c3b12f6d"
                    ]
                },
                {
                    "command": [
                        "apply always_invar in alJ.",
                        "VernacExtend",
                        "076a7bb3f5377a3da92d059d9da1bbd5b596a201"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_release",
            "line_nb": 169,
            "steps": [
                {
                    "command": [
                        "intros J P.",
                        "VernacExtend",
                        "5daaf05ad0206d0c329fb00a2ad32e7df58a30cd"
                    ]
                },
                {
                    "command": [
                        "cofix c.",
                        "VernacExtend",
                        "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
                    ]
                },
                {
                    "command": [
                        "intros [x s] al.",
                        "VernacExtend",
                        "edcfe60de682d2f9553ddbb1a3f733e7b8e195a1"
                    ]
                },
                {
                    "command": [
                        "apply R_tl.",
                        "VernacExtend",
                        "802456d3de13dd02b156b2c090e45bc64943d1eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply always_now in al.",
                        "VernacExtend",
                        "0e793b6c665b75b90c85db26b4d95054dab97a29"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply c.",
                        "VernacExtend",
                        "8bfc1f1e5a5fc1a5b698b6028b6f0aa9c3b12f6d"
                    ]
                },
                {
                    "command": [
                        "apply always_invar in al.",
                        "VernacExtend",
                        "87a0c903244f7a536f1ce3eb86ca30a1aada3c86"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_inf_often",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "intros P.",
                        "VernacExtend",
                        "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
                    ]
                },
                {
                    "command": [
                        "cofix f.",
                        "VernacExtend",
                        "15914e0cf39e3a4e626e8ea123702e166e00137f"
                    ]
                },
                {
                    "command": [
                        "intros s a.",
                        "VernacExtend",
                        "ad7fb1a2c4eb7ea9ef9317afb3869448eb89cdf5"
                    ]
                },
                {
                    "command": [
                        "destruct a.",
                        "VernacExtend",
                        "3f53f61a7882a1bcc65ff705b5afc6c02a0dddf5"
                    ]
                },
                {
                    "command": [
                        "constructor.",
                        "VernacExtend",
                        "3c77e6be855b5086df5e918bf2a0537e1010479a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor 1.",
                        "VernacExtend",
                        "08a5b9fd59ad59b27ce13f998c760c4014bfab97"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply f.",
                        "VernacExtend",
                        "851094a1006a80f6de4b5f5d7bde0265b1f2aa77"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_continuously",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "intros P s alP.",
                        "VernacExtend",
                        "91c61667da83fac35d62d1de934e636e9d836c52"
                    ]
                },
                {
                    "command": [
                        "apply E0.",
                        "VernacExtend",
                        "df471c57e9be53f9f7938e8848fb9d5a51ccfc24"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weak_until_Cons",
            "line_nb": 201,
            "steps": [
                {
                    "command": [
                        "intros x s J P un.",
                        "VernacExtend",
                        "d893207011d653e1772f866c31be3883a18430ab"
                    ]
                },
                {
                    "command": [
                        "change (P (Cons x s) \\/ (J (Cons x s) /\\ weak_until J P (tl (Cons x s)))).",
                        "VernacExtend",
                        "40684afc7019d3a63aff5435149b30e262466004"
                    ]
                },
                {
                    "command": [
                        "destruct un; intuition.",
                        "VernacExtend",
                        "ec0e40b253f0333d43bf495d4f5539a8c5448393"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weak_until_always",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "cofix cf.",
                        "VernacExtend",
                        "2223d6590abe75c4110c64eec6185c896db38177"
                    ]
                },
                {
                    "command": [
                        "intros J J' P s Hweak Halways.",
                        "VernacExtend",
                        "eae4fdab1d6257e950295efad7441f4717717f96"
                    ]
                },
                {
                    "command": [
                        "destruct s.",
                        "VernacExtend",
                        "25b900e268e7851d959aa45edce33af62b3fca65"
                    ]
                },
                {
                    "command": [
                        "inversion Hweak.",
                        "VernacExtend",
                        "d1f47580b6614f5440825dad5b6c64696a64af29"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "now eauto using W0.",
                        "VernacExtend",
                        "5ae70c5acf82547abfd810888967acbfc6763b75"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "inversion Halways.",
                        "VernacExtend",
                        "b75dd13a67bb0a692434f6824cf818af4a2f4444"
                    ]
                },
                {
                    "command": [
                        "eapply W_tl.",
                        "VernacExtend",
                        "2e0257febe3a8b364cb2a1bc86b690c736bee329"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "now unfold and_tl.",
                        "VernacExtend",
                        "de854ec3050424aed596683b0574c657c0e2f224"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "now eauto.",
                        "VernacExtend",
                        "e7df581db5ab113b3d1e7800d56a5e3e3c22071c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "until_weak_until",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "intros J P s un.",
                        "VernacExtend",
                        "0b8775c9bbf24d523807b8be1b3c4494b546b786"
                    ]
                },
                {
                    "command": [
                        "induction un.",
                        "VernacExtend",
                        "68e23346dfed3471d68789a2faab11796ab7bc36"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply W0.",
                        "VernacExtend",
                        "ea4ea4288f6a583e4eed37fcff4ec5bd5bd664d0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply W_tl; trivial.",
                        "VernacExtend",
                        "cdd3dcc3d704457f325ffe67bbd8be9b0ea9abfb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eventually_Cons",
            "line_nb": 231,
            "steps": [
                {
                    "command": [
                        "intros x s P al.",
                        "VernacExtend",
                        "0320c2ab7355affc526686f45f46d33900b8adc1"
                    ]
                },
                {
                    "command": [
                        "change (P (Cons x s) \\/ eventually P (tl (Cons x s))).",
                        "VernacExtend",
                        "033cddd83f9b2fc25f5e9a41e1b461ef747d6720"
                    ]
                },
                {
                    "command": [
                        "case al; auto.",
                        "VernacExtend",
                        "028bd3ab9f196d616d39ee5ae254cb49330bf335"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eventually_trans",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "intros P Q inv is_inv PeQ s invs ev.",
                        "VernacExtend",
                        "c67e2ee7af6d4ca320c9fdf0a307a87458f8fdbe"
                    ]
                },
                {
                    "command": [
                        "induction ev as [s Ps | x s ev IHev].",
                        "VernacExtend",
                        "26c9bda0d335998ec80c4b89721b481ffcdf2bcb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply PeQ; assumption.",
                        "VernacExtend",
                        "97ae5671e585c0ddb9d8c2aadb8c501b2d735e69"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor 2.",
                        "VernacExtend",
                        "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
                    ]
                },
                {
                    "command": [
                        "apply IHev.",
                        "VernacExtend",
                        "1879c8abdff3fe90a2a14bc650a2f429d90efb69"
                    ]
                },
                {
                    "command": [
                        "apply is_inv with x; assumption.",
                        "VernacExtend",
                        "01edefb439248523776a60518bbced7683e59ae3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_eventually",
            "line_nb": 246,
            "steps": [
                {
                    "command": [
                        "intros P x s evCP evP.",
                        "VernacExtend",
                        "b8314a96a2560e27455186597fd28efb9b4e5b8b"
                    ]
                },
                {
                    "command": [
                        "contradict evCP.",
                        "VernacExtend",
                        "140479bfe4de7a35603bd631cdbdbe3f3d7d8cb1"
                    ]
                },
                {
                    "command": [
                        "apply E_next.",
                        "VernacExtend",
                        "94ef81f1740a77599e7f9def4b266f10d437a7fb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eventually_next",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "intros e P ev.",
                        "VernacExtend",
                        "bf9661634368dd7d265644d6bbc7c0e7cc631ddc"
                    ]
                },
                {
                    "command": [
                        "induction ev as [(x, s) Ps | x s ev induc_hyp].",
                        "VernacExtend",
                        "647d9413908305951831250356d8fcda5270d858"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor 2; constructor 1; exact Ps.",
                        "VernacExtend",
                        "c2d6a1133654198c16122bec76991c8348a53e87"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor 2.",
                        "VernacExtend",
                        "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
                    ]
                },
                {
                    "command": [
                        "apply induc_hyp.",
                        "VernacExtend",
                        "b4803fad9f990958e0b12cdefa5e53a012d97458"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eventually_always_cumul",
            "line_nb": 261,
            "steps": [
                {
                    "command": [
                        "induction 1 as [s Ps | x s evPs induc_hyp]; intro al.",
                        "VernacExtend",
                        "40743512888c7d48922560668de133f58caa9cbf"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor 1.",
                        "VernacExtend",
                        "08a5b9fd59ad59b27ce13f998c760c4014bfab97"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor 2.",
                        "VernacExtend",
                        "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
                    ]
                },
                {
                    "command": [
                        "apply induc_hyp.",
                        "VernacExtend",
                        "b4803fad9f990958e0b12cdefa5e53a012d97458"
                    ]
                },
                {
                    "command": [
                        "eapply always_invar; eauto.",
                        "VernacExtend",
                        "2c3f611570517eb9705b4c274aea36a94565ec2a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eventually_weak_until_cumul",
            "line_nb": 271,
            "steps": [
                {
                    "command": [
                        "intros s P J ev.",
                        "VernacExtend",
                        "83c521ac1ecf6f934bf6a801ca1bb62a0fcef270"
                    ]
                },
                {
                    "command": [
                        "induction ev as [s Ps | x s evPs induc_hyp].",
                        "VernacExtend",
                        "9a9810f521306b5de910ab62d10438fcf3df6306"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro un.",
                        "VernacExtend",
                        "b0350d879a7ccd503e783455fa3c910dd41df554"
                    ]
                },
                {
                    "command": [
                        "constructor 1.",
                        "VernacExtend",
                        "08a5b9fd59ad59b27ce13f998c760c4014bfab97"
                    ]
                },
                {
                    "command": [
                        "split; assumption.",
                        "VernacExtend",
                        "2ecbdbd450c44f0ef15650763b06c29c7eb74a28"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro unxs.",
                        "VernacExtend",
                        "1b2f130f124834d19c46757d70af9a21f234a96d"
                    ]
                },
                {
                    "command": [
                        "case (weak_until_Cons _ _ _ _ unxs).",
                        "VernacExtend",
                        "099ef38f52885d06ed3db452d1c003f5fecb7619"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intro Pxs.",
                        "VernacExtend",
                        "ea9a30640782249053268cc955c916e5b8d45072"
                    ]
                },
                {
                    "command": [
                        "constructor 1; split; assumption.",
                        "VernacExtend",
                        "a9f6fd8296e6e3f2d6f8cf127f663474cade2d9f"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros (_, uns).",
                        "VernacExtend",
                        "7ad2573ee895f7a261dc7f1329d050f0adc3e768"
                    ]
                },
                {
                    "command": [
                        "constructor 2.",
                        "VernacExtend",
                        "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
                    ]
                },
                {
                    "command": [
                        "apply induc_hyp.",
                        "VernacExtend",
                        "b4803fad9f990958e0b12cdefa5e53a012d97458"
                    ]
                },
                {
                    "command": [
                        "exact uns.",
                        "VernacExtend",
                        "78257a622c2ece6cc493077abf743f0c9b5e380a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weak_until_eventually",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "intros P Q J impl s Js J_weak_until_Q ev.",
                        "VernacExtend",
                        "456e38575bca723d87c507566d5dff27c8d8d947"
                    ]
                },
                {
                    "command": [
                        "genclear J_weak_until_Q; genclear Js.",
                        "VernacExtend",
                        "5b99ccbb09f199391869c14d5096f1509ead9859"
                    ]
                },
                {
                    "command": [
                        "induction ev as [s Ps | x s ev induc_hyp].",
                        "VernacExtend",
                        "0d472e528964e380d6065fc8cf9ea92e0f030abd"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros Js J_weak_until_Q.",
                        "VernacExtend",
                        "ea97569b2a75e908e8b215aa62cd86e58a2cbce4"
                    ]
                },
                {
                    "command": [
                        "constructor 1.",
                        "VernacExtend",
                        "08a5b9fd59ad59b27ce13f998c760c4014bfab97"
                    ]
                },
                {
                    "command": [
                        "apply impl; assumption.",
                        "VernacExtend",
                        "d1db6fa8536d4d4be4866953e76fb9c50e13490c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros _ J_weak_until_Q.",
                        "VernacExtend",
                        "7dd9350e517de3ce9b939c81a00a85aa86f9e8cc"
                    ]
                },
                {
                    "command": [
                        "cut (s = tl (Cons x s)); [idtac | reflexivity].",
                        "VernacExtend",
                        "a750411b767d9438311567093a1b4d545198f13c"
                    ]
                },
                {
                    "command": [
                        "case J_weak_until_Q; clear J_weak_until_Q x.",
                        "VernacExtend",
                        "40f8c78a89e1ce3ebf6a239c3ca466b59c5bfaeb"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "constructor 1; assumption.",
                        "VernacExtend",
                        "f84672d84299f2633ec8efc6293368ade37330b7"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros (x, s1) _ J_weak_until_Q e; simpl in *.",
                        "VernacExtend",
                        "5dca1ea7f92359a92cfcfdc4ab6187fb5c958e0f"
                    ]
                },
                {
                    "command": [
                        "constructor 2.",
                        "VernacExtend",
                        "3bbfaccba5e1a5a8e417cf2575e634e4c10773fe"
                    ]
                },
                {
                    "command": [
                        "generalize e J_weak_until_Q; clear e x.",
                        "VernacExtend",
                        "7784679c23944609c831d6e0497dbdb82e34c6a2"
                    ]
                },
                {
                    "command": [
                        "case J_weak_until_Q; clear J_weak_until_Q s1.",
                        "VernacExtend",
                        "51f17c3a191c6183931852d1b76cb765654133de"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "clearall.",
                        "VernacExtend",
                        "9581efd4cea98813ebea77b3d3117d978c6981a7"
                    ]
                },
                {
                    "command": [
                        "constructor 1; assumption.",
                        "VernacExtend",
                        "f84672d84299f2633ec8efc6293368ade37330b7"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "intros s2 Js2 _ e J_weak_until_Q2.",
                        "VernacExtend",
                        "83bac69f72ad4533529e4eac954abf8090f943fc"
                    ]
                },
                {
                    "command": [
                        "rewrite e in induc_hyp; clear e.",
                        "VernacExtend",
                        "c9b083d51c37c3376cacc9832ab585092b7e7513"
                    ]
                },
                {
                    "command": [
                        "apply induc_hyp; assumption.",
                        "VernacExtend",
                        "7c700b12c61f02f6ad8c2825bc9a973bf037a0fa"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eventually_or_tl_intror",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "induction 1; firstorder using E0, E_next.",
                        "VernacExtend",
                        "c6057841043a3b5f237700b221b0ac94d1c51662"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eventually_or_tl_introl",
            "line_nb": 320,
            "steps": [
                {
                    "command": [
                        "induction 1; firstorder using E0, E_next.",
                        "VernacExtend",
                        "c6057841043a3b5f237700b221b0ac94d1c51662"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eventually_or_tl_or",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "induction 1; firstorder using E0, E_next.",
                        "VernacExtend",
                        "c6057841043a3b5f237700b221b0ac94d1c51662"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "until_Cons",
            "line_nb": 326,
            "steps": [
                {
                    "command": [
                        "intros x s J P ul.",
                        "VernacExtend",
                        "ff4cc8d869bf7e2d6a0487212c3e3d4d7f9fc435"
                    ]
                },
                {
                    "command": [
                        "change (P (Cons x s) \\/ (J (Cons x s) /\\ until J P (tl (Cons x s)))).",
                        "VernacExtend",
                        "7a86ba7fc372b3a6689e2548dc094061994b91b5"
                    ]
                },
                {
                    "command": [
                        "case ul; auto.",
                        "VernacExtend",
                        "2280a17e521f735de64c383e0fe472f0ad54ff52"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "until_eventually",
            "line_nb": 331,
            "steps": [
                {
                    "command": [
                        "intros P J s unP.",
                        "VernacExtend",
                        "be778f3dd8589214b62a49ca5db9a6a3842fc5f7"
                    ]
                },
                {
                    "command": [
                        "induction unP.",
                        "VernacExtend",
                        "57791b394b3ced1a0dcf4fd613c113bf72ea92f1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply E0; assumption.",
                        "VernacExtend",
                        "305a45fdc4968f0a47722d8b8da8ea7cbc92ab24"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply E_next; assumption.",
                        "VernacExtend",
                        "2b9c5babf25e8d0d2f6f26c6e8adc8f8a715a6f6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "release_Cons",
            "line_nb": 339,
            "steps": [
                {
                    "command": [
                        "intros x s J P rl.",
                        "VernacExtend",
                        "8df1a4593ecf450e2e918f5a7d6a6f622a90944f"
                    ]
                },
                {
                    "command": [
                        "change (P (Cons x s) /\\ (J (Cons x s) \\/ release J P (tl (Cons x s)))).",
                        "VernacExtend",
                        "ea41ec2ec5161d9156d00c931d70d9a11589bdc1"
                    ]
                },
                {
                    "command": [
                        "destruct rl; intuition.",
                        "VernacExtend",
                        "40856463f00a2b27367136e00109eb804d49ea20"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inf_often_invar",
            "line_nb": 344,
            "steps": [
                {
                    "command": [
                        "intros x s P; apply always_invar.",
                        "VernacExtend",
                        "64f7f60bb9873eb43de437243c21a1c1eba02fac"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuously_invar",
            "line_nb": 347,
            "steps": [
                {
                    "command": [
                        "intros x s P cny.",
                        "VernacExtend",
                        "792f02d6da3903ebebfafe21b0f9345d5f3f43f3"
                    ]
                },
                {
                    "command": [
                        "apply eventually_Cons in cny.",
                        "VernacExtend",
                        "ca14a5cfc935df9772be1fb1fc78473986f8aaba"
                    ]
                },
                {
                    "command": [
                        "case cny; trivial.",
                        "VernacExtend",
                        "84d094a8f7d08e7ee8464227cc41833cc3b072bf"
                    ]
                },
                {
                    "command": [
                        "intro alP.",
                        "VernacExtend",
                        "5005ed02f7b0d60cb95e20f46a3fdaac43ea3348"
                    ]
                },
                {
                    "command": [
                        "apply E0.",
                        "VernacExtend",
                        "df471c57e9be53f9f7938e8848fb9d5a51ccfc24"
                    ]
                },
                {
                    "command": [
                        "apply always_invar in alP; assumption.",
                        "VernacExtend",
                        "e4d0649cf44af812213b25f37a5b31d62c549d07"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuously_and_tl",
            "line_nb": 355,
            "steps": [
                {
                    "command": [
                        "intros P Q s cnyP.",
                        "VernacExtend",
                        "a3c9df7da0487bf2fc67e538c02c59c938e5497f"
                    ]
                },
                {
                    "command": [
                        "induction cnyP as [s alP|].",
                        "VernacExtend",
                        "62f20927e93974f24355617ee0c59f34f9505195"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro cnyQ.",
                        "VernacExtend",
                        "891b41ffa44ef6930c38041480d4749342e44a85"
                    ]
                },
                {
                    "command": [
                        "induction cnyQ.",
                        "VernacExtend",
                        "a29e86315797e42dd47aff4679657d55e8665f6b"
                    ]
                },
                {
                    "command": [
                        "apply E0.",
                        "VernacExtend",
                        "df471c57e9be53f9f7938e8848fb9d5a51ccfc24"
                    ]
                },
                {
                    "command": [
                        "apply always_and_tl; trivial.",
                        "VernacExtend",
                        "836d5afec33b8c15b4203e1ba9a8da71aba11aa6"
                    ]
                },
                {
                    "command": [
                        "apply E_next.",
                        "VernacExtend",
                        "94ef81f1740a77599e7f9def4b266f10d437a7fb"
                    ]
                },
                {
                    "command": [
                        "apply IHcnyQ.",
                        "VernacExtend",
                        "10c3ccefcfb293fea5737cd6dc0f474be649a2e9"
                    ]
                },
                {
                    "command": [
                        "apply always_invar in alP; assumption.",
                        "VernacExtend",
                        "e4d0649cf44af812213b25f37a5b31d62c549d07"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro cnyQ.",
                        "VernacExtend",
                        "891b41ffa44ef6930c38041480d4749342e44a85"
                    ]
                },
                {
                    "command": [
                        "apply E_next.",
                        "VernacExtend",
                        "94ef81f1740a77599e7f9def4b266f10d437a7fb"
                    ]
                },
                {
                    "command": [
                        "apply IHcnyP.",
                        "VernacExtend",
                        "d52ffea4e21be66e69921a7d6297d30ff017b3ca"
                    ]
                },
                {
                    "command": [
                        "apply continuously_invar in cnyQ; assumption.",
                        "VernacExtend",
                        "7a289daa6480443670848bd5d4dfd0658ff29978"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuously_inf_often",
            "line_nb": 372,
            "steps": [
                {
                    "command": [
                        "intros P.",
                        "VernacExtend",
                        "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
                    ]
                },
                {
                    "command": [
                        "cofix c.",
                        "VernacExtend",
                        "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
                    ]
                },
                {
                    "command": [
                        "intros s cnyP.",
                        "VernacExtend",
                        "b762e3241021e606a9b97f4cf118f376380a8f1d"
                    ]
                },
                {
                    "command": [
                        "induction cnyP.",
                        "VernacExtend",
                        "40239d6bea19218cb634bc1b4a7cc9ab6b10752a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply always_inf_often.",
                        "VernacExtend",
                        "0524a27e4ccf3b5380d1073e551685a2ce5730b0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply Always.",
                        "VernacExtend",
                        "c743b0ca9a7ea8b9b680618f731bd37f3dfd95f5"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply E_next.",
                        "VernacExtend",
                        "94ef81f1740a77599e7f9def4b266f10d437a7fb"
                    ]
                },
                {
                    "command": [
                        "destruct s as [s x'].",
                        "VernacExtend",
                        "87d01ca84bb68794b2e1142baaabb0c347ca6eb5"
                    ]
                },
                {
                    "command": [
                        "apply always_now in IHcnyP.",
                        "VernacExtend",
                        "1acdbd864bce5930f6b131a32e1f5686c143b942"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply IHcnyP.",
                        "VernacExtend",
                        "d52ffea4e21be66e69921a7d6297d30ff017b3ca"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "now_monotonic",
            "line_nb": 390,
            "steps": [
                {
                    "command": [
                        "intros P Q PQ (x, s) nP; simpl.",
                        "VernacExtend",
                        "b83d90c29cf614f8e89a31a9e2d287ac3963c392"
                    ]
                },
                {
                    "command": [
                        "apply PQ.",
                        "VernacExtend",
                        "713dddfb6e67d4999aa5e6d207dd3fcee2b9e29c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "next_monotonic",
            "line_nb": 395,
            "steps": [
                {
                    "command": [
                        "intros P Q PQ [x s]; apply PQ.",
                        "VernacExtend",
                        "6e075622cb60340474b6267cc9fdaa136bf50946"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "consecutive_monotonic",
            "line_nb": 398,
            "steps": [
                {
                    "command": [
                        "intros P Q PQ (x, (y, s)) nP; simpl.",
                        "VernacExtend",
                        "5c5b980ccbff71f0cb04575ffb13e0cc8a5b41ba"
                    ]
                },
                {
                    "command": [
                        "apply PQ.",
                        "VernacExtend",
                        "713dddfb6e67d4999aa5e6d207dd3fcee2b9e29c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_monotonic",
            "line_nb": 403,
            "steps": [
                {
                    "command": [
                        "intros P Q PQ.",
                        "VernacExtend",
                        "b641e470a7192b720b3c9e86e087e35f28edecfe"
                    ]
                },
                {
                    "command": [
                        "cofix cf.",
                        "VernacExtend",
                        "2223d6590abe75c4110c64eec6185c896db38177"
                    ]
                },
                {
                    "command": [
                        "intros(x, s) a.",
                        "VernacExtend",
                        "dd9c368cefe66cb7e95840341065df773207784e"
                    ]
                },
                {
                    "command": [
                        "generalize (always_Cons x s P a); simpl; intros (a1, a2).",
                        "VernacExtend",
                        "a1d80351df01575c7fb675d90ebad599b8e52fe6"
                    ]
                },
                {
                    "command": [
                        "constructor; simpl.",
                        "VernacExtend",
                        "dedfc8791248d9f0998b0bf2378e59b81a2e0146"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply PQ.",
                        "VernacExtend",
                        "713dddfb6e67d4999aa5e6d207dd3fcee2b9e29c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply cf.",
                        "VernacExtend",
                        "854ae6f0755d8ae82882825b8b225848a6534503"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weak_until_monotonic",
            "line_nb": 416,
            "steps": [
                {
                    "command": [
                        "intros P Q J K PQ JK.",
                        "VernacExtend",
                        "39fd5ef980f67ede49a06f2e0de4e3cc58b52f61"
                    ]
                },
                {
                    "command": [
                        "cofix cf.",
                        "VernacExtend",
                        "2223d6590abe75c4110c64eec6185c896db38177"
                    ]
                },
                {
                    "command": [
                        "intros(x, s) un.",
                        "VernacExtend",
                        "f504c4bba28a931b4d834c6aa4662b4b48624078"
                    ]
                },
                {
                    "command": [
                        "generalize (weak_until_Cons x s J P un); simpl.",
                        "VernacExtend",
                        "63d20204a1f68385b5e50e968d6a251953d0bb11"
                    ]
                },
                {
                    "command": [
                        "intros [Pxs | (Jxs, uns)].",
                        "VernacExtend",
                        "805f1aa1a2386335ce8ba0e95df3f329a16e9f1f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor 1; simpl; auto.",
                        "VernacExtend",
                        "c093670f2067efbb8e461b3096e78d66998a2e90"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "constructor 2; simpl; auto.",
                        "VernacExtend",
                        "c2d582d0932bf40234ae0dd347a6c007cdb51fa0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "until_monotonic",
            "line_nb": 427,
            "steps": [
                {
                    "command": [
                        "intros P Q J K PQ JK s unJP.",
                        "VernacExtend",
                        "df50f05ba16bfc50836216a421fed7da84af3839"
                    ]
                },
                {
                    "command": [
                        "induction unJP.",
                        "VernacExtend",
                        "fd9a83432d9f610542c9956d5db3808877faf354"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply U0, PQ; assumption.",
                        "VernacExtend",
                        "d27e3b1f353fd257494a26f911de15792db7bea9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply U_next.",
                        "VernacExtend",
                        "5e6ca6fcba195257e296c0c468a1e66b47d97d3e"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply JK; assumption.",
                        "VernacExtend",
                        "3713fdca640643895dfa0b70a159d83e33f096c1"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "release_monotonic",
            "line_nb": 439,
            "steps": [
                {
                    "command": [
                        "intros P Q J K PQ JK.",
                        "VernacExtend",
                        "39fd5ef980f67ede49a06f2e0de4e3cc58b52f61"
                    ]
                },
                {
                    "command": [
                        "cofix cf.",
                        "VernacExtend",
                        "2223d6590abe75c4110c64eec6185c896db38177"
                    ]
                },
                {
                    "command": [
                        "intros [x s] rl.",
                        "VernacExtend",
                        "a99c14ad7c42bec67102ffa53febeef9168a26a9"
                    ]
                },
                {
                    "command": [
                        "generalize (release_Cons x s J P rl); simpl.",
                        "VernacExtend",
                        "581e1880c691ed56246f448bed967a76aa748605"
                    ]
                },
                {
                    "command": [
                        "intros [Pxs rlCJP].",
                        "VernacExtend",
                        "5c73049745ccf076a833a15b18a0018a2ad426e1"
                    ]
                },
                {
                    "command": [
                        "case rlCJP; intros rlJP.",
                        "VernacExtend",
                        "a24f1303b29400d0461d137d1a3d316916c059db"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply R0.",
                        "VernacExtend",
                        "b6b918557d922367c776470dbb50ea3f3a73e1cc"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply PQ; assumption.",
                        "VernacExtend",
                        "e8bf029651424df840891dcfb0c9b0811ac55e9d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply JK; assumption.",
                        "VernacExtend",
                        "3713fdca640643895dfa0b70a159d83e33f096c1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply R_tl.",
                        "VernacExtend",
                        "802456d3de13dd02b156b2c090e45bc64943d1eb"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply PQ; assumption.",
                        "VernacExtend",
                        "e8bf029651424df840891dcfb0c9b0811ac55e9d"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "apply cf.",
                        "VernacExtend",
                        "854ae6f0755d8ae82882825b8b225848a6534503"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eventually_monotonic",
            "line_nb": 461,
            "steps": [
                {
                    "command": [
                        "intros P Q J is_inv JPQ s Js ev.",
                        "VernacExtend",
                        "c91b5c38ec48362d5c5f082534ebd78e25416c45"
                    ]
                },
                {
                    "command": [
                        "apply (eventually_trans P Q J is_inv); try assumption.",
                        "VernacExtend",
                        "80f76674e298dbd1c2396b7c14b3697f886fbc7c"
                    ]
                },
                {
                    "command": [
                        "intros; constructor 1.",
                        "VernacExtend",
                        "76bba1421ec0d3aa56b3795d57a8d7709fe21231"
                    ]
                },
                {
                    "command": [
                        "apply JPQ; assumption.",
                        "VernacExtend",
                        "85c9402df4a96b2405f105b481338c47c0ca09fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eventually_monotonic_simple",
            "line_nb": 467,
            "steps": [
                {
                    "command": [
                        "intros P Q PQ s.",
                        "VernacExtend",
                        "9da989787132ecb2be596a814d70bd6d5e625107"
                    ]
                },
                {
                    "command": [
                        "apply (eventually_monotonic P Q True_tl); auto.",
                        "VernacExtend",
                        "93090de11d615b7708e2520015c74dc0344fbea4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inf_often_monotonic",
            "line_nb": 471,
            "steps": [
                {
                    "command": [
                        "intros P Q impl.",
                        "VernacExtend",
                        "0d513d60957d2b2b0e2cd27b16370c55011898e6"
                    ]
                },
                {
                    "command": [
                        "apply always_monotonic.",
                        "VernacExtend",
                        "3a8fd3d197e443f0aabfd20027d7e3ea9653576b"
                    ]
                },
                {
                    "command": [
                        "apply eventually_monotonic_simple.",
                        "VernacExtend",
                        "63090bba6b56757aedc1047b9f71c27124e876df"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cumul_eventually_always",
            "line_nb": 477,
            "steps": [
                {
                    "command": [
                        "intros until 1.",
                        "VernacExtend",
                        "02a88d708d00fec9315af96f54c66efbe80acead"
                    ]
                },
                {
                    "command": [
                        "intro H_eventually.",
                        "VernacExtend",
                        "ea65d99789382b5d054c7ae8f51b750733e314fc"
                    ]
                },
                {
                    "command": [
                        "induction H_eventually.",
                        "VernacExtend",
                        "95c21aeb5fc5f08099cbed85d39477c557588bbb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply E0.",
                        "VernacExtend",
                        "df471c57e9be53f9f7938e8848fb9d5a51ccfc24"
                    ]
                },
                {
                    "command": [
                        "destruct s.",
                        "VernacExtend",
                        "25b900e268e7851d959aa45edce33af62b3fca65"
                    ]
                },
                {
                    "command": [
                        "firstorder using always_Cons.",
                        "VernacExtend",
                        "ad524a7b73e0ac345d27c3a841487353ac85ca21"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eauto using E_next, always_invar.",
                        "VernacExtend",
                        "5ee5225ab57ac30863efc2b07b703fe2d0878947"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cumul_inf_often_always",
            "line_nb": 488,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply always_monotonic with (P := always P /\\_ eventually Q) (Q := eventually (P /\\_ Q)).",
                        "VernacExtend",
                        "62d26183cc2efb6ad545d8ec9ad1a68364622852"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold and_tl in * |-.",
                        "VernacExtend",
                        "0ce4bd7b610accc0b89ecffe3cef8cbf9b1b7cc9"
                    ]
                },
                {
                    "command": [
                        "firstorder using cumul_eventually_always.",
                        "VernacExtend",
                        "b4d02d5c1001cded664ab6c9936aaddd983d4734"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply always_and_tl; eauto using always_always.",
                        "VernacExtend",
                        "3703f402a2a30046eb70007269d8cab0be7142af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inf_often_monotonic_invar",
            "line_nb": 498,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "eapply inf_often_monotonic with (P:=invariant /\\_ P).",
                        "VernacExtend",
                        "37daaab8cc412c229246dad362b8b8c928ae5ad6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "unfold and_tl in *; firstorder.",
                        "VernacExtend",
                        "f124864edc4a0be3c64ba7271a4d96e5915791f1"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "eapply cumul_inf_often_always; eauto.",
                        "VernacExtend",
                        "198b60b5f8658b55bcdd8a643480896e61f2ea0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuously_monotonic",
            "line_nb": 507,
            "steps": [
                {
                    "command": [
                        "intros P Q impl.",
                        "VernacExtend",
                        "0d513d60957d2b2b0e2cd27b16370c55011898e6"
                    ]
                },
                {
                    "command": [
                        "apply eventually_monotonic_simple.",
                        "VernacExtend",
                        "63090bba6b56757aedc1047b9f71c27124e876df"
                    ]
                },
                {
                    "command": [
                        "apply always_monotonic.",
                        "VernacExtend",
                        "3a8fd3d197e443f0aabfd20027d7e3ea9653576b"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_eventually_always_not",
            "line_nb": 513,
            "steps": [
                {
                    "command": [
                        "intros P.",
                        "VernacExtend",
                        "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
                    ]
                },
                {
                    "command": [
                        "cofix c.",
                        "VernacExtend",
                        "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
                    ]
                },
                {
                    "command": [
                        "intros s evP.",
                        "VernacExtend",
                        "d29d0ec9ec05a590c7e8ab7916fad0eb0be1db2f"
                    ]
                },
                {
                    "command": [
                        "destruct s as [e s].",
                        "VernacExtend",
                        "996a84297415d75ea87b5e18c1fffe4411d0dbd5"
                    ]
                },
                {
                    "command": [
                        "apply Always.",
                        "VernacExtend",
                        "c743b0ca9a7ea8b9b680618f731bd37f3dfd95f5"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold not_tl.",
                        "VernacExtend",
                        "7978b88f3e68a3c9d3d2ac0117cfb2c4bb7bf803"
                    ]
                },
                {
                    "command": [
                        "intro Pn.",
                        "VernacExtend",
                        "8c14c31cc46d9ff64418622e38307130fc1aee97"
                    ]
                },
                {
                    "command": [
                        "case evP.",
                        "VernacExtend",
                        "5540da822e125c1576033817cf4b0e4ed1b80d1e"
                    ]
                },
                {
                    "command": [
                        "apply E0.",
                        "VernacExtend",
                        "df471c57e9be53f9f7938e8848fb9d5a51ccfc24"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply c.",
                        "VernacExtend",
                        "8bfc1f1e5a5fc1a5b698b6028b6f0aa9c3b12f6d"
                    ]
                },
                {
                    "command": [
                        "intro evPn.",
                        "VernacExtend",
                        "c0f8f344ea67de3c88fd24f68a738a73f069842b"
                    ]
                },
                {
                    "command": [
                        "contradict evP.",
                        "VernacExtend",
                        "d2f500cc6b9c14462732a607b0b69cc90c3a343c"
                    ]
                },
                {
                    "command": [
                        "apply E_next.",
                        "VernacExtend",
                        "94ef81f1740a77599e7f9def4b266f10d437a7fb"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_not_eventually",
            "line_nb": 532,
            "steps": [
                {
                    "command": [
                        "intros P.",
                        "VernacExtend",
                        "b7f25699ae9b95130681b0bb1d6a1ed426670f72"
                    ]
                },
                {
                    "command": [
                        "intros s alP evP.",
                        "VernacExtend",
                        "a5c43b91234d2543c68ddc83dda6c24e11f2e452"
                    ]
                },
                {
                    "command": [
                        "induction evP.",
                        "VernacExtend",
                        "326e5bc45e205a1ac07d81b3720f554791a4bc1f"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct s as [e s].",
                        "VernacExtend",
                        "996a84297415d75ea87b5e18c1fffe4411d0dbd5"
                    ]
                },
                {
                    "command": [
                        "apply always_Cons in alP.",
                        "VernacExtend",
                        "64d80aa4cfb63fd9169e7fd61093a0366037ce61"
                    ]
                },
                {
                    "command": [
                        "destruct alP as [nP alP].",
                        "VernacExtend",
                        "ccbbe61fce4eb41d86b72dab2b1dc5b85ad9c939"
                    ]
                },
                {
                    "command": [
                        "unfold not_tl in nP.",
                        "VernacExtend",
                        "cca444a0cf5ca06ae931c4022506c3354cf7dcdc"
                    ]
                },
                {
                    "command": [
                        "contradict nP; assumption.",
                        "VernacExtend",
                        "9d3f7a650082e1752ab9ecc5b50ccca6fcea145b"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply always_invar in alP.",
                        "VernacExtend",
                        "7cd894d1e66c34076a3a45a5e0e12e41ee6d0cd8"
                    ]
                },
                {
                    "command": [
                        "contradict IHevP; assumption.",
                        "VernacExtend",
                        "94160a7926a741b63cfac82fb87e7b9a9655956b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eventually_not_always",
            "line_nb": 546,
            "steps": [
                {
                    "command": [
                        "intros P s eP alP.",
                        "VernacExtend",
                        "be060fd4c3d2a84d25071d979741adb796b06358"
                    ]
                },
                {
                    "command": [
                        "induction eP.",
                        "VernacExtend",
                        "0d5eee2bfba0ae30f1d5f9d8e6be367ce24a742d"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct s as [x s].",
                        "VernacExtend",
                        "22d25b59ca5df004e02ea0d2bfa9b8cce8165f12"
                    ]
                },
                {
                    "command": [
                        "unfold not_tl in H.",
                        "VernacExtend",
                        "6b6a03db6bdd1c497336502aeee29f237023bb3c"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply always_Cons in alP.",
                        "VernacExtend",
                        "64d80aa4cfb63fd9169e7fd61093a0366037ce61"
                    ]
                },
                {
                    "command": [
                        "destruct alP as [PC alP].",
                        "VernacExtend",
                        "dd0e0481595172332048dcaaa020100b51324fd0"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply always_invar in alP.",
                        "VernacExtend",
                        "7cd894d1e66c34076a3a45a5e0e12e41ee6d0cd8"
                    ]
                },
                {
                    "command": [
                        "contradict IHeP.",
                        "VernacExtend",
                        "587b8b2b1b1cfa21c5e9e06eca2f08c5b3900598"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weak_until_always_not_always",
            "line_nb": 561,
            "steps": [
                {
                    "command": [
                        "intros J P.",
                        "VernacExtend",
                        "5daaf05ad0206d0c329fb00a2ad32e7df58a30cd"
                    ]
                },
                {
                    "command": [
                        "cofix c.",
                        "VernacExtend",
                        "84529034ffeb9fcb4ac6205081da4ea491c1fcf5"
                    ]
                },
                {
                    "command": [
                        "intros s unJP alP.",
                        "VernacExtend",
                        "f6bf844576c107eaada02918ae8ab84416f5399e"
                    ]
                },
                {
                    "command": [
                        "destruct s as [e s].",
                        "VernacExtend",
                        "996a84297415d75ea87b5e18c1fffe4411d0dbd5"
                    ]
                },
                {
                    "command": [
                        "apply weak_until_Cons in unJP.",
                        "VernacExtend",
                        "17d2cfd40caa8933f3bf7cc34622364c4f8fb968"
                    ]
                },
                {
                    "command": [
                        "case unJP.",
                        "VernacExtend",
                        "3523da777f18af480b287efabff3abed5880e74f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro PC.",
                        "VernacExtend",
                        "629a1a040ce5560f5a313f1d1d1892c433417a6a"
                    ]
                },
                {
                    "command": [
                        "apply always_Cons in alP.",
                        "VernacExtend",
                        "64d80aa4cfb63fd9169e7fd61093a0366037ce61"
                    ]
                },
                {
                    "command": [
                        "destruct alP as [nP alP].",
                        "VernacExtend",
                        "ccbbe61fce4eb41d86b72dab2b1dc5b85ad9c939"
                    ]
                },
                {
                    "command": [
                        "unfold not_tl in nP.",
                        "VernacExtend",
                        "cca444a0cf5ca06ae931c4022506c3354cf7dcdc"
                    ]
                },
                {
                    "command": [
                        "contradict nP.",
                        "VernacExtend",
                        "138cf9beee700b04bccb97f61bbefed5fe4d8cec"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intros Jun.",
                        "VernacExtend",
                        "8e2fac68649fc3e5c909814f7d2de8439811d80c"
                    ]
                },
                {
                    "command": [
                        "destruct Jun as [JC unJPs].",
                        "VernacExtend",
                        "3fa998f67b77a3c34501d85198475536514d266f"
                    ]
                },
                {
                    "command": [
                        "apply Always; trivial.",
                        "VernacExtend",
                        "33ea120fc883332bd01168e46e2a93395d512595"
                    ]
                },
                {
                    "command": [
                        "apply c; trivial.",
                        "VernacExtend",
                        "098cb28c71bc447627b396d229c12924a88782c1"
                    ]
                },
                {
                    "command": [
                        "apply always_invar in alP.",
                        "VernacExtend",
                        "7cd894d1e66c34076a3a45a5e0e12e41ee6d0cd8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weak_until_latch_eventually",
            "line_nb": 583,
            "steps": [
                {
                    "command": [
                        "intros P Q ex H_w.",
                        "VernacExtend",
                        "403006ac9a78875f03170daf14abdc6d374c89ca"
                    ]
                },
                {
                    "command": [
                        "induction 1; inversion H_w; firstorder using E0, E_next.",
                        "VernacExtend",
                        "58bd59f528547386a8d61635d09272662a33e8ad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "always_not_eventually_not",
            "line_nb": 587,
            "steps": [
                {
                    "command": [
                        "intros P s alP evP.",
                        "VernacExtend",
                        "e2abf7b6d7ae5896a2e7cbc038e8cfc1d1fe55cc"
                    ]
                },
                {
                    "command": [
                        "induction evP.",
                        "VernacExtend",
                        "326e5bc45e205a1ac07d81b3720f554791a4bc1f"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "unfold not_tl in H.",
                        "VernacExtend",
                        "6b6a03db6bdd1c497336502aeee29f237023bb3c"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "destruct s as [x s].",
                        "VernacExtend",
                        "22d25b59ca5df004e02ea0d2bfa9b8cce8165f12"
                    ]
                },
                {
                    "command": [
                        "apply always_now in alP.",
                        "VernacExtend",
                        "c10974998f5602da0227be2d3d40df4afc2afac5"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "contradict IHevP.",
                        "VernacExtend",
                        "b5f05c520662803b19b830cf92badd2393af3066"
                    ]
                },
                {
                    "command": [
                        "apply always_invar in alP.",
                        "VernacExtend",
                        "7cd894d1e66c34076a3a45a5e0e12e41ee6d0cd8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "continuously_not_inf_often",
            "line_nb": 601,
            "steps": [
                {
                    "command": [
                        "intros P s cnyP.",
                        "VernacExtend",
                        "d36baffa0025ca3521cf70568ed11bef6e85626a"
                    ]
                },
                {
                    "command": [
                        "induction cnyP.",
                        "VernacExtend",
                        "40239d6bea19218cb634bc1b4a7cc9ab6b10752a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct s as [e s].",
                        "VernacExtend",
                        "996a84297415d75ea87b5e18c1fffe4411d0dbd5"
                    ]
                },
                {
                    "command": [
                        "intros ifP.",
                        "VernacExtend",
                        "77192aa3d156f98f4d0ab19d890a18a3f1df8aa9"
                    ]
                },
                {
                    "command": [
                        "apply always_now in ifP.",
                        "VernacExtend",
                        "0d1a0b9d78343b393e076c655b8a8c1cbf6d1bc2"
                    ]
                },
                {
                    "command": [
                        "induction ifP.",
                        "VernacExtend",
                        "8e6dacc7c728f570b962bfe5757c052f29018e19"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct s0 as [e0 s0].",
                        "VernacExtend",
                        "4631458930b20492f66161b90d05c8636b9b3fd1"
                    ]
                },
                {
                    "command": [
                        "apply always_now in H.",
                        "VernacExtend",
                        "6b66db4ce7569faa669971fc4531cabd7ad5b92b"
                    ]
                },
                {
                    "command": [
                        "unfold not_tl in H.",
                        "VernacExtend",
                        "6b6a03db6bdd1c497336502aeee29f237023bb3c"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply always_invar in H.",
                        "VernacExtend",
                        "239d016999fceaff37d10d260933a516df1b835a"
                    ]
                },
                {
                    "command": [
                        "contradict IHifP.",
                        "VernacExtend",
                        "f735d24edb4304fb3ab1c0d7952e1877b65077ec"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "intro ioP.",
                        "VernacExtend",
                        "ccba950a68bf581957606d98396061c605f123fc"
                    ]
                },
                {
                    "command": [
                        "apply always_invar in ioP.",
                        "VernacExtend",
                        "d23bc0ebab950a88f7bac549ef850fff35ba2470"
                    ]
                },
                {
                    "command": [
                        "contradict IHcnyP.",
                        "VernacExtend",
                        "eac1648f52b15b7fc687b10f7906cb1962b22fe2"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inf_often_not_continuously",
            "line_nb": 625,
            "steps": [
                {
                    "command": [
                        "intros P s ioP cnyP.",
                        "VernacExtend",
                        "b04dc903a22151363c45b131a31689aee626b8af"
                    ]
                },
                {
                    "command": [
                        "induction cnyP.",
                        "VernacExtend",
                        "40239d6bea19218cb634bc1b4a7cc9ab6b10752a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct s as [x s].",
                        "VernacExtend",
                        "22d25b59ca5df004e02ea0d2bfa9b8cce8165f12"
                    ]
                },
                {
                    "command": [
                        "apply always_now in ioP.",
                        "VernacExtend",
                        "0809134a7bcb730b13706fe9aa5b9ecc990e677d"
                    ]
                },
                {
                    "command": [
                        "induction ioP.",
                        "VernacExtend",
                        "00a3a33c14c27ccfb05567b9ebddf83eaa33be55"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "destruct s0 as [x' s0].",
                        "VernacExtend",
                        "2ad99be7b074a5112d8c2ec1f800874a5e230183"
                    ]
                },
                {
                    "command": [
                        "apply always_now in H.",
                        "VernacExtend",
                        "6b66db4ce7569faa669971fc4531cabd7ad5b92b"
                    ]
                },
                {
                    "command": [
                        "unfold not_tl in H0.",
                        "VernacExtend",
                        "f2dfe5ed10b0aec09290cd8df858ac77cb9c40ac"
                    ]
                },
                {
                    "command": [
                        "contradict H0.",
                        "VernacExtend",
                        "e9276d92c17ea182f1ef13aa74464b33eea923d9"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "apply always_invar in H.",
                        "VernacExtend",
                        "239d016999fceaff37d10d260933a516df1b835a"
                    ]
                },
                {
                    "command": [
                        "contradict IHioP.",
                        "VernacExtend",
                        "56e0d46a2fe334eb14ff52e58eab7240c59268b9"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply inf_often_invar in ioP.",
                        "VernacExtend",
                        "a33ccb6422ef63ab1ab833eab448d9eff41d7eeb"
                    ]
                },
                {
                    "command": [
                        "contradict IHcnyP.",
                        "VernacExtend",
                        "eac1648f52b15b7fc687b10f7906cb1962b22fe2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "release_not_until",
            "line_nb": 647,
            "steps": [
                {
                    "command": [
                        "intros J P s rl un.",
                        "VernacExtend",
                        "2659fd8ea7eb228078550e566cb5ed1e01c1c6f6"
                    ]
                },
                {
                    "command": [
                        "induction un as [s Ps |x s Js IHun IH].",
                        "VernacExtend",
                        "1a980be4ba3b267059cf8f38f31ae17a42fabbd2"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct s as [x s].",
                        "VernacExtend",
                        "22d25b59ca5df004e02ea0d2bfa9b8cce8165f12"
                    ]
                },
                {
                    "command": [
                        "unfold not_tl in Ps.",
                        "VernacExtend",
                        "e457466f60c8a838ce2386cdb79df312b98996d9"
                    ]
                },
                {
                    "command": [
                        "apply release_Cons in rl.",
                        "VernacExtend",
                        "ed94f88c28b802ed1cc276ee072a4c769d51d4c9"
                    ]
                },
                {
                    "command": [
                        "destruct rl as [Psr rl].",
                        "VernacExtend",
                        "a445a950755fb4e71b63fde98f00e24cc99b5b1f"
                    ]
                },
                {
                    "command": [
                        "contradict Ps.",
                        "VernacExtend",
                        "551f1b31a092a7d5c512b26c0d658f1a6615f9fe"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply release_Cons in rl.",
                        "VernacExtend",
                        "ed94f88c28b802ed1cc276ee072a4c769d51d4c9"
                    ]
                },
                {
                    "command": [
                        "destruct rl as [Ps rl].",
                        "VernacExtend",
                        "12bc46b4c33a0094636ea1fa11388eb09d13f7ee"
                    ]
                },
                {
                    "command": [
                        "unfold not_tl in Js.",
                        "VernacExtend",
                        "cd3a3efff4e19a5f4caa6e2540eec378a7669c13"
                    ]
                },
                {
                    "command": [
                        "case rl; trivial.",
                        "VernacExtend",
                        "9adb527c8dc587113d77f09bb1738ccfd5b968ec"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "until_not_release",
            "line_nb": 663,
            "steps": [
                {
                    "command": [
                        "intros J P s un rl.",
                        "VernacExtend",
                        "78b428c4c8704027211c786526ea2e0aa65e677d"
                    ]
                },
                {
                    "command": [
                        "induction un.",
                        "VernacExtend",
                        "68e23346dfed3471d68789a2faab11796ab7bc36"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct s as [x s].",
                        "VernacExtend",
                        "22d25b59ca5df004e02ea0d2bfa9b8cce8165f12"
                    ]
                },
                {
                    "command": [
                        "apply release_Cons in rl.",
                        "VernacExtend",
                        "ed94f88c28b802ed1cc276ee072a4c769d51d4c9"
                    ]
                },
                {
                    "command": [
                        "destruct rl as [Ps rl].",
                        "VernacExtend",
                        "12bc46b4c33a0094636ea1fa11388eb09d13f7ee"
                    ]
                },
                {
                    "command": [
                        "unfold not_tl in Ps.",
                        "VernacExtend",
                        "e457466f60c8a838ce2386cdb79df312b98996d9"
                    ]
                },
                {
                    "command": [
                        "contradict Ps.",
                        "VernacExtend",
                        "551f1b31a092a7d5c512b26c0d658f1a6615f9fe"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply release_Cons in rl.",
                        "VernacExtend",
                        "ed94f88c28b802ed1cc276ee072a4c769d51d4c9"
                    ]
                },
                {
                    "command": [
                        "destruct rl as [Ps rl].",
                        "VernacExtend",
                        "12bc46b4c33a0094636ea1fa11388eb09d13f7ee"
                    ]
                },
                {
                    "command": [
                        "case rl; trivial.",
                        "VernacExtend",
                        "9adb527c8dc587113d77f09bb1738ccfd5b968ec"
                    ]
                },
                {
                    "command": [
                        "unfold not_tl.",
                        "VernacExtend",
                        "7978b88f3e68a3c9d3d2ac0117cfb2c4bb7bf803"
                    ]
                },
                {
                    "command": [
                        "intros Js.",
                        "VernacExtend",
                        "102520ff11e6774a15dfbf2cc3a254eb805b053a"
                    ]
                },
                {
                    "command": [
                        "contradict Js.",
                        "VernacExtend",
                        "8b42f5665e1aaaee074e5011228cec7515edb9a6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "weak_until_not_until",
            "line_nb": 682,
            "steps": [
                {
                    "command": [
                        "intros J P s wu un.",
                        "VernacExtend",
                        "096d8472c6e3318028ce1e16f0936f7d4ed7b5c5"
                    ]
                },
                {
                    "command": [
                        "induction un.",
                        "VernacExtend",
                        "68e23346dfed3471d68789a2faab11796ab7bc36"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct s as [x s].",
                        "VernacExtend",
                        "22d25b59ca5df004e02ea0d2bfa9b8cce8165f12"
                    ]
                },
                {
                    "command": [
                        "apply weak_until_Cons in wu.",
                        "VernacExtend",
                        "e609be02603688ec6983060fb93c214ddd9815c8"
                    ]
                },
                {
                    "command": [
                        "case wu; unfold not_tl, and_tl.",
                        "VernacExtend",
                        "77da3d9ea97257619cb758713ca8b426e5ae0440"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros [Js Ps].",
                        "VernacExtend",
                        "fd9e39aa244c034d864a1bb78f01a64216336e78"
                    ]
                },
                {
                    "command": [
                        "contradict Ps.",
                        "VernacExtend",
                        "551f1b31a092a7d5c512b26c0d658f1a6615f9fe"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros [[Js Ps] wun].",
                        "VernacExtend",
                        "095a49ef76561a33d3ff3894b2a15573892576cf"
                    ]
                },
                {
                    "command": [
                        "contradict Ps.",
                        "VernacExtend",
                        "551f1b31a092a7d5c512b26c0d658f1a6615f9fe"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply weak_until_Cons in wu.",
                        "VernacExtend",
                        "e609be02603688ec6983060fb93c214ddd9815c8"
                    ]
                },
                {
                    "command": [
                        "case wu.",
                        "VernacExtend",
                        "3d5e98da3990e453f74744eab31143a605cb8d24"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "unfold not_tl, and_tl.",
                        "VernacExtend",
                        "1c6e1f995e853ab277f2fa8c69b3921f3651a415"
                    ]
                },
                {
                    "command": [
                        "intros [Js Ps].",
                        "VernacExtend",
                        "fd9e39aa244c034d864a1bb78f01a64216336e78"
                    ]
                },
                {
                    "command": [
                        "contradict Js.",
                        "VernacExtend",
                        "8b42f5665e1aaaee074e5011228cec7515edb9a6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros [[Js Ps] wun].",
                        "VernacExtend",
                        "095a49ef76561a33d3ff3894b2a15573892576cf"
                    ]
                },
                {
                    "command": [
                        "contradict IHun.",
                        "VernacExtend",
                        "172d902fddf6c4d9848a2bd54b07007cb84a0516"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "until_not_weak_until",
            "line_nb": 710,
            "steps": [
                {
                    "command": [
                        "intros J P s un wun.",
                        "VernacExtend",
                        "571ea6aaf948b3d5f494694c1f41d8c74db116f2"
                    ]
                },
                {
                    "command": [
                        "induction un as [s JPs | x s JPs IHun IH]; unfold not_tl, and_tl in JPs; destruct JPs as [Js Ps].",
                        "VernacExtend",
                        "81df1bca8f84aea77647628212b136c4044001c6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "destruct s as [x s].",
                        "VernacExtend",
                        "22d25b59ca5df004e02ea0d2bfa9b8cce8165f12"
                    ]
                },
                {
                    "command": [
                        "apply weak_until_Cons in wun.",
                        "VernacExtend",
                        "c8e093189b154c7c9b54f2c5cc63852fa8ed3178"
                    ]
                },
                {
                    "command": [
                        "case wun; trivial.",
                        "VernacExtend",
                        "0cb0753cdcaf1c8a2c8951e0a8a313cfddc57fc3"
                    ]
                },
                {
                    "command": [
                        "intros [JCs wu].",
                        "VernacExtend",
                        "9cf8f955d0f95bf726de97ebdec3e41b12305d74"
                    ]
                },
                {
                    "command": [
                        "contradict Js.",
                        "VernacExtend",
                        "8b42f5665e1aaaee074e5011228cec7515edb9a6"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply weak_until_Cons in wun.",
                        "VernacExtend",
                        "c8e093189b154c7c9b54f2c5cc63852fa8ed3178"
                    ]
                },
                {
                    "command": [
                        "case wun.",
                        "VernacExtend",
                        "62a40bc3b19f6fd79bd5e8aeeea8d14fcc381678"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros PCs.",
                        "VernacExtend",
                        "593606e4c253a310c6f0a400a77ac03e75363483"
                    ]
                },
                {
                    "command": [
                        "contradict Ps.",
                        "VernacExtend",
                        "551f1b31a092a7d5c512b26c0d658f1a6615f9fe"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "*",
                        "VernacBullet",
                        "8a329d054468e0c41ce333043e0978e30eed7b98"
                    ]
                },
                {
                    "command": [
                        "intros [JCs wu].",
                        "VernacExtend",
                        "9cf8f955d0f95bf726de97ebdec3e41b12305d74"
                    ]
                },
                {
                    "command": [
                        "contradict IH.",
                        "VernacExtend",
                        "c5c4302c0e18904950ab5f89f8035491521051a7"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_tl_comm",
            "line_nb": 732,
            "steps": [
                {
                    "command": [
                        "intros; split; unfold and_tl; apply and_comm.",
                        "VernacExtend",
                        "99bb9cb27a867fe359d3d717a4421314396c8d2b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_tl_assoc",
            "line_nb": 735,
            "steps": [
                {
                    "command": [
                        "intros; split; unfold and_tl; apply and_assoc.",
                        "VernacExtend",
                        "be91b0ea056e29cf8da35c83416b40d42f4b0792"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_tl_comm",
            "line_nb": 738,
            "steps": [
                {
                    "command": [
                        "intros; split; unfold or_tl; apply or_comm.",
                        "VernacExtend",
                        "4cb99a5f1d3d6e5dc3e80c4551f809f15067f61d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_tl_assoc",
            "line_nb": 741,
            "steps": [
                {
                    "command": [
                        "intros; split; unfold or_tl; apply or_assoc.",
                        "VernacExtend",
                        "371da30ab85c7d7c9db51f3837d7f698a56b6783"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_tl_or_tl",
            "line_nb": 744,
            "steps": [
                {
                    "command": [
                        "intros P Q s; unfold not_tl, and_tl, or_tl; split; [ intros PQs | intros [Ps Qs] PQs].",
                        "VernacExtend",
                        "05e717dabe25abef5a7bed8825ef87f9a1d195ea"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split; intro Ps; contradict PQs; [left|right]; assumption.",
                        "VernacExtend",
                        "b0d292252feff868bfb68d53f651a5baa374f284"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case PQs; assumption.",
                        "VernacExtend",
                        "a2bed431277121bb03d3c89941a3d377cbe89178"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_tl_or_tl_and_tl",
            "line_nb": 751,
            "steps": [
                {
                    "command": [
                        "intros P Q s; unfold not_tl, and_tl, or_tl; intros PQs [Ps Qs]; case PQs; intros nPQs; contradict nPQs; assumption.",
                        "VernacExtend",
                        "08093698678f9ae34772a86fd02b7d3f716e437f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}