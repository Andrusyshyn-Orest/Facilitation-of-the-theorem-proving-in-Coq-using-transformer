{
    "filename": "Examples/TwoPhaseCommit/TwoPhaseCoordinator.v",
    "coq_project": "disel",
    "vernac_cmds": [
        [
            "From mathcomp.ssreflect Require Import ssreflect ssrbool ssrnat eqtype ssrfun seq.",
            "VernacRequire",
            "037d2ffdc90053d89d1b918c36daaeab721d2d83"
        ],
        [
            "From mathcomp Require Import path.",
            "VernacRequire",
            "7c70f445c754a2a74114416d587d02e512c693e2"
        ],
        [
            "Require Import Eqdep.",
            "VernacRequire",
            "a499933d0898d4c0e235af789d9252f633426d20"
        ],
        [
            "Require Import Relation_Operators.",
            "VernacRequire",
            "5c09f52be79db9d019c350cc3153659920102fbb"
        ],
        [
            "From fcsl Require Import axioms pred prelude ordtype finmap pcm unionmap heap.",
            "VernacRequire",
            "576c96e5dbde92d8f1878b78d95e36aa980a0403"
        ],
        [
            "From DiSeL Require Import Freshness State EqTypeX DepMaps Protocols Worlds NetworkSem Rely.",
            "VernacRequire",
            "6c33e6a9f60f6493eef47870959de533dbb9d6c8"
        ],
        [
            "From DiSeL Require Import Actions Injection Process Always HoareTriples InferenceRules.",
            "VernacRequire",
            "7ad4d509680a53857edde447eef7d606efef38a6"
        ],
        [
            "From DiSeL Require Import InductiveInv While.",
            "VernacRequire",
            "b2799acd5c83a73c348fbe294fc708727612ded1"
        ],
        [
            "From DiSeL Require Import TwoPhaseProtocol.",
            "VernacRequire",
            "27e658b57f7230c1f0a478010f8dd9b36d3f4304"
        ],
        [
            "Module TwoPhaseCoordinator.",
            "VernacDefineModule",
            "de77dd2c96a617d72c69103887b953402539c1a5"
        ],
        [
            "Section TwoPhaseCoordinator.",
            "VernacBeginSection",
            "bddc6e31d3ffc61f94a479cb2ba626e55579d591"
        ],
        [
            "Variable l : Label.",
            "VernacAssumption",
            "aca5957ed38b3e3b45d48e71df1841eb1fc9d5f0"
        ],
        [
            "Variables (cn : nid) (pts : seq nid) (others : seq nid).",
            "VernacAssumption",
            "9db7c070dbd5fd095369248dfee454b366204711"
        ],
        [
            "Hypothesis Hnin : cn \\notin pts.",
            "VernacAssumption",
            "2fb5a2919f5d9b9af133204d367fb9b8271fb0a6"
        ],
        [
            "Hypothesis Puniq : uniq pts.",
            "VernacAssumption",
            "1bbddb9cd7b991469153e26d76f0f566b32746ba"
        ],
        [
            "Hypothesis PtsNonEmpty : pts != [::].",
            "VernacAssumption",
            "7bf221126db2a8b43567eef67019f183dfe3bbcb"
        ],
        [
            "Definition tpc := TwoPhaseCommitProtocol others Hnin l.",
            "VernacDefinition",
            "e56b6218b43712b15f577d25b0edf885c04ead23"
        ],
        [
            "Notation W := (mkWorld tpc).",
            "VernacSyntacticDefinition",
            "0677f15b4cc2b2181d6b8d22f432f9a156202764"
        ],
        [
            "Section CoordinatorImplementation.",
            "VernacBeginSection",
            "95963d54fc9616f90486fae879223a1377629486"
        ],
        [
            "Program Definition send_prep e data to := act (@send_action_wrapper W tpc cn l (prEq tpc) (cn_send_prep_trans cn pts others) _ (e :: data) to).",
            "VernacDefinition",
            "40b9292c981ca6214e26d8a1f26471a9cdaa1365"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by rewrite InE; do![left|right].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition send_commit e to := act (@send_action_wrapper W tpc cn l (prEq tpc) (cn_send_commit_trans cn pts others) _ [:: e] to).",
            "VernacDefinition",
            "daafe1dfcf0631deb74d3fe7f26ba598110d15d4"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by rewrite !InE; right; left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition send_abort e to := act (@send_action_wrapper W tpc cn l (prEq tpc) (cn_send_abort_trans cn pts others) _ [:: e] to).",
            "VernacDefinition",
            "27abbba91357bdb5f13c13803274b5638a4397e4"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by rewrite !InE; right; right; left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition tryrecv_prep_resp := act (@tryrecv_action_wrapper W cn (fun k _ t b => (k == l) && ((t == prep_yes) || (t == prep_no))) _).",
            "VernacDefinition",
            "78963fe7a3fd55750018bee224bef8cb06abb0b0"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by case/andP: H=>/eqP->_; rewrite /ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition tryrecv_commit_ack := act (@tryrecv_action_wrapper W cn (fun k _ t b => (k == l) && (t == commit_ack)) _).",
            "VernacDefinition",
            "e519b294b413ff93ad30176beec1402a4a9672d2"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by case/andP: H=>/eqP->_; rewrite /ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition tryrecv_abort_ack := act (@tryrecv_action_wrapper W cn (fun k _ t b => (k == l) && (t == abort_ack)) _).",
            "VernacDefinition",
            "aeea50fb4de5702fd74a60ea639aa285b9d14cf7"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by case/andP: H=>/eqP->_; rewrite /ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments TPCProtocol.TPCCoh [cn pts others].",
            "VernacArguments",
            "04f411956c292826944abcf42d9490a042e9c585"
        ],
        [
            "Notation coh := (@TPCProtocol.TPCCoh cn pts others).",
            "VernacSyntacticDefinition",
            "e9bb11fc26c0142809f020325f1f3274befa2feb"
        ],
        [
            "Notation getS s := (getStatelet s l).",
            "VernacSyntacticDefinition",
            "7ae0bb049fc2bf6d98b157649bf1ace82f815898"
        ],
        [
            "Notation loc i := (getLocal cn (getStatelet i l)).",
            "VernacSyntacticDefinition",
            "f2beb5e46637a94287288a29010a4ac942212b9b"
        ],
        [
            "Export TPCProtocol.",
            "VernacImport",
            "a8d3b340d80cb9f52b4d0e2161fd7a4bc9ab8eb0"
        ],
        [
            "Program Definition read_round : {(ecl : (nat * CState) * Log)}, DHT [cn, W] (fun i => loc i = st :-> ecl.1 \\+ log :-> ecl.2, fun r m => loc m = st :-> ecl.1 \\+ log :-> ecl.2 /\\ exists (pf : coh (getS m)), r = (getStC pf).1) := Do (act (@skip_action_wrapper W cn l tpc (prEq tpc) _ (fun s pf => (getStC pf).1))).",
            "VernacDefinition",
            "f0922ff9ea84efa5b4c0857728065eb64a5ec973"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply: ghC=>i [[e c]lg]/= E _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: act_rule=>j R; split=>[|r k m]; first by case: (rely_coh R).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=>/=H1[Cj]Z; subst j=>->R'.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "split; first by rewrite (rely_loc' l R') (rely_loc' _ R).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (rely_coh R')=>_; case=>_ _ _ _/(_ l)=>/= pf; rewrite prEq in pf.",
            "VernacExtend",
            "542210a47a00777c20d1f6f8652bacd8b220a943"
        ],
        [
            "exists pf; move: (rely_loc' l R').",
            "VernacExtend",
            "b7b9ec73591425aeedf6efb7d93612a103bbaa81"
        ],
        [
            "move => E'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in E'.",
            "VernacExtend",
            "3f3c20dc74a1cc600e6daa3073d2079eced9ea66"
        ],
        [
            "suff X: getStC (Actions.safe_local (prEq tpc) H1) = getStC pf by rewrite X.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by apply: (getStCE pf _ E').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition send_prep_loop_spec (e : nat) d := forall to_send, {l : Log}, DHT [cn, W] (fun i => loc i = st :-> (e, CInit) \\+ log :-> l /\\ perm_eq pts to_send \\/ if to_send == [::] then loc i = st :-> (e, CWaitPrepResponse d [::]) \\+ log :-> l else exists (ps : seq nid), loc i = st :-> (e, CSentPrep d ps) \\+ log :-> l /\\ perm_eq pts (ps ++ to_send), fun r m => r = tt /\\ loc m = st :-> (e, CWaitPrepResponse d [::]) \\+ log :-> l).",
            "VernacDefinition",
            "6253d53819015c2b5c240e763bad84cd803a937a"
        ],
        [
            "Program Definition send_prep_loop e d : {l : Log}, DHT [cn, W] (fun i => loc i = st :-> (e, CInit) \\+ log :-> l, fun r m => r = tt /\\ loc m = st :-> (e, CWaitPrepResponse d [::]) \\+ log :-> l) := Do (ffix (fun (rec : send_prep_loop_spec e d) to_send => Do (match to_send with | to :: tos => send_prep e d to ;; rec tos | [::] => ret _ _ tt end)) pts).",
            "VernacDefinition",
            "f7665276b6956a5386c48b74dc80441d5209f711"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply: ghC=>i1 lg.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "case=>[[E1 P1 C1]|].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: to_send P1=>[|to tos Hp].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by move/perm_eq_size=>/=/size0nil=>Z; rewrite Z in (PtsNonEmpty).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: step; apply:act_rule=>j1 R1/=; split=>[|r k m[Sf]St R2].",
            "VernacExtend",
            "1d32417824786a65f5ff40d1d9dc083be853a4a7"
        ],
        [
            "split=>//=; first by case: (rely_coh R1).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "split; first by split=>//; move/perm_eq_mem: Hp->; rewrite inE eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (proj2 (rely_coh R1))=>_ _ _ _/(_ l); rewrite (prEq tpc)=>C; exists C.",
            "VernacExtend",
            "0f6c605f90d4891c1c5513e06848f05a659e6f68"
        ],
        [
            "left; exists e; split; last by exists d.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(rely_loc' _ R1) in E1; rewrite (getStC_K _ E1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite /Actions.can_send /nodes inE eqxx andbC/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite /Actions.filter_hooks umfilt0=>???.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by move/find_some; rewrite dom0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: {-1}(Sf)=>_/=[]Hc[C][]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>[n][d'][ps][E1'][]Z1 Z2 _; subst n d'.",
            "VernacExtend",
            "d1a9ecef8c11f8302c860647fb7aae5dc33b26d9"
        ],
        [
            "rewrite -(rely_loc' _ R1) in E1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (getStC_K C E1) in E1'; discriminate E1'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>b[E1'][d'][Z1 Z2]_ _; subst b d'.",
            "VernacExtend",
            "c23f516394881f68c6c5d41a90dd50ef6068327b"
        ],
        [
            "move: St=>[Z][h][[]Z' G]; subst r h.",
            "VernacExtend",
            "7db34c23270d4411f82dfad0b3b8ae4a97224f58"
        ],
        [
            "apply: (gh_ex (g := lg)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have Pre: (if tos == [::] then loc m = st :-> (e, CWaitPrepResponse d [::]) \\+ log :-> lg else exists ps : seq nid, loc m = st :-> (e, CSentPrep d ps) \\+ log :-> lg /\\ perm_eq pts (ps ++ tos)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case X: ([::] == tos);[move/eqP: X=>X; subst tos; rewrite eqxx| rewrite eq_sym X].",
            "VernacExtend",
            "25d64cae9a72d75c64a127117d9f35d127890c1d"
        ],
        [
            "have Y: pts == [:: to] by rewrite (perm_eq_small _ Hp).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /cstep_send/= Y in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (proj2 Hc)=>Y'; rewrite Y' in G=>{Y'}.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite [cn_safe_coh _ ](pf_irr _ C) E1' in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (rely_loc' l R2); subst k; rewrite -(rely_loc' _ R1) in E1.",
            "VernacExtend",
            "163d9a04e7c5c909b1b85e50db661ed1859815fc"
        ],
        [
            "rewrite locE; last apply: (cohVl C).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite -(pf_irr (cn_in cn pts others) (cn_this_in _ _)) (getStL_Kc _ (cn_in cn pts others) E1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: (cohS (proj2 (rely_coh R1))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exists [:: to]; split; last by rewrite cat_cons/=.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have Y: pts == [:: to] = false.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "apply/negP=>/eqP Z; rewrite Z in Hp.",
            "VernacExtend",
            "56c014161b39aecfb3c54301c2409dba4e8e1857"
        ],
        [
            "move/perm_eq_size: (Hp).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by case=>/size0nil=>Z'; rewrite Z' eqxx in X.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /cstep_send/= Y in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (proj2 Hc)=>Y'; rewrite Y' in G=>{Y'}.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite [cn_safe_coh _ ](pf_irr _ C) E1' in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (rely_loc' l R2); subst k; rewrite -(rely_loc' _ R1) in E1.",
            "VernacExtend",
            "163d9a04e7c5c909b1b85e50db661ed1859815fc"
        ],
        [
            "rewrite locE; last apply: (cohVl C).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite -(pf_irr (cn_in cn pts others) (cn_this_in _ _)) (getStL_Kc _ (cn_in cn pts others) E1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: (cohS (proj2 (rely_coh R1))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: call_rule'=>/=[Cm|r2 m2]; first by right.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case=>//; right.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case X: (to_send == [::]).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>E1 C1; move/eqP: X=>Z; subst to_send.",
            "VernacExtend",
            "8b32e0a9dd34c4dfed52a876e6df5180be32523b"
        ],
        [
            "by apply: ret_rule=>m R; split=>//; rewrite (rely_loc' _ R).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>ps[E1]Hp C1.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have Y: exists to tos, to_send = to :: tos.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: to_send X Hp; first by rewrite eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>to tos _ _; exists to, tos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: Y=>to[tos] Z; subst to_send=>{X}.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: step; apply:act_rule=>j1 R1/=; split=>[|r k m[Sf]St R2].",
            "VernacExtend",
            "1d32417824786a65f5ff40d1d9dc083be853a4a7"
        ],
        [
            "split=>//=; first by case: (rely_coh R1).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "split; first by split=>//; move/perm_eq_mem: Hp->; rewrite mem_cat orbC inE eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (proj2 (rely_coh R1))=>_ _ _ _/(_ l); rewrite prEq=>C; exists C.",
            "VernacExtend",
            "0f6c605f90d4891c1c5513e06848f05a659e6f68"
        ],
        [
            "right; exists e, d, ps; split=>//.",
            "VernacExtend",
            "6c9a8f19bc64ac1f185b4d7eef5bc53d1868d3ed"
        ],
        [
            "by rewrite -(rely_loc' _ R1) in E1; rewrite (getStC_K _ E1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "move/perm_eq_uniq: Hp; rewrite Puniq.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -cat_rcons cat_uniq -cats1 cat_uniq=>/andP[]/andP[_]/andP[].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite /= orbC/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite /Actions.can_send /nodes inE eqxx andbC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Actions.filter_hooks umfilt0=>???.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by move/find_some; rewrite dom0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: {-1}(Sf)=>_/=[]Hc[C][].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case=>b[E1'][d'][Z1 Z2]_; subst b d'.",
            "VernacExtend",
            "c23f516394881f68c6c5d41a90dd50ef6068327b"
        ],
        [
            "rewrite -(rely_loc' _ R1) in E1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (getStC_K C E1) in E1'; discriminate E1'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>[n][d'][ps'][E1'][]Z1 Z2 N _ _; subst n d'.",
            "VernacExtend",
            "d1a9ecef8c11f8302c860647fb7aae5dc33b26d9"
        ],
        [
            "rewrite -(rely_loc' _ R1) in E1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (E1'); rewrite (getStC_K C E1); case=>Z; subst ps'.",
            "VernacExtend",
            "76307c07405e7b302e14de252ad4202dfd257500"
        ],
        [
            "move: St=>[Z][h][[]Z' G]; subst r h.",
            "VernacExtend",
            "7db34c23270d4411f82dfad0b3b8ae4a97224f58"
        ],
        [
            "apply: (gh_ex (g := lg)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "suff Pre: (if tos == [::] then loc m = st :-> (e, CWaitPrepResponse d [::]) \\+ log :-> lg else exists ps : seq nid, loc m = st :-> (e, CSentPrep d ps) \\+ log :-> lg /\\ perm_eq pts (ps ++ tos)).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: call_rule'=>/=[Cm|r2 m2]; first by right.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case=>//; right.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case X: ([::] == tos); [move/eqP: X=>X; subst tos; rewrite eqxx| rewrite eq_sym X].",
            "VernacExtend",
            "25d64cae9a72d75c64a127117d9f35d127890c1d"
        ],
        [
            "rewrite /cstep_send/= (proj2 Hc)/= in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [cn_safe_coh _ ](pf_irr _ C) E1' in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have Y: perm_eq (to :: ps) pts.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (perm_eq_sym pts) in Hp.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply/perm_eqlE; rewrite -cat1s perm_catC; apply/perm_eqlP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Y/= in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (rely_loc' l R2); subst k; rewrite locE; last apply: (cohVl C).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite -(pf_irr (cn_in cn pts others) (cn_this_in _ _)) (getStL_Kc _ (cn_in cn pts others) E1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: (cohS (proj2 (rely_coh R1))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /cstep_send/= (proj2 Hc)/= in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite [cn_safe_coh _ ](pf_irr _ C) E1' in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have Y : perm_eq (to :: ps) pts = false.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/negP=>Hp'; move: (perm_eq_trans Hp' Hp).",
            "VernacExtend",
            "86bb0d3d5ae27b38aac15f69d532d662f1518315"
        ],
        [
            "rewrite -[to::ps]cat1s -[to::tos]cat1s.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move/perm_eqlE: (perm_catC ps [::to])=>Hs.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move/(perm_eq_trans Hs); rewrite -[_++[::_]]cats0 catA perm_cat2l.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move/perm_eq_size.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by move/size0nil=>Z; subst tos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Y/= in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (rely_loc' l R2); subst k; rewrite locE; last apply: (cohVl C).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite -(pf_irr (cn_in cn pts others) (cn_this_in _ _)) (getStL_Kc _ (cn_in cn pts others) E1); exists (to::ps).",
            "VernacExtend",
            "52c7b3d7e974b2dbe3067e112e2fc9820541cd3c"
        ],
        [
            "split=>//; move: Hp.",
            "VernacExtend",
            "d382ad451ae594d67a86f477726931c094e27e38"
        ],
        [
            "by rewrite -cat_rcons -cat1s -!catA !(perm_eq_sym pts) -perm_catCA catA cats1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: (cohS (proj2 (rely_coh R1))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply:ghC=>i lg E1 _; apply: (gh_ex (g:=lg)).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by apply: call_rule=>C1; first by left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rc_prep_cond (acc : seq (nid * bool)) := ~~ perm_eq (map fst acc) pts.",
            "VernacDefinition",
            "93c2a1fb8f65e7883849493a7b466fdc9f904643"
        ],
        [
            "Definition rc_prep_inv (e : nat) (dl : data * Log) : cont (seq (nid * bool)) := fun acc i => loc i = st :-> (e, CWaitPrepResponse dl.1 acc) \\+ log :-> dl.2.",
            "VernacDefinition",
            "8990becf22594cdb57c7765876312c9b1e1b9b50"
        ],
        [
            "Program Definition receive_prep_loop (e : nat): {(dl : data * Log)}, DHT [cn, W] (fun i => loc i = st :-> (e, CWaitPrepResponse dl.1 [::]) \\+ log :-> dl.2, fun res m => loc m = st :-> (e, CWaitPrepResponse dl.1 res) \\+ log :-> dl.2 /\\ (perm_eq (map fst res) pts)) := Do _ (@while cn W _ _ rc_prep_cond (rc_prep_inv e) _ (fun acc => Do _ ( r <-- tryrecv_prep_resp; match r with | Some (from, tg, body) => if [&& from \\in pts, head 0 body == e & from \\notin (map fst acc)] then ret _ _ ((from, tg == prep_yes) :: acc) else ret _ _ acc | None => ret _ _ acc end )) [::]).",
            "VernacDefinition",
            "c357522059ffe655fb7e38119d5d7af5b480197e"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by apply: with_spec x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by move:H; rewrite /rc_prep_inv (rely_loc' _ H0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "move=>i[[d lg]]/=[H1 I1]; apply: step.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "apply: act_rule=>j R1/=; split; first by case: (rely_coh R1).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=>[[[from tg] body] k m|k m]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case=>Sf []Cj[]H; last by case: H=>[?][?][?][?][?][?][].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have E: k = j by case: H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: H; subst k=>_ R2; apply: ret_rule=>m' R3 {d lg I1}[d lg][H2].",
            "VernacExtend",
            "1947c7e9e09bd3bd1687e7b79563947160de37d3"
        ],
        [
            "by rewrite /rc_prep_inv; rewrite -(rely_loc' _ R1)-(rely_loc' _ R2)-(rely_loc' _ R3).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>Sf []Cj[]=>[|[l'][mid][tms][from'][rt][pf][][E]Hin E1 Hw/=]; first by case.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/andP=>/eqP Z G->{k}[]Z1 Z2 Z3 R2; subst l' from' tg body.",
            "VernacExtend",
            "24212b84001c0f17e10d93209cd3091b5fdacc76"
        ],
        [
            "move: rt pf (coh_s (w:=W) l (s:=j) Cj) Hin R2 E1 Hw G E; rewrite prEq/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move=>rt pf Cj' Hin R E1 Hw G E.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have D: rt = cn_receive_prep_yes_trans _ _ _ \\/ rt = cn_receive_prep_no_trans _ _ _.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: Hin G=>/=; first by intuition.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case; first by intuition.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by do! [case; first by move=>->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have P1: valid (dstate (getS j)) by apply: (@cohVl _ TPCCoh); case: (Cj')=>P1 P2 P3 P4; split=>//=; done.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have P2: valid j by apply: (cohS (proj2 (rely_coh R1))).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have P3: l \\in dom j by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: D=>{Hin G Hw}Z; subst rt; rewrite/= in E1 R; case:ifP=>G1; apply: ret_rule=>m' R'=>{d lg I1}[[d lg][I1]]; rewrite /rc_prep_inv ?E1 ?eqxx/=; rewrite -(rely_loc' _ R1)(rely_loc' _ R')(rely_loc' _ R)=>Ej; rewrite locE//; rewrite /rc_step eqxx/cstep_recv/= (getStC_K Cj' Ej) (getStL_Kc _ _ Ej) ?eqxx/=; do? [by move: G1; case: (from \\in pts)=>//=; case: (head 0 tms == e)=>//=/negbFE->/=]; do ? by case/andP:G1=>->/andP[]/eqP->G1; rewrite negbF ?eqxx//=; by move/negbTE: G1=>->.",
            "VernacExtend",
            "d2a2fbeea2a707863c5f6b5d567d9516473c0fdf"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply: ghC=>i[d lg]E1 C1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have Pre: rc_prep_inv e (d, lg) [::] i by rewrite /rc_prep_inv/= E1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "apply: call_rule'=>[|acc m]; first by exists (d, lg).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/(_ (d, lg) Pre)=>/=H1 H2 Cm; split=>//; by move/negbNE: H1.",
            "VernacExtend",
            "20f993a7a1da4042b2dc7a4ec2173fd01b9243a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition read_res (st : CStateT) := let: (_, s) := st in match s with | CWaitPrepResponse _ res => res | _ => [::] end.",
            "VernacDefinition",
            "e6e41b8ee20005443930d8b56209812e5d131480"
        ],
        [
            "Program Definition read_resp_result : {(e : nat) (d : data) (lg : Log) res}, DHT [cn, W] (fun i => loc i = st :-> (e, CWaitPrepResponse d res) \\+ log :-> lg, fun r m => loc m = st :-> (e, CWaitPrepResponse d res) \\+ log :-> lg /\\ r = all (fun i => i) (map snd res)) := Do (act (@skip_action_wrapper W cn l tpc (prEq tpc) _ (fun s pf => all (fun i => i) (map snd (read_res (getStC pf)))))).",
            "VernacDefinition",
            "bdbd8b7ef8ae08da6c070a00255f00446d426e7e"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "move=>/=i[e][d][lg][res] E/=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: act_rule=>j R; split=>/=[|r k m]; first by case: (rely_coh R).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=>/=H1[Cj]Z; subst j=>->R'.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "split; first by rewrite (rely_loc' l R') (rely_loc' _ R).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(rely_loc' _ R) in H; rewrite (getStC_K _ H)/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition coordinator_prelude (d : data) : {(lg : Log)}, DHT [cn, W] (fun i => exists (e : nat), loc i = st :-> (e, CInit) \\+ log :-> lg, fun r m => let: (res, b) := r in exists (e : nat), [/\\ loc m = st :-> (e, CWaitPrepResponse d res) \\+ log :-> lg, perm_eq (map fst res) pts & b = all id (map snd res)]) := Do (e <-- read_round; send_prep_loop e d;; res <-- receive_prep_loop e; b <-- read_resp_result; ret _ _ (res, b)).",
            "VernacDefinition",
            "fb18863156b179c414bb8619eff4ab322e7af78f"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "move=>s0/=[lg][e]E0; apply: step.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "apply: (gh_ex (g := (e, CInit, lg))).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: call_rule=>//=e' s1 [E1][pf]->C1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite !(getStC_K _ E1)=>{e'}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: step; apply: (gh_ex (g:=lg)).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply: call_rule=>//_ s2[_]/=E2 C2.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: step; apply: (gh_ex (g:=(d, lg))).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply: call_rule=>//res s3/= [E3 H3] C3.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: step; apply: (gh_ex (g:=e)); apply: (gh_ex (g:=d)); apply: (gh_ex (g:=lg)); apply: (gh_ex (g:=res)).",
            "VernacExtend",
            "2c74ccd58abccbc69dc7845652195b9c0e3cb36c"
        ],
        [
            "apply: call_rule=>// b s4 [E4]->{b}C4/=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: ret_rule=>i5 R5 lg'[e'] E0'; exists e.",
            "VernacExtend",
            "28e80cd0f3b1a970909716c68809ca36fb516526"
        ],
        [
            "rewrite E0 in E0'; case: (hcancelV _ E0'); first by rewrite validPtUn.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=>Z1 _; subst e'; move/(hcancelPtV _)=>/=.",
            "VernacExtend",
            "c9c51323cf5f3a035e1eb24879ecd1959af19581"
        ],
        [
            "by rewrite validPt (rely_loc' _ R5)=>/(_ is_true_true)=><-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition send_commit_loop_spec (e : nat) d := forall to_send, {lg : Log}, DHT [cn, W] (fun i => (exists res, [/\\ loc i = st :-> (e, CWaitPrepResponse d res) \\+ log :-> lg, to_send = pts, perm_eq (map fst res) pts & all id (map snd res)]) \\/ if to_send == [::] then loc i = st :-> (e, CWaitAckCommit d [::]) \\+ log :-> lg else exists (ps : seq nid), loc i = st :-> (e, CSentCommit d ps) \\+ log :-> lg /\\ perm_eq pts (ps ++ to_send), fun (r : unit) m => loc m = st :-> (e, CWaitAckCommit d [::]) \\+ log :-> lg).",
            "VernacDefinition",
            "7215e90e0575cb6c67e4587755622561240876fb"
        ],
        [
            "Program Definition send_commit_loop e d : send_commit_loop_spec e d := fun to_send => Do (fix rec to_send := (match to_send with | to :: tos => send_commit e to ;; rec tos | [::] => ret _ _ tt end)) to_send.",
            "VernacDefinition",
            "f6f762e1bb2a35cdd922e2878a87ed8583062f5f"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply: ghC=>s1 lg E1 C1; elim: to_send s1 E1 C1=>//=.",
            "VernacExtend",
            "470117b6920bbf0ab181fc70f91f03232cdae40b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>s1; case; first by case=>?[]_ Z; rewrite -Z in (PtsNonEmpty).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>E1 _; apply: ret_rule=>i2 R; rewrite (rely_loc' _ R).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>to tos Hi s1 H C1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: step; apply: act_rule=>s2 R2/=.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "have Pre: Actions.send_act_safe W (p:=tpc) cn l (cn_send_commit_trans cn pts others) [:: e] to s2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; [by case: (rely_coh R2) | | |]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite /Actions.filter_hooks umfilt0=>???.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by move/find_some; rewrite dom0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite /Actions.can_send /nodes inE eqxx andbC/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(cohD (proj2 (rely_coh R2)))/ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (proj2 (rely_coh R2))=>_ _ _ _/(_ l); rewrite prEq=>C; split.",
            "VernacExtend",
            "5fd78564e5449b580aa478174650714320daeca5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "split=>//; case: H; first by case=>?[_]<-; rewrite inE eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case=>ps[_]/perm_eq_mem->; rewrite mem_cat orbC inE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists C; case:H=>[[res][P1]P2 P3|[ps][P1 P2]];[left|right]; rewrite -(rely_loc' _ R2) in P1; rewrite (getStC_K _ P1); first by exists e, d, res=>//.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists e, d, ps; split=>//.",
            "VernacExtend",
            "12b220746ed0674b8c9cf04f6d97c220138cfc70"
        ],
        [
            "move/perm_eq_uniq: P2; rewrite Puniq.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -cat_rcons cat_uniq -cats1 cat_uniq=>/andP[]/andP[_]/andP[].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite /= orbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=>// body i3 i4[Sf]/=St R3.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: Hi; last by case: (rely_coh R3).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "right; rewrite (rely_loc' _ R3).",
            "VernacExtend",
            "659a076b1460ddc341bf9f74b080a8f7b40014b2"
        ],
        [
            "case: (Sf)=>C2/=[][]_ Tp [C2']/=; case; move=>[e'][d'].",
            "VernacExtend",
            "eed11587763fd198825abb64961a12c1b5cb5969"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>[res][E'][]Z P1 P2/andP[P3] _; subst e'.",
            "VernacExtend",
            "9bc630c5e47a27d255e2ef579d32bcc185286e11"
        ],
        [
            "case: H=>[[res'][E1]Te _ _|[ps]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite -(rely_loc' _ R2)=>[][E1]; rewrite (getStC_K _ E1) in E'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(rely_loc' _ R2) in E1; rewrite (getStC_K _ E1) in E'.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "case: E'=>Z Z'; subst res' d'.",
            "VernacExtend",
            "65ec0122b659c1d18f6c69eed6d7a510497e72ff"
        ],
        [
            "case: St=>Z1[h][];case=>->{h}; subst body=>G.",
            "VernacExtend",
            "6042dc43156302d23b188b05386d953cdb248e4f"
        ],
        [
            "rewrite (getStC_K _ E1) (getStL_Kc _ _ E1) /cstep_send -{1}Te inE eqxx/= P1 P2 in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have X: (pts == [:: to]) = (tos == [::]).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite -Te; apply/Bool.eq_iff_eq_true.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by split; [move=>/eqP[]->|move/eqP->;rewrite eqxx].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite X in G; subst i3.",
            "VernacExtend",
            "edd9a4b18d75000ef7ef632905ad539c27252b5d"
        ],
        [
            "rewrite locE//; [|by apply: (cohS C2)|by apply: (cohVl C2')].",
            "VernacExtend",
            "dc8211fae5e7218426adb8d4e12f4ee52ad5aa46"
        ],
        [
            "by case: ifP=>X'; rewrite X'//; exists [::to]; split=>//; rewrite -Te.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>ps[E'][]Z N/andP[P1]_; subst e'.",
            "VernacExtend",
            "b9109862cc1390016777543db5f409ecf9c92e29"
        ],
        [
            "case: H=>[[res'][E1]Te _ _|[ps']].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -(rely_loc' _ R2) in E1; rewrite (getStC_K _ E1) in E'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(rely_loc' _ R2)=>[][E1] P2; rewrite (getStC_K _ E1) in E'.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "case: E'=>Z1 Z2; subst d' ps'; case: St=>Z1[h][];case=>->{h}; subst body=>G.",
            "VernacExtend",
            "69b4cb5d5e4c2b7e656f09f9c9a7132d1737e804"
        ],
        [
            "rewrite (getStC_K _ E1) (getStL_Kc _ _ E1) /cstep_send Tp in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have X: perm_eq (to :: ps) pts = (tos == [::]).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/Bool.eq_iff_eq_true; split.",
            "VernacExtend",
            "b146763f64aeff143afb9ba1b7b1a677b4726e0f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "move=>Hp'; move: (perm_eq_trans Hp' P2).",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "rewrite -[to::ps]cat1s -[to::tos]cat1s.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move/perm_eqlE: (perm_catC ps [::to])=>Hs.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move/(perm_eq_trans Hs); rewrite -[_++[::_]]cats0 catA perm_cat2l.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move/perm_eq_size.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by move/size0nil=>Z; subst tos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP=>Z; subst tos; rewrite perm_eq_sym; apply: (perm_eq_trans P2).",
            "VernacExtend",
            "fdef3a1095e241fa718f34d8e0fc3019f12fbc33"
        ],
        [
            "by apply/perm_eqlE; move: (perm_catC ps [:: to]).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite X in G=>{X}; subst i3.",
            "VernacExtend",
            "85ee03abffc9821d744d3c75923dc41aef88cbe8"
        ],
        [
            "rewrite locE//; [|by apply: (cohS C2)|by apply: (cohVl C2')].",
            "VernacExtend",
            "dc8211fae5e7218426adb8d4e12f4ee52ad5aa46"
        ],
        [
            "case:ifP=>->//; exists (to :: ps);split=>//.",
            "VernacExtend",
            "344d0fb3ee25d4298d8cc323429800cd63e5616c"
        ],
        [
            "apply: (perm_eq_trans P2); apply/perm_eqlE.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite -[to::ps]cat1s -[to::tos]cat1s -!catA perm_catCA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition send_commits e d : {lg : Log}, DHT [cn, W] (fun i => exists res, [/\\ loc i = st :-> (e, CWaitPrepResponse d res) \\+ log :-> lg, perm_eq (map fst res) pts & all id (map snd res)], fun (r : unit) m => loc m = st :-> (e, CWaitAckCommit d [::]) \\+ log :-> lg) := Do (send_commit_loop e d pts).",
            "VernacDefinition",
            "ba9c99662ded3b15f3eeb31eb95014bf9abee8b9"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply: ghC=>i lg[res][H1]H2 H3 C; apply: (gh_ex (g:=lg)).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply: call_rule=>//; first by move=>_; left; exists res.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition send_abort_loop_spec (e : nat) d := forall to_send, {lg : Log}, DHT [cn, W] (fun i => (exists res, [/\\ loc i = st :-> (e, CWaitPrepResponse d res) \\+ log :-> lg, to_send = pts, perm_eq (map fst res) pts & has (fun r => negb r) (map snd res)]) \\/ if to_send == [::] then loc i = st :-> (e, CWaitAckAbort d [::]) \\+ log :-> lg else exists (ps : seq nid), loc i = st :-> (e, CSentAbort d ps) \\+ log :-> lg /\\ perm_eq pts (ps ++ to_send), fun (r : unit) m => loc m = st :-> (e, CWaitAckAbort d [::]) \\+ log :-> lg).",
            "VernacDefinition",
            "51b9bec38225ca12b59426b025a6eb8fe90af434"
        ],
        [
            "Program Definition send_abort_loop e d : send_abort_loop_spec e d := fun to_send => Do (fix rec to_send := (match to_send with | to :: tos => send_abort e to ;; rec tos | [::] => ret _ _ tt end)) to_send.",
            "VernacDefinition",
            "87467b97713cbd9971f37285be80e9ce7dbf4edf"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply: ghC=>s1 lg E1 C1; elim: to_send s1 E1 C1=>//=.",
            "VernacExtend",
            "470117b6920bbf0ab181fc70f91f03232cdae40b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>s1; case; first by case=>?[]_ Z; rewrite -Z in (PtsNonEmpty).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>E1 _; apply: ret_rule=>i2 R; rewrite (rely_loc' _ R).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>to tos Hi s1 H C1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: step; apply: act_rule=>s2 R2/=.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "have Pre: Actions.send_act_safe W (p:=tpc) cn l (cn_send_abort_trans cn pts others) [:: e] to s2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; [by case: (rely_coh R2) | | |]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite /Actions.filter_hooks umfilt0=>???.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by move/find_some; rewrite dom0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite /Actions.can_send /nodes inE eqxx andbC/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(cohD (proj2 (rely_coh R2)))/ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: (proj2 (rely_coh R2))=>_ _ _ _/(_ l); rewrite prEq=>C; split.",
            "VernacExtend",
            "5fd78564e5449b580aa478174650714320daeca5"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "split=>//; case: H; first by case=>?[_]<-; rewrite inE eqxx.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case=>ps[_]/perm_eq_mem->; rewrite mem_cat orbC inE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists C; case:H=>[[res][P1]P2 P3|[ps][P1 P2]];[left|right]; rewrite -(rely_loc' _ R2) in P1; rewrite (getStC_K _ P1); first by exists e, d, res=>//.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exists e, d, ps; split=>//.",
            "VernacExtend",
            "12b220746ed0674b8c9cf04f6d97c220138cfc70"
        ],
        [
            "move/perm_eq_uniq: P2; rewrite Puniq.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -cat_rcons cat_uniq -cats1 cat_uniq=>/andP[]/andP[_]/andP[].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite /= orbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=>// body i3 i4[Sf]/=St R3.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: Hi; last by case: (rely_coh R3).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "right; rewrite (rely_loc' _ R3).",
            "VernacExtend",
            "659a076b1460ddc341bf9f74b080a8f7b40014b2"
        ],
        [
            "case: (Sf)=>C2/=[][]_ Tp [C2']/=; case; move=>[e'][d'].",
            "VernacExtend",
            "eed11587763fd198825abb64961a12c1b5cb5969"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>[res][E'][]Z P1 P2/andP[P3] _; subst e'.",
            "VernacExtend",
            "9bc630c5e47a27d255e2ef579d32bcc185286e11"
        ],
        [
            "case: H=>[[res'][E1]Te _ _|[ps]]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite -(rely_loc' _ R2)=>[][E1]; rewrite (getStC_K _ E1) in E'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(rely_loc' _ R2) in E1; rewrite (getStC_K _ E1) in E'.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "case: E'=>Z Z'; subst res' d'.",
            "VernacExtend",
            "65ec0122b659c1d18f6c69eed6d7a510497e72ff"
        ],
        [
            "case: St=>Z1[h][];case=>->{h}; subst body=>G.",
            "VernacExtend",
            "6042dc43156302d23b188b05386d953cdb248e4f"
        ],
        [
            "have P2' : all id [seq i.2 | i <- res] = false by rewrite has_predC in P2; apply/negbTE.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite (getStC_K _ E1) (getStL_Kc _ _ E1) /cstep_send -{1}Te inE eqxx/= P1 P2' in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have X: (pts == [:: to]) = (tos == [::]).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite -Te; apply/Bool.eq_iff_eq_true.",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "by split; [move=>/eqP[]->|move/eqP->;rewrite eqxx].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite X in G; subst i3.",
            "VernacExtend",
            "edd9a4b18d75000ef7ef632905ad539c27252b5d"
        ],
        [
            "rewrite locE//; [|by apply: (cohS C2)|by apply: (cohVl C2')].",
            "VernacExtend",
            "dc8211fae5e7218426adb8d4e12f4ee52ad5aa46"
        ],
        [
            "by case: ifP=>X'; rewrite X'//; exists [::to]; split=>//; rewrite -Te.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>ps[E'][]Z N/andP[P1]_; subst e'.",
            "VernacExtend",
            "b9109862cc1390016777543db5f409ecf9c92e29"
        ],
        [
            "case: H=>[[res'][E1]Te _ _|[ps']].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -(rely_loc' _ R2) in E1; rewrite (getStC_K _ E1) in E'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(rely_loc' _ R2)=>[][E1] P2; rewrite (getStC_K _ E1) in E'.",
            "VernacExtend",
            "82d53976234637e3f0907eb36cddf61d028c6306"
        ],
        [
            "case: E'=>Z1 Z2; subst d' ps'; case: St=>Z1[h][];case=>->{h}; subst body=>G.",
            "VernacExtend",
            "69b4cb5d5e4c2b7e656f09f9c9a7132d1737e804"
        ],
        [
            "rewrite (getStC_K _ E1) (getStL_Kc _ _ E1) /cstep_send Tp in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have X: perm_eq (to :: ps) pts = (tos == [::]).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/Bool.eq_iff_eq_true; split.",
            "VernacExtend",
            "b146763f64aeff143afb9ba1b7b1a677b4726e0f"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "move=>Hp'; move: (perm_eq_trans Hp' P2).",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "rewrite -[to::ps]cat1s -[to::tos]cat1s.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move/perm_eqlE: (perm_catC ps [::to])=>Hs.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move/(perm_eq_trans Hs); rewrite -[_++[::_]]cats0 catA perm_cat2l.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move/perm_eq_size.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by move/size0nil=>Z; subst tos.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP=>Z; subst tos; rewrite perm_eq_sym; apply: (perm_eq_trans P2).",
            "VernacExtend",
            "fdef3a1095e241fa718f34d8e0fc3019f12fbc33"
        ],
        [
            "by apply/perm_eqlE; move: (perm_catC ps [:: to]).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite X in G=>{X}; subst i3.",
            "VernacExtend",
            "85ee03abffc9821d744d3c75923dc41aef88cbe8"
        ],
        [
            "rewrite locE//; [|by apply: (cohS C2)|by apply: (cohVl C2')].",
            "VernacExtend",
            "dc8211fae5e7218426adb8d4e12f4ee52ad5aa46"
        ],
        [
            "case:ifP=>->//; exists (to :: ps);split=>//.",
            "VernacExtend",
            "344d0fb3ee25d4298d8cc323429800cd63e5616c"
        ],
        [
            "apply: (perm_eq_trans P2); apply/perm_eqlE.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by rewrite -[to::ps]cat1s -[to::tos]cat1s -!catA perm_catCA.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition send_aborts e d : {lg : Log}, DHT [cn, W] (fun i => exists res, [/\\ loc i = st :-> (e, CWaitPrepResponse d res) \\+ log :-> lg, perm_eq (map fst res) pts & has (fun r => negb r) (map snd res)], fun (r : unit) m => loc m = st :-> (e, CWaitAckAbort d [::]) \\+ log :-> lg) := Do (send_abort_loop e d pts).",
            "VernacDefinition",
            "394524f3a8c025db6f4ae7921088bde1b7e3938f"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply: ghC=>i lg[res][H1]H2 H3 C; apply: (gh_ex (g:=lg)).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply: call_rule=>//; first by move=>_; left; exists res.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rc_commit_cond (acc : seq nid) := ~~ perm_eq acc pts.",
            "VernacDefinition",
            "68a25a384f8b1efdd00c2e2d8d76d3062e9727aa"
        ],
        [
            "Definition rc_commit_inv (e : nat) (dl : data * Log) : cont (seq nid) := fun acc i => if perm_eq acc pts then loc i = st :-> (e.+1, CInit) \\+ log :-> rcons dl.2 (true, dl.1) else loc i = st :-> (e, CWaitAckCommit dl.1 acc) \\+ log :-> dl.2.",
            "VernacDefinition",
            "0b84ea1758e769124d74124acc05cffdfd7e9c17"
        ],
        [
            "Program Definition receive_commit_loop (e : nat): {(dl : data * Log)}, DHT [cn, W] (fun i => loc i = st :-> (e, CWaitAckCommit dl.1 [::]) \\+ log :-> dl.2, fun (res : seq nat) m => loc m = st :-> (e.+1, CInit) \\+ log :-> rcons dl.2 (true, dl.1)) := Do _ (@while cn W _ _ rc_commit_cond (rc_commit_inv e) _ (fun acc => Do _ ( r <-- tryrecv_commit_ack; match r with | Some (from, tg, body) => if [&& from \\in pts, head 0 body == e & from \\notin acc] then ret _ _ (from :: acc) else ret _ _ acc | None => ret _ _ acc end )) [::]).",
            "VernacDefinition",
            "742a46087e8c429c6ec2766b13ebf6f7ac8bd6a6"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by apply: with_spec x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by move:H; rewrite /rc_commit_inv (rely_loc' _ H0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "move=>i[[d lg]]/=[H1 I1]; apply: step.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "apply: act_rule=>j R1/=; split; first by case: (rely_coh R1).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=>[[[from tg] body] k m|k m]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case=>Sf []Cj[]H; last by case: H=>[?][?][?][?][?][?][].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have E: k = j by case: H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: H; subst k=>_ R2; apply: ret_rule=>m' R3 {d lg I1}[d lg][H2].",
            "VernacExtend",
            "1947c7e9e09bd3bd1687e7b79563947160de37d3"
        ],
        [
            "by rewrite /rc_commit_inv; rewrite -(rely_loc' _ R1)-(rely_loc' _ R2)-(rely_loc' _ R3).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>Sf []Cj[]=>[|[l'][mid][tms][from'][rt][pf][][E]Hin E1 Hw/=]; first by case.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/andP=>/eqP Z G->{k}[]Z1 Z2 Z3 R2; subst l' from' tg body.",
            "VernacExtend",
            "24212b84001c0f17e10d93209cd3091b5fdacc76"
        ],
        [
            "move: rt pf (coh_s (w:=W) l (s:=j) Cj) Hin R2 E1 Hw G E; rewrite prEq/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move=>rt pf Cj' Hin R E1 Hw G E.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have D: rt = cn_receive_commit_ack_trans _ _ _.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move: Hin G; do! [case ;first by move=>->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have P1: valid (dstate (getS j)) by apply: (@cohVl _ TPCCoh); case: (Cj')=>P1 P2 P3 P4; split=>//=; done.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have P2: valid j by apply: (cohS (proj2 (rely_coh R1))).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have P3: l \\in dom j by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by subst rt; rewrite/= in E1 R; case:ifP=>G1; apply: ret_rule=>m' R'; rewrite /rc_commit_cond=>{d lg I1}[[d lg][I1]]; rewrite /rc_commit_inv ?E1 ?eqxx/=; rewrite -(rely_loc' _ R1)(rely_loc' _ R')(rely_loc' _ R)=>Ej; rewrite locE//; rewrite /rc_step eqxx/cstep_recv/=; move/negbTE: I1=>I1; rewrite I1 in Ej *; rewrite (getStC_K Cj' Ej) (getStL_Kc _ _ Ej) ?eqxx/=; move: G1; case: (from \\in pts)=>//=;case: (head 0 tms == e)=>//=; case: (from \\in acc)=>//=_; case:ifP=>X; rewrite X//=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply: ghC=>i[d lg]E1 C1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have Pre: rc_commit_inv e (d, lg) [::] i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /rc_commit_inv/= E1/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have X: perm_eq [::] pts = false.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/negP.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move/perm_eq_size.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move/size0nil=>Z.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by move: (PtsNonEmpty); rewrite Z.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite X.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: call_rule'=>[|acc m]; first by exists (d, lg).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/(_ (d, lg) Pre)=>/=H1 H2 Cm.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by move/negbNE: H1=>H1; rewrite /rc_commit_inv H1 in H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rc_abort_cond (acc : seq nid) := ~~ perm_eq acc pts.",
            "VernacDefinition",
            "6a1b908fa7f910cdfb26290ee75982e05855459a"
        ],
        [
            "Definition rc_abort_inv (e : nat) (dl : data * Log) : cont (seq nid) := fun acc i => if perm_eq acc pts then loc i = st :-> (e.+1, CInit) \\+ log :-> rcons dl.2 (false, dl.1) else loc i = st :-> (e, CWaitAckAbort dl.1 acc) \\+ log :-> dl.2.",
            "VernacDefinition",
            "ea87494a95631112230d553255192de89058c0ce"
        ],
        [
            "Program Definition receive_abort_loop (e : nat): {(dl : data * Log)}, DHT [cn, W] (fun i => loc i = st :-> (e, CWaitAckAbort dl.1 [::]) \\+ log :-> dl.2, fun (res : seq nat) m => loc m = st :-> (e.+1, CInit) \\+ log :-> rcons dl.2 (false, dl.1)) := Do _ (@while cn W _ _ rc_abort_cond (rc_abort_inv e) _ (fun acc => Do _ ( r <-- tryrecv_abort_ack; match r with | Some (from, tg, body) => if [&& from \\in pts, head 0 body == e & from \\notin acc] then ret _ _ (from :: acc) else ret _ _ acc | None => ret _ _ acc end )) [::]).",
            "VernacDefinition",
            "0f1ffe4d59e9a5fbd9224bbd4f270ca27c79aeec"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by apply: with_spec x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by move:H; rewrite /rc_abort_inv (rely_loc' _ H0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "move=>i[[d lg]]/=[H1 I1]; apply: step.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "apply: act_rule=>j R1/=; split; first by case: (rely_coh R1).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=>[[[from tg] body] k m|k m]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case=>Sf []Cj[]H; last by case: H=>[?][?][?][?][?][?][].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "have E: k = j by case: H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: H; subst k=>_ R2; apply: ret_rule=>m' R3 {d lg I1}[d lg][H2].",
            "VernacExtend",
            "1947c7e9e09bd3bd1687e7b79563947160de37d3"
        ],
        [
            "by rewrite /rc_abort_inv; rewrite -(rely_loc' _ R1)-(rely_loc' _ R2)-(rely_loc' _ R3).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>Sf []Cj[]=>[|[l'][mid][tms][from'][rt][pf][][E]Hin E1 Hw/=]; first by case.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/andP=>/eqP Z G->{k}[]Z1 Z2 Z3 R2; subst l' from' tg body.",
            "VernacExtend",
            "24212b84001c0f17e10d93209cd3091b5fdacc76"
        ],
        [
            "move: rt pf (coh_s (w:=W) l (s:=j) Cj) Hin R2 E1 Hw G E; rewrite prEq/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move=>rt pf Cj' Hin R E1 Hw G E.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have D: rt = cn_receive_abort_ack_trans _ _ _.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move: Hin G; do! [case ;first by move=>->].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have P1: valid (dstate (getS j)) by apply: (@cohVl _ TPCCoh); case: (Cj')=>P1 P2 P3 P4; split=>//=; done.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have P2: valid j by apply: (cohS (proj2 (rely_coh R1))).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have P3: l \\in dom j by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by subst rt; rewrite/= in E1 R; case:ifP=>G1; apply: ret_rule=>m' R'; rewrite /rc_abort_cond=>{d lg I1}[[d lg][I1]]; rewrite /rc_abort_inv ?E1 ?eqxx/=; rewrite -(rely_loc' _ R1)(rely_loc' _ R')(rely_loc' _ R)=>Ej; rewrite locE//; rewrite /rc_step eqxx/cstep_recv/=; move/negbTE: I1=>I1; rewrite I1 in Ej *; rewrite (getStC_K Cj' Ej) (getStL_Kc _ _ Ej) ?eqxx/=; move: G1; case: (from \\in pts)=>//=;case: (head 0 tms == e)=>//=; case: (from \\in acc)=>//=_; case:ifP=>X; rewrite X//=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply: ghC=>i[d lg]E1 C1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have Pre: rc_abort_inv e (d, lg) [::] i.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /rc_abort_inv/= E1/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have X: perm_eq [::] pts = false.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply/negP.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move/perm_eq_size.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move/size0nil=>Z.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by move: (PtsNonEmpty); rewrite Z.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite X.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: call_rule'=>[|acc m]; first by exists (d, lg).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/(_ (d, lg) Pre)=>/=H1 H2 Cm.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by move/negbNE: H1=>H1; rewrite /rc_abort_inv H1 in H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition coordinator_round (d : data) : {(e : nat)(lg : Log)}, DHT [cn, W] (fun i => loc i = st :-> (e, CInit) \\+ log :-> lg, fun res m => loc m = st :-> (e.+1, CInit) \\+ log :-> rcons lg (res, d)) := Do (e <-- read_round; send_prep_loop e d;; res <-- receive_prep_loop e; b <-- read_resp_result; (if b then send_commits e d;; receive_commit_loop e else send_aborts e d;; receive_abort_loop e);; ret _ _ b).",
            "VernacDefinition",
            "988ec14ae53f7c15a4e9a28811b837cb406079db"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "move=>s0/=[e][lg]E0; apply: step.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "apply: (gh_ex (g := (e, CInit, lg))).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: call_rule=>//e' s1 [E1][pf]->C1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite !(getStC_K _ E1)=>{e'}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: step; apply: (gh_ex (g:=lg)).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply: call_rule=>//_ s2[_]/=E2 C2.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: step; apply: (gh_ex (g:=(d, lg))).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply: call_rule=>//res s3/= [E3 H3] C3.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: step; apply: (gh_ex (g:=e)); apply: (gh_ex (g:=d)); apply: (gh_ex (g:=lg)); apply: (gh_ex (g:=res)).",
            "VernacExtend",
            "2c74ccd58abccbc69dc7845652195b9c0e3cb36c"
        ],
        [
            "apply: call_rule=>// b s4 [E4]->{b}C4/=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "case:ifP=>A.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "do![apply: step]; apply: (gh_ex (g:=lg)).",
            "VernacExtend",
            "3b71ea6fefa1feeb046de1d53cd6239f33ef30eb"
        ],
        [
            "apply: call_rule=>_; first by exists res.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=>s5 E5 C5; apply: (gh_ex (g:=(d, lg))).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "apply: call_rule=>//_ s6 E6 C6.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: ret_rule=>i6 R6 e' lg' E0'.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite E0 in E0'; case: (hcancelV _ E0'); first by rewrite validPtUn.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "case=>Z1 _; subst e'; move/(hcancelPtV _)=>/=.",
            "VernacExtend",
            "c9c51323cf5f3a035e1eb24879ecd1959af19581"
        ],
        [
            "by rewrite validPt (rely_loc' _ R6)=>/(_ is_true_true)=><-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "do![apply: step]; apply: (gh_ex (g:=lg)).",
            "VernacExtend",
            "3b71ea6fefa1feeb046de1d53cd6239f33ef30eb"
        ],
        [
            "apply: call_rule=>_; first by exists res; rewrite has_predC A.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=>s5 E5 C5; apply: (gh_ex (g:=(d, lg))).",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "apply: call_rule=>//_ s6 E6 C6.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: ret_rule=>i6 R6 e' lg' E0'.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite E0 in E0'; case: (hcancelV _ E0'); first by rewrite validPtUn.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case=>Z1 _; subst e'; move/(hcancelPtV _)=>/=.",
            "VernacExtend",
            "c9c51323cf5f3a035e1eb24879ecd1959af19581"
        ],
        [
            "by rewrite validPt (rely_loc' _ R6)=>/(_ is_true_true)=><-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition coord_loop_spec := forall dts, {(el : nat * Log)}, DHT [cn, W] (fun i => loc i = st :-> (el.1, CInit) \\+ log :-> el.2, fun (_ : unit) m => exists (chs : seq bool), loc m = st :-> (el.1 + (size dts), CInit) \\+ log :-> (el.2 ++ (seq.zip chs dts))).",
            "VernacDefinition",
            "9ae4a0bff45aeb6159c1f5ce87e48b7df873718a"
        ],
        [
            "Program Definition coord_loop : coord_loop_spec := fun dts => Do (fix rec dts := (match dts with | d :: dts => coordinator_round d ;; rec dts | [::] => ret _ _ tt end)) dts.",
            "VernacDefinition",
            "73ecfe465df0eebaa1310ce8bd5ec0e2025a37f8"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply:ghC=>i; elim: dts i=>//=[|d ds/= Hi]i1 [e lg] E1 C1.",
            "VernacExtend",
            "470117b6920bbf0ab181fc70f91f03232cdae40b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: ret_rule=>i2 R1; exists [::]; rewrite cats0 addn0 (rely_loc' _ R1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: step; apply: (gh_ex (g:=e)); apply: (gh_ex (g:=lg)).",
            "VernacExtend",
            "6e77d60b6fe9e5152bca0bfa572494ee57c5c96d"
        ],
        [
            "apply: call_rule=>//b i2/=E2 C2/=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move:(Hi i2 (e.+1, rcons lg (b, d)) E2 C2)=>/=; apply: vrf_mono=>_ i3 [chs]->.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "rewrite -[e.+1]addn1 -[(size ds).+1]addn1 addnAC addnA; exists (b :: chs)=>/=.",
            "VernacExtend",
            "80e7cce19c53eb5d5a21aafd83e552d37e23084a"
        ],
        [
            "by rewrite -cats1 -!catA/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition coordinator_loop_zero (ds : seq data) : DHT [cn, W] (fun i => loc i = st :-> (0, CInit) \\+ log :-> ([::] : seq (bool * data)), fun (_ : unit) m => exists (chs : seq bool), loc m = st :-> (size ds, CInit) \\+ log :-> (seq.zip chs ds)) := Do (coord_loop ds).",
            "VernacDefinition",
            "ce95b45e2d35f8021a90a587f38138f42492e368"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by move=>i/=E; apply: (gh_ex (g:=(0, [::]))); apply: call_rule.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CoordinatorImplementation.",
            "VernacEndSegment",
            "8e79085b4ac1fe9ff72b9d8eb7deec162a4339a4"
        ],
        [
            "End TwoPhaseCoordinator.",
            "VernacEndSegment",
            "04036f455e485875255552ae4a959df46ba06273"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Section Exports.",
            "VernacBeginSection",
            "3d3d73b16827535e7d0c9fdb92a2f163a05b14f4"
        ],
        [
            "Definition coordinator_loop_zero := coordinator_loop_zero.",
            "VernacDefinition",
            "6f95396b611e6f6efd9d121b4dd004fe3fbff434"
        ],
        [
            "Definition coordinator_loop := coord_loop.",
            "VernacDefinition",
            "0f85a593d83d12bdfdb5bd19d892f522f92dd7f5"
        ],
        [
            "Definition coordinator_round := coordinator_round.",
            "VernacDefinition",
            "dca1b6f98c5224dfa0534dd4ea5c73c33d73dd79"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End TwoPhaseCoordinator.",
            "VernacEndSegment",
            "04036f455e485875255552ae4a959df46ba06273"
        ],
        [
            "Export TwoPhaseCoordinator.Exports.",
            "VernacImport",
            "d0c6a183cf7c24c4d5685a00cc02bd26f7de0da7"
        ]
    ],
    "proofs": [
        {
            "name": "send_prep_obligation_1",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "by rewrite InE; do![left|right].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "send_commit_obligation_1",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "by rewrite !InE; right; left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "send_abort_obligation_1",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "by rewrite !InE; right; right; left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tryrecv_prep_resp_obligation_1",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "by case/andP: H=>/eqP->_; rewrite /ddom domPt inE/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tryrecv_commit_ack_obligation_1",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "by case/andP: H=>/eqP->_; rewrite /ddom domPt inE/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tryrecv_abort_ack_obligation_1",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "by case/andP: H=>/eqP->_; rewrite /ddom domPt inE/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "read_round_obligation_1",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "apply: ghC=>i [[e c]lg]/= E _.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "apply: act_rule=>j R; split=>[|r k m]; first by case: (rely_coh R).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case=>/=H1[Cj]Z; subst j=>->R'.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "split; first by rewrite (rely_loc' l R') (rely_loc' _ R).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (rely_coh R')=>_; case=>_ _ _ _/(_ l)=>/= pf; rewrite prEq in pf.",
                        "VernacExtend",
                        "542210a47a00777c20d1f6f8652bacd8b220a943"
                    ]
                },
                {
                    "command": [
                        "exists pf; move: (rely_loc' l R').",
                        "VernacExtend",
                        "b7b9ec73591425aeedf6efb7d93612a103bbaa81"
                    ]
                },
                {
                    "command": [
                        "move => E'.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq in E'.",
                        "VernacExtend",
                        "3f3c20dc74a1cc600e6daa3073d2079eced9ea66"
                    ]
                },
                {
                    "command": [
                        "suff X: getStC (Actions.safe_local (prEq tpc) H1) = getStC pf by rewrite X.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by apply: (getStCE pf _ E').",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "receive_prep_loop_obligation_1",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "by apply: with_spec x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "receive_prep_loop_obligation_2",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "by move:H; rewrite /rc_prep_inv (rely_loc' _ H0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "receive_prep_loop_obligation_5",
            "line_nb": 251,
            "steps": [
                {
                    "command": [
                        "apply: ghC=>i[d lg]E1 C1.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have Pre: rc_prep_inv e (d, lg) [::] i by rewrite /rc_prep_inv/= E1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "apply: call_rule'=>[|acc m]; first by exists (d, lg).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case/(_ (d, lg) Pre)=>/=H1 H2 Cm; split=>//; by move/negbNE: H1.",
                        "VernacExtend",
                        "20f993a7a1da4042b2dc7a4ec2173fd01b9243a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "read_resp_result_obligation_1",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "move=>/=i[e][d][lg][res] E/=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply: act_rule=>j R; split=>/=[|r k m]; first by case: (rely_coh R).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case=>/=H1[Cj]Z; subst j=>->R'.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "split; first by rewrite (rely_loc' l R') (rely_loc' _ R).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(rely_loc' _ R) in H; rewrite (getStC_K _ H)/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "receive_commit_loop_obligation_1",
            "line_nb": 459,
            "steps": [
                {
                    "command": [
                        "by apply: with_spec x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "receive_commit_loop_obligation_2",
            "line_nb": 462,
            "steps": [
                {
                    "command": [
                        "by move:H; rewrite /rc_commit_inv (rely_loc' _ H0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "receive_abort_loop_obligation_1",
            "line_nb": 508,
            "steps": [
                {
                    "command": [
                        "by apply: with_spec x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "receive_abort_loop_obligation_2",
            "line_nb": 511,
            "steps": [
                {
                    "command": [
                        "by move:H; rewrite /rc_abort_inv (rely_loc' _ H0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coordinator_loop_zero_obligation_1",
            "line_nb": 600,
            "steps": [
                {
                    "command": [
                        "by move=>i/=E; apply: (gh_ex (g:=(0, [::]))); apply: call_rule.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}