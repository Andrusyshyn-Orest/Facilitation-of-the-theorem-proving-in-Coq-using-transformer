{
    "filename": "Examples/TwoPhaseCommit/TwoPhaseParticipant.v",
    "coq_project": "disel",
    "vernac_cmds": [
        [
            "From mathcomp.ssreflect Require Import ssreflect ssrbool ssrnat eqtype ssrfun seq.",
            "VernacRequire",
            "037d2ffdc90053d89d1b918c36daaeab721d2d83"
        ],
        [
            "From mathcomp Require Import path.",
            "VernacRequire",
            "7c70f445c754a2a74114416d587d02e512c693e2"
        ],
        [
            "Require Import Eqdep.",
            "VernacRequire",
            "a499933d0898d4c0e235af789d9252f633426d20"
        ],
        [
            "Require Import Relation_Operators.",
            "VernacRequire",
            "5c09f52be79db9d019c350cc3153659920102fbb"
        ],
        [
            "From fcsl Require Import axioms pred prelude ordtype finmap pcm unionmap heap.",
            "VernacRequire",
            "576c96e5dbde92d8f1878b78d95e36aa980a0403"
        ],
        [
            "From DiSeL Require Import Freshness State EqTypeX DepMaps Protocols Worlds NetworkSem Rely.",
            "VernacRequire",
            "6c33e6a9f60f6493eef47870959de533dbb9d6c8"
        ],
        [
            "From DiSeL Require Import Actions Injection Process Always HoareTriples InferenceRules.",
            "VernacRequire",
            "7ad4d509680a53857edde447eef7d606efef38a6"
        ],
        [
            "From DiSeL Require Import InductiveInv While.",
            "VernacRequire",
            "b2799acd5c83a73c348fbe294fc708727612ded1"
        ],
        [
            "From DiSeL Require Import TwoPhaseProtocol.",
            "VernacRequire",
            "27e658b57f7230c1f0a478010f8dd9b36d3f4304"
        ],
        [
            "Module TwoPhaseParticipant.",
            "VernacDefineModule",
            "a0a6c3be346c67738aba97b4dc25fbeb5d4cd7e2"
        ],
        [
            "Section TwoPhaseParticipant.",
            "VernacBeginSection",
            "6946f7d26991026a39fa120c9687afdfb8078c04"
        ],
        [
            "Variable l : Label.",
            "VernacAssumption",
            "aca5957ed38b3e3b45d48e71df1841eb1fc9d5f0"
        ],
        [
            "Variables (cn : nid) (pts : seq nid) (others : seq nid).",
            "VernacAssumption",
            "9db7c070dbd5fd095369248dfee454b366204711"
        ],
        [
            "Hypothesis Hnin : cn \\notin pts.",
            "VernacAssumption",
            "2fb5a2919f5d9b9af133204d367fb9b8271fb0a6"
        ],
        [
            "Hypothesis PtsNonEmpty : pts != [::].",
            "VernacAssumption",
            "7bf221126db2a8b43567eef67019f183dfe3bbcb"
        ],
        [
            "Definition tpc := TwoPhaseCommitProtocol others Hnin l.",
            "VernacDefinition",
            "e56b6218b43712b15f577d25b0edf885c04ead23"
        ],
        [
            "Notation W := (mkWorld tpc).",
            "VernacSyntacticDefinition",
            "0677f15b4cc2b2181d6b8d22f432f9a156202764"
        ],
        [
            "Variable p : nid.",
            "VernacAssumption",
            "8c98f1400d9ff4698008bf47198c572785bd9fcf"
        ],
        [
            "Hypothesis Hpin : p \\in pts.",
            "VernacAssumption",
            "f69b4f8e9c6ee5756e3f626b8ae34fe18834e4a7"
        ],
        [
            "Section ParticipantImplementation.",
            "VernacBeginSection",
            "7acebcde4e26e99af2c9f2d47bfefcb7dadb7bb5"
        ],
        [
            "Program Definition tryrecv_prep_req := act (@tryrecv_action_wrapper W p (fun k _ t b => (k == l) && (t == prep_req)) _).",
            "VernacDefinition",
            "b2c70454f5e2484182943edbeeea566870b6768e"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by case/andP: H=>/eqP->_; rewrite /ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition tryrecv_commabrt_req c := act (@tryrecv_action_wrapper W p (fun k _ t b => (k == l) && (if c then (t == commit_req) || (t == abort_req) else (t == abort_req))) _).",
            "VernacDefinition",
            "2feb91f959c2425e9b9a2a2972c80e922fa7b0c4"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by case/andP: H=>/eqP->_; rewrite /ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition send_yes e to := act (@send_action_wrapper W tpc p l (prEq tpc) (pn_send_yes_trans others Hnin) _ [:: e] to).",
            "VernacDefinition",
            "7a86a2371aaea13b6013f6ab65c87c97c5c4b2ee"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by rewrite !InE; right; right; right; left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition send_no e to := act (@send_action_wrapper W tpc p l (prEq tpc) (pn_send_no_trans others Hnin) _ [:: e] to).",
            "VernacDefinition",
            "63dc6a7d38ba07ca47834530516acea8608e9015"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by rewrite !InE; right; right; right; right; left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition send_commit_ack e to := act (@send_action_wrapper W tpc p l (prEq tpc) (pn_commit_ack_trans others Hnin) _ [:: e] to).",
            "VernacDefinition",
            "3e865ce650b3230297267c088678cb3431de84c9"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by rewrite !InE; right; right; right; right; right; left.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition send_abort_ack e to := act (@send_action_wrapper W tpc p l (prEq tpc) (pn_abort_ack_trans others Hnin) _ [:: e] to).",
            "VernacDefinition",
            "b74720e44700e799ab4a7c954b61b9c78f049f48"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by rewrite !InE; do![right].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments TPCProtocol.TPCCoh [cn pts others].",
            "VernacArguments",
            "04f411956c292826944abcf42d9490a042e9c585"
        ],
        [
            "Notation coh := (@TPCProtocol.TPCCoh cn pts others).",
            "VernacSyntacticDefinition",
            "e9bb11fc26c0142809f020325f1f3274befa2feb"
        ],
        [
            "Notation getS s := (getStatelet s l).",
            "VernacSyntacticDefinition",
            "7ae0bb049fc2bf6d98b157649bf1ace82f815898"
        ],
        [
            "Notation loc i := (getLocal p (getStatelet i l)).",
            "VernacSyntacticDefinition",
            "b06e53dbcb51f44c7343d2d5f0005149d30f7945"
        ],
        [
            "Notation Pin := (TPCProtocol.pts_in cn others Hpin).",
            "VernacSyntacticDefinition",
            "4e6fc01f4cdc9cf50efb101913da00d8076b166c"
        ],
        [
            "Program Definition read_round_p : {(ecl : (nat * PState) * Log)}, DHT [p, W] (fun i => loc i = st :-> ecl.1 \\+ log :-> ecl.2, fun r m => loc m = st :-> ecl.1 \\+ log :-> ecl.2 /\\ exists (pf : coh (getS m)), r = (getStP Hnin pf Pin).1) := Do (act (@skip_action_wrapper W p l tpc (prEq tpc) _ (fun s pf => (getStP Hnin pf Pin).1))).",
            "VernacDefinition",
            "d1b70916cc5fbdf24afc1f1604dd473ccb7dcaac"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply: ghC=>i [[e c]lg]/= E _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: act_rule=>j R; split=>[|r k m]; first by case: (rely_coh R).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=>/=H1[Cj]Z; subst j=>->R'.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "split; first by rewrite (rely_loc' l R') (rely_loc' _ R).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (rely_coh R')=>_; case=>_ _ _ _/(_ l)=>/= pf; rewrite prEq in pf.",
            "VernacExtend",
            "542210a47a00777c20d1f6f8652bacd8b220a943"
        ],
        [
            "exists pf; move: (rely_loc' l R').",
            "VernacExtend",
            "b7b9ec73591425aeedf6efb7d93612a103bbaa81"
        ],
        [
            "move => E'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in E'.",
            "VernacExtend",
            "3f3c20dc74a1cc600e6daa3073d2079eced9ea66"
        ],
        [
            "suff X: getStP Hnin (Actions.safe_local (prEq tpc) H1) Pin = getStP Hnin pf Pin by rewrite X.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by apply: (TPCProtocol.getStPE Hnin pf _ Pin Hpin E').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Export TPCProtocol.",
            "VernacImport",
            "a8d3b340d80cb9f52b4d0e2161fd7a4bc9ab8eb0"
        ],
        [
            "Definition rp_prep_req_cond (res : option data) := res == None.",
            "VernacDefinition",
            "8f8721b34ea5abaa493f65fcd089c557c4b924a3"
        ],
        [
            "Definition rp_prep_req_inv (e : nat) (lg : Log) : cont (option data) := fun res i => if res is Some d then loc i = st :-> (e, PGotRequest d) \\+ log :-> lg else loc i = st :-> (e, PInit) \\+ log :-> lg.",
            "VernacDefinition",
            "a4eac14705a16e3ab11accebc89cd5f7d4fb047b"
        ],
        [
            "Program Definition receive_prep_req_loop (e : nat): {(lg : Log)}, DHT [p, W] (fun i => loc i = st :-> (e, PInit) \\+ log :-> lg, fun res m => exists d, res = Some d /\\ loc m = st :-> (e, PGotRequest d) \\+ log :-> lg) := Do _ (@while p W _ _ rp_prep_req_cond (rp_prep_req_inv e) _ (fun _ => Do _ ( r <-- tryrecv_prep_req; match r with | Some (from, tg, body) => if (from == cn) && (head 0 body == e) then ret _ _ (Some (behead body)) else ret _ _ None | None => ret _ _ None end )) None).",
            "VernacDefinition",
            "175f9e23e8ca6ed0a1a95b8bbd33339710c9110b"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by apply: with_spec x.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by move:H; rewrite /rp_prep_req_inv (rely_loc' _ H0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply:ghC=>i1 lg[/eqP->{H}/=E1]C1; apply: step.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply: act_rule=>i2/=R1; split; first by case: (rely_coh R1).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=>[[[from e']d i3 i4]|i3 i4]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case=>S/=[]?; case; last by case=>?[?][?][?][?][?][].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=>_ _ Z; subst i3=>R2; apply: ret_rule=>i5 R4/=.",
            "VernacExtend",
            "c9a31b5c3dbfd076b1a173b39b5981bc72187636"
        ],
        [
            "by rewrite (rely_loc' _ R4) (rely_loc' _ R2)(rely_loc' _ R1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>Sf[]C2[]=>[|[l'][mid][tms][from'][rt][pf][][E]Hin E2 Hw/=]; first by case.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/andP=>/eqP Z G->[]Z1 Z2 Z3 R2; subst l' from' e' d.",
            "VernacExtend",
            "f9df7c83b4c9537cd08ff4fc1feda0230c45160f"
        ],
        [
            "move: rt pf (coh_s (w:=W) l (s:=i2) C2) Hin R2 E2 Hw G E; rewrite prEq/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move=>rt pf Cj' Hin R E2 Hw G E.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have D: rt = pn_receive_got_prep_trans _ Hnin.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: Hin G; by do! [case=>/=; first by move=>->].",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "subst rt=>{G}.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have P1: valid (dstate (getS i2)) by apply: (@cohVl _ coh); case: (Cj')=>P1 P2 P3 P4; split=>//=; done.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have P2: valid i2 by apply: (cohS (proj2 (rely_coh R1))).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have P3: l \\in dom i2 by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: ifP=>G1; apply: ret_rule=>//i5 R4.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /rp_prep_req_inv; rewrite (rely_loc' _ R4) (rely_loc' _ R) locE//=.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "rewrite /TPCProtocol.rp_step Hpin/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/andP:G1=>/eqP=>Z1/eqP H2; subst from.",
            "VernacExtend",
            "2f80eb404900f0a9d1a334fc3e286fd93946b1b7"
        ],
        [
            "rewrite -(rely_loc' _ R1) in E1; rewrite (getStL_Kp _ pf E1)(getStP_K Hnin _ pf Hpin E1).",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "by rewrite/pstep_recv/= H2 !eqxx/= .",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /rp_prep_req_inv; rewrite (rely_loc' _ R4) (rely_loc' _ R) locE//=.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "rewrite /TPCProtocol.rp_step Hpin/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite -(rely_loc' _ R1) in E1; rewrite (getStL_Kp _ pf E1)(getStP_K Hnin _ pf Hpin E1).",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "rewrite/pstep_recv/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move/negbT: G1; rewrite Bool.negb_andb; case/orP=>->//=; rewrite orbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply: ghC=>i1 lg E1 C1/=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: (gh_ex (g:=lg)); apply: call_rule=>//r i2 [H1]H2 C2.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite /rp_prep_req_cond/rp_prep_req_inv in H1 H2.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: r H1 H2=>//d _->; exists d.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition resp_to_req (e : nat) (doCommit : bool) : {(dl : (data * Log))}, DHT [p, W] (fun i => loc i = st :-> (e, PGotRequest dl.1) \\+ log :-> dl.2, fun (_ : seq nat) m => let: (d, lg) := dl in if doCommit then loc m = st :-> (e, PRespondedYes d) \\+ log :-> lg else loc m = st :-> (e, PRespondedNo d) \\+ log :-> lg) := Do (if doCommit then send_yes e cn else send_no e cn).",
            "VernacDefinition",
            "881def494d5abef7f7ab672935519f575549a8f3"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply:ghC=>i [d lg]E1 C1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have Pre: forall i2, network_rely W p i i2 -> Actions.send_act_safe W (p:=tpc) p l (if doCommit then (pn_send_yes_trans (cn:=cn) (pts:=pts) others Hnin) else (pn_send_no_trans (cn:=cn) (pts:=pts) others Hnin)) [:: e] cn i2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>i2 R1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "split; first by case: (rely_coh R1).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "have X: HPn cn pts p cn by [].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (proj2 (rely_coh R1))=>_ _ _ _/(_ l); rewrite (prEq tpc)=>C.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "case: doCommit; split=>//; exists X, C, e, d; by rewrite -(rely_loc' _ R1) in E1; rewrite (getStP_K _ _ _ _ E1).",
            "VernacExtend",
            "71bb7c17d0131496c5a8b3af4ba099775085c562"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite /Actions.can_send /nodes inE/= mem_cat Hpin orbC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/= eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Actions.filter_hooks umfilt0=>???.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by move/find_some; rewrite dom0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: doCommit Pre=>Pre; apply: act_rule=>i2 R1/=; move:(Pre i2 R1)=>{Pre}Pre.",
            "VernacExtend",
            "93a4251ace9142d2e02904d95040f1ebdf1b4c36"
        ],
        [
            "split=>//; move=>b i3 i4[Sf]St R3.",
            "VernacExtend",
            "d382ad451ae594d67a86f477726931c094e27e38"
        ],
        [
            "case: {-1}(Sf)=>_/=[]_[H][]C'//; rewrite -(rely_loc' _ R1) in E1.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case=>e'[d'][][]Z1 Z2 _ G; subst d' e'.",
            "VernacExtend",
            "7f42d74b0b7ce0966450a9bbc15c11820cebe017"
        ],
        [
            "move: St; rewrite/Actions.send_act_step/==>[][_][h][].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite /pn_step -!(pf_irr C' (pn_safe_coh _)) -!(pf_irr (pn_this_in _ H) (pn_this_in _ _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)(getStL_Kp _ (pn_this_in _ H) E1)/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case=>Z Z';subst h i3; rewrite (rely_loc' _ R3) locE//; last by apply: (cohVl C').",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: (cohS (proj2 (rely_coh R1))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=>//; move=>b i3 i4[Sf]St R3.",
            "VernacExtend",
            "d382ad451ae594d67a86f477726931c094e27e38"
        ],
        [
            "case: {-1}(Sf)=>_/=[]_[H][]C'//; rewrite -(rely_loc' _ R1) in E1.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case=>e'[d'][][]Z1 Z2 _ G; subst d' e'.",
            "VernacExtend",
            "7f42d74b0b7ce0966450a9bbc15c11820cebe017"
        ],
        [
            "move: St; rewrite/Actions.send_act_step/==>[][_][h][].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite /pn_step -!(pf_irr C' (pn_safe_coh _)) -!(pf_irr (pn_this_in _ H) (pn_this_in _ _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)(getStL_Kp _ (pn_this_in _ H) E1)/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case=>Z Z';subst h i3; rewrite (rely_loc' _ R3) locE//; last by apply: (cohVl C').",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: (cohS (proj2 (rely_coh R1))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rp_commabrt_cond (res : option bool) := res == None.",
            "VernacDefinition",
            "b6bfb57f8a99fb07db563df0c1df9dbbab1952c0"
        ],
        [
            "Definition rp_commabrt_inv (e : nat) (c: bool) (ld : (Log * data)) : cont (option bool) := fun res i => let: (lg, d) := ld in if res is Some b then if b then loc i = st :-> (e, PCommitted d) \\+ log :-> (rcons lg (b, d)) else loc i = st :-> (e, PAborted d) \\+ log :-> (rcons lg (b, d)) else loc i = st :-> (e, if c then PRespondedYes d else PRespondedNo d) \\+ log :-> lg.",
            "VernacDefinition",
            "142c7805d13ffbf47cd9921aa1774f5ab5c92316"
        ],
        [
            "Program Definition receive_commabrt_loop (e : nat) (c : bool): {(ld : (Log * data))}, DHT [p, W] (fun i => let: (lg, d) := ld in loc i = st :-> (e, if c then PRespondedYes d else PRespondedNo d) \\+ log :->lg, fun (res : option bool) m => let: (lg, d) := ld in exists b, res = Some b /\\ if b then loc m = st :-> (e, PCommitted d) \\+ log :-> (rcons lg (b, d)) else loc m = st :-> (e, PAborted d) \\+ log :-> (rcons lg (b, d))) := Do _ (@while p W _ _ rp_commabrt_cond (rp_commabrt_inv e c) _ (fun _ => Do _ ( r <-- tryrecv_commabrt_req c; match r with | Some (from, tg, body) => if (from == cn) && (head 0 body == e) then ret _ _ (Some (tg == commit_req)) else ret _ _ None | None => ret _ _ None end )) None).",
            "VernacDefinition",
            "59db8a0f03f56e47d9bda6dda8d9fa6458ddaaab"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by apply: (with_spec x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by move:H; rewrite /rp_commabrt_inv (rely_loc' _ H0).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply:ghC=>i1 [lg d][/eqP->{H}/=E1]C1; apply: step.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply: act_rule=>i2/=R1; split; first by case: (rely_coh R1).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=>[[[from e']v i3 i4]|i3 i4]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case=>S/=[]?; case; last by case=>?[?][?][?][?][?][].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=>_ _ Z; subst i3=>R2; apply: ret_rule=>i5 R4/=.",
            "VernacExtend",
            "c9a31b5c3dbfd076b1a173b39b5981bc72187636"
        ],
        [
            "rewrite /rp_commabrt_inv/= in E1 *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (rely_loc' _ R4) (rely_loc' _ R2) (rely_loc' _ R1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>Sf[]C2[]=>[|[l'][mid][tms][from'][rt][pf][][E]Hin E2 Hw/=]; first by case.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case/andP=>/eqP Z G->[]Z1 Z2 Z3 R2; subst l' from' e' v.",
            "VernacExtend",
            "c86f89d6015bb9f33c0385f469c40e34076d6e30"
        ],
        [
            "move: rt pf (coh_s (w:=W) l (s:=i2) C2) Hin R2 E2 Hw G E; rewrite prEq/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move=>rt pf Cj' Hin R E2 Hw G E.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have P1: valid (dstate (getS i2)) by apply: (@cohVl _ coh); case: (Cj')=>P1 P2 P3 P4; split=>//=; done.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have P2: valid i2 by apply: (cohS (proj2 (rely_coh R1))).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have P3: l \\in dom i2 by rewrite-(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have D: if c then rt = pn_receive_commit_ack_trans _ Hnin \\/ rt = pn_receive_abort_ack_trans _ Hnin else rt = pn_receive_abort_ack_trans _ Hnin.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: Hin G; clear E1; do![case=>/=; first by move=>->; case: c].",
            "VernacExtend",
            "24360d000b3d33bba492c8daf8979027bee3327f"
        ],
        [
            "by case;[|case=>//];move=>->; case:c=>//=; [left | right].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: ifP=>G1; apply: ret_rule=>//i5 R4.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /rp_commabrt_inv (rely_loc' _ R4) (rely_loc' _ R) locE//=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/andP:G1=>/eqP=>Z1/eqP H2; subst from.",
            "VernacExtend",
            "2f80eb404900f0a9d1a334fc3e286fd93946b1b7"
        ],
        [
            "rewrite -(rely_loc' _ R1) in E1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (c) E1 E2 D G=>/=E1 E2; case=>Z; subst rt; rewrite E2{E2}//==>_; rewrite/rp_step (getStL_Kp _ pf E1)(getStP_K Hnin _ pf Hpin E1) Hpin; by rewrite/pstep_recv/= H2 !eqxx/=.",
            "VernacExtend",
            "65b46c50144defc7c77cb9b0f0d7153fa2dac14e"
        ],
        [
            "rewrite /rp_commabrt_inv; rewrite (rely_loc' _ R4) (rely_loc' _ R) locE//=.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "rewrite -(rely_loc' _ R1) in E1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (c) E1 E2 D G=>/=E1 E2; case=>Z {E2}; subst rt=>//= _; rewrite/rp_step (getStL_Kp _ pf E1)(getStP_K Hnin _ pf Hpin E1) Hpin; by rewrite/pstep_recv/=; move/negbT: G1; rewrite Bool.negb_andb; case/orP=>->//=; rewrite orbC.",
            "VernacExtend",
            "4b1eb79bd260415d5065dcf580179f562e259fbd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply: ghC=>i1 [lg d] E1 C1/=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: (gh_ex (g:=(lg, d))); apply: call_rule=>//r i2 [H1]H2 C2.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "rewrite /rp_commabrt_cond/rp_commabrt_inv in H1 H2; case: r H1 H2=>//b _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by exists b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition send_ack (e : nat) (hasCommitted : bool) : {(dl : (data * Log))}, DHT [p, W] (fun i => let: (d, lg) := dl in if hasCommitted then loc i = st :-> (e, PCommitted d) \\+ log :-> lg else loc i = st :-> (e, PAborted d) \\+ log :-> lg, fun (_ : seq nat) m => let: (d, lg) := dl in if hasCommitted then loc m = st :-> (e.+1, PInit) \\+ log :-> lg else loc m = st :-> (e.+1, PInit) \\+ log :-> lg) := Do (if hasCommitted then send_commit_ack e cn else send_abort_ack e cn).",
            "VernacDefinition",
            "bfdbc0751d72ea47deb28e948d6bc10e87a9f85d"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply:ghC=>i [d lg]E1 C1.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "have Pre: forall i2, network_rely W p i i2 -> Actions.send_act_safe W (p:=tpc) p l (if hasCommitted then (pn_commit_ack_trans (cn:=cn) (pts:=pts) others Hnin) else (pn_abort_ack_trans (cn:=cn) (pts:=pts) others Hnin)) [:: e] cn i2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>i2 R1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "split; first by case: (rely_coh R1).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "have X: HPn cn pts p cn by [].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case: (proj2 (rely_coh R1))=>_ _ _ _/(_ l); rewrite (prEq tpc)=>C.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "case: hasCommitted E1; split=>//; exists X, C, e, d; by rewrite -(rely_loc' _ R1) in E1; rewrite (getStP_K _ _ _ _ E1).",
            "VernacExtend",
            "71bb7c17d0131496c5a8b3af4ba099775085c562"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite /Actions.can_send /nodes inE/= mem_cat Hpin orbC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/= eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /Actions.filter_hooks umfilt0=>???.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by move/find_some; rewrite dom0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: hasCommitted E1 Pre=>E1 Pre; apply: act_rule=>i2 R1/=; move:(Pre i2 R1)=>{Pre}Pre.",
            "VernacExtend",
            "93a4251ace9142d2e02904d95040f1ebdf1b4c36"
        ],
        [
            "split=>//; move=>b i3 i4[Sf]St R3.",
            "VernacExtend",
            "d382ad451ae594d67a86f477726931c094e27e38"
        ],
        [
            "case: {-1}(Sf)=>_/=[]_[H][]C'//; rewrite -(rely_loc' _ R1) in E1.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case=>e'[d'][][]Z1 Z2 _ G; subst d' e'.",
            "VernacExtend",
            "7f42d74b0b7ce0966450a9bbc15c11820cebe017"
        ],
        [
            "move: St; rewrite/Actions.send_act_step/==>[][_][h][].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite /pn_step -!(pf_irr C' (pn_safe_coh _)) -!(pf_irr (pn_this_in _ H) (pn_this_in _ _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)(getStL_Kp _ (pn_this_in _ H) E1)/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case=>Z Z';subst h i3; rewrite (rely_loc' _ R3) locE//; last by apply: (cohVl C').",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: (cohS (proj2 (rely_coh R1))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=>//; move=>b i3 i4[Sf]St R3.",
            "VernacExtend",
            "d382ad451ae594d67a86f477726931c094e27e38"
        ],
        [
            "case: {-1}(Sf)=>_/=[]_[H][]C'//; rewrite -(rely_loc' _ R1) in E1.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case=>e'[d'][][]Z1 Z2 _ G; subst d' e'.",
            "VernacExtend",
            "7f42d74b0b7ce0966450a9bbc15c11820cebe017"
        ],
        [
            "move: St; rewrite/Actions.send_act_step/==>[][_][h][].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite /pn_step -!(pf_irr C' (pn_safe_coh _)) -!(pf_irr (pn_this_in _ H) (pn_this_in _ _)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)(getStL_Kp _ (pn_this_in _ H) E1)/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case=>Z Z';subst h i3; rewrite (rely_loc' _ R3) locE//; last by apply: (cohVl C').",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: (cohS (proj2 (rely_coh R1))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition get (r : option bool) : bool := if r is Some b then b else false.",
            "VernacDefinition",
            "07ebf0eb692cf397b9424f877cf636db9b84b2d3"
        ],
        [
            "Program Definition participant_round (doCommit : bool) : {(el : nat * Log)}, DHT [p, W] (fun i => loc i = st :-> (el.1, PInit) \\+ log :-> el.2, fun (_ : unit) m => exists (b : bool)(d: data), loc m = st :-> (el.1.+1, PInit) \\+ log :-> (rcons el.2 (b, d))) := Do _ (e <-- read_round_p; receive_prep_req_loop e;; resp_to_req e doCommit;; r <-- receive_commabrt_loop e doCommit; send_ack e (get r);; ret _ _ tt).",
            "VernacDefinition",
            "0485902f0c754cfdcecfc44f4b5c6308d87be62c"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply:ghC=>i1[e lg]/=E1 C1; apply: step.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply: (gh_ex (g:=(e, PInit, lg))); apply: call_rule=>//e' i2 [E2][pf]->C2.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "have X: (getStP (cn:=cn) (others:=others) Hnin pf Pin).1 = e by move: (getStP_K Hnin pf Pin Hpin E2)=>->.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite X; apply: step; apply: (gh_ex (g:=lg)); apply: call_rule=>//_ i3[d][_]E3 _.",
            "VernacExtend",
            "239d304f65cb076450a8818ae6a7d92339c98a31"
        ],
        [
            "apply: step; apply: (gh_ex (g:=(d, lg))).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply: call_rule=>//_ i4 E4 _.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: step; apply: (gh_ex (g:=(lg, d))).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply: call_rule=>[|r i5 [b [Z E5]] _]; first by case: doCommit E4.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "subst r; apply: step; apply: (gh_ex (g:=(d, rcons lg (b, d)))).",
            "VernacExtend",
            "b3060e345ef5dc3c35bcc6fa906e87477f5749c8"
        ],
        [
            "apply: call_rule=>//= _ i6 E6 _{E4}.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "apply: ret_rule=>i7 R6 {E5}; exists b, d; rewrite (rely_loc' _ R6).",
            "VernacExtend",
            "7448ed26f8be1f16983ec9e3bf79cc559adbd39a"
        ],
        [
            "by case: b E6.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition part_with_choices_loop_spec := forall (chs : seq bool), {(el : nat * Log)}, DHT [p, W] (fun i => loc i = st :-> (el.1, PInit) \\+ log :-> el.2, fun (_ : unit) m => exists (bs : seq bool)(ds : seq data), loc m = st :-> (el.1 + (size chs), PInit) \\+ log :-> (el.2 ++ (seq.zip bs ds))).",
            "VernacDefinition",
            "2d91dbcb94a79318c17fe0b78daed5ffa8f959a1"
        ],
        [
            "Program Definition participant_with_choices_loop : part_with_choices_loop_spec := fun choices => Do (fix rec choices := (match choices with | c :: chs => participant_round c ;; rec chs | [::] => ret _ _ tt end)) choices.",
            "VernacDefinition",
            "4bf64408d2e1a62ed20d4a7914caeb71502be8ef"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply:ghC=>i; elim: choices i=>//=[|c cs/= Hi]i1 [e lg] E1 C1.",
            "VernacExtend",
            "470117b6920bbf0ab181fc70f91f03232cdae40b"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: ret_rule=>i2 R1; exists [::], [::]; rewrite cats0 addn0 (rely_loc' _ R1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: step; apply: (gh_ex (g:=(e, lg))).",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "apply: call_rule=>//_ i2[b][d]/=E2 C2/=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move:(Hi i2 (e.+1, rcons lg (b, d)) E2 C2)=>/=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: vrf_mono=>_ i3[bs][ds]->.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "rewrite -[e.+1]addn1 -[(size cs).+1]addn1 addnAC addnA.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "exists (b:: bs), (d :: ds)=>/=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite -cats1 -!catA/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition participant_with_choices choices: DHT [p, W] (fun i => loc i = st :-> (0, PInit) \\+ log :-> ([::] : seq (bool * data)), fun (_ : unit) m => exists (bs : seq bool) (ds : seq data), loc m = st :-> (size choices, PInit) \\+ log :-> (seq.zip bs ds)) := Do (participant_with_choices_loop choices).",
            "VernacDefinition",
            "ec6e11d0c812c1aed5dd077befeeab842c82d486"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "by move=>i/=E; apply: (gh_ex (g:=(0, [::]))); apply: call_rule.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ParticipantImplementation.",
            "VernacEndSegment",
            "a265bf9ca362bf3f7dd52744b28284bded4f8191"
        ],
        [
            "End TwoPhaseParticipant.",
            "VernacEndSegment",
            "033e3b7e62bc181a2570665d02648631670259a3"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Section Exports.",
            "VernacBeginSection",
            "3d3d73b16827535e7d0c9fdb92a2f163a05b14f4"
        ],
        [
            "Definition participant_round := participant_round.",
            "VernacDefinition",
            "f0d779b3148231b2142f2a72f302b3fa413e16a9"
        ],
        [
            "Definition participant_with_choices_loop := participant_with_choices_loop.",
            "VernacDefinition",
            "7dce372a559283d13adce0574ed4d9768776bc98"
        ],
        [
            "Definition participant_with_choices := participant_with_choices.",
            "VernacDefinition",
            "ad82716aaed780dbff43a95a1d4dab19ebc30230"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End TwoPhaseParticipant.",
            "VernacEndSegment",
            "033e3b7e62bc181a2570665d02648631670259a3"
        ],
        [
            "Export TwoPhaseParticipant.Exports.",
            "VernacImport",
            "5cbc413979de0a419a1826dcb333276375879eab"
        ]
    ],
    "proofs": [
        {
            "name": "tryrecv_prep_req_obligation_1",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "by case/andP: H=>/eqP->_; rewrite /ddom domPt inE/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tryrecv_commabrt_req_obligation_1",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "by case/andP: H=>/eqP->_; rewrite /ddom domPt inE/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "send_yes_obligation_1",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "by rewrite !InE; right; right; right; left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "send_no_obligation_1",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "by rewrite !InE; right; right; right; right; left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "send_commit_ack_obligation_1",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "by rewrite !InE; right; right; right; right; right; left.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "send_abort_ack_obligation_1",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "by rewrite !InE; do![right].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "read_round_p_obligation_1",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "apply: ghC=>i [[e c]lg]/= E _.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "apply: act_rule=>j R; split=>[|r k m]; first by case: (rely_coh R).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case=>/=H1[Cj]Z; subst j=>->R'.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "split; first by rewrite (rely_loc' l R') (rely_loc' _ R).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (rely_coh R')=>_; case=>_ _ _ _/(_ l)=>/= pf; rewrite prEq in pf.",
                        "VernacExtend",
                        "542210a47a00777c20d1f6f8652bacd8b220a943"
                    ]
                },
                {
                    "command": [
                        "exists pf; move: (rely_loc' l R').",
                        "VernacExtend",
                        "b7b9ec73591425aeedf6efb7d93612a103bbaa81"
                    ]
                },
                {
                    "command": [
                        "move => E'.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq in E'.",
                        "VernacExtend",
                        "3f3c20dc74a1cc600e6daa3073d2079eced9ea66"
                    ]
                },
                {
                    "command": [
                        "suff X: getStP Hnin (Actions.safe_local (prEq tpc) H1) Pin = getStP Hnin pf Pin by rewrite X.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by apply: (TPCProtocol.getStPE Hnin pf _ Pin Hpin E').",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "receive_prep_req_loop_obligation_1",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "by apply: with_spec x.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "receive_prep_req_loop_obligation_2",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "by move:H; rewrite /rp_prep_req_inv (rely_loc' _ H0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "receive_prep_req_loop_obligation_5",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "apply: ghC=>i1 lg E1 C1/=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "apply: (gh_ex (g:=lg)); apply: call_rule=>//r i2 [H1]H2 C2.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "rewrite /rp_prep_req_cond/rp_prep_req_inv in H1 H2.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: r H1 H2=>//d _->; exists d.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "resp_to_req_obligation_1",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "apply:ghC=>i [d lg]E1 C1.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have Pre: forall i2, network_rely W p i i2 -> Actions.send_act_safe W (p:=tpc) p l (if doCommit then (pn_send_yes_trans (cn:=cn) (pts:=pts) others Hnin) else (pn_send_no_trans (cn:=cn) (pts:=pts) others Hnin)) [:: e] cn i2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>i2 R1.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "split; first by case: (rely_coh R1).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "have X: HPn cn pts p cn by [].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (rely_coh R1))=>_ _ _ _/(_ l); rewrite (prEq tpc)=>C.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "case: doCommit; split=>//; exists X, C, e, d; by rewrite -(rely_loc' _ R1) in E1; rewrite (getStP_K _ _ _ _ E1).",
                        "VernacExtend",
                        "71bb7c17d0131496c5a8b3af4ba099775085c562"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite /Actions.can_send /nodes inE/= mem_cat Hpin orbC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/= eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /Actions.filter_hooks umfilt0=>???.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move => F.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq in F.",
                        "VernacExtend",
                        "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
                    ]
                },
                {
                    "command": [
                        "move: F.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by move/find_some; rewrite dom0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: doCommit Pre=>Pre; apply: act_rule=>i2 R1/=; move:(Pre i2 R1)=>{Pre}Pre.",
                        "VernacExtend",
                        "93a4251ace9142d2e02904d95040f1ebdf1b4c36"
                    ]
                },
                {
                    "command": [
                        "split=>//; move=>b i3 i4[Sf]St R3.",
                        "VernacExtend",
                        "d382ad451ae594d67a86f477726931c094e27e38"
                    ]
                },
                {
                    "command": [
                        "case: {-1}(Sf)=>_/=[]_[H][]C'//; rewrite -(rely_loc' _ R1) in E1.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)/=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case=>e'[d'][][]Z1 Z2 _ G; subst d' e'.",
                        "VernacExtend",
                        "7f42d74b0b7ce0966450a9bbc15c11820cebe017"
                    ]
                },
                {
                    "command": [
                        "move: St; rewrite/Actions.send_act_step/==>[][_][h][].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "rewrite /pn_step -!(pf_irr C' (pn_safe_coh _)) -!(pf_irr (pn_this_in _ H) (pn_this_in _ _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)(getStL_Kp _ (pn_this_in _ H) E1)/=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case=>Z Z';subst h i3; rewrite (rely_loc' _ R3) locE//; last by apply: (cohVl C').",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: (cohS (proj2 (rely_coh R1))).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split=>//; move=>b i3 i4[Sf]St R3.",
                        "VernacExtend",
                        "d382ad451ae594d67a86f477726931c094e27e38"
                    ]
                },
                {
                    "command": [
                        "case: {-1}(Sf)=>_/=[]_[H][]C'//; rewrite -(rely_loc' _ R1) in E1.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)/=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case=>e'[d'][][]Z1 Z2 _ G; subst d' e'.",
                        "VernacExtend",
                        "7f42d74b0b7ce0966450a9bbc15c11820cebe017"
                    ]
                },
                {
                    "command": [
                        "move: St; rewrite/Actions.send_act_step/==>[][_][h][].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "rewrite /pn_step -!(pf_irr C' (pn_safe_coh _)) -!(pf_irr (pn_this_in _ H) (pn_this_in _ _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)(getStL_Kp _ (pn_this_in _ H) E1)/=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case=>Z Z';subst h i3; rewrite (rely_loc' _ R3) locE//; last by apply: (cohVl C').",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: (cohS (proj2 (rely_coh R1))).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "receive_commabrt_loop_obligation_1",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "by apply: (with_spec x).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "receive_commabrt_loop_obligation_2",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "by move:H; rewrite /rp_commabrt_inv (rely_loc' _ H0).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "receive_commabrt_loop_obligation_5",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "apply: ghC=>i1 [lg d] E1 C1/=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "apply: (gh_ex (g:=(lg, d))); apply: call_rule=>//r i2 [H1]H2 C2.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "rewrite /rp_commabrt_cond/rp_commabrt_inv in H1 H2; case: r H1 H2=>//b _.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by exists b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "send_ack_obligation_1",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "apply:ghC=>i [d lg]E1 C1.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "have Pre: forall i2, network_rely W p i i2 -> Actions.send_act_safe W (p:=tpc) p l (if hasCommitted then (pn_commit_ack_trans (cn:=cn) (pts:=pts) others Hnin) else (pn_abort_ack_trans (cn:=cn) (pts:=pts) others Hnin)) [:: e] cn i2.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>i2 R1.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "split; first by case: (rely_coh R1).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "have X: HPn cn pts p cn by [].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case: (proj2 (rely_coh R1))=>_ _ _ _/(_ l); rewrite (prEq tpc)=>C.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "case: hasCommitted E1; split=>//; exists X, C, e, d; by rewrite -(rely_loc' _ R1) in E1; rewrite (getStP_K _ _ _ _ E1).",
                        "VernacExtend",
                        "71bb7c17d0131496c5a8b3af4ba099775085c562"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite /Actions.can_send /nodes inE/= mem_cat Hpin orbC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/= eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /Actions.filter_hooks umfilt0=>???.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move => F.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq in F.",
                        "VernacExtend",
                        "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
                    ]
                },
                {
                    "command": [
                        "move: F.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by move/find_some; rewrite dom0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: hasCommitted E1 Pre=>E1 Pre; apply: act_rule=>i2 R1/=; move:(Pre i2 R1)=>{Pre}Pre.",
                        "VernacExtend",
                        "93a4251ace9142d2e02904d95040f1ebdf1b4c36"
                    ]
                },
                {
                    "command": [
                        "split=>//; move=>b i3 i4[Sf]St R3.",
                        "VernacExtend",
                        "d382ad451ae594d67a86f477726931c094e27e38"
                    ]
                },
                {
                    "command": [
                        "case: {-1}(Sf)=>_/=[]_[H][]C'//; rewrite -(rely_loc' _ R1) in E1.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)/=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case=>e'[d'][][]Z1 Z2 _ G; subst d' e'.",
                        "VernacExtend",
                        "7f42d74b0b7ce0966450a9bbc15c11820cebe017"
                    ]
                },
                {
                    "command": [
                        "move: St; rewrite/Actions.send_act_step/==>[][_][h][].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "rewrite /pn_step -!(pf_irr C' (pn_safe_coh _)) -!(pf_irr (pn_this_in _ H) (pn_this_in _ _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)(getStL_Kp _ (pn_this_in _ H) E1)/=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case=>Z Z';subst h i3; rewrite (rely_loc' _ R3) locE//; last by apply: (cohVl C').",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: (cohS (proj2 (rely_coh R1))).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split=>//; move=>b i3 i4[Sf]St R3.",
                        "VernacExtend",
                        "d382ad451ae594d67a86f477726931c094e27e38"
                    ]
                },
                {
                    "command": [
                        "case: {-1}(Sf)=>_/=[]_[H][]C'//; rewrite -(rely_loc' _ R1) in E1.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)/=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case=>e'[d'][][]Z1 Z2 _ G; subst d' e'.",
                        "VernacExtend",
                        "7f42d74b0b7ce0966450a9bbc15c11820cebe017"
                    ]
                },
                {
                    "command": [
                        "move: St; rewrite/Actions.send_act_step/==>[][_][h][].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "rewrite /pn_step -!(pf_irr C' (pn_safe_coh _)) -!(pf_irr (pn_this_in _ H) (pn_this_in _ _)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (getStP_K Hnin C' (pn_this_in _ H) Hpin E1)(getStL_Kp _ (pn_this_in _ H) E1)/=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case=>Z Z';subst h i3; rewrite (rely_loc' _ R3) locE//; last by apply: (cohVl C').",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(cohD (proj2 (rely_coh R1)))/ddom domPt inE/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: (cohS (proj2 (rely_coh R1))).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "participant_with_choices_obligation_1",
            "line_nb": 272,
            "steps": [
                {
                    "command": [
                        "by move=>i/=E; apply: (gh_ex (g:=(0, [::]))); apply: call_rule.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}