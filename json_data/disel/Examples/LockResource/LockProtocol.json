{
    "filename": "Examples/LockResource/LockProtocol.v",
    "coq_project": "disel",
    "vernac_cmds": [
        [
            "From mathcomp.ssreflect Require Import ssreflect ssrbool ssrnat eqtype ssrfun seq.",
            "VernacRequire",
            "037d2ffdc90053d89d1b918c36daaeab721d2d83"
        ],
        [
            "From mathcomp Require Import path.",
            "VernacRequire",
            "7c70f445c754a2a74114416d587d02e512c693e2"
        ],
        [
            "Require Import Eqdep.",
            "VernacRequire",
            "a499933d0898d4c0e235af789d9252f633426d20"
        ],
        [
            "Require Import Relation_Operators.",
            "VernacRequire",
            "5c09f52be79db9d019c350cc3153659920102fbb"
        ],
        [
            "From fcsl Require Import axioms pred prelude ordtype finmap pcm unionmap heap.",
            "VernacRequire",
            "576c96e5dbde92d8f1878b78d95e36aa980a0403"
        ],
        [
            "From DiSeL Require Import Freshness State EqTypeX Protocols Worlds NetworkSem Rely.",
            "VernacRequire",
            "26e11e2fa076d0e09ced8c25739f81efacc39c1d"
        ],
        [
            "From DiSeL Require Import Actions Injection Process Always HoareTriples InferenceRules.",
            "VernacRequire",
            "7ad4d509680a53857edde447eef7d606efef38a6"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Import Prenex Implicits.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Module LockProtocol.",
            "VernacDefineModule",
            "4b592657b976503195e2e6aeca6ab5bd3d68ffe3"
        ],
        [
            "Section LockProtocol.",
            "VernacBeginSection",
            "cccdf3f5d7083105f9922a95141b3bfe1bad3a67"
        ],
        [
            "Variable server : nid.",
            "VernacAssumption",
            "939830d3b9ba288b0ef1759362bc062b4d4eb313"
        ],
        [
            "Variable clients : seq nid.",
            "VernacAssumption",
            "3a7c06cc0506a2002ac8fbf82573ea4d9a8d9fb8"
        ],
        [
            "Hypothesis Hnin : server \\notin clients.",
            "VernacAssumption",
            "3dae73b0ed8f4c9950a32db65ab0257a49374e76"
        ],
        [
            "Hypothesis Huniq : uniq clients.",
            "VernacAssumption",
            "8a5077790a51bbb1a4148fdb2a72ff84d086f9bb"
        ],
        [
            "Lemma client_not_server n : n \\in clients -> (n == server) = false.",
            "VernacStartTheoremProof",
            "d44979d9331bae7944113d951323d687ef43b9e2"
        ],
        [
            "move=>H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case E: (n == server)=>//.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move/eqP in E.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "subst n.",
            "VernacExtend",
            "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
        ],
        [
            "move: (Hnin).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition nodes := [:: server] ++ clients.",
            "VernacDefinition",
            "d5cdfa38fdfc380eb3886eed1f66a6935cb82808"
        ],
        [
            "Lemma client_nodes n : n \\in clients -> n \\in nodes.",
            "VernacStartTheoremProof",
            "48f2ff40786f8e60fa8ccf9592d5509a5a57b554"
        ],
        [
            "by rewrite inE orbC/= =>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation epoch := nat (only parsing).",
            "VernacSyntacticDefinition",
            "bbe0e4f5c4259f31f47bef383018b704caa2e597"
        ],
        [
            "Record server_state := ServerState { outstanding : seq nid; current_epoch : epoch; current_holder : option nid }.",
            "VernacInductive",
            "2c2a482c10fba76beeec504a1643c019113a8c63"
        ],
        [
            "Inductive client_state := | NotHeld | Held of epoch.",
            "VernacInductive",
            "a30673d2b1b67866161713d6a049a28cdc8965af"
        ],
        [
            "Definition acquire_tag := 0.",
            "VernacDefinition",
            "3e8cb17d11a394b268b3372f1d88fe1e228fc9a4"
        ],
        [
            "Definition grant_tag := 1.",
            "VernacDefinition",
            "bf8c29a994496b405d7f42efd2b7bd4894ea86da"
        ],
        [
            "Definition release_tag := 2.",
            "VernacDefinition",
            "da3a858da52d023a639eae8220e5d660b0cccc6f"
        ],
        [
            "Definition msg_from_server ms e := (tag ms == grant_tag) && (tms_cont ms == [:: e]).",
            "VernacDefinition",
            "3f4ee9820fa3153ebfe53c4c4d040d7b54a9b457"
        ],
        [
            "Definition msg_from_client ms := ((tag ms == acquire_tag) || (tag ms == release_tag)) && (tms_cont ms == [::]).",
            "VernacDefinition",
            "61565a497fe9b28d7ed1650b1b973d8d59611c99"
        ],
        [
            "Definition coh_msg pkt e := if from pkt == server then to pkt \\in clients /\\ msg_from_server (content pkt) e else if from pkt \\in clients then to pkt == server /\\ msg_from_client (content pkt) else False.",
            "VernacDefinition",
            "86c56db5d1dcfa4a9ef1f2e6c1a77874a88db5d5"
        ],
        [
            "Definition st := ptr_nat 1.",
            "VernacDefinition",
            "b14ba6b685a37e0333cb749673d4f4b0fb950659"
        ],
        [
            "Definition client_local_coh (cs : client_state) := [Pred h | h = st :-> cs].",
            "VernacDefinition",
            "c5df120b8a0dddc92bac15dee457d84ce8dc6929"
        ],
        [
            "Definition server_local_coh (ss : server_state) := [Pred h | h = st :-> ss].",
            "VernacDefinition",
            "23051e46165f46a16b1d74662570eac4f7225408"
        ],
        [
            "Definition local_coh (n : nid) := [Pred h | valid h /\\ if n == server then exists ss, server_local_coh ss h else n \\in clients /\\ exists cs, client_local_coh cs h].",
            "VernacDefinition",
            "0c4a0c8eac62f149da39f4f365c44c3b79f7e042"
        ],
        [
            "Definition soup_coh : Pred soup := [Pred s | valid s /\\ forall m ms, find m s = Some ms -> active ms -> exists e, coh_msg ms e].",
            "VernacDefinition",
            "3204e40de44a2e26e9fc09205f0ed14e7b2fcacb"
        ],
        [
            "Lemma soup_coh_post_msg d m: soup_coh (dsoup d) -> (exists e, coh_msg m e) -> soup_coh (post_msg (dsoup d) m).1.",
            "VernacStartTheoremProof",
            "0a69933d6b7f675393be4aa63c0c9e5b8c62424b"
        ],
        [
            "move=>[H1 H2][y]Cm; split=>[|i ms/=]; first by rewrite valid_fresh.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite findUnL; last by rewrite valid_fresh.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: ifP=>E; first by move/H2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move/findPt_inv=>[Z G]; subst i m; exists y.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition state_coh d := forall n, n \\in nodes -> local_coh n (getLocal n d).",
            "VernacDefinition",
            "b680bcbcf48bac8182767759964778edc8761a92"
        ],
        [
            "Definition lock_coh d := let: dl := dstate d in let: ds := dsoup d in [/\\ soup_coh ds , dom dl =i nodes , valid dl & state_coh d].",
            "VernacDefinition",
            "1ead5bb28e9bc5e0a8dc8e98e754892c7f89a110"
        ],
        [
            "Lemma l1 d: lock_coh d -> valid (dstate d).",
            "VernacStartTheoremProof",
            "cff0240dd3a26a36bea33ef6047da68e9ffbcced"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l2 d: lock_coh d -> valid (dsoup d).",
            "VernacStartTheoremProof",
            "094733784617493c8b40622f9a90894bf413d804"
        ],
        [
            "by case; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l3 d: lock_coh d -> dom (dstate d) =i nodes.",
            "VernacStartTheoremProof",
            "32740ffb5cdd8b340592d81e179e95447b39c386"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition LockCoh := CohPred (CohPredMixin l1 l2 l3).",
            "VernacDefinition",
            "4d19fa710e57c6f45b212f9e6b564ae357574e28"
        ],
        [
            "Lemma consume_coh d m : LockCoh d -> soup_coh (consume_msg (dsoup d) m).",
            "VernacStartTheoremProof",
            "4940fa89994cddcacb79d925463ab1a176d04c8f"
        ],
        [
            "move=>C; split=>[|m' msg]; first by apply: consume_valid; rewrite (cohVs C).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case X: (m == m');[move/eqP: X=><-{m'}|].",
            "VernacExtend",
            "c4499c8f840c4e47d73ea32ebd509fa0e700d79a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case/(find_mark (cohVs C))=>tms[E]->{msg}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case:(C); case=>_/(_ m tms E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eq_sym in X.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (mark_other (cohVs C) X)=>E.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by case:(C); case=>_; move/(_ m' msg E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coh_dom_upd this d s : this \\in nodes -> LockCoh d -> dom (upd this s (dstate d)) =i nodes.",
            "VernacStartTheoremProof",
            "77a2bb656bfd3be7bc35c5c156bcc7f222304d73"
        ],
        [
            "move=>D C z; rewrite -(cohDom C) domU inE/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case: ifP=>///eqP->{z}; rewrite (cohDom C) D; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition server_send_step (ss : server_state) (to : nid) : server_state := if to \\in clients then if outstanding ss is _ :: out' then ServerState out' (S (current_epoch ss)) (Some to) else ss else ss.",
            "VernacDefinition",
            "d7100636c40687042aab2a37f82df9cf1227dff0"
        ],
        [
            "Definition client_send_step (cs : client_state) : client_state := NotHeld.",
            "VernacDefinition",
            "2aacb164ab0fb382a3b24b89e5c812cc91de2651"
        ],
        [
            "Definition server_recv_step (ss : server_state) (from : nid) (mtag : nat) (mbody : seq nat) : server_state := if mtag == acquire_tag then ServerState (rcons (outstanding ss) from) (current_epoch ss) (current_holder ss) else ServerState (outstanding ss) (current_epoch ss) None.",
            "VernacDefinition",
            "8f9f2a7f230a6c2e857af2ffc0da8ff8e395f0b2"
        ],
        [
            "Definition client_recv_step (cs : client_state) (from : nid) (mtag : nat) (mbody : seq nat) : client_state := if mbody is [:: e] then Held e else NotHeld.",
            "VernacDefinition",
            "53ba3bd140363f3503a2c3ee180cdc907f32584e"
        ],
        [
            "Section GetterLemmas.",
            "VernacBeginSection",
            "99e1e221861e328d8b2cf6e5d0f44dd319995533"
        ],
        [
            "Lemma getLocal_coh n d (C : LockCoh d): n \\in nodes -> valid (getLocal n d) /\\ if n == server then exists (ss : server_state), getLocal n d = st :-> ss else (n \\in clients) /\\ exists (cs : client_state), getLocal n d = st :-> cs.",
            "VernacStartTheoremProof",
            "71d885c7ea1ea9d391c18dd7f206a59a128591d1"
        ],
        [
            "by case: C=>_ _ _ /(_ n)G; rewrite /local_coh/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma getLocal_server_st_tp d (C : LockCoh d) s: find st (getLocal server d) = Some s -> dyn_tp s = server_state.",
            "VernacStartTheoremProof",
            "bd6c5a3fed9b5a334031dc01a64a977e43fa5b4a"
        ],
        [
            "have pf: server \\in nodes by rewrite inE eqxx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (getLocal_coh C pf); rewrite eqxx; move =>[V][s']Z; rewrite Z in V *.",
            "VernacExtend",
            "164dec8e666020d73c9ebc9fc08641d83bc05f4b"
        ],
        [
            "rewrite findPt /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case =><-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma getLocal_client_st_tp n d (C : LockCoh d) (H : n \\in clients) s: find st (getLocal n d) = Some s -> dyn_tp s = client_state.",
            "VernacStartTheoremProof",
            "6d65b8c49b618a895a906224aa6f7add634a154f"
        ],
        [
            "have pf: n \\in nodes by rewrite inE/= orbC H.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (getLocal_coh C pf); rewrite H=>[[V]].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "rewrite client_not_server//.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move=>[_][cs] L.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite L in V *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite findPt /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case=> <-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition getSt_server d (C : LockCoh d) : server_state := match find st (getLocal server d) as f return _ = f -> _ with Some v => fun epf => icast (sym_eq (getLocal_server_st_tp C epf)) (dyn_val v) | _ => fun epf => ServerState [::] 0 None end (erefl _).",
            "VernacDefinition",
            "e1138d5afadff63097bdc1899eba6e41a235adc1"
        ],
        [
            "Lemma getSt_server_K d (C : LockCoh d) m : getLocal server d = st :-> m -> getSt_server C = m.",
            "VernacStartTheoremProof",
            "3a7bcab37efd2c581e189b0a17811193ac22d160"
        ],
        [
            "move=>E; rewrite /getSt_server/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have pf: server \\in nodes by rewrite inE eqxx.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have V: valid (getLocal server d) by case: (getLocal_coh C pf).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (getLocal_server_st_tp C); rewrite !E=>/= H.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by apply: eqc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition getSt_client c d (C : LockCoh d) (pf : c \\in nodes) : client_state.",
            "VernacDefinition",
            "2336a1c182228bce9e688c98690e306b62a86fa8"
        ],
        [
            "case X: (c \\in clients); last by exact: NotHeld.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "exact: (match find st (getLocal c d) as f return _ = f -> _ with Some v => fun epf => icast (sym_eq (getLocal_client_st_tp C X epf)) (dyn_val v) | _ => fun epf => NotHeld end (erefl _)).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Lemma getSt_client_K c d (C : LockCoh d) (pf : c \\in nodes) m : c \\in clients -> getLocal c d = st :-> m -> getSt_client C pf = m.",
            "VernacStartTheoremProof",
            "36dbe411d2cb3176da31129989c886b0de49da03"
        ],
        [
            "move=>X E; rewrite /getSt_client/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "have V: valid (getLocal c d) by case: (getLocal_coh C pf).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (getLocal_client_st_tp C); rewrite X !E=>/= H.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by apply: eqc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End GetterLemmas.",
            "VernacEndSegment",
            "32b524b942e9fe7c68e1c79dd002d518d1494e64"
        ],
        [
            "Section ServerGenericSendTransitions.",
            "VernacBeginSection",
            "e7f252aa4a00e0089b8365c9e900673f0c2daab7"
        ],
        [
            "Definition HServ this to := (this == server /\\ to \\in clients).",
            "VernacDefinition",
            "eb8c5f46350596f01f016ae7f05071445d76a8f5"
        ],
        [
            "Variable the_tag : nat.",
            "VernacAssumption",
            "44cff55f934c46074924259929d9f9b457164df4"
        ],
        [
            "Variable prec : server_state -> nid -> seq nid -> Prop.",
            "VernacAssumption",
            "a1026ea7b2bb2041c880e83aab526672573bd5a9"
        ],
        [
            "Hypothesis prec_safe : forall this to s m, HServ this to -> prec s to m -> coh_msg (Msg (TMsg the_tag m) this to true) (current_epoch s).",
            "VernacAssumption",
            "1a124647451f3c6da2acbc815b40cf397ea982ce"
        ],
        [
            "Notation coh := LockCoh.",
            "VernacSyntacticDefinition",
            "60263be42cf9244805fc3495205ceb653462aab8"
        ],
        [
            "Definition server_send_safe (this n : nid) (d : dstatelet) (msg : seq nat) := HServ this n /\\ exists (C : coh d), prec (getSt_server C) n msg.",
            "VernacDefinition",
            "3e283a67d428f40850fae9d8782a077ebbd7cf72"
        ],
        [
            "Lemma server_send_safe_coh this to d m : server_send_safe this to d m -> coh d.",
            "VernacStartTheoremProof",
            "74b02b7300c0de255d21bf8bbe8fade79410047c"
        ],
        [
            "by case=>_[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma server_send_this_in this to : HServ this to -> this \\in nodes.",
            "VernacStartTheoremProof",
            "7c86f652cb181b208b0a94ee34dcd9cf7e7ba464"
        ],
        [
            "by case=>/eqP->; rewrite inE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma server_send_to_in this to : HServ this to -> to \\in nodes.",
            "VernacStartTheoremProof",
            "aa770d23d1235112a0d8332a5e754cb37aa5be1f"
        ],
        [
            "by case=>_; rewrite /nodes inE/= orbC=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma server_send_safe_in this to d m : server_send_safe this to d m -> this \\in nodes /\\ to \\in nodes.",
            "VernacStartTheoremProof",
            "5f064cf777940d4c8e5a926d7867f55f735f96f5"
        ],
        [
            "by case=>[]=>G _; move/server_send_to_in: (G)->; case: G=>/eqP-> _; rewrite inE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition server_step (this to : nid) (d : dstatelet) (msg : seq nat) (pf : server_send_safe this to d msg) := let C := server_send_safe_coh pf in let s := getSt_server C in Some (st :-> server_send_step s to).",
            "VernacDefinition",
            "c89881bfcd8f7b9a74eedaecad1454c4392f8696"
        ],
        [
            "Lemma server_step_coh : s_step_coh_t coh the_tag server_step.",
            "VernacStartTheoremProof",
            "bd2646032100bd76ad32ee7f89a7d210f7428c11"
        ],
        [
            "move=>this to d msg pf h[]->{h}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have C : (coh d) by case: pf=>?[].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have E: this = server by case: pf=>[][]/eqP.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split=>/=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: soup_coh_post_msg; first by case:(server_send_safe_coh pf).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (pf)=>H[C']P/=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "eexists.",
            "VernacExtend",
            "bab8b1d1a3889cd604eb78d9fc8d0c299d5c3fd6"
        ],
        [
            "by apply: (prec_safe _ P).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: coh_dom_upd=>//; case: (server_send_safe_in pf).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite validU; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>n Ni.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /local_coh/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /getLocal/=findU; case: ifP=>B; last by case: C=>_ _ _/(_ n Ni).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP: B=>Z; subst n this; rewrite eqxx (cohVl C)/=.",
            "VernacExtend",
            "ea2cf4d7233aa95e0b0f1bbf65e6c4bc215b2c14"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "by rewrite validPt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by eexists.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma server_step_def this to d msg : server_send_safe this to d msg <-> exists b pf, @server_step this to d msg pf = Some b.",
            "VernacStartTheoremProof",
            "fbe7722440f0e515de09b9422469a52b6e955882"
        ],
        [
            "split=>[pf/=|]; last by case=>?[].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "set b := let C := server_send_safe_coh pf in let s := getSt_server C in st :-> (server_send_step s to).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "by exists b, pf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition server_send_trans := SendTrans server_send_safe_coh server_send_safe_in server_step_def server_step_coh.",
            "VernacDefinition",
            "8c993fff8ed1d611efb6ae7db8167359de6e12a8"
        ],
        [
            "End ServerGenericSendTransitions.",
            "VernacEndSegment",
            "59aeb622daa340419bf504635c5c689eba12af7c"
        ],
        [
            "Section ServerSendTransitions.",
            "VernacBeginSection",
            "cbaad1cdfd5f97e2927e767369293ef26ddc9c47"
        ],
        [
            "Definition server_send_grant_prec (ss : server_state) to m := exists rest e, ss = ServerState (to :: rest) e None /\\ m = [:: e].",
            "VernacDefinition",
            "9cf1c6a2f2ed3dd9313ca47207f2d9f542aa39ce"
        ],
        [
            "Program Definition server_send_grant_trans : send_trans LockCoh := @server_send_trans grant_tag server_send_grant_prec _.",
            "VernacDefinition",
            "ce1947cb0c5089be2b6e12d70fdab32c39c9461f"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "case: H=>/eqP->H; rewrite /coh_msg eqxx; split=>//=.",
            "VernacExtend",
            "c4a46ac89a9c7997fc10e59922c13d5e3d2b0b23"
        ],
        [
            "case: H0=>[rest] [e] []-> ->/=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite /msg_from_server /= eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ServerSendTransitions.",
            "VernacEndSegment",
            "2f1009e949e7f7a45fa0d68dea6ac356aba7d0fa"
        ],
        [
            "Section ServerGenericReceiveTransitions.",
            "VernacBeginSection",
            "f5a239c3b24318bfae740a8559a088525ab93547"
        ],
        [
            "Notation coh := LockCoh.",
            "VernacSyntacticDefinition",
            "60263be42cf9244805fc3495205ceb653462aab8"
        ],
        [
            "Variable the_tag : nat.",
            "VernacAssumption",
            "44cff55f934c46074924259929d9f9b457164df4"
        ],
        [
            "Variable server_recv_wf : forall d, coh d -> nid -> nid -> TaggedMessage -> bool.",
            "VernacAssumption",
            "ee754c0135136678be4771b84fcc0cb1cac7d569"
        ],
        [
            "Definition rs_step : receive_step_t coh := fun this (from : nid) (m : seq nat) d (pf : coh d) (pt : this \\in nodes) => if (this == server) then let s := getSt_server pf in st :-> server_recv_step s from the_tag m else getLocal this d.",
            "VernacDefinition",
            "db4c769de45f888069f212667c0be99bca665bac"
        ],
        [
            "Lemma rs_step_coh : r_step_coh_t server_recv_wf the_tag rs_step.",
            "VernacStartTheoremProof",
            "f3267923de53a15a73384a301fae198d006567d1"
        ],
        [
            "move=>d from this m C pf tms D F Wf T/=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /rs_step; case X: (this == server); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split=>/=; first by apply: consume_coh.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by apply: coh_dom_upd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite validU; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>n Ni/=; case: (C)=>_ _ _/(_ n Ni)=>L; rewrite -(getLocalU)// (cohVl C).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=>/=; first by apply: consume_coh.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: coh_dom_upd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite validU; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>n Ni/=; rewrite /local_coh/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite /getLocal/=findU; case: ifP=>B/=; last by case: (C)=>_ _ _/(_ n Ni).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP: B X=>Z/eqP X; subst n this; rewrite eqxx (cohVl C)/=.",
            "VernacExtend",
            "ea2cf4d7233aa95e0b0f1bbf65e6c4bc215b2c14"
        ],
        [
            "split; first by rewrite validPt.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by eexists.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rs_recv_trans := ReceiveTrans rs_step_coh.",
            "VernacDefinition",
            "b6035ae563d697cfff1f1538107cda24157b0b22"
        ],
        [
            "End ServerGenericReceiveTransitions.",
            "VernacEndSegment",
            "2f05d0e21fb2a7abbec8b93b38b40173c51973b6"
        ],
        [
            "Section ServerReceiveTransitions.",
            "VernacBeginSection",
            "a7a5a6a659fc3c73ec0b9860a88f39aa7fc5cc2d"
        ],
        [
            "Definition s_matches_tag (ss : server_state) from t := (t == acquire_tag) || ((t == release_tag) && (current_holder ss == Some from)).",
            "VernacDefinition",
            "be2fd2796df7e453b0c9de6d0aa0d0b70df34a62"
        ],
        [
            "Definition server_msg_wf d (C : LockCoh d) (this from : nid) := [pred m : TaggedMessage | s_matches_tag (getSt_server C) from (tag m)].",
            "VernacDefinition",
            "700299117e154b74fb216a70d776fe3219491819"
        ],
        [
            "Definition server_recv_acquire_trans := rs_recv_trans acquire_tag server_msg_wf.",
            "VernacDefinition",
            "ad327c7c08074700a1c5a411e3b6249bd5127c17"
        ],
        [
            "Definition server_recv_release_trans := rs_recv_trans release_tag server_msg_wf.",
            "VernacDefinition",
            "0d3ec83abd8265177539226cc83c86134080427d"
        ],
        [
            "End ServerReceiveTransitions.",
            "VernacEndSegment",
            "02022a8b6e5df497f1ead5e3c674c06b3766a609"
        ],
        [
            "Section ClientGenericSendTransitions.",
            "VernacBeginSection",
            "9a0d21178a019e4a4a86fa7798a0420b85d8954e"
        ],
        [
            "Definition HClient this to := (this \\in clients /\\ to == server).",
            "VernacDefinition",
            "110632a659d086960f00d23a69c822d51098eab3"
        ],
        [
            "Variable the_tag : nat.",
            "VernacAssumption",
            "44cff55f934c46074924259929d9f9b457164df4"
        ],
        [
            "Variable prec : client_state -> nid -> seq nat -> Prop.",
            "VernacAssumption",
            "15750aa45486e682f74e6f9c804369c96694e930"
        ],
        [
            "Hypothesis prec_safe : forall this to s m, HClient this to -> prec s to m -> msg_from_client (TMsg the_tag m).",
            "VernacAssumption",
            "74c7a24ca59ef4d14aec74cb391d7ac83488a00d"
        ],
        [
            "Notation coh := LockCoh.",
            "VernacSyntacticDefinition",
            "60263be42cf9244805fc3495205ceb653462aab8"
        ],
        [
            "Lemma client_send_this_in this to : HClient this to -> this \\in nodes.",
            "VernacStartTheoremProof",
            "ab8a92a51a4cc7303e1d57921d3f398bd49b40f9"
        ],
        [
            "case=>H _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply /client_nodes.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition client_send_safe (this n : nid) (d : dstatelet) (msg : seq nat) := HClient this n /\\ exists (HC : HClient this n) (C : coh d), prec (getSt_client C (client_send_this_in HC)) n msg.",
            "VernacDefinition",
            "0053d73af7098e5c0a713ceab553a3c11fa89017"
        ],
        [
            "Lemma client_send_safe_coh this to d m : client_send_safe this to d m -> coh d.",
            "VernacStartTheoremProof",
            "03417ad6e4295d63698eab77594716b6c59c0bea"
        ],
        [
            "by case => _[?][C].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma client_send_to_in this to : HClient this to -> to \\in nodes.",
            "VernacStartTheoremProof",
            "6c9c3f7a39e9374c7d2553b5599f5e99415fee6f"
        ],
        [
            "by case=>_ /eqP->; rewrite /nodes inE/= eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma client_send_safe_in this to d m : client_send_safe this to d m -> this \\in nodes /\\ to \\in nodes.",
            "VernacStartTheoremProof",
            "21c23ce492ff20e6ce6dfc4ce4144fc7757d12fb"
        ],
        [
            "case=>_[HC][C]_.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "exact: (client_send_this_in HC).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "exact: (client_send_to_in HC).",
            "VernacExtend",
            "ce637ff86bafca5d8359473e8c02af644dcbdc43"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition client_step (this to : nid) (d : dstatelet) (msg : seq nat) (pf : client_send_safe this to d msg) := let C := client_send_safe_coh pf in let s := getSt_client C (client_send_this_in (proj1 pf)) in Some (st :-> client_send_step s).",
            "VernacDefinition",
            "24bbe10e4d0f59f120138217768b3aa0434fe7aa"
        ],
        [
            "Lemma client_step_coh : s_step_coh_t coh the_tag client_step.",
            "VernacStartTheoremProof",
            "00e78936d12316c4d86af78619df024f03bd257a"
        ],
        [
            "move=>this to d msg pf h[]->{h}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have C : (coh d) by exact: (client_send_safe_coh pf).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have E: this \\in clients by case: pf=>_[][].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split=>/=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: soup_coh_post_msg; first by case:(client_send_safe_coh pf).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (pf)=>_[H][C']P/=.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists 0.",
            "VernacExtend",
            "b12b8acd7a1526ef0683513a127984e4864502d9"
        ],
        [
            "rewrite/coh_msg/= client_not_server// E.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split; first by case: (H).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: (prec_safe H P).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: coh_dom_upd=>//; case: (client_send_safe_in pf).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite validU; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>n Ni.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /local_coh/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /getLocal/=findU; case: ifP=>B; last by case: C=>_ _ _/(_ n Ni).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP: B=>Z; subst n.",
            "VernacExtend",
            "bb326bcdc9212df2647174d525914d8a4ad2e8a3"
        ],
        [
            "rewrite client_not_server// (cohVl C)/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite validPt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=>//.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by eexists.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma client_step_def this to d msg : client_send_safe this to d msg <-> exists b pf, @client_step this to d msg pf = Some b.",
            "VernacStartTheoremProof",
            "5f8945be65f816bd83e9b8dde0d3d9ce523c37c0"
        ],
        [
            "split=>[pf/=|]; last by case=>?[].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "set b := let C := client_send_safe_coh pf in let s := getSt_client C (client_send_this_in (proj1 pf)) in st :-> (client_send_step s).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "by exists b, pf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition client_send_trans := SendTrans client_send_safe_coh client_send_safe_in client_step_def client_step_coh.",
            "VernacDefinition",
            "073b0a3d38421d9b0d66d0eb489018c3b0e13fcb"
        ],
        [
            "End ClientGenericSendTransitions.",
            "VernacEndSegment",
            "50e2b816247f7c6b385eca76adabdebdd26a4d39"
        ],
        [
            "Section ClientSendTransitions.",
            "VernacBeginSection",
            "ccc802d9da346b5e511a74ee0937730f5d21f2fd"
        ],
        [
            "Definition client_send_acquire_prec (cs : client_state) (to : nid) (m : seq nat) := cs = NotHeld /\\ m = [::].",
            "VernacDefinition",
            "6a43481ffb49c807e0eb8731074cba9105793552"
        ],
        [
            "Program Definition client_send_acquire_trans : send_trans LockCoh := @client_send_trans acquire_tag client_send_acquire_prec _.",
            "VernacDefinition",
            "b32a669203fc396636f6e6494eca8ccb91f8771c"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply/andP=>/=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "split=>//.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by case: H0=>_/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition client_send_release_prec (cs : client_state) (to : nid) (m : seq nat) := (exists e, cs = Held e) /\\ m = [::].",
            "VernacDefinition",
            "214fd0ac9f738f2aa815b55409f3ef891c65b645"
        ],
        [
            "Program Definition client_send_release_trans : send_trans LockCoh := @client_send_trans release_tag client_send_release_prec _.",
            "VernacDefinition",
            "80d131c185a38443771217ff9e5e1fb9f28ca399"
        ],
        [
            "Next Obligation.",
            "VernacExtend",
            "de5e6a0a7a163af0d8463969c3ff4241d7d5bba0"
        ],
        [
            "apply/andP=>/=.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "split=>//.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by case: H0=>_/eqP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ClientSendTransitions.",
            "VernacEndSegment",
            "8f59041fa9fafb1c23bd2fe29f90849cb547045b"
        ],
        [
            "Section ClientGenericReceiveTransitions.",
            "VernacBeginSection",
            "056d3122fdbb3153915527b7495b0d3c8df921a5"
        ],
        [
            "Notation coh := LockCoh.",
            "VernacSyntacticDefinition",
            "60263be42cf9244805fc3495205ceb653462aab8"
        ],
        [
            "Variable the_tag : nat.",
            "VernacAssumption",
            "44cff55f934c46074924259929d9f9b457164df4"
        ],
        [
            "Variable client_recv_wf : forall d, coh d -> nid -> nid -> TaggedMessage -> bool.",
            "VernacAssumption",
            "48d779088ced91d08d65ad800fc7624a7998df4b"
        ],
        [
            "Definition rc_step : receive_step_t coh := fun this (from : nid) (m : seq nat) d (pf : coh d) (pt : this \\in nodes) => if (this \\in clients) then let s := getSt_client pf pt in st :-> client_recv_step s from the_tag m else getLocal this d.",
            "VernacDefinition",
            "a68dbdee119334de2ca91dd8726618448894ed60"
        ],
        [
            "Lemma rc_step_coh : r_step_coh_t client_recv_wf the_tag rc_step.",
            "VernacStartTheoremProof",
            "ed5e8d73db972f01feaa499b57da1fe9dac765a4"
        ],
        [
            "move=>d from this m C pf tms D F Wf T/=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /rc_step; case X: (this \\in clients); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split=>/=; first by apply: consume_coh.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by apply: coh_dom_upd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite validU; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Y: forall z : nat_eqType, z \\in nodes -> local_coh z (getLocal z d) by case: (C).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by move=>n Ni/=; move: (Y n Ni)=>L; rewrite -(getLocalU)// (cohVl C).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=>/=; first by apply: consume_coh.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: coh_dom_upd.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite validU; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>n Ni/=; rewrite /local_coh/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite /getLocal/=findU; case: ifP=>B/=; last by case: (C)=>_ _ _/(_ n Ni).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP: B X=>Z/eqP X/= ;rewrite !(cohVl C); subst n.",
            "VernacExtend",
            "c67b0068dad1f8f1ae533e1a4a862cd6ac3294b6"
        ],
        [
            "split; first done.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP: X => X.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite client_not_server X//.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "split=>//.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by eexists _.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rc_recv_trans := ReceiveTrans rc_step_coh.",
            "VernacDefinition",
            "286139f06c9958b81e1dfe5d86a05119cf326ace"
        ],
        [
            "End ClientGenericReceiveTransitions.",
            "VernacEndSegment",
            "c0431bab4699dbc2da2b9602f3d706e717620610"
        ],
        [
            "Section ClientReceiveTransitions.",
            "VernacBeginSection",
            "b9cdfa4ed16c15a0bc1511fe40498d27d1ff38b2"
        ],
        [
            "Definition client_msg_wf d (_ : LockCoh d) (this from : nid) := [pred m : TaggedMessage | true].",
            "VernacDefinition",
            "a700859d4d06fade1cf33bdbebe3ae32930adbe5"
        ],
        [
            "Definition client_receive_grant_trans := rc_recv_trans grant_tag client_msg_wf.",
            "VernacDefinition",
            "5bf81e3cd8c2d2c19adf4c67ecb4f8346603e0a7"
        ],
        [
            "End ClientReceiveTransitions.",
            "VernacEndSegment",
            "d9fc6105d9d7e3933943f24410cad65fbc8ceca3"
        ],
        [
            "Section Protocol.",
            "VernacBeginSection",
            "695090f638b84556087f901bb7382b56fef1a388"
        ],
        [
            "Variable l : Label.",
            "VernacAssumption",
            "aca5957ed38b3e3b45d48e71df1841eb1fc9d5f0"
        ],
        [
            "Definition lock_sends := [:: server_send_grant_trans; client_send_acquire_trans; client_send_release_trans ].",
            "VernacDefinition",
            "1c5451b0ddbced8bbc5ea6cf91fdbbaf45f26fdb"
        ],
        [
            "Definition lock_receives := [:: server_recv_acquire_trans; server_recv_release_trans; client_receive_grant_trans ].",
            "VernacDefinition",
            "1b3864f56ecc008b0260480e77ea84a24e125ee3"
        ],
        [
            "Program Definition LockProtocol : protocol := @Protocol _ l _ lock_sends lock_receives _ _.",
            "VernacDefinition",
            "63a673ff7248ffe58556d543f58e2ae3df959618"
        ],
        [
            "End Protocol.",
            "VernacEndSegment",
            "655d51001a6e3448f8243ee8e6e2afc49fa5fce2"
        ],
        [
            "End LockProtocol.",
            "VernacEndSegment",
            "2c0f3e90114a5cd1bf9b95cbc22f078c5a93f07b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Section Exports.",
            "VernacBeginSection",
            "3d3d73b16827535e7d0c9fdb92a2f163a05b14f4"
        ],
        [
            "Definition LockProtocol := LockProtocol.",
            "VernacDefinition",
            "4f7aef7e8466ddcb022f77b22dea687e4077d2be"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End LockProtocol.",
            "VernacEndSegment",
            "2c0f3e90114a5cd1bf9b95cbc22f078c5a93f07b"
        ],
        [
            "Export LockProtocol.Exports.",
            "VernacImport",
            "5d92cc03c66b606e31a11ff5a8218225c2154cba"
        ]
    ],
    "proofs": [
        {
            "name": "client_not_server",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "move=>H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case E: (n == server)=>//.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move/eqP in E.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "subst n.",
                        "VernacExtend",
                        "658ba7b0c6dcaa38fbd1dbf1ac8b11db0853c08e"
                    ]
                },
                {
                    "command": [
                        "move: (Hnin).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "client_nodes",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "by rewrite inE orbC/= =>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "soup_coh_post_msg",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "move=>[H1 H2][y]Cm; split=>[|i ms/=]; first by rewrite valid_fresh.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite findUnL; last by rewrite valid_fresh.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>E; first by move/H2.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move/findPt_inv=>[Z G]; subst i m; exists y.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l1",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l2",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "by case; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l3",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "consume_coh",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "move=>C; split=>[|m' msg]; first by apply: consume_valid; rewrite (cohVs C).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case X: (m == m');[move/eqP: X=><-{m'}|].",
                        "VernacExtend",
                        "c4499c8f840c4e47d73ea32ebd509fa0e700d79a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case/(find_mark (cohVs C))=>tms[E]->{msg}.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case:(C); case=>_/(_ m tms E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_sym in X.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (mark_other (cohVs C) X)=>E.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by case:(C); case=>_; move/(_ m' msg E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coh_dom_upd",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "move=>D C z; rewrite -(cohDom C) domU inE/=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>///eqP->{z}; rewrite (cohDom C) D; apply: cohVl C.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "getLocal_coh",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "by case: C=>_ _ _ /(_ n)G; rewrite /local_coh/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "getLocal_server_st_tp",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "have pf: server \\in nodes by rewrite inE eqxx.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move: (getLocal_coh C pf); rewrite eqxx; move =>[V][s']Z; rewrite Z in V *.",
                        "VernacExtend",
                        "164dec8e666020d73c9ebc9fc08641d83bc05f4b"
                    ]
                },
                {
                    "command": [
                        "rewrite findPt /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case =><-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "getLocal_client_st_tp",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "have pf: n \\in nodes by rewrite inE/= orbC H.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move: (getLocal_coh C pf); rewrite H=>[[V]].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "rewrite client_not_server//.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "move=>[_][cs] L.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite L in V *.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite findPt /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case=> <-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "getSt_server_K",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "move=>E; rewrite /getSt_server/=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have pf: server \\in nodes by rewrite inE eqxx.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have V: valid (getLocal server d) by case: (getLocal_coh C pf).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move: (getLocal_server_st_tp C); rewrite !E=>/= H.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by apply: eqc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "getSt_client",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "case X: (c \\in clients); last by exact: NotHeld.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "exact: (match find st (getLocal c d) as f return _ = f -> _ with Some v => fun epf => icast (sym_eq (getLocal_client_st_tp C X epf)) (dyn_val v) | _ => fun epf => NotHeld end (erefl _)).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "getSt_client_K",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "move=>X E; rewrite /getSt_client/=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "have V: valid (getLocal c d) by case: (getLocal_coh C pf).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move: (getLocal_client_st_tp C); rewrite X !E=>/= H.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by apply: eqc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "server_send_safe_coh",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "by case=>_[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "server_send_this_in",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "by case=>/eqP->; rewrite inE eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "server_send_to_in",
            "line_nb": 129,
            "steps": [
                {
                    "command": [
                        "by case=>_; rewrite /nodes inE/= orbC=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "server_send_safe_in",
            "line_nb": 132,
            "steps": [
                {
                    "command": [
                        "by case=>[]=>G _; move/server_send_to_in: (G)->; case: G=>/eqP-> _; rewrite inE eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "server_step_def",
            "line_nb": 158,
            "steps": [
                {
                    "command": [
                        "split=>[pf/=|]; last by case=>?[].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "set b := let C := server_send_safe_coh pf in let s := getSt_server C in st :-> (server_send_step s to).",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "by exists b, pf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "server_send_grant_trans_obligation_1",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "case: H=>/eqP->H; rewrite /coh_msg eqxx; split=>//=.",
                        "VernacExtend",
                        "c4a46ac89a9c7997fc10e59922c13d5e3d2b0b23"
                    ]
                },
                {
                    "command": [
                        "case: H0=>[rest] [e] []-> ->/=.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /msg_from_server /= eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rs_step_coh",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "move=>d from this m C pf tms D F Wf T/=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /rs_step; case X: (this == server); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split=>/=; first by apply: consume_coh.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by apply: coh_dom_upd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by rewrite validU; apply: cohVl C.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>n Ni/=; case: (C)=>_ _ _/(_ n Ni)=>L; rewrite -(getLocalU)// (cohVl C).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split=>/=; first by apply: consume_coh.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: coh_dom_upd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite validU; apply: cohVl C.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>n Ni/=; rewrite /local_coh/=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite /getLocal/=findU; case: ifP=>B/=; last by case: (C)=>_ _ _/(_ n Ni).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move/eqP: B X=>Z/eqP X; subst n this; rewrite eqxx (cohVl C)/=.",
                        "VernacExtend",
                        "ea2cf4d7233aa95e0b0f1bbf65e6c4bc215b2c14"
                    ]
                },
                {
                    "command": [
                        "split; first by rewrite validPt.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by eexists.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "client_send_this_in",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "case=>H _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply /client_nodes.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "client_send_safe_coh",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "by case => _[?][C].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "client_send_to_in",
            "line_nb": 222,
            "steps": [
                {
                    "command": [
                        "by case=>_ /eqP->; rewrite /nodes inE/= eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "client_send_safe_in",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "case=>_[HC][C]_.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "exact: (client_send_this_in HC).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "exact: (client_send_to_in HC).",
                        "VernacExtend",
                        "ce637ff86bafca5d8359473e8c02af644dcbdc43"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "client_step_def",
            "line_nb": 260,
            "steps": [
                {
                    "command": [
                        "split=>[pf/=|]; last by case=>?[].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "set b := let C := client_send_safe_coh pf in let s := getSt_client C (client_send_this_in (proj1 pf)) in st :-> (client_send_step s).",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "by exists b, pf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "client_send_acquire_trans_obligation_1",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "apply/andP=>/=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "split=>//.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by case: H0=>_/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "client_send_release_trans_obligation_1",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "apply/andP=>/=.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "split=>//.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by case: H0=>_/eqP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rc_step_coh",
            "line_nb": 288,
            "steps": [
                {
                    "command": [
                        "move=>d from this m C pf tms D F Wf T/=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /rc_step; case X: (this \\in clients); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split=>/=; first by apply: consume_coh.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by apply: coh_dom_upd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by rewrite validU; apply: cohVl C.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have Y: forall z : nat_eqType, z \\in nodes -> local_coh z (getLocal z d) by case: (C).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by move=>n Ni/=; move: (Y n Ni)=>L; rewrite -(getLocalU)// (cohVl C).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split=>/=; first by apply: consume_coh.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: coh_dom_upd.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite validU; apply: cohVl C.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>n Ni/=; rewrite /local_coh/=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite /getLocal/=findU; case: ifP=>B/=; last by case: (C)=>_ _ _/(_ n Ni).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move/eqP: B X=>Z/eqP X/= ;rewrite !(cohVl C); subst n.",
                        "VernacExtend",
                        "c67b0068dad1f8f1ae533e1a4a862cd6ac3294b6"
                    ]
                },
                {
                    "command": [
                        "split; first done.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move/eqP: X => X.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite client_not_server X//.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "split=>//.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by eexists _.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}