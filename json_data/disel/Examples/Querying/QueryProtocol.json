{
    "filename": "Examples/Querying/QueryProtocol.v",
    "coq_project": "disel",
    "vernac_cmds": [
        [
            "From mathcomp.ssreflect Require Import ssreflect ssrbool ssrnat eqtype ssrfun seq.",
            "VernacRequire",
            "037d2ffdc90053d89d1b918c36daaeab721d2d83"
        ],
        [
            "From mathcomp Require Import path.",
            "VernacRequire",
            "7c70f445c754a2a74114416d587d02e512c693e2"
        ],
        [
            "Require Import Eqdep.",
            "VernacRequire",
            "a499933d0898d4c0e235af789d9252f633426d20"
        ],
        [
            "From fcsl Require Import axioms pred prelude ordtype finmap pcm unionmap heap.",
            "VernacRequire",
            "576c96e5dbde92d8f1878b78d95e36aa980a0403"
        ],
        [
            "From DiSeL Require Import Freshness State EqTypeX Protocols Worlds NetworkSem Rely Actions.",
            "VernacRequire",
            "433f376538950843be2a31220c18ec311daf7ccc"
        ],
        [
            "From DiSeL Require Import SeqLib.",
            "VernacRequire",
            "c398989d9278b2bbcd204e7797783d5200e869ba"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Import Prenex Implicits.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Definition left_inverse {A B : Type} (op: A -> B) (inv : B -> A) := forall x, inv (op x) = x.",
            "VernacDefinition",
            "b5cde8d83248827dcfba09ce22522c3c1967683e"
        ],
        [
            "Definition fresh_id (xs : seq (nid * nat)) : nat := (last 0 (sort oleq (unzip2 xs))).+1.",
            "VernacDefinition",
            "cc8c2621ba18af1b07edd28ab7cdbd386727d09a"
        ],
        [
            "Lemma zip_in2 (A B : eqType) (a : A) (b : B) xs: (a, b) \\in xs -> b \\in unzip2 xs.",
            "VernacStartTheoremProof",
            "a6b950ef4bbed5ed2b865bd78de1f9ec91da6e74"
        ],
        [
            "elim:xs=>//x xs Hi; rewrite inE.",
            "VernacExtend",
            "de65c8193056a36f6dbb91fe21357bd770b140db"
        ],
        [
            "case/orP; last by move/Hi=>/=; rewrite inE=>->; rewrite orbC.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: x=>x y/=/eqP[]Z1 Z2; subst x y; rewrite inE eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fresh_not_in z xs : (z, fresh_id xs) \\notin xs.",
            "VernacStartTheoremProof",
            "55c384ca60dd5437b6d95f6fb2a1255aa8045c62"
        ],
        [
            "suff X: ~((z, fresh_id xs) \\in xs) by apply/negP.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "rewrite /fresh_id=>H.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move: (zip_in2 H)=>{H}X; set ls := (unzip2 xs) in X.",
            "VernacExtend",
            "fd0300d8899563f42d81dc09cab8269e61be7289"
        ],
        [
            "have G: sorted oleq (sort oleq ls).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: (@sort_sorted [eqType of nat] oleq _).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite /oleq/=/ord/=; move=>a b; case: ltngtP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(mem_sort oleq) in X.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (sorted_last_key_max 0 G X).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (last 0 (sort oleq ls))=>n.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite /oleq/=/ord orbC -leq_eqVlt ltnn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Module QueryProtocol.",
            "VernacDefineModule",
            "9aab7eef1a7aee12bebb27218d5ce4cfb7648b64"
        ],
        [
            "Section QueryProtocol.",
            "VernacBeginSection",
            "0f343189f38e11c27acb001aa3b8931e63c15fd8"
        ],
        [
            "Variable Data : Type.",
            "VernacAssumption",
            "a96639eb9fe59fbca2f8146fe1b4b8fd346e23c1"
        ],
        [
            "Variable nodes : seq nat.",
            "VernacAssumption",
            "d690d483772aa59f98390c60c2e40fb372cd6329"
        ],
        [
            "Variable serialize : Data -> seq nat.",
            "VernacAssumption",
            "2d16b69c62a2b1aa737a0c15a109c638cc02b412"
        ],
        [
            "Variable deserialize : seq nat -> Data.",
            "VernacAssumption",
            "667707bad76b6b32111503fe360becb0aabdc01d"
        ],
        [
            "Hypothesis ds_inverse : left_inverse serialize deserialize.",
            "VernacAssumption",
            "8905d28a3fcdb2204a2f217d9b025b57437e6d53"
        ],
        [
            "Definition st := ptr_nat 1.",
            "VernacDefinition",
            "b14ba6b685a37e0333cb749673d4f4b0fb950659"
        ],
        [
            "Definition reqs := seq (nid * nat)%type.",
            "VernacDefinition",
            "fc40d5ab6299ff78e274bd5f3dc4f3730bcd0fa2"
        ],
        [
            "Definition resp := seq (nid * nat)%type.",
            "VernacDefinition",
            "f4cd22c616e9eacca9f17c0aa7ee344df614b100"
        ],
        [
            "Definition qstate := (reqs * resp)%type.",
            "VernacDefinition",
            "03aaeeb1b4165785b7cfb2e7b800b69de2707eb6"
        ],
        [
            "Definition localCoh (n : nid) : Pred heap := [Pred h | exists (s : qstate), h = st :-> s /\\ (uniq s.1 && uniq s.2)].",
            "VernacDefinition",
            "50af9f66b487371960a652097b1432abe934239c"
        ],
        [
            "Definition treq : nat := 0.",
            "VernacDefinition",
            "9e1efb6e92727b696d916305f579628019b5d1dd"
        ],
        [
            "Definition tresp : nat := 1.",
            "VernacDefinition",
            "14652cf8a9f14a7493457d4b02bf1c757a97803c"
        ],
        [
            "Definition tags := [:: treq; tresp].",
            "VernacDefinition",
            "251a137912b72e82ea5e6a560d003136d14d94ee"
        ],
        [
            "Definition cohMsg (ms: msg TaggedMessage) : Prop := let body := content ms in if tag body == treq then exists req_num, tms_cont body = [:: req_num] else exists resp_num sdata, tms_cont body = resp_num :: sdata.",
            "VernacDefinition",
            "3042b1ac9ff58786591f6c5644dccf226a143828"
        ],
        [
            "Definition soupCoh : Pred soup := [Pred s | valid s /\\ forall m ms, find m s = Some ms -> cohMsg ms].",
            "VernacDefinition",
            "d72d23bec614e4f3fdc603e7f3c8bab6d5d39cfd"
        ],
        [
            "Definition qcoh d : Prop := let: dl := dstate d in let: ds := dsoup d in [/\\ soupCoh ds, valid dl, dom dl =i nodes & forall n, n \\in dom dl -> localCoh n (getLocal n d)].",
            "VernacDefinition",
            "905e8f5450efffc63a3e90ca86d867399636ce1c"
        ],
        [
            "Lemma l1 d: qcoh d -> valid (dstate d).",
            "VernacStartTheoremProof",
            "e34db8550e8dce854168e155fcbf839df22eb291"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l2 d: qcoh d -> valid (dsoup d).",
            "VernacStartTheoremProof",
            "a5c189b436ab891d49426f7d4c9c93fa7d926696"
        ],
        [
            "by case; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l3 d: qcoh d -> dom (dstate d) =i nodes.",
            "VernacStartTheoremProof",
            "2a8168850276dc4d40c48f2a7ef268a01f6c1c92"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition QCoh := CohPred (CohPredMixin l1 l2 l3).",
            "VernacDefinition",
            "7ffaae886b47a150720c25e0eeea251e6094cf74"
        ],
        [
            "Lemma send_soupCoh d m : soupCoh (dsoup d) -> cohMsg m -> soupCoh (post_msg (dsoup d) m).1.",
            "VernacStartTheoremProof",
            "aea7c9460f9ddc5740f5898d62b0fc60f3ba5679"
        ],
        [
            "move=>[H1 H2]Cm; split=>[|i ms/=]; first by rewrite valid_fresh.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite findUnL; last by rewrite valid_fresh.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: ifP=>E; [by move/H2|by move/findPt_inv=>[Z G]; subst i m].",
            "VernacExtend",
            "a0aca20b17578d1b787c92027cfdd7144a6c36c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma consume_coh d m : QCoh d -> soupCoh (consume_msg (dsoup d) m).",
            "VernacStartTheoremProof",
            "b6a8fa187be2c14d6ec8725107740d8bb208c93b"
        ],
        [
            "move=>C; split=>[|m' msg]; first by apply: consume_valid; rewrite (cohVs C).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case X: (m == m');[move/eqP: X=><-{m'}|].",
            "VernacExtend",
            "c4499c8f840c4e47d73ea32ebd509fa0e700d79a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case/(find_mark (cohVs C))=>tms[E]->{msg}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case:(C); case=>_/(_ m tms E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eq_sym in X.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (mark_other (cohVs C) X)=>E.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by case:(C); case=>_; move/(_ m' msg E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trans_updDom this d s : this \\in nodes -> QCoh d -> dom (upd this s (dstate d)) =i nodes.",
            "VernacStartTheoremProof",
            "af0b97291470b3137191dea6a9356bc7795f2098"
        ],
        [
            "move=>D C z; rewrite -(cohDom C) domU inE/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case: ifP=>///eqP->{z}; rewrite (cohDom C) D; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cohSt n d (C : QCoh d) s: find st (getLocal n d) = Some s -> dyn_tp s = qstate.",
            "VernacStartTheoremProof",
            "77d0022583be69f747052d5a51536fc4b957fb69"
        ],
        [
            "case: (C)=>_ _ D G; case H: (n \\in nodes); rewrite -D in H.",
            "VernacExtend",
            "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move:(G _ H); case=>s'[]->_; rewrite findPt//=; case=><-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /getLocal; case: dom_find H=>//->; rewrite find0E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition getSt n d (C : QCoh d) : qstate := match find st (getLocal n d) as f return _ = f -> _ with Some v => fun epf => icast (sym_eq (cohSt C epf)) (dyn_val v) | _ => fun epf => ([::], [::]) end (erefl _).",
            "VernacDefinition",
            "5e1e92e1c6f0a35184592a2e529cf09bd0405f0b"
        ],
        [
            "Lemma getStK n d (C : QCoh d) s : getLocal n d = st :-> s -> getSt n C = s.",
            "VernacStartTheoremProof",
            "19a352a5cd6005b4c32e80ff85457a9e1a1012cf"
        ],
        [
            "by move=>E; rewrite /getSt/=; move: (cohSt C); rewrite !E/==>H; apply: eqc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma getStE n i j C C' (pf : n \\in nodes) : getLocal n j = getLocal n i -> @getSt n j C' = @getSt n i C.",
            "VernacStartTheoremProof",
            "85aecb88b667707de71a7d929cfbb9fa0b9ae49f"
        ],
        [
            "case: {-1}(C)=>_ _ D G; rewrite -D in pf; move:(G _ pf).",
            "VernacExtend",
            "c5cb6672fdde6b3af11f77240bf9bbcee9174e45"
        ],
        [
            "by move=>[s][E]_; rewrite (getStK C E) E; move/(getStK C' )->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma getStE' n i j C C' (pf : n \\in nodes) : @getSt n j C' = @getSt n i C -> getLocal n j = getLocal n i.",
            "VernacStartTheoremProof",
            "ffaebfd7cb25c15d5c0424df85c4b1ee49d89d99"
        ],
        [
            "case: {-1}(C)=>_ _ D G; rewrite -D in pf; move:(G _ pf).",
            "VernacExtend",
            "c5cb6672fdde6b3af11f77240bf9bbcee9174e45"
        ],
        [
            "move=>[s][E]_; rewrite (getStK C E) E=>H.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "case: {-1}(C')=>_ _ D'/(_ n)=>G'; rewrite D' in G'; rewrite D in pf.",
            "VernacExtend",
            "103f73786c4d99173521144480d211e4db86b48f"
        ],
        [
            "by move/G': pf=>[s'][E']_; rewrite (getStK C' E') in H; subst s'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation coh := QCoh.",
            "VernacSyntacticDefinition",
            "b8d83f236cee6d4e0f837a456ec48b33abf18290"
        ],
        [
            "Definition send_step_fun (q : qstate) (to : nid) (tag : nat) (rid: nat) : qstate := let: (xs, ys) := q in if tag == treq then ((to, fresh_id xs) :: xs, ys) else if (tag == tresp) && ((to, rid) \\in ys) then (xs, seq.rem (to, rid) ys) else q.",
            "VernacDefinition",
            "54cdde64be3cb5850323a3f411429a853cdbe863"
        ],
        [
            "Lemma send_step_uniq q to tag rid: uniq q.1 -> uniq q.2 -> uniq (send_step_fun q to tag rid).1 /\\ uniq (send_step_fun q to tag rid).2.",
            "VernacStartTheoremProof",
            "41f47412f32b78ef472570a6ed6b3ddb4d9595da"
        ],
        [
            "case: q=>xs ys/= U1 U2; rewrite /send_step_fun; case: ifP=>_/=.",
            "VernacExtend",
            "1dd33488047dbf70f12e12a749f59bfa780f9e04"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite U1 U2; rewrite fresh_not_in.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: ifP=>_//=; rewrite U1 rem_uniq //.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition receive_step_fun (q : qstate) (from : nid) (tag : nat) (rid : nat) := let: (xs, ys) := q in if (tag == treq) && ((from, rid) \\notin ys) then (xs, (from, rid) :: ys) else if (tag == tresp) && ((from, rid) \\in xs) then (seq.rem (from, rid) xs, ys) else q.",
            "VernacDefinition",
            "742116e8b79b3a06a8545c4988a0adae4ded68da"
        ],
        [
            "Lemma receive_step_uniq q from tag rid: uniq q.1 -> uniq q.2 -> uniq (receive_step_fun q from tag rid).1 /\\ uniq (receive_step_fun q from tag rid).2.",
            "VernacStartTheoremProof",
            "50fabe6616e6d13cee8c77fca6ba14a011060281"
        ],
        [
            "case: q=>xs ys/= U1 U2; rewrite /receive_step_fun; case: ifP=>B/=.",
            "VernacExtend",
            "1dd33488047dbf70f12e12a749f59bfa780f9e04"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite U1 U2 andbC/=; case/andP:B=>_->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case:ifP=>///andP[_ B']/=; rewrite U2 rem_uniq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section GenericQuerySendTransitions.",
            "VernacBeginSection",
            "4061d1eac4d20beeec364942df0d6f8d4db3b033"
        ],
        [
            "Definition Hn this to := this \\in nodes /\\ to \\in nodes.",
            "VernacDefinition",
            "f629afdc7b0a7252ca889be67a11566ac4863005"
        ],
        [
            "Definition mkLocal (q : qstate) := st :-> q.",
            "VernacDefinition",
            "8332f2d7d8ddad33b38a9f5db71d60eb16965eff"
        ],
        [
            "Variable stag : nat.",
            "VernacAssumption",
            "f969695fd84cfe1ee53eb0926507fd8eed4a4343"
        ],
        [
            "Variable prec : qstate -> nid -> seq nat -> Prop.",
            "VernacAssumption",
            "db4ed72d3984d1628f845580903b4b4f2f8c79a6"
        ],
        [
            "Definition prec_safe := forall this to q m, Hn this to -> prec q to m -> cohMsg (Msg (TMsg stag m) this to true).",
            "VernacDefinition",
            "3f5aa6dbf622cc415894dea11e8725feb5a0ef09"
        ],
        [
            "Hypothesis psafe : prec_safe.",
            "VernacAssumption",
            "a140bb4cdaf4fe55a2e949a4abff1f9fb7e13c50"
        ],
        [
            "Definition send_safe (this n : nid) (d : dstatelet) (msg : seq nat) := Hn this n /\\ exists (C : coh d), prec (getSt this C) n msg.",
            "VernacDefinition",
            "5a032315c511e6e0850ab66dfc4e0ab8dc7a1320"
        ],
        [
            "Lemma send_safe_coh this to d m : send_safe this to d m -> coh d.",
            "VernacStartTheoremProof",
            "94f280a2ff480b4dc83593aad8b667fd456e3b72"
        ],
        [
            "by case=>_[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma send_this_in this to : Hn this to -> this \\in nodes.",
            "VernacStartTheoremProof",
            "8c3ee432ba9004acfdfbdcf7727b234030ee76d4"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma send_safe_in this to d m : send_safe this to d m -> this \\in nodes /\\ to \\in nodes.",
            "VernacStartTheoremProof",
            "881953e5afe27abf2281974e955d7125b983c38f"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition send_step (this to : nid) (d : dstatelet) (msg : seq nat) (pf : send_safe this to d msg) := let C := send_safe_coh pf in let q := getSt this C in Some (mkLocal (send_step_fun q to stag (head 0 msg))).",
            "VernacDefinition",
            "d8c897fb99985a00214d8a3dbe5ce17560e86a4b"
        ],
        [
            "Lemma send_step_coh : s_step_coh_t coh stag send_step.",
            "VernacStartTheoremProof",
            "e04a4a861a9a15e1d4a2aa27b336e43a63a825b6"
        ],
        [
            "move=>this to d msg pf h[]->{h}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have C : (coh d) by case: pf=>?[].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split=>/=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: send_soupCoh; first by case:(send_safe_coh pf).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: (pf)=>H[C']P/=;move: (psafe H P).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite validU; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: trans_updDom=>//; case: (send_safe_in pf).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>n Ni.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /localCoh/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /getLocal/=findU; case: ifP=>B; rewrite domU inE B/= in Ni; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: C=>_ _ _/(_ n Ni).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP: B=>Z; subst n; rewrite/= (cohVl C)/=.",
            "VernacExtend",
            "8ac402145ea1427a6b5a4bd8192e492cb4c7292c"
        ],
        [
            "case: (send_safe_in pf); rewrite -(cohDom C)=>D _.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "case: C=>_ _ _/(_ this D); case=>q[H/andP[U1 U2]].",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "exists (send_step_fun (getSt this (send_safe_coh pf)) to stag (head 0 msg)).",
            "VernacExtend",
            "062713c317b162a1cc34c4a1f9b1a3d7594da874"
        ],
        [
            "by split=>//; apply/andP; rewrite (getStK _ H); apply: send_step_uniq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma send_safe_def this to d msg : send_safe this to d msg <-> exists b pf, @send_step this to d msg pf = Some b.",
            "VernacStartTheoremProof",
            "5813ce0c30f9aaff75869d7554e21162568d0e70"
        ],
        [
            "split=>[pf/=|]; last by case=>?[].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "set b := let C := send_safe_coh pf in let q := getSt this C in mkLocal (send_step_fun q to stag (head 0 msg)).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "by exists b, pf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition qsend_trans := SendTrans send_safe_coh send_safe_in send_safe_def send_step_coh.",
            "VernacDefinition",
            "e3028a78e85bedc65d2eb9034a01188cdd5811bf"
        ],
        [
            "End GenericQuerySendTransitions.",
            "VernacEndSegment",
            "862fa74607590def6b2483a1779ba3f346e2bcc7"
        ],
        [
            "Definition send_req_prec (q : qstate) (to : nid) (payload : seq nat) := payload = [::(fresh_id q.1)].",
            "VernacDefinition",
            "6e6a978d525997b6b3492034b6a6f5db6aaa855c"
        ],
        [
            "Lemma send_req_prec_safe : prec_safe treq send_req_prec.",
            "VernacStartTheoremProof",
            "c1810d19ee30957df3ea9519d1b2264b21fb7a92"
        ],
        [
            "by move=>this to q m Hn Hp; rewrite /cohMsg; exists (fresh_id q.1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition send_resp_prec (q : qstate) (to : nid) (payload : seq nat) := exists rid d, payload = rid :: (serialize d) /\\ (to, rid) \\in q.2.",
            "VernacDefinition",
            "efd92180fd01e283cb03a0bed53f52764d354fb1"
        ],
        [
            "Lemma send_resp_prec_safe : prec_safe tresp send_resp_prec.",
            "VernacStartTheoremProof",
            "e3e53acf8f126b9e520764cacb5c7555a373782d"
        ],
        [
            "move=>this from q m Hn Hp; rewrite /cohMsg/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case: Hp=>rid[d][H1]H2; exists rid, (serialize d).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition qsend_req := qsend_trans send_req_prec_safe.",
            "VernacDefinition",
            "6165db8e61f1a1913a501e5971649b5fa04d6ebe"
        ],
        [
            "Definition qsend_resp := qsend_trans send_resp_prec_safe.",
            "VernacDefinition",
            "422844efbe4d80844926b01cde337dd8116a01bc"
        ],
        [
            "Section GenericQueryReceiveTransitions.",
            "VernacBeginSection",
            "1a413de6608726774874a005ed18b9611d9cfbe0"
        ],
        [
            "Variable rtag : nat.",
            "VernacAssumption",
            "c3848a6745a066b5f58e03cc8de622b456cfe625"
        ],
        [
            "Variable rc_wf : forall d, coh d -> nid -> nid -> TaggedMessage -> bool.",
            "VernacAssumption",
            "8b75f780af8333461e2bb0f077eef29a657d29cc"
        ],
        [
            "Definition receive_step : receive_step_t coh := fun this (from : nid) (msg : seq nat) d (pf : coh d) (pt : this \\in nodes) => let q := getSt this pf in mkLocal (receive_step_fun q from rtag (head 0 msg)).",
            "VernacDefinition",
            "1c62fb091f8e75de7ceb1f17f5ddaf42fe06813b"
        ],
        [
            "Lemma receive_step_coh : r_step_coh_t rc_wf rtag receive_step.",
            "VernacStartTheoremProof",
            "7c9fd5389201b24d50952bbb694b67d8bf4b0809"
        ],
        [
            "move=>d from this m C pf tms D F Wf T/=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /receive_step.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split=>/=; first by apply: consume_coh.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite validU; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by apply: trans_updDom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>n Ni; rewrite /localCoh/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite /getLocal/=findU; case: ifP=>/=B; rewrite domU inE B/= in Ni; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: (C)=>_ _ _/(_ n Ni).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Ni; exists (receive_step_fun (getSt this C) from rtag (head 0 tms)).",
            "VernacExtend",
            "bb8f67642586ee246c094526e82a62f0ec9435ec"
        ],
        [
            "split=>//; clear Wf.",
            "VernacExtend",
            "b983ce0d48becfb14f5e75d53ef7e0f73029491d"
        ],
        [
            "have X: forall n, n \\in dom (dstate d) -> localCoh n (getLocal n d) by case: C.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "case:(X this D)=>q[H/andP[U1 U2]]; rewrite (getStK _ H).",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by apply/andP; apply: receive_step_uniq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition qrecv_trans := ReceiveTrans receive_step_coh.",
            "VernacDefinition",
            "723759cc0be46f6be28b8b6a513610b815cf0494"
        ],
        [
            "End GenericQueryReceiveTransitions.",
            "VernacEndSegment",
            "2a2da1d52d1fed70320b6f82363f6b3a1094f706"
        ],
        [
            "Definition query_msg_wf d (C : coh d) (this from : nid) := [pred m : TaggedMessage | (tag m == treq) || (tag m == tresp)].",
            "VernacDefinition",
            "40cf723e5e020b4ffb40f775783ec9ac2c71c43a"
        ],
        [
            "Definition qrecv_req := qrecv_trans treq query_msg_wf.",
            "VernacDefinition",
            "74bd65ae253599c5bb0d6c7b4fa26c0255529b66"
        ],
        [
            "Definition qrecv_resp := qrecv_trans tresp query_msg_wf.",
            "VernacDefinition",
            "6ce7872ac611f6a6b7d03e3d4cc849e7791b17f2"
        ],
        [
            "Section Protocol.",
            "VernacBeginSection",
            "695090f638b84556087f901bb7382b56fef1a388"
        ],
        [
            "Definition query_sends := [:: qsend_req; qsend_resp ].",
            "VernacDefinition",
            "8b2a8603bd0fabc41ee662a10205da9ab52c3553"
        ],
        [
            "Definition query_receives := [:: qrecv_req; qrecv_resp ].",
            "VernacDefinition",
            "9499cd34c5826c8146c6bb378cab580706db4b07"
        ],
        [
            "Program Definition QueryProtocol l : protocol := @Protocol _ l _ query_sends query_receives _ _.",
            "VernacDefinition",
            "37198382788ef30e8410d35885065ef826033cdc"
        ],
        [
            "End Protocol.",
            "VernacEndSegment",
            "655d51001a6e3448f8243ee8e6e2afc49fa5fce2"
        ],
        [
            "End QueryProtocol.",
            "VernacEndSegment",
            "6cb70abd8ed228d8e6f2db00d24c2284d3ff048e"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Section Exports.",
            "VernacBeginSection",
            "3d3d73b16827535e7d0c9fdb92a2f163a05b14f4"
        ],
        [
            "Definition treq := treq.",
            "VernacDefinition",
            "c93adc6a6b56708edfd81af2a36d40b4cdb45def"
        ],
        [
            "Definition tresp := tresp.",
            "VernacDefinition",
            "4e6545e39564390e566a03dbef19d68b913a9529"
        ],
        [
            "Definition getSt := getSt.",
            "VernacDefinition",
            "d87d9e399b71736a1e4c1eac23d50112d0b188de"
        ],
        [
            "Definition getStK := getStK.",
            "VernacDefinition",
            "d96fce417a5bd231c32c8594e23b020793eb2c6e"
        ],
        [
            "Definition getStE := getStE.",
            "VernacDefinition",
            "20bf5055df1b5cf5ec2b76a755c8960ea1a0ac66"
        ],
        [
            "Definition getStE' := getStE'.",
            "VernacDefinition",
            "c7d86fbef1986eb42f57e18c39adebb2ee75c040"
        ],
        [
            "Definition qsend_req := qsend_req.",
            "VernacDefinition",
            "a182f5dbf3d0615dfdea23053b9751033187cce2"
        ],
        [
            "Definition qsend_resp := qsend_resp.",
            "VernacDefinition",
            "11c4540187a8d1652a82dbe7fc485a5e193fba65"
        ],
        [
            "Definition qrecv_req := qrecv_req.",
            "VernacDefinition",
            "84e4aed344dc67f1d3f243b02168e8dde67e4144"
        ],
        [
            "Definition qrecv_resp := qrecv_resp.",
            "VernacDefinition",
            "b4c21074a87ebacf587ec9135287175588618bc0"
        ],
        [
            "Definition query_msg_wf := query_msg_wf.",
            "VernacDefinition",
            "fce8e58052ac26bef68c003d5ece9c0f251a9242"
        ],
        [
            "Definition qst := st.",
            "VernacDefinition",
            "de3457bf3ffa746bb600d94d7df848deb8151ca8"
        ],
        [
            "Definition QueryProtocol := QueryProtocol.",
            "VernacDefinition",
            "61fff42d33d765522f7169d432aa09160a047b48"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End QueryProtocol.",
            "VernacEndSegment",
            "6cb70abd8ed228d8e6f2db00d24c2284d3ff048e"
        ],
        [
            "Export QueryProtocol.Exports.",
            "VernacImport",
            "8eab7bd90eee1f3c010e0a788254f34490bf40a6"
        ]
    ],
    "proofs": [
        {
            "name": "zip_in2",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "elim:xs=>//x xs Hi; rewrite inE.",
                        "VernacExtend",
                        "de65c8193056a36f6dbb91fe21357bd770b140db"
                    ]
                },
                {
                    "command": [
                        "case/orP; last by move/Hi=>/=; rewrite inE=>->; rewrite orbC.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case: x=>x y/=/eqP[]Z1 Z2; subst x y; rewrite inE eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l1",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l2",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "by case; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l3",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "send_soupCoh",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "move=>[H1 H2]Cm; split=>[|i ms/=]; first by rewrite valid_fresh.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite findUnL; last by rewrite valid_fresh.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>E; [by move/H2|by move/findPt_inv=>[Z G]; subst i m].",
                        "VernacExtend",
                        "a0aca20b17578d1b787c92027cfdd7144a6c36c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "consume_coh",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "move=>C; split=>[|m' msg]; first by apply: consume_valid; rewrite (cohVs C).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case X: (m == m');[move/eqP: X=><-{m'}|].",
                        "VernacExtend",
                        "c4499c8f840c4e47d73ea32ebd509fa0e700d79a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case/(find_mark (cohVs C))=>tms[E]->{msg}.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case:(C); case=>_/(_ m tms E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_sym in X.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (mark_other (cohVs C) X)=>E.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by case:(C); case=>_; move/(_ m' msg E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trans_updDom",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "move=>D C z; rewrite -(cohDom C) domU inE/=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>///eqP->{z}; rewrite (cohDom C) D; apply: cohVl C.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cohSt",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "case: (C)=>_ _ D G; case H: (n \\in nodes); rewrite -D in H.",
                        "VernacExtend",
                        "d147e8bc1eb3ddfc0a007f64d0e0c4dbca6073ce"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move:(G _ H); case=>s'[]->_; rewrite findPt//=; case=><-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /getLocal; case: dom_find H=>//->; rewrite find0E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "getStK",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "by move=>E; rewrite /getSt/=; move: (cohSt C); rewrite !E/==>H; apply: eqc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "getStE",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "case: {-1}(C)=>_ _ D G; rewrite -D in pf; move:(G _ pf).",
                        "VernacExtend",
                        "c5cb6672fdde6b3af11f77240bf9bbcee9174e45"
                    ]
                },
                {
                    "command": [
                        "by move=>[s][E]_; rewrite (getStK C E) E; move/(getStK C' )->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "getStE'",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "case: {-1}(C)=>_ _ D G; rewrite -D in pf; move:(G _ pf).",
                        "VernacExtend",
                        "c5cb6672fdde6b3af11f77240bf9bbcee9174e45"
                    ]
                },
                {
                    "command": [
                        "move=>[s][E]_; rewrite (getStK C E) E=>H.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "case: {-1}(C')=>_ _ D'/(_ n)=>G'; rewrite D' in G'; rewrite D in pf.",
                        "VernacExtend",
                        "103f73786c4d99173521144480d211e4db86b48f"
                    ]
                },
                {
                    "command": [
                        "by move/G': pf=>[s'][E']_; rewrite (getStK C' E') in H; subst s'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "send_step_uniq",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "case: q=>xs ys/= U1 U2; rewrite /send_step_fun; case: ifP=>_/=.",
                        "VernacExtend",
                        "1dd33488047dbf70f12e12a749f59bfa780f9e04"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite U1 U2; rewrite fresh_not_in.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>_//=; rewrite U1 rem_uniq //.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "receive_step_uniq",
            "line_nb": 105,
            "steps": [
                {
                    "command": [
                        "case: q=>xs ys/= U1 U2; rewrite /receive_step_fun; case: ifP=>B/=.",
                        "VernacExtend",
                        "1dd33488047dbf70f12e12a749f59bfa780f9e04"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite U1 U2 andbC/=; case/andP:B=>_->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case:ifP=>///andP[_ B']/=; rewrite U2 rem_uniq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "send_safe_coh",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "by case=>_[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "send_this_in",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "send_safe_in",
            "line_nb": 125,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "send_safe_def",
            "line_nb": 151,
            "steps": [
                {
                    "command": [
                        "split=>[pf/=|]; last by case=>?[].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "set b := let C := send_safe_coh pf in let q := getSt this C in mkLocal (send_step_fun q to stag (head 0 msg)).",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "by exists b, pf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "send_req_prec_safe",
            "line_nb": 159,
            "steps": [
                {
                    "command": [
                        "by move=>this to q m Hn Hp; rewrite /cohMsg; exists (fresh_id q.1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "send_resp_prec_safe",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "move=>this from q m Hn Hp; rewrite /cohMsg/=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case: Hp=>rid[d][H1]H2; exists rid, (serialize d).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "receive_step_coh",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "move=>d from this m C pf tms D F Wf T/=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /receive_step.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split=>/=; first by apply: consume_coh.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by rewrite validU; apply: cohVl C.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by apply: trans_updDom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>n Ni; rewrite /localCoh/=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite /getLocal/=findU; case: ifP=>/=B; rewrite domU inE B/= in Ni; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: (C)=>_ _ _/(_ n Ni).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite Ni; exists (receive_step_fun (getSt this C) from rtag (head 0 tms)).",
                        "VernacExtend",
                        "bb8f67642586ee246c094526e82a62f0ec9435ec"
                    ]
                },
                {
                    "command": [
                        "split=>//; clear Wf.",
                        "VernacExtend",
                        "b983ce0d48becfb14f5e75d53ef7e0f73029491d"
                    ]
                },
                {
                    "command": [
                        "have X: forall n, n \\in dom (dstate d) -> localCoh n (getLocal n d) by case: C.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "case:(X this D)=>q[H/andP[U1 U2]]; rewrite (getStK _ H).",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by apply/andP; apply: receive_step_uniq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}