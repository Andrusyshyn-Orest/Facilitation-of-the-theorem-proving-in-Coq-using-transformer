{
    "filename": "Examples/Calculator/CalculatorInvariant.v",
    "coq_project": "disel",
    "vernac_cmds": [
        [
            "From mathcomp.ssreflect Require Import ssreflect ssrbool ssrnat eqtype ssrfun seq.",
            "VernacRequire",
            "037d2ffdc90053d89d1b918c36daaeab721d2d83"
        ],
        [
            "From mathcomp Require Import path.",
            "VernacRequire",
            "7c70f445c754a2a74114416d587d02e512c693e2"
        ],
        [
            "Require Import Eqdep.",
            "VernacRequire",
            "a499933d0898d4c0e235af789d9252f633426d20"
        ],
        [
            "Require Import Relation_Operators.",
            "VernacRequire",
            "5c09f52be79db9d019c350cc3153659920102fbb"
        ],
        [
            "From fcsl Require Import axioms pred prelude ordtype finmap pcm unionmap heap.",
            "VernacRequire",
            "576c96e5dbde92d8f1878b78d95e36aa980a0403"
        ],
        [
            "From DiSeL Require Import Freshness State EqTypeX Protocols Worlds NetworkSem Rely.",
            "VernacRequire",
            "26e11e2fa076d0e09ced8c25739f81efacc39c1d"
        ],
        [
            "From DiSeL Require Import Actions Injection Process Always HoareTriples InferenceRules.",
            "VernacRequire",
            "7ad4d509680a53857edde447eef7d606efef38a6"
        ],
        [
            "From DiSeL Require Import InductiveInv StatePredicates.",
            "VernacRequire",
            "146e448633ea4e067f741de5a5c5cea892e0d792"
        ],
        [
            "From DiSeL Require Import CalculatorProtocol.",
            "VernacRequire",
            "d62d2ce13a99bbaae0f7a05a01e6e073c8672597"
        ],
        [
            "Section CalculatorInductiveInv.",
            "VernacBeginSection",
            "e2da7cdf3a8bff5f638bfdb411be1106e5f79401"
        ],
        [
            "Variable l : Label.",
            "VernacAssumption",
            "aca5957ed38b3e3b45d48e71df1841eb1fc9d5f0"
        ],
        [
            "Variable f : input -> option nat.",
            "VernacAssumption",
            "7d6ed1dcc87974f361ab4da38798ed33b492e0b4"
        ],
        [
            "Variable prec : input -> bool.",
            "VernacAssumption",
            "9233668e2a8a42a88ffb16b02b647817c44a74e6"
        ],
        [
            "Hypothesis prec_valid : forall i, prec i -> exists v, f i = Some v.",
            "VernacAssumption",
            "1241c374d0ceffb180f67e82b1d3e858dcbbf00e"
        ],
        [
            "Variable cs: seq nid.",
            "VernacAssumption",
            "2c7d18da0fb483bf598013513030d91cc4659887"
        ],
        [
            "Variable cls : seq nid.",
            "VernacAssumption",
            "3f1f7e77df822db3693345111045eaeaf550feae"
        ],
        [
            "Notation nodes := (cs ++ cls).",
            "VernacSyntacticDefinition",
            "d77e9f1bb6c9e287d5336ff16eaedcecf8990e04"
        ],
        [
            "Hypothesis Huniq : uniq nodes.",
            "VernacAssumption",
            "1faa976fa582f3221263ad98e03da35018e1cef6"
        ],
        [
            "Notation cal := (CalculatorProtocol f prec cs cls l).",
            "VernacSyntacticDefinition",
            "fcbee21bed7171924d08b8662188055b6494046f"
        ],
        [
            "Notation sts := (snd_trans cal).",
            "VernacSyntacticDefinition",
            "0d8aa6a0ed746c64d0da4836ccdb462c6dd5d477"
        ],
        [
            "Notation rts := (rcv_trans cal).",
            "VernacSyntacticDefinition",
            "1b48a8d4000a1da718ae3dbe969d46aa0b8f755f"
        ],
        [
            "Definition reqs := cstate.",
            "VernacDefinition",
            "f7632c76036669ecc8910058c78d1ed52f254c06"
        ],
        [
            "Notation coh := (coh cal).",
            "VernacSyntacticDefinition",
            "a36e0adb18bf16aa35afe7fe252c13afa71e5921"
        ],
        [
            "Notation loc n d := (getLocal n d).",
            "VernacSyntacticDefinition",
            "62b79f792b3f8c249c18dbe41c858de99a1112df"
        ],
        [
            "Lemma nodes_falso z : z \\in cs -> z \\in cls -> False.",
            "VernacStartTheoremProof",
            "87eae58a226520ec9b1e4ac4c96975ccb9e43afb"
        ],
        [
            "move=>H1 H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (Huniq); rewrite cat_uniq=>/andP[_]/andP[/negP H]_.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by apply: H; apply/hasP; exists z.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition CalcInv d := forall (C: coh d) n to v args i s', n \\in cls -> to \\in cs -> dsoup d = i \\\\-> (Msg (TMsg resp (v::args)) to n true) \\+ s' -> f args = Some v.",
            "VernacDefinition",
            "105dacd1d6a7d618e290ec208b46f962cc1f3535"
        ],
        [
            "Notation cal' := (CalculatorProtocol f prec cs cls l).",
            "VernacSyntacticDefinition",
            "89fd27b0de09641c3417ab76fac3bee61f13453f"
        ],
        [
            "Notation coh' := (coh cal).",
            "VernacSyntacticDefinition",
            "cd55ecb6c3248210a60b8fc138812f8eef853485"
        ],
        [
            "Notation Sinv := (@S_inv cal (fun d _ => CalcInv d)).",
            "VernacSyntacticDefinition",
            "2701b94fd710e028661c86dc2bab655c23d43d4c"
        ],
        [
            "Notation Rinv := (@R_inv cal (fun d _ => CalcInv d)).",
            "VernacSyntacticDefinition",
            "ed0940ff5a2318aaf6471f1df5da32004ec6b8fc"
        ],
        [
            "Notation PI := pf_irr.",
            "VernacSyntacticDefinition",
            "f8bb7e142705f380784c2cb7a7d143fb92625ac8"
        ],
        [
            "Program Definition s1: Sinv (server_send_trans f prec cs cls).",
            "VernacDefinition",
            "0daf4135c6af55d313fe7f41b5087fda7ce9b090"
        ],
        [
            "move=>this to d msg S b.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move=>/= Hi E G C' n to' v' args' i s1 N1 N2/= Es.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (S)=>_[_][C]/hasP[[[me cc]args]]_.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case/andP=>/eqP Z1/andP[/eqP Y]/eqP Z2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (cohVs C')=>V; rewrite joinC/= in Es V.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move: (cancel2 V Es)=>/=; case: ifP.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>_; case.",
            "VernacExtend",
            "13cdd70b13aea3628ea3f18b267849fbdecfe9bf"
        ],
        [
            "case=>Z3 Z4 Z5 Z6; subst s1 to to' msg.",
            "VernacExtend",
            "286d434853f7c6914e248086cfe6d0e38ba75549"
        ],
        [
            "by simpl in Y; case: Z2=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>_[E1]/=E2 E3; subst to.",
            "VernacExtend",
            "1ab624f0bc6838be2625ac475e3dbeb5ac4f0a3d"
        ],
        [
            "clear Es V.",
            "VernacExtend",
            "fba493d6442a3d92f7a37415cdc92594d1d0f345"
        ],
        [
            "by apply: (Hi C n to' v' args' i _ _ _ E2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition s2: Sinv (client_send_trans prec cs cls).",
            "VernacDefinition",
            "bcdeb5d4c60e4b656f62c5c907acfb1b6f6aa363"
        ],
        [
            "move=>this to d msg S b.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move=>/= Hi E G C' n to' v' args' i s1 N1 N2/= Es.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (cohVs C')=>V; rewrite joinC/= in Es V.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move: (cancel2 V Es)=>/=; case: ifP; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>_[E1]/=E2 E3; clear Es V.",
            "VernacExtend",
            "9e29f3b67380f9c35c1274615d4b4000efd2cff2"
        ],
        [
            "by case: (S)=>_[_]C _; apply: (Hi C n to' v' args' i _ _ _ E2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/eqP=>Z; subst i; by case; discriminate.",
            "VernacExtend",
            "a154e8607c0a49df647ee3b64bb6ea77d8d531df"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition r1: Rinv (server_recv_trans prec cs cls).",
            "VernacDefinition",
            "a352bd949f9035324807793170e2781738cfa043"
        ],
        [
            "move=>d from this i C m pf Hi F D Hw Et _.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move=> C' n to v args i' s1 N1 N2/=Es.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "suff Es' : exists s', dsoup d = i' \\\\-> {| content := {| tag := resp; tms_cont := v :: args |}; from := to; to := n; active := true |} \\+ s'.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by case: Es'=>s' Es'; apply: (Hi C n to v args i' _ N1 N2 Es').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case B: (i \\in dom (dsoup d)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move: dom_find B Es; rewrite /consume_msg; case=>//->_->; exists s1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/um_eta: B=>[vm][_]S1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (cohVs C)=>V; rewrite S1 in V.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite S1 joinC consumeUn ?eqxx joinC// in Es.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff V': valid (i \\\\-> mark_msg vm \\+ free (cT:=union_mapUMC mid (msg TaggedMessage)) i (dsoup d)).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: (cancel2 V' Es); case: ifP=>B.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move/eqP:B=>B{S1 V V' Es}; subst i'.",
            "VernacExtend",
            "3cdb0c222fe6bce88551ccb33225c49c16af4c59"
        ],
        [
            "by case: vm=>????/=; rewrite /mark_msg/=; case; discriminate.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case=>_ X2 _; rewrite X2 joinCA in S1; rewrite S1; eexists _.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (consume_valid i V).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /consume_msg/= findUnL// ?domPt inE/= eqxx findPt/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite updUnL/= domPt/=!inE eqxx !updPt/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Program Definition r2: Rinv (client_recv_trans prec cs cls).",
            "VernacDefinition",
            "26d5a262de3ff869fa99f8dae63a04423c6923af"
        ],
        [
            "move=>d from this i C m pf Hi F D Hw Et _.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move=> C' n to v args i' s1 N1 N2/=Es.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "suff Es' : exists s', dsoup d = i' \\\\-> {| content := {| tag := resp; tms_cont := v :: args |}; from := to; to := n; active := true |} \\+ s'.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by case: Es'=>s' Es'; apply: (Hi C n to v args i' _ N1 N2 Es').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case B: (i \\in dom (dsoup d)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move: dom_find B Es; rewrite /consume_msg; case=>//->_->; exists s1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/um_eta: B=>[vm][_]S1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (cohVs C)=>V; rewrite S1 in V.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite S1 joinC consumeUn ?eqxx joinC// in Es.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff V': valid (i \\\\-> mark_msg vm \\+ free (cT:=union_mapUMC mid (msg TaggedMessage)) i (dsoup d)).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: (cancel2 V' Es); case: ifP=>B.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move/eqP:B=>B{S1 V V' Es}; subst i'.",
            "VernacExtend",
            "3cdb0c222fe6bce88551ccb33225c49c16af4c59"
        ],
        [
            "by case: vm=>????/=; rewrite /mark_msg/=; case; discriminate.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case=>_ X2 _; rewrite X2 joinCA in S1; rewrite S1; eexists _.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (consume_valid i V).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /consume_msg/= findUnL// ?domPt inE/= eqxx findPt/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite updUnL/= domPt/=!inE eqxx !updPt/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition sts' := [:: SI s1; SI s2].",
            "VernacDefinition",
            "f2104b8fe2e316ea4c4b2c417a481377112936b6"
        ],
        [
            "Definition rts' := [:: RI r1; RI r2].",
            "VernacDefinition",
            "a74a6f404cc09491286a3c166fdc4b3edcf8d074"
        ],
        [
            "Program Definition ii := @ProtocolWithInvariant.II _ _ sts' rts' _ _.",
            "VernacDefinition",
            "a26cc7247808373d1f1b336b0521623d041edabd"
        ],
        [
            "Definition cal_with_inv := ProtocolWithIndInv ii.",
            "VernacDefinition",
            "ee3e51cd4ef7d346bdf5fdc5bfed79b59bfe07be"
        ],
        [
            "End CalculatorInductiveInv.",
            "VernacEndSegment",
            "1951f3f42a6607635c1b141192820b9b268b44f1"
        ]
    ],
    "proofs": [
        {
            "name": "nodes_falso",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "move=>H1 H2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (Huniq); rewrite cat_uniq=>/andP[_]/andP[/negP H]_.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by apply: H; apply/hasP; exists z.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "s1",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "move=>this to d msg S b.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move=>/= Hi E G C' n to' v' args' i s1 N1 N2/= Es.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (S)=>_[_][C]/hasP[[[me cc]args]]_.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case/andP=>/eqP Z1/andP[/eqP Y]/eqP Z2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (cohVs C')=>V; rewrite joinC/= in Es V.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "move: (cancel2 V Es)=>/=; case: ifP.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>_; case.",
                        "VernacExtend",
                        "13cdd70b13aea3628ea3f18b267849fbdecfe9bf"
                    ]
                },
                {
                    "command": [
                        "case=>Z3 Z4 Z5 Z6; subst s1 to to' msg.",
                        "VernacExtend",
                        "286d434853f7c6914e248086cfe6d0e38ba75549"
                    ]
                },
                {
                    "command": [
                        "by simpl in Y; case: Z2=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>_[E1]/=E2 E3; subst to.",
                        "VernacExtend",
                        "1ab624f0bc6838be2625ac475e3dbeb5ac4f0a3d"
                    ]
                },
                {
                    "command": [
                        "clear Es V.",
                        "VernacExtend",
                        "fba493d6442a3d92f7a37415cdc92594d1d0f345"
                    ]
                },
                {
                    "command": [
                        "by apply: (Hi C n to' v' args' i _ _ _ E2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "s2",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "move=>this to d msg S b.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move=>/= Hi E G C' n to' v' args' i s1 N1 N2/= Es.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (cohVs C')=>V; rewrite joinC/= in Es V.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "move: (cancel2 V Es)=>/=; case: ifP; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>_[E1]/=E2 E3; clear Es V.",
                        "VernacExtend",
                        "9e29f3b67380f9c35c1274615d4b4000efd2cff2"
                    ]
                },
                {
                    "command": [
                        "by case: (S)=>_[_]C _; apply: (Hi C n to' v' args' i _ _ _ E2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/eqP=>Z; subst i; by case; discriminate.",
                        "VernacExtend",
                        "a154e8607c0a49df647ee3b64bb6ea77d8d531df"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r1",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "move=>d from this i C m pf Hi F D Hw Et _.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move=> C' n to v args i' s1 N1 N2/=Es.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "suff Es' : exists s', dsoup d = i' \\\\-> {| content := {| tag := resp; tms_cont := v :: args |}; from := to; to := n; active := true |} \\+ s'.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by case: Es'=>s' Es'; apply: (Hi C n to v args i' _ N1 N2 Es').",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case B: (i \\in dom (dsoup d)); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move: dom_find B Es; rewrite /consume_msg; case=>//->_->; exists s1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/um_eta: B=>[vm][_]S1.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (cohVs C)=>V; rewrite S1 in V.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite S1 joinC consumeUn ?eqxx joinC// in Es.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "suff V': valid (i \\\\-> mark_msg vm \\+ free (cT:=union_mapUMC mid (msg TaggedMessage)) i (dsoup d)).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move: (cancel2 V' Es); case: ifP=>B.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move/eqP:B=>B{S1 V V' Es}; subst i'.",
                        "VernacExtend",
                        "3cdb0c222fe6bce88551ccb33225c49c16af4c59"
                    ]
                },
                {
                    "command": [
                        "by case: vm=>????/=; rewrite /mark_msg/=; case; discriminate.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case=>_ X2 _; rewrite X2 joinCA in S1; rewrite S1; eexists _.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (consume_valid i V).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /consume_msg/= findUnL// ?domPt inE/= eqxx findPt/=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite updUnL/= domPt/=!inE eqxx !updPt/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r2",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "move=>d from this i C m pf Hi F D Hw Et _.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move=> C' n to v args i' s1 N1 N2/=Es.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "suff Es' : exists s', dsoup d = i' \\\\-> {| content := {| tag := resp; tms_cont := v :: args |}; from := to; to := n; active := true |} \\+ s'.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by case: Es'=>s' Es'; apply: (Hi C n to v args i' _ N1 N2 Es').",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case B: (i \\in dom (dsoup d)); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move: dom_find B Es; rewrite /consume_msg; case=>//->_->; exists s1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/um_eta: B=>[vm][_]S1.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (cohVs C)=>V; rewrite S1 in V.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite S1 joinC consumeUn ?eqxx joinC// in Es.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "suff V': valid (i \\\\-> mark_msg vm \\+ free (cT:=union_mapUMC mid (msg TaggedMessage)) i (dsoup d)).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move: (cancel2 V' Es); case: ifP=>B.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move/eqP:B=>B{S1 V V' Es}; subst i'.",
                        "VernacExtend",
                        "3cdb0c222fe6bce88551ccb33225c49c16af4c59"
                    ]
                },
                {
                    "command": [
                        "by case: vm=>????/=; rewrite /mark_msg/=; case; discriminate.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case=>_ X2 _; rewrite X2 joinCA in S1; rewrite S1; eexists _.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (consume_valid i V).",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /consume_msg/= findUnL// ?domPt inE/= eqxx findPt/=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite updUnL/= domPt/=!inE eqxx !updPt/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}