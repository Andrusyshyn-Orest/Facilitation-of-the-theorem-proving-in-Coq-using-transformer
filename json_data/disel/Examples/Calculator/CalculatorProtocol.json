{
    "filename": "Examples/Calculator/CalculatorProtocol.v",
    "coq_project": "disel",
    "vernac_cmds": [
        [
            "From mathcomp.ssreflect Require Import ssreflect ssrbool ssrnat eqtype ssrfun seq.",
            "VernacRequire",
            "037d2ffdc90053d89d1b918c36daaeab721d2d83"
        ],
        [
            "From mathcomp Require Import path.",
            "VernacRequire",
            "7c70f445c754a2a74114416d587d02e512c693e2"
        ],
        [
            "Require Import Eqdep.",
            "VernacRequire",
            "a499933d0898d4c0e235af789d9252f633426d20"
        ],
        [
            "Require Import Relation_Operators.",
            "VernacRequire",
            "5c09f52be79db9d019c350cc3153659920102fbb"
        ],
        [
            "From fcsl Require Import axioms pred prelude ordtype finmap pcm unionmap heap.",
            "VernacRequire",
            "576c96e5dbde92d8f1878b78d95e36aa980a0403"
        ],
        [
            "From DiSeL Require Import Freshness State EqTypeX Protocols Worlds NetworkSem Rely.",
            "VernacRequire",
            "26e11e2fa076d0e09ced8c25739f81efacc39c1d"
        ],
        [
            "From DiSeL Require Import Actions Injection Process Always HoareTriples InferenceRules.",
            "VernacRequire",
            "7ad4d509680a53857edde447eef7d606efef38a6"
        ],
        [
            "From DiSeL Require Import SeqLib.",
            "VernacRequire",
            "c398989d9278b2bbcd204e7797783d5200e869ba"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Import Prenex Implicits.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Module CalculatorProtocol.",
            "VernacDefineModule",
            "c957e54547043ba6bb0806d3309a90419e990297"
        ],
        [
            "Section CalculatorProtocol.",
            "VernacBeginSection",
            "a00bebe63e0e5eb724aa02a87d56e7406b52fd8e"
        ],
        [
            "Definition input := seq nat.",
            "VernacDefinition",
            "59003826e3546b535c8a0939f5e57303a49792fd"
        ],
        [
            "Variable f : input -> option nat.",
            "VernacAssumption",
            "7d6ed1dcc87974f361ab4da38798ed33b492e0b4"
        ],
        [
            "Variable prec : input -> bool.",
            "VernacAssumption",
            "9233668e2a8a42a88ffb16b02b647817c44a74e6"
        ],
        [
            "Hypothesis prec_valid : forall i, prec i -> exists v, f i = Some v.",
            "VernacAssumption",
            "1241c374d0ceffb180f67e82b1d3e858dcbbf00e"
        ],
        [
            "Variable cs: seq nid.",
            "VernacAssumption",
            "2c7d18da0fb483bf598013513030d91cc4659887"
        ],
        [
            "Variable cls : seq nid.",
            "VernacAssumption",
            "3f1f7e77df822db3693345111045eaeaf550feae"
        ],
        [
            "Notation nodes := (cs ++ cls).",
            "VernacSyntacticDefinition",
            "d77e9f1bb6c9e287d5336ff16eaedcecf8990e04"
        ],
        [
            "Hypothesis Huniq : uniq nodes.",
            "VernacAssumption",
            "1faa976fa582f3221263ad98e03da35018e1cef6"
        ],
        [
            "Definition st := ptr_nat 1.",
            "VernacDefinition",
            "b14ba6b685a37e0333cb749673d4f4b0fb950659"
        ],
        [
            "Definition perm := (nid * nat * (seq nat))%type.",
            "VernacDefinition",
            "ca0f0dd52974792fe0f9defed453856210de241b"
        ],
        [
            "Definition cstate := seq perm.",
            "VernacDefinition",
            "a3ea099e075f26604da88a4d8ee8d9c9f149f557"
        ],
        [
            "Definition all_valid (s : cstate) := all (fun e => prec e.2) s.",
            "VernacDefinition",
            "c0ca36d18f2cc60920d2946e24259c58b037dfb8"
        ],
        [
            "Definition localCoh (n : nid) : Pred heap := [Pred h | exists (s : cstate), h = st :-> s /\\ all_valid s].",
            "VernacDefinition",
            "5bc2f464a17bcf8e9b731f61ea0dd88a0c39659a"
        ],
        [
            "Definition req : nat := 0.",
            "VernacDefinition",
            "a9276329690212cdebc9d61de0715d728ebbfab5"
        ],
        [
            "Definition resp : nat := 1.",
            "VernacDefinition",
            "91709ebb35e583955055dbfa6b81d81d4dfb47d9"
        ],
        [
            "Definition tags := [:: req; resp].",
            "VernacDefinition",
            "68f76fde94c28013553f0c78cda4a92ba0b4c38c"
        ],
        [
            "Definition cohMsg (ms: msg TaggedMessage) : Prop := let body := content ms in if tag body == resp then [/\\ from ms \\in cs, to ms \\in cls & exists v args, tms_cont body = [:: v] ++ args] else [/\\ tag body == req, from ms \\in cls, to ms \\in cs & exists args, tms_cont body = args /\\ prec args].",
            "VernacDefinition",
            "cc899fe7011255cf2a2b7dd2d37274508202bd0b"
        ],
        [
            "Definition soupCoh : Pred soup := [Pred s | valid s /\\ forall m ms, find m s = Some ms -> cohMsg ms].",
            "VernacDefinition",
            "d72d23bec614e4f3fdc603e7f3c8bab6d5d39cfd"
        ],
        [
            "Definition calcoh d : Prop := let: dl := dstate d in let: ds := dsoup d in [/\\ soupCoh ds, dom dl =i nodes, valid dl & forall n, n \\in nodes -> localCoh n (getLocal n d)].",
            "VernacDefinition",
            "ec24b2709eec8e7f784c21c7808457321cd8cc9e"
        ],
        [
            "Lemma l1 d: calcoh d -> valid (dstate d).",
            "VernacStartTheoremProof",
            "428c67c77664b6cd500e1095ec2c7dd27d7a04f9"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l2 d: calcoh d -> valid (dsoup d).",
            "VernacStartTheoremProof",
            "d4e4ad3e05c2055774777ba5230bd71214af78b9"
        ],
        [
            "by case; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma l3 d: calcoh d -> dom (dstate d) =i nodes.",
            "VernacStartTheoremProof",
            "4ad78e5b6b6de7da61b8c9f7fae28b1ffafe30bf"
        ],
        [
            "by case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition CalCoh := CohPred (CohPredMixin l1 l2 l3).",
            "VernacDefinition",
            "76604a85af769f84ed62a3792792c3d798e62967"
        ],
        [
            "Lemma consume_coh d m : CalCoh d -> soupCoh (consume_msg (dsoup d) m).",
            "VernacStartTheoremProof",
            "ce077328b9270c34e0e97cfc23b73124f5a73d86"
        ],
        [
            "move=>C; split=>[|m' msg]; first by apply: consume_valid; rewrite (cohVs C).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case X: (m == m');[move/eqP: X=><-{m'}|].",
            "VernacExtend",
            "c4499c8f840c4e47d73ea32ebd509fa0e700d79a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case/(find_mark (cohVs C))=>tms[E]->{msg}.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case:(C); case=>_/(_ m tms E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite eq_sym in X.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (mark_other (cohVs C) X)=>E.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by case:(C); case=>_; move/(_ m' msg E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma trans_updDom this d s : this \\in nodes -> CalCoh d -> dom (upd this s (dstate d)) =i nodes.",
            "VernacStartTheoremProof",
            "dd9b681c137ceb1e6c8db9c286a20097fd7046ee"
        ],
        [
            "move=>D C z; rewrite -(cohDom C) domU inE/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by case: ifP=>///eqP->{z}; rewrite (cohDom C) D; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cs_in_nodes n : n \\in cs -> n \\in nodes.",
            "VernacStartTheoremProof",
            "ded6fba4b797f38ef60c7ed92d8d9e1c7fb0b05f"
        ],
        [
            "by rewrite mem_cat=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cohSt n d (C : CalCoh d) s: find st (getLocal n d) = Some s -> dyn_tp s = cstate.",
            "VernacStartTheoremProof",
            "89a5d0f620942edddfe5538e21da1d16031003cc"
        ],
        [
            "case: (C)=>_ _ _ G; case H: (n \\in nodes).",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move:(G _ H); case=>s'[]->_; rewrite findPt//=; case=><-.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /getLocal; rewrite -(cohDom C) in H.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "by case: dom_find H=>//->; rewrite find0E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition getSt n d (C : CalCoh d) : cstate := match find st (getLocal n d) as f return _ = f -> _ with Some v => fun epf => icast (sym_eq (cohSt C epf)) (dyn_val v) | _ => fun epf => [::] end (erefl _).",
            "VernacDefinition",
            "01bef927d3953c3cdef7417e09287ce096f3060d"
        ],
        [
            "Lemma getStK n d (C : CalCoh d) s : getLocal n d = st :-> s -> getSt n C = s.",
            "VernacStartTheoremProof",
            "d213b4f9ef428d8853b715c9a9ab64db7faaf541"
        ],
        [
            "move=>E; rewrite /getSt/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move: (cohSt C); rewrite !E/==>H.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by apply: eqc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma getStE n i j C C' (pf : n \\in nodes) : getLocal n j = getLocal n i -> @getSt n j C' = @getSt n i C.",
            "VernacStartTheoremProof",
            "85aecb88b667707de71a7d929cfbb9fa0b9ae49f"
        ],
        [
            "case: {-1}(C)=>_ _ _/(_ _ pf).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by move=>[s][E]_; rewrite (getStK C E) E; move/(getStK C' )->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma getStE' n i j C C' (pf : n \\in nodes) : @getSt n j C' = @getSt n i C -> getLocal n j = getLocal n i.",
            "VernacStartTheoremProof",
            "ffaebfd7cb25c15d5c0424df85c4b1ee49d89d99"
        ],
        [
            "case: {-1}(C)=>_ _ _/(_ _ pf).",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move=>[s][E]_; rewrite (getStK C E) E=>H.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "case: {-1}(C')=>_ _ _/(_ _ pf)=>[][s'][E']_.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite (getStK C' E') in H; subst s'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation coh := CalCoh.",
            "VernacSyntacticDefinition",
            "9ccae0c98ac62d5ed3deddb21640362cc5445208"
        ],
        [
            "Section ServerReceiveTransition.",
            "VernacBeginSection",
            "2e7f7d3faa117031c3cd82dd9da49b6ce939c046"
        ],
        [
            "Definition sr_wf d (_ : coh d) (this from : nid) msg := prec msg.",
            "VernacDefinition",
            "b6e67a893630745393c25dd1eacd1c1888caa5cc"
        ],
        [
            "Definition sr_step : receive_step_t coh := fun this (from : nid) (m : seq nat) d (pf : coh d) (pt : this \\in nodes) => if this \\in cs then let s := getSt this pf in st :-> ((from, this, m) :: s) else getLocal this d.",
            "VernacDefinition",
            "68c66733c4faa3e8016710783944ba7825cb217c"
        ],
        [
            "Lemma sr_step_coh : r_step_coh_t sr_wf req sr_step.",
            "VernacStartTheoremProof",
            "2485ca5da26541431d3e203927dd55233aed64e2"
        ],
        [
            "move=>d from this m C pf tms D F Wf T/=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /sr_step; case X: (this \\in cs); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split=>/=; first by apply: consume_coh.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by apply: trans_updDom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite validU; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>n Ni/=; case: (C)=>_ _ _/(_ n Ni)=>L; rewrite -(getLocalU)// (cohVl C).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=>/=; first by apply: consume_coh.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: trans_updDom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite validU; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>n Ni/=; rewrite /localCoh/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite /getLocal/=findU; case: ifP=>B/=; last by case: (C)=>_ _ _/(_ n Ni).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP: B X=>Z/eqP X; subst n; rewrite (cohVl C)/=.",
            "VernacExtend",
            "8ac402145ea1427a6b5a4bd8192e492cb4c7292c"
        ],
        [
            "have Y: all_valid (getSt this C).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case: {-1}(C)=>_ _ _/(_ _ pf)[]s[]/(getStK C)->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "exists ((from, this, tms_cont tms) :: (getSt this C)); split=>//.",
            "VernacExtend",
            "f6d805c42df9a59340c91d54c65dde213519b068"
        ],
        [
            "rewrite /all_valid/= in Y *; rewrite Y.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "by rewrite /sr_wf in Wf; rewrite Wf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition server_recv_trans := ReceiveTrans sr_step_coh.",
            "VernacDefinition",
            "8d4d9ef7a51c94454098b070b0f2646086973366"
        ],
        [
            "End ServerReceiveTransition.",
            "VernacEndSegment",
            "60176d2694c7d789abba4058c0c267c337efa89b"
        ],
        [
            "Section ServerSendTransition.",
            "VernacBeginSection",
            "afee940dfaa5769837d542bcaa9f097221c5f8d2"
        ],
        [
            "Definition entry_finder (to : nid) msg := let: ans := head 0 msg in fun e : perm => let: (n, _, args) := e in [&& n == to, f args == Some ans & msg == ans :: args].",
            "VernacDefinition",
            "8e75d07d1dfeff79580a7b866b90df1817614a38"
        ],
        [
            "Definition can_send (s : cstate) to msg := has (entry_finder to msg) s.",
            "VernacDefinition",
            "595135eb81965948e49f4a916197cd4e35cffbef"
        ],
        [
            "Definition ss_safe (this to : nid) (d : dstatelet) (msg : seq nat) := to \\in cls /\\ this \\in cs /\\ exists (C : coh d), has (entry_finder to msg) (getSt this C).",
            "VernacDefinition",
            "1b367cb3b74b7231c6c669204f944918e0f03ad0"
        ],
        [
            "Lemma ss_safe_coh this to d m : ss_safe this to d m -> coh d.",
            "VernacStartTheoremProof",
            "91e782125816b4b3284398430dd9e3212d0cf045"
        ],
        [
            "by case=>_[]_[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ss_safe_in this to d m : ss_safe this to d m -> this \\in nodes /\\ to \\in nodes.",
            "VernacStartTheoremProof",
            "9f8095ee17a394473bae9510fbcc6d30a7e1deeb"
        ],
        [
            "by rewrite !mem_cat; case=>->[->]_; split=>//; rewrite orbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ss_safe_this this to d m : ss_safe this to d m -> this \\in cs.",
            "VernacStartTheoremProof",
            "3df6c9a2cbb8bf842afb59652081ded52a554a23"
        ],
        [
            "by case=>_[?][].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ss_step (this to : nid) (d : dstatelet) (msg : seq nat) (pf : ss_safe this to d msg) := let C := ss_safe_coh pf in let s := getSt this C in Some (st :-> remove_elem s (to, this, (behead msg))).",
            "VernacDefinition",
            "f8f0e5e026635c2fff50863cb39cbbb74381afb9"
        ],
        [
            "Lemma ss_step_coh : s_step_coh_t coh resp ss_step.",
            "VernacStartTheoremProof",
            "90487a2c47212ca348456d4135ea148d2892340a"
        ],
        [
            "move=>this to d msg pf h[]->{h}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have C : (coh d) by case: pf=>?[_][].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split=>/=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split=>[|i ms/=]; first by rewrite valid_fresh (cohVs C).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite findUnL; last by rewrite valid_fresh (cohVs C).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: ifP=>E; first by case: C=>[[Vs]]H _ _ _; move/H.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/findPt_inv=>[Z G]; subst i ms.",
            "VernacExtend",
            "2a5ad3f2e4086f5085bb7f363d667783f20887a9"
        ],
        [
            "split; rewrite ?(proj2 (ss_safe_in pf))?(ss_safe_this pf)//.",
            "VernacExtend",
            "23414b1aa23418a1670d952f6b338db06304aa88"
        ],
        [
            "case: pf=>?[C'][tf]/hasP[]=>[[[n]]]h args _/andP[/eqP]Z1/andP[/eqP Z2]/eqP Z3//=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "case: pf=>[_][_][C']/hasP[[[x1] x2]]x3 H/andP[Z1]/andP[Z2]/eqP->.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by exists (head 0 msg), x3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>z.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (getSt this (ss_safe_coh pf) )=>G.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -(cohDom C) domU inE/= (cohVl C).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: ifP=>///eqP->{z}; rewrite (cohDom C)(proj1 (ss_safe_in pf)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite validU; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>n Ni.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /localCoh/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /getLocal/=findU; case: ifP=>B/=; last by case: C=>_ _ _/(_ n Ni).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP: B=>Z; subst n; rewrite (cohVl C).",
            "VernacExtend",
            "8ac402145ea1427a6b5a4bd8192e492cb4c7292c"
        ],
        [
            "exists (remove_elem (getSt this (ss_safe_coh pf)) (to, this, behead msg)).",
            "VernacExtend",
            "c1830657afd7ab459a4a367b9ba89efb0241b70c"
        ],
        [
            "split=>//; apply: remove_elem_all.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by case: {-1}(ss_safe_coh pf)=>_ _ _/(_ _ Ni)[]s[]/(getStK (ss_safe_coh pf))->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ss_safe_def this to d msg : ss_safe this to d msg <-> exists b pf, @ss_step this to d msg pf = Some b.",
            "VernacStartTheoremProof",
            "be534bf04998d860bb78b0ba9e1d4673b82eec53"
        ],
        [
            "split=>[pf/=|]; last by case=>?[].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "set b := let C := ss_safe_coh pf in let s := getSt this C in st :-> remove_elem s (to, this, (behead msg)).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "by exists b, pf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition server_send_trans := SendTrans ss_safe_coh ss_safe_in ss_safe_def ss_step_coh.",
            "VernacDefinition",
            "7f0f76b7a5fd0c04dc11baa7d840bdcf967e7278"
        ],
        [
            "End ServerSendTransition.",
            "VernacEndSegment",
            "d9b821c537bc973494eee7f32ad4db89bb4f976d"
        ],
        [
            "Section ClientSendTransition.",
            "VernacBeginSection",
            "cf48045eae0cdb15fce48b8cb39cd16c4f8221b3"
        ],
        [
            "Definition cs_safe (this to : nid) (d : dstatelet) (msg : seq nat) := [/\\ to \\in cs, this \\in cls, coh d & prec msg].",
            "VernacDefinition",
            "911faccda096de4cb0836321bb8782ed2e03a3ee"
        ],
        [
            "Lemma cs_safe_coh this to d m : cs_safe this to d m -> coh d.",
            "VernacStartTheoremProof",
            "650ee27408def46ac354c7d46a5b56b181697615"
        ],
        [
            "by case=>_[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cs_safe_in this to d m : cs_safe this to d m -> this \\in nodes /\\ to \\in nodes.",
            "VernacStartTheoremProof",
            "44bd897544a660d620237bb48146b2da06713954"
        ],
        [
            "by rewrite !mem_cat; case=>->->/=_ _; split=>//; rewrite orbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition cs_step (this to : nid) (d : dstatelet) (msg : seq nat) (pf : cs_safe this to d msg) := let C := cs_safe_coh pf in let s := getSt this C in Some (st :-> ((this, to, msg)::s)).",
            "VernacDefinition",
            "bc52db39b928232ba4b8c7828f2e13141880862d"
        ],
        [
            "Lemma cs_step_coh : s_step_coh_t coh req cs_step.",
            "VernacStartTheoremProof",
            "c3007ecae33c246dddfd1652508754ccd8152536"
        ],
        [
            "move=>this to d msg pf h[]->{h}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have C : (coh d) by case: pf=>?[].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split=>/=.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split=>[|i ms/=]; first by rewrite valid_fresh (cohVs C).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite findUnL; last by rewrite valid_fresh (cohVs C).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: ifP=>E; first by case: C=>[[Vs]]H _ _ _; move/H.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/findPt_inv=>[Z G]; subst i ms.",
            "VernacExtend",
            "2a5ad3f2e4086f5085bb7f363d667783f20887a9"
        ],
        [
            "split=>//; rewrite ?(proj2 (cs_safe_in pf)); rewrite ?(proj2 (cs_safe_in pf))?(cs_safe_this pf)//=; by case: pf=>// _ _ _; exists msg.",
            "VernacExtend",
            "22ea1281ec02d33a4bf70398b9df516cbf2c3e15"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>z; move: (getSt this (cs_safe_coh pf))=>G.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "rewrite -(cohDom C) domU inE/= (cohVl C).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: ifP=>///eqP->{z}; rewrite (cohDom C)(proj1 (cs_safe_in pf)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite validU; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>n Ni.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /localCoh/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /getLocal/=findU; case: ifP=>B; last by case: C=>_ _ _/(_ n Ni).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP: B=>Z; subst n; rewrite (cohVl C)/=.",
            "VernacExtend",
            "8ac402145ea1427a6b5a4bd8192e492cb4c7292c"
        ],
        [
            "exists ((this, to, msg) :: getSt this (cs_safe_coh pf)); split=>//.",
            "VernacExtend",
            "e4f63237d5cd55a17f8338526f06bb13b8760aa8"
        ],
        [
            "have Y: all_valid (getSt this (cs_safe_coh pf)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case: {-1}(cs_safe_coh pf)=>_ _ _/(_ _ Ni)[]s[]/(getStK (cs_safe_coh pf))->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite /=Y andbC/=; case: (pf).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cs_safe_def this to d msg : cs_safe this to d msg <-> exists b pf, @cs_step this to d msg pf = Some b.",
            "VernacStartTheoremProof",
            "51460287314d6a84bee9bc20df3f4ad23560835b"
        ],
        [
            "split=>[pf/=|]; last by case=>?[].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "set b := let C := cs_safe_coh pf in let s := getSt this C in st :-> ((this, to, msg)::s).",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "by exists b, pf.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition client_send_trans := SendTrans cs_safe_coh cs_safe_in cs_safe_def cs_step_coh.",
            "VernacDefinition",
            "36118fcdc44b4c0d832d112417abd81e0059fa28"
        ],
        [
            "End ClientSendTransition.",
            "VernacEndSegment",
            "61bf9b15d13f2cdaace16e0cc7a45dd62945f3eb"
        ],
        [
            "Section ClientReceiveTransition.",
            "VernacBeginSection",
            "5415f22a6ae5eda33159e41213e6fef5c76ff8ad"
        ],
        [
            "Definition cr_wf d (C : coh d) this from (msg : seq nat) := let s := getSt this C in let: args := (behead msg) in [&& (this, from, args) \\in s & size msg > 2].",
            "VernacDefinition",
            "0f8bd576b4213e93b47e0369b6628a752086fcc6"
        ],
        [
            "Definition cr_step : receive_step_t coh := fun this (from : nid) (m : seq nat) d (pf : coh d) (pt : this \\in nodes) => let s := getSt this pf : seq perm in st :-> remove_elem s (this, from, (behead m) : seq nat).",
            "VernacDefinition",
            "fbdc40a8b996343bc13dab2fb417144696277b7a"
        ],
        [
            "Lemma cr_step_coh : r_step_coh_t cr_wf resp cr_step.",
            "VernacStartTheoremProof",
            "d390fd8ac98f7c66c4aefb65a853778f4e299e84"
        ],
        [
            "move=>d from this m C pf tms D F Wf T/=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /sr_step; case X: (this \\in cs); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split=>/=; first by apply: consume_coh.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by apply: trans_updDom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite validU; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>n Ni/=; rewrite /localCoh/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite /getLocal/=findU; case: ifP=>B/=; last by case: (C)=>_ _ _/(_ n Ni).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP: B X=>Z/eqP X; subst n; rewrite (cohVl C)/=.",
            "VernacExtend",
            "8ac402145ea1427a6b5a4bd8192e492cb4c7292c"
        ],
        [
            "exists (remove_elem (getSt this C) (this, from, behead tms)).",
            "VernacExtend",
            "91adb767145b6be816fda95dff18c06929bdaaf8"
        ],
        [
            "split=>//; apply: remove_elem_all.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by case: {-1}(C)=>_ _ _/(_ _ Ni)[]s[]/(getStK (C))->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=>/=; first by apply: consume_coh.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: trans_updDom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite validU; apply: cohVl C.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>n Ni/=; rewrite /localCoh/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite /getLocal/=findU; case: ifP=>B/=; last by case: (C)=>_ _ _/(_ n Ni).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP: B X=>Z/eqP X; subst n; rewrite (cohVl C)/=.",
            "VernacExtend",
            "8ac402145ea1427a6b5a4bd8192e492cb4c7292c"
        ],
        [
            "exists (remove_elem (getSt this C) (this, from, behead tms)).",
            "VernacExtend",
            "91adb767145b6be816fda95dff18c06929bdaaf8"
        ],
        [
            "split=>//; apply: remove_elem_all.",
            "VernacExtend",
            "2855640502da0a3b2cfdfcd02ea9662c049d9a24"
        ],
        [
            "by case: {-1}(C)=>_ _ _/(_ _ Ni)[]s[]/(getStK (C))->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition client_recv_trans := ReceiveTrans cr_step_coh.",
            "VernacDefinition",
            "38e63c1e56ce8274bd63084c588c41c6ba466853"
        ],
        [
            "End ClientReceiveTransition.",
            "VernacEndSegment",
            "d73765ac727d7832b61a697f6b8e3aa3d792da5c"
        ],
        [
            "Section Protocol.",
            "VernacBeginSection",
            "695090f638b84556087f901bb7382b56fef1a388"
        ],
        [
            "Variable l : Label.",
            "VernacAssumption",
            "aca5957ed38b3e3b45d48e71df1841eb1fc9d5f0"
        ],
        [
            "Definition cal_sends := [:: server_send_trans; client_send_trans].",
            "VernacDefinition",
            "112015b690ba1a3ffec562da6d6c3adbeaa13fcd"
        ],
        [
            "Definition cal_receives := [:: server_recv_trans; client_recv_trans].",
            "VernacDefinition",
            "7f1cd79a825154f05adfa85edaf375b087bc46d3"
        ],
        [
            "Program Definition CalculatorProtocol : protocol := @Protocol _ l _ cal_sends cal_receives _ _.",
            "VernacDefinition",
            "30b202ce0fe108a416587b48487283ae99ac12ea"
        ],
        [
            "End Protocol.",
            "VernacEndSegment",
            "655d51001a6e3448f8243ee8e6e2afc49fa5fce2"
        ],
        [
            "End CalculatorProtocol.",
            "VernacEndSegment",
            "89af5e3d9025f8fbef0f8b765fbe08dd0d5a728f"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Definition CalculatorProtocol := CalculatorProtocol.",
            "VernacDefinition",
            "5f44f803a3c8354fd33c79932aee1948e5f533b2"
        ],
        [
            "Definition CalCoh := CalCoh.",
            "VernacDefinition",
            "6e81bbb4269e8ad021fb3a9144f47d1226d4306a"
        ],
        [
            "Definition server_send_trans := server_send_trans.",
            "VernacDefinition",
            "c973296dbbcff04bd6361b91dfcb7b9459943428"
        ],
        [
            "Definition server_recv_trans := server_recv_trans.",
            "VernacDefinition",
            "2ad192bc14fdbb426eb2c5f69dfc77b38af0a5e4"
        ],
        [
            "Definition client_send_trans := client_send_trans.",
            "VernacDefinition",
            "b553f38d271d0769d7eda4134cc8c2c1f85c0879"
        ],
        [
            "Definition client_recv_trans := client_recv_trans.",
            "VernacDefinition",
            "8b0d07b0418fd20341d8ce223e7c78ea36de682f"
        ],
        [
            "Definition req := req.",
            "VernacDefinition",
            "5f9891351ee280dc39fec045c5e224323a8645c1"
        ],
        [
            "Definition resp := resp.",
            "VernacDefinition",
            "569e8c816b2c3b40bab3eb366f4f0925ae1bd4de"
        ],
        [
            "Notation input := (seq nat).",
            "VernacSyntacticDefinition",
            "2821222c68fc1b0b98b7d69130c3200212fedcfd"
        ],
        [
            "Definition cstate := cstate.",
            "VernacDefinition",
            "882c8b1faa2f4010c8a6a294ee31bfa68d87a6b5"
        ],
        [
            "Definition getSt := getSt.",
            "VernacDefinition",
            "d87d9e399b71736a1e4c1eac23d50112d0b188de"
        ],
        [
            "Definition getStK := getStK.",
            "VernacDefinition",
            "d96fce417a5bd231c32c8594e23b020793eb2c6e"
        ],
        [
            "Definition getStE := getStE.",
            "VernacDefinition",
            "20bf5055df1b5cf5ec2b76a755c8960ea1a0ac66"
        ],
        [
            "Definition getStE' := getStE'.",
            "VernacDefinition",
            "c7d86fbef1986eb42f57e18c39adebb2ee75c040"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End CalculatorProtocol.",
            "VernacEndSegment",
            "89af5e3d9025f8fbef0f8b765fbe08dd0d5a728f"
        ],
        [
            "Export CalculatorProtocol.Exports.",
            "VernacImport",
            "8fa86786433b366975b0e93c6eaa487262df1277"
        ]
    ],
    "proofs": [
        {
            "name": "l1",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l2",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "by case; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "l3",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "by case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "consume_coh",
            "line_nb": 42,
            "steps": [
                {
                    "command": [
                        "move=>C; split=>[|m' msg]; first by apply: consume_valid; rewrite (cohVs C).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case X: (m == m');[move/eqP: X=><-{m'}|].",
                        "VernacExtend",
                        "c4499c8f840c4e47d73ea32ebd509fa0e700d79a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case/(find_mark (cohVs C))=>tms[E]->{msg}.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case:(C); case=>_/(_ m tms E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite eq_sym in X.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite (mark_other (cohVs C) X)=>E.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by case:(C); case=>_; move/(_ m' msg E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "trans_updDom",
            "line_nb": 52,
            "steps": [
                {
                    "command": [
                        "move=>D C z; rewrite -(cohDom C) domU inE/=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>///eqP->{z}; rewrite (cohDom C) D; apply: cohVl C.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cs_in_nodes",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "by rewrite mem_cat=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cohSt",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "case: (C)=>_ _ _ G; case H: (n \\in nodes).",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move:(G _ H); case=>s'[]->_; rewrite findPt//=; case=><-.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /getLocal; rewrite -(cohDom C) in H.",
                        "VernacExtend",
                        "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
                    ]
                },
                {
                    "command": [
                        "by case: dom_find H=>//->; rewrite find0E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "getStK",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "move=>E; rewrite /getSt/=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "move: (cohSt C); rewrite !E/==>H.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by apply: eqc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "getStE",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "case: {-1}(C)=>_ _ _/(_ _ pf).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by move=>[s][E]_; rewrite (getStK C E) E; move/(getStK C' )->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "getStE'",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "case: {-1}(C)=>_ _ _/(_ _ pf).",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move=>[s][E]_; rewrite (getStK C E) E=>H.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "case: {-1}(C')=>_ _ _/(_ _ pf)=>[][s'][E']_.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite (getStK C' E') in H; subst s'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sr_step_coh",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "move=>d from this m C pf tms D F Wf T/=.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /sr_step; case X: (this \\in cs); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split=>/=; first by apply: consume_coh.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by apply: trans_updDom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by rewrite validU; apply: cohVl C.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>n Ni/=; case: (C)=>_ _ _/(_ n Ni)=>L; rewrite -(getLocalU)// (cohVl C).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split=>/=; first by apply: consume_coh.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: trans_updDom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite validU; apply: cohVl C.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>n Ni/=; rewrite /localCoh/=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite /getLocal/=findU; case: ifP=>B/=; last by case: (C)=>_ _ _/(_ n Ni).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move/eqP: B X=>Z/eqP X; subst n; rewrite (cohVl C)/=.",
                        "VernacExtend",
                        "8ac402145ea1427a6b5a4bd8192e492cb4c7292c"
                    ]
                },
                {
                    "command": [
                        "have Y: all_valid (getSt this C).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case: {-1}(C)=>_ _ _/(_ _ pf)[]s[]/(getStK C)->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "exists ((from, this, tms_cont tms) :: (getSt this C)); split=>//.",
                        "VernacExtend",
                        "f6d805c42df9a59340c91d54c65dde213519b068"
                    ]
                },
                {
                    "command": [
                        "rewrite /all_valid/= in Y *; rewrite Y.",
                        "VernacExtend",
                        "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
                    ]
                },
                {
                    "command": [
                        "by rewrite /sr_wf in Wf; rewrite Wf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ss_safe_coh",
            "line_nb": 116,
            "steps": [
                {
                    "command": [
                        "by case=>_[]_[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ss_safe_in",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "by rewrite !mem_cat; case=>->[->]_; split=>//; rewrite orbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ss_safe_this",
            "line_nb": 122,
            "steps": [
                {
                    "command": [
                        "by case=>_[?][].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ss_safe_def",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "split=>[pf/=|]; last by case=>?[].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "set b := let C := ss_safe_coh pf in let s := getSt this C in st :-> remove_elem s (to, this, (behead msg)).",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "by exists b, pf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cs_safe_coh",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "by case=>_[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cs_safe_in",
            "line_nb": 166,
            "steps": [
                {
                    "command": [
                        "by rewrite !mem_cat; case=>->->/=_ _; split=>//; rewrite orbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cs_step_coh",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "move=>this to d msg pf h[]->{h}.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have C : (coh d) by case: pf=>?[].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "split=>/=.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "split=>[|i ms/=]; first by rewrite valid_fresh (cohVs C).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite findUnL; last by rewrite valid_fresh (cohVs C).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>E; first by case: C=>[[Vs]]H _ _ _; move/H.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move/findPt_inv=>[Z G]; subst i ms.",
                        "VernacExtend",
                        "2a5ad3f2e4086f5085bb7f363d667783f20887a9"
                    ]
                },
                {
                    "command": [
                        "split=>//; rewrite ?(proj2 (cs_safe_in pf)); rewrite ?(proj2 (cs_safe_in pf))?(cs_safe_this pf)//=; by case: pf=>// _ _ _; exists msg.",
                        "VernacExtend",
                        "22ea1281ec02d33a4bf70398b9df516cbf2c3e15"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>z; move: (getSt this (cs_safe_coh pf))=>G.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "rewrite -(cohDom C) domU inE/= (cohVl C).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: ifP=>///eqP->{z}; rewrite (cohDom C)(proj1 (cs_safe_in pf)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite validU; apply: cohVl C.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>n Ni.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /localCoh/=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /getLocal/=findU; case: ifP=>B; last by case: C=>_ _ _/(_ n Ni).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move/eqP: B=>Z; subst n; rewrite (cohVl C)/=.",
                        "VernacExtend",
                        "8ac402145ea1427a6b5a4bd8192e492cb4c7292c"
                    ]
                },
                {
                    "command": [
                        "exists ((this, to, msg) :: getSt this (cs_safe_coh pf)); split=>//.",
                        "VernacExtend",
                        "e4f63237d5cd55a17f8338526f06bb13b8760aa8"
                    ]
                },
                {
                    "command": [
                        "have Y: all_valid (getSt this (cs_safe_coh pf)).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case: {-1}(cs_safe_coh pf)=>_ _ _/(_ _ Ni)[]s[]/(getStK (cs_safe_coh pf))->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /=Y andbC/=; case: (pf).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cs_safe_def",
            "line_nb": 195,
            "steps": [
                {
                    "command": [
                        "split=>[pf/=|]; last by case=>?[].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "set b := let C := cs_safe_coh pf in let s := getSt this C in st :-> ((this, to, msg)::s).",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "by exists b, pf.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}