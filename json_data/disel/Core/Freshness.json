{
    "filename": "Core/Freshness.v",
    "coq_project": "disel",
    "vernac_cmds": [
        [
            "From mathcomp.ssreflect Require Import ssreflect ssrbool ssrnat eqtype ssrfun seq.",
            "VernacRequire",
            "037d2ffdc90053d89d1b918c36daaeab721d2d83"
        ],
        [
            "From mathcomp Require Import path.",
            "VernacRequire",
            "7c70f445c754a2a74114416d587d02e512c693e2"
        ],
        [
            "From fcsl Require Import pred prelude ordtype finmap pcm unionmap.",
            "VernacRequire",
            "45edc61148449a75d63c0ecdc3525acd3b5e46db"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Section Keys.",
            "VernacBeginSection",
            "82d5c1a8ef29da35e37a1c36f1514e8c39d16a85"
        ],
        [
            "Variables (K : ordType) (V : Type) (U : union_map_class K V).",
            "VernacAssumption",
            "6c83997684c41ce80a24208f3fa6dac48b1105b1"
        ],
        [
            "Implicit Types (k : K) (v : V) (f : U).",
            "VernacReserve",
            "e94d1ff0503dfc63bcf4f3abd1a840964e84391b"
        ],
        [
            "Lemma keys_last_mono f1 f2 k : path oleq k (dom f1) -> path oleq k (dom f2) -> (forall x, x \\in dom f1 -> x \\in dom f2) -> oleq (last k (dom f1)) (last k (dom f2)).",
            "VernacStartTheoremProof",
            "5569cafe4de42bcec4f6a7f517d9f7d9e83e92bc"
        ],
        [
            "rewrite !umEX; case: (UMC.from f1); first by move=>_ H _; apply: path_last H.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=>{f1} f1 /= _ H1; case: (UMC.from f2)=>/=.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>_ /allP; case: (supp f1)=>//; rewrite /oleq eq_refl orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>{f2} f2 /= _; apply: seq_last_mono H1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Keys.",
            "VernacEndSegment",
            "21af4155600120691029700c2441115d660c0a05"
        ],
        [
            "Section FreshLastKey.",
            "VernacBeginSection",
            "515d14b0c47f94fe7be47a2eaa5da483997ab76b"
        ],
        [
            "Variable V : Type.",
            "VernacAssumption",
            "7916504f668edb1889a5aca5d730ced22b8d98ed"
        ],
        [
            "Implicit Type f : union_map [ordType of nat] V.",
            "VernacReserve",
            "306665c9e35115889b4d51363e717205597937f9"
        ],
        [
            "Definition last_key f := last 0 (dom f).",
            "VernacDefinition",
            "119db5b29128f268080bb79ea64759c6e48d6720"
        ],
        [
            "Lemma last_key0 : last_key Unit = 0.",
            "VernacStartTheoremProof",
            "de0193e613c7bf323d0a7644085920dc1f2ce40e"
        ],
        [
            "by rewrite /last_key /Unit /= !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_key_dom f : valid f -> last_key f \\notin dom f -> f = Unit.",
            "VernacStartTheoremProof",
            "5e76e76e8055faeb95eb2f4eb52bd0d61b01af7d"
        ],
        [
            "rewrite /valid /= /last_key /Unit /= !umEX /= -{4}[f]UMC.tfE.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (UMC.from f)=>//=; case=>s H /= H1 _ /seq_last_in.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "rewrite /UM.empty UMC.eqE UM.umapE /supp fmapE /= {H H1}.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by elim: s.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_last_key f : valid f -> ~~ empb f -> last_key f \\in dom f.",
            "VernacStartTheoremProof",
            "4ba0ef93361742b1b7bfeaa2bffaaa0d5b627f09"
        ],
        [
            "by move=>X; apply: contraR; move/(last_key_dom X)=>->; apply/empbP.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_key_max f x : x \\in dom f -> x <= last_key f.",
            "VernacStartTheoremProof",
            "ffc22d44bd46621350d7238258a4a3cdc174fe70"
        ],
        [
            "rewrite /last_key /= !umEX; case: (UMC.from f)=>//; case=>s H _ /=.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "rewrite /supp /ord /= (leq_eqVlt x) orbC.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: sorted_last_key_max (sorted_oleq H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_key_last f x : x \\in dom f -> {in dom f, forall y, y <= x} -> last_key f = x.",
            "VernacStartTheoremProof",
            "28c09deb1cd7cf4632751b4b42d69ea63c755103"
        ],
        [
            "rewrite /last_key !umEX; case: (UMC.from f)=>//; case=>s H _ /=.",
            "VernacExtend",
            "1418099f654a9d12bdfd561bac86adb846b83bfd"
        ],
        [
            "move=>H1 /= H2; apply: sorted_max_key_last (sorted_oleq H) H1 _.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by move=>z /(H2 z); rewrite leq_eqVlt orbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_keyPt (x : nat) v : last_key (x \\\\-> v) = x.",
            "VernacStartTheoremProof",
            "35fcb16907314f8e56748dfff379cd54ca69144a"
        ],
        [
            "by rewrite /last_key /um_pts /= !umEX.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hist_path f : path oleq 0 (dom f).",
            "VernacStartTheoremProof",
            "e672849dc2c950d886aba8108b9eb12b927d361f"
        ],
        [
            "rewrite !umEX; case: (UMC.from f)=>// {f} f /= _; case: f; case=>//= x s H.",
            "VernacExtend",
            "50667d214cae8650aa9de6980f2da478db33826d"
        ],
        [
            "rewrite {1}/oleq /ord /= orbC -leq_eqVlt /=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by apply: sub_path H=>z y; rewrite /oleq=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_key_mono f1 f2 : {subset dom f1 <= dom f2} -> last_key f1 <= last_key f2.",
            "VernacStartTheoremProof",
            "ec3f769568aa6311ef4f348d4785e375b6a13114"
        ],
        [
            "rewrite leq_eqVlt orbC=>H; apply: (@keys_last_mono _ _ _ f1 f2); try by apply: hist_path.",
            "VernacExtend",
            "5b8143f4fb141bb44d44bc3aba43b1baa98f8a8a"
        ],
        [
            "by move=>x /=; move: (H x).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_keyfUn f1 f2 : valid (f1 \\+ f2) -> last_key f1 <= last_key (f1 \\+ f2).",
            "VernacStartTheoremProof",
            "05e0775b8b0f48546dc6789ca5bbb549b4a1d275"
        ],
        [
            "by move=>X; apply: last_key_mono=>x; rewrite domUn inE X => ->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_keyUnf f1 f2 : valid (f1 \\+ f2) -> last_key f2 <= last_key (f1 \\+ f2).",
            "VernacStartTheoremProof",
            "ae65131d136cdc4c9d161a806dc8b3ddcd6dcca0"
        ],
        [
            "by rewrite joinC; apply: last_keyfUn.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition fresh f := (last_key f).+1.",
            "VernacDefinition",
            "1277d7ddf61557ed7aefdf1aac957d7b94e4ab9b"
        ],
        [
            "Lemma dom_ordfresh f x : x \\in dom f -> x < fresh f.",
            "VernacStartTheoremProof",
            "364d9e744d33eb39d03c3d862e351eed2dab09b9"
        ],
        [
            "by move/last_key_max.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_freshn f n : fresh f + n \\notin dom f.",
            "VernacStartTheoremProof",
            "ad42d54de969ca0e4d34037d2cc35ff59167738c"
        ],
        [
            "by apply: contra (@dom_ordfresh _ _) _; rewrite -leqNgt leq_addr.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dom_fresh f : fresh f \\notin dom f.",
            "VernacStartTheoremProof",
            "8b9033371a9b23ede5adc6ee0ea52c8f0ef34bfa"
        ],
        [
            "by move: (dom_freshn f 0); rewrite addn0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_fresh f v : valid (f \\+ fresh f \\\\-> v) = valid f.",
            "VernacStartTheoremProof",
            "d3a2c59a47418bc0f8ead7f511ff34a1a413562d"
        ],
        [
            "by rewrite joinC validPtUn dom_fresh andbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma valid_fresh' f v i w : valid (f \\+ i \\\\-> w) -> valid (f \\+ fresh (f \\+ i \\\\-> w) \\\\-> v).",
            "VernacStartTheoremProof",
            "751ceb26ada648bd31ea03e2ed77f0f3f6ca64bf"
        ],
        [
            "move=> W; rewrite joinC validPtUn.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move: (dom_fresh (f \\+ i \\\\-> w)); rewrite domUn inE; rewrite W/=.",
            "VernacExtend",
            "e05f4a56f17e4b341df19faa23614b9e0a1c72d3"
        ],
        [
            "by rewrite negb_or=>/andP; case=>-> _;move/validL: W=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma last_fresh f v : valid f -> last_key (f \\+ fresh f \\\\-> v) = fresh f.",
            "VernacStartTheoremProof",
            "47ab12123818fa108a2437e90f5828ce8216600c"
        ],
        [
            "move=>Vf; apply: max_key_last=>[|x] /=.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite domUn inE valid_fresh Vf domPt inE eq_refl orbT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite domUn inE /= valid_fresh Vf /= domPt inE /= orbC eq_sym.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite leq_eqVlt; case: eqP=>//= _; apply: dom_ordfresh.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FreshLastKey.",
            "VernacEndSegment",
            "4ae421f655579cb122e5cc8be66dc0a0a071a4ed"
        ]
    ],
    "proofs": [
        {
            "name": "keys_last_mono",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX; case: (UMC.from f1); first by move=>_ H _; apply: path_last H.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move=>{f1} f1 /= _ H1; case: (UMC.from f2)=>/=.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>_ /allP; case: (supp f1)=>//; rewrite /oleq eq_refl orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>{f2} f2 /= _; apply: seq_last_mono H1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_key0",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "by rewrite /last_key /Unit /= !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_key_dom",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "rewrite /valid /= /last_key /Unit /= !umEX /= -{4}[f]UMC.tfE.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (UMC.from f)=>//=; case=>s H /= H1 _ /seq_last_in.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "rewrite /UM.empty UMC.eqE UM.umapE /supp fmapE /= {H H1}.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by elim: s.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_last_key",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "by move=>X; apply: contraR; move/(last_key_dom X)=>->; apply/empbP.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_key_max",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "rewrite /last_key /= !umEX; case: (UMC.from f)=>//; case=>s H _ /=.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "rewrite /supp /ord /= (leq_eqVlt x) orbC.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: sorted_last_key_max (sorted_oleq H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_key_last",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "rewrite /last_key !umEX; case: (UMC.from f)=>//; case=>s H _ /=.",
                        "VernacExtend",
                        "1418099f654a9d12bdfd561bac86adb846b83bfd"
                    ]
                },
                {
                    "command": [
                        "move=>H1 /= H2; apply: sorted_max_key_last (sorted_oleq H) H1 _.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by move=>z /(H2 z); rewrite leq_eqVlt orbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_keyPt",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "by rewrite /last_key /um_pts /= !umEX.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hist_path",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "rewrite !umEX; case: (UMC.from f)=>// {f} f /= _; case: f; case=>//= x s H.",
                        "VernacExtend",
                        "50667d214cae8650aa9de6980f2da478db33826d"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}/oleq /ord /= orbC -leq_eqVlt /=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by apply: sub_path H=>z y; rewrite /oleq=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_keyfUn",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "by move=>X; apply: last_key_mono=>x; rewrite domUn inE X => ->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_keyUnf",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: last_keyfUn.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_ordfresh",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "by move/last_key_max.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_freshn",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "by apply: contra (@dom_ordfresh _ _) _; rewrite -leqNgt leq_addr.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dom_fresh",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "by move: (dom_freshn f 0); rewrite addn0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_fresh",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC validPtUn dom_fresh andbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "valid_fresh'",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "move=> W; rewrite joinC validPtUn.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "move: (dom_fresh (f \\+ i \\\\-> w)); rewrite domUn inE; rewrite W/=.",
                        "VernacExtend",
                        "e05f4a56f17e4b341df19faa23614b9e0a1c72d3"
                    ]
                },
                {
                    "command": [
                        "by rewrite negb_or=>/andP; case=>-> _;move/validL: W=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "last_fresh",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "move=>Vf; apply: max_key_last=>[|x] /=.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite domUn inE valid_fresh Vf domPt inE eq_refl orbT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite domUn inE /= valid_fresh Vf /= domPt inE /= orbC eq_sym.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite leq_eqVlt; case: eqP=>//= _; apply: dom_ordfresh.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}