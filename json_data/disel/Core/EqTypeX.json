{
    "filename": "Core/EqTypeX.v",
    "coq_project": "disel",
    "vernac_cmds": [
        [
            "From mathcomp.ssreflect Require Import ssreflect ssrbool ssrnat eqtype ssrfun seq.",
            "VernacRequire",
            "037d2ffdc90053d89d1b918c36daaeab721d2d83"
        ],
        [
            "From mathcomp Require Import path.",
            "VernacRequire",
            "7c70f445c754a2a74114416d587d02e512c693e2"
        ],
        [
            "Require Import Eqdep.",
            "VernacRequire",
            "a499933d0898d4c0e235af789d9252f633426d20"
        ],
        [
            "Require Import Relation_Operators.",
            "VernacRequire",
            "5c09f52be79db9d019c350cc3153659920102fbb"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Module EqualityX.",
            "VernacDefineModule",
            "756008455ab8d5b8185c3cde6113006ceb6b95ad"
        ],
        [
            "Definition axiom T (e : rel T) := forall x y, reflect (x = y) (e x y).",
            "VernacDefinition",
            "7587dd0ee3f6102bf1671c323dc89539ff414fa7"
        ],
        [
            "Structure mixin_of T := Mixin {op : rel T; _ : axiom op}.",
            "VernacInductive",
            "9085f15cecca2caf91d8212f7241285d960da472"
        ],
        [
            "Notation class_of := mixin_of (only parsing).",
            "VernacSyntacticDefinition",
            "7196b196bbc3a41e5ce702c5c8b4974fd7174202"
        ],
        [
            "Section ClassDef.",
            "VernacBeginSection",
            "a5b792261e6c496f5a1a8d0f7da8c96156ca2fed"
        ],
        [
            "Structure type := Pack {sort; _ : class_of sort; _ : Type}.",
            "VernacInductive",
            "5fa8a4a2a1f08fdaa26c7a8cc9345ad2217d07cc"
        ],
        [
            "Local Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "e4478cd37693106f84ed020bd073c4970dc87530"
        ],
        [
            "Variables (T : Type) (cT : type).",
            "VernacAssumption",
            "eb35f5737a32cba56acb24ac87490232dc2dfcb9"
        ],
        [
            "Definition class := let: Pack _ c _ := cT return class_of cT in c.",
            "VernacDefinition",
            "cd7db68fea3dd93ebcc4b62ca96ddbc8f7062f27"
        ],
        [
            "Definition pack c := @Pack T c T.",
            "VernacDefinition",
            "2af8c494150faa3ac78e77844c09aecee2c38db0"
        ],
        [
            "Definition clone := fun c & cT -> T & phant_id (pack c) cT => pack c.",
            "VernacDefinition",
            "3491fcfe2ed605c5bad8755c02a8788916895b4c"
        ],
        [
            "End ClassDef.",
            "VernacEndSegment",
            "bce1c8832045d8291c44a3fb67e9767782d2745b"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Coercion sort : type >-> Sortclass.",
            "VernacCoercion",
            "9e1cbf06afa0d2731dbb8bfd6b9ae32be22a8ae7"
        ],
        [
            "Notation eqTypeX := type.",
            "VernacSyntacticDefinition",
            "cc5e998547f0e228602466034db9cb28be219e77"
        ],
        [
            "Notation EqMixinX := Mixin.",
            "VernacSyntacticDefinition",
            "ce79e78534211ddb983747a5bf5e914908dd5160"
        ],
        [
            "Notation EqTypeX T m := (@pack T m).",
            "VernacSyntacticDefinition",
            "644631bb7e83b1d45c0ec76ec94ac3f982e1566e"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End EqualityX.",
            "VernacEndSegment",
            "d840a09168bf9b84a77130f16cfe05f235ace001"
        ],
        [
            "Export EqualityX.Exports.",
            "VernacImport",
            "110ec0ba09d9339954a38247a3f887a5a597dacd"
        ],
        [
            "Section EqualityConversion.",
            "VernacBeginSection",
            "6efcd8de40d1e9e257dfa2d1dae796ae976bfb33"
        ],
        [
            "Variable U: eqTypeX.",
            "VernacAssumption",
            "0881b115c1f050f1934c193360cb57194ef62d18"
        ],
        [
            "Definition eq_opX T := EqualityX.op (EqualityX.class T).",
            "VernacDefinition",
            "377a9ddbef4d00808a2c57270d4e833812b89bbb"
        ],
        [
            "Lemma eqxP : Equality.axiom (@eq_opX U).",
            "VernacStartTheoremProof",
            "df2a54d38e167fb75328e55610450e215212b214"
        ],
        [
            "by case: U=>s[op a ?]; apply: a.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Canonical eqMixinX := EqMixin eqxP.",
            "VernacDefinition",
            "f48455049e7d8db9d05a4bf505b8a9ce69721dfa"
        ],
        [
            "Canonical eqTypeX' := EqType U eqMixinX.",
            "VernacDefinition",
            "2e36c35561443d9ab65798a4e4cefb524b9243ec"
        ],
        [
            "End EqualityConversion.",
            "VernacEndSegment",
            "8cd3c7ff4438537234ad3b1521a4008049cc976e"
        ]
    ],
    "proofs": [
        {
            "name": "eqxP",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "by case: U=>s[op a ?]; apply: a.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}