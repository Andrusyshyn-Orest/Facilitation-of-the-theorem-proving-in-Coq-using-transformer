{
    "filename": "Core/Injection.v",
    "coq_project": "disel",
    "vernac_cmds": [
        [
            "From mathcomp.ssreflect Require Import ssreflect ssrbool ssrnat eqtype ssrfun seq.",
            "VernacRequire",
            "037d2ffdc90053d89d1b918c36daaeab721d2d83"
        ],
        [
            "From mathcomp Require Import path.",
            "VernacRequire",
            "7c70f445c754a2a74114416d587d02e512c693e2"
        ],
        [
            "Require Import Eqdep.",
            "VernacRequire",
            "a499933d0898d4c0e235af789d9252f633426d20"
        ],
        [
            "Require Import Relation_Operators.",
            "VernacRequire",
            "5c09f52be79db9d019c350cc3153659920102fbb"
        ],
        [
            "From fcsl Require Import axioms pred prelude ordtype finmap pcm unionmap heap.",
            "VernacRequire",
            "576c96e5dbde92d8f1878b78d95e36aa980a0403"
        ],
        [
            "From DiSeL Require Import Freshness State EqTypeX Protocols Worlds NetworkSem Actions.",
            "VernacRequire",
            "264988d7203bf76bd3935e04f9c98265092ad1c3"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Module Injection.",
            "VernacDefineModule",
            "a0f93feac757ec31744fbbb048018555cb21d0b5"
        ],
        [
            "Section Injection.",
            "VernacBeginSection",
            "c42286376628638a54a6ce930ac47207ca7cde99"
        ],
        [
            "Variable W : world.",
            "VernacAssumption",
            "92d3732f8ee464718a9d77a50e1d3ac970c2e983"
        ],
        [
            "Structure injects (U V : world) (K : hooks) := Inject { E : world; _ : hook_complete U /\\ hook_complete E; _ : V = U \\+ E \\+ (Unit, K); _ : hooks_consistent (getc (U \\+ E)) K; _ : forall s, Coh V s <-> exists s1 s2, [/\\ s = s1 \\+ s2, Coh U s1 & Coh E s2]; _ : forall s1 s2 s this, s1 \\+ s \\In Coh V -> network_step U this s1 s2 -> network_step V this (s1 \\+ s) (s2 \\+ s); _ : forall s1 s2 s1' s2' this, s1 \\In Coh U -> s2 \\In Coh U -> network_step V this (s1 \\+ s1') (s2 \\+ s2') -> (network_step U this s1 s2 /\\ s1' = s2') \\/ (network_step E this s1' s2' /\\ s1 = s2); }.",
            "VernacInductive",
            "0baf0ccd2358e6b84dd241b96c0b95e878f9599e"
        ],
        [
            "End Injection.",
            "VernacEndSegment",
            "7cb6bd5d50bda415bcb8218c23a7fa42c9845430"
        ],
        [
            "Module Exports.",
            "VernacDefineModule",
            "d4a1114ec53f746523a7dec57823f7f03e51fa24"
        ],
        [
            "Section Exports.",
            "VernacBeginSection",
            "3d3d73b16827535e7d0c9fdb92a2f163a05b14f4"
        ],
        [
            "Definition inj_ext := E.",
            "VernacDefinition",
            "d17fb21ded8e0935ae8eb2e5c1f838bcab7e1dbd"
        ],
        [
            "Definition injects := injects.",
            "VernacDefinition",
            "7a993786dde28ad3c31fe95a39d8ed886337a747"
        ],
        [
            "Definition Inject := Inject.",
            "VernacDefinition",
            "c7093a8ecb2caba3603ac7449ed03ba5c25ac0f6"
        ],
        [
            "Lemma cohK (U V : world) (K : hooks) (w : injects U V K) : V = U \\+ inj_ext w \\+ (Unit, K).",
            "VernacStartTheoremProof",
            "b19078e353388c6bfc2ab0936e5c1007b9c61f42"
        ],
        [
            "by case: w=>E/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cohE (U V : world) (K : hooks) (w : injects U V K) s : Coh V s <-> exists s1 s2, [/\\ s = s1 \\+ s2, Coh U s1 & Coh (inj_ext w) s2].",
            "VernacStartTheoremProof",
            "6b9ee8fce6ca13b7b8e7f483695c3471ede7f06f"
        ],
        [
            "by case: w=>W ??? cohE sL sR; apply: cohE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sem_extend (U V : world) (K : hooks) (w : injects U V K) s1 s2 s this: s1 \\+ s \\In Coh V -> s2 \\+ s \\In Coh V -> network_step U this s1 s2 -> network_step V this (s1 \\+ s) (s2 \\+ s).",
            "VernacStartTheoremProof",
            "9af2979ee6d11e2d49c0a770b354ec3487cf1b21"
        ],
        [
            "by case: w=>W _ _ _ cohE sL sR C G; apply: sL=>//.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma sem_split (U V : world) (K : hooks) (w : injects U V K) s1 s1' s2 s2' this: s1 \\In Coh U -> s2 \\In Coh U -> network_step V this (s1 \\+ s1') (s2 \\+ s2') -> (network_step U this s1 s2 /\\ s1' = s2') \\/ (network_step (inj_ext w) this s1' s2' /\\ s1 = s2).",
            "VernacStartTheoremProof",
            "a415b1306114d4b6e9998f49bca6493c7c387f21"
        ],
        [
            "by case: w=>W ??? cohE sl sR; apply: sR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition extends (U V : world) (K : hooks) (w : injects U V K) s s1 := exists s2, [/\\ s = s1 \\+ s2, s1 \\In Coh U & s \\In Coh V].",
            "VernacDefinition",
            "4a85e1e184a31d211af7713a951651fe1ac8247f"
        ],
        [
            "Notation dom_filt W := (fun k => k \\in dom W).",
            "VernacSyntacticDefinition",
            "a54407d5b3d24a844132b97515697bfd8c776013"
        ],
        [
            "Definition projectS (W : world) (s : state) := um_filter (dom_filt (getc W)) s.",
            "VernacDefinition",
            "8ea666287b14ee9cf2c5350276db536fcb9a465b"
        ],
        [
            "Lemma projectS_cohL W1 W2 s : s \\In Coh (W1 \\+ W2) -> hook_complete W1 -> projectS W1 s \\In Coh W1.",
            "VernacStartTheoremProof",
            "802b50761dfa3d8892210d232a1de55b83d235dd"
        ],
        [
            "case=>V1 V2 G1 D H G2; split=>//; first by move/validL: V1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite valid_umfilt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>z; case B: (z \\in dom (getc W1)).",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite dom_umfilt !inE B/= -D/=domUn !inE B/=; case/andP:V1=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite dom_umfilt !inE B.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>l; move: (H l)=>{H}H.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "case B: (l \\in dom (getc W1)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /getProtocol /getStatelet; move: (B).",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "case: dom_find=>//-> _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "suff X: ~~(l \\in dom (projectS W1 s)) by case: dom_find X=>//-> _.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite /projectS dom_umfilt inE/= B.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have E1: find l s = find l (projectS W1 s).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite /projectS/= find_umfilt B.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have E2: getProtocol (W1 \\+ W2) l = getProtocol W1 l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /getProtocol findUnL//?B//.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite /valid/= in V1; case/andP: V1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -E2 /getStatelet -E1 in H *.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma projectS_cohR W1 W2 s : s \\In Coh (W1 \\+ W2) -> hook_complete W2 -> projectS W2 s \\In Coh W2.",
            "VernacStartTheoremProof",
            "e90da8cae624fd05097665ffd324107f1b9c18c5"
        ],
        [
            "by rewrite joinC; apply: projectS_cohL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma projectSE W1 W2 s : s \\In Coh (W1 \\+ W2) -> s = projectS W1 s \\+ projectS W2 s.",
            "VernacStartTheoremProof",
            "11032db7eebbd639709e2aab7dbc72beace53666"
        ],
        [
            "case=>Vw Vs G D H; rewrite /projectS.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "have X: {in dom s, dom_filt (getc W2) =1 predD (dom_filt (getc W2)) (dom_filt (getc W1))}.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>z _/=; case I : (z \\in dom (W1.1 \\+ W2.1)).",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "move: I; rewrite domUn !inE/==>/andP[V']/orP[]Z; rewrite Z/=.",
            "VernacExtend",
            "6b509b6a448d912d761bbad76ff3082e795e01f6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: validUn V'=>//_ _/(_ z Z)/=G' _;apply/negbTE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite joinC in V'; case: validUn V'=>//_ _/(_ z Z)G' _.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite andbC.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: I; rewrite domUn inE/==>/negbT; rewrite negb_and negb_or/=.",
            "VernacExtend",
            "6b509b6a448d912d761bbad76ff3082e795e01f6"
        ],
        [
            "have X: valid (W1 \\+ W2) by [].",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by case/andP: X=>->/=_/andP[]->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite (eq_in_umfilt X) -umfilt_predU/=; clear X.",
            "VernacExtend",
            "4e9e68d2c25a943ccfa4c0257e2157db2cc6866c"
        ],
        [
            "suff X: {in dom s, predU (dom_filt (getc W1)) (dom_filt (getc W2)) =1 predT}.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (eq_in_umfilt X) umfilt_predT.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>z; rewrite/= -D domUn inE=>/andP[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coh_split W1 W2 s : s \\In Coh (W1 \\+ W2) -> hook_complete W1 -> hook_complete W2 -> exists s1 s2 : state, [/\\ s1 \\In Coh W1, s2 \\In Coh W2 & s = s1 \\+ s2].",
            "VernacStartTheoremProof",
            "ff935357362ff0b1b4d7853686cf7bee94393f7f"
        ],
        [
            "move=>C G1 G2; move/projectSE: (C)->.",
            "VernacExtend",
            "b5df09ffbf239d22afb2872baa9457f51eb0572c"
        ],
        [
            "exists (projectS W1 s), (projectS W2 s).",
            "VernacExtend",
            "4da05688e19478b98b2f2e0c12d034be101f36dc"
        ],
        [
            "split=>//; [by apply: projectS_cohL C G1| by apply: projectS_cohR C G2].",
            "VernacExtend",
            "2e73d77e77a6a7d0fa3136321615f5f1a44d38e1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injExtL' (W1 W2 : world) K (pf : injects W1 (W1 \\+ W2) K) : valid (W1 \\+ W2) -> inj_ext pf \\+ (Unit, K) = W2.",
            "VernacStartTheoremProof",
            "67238c7ea54e724d06ab35b2f1f6229efca3855b"
        ],
        [
            "move=>H; case: pf=>W2' _ E/=_ _ _ _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "rewrite -joinA in E.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/andP: H=>H1 H2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite /PCM.join/= in H1 H2 E *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: W2 H1 H2 E=>/=c2 h2 H1 H2 [E1 E2].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite (joinxK H1 E1) (joinxK H2 E2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injExtR' W1 W2 K (pf : injects W2 (W1 \\+ W2) K) : valid (W1 \\+ W2) -> inj_ext pf \\+ (Unit, K) = W1.",
            "VernacStartTheoremProof",
            "05a37a349aa179ad00f684ea6479010051ed58cd"
        ],
        [
            "move=>H; case: pf=>W2' _ E/= _ _ _ _.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "rewrite -(joinC W2) in E H.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case/andP: H=>H1 H2; rewrite -joinA in E.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite /PCM.join/= in H1 H2 E *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: W1 H1 H2 E=>/=c1 h1 H1 H2 [E1 E2].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite (joinxK H1 E1) (joinxK H2 E2).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injExtL W1 W2 (pf : injects W1 (W1 \\+ W2) Unit) : valid (W1 \\+ W2) -> inj_ext pf = W2.",
            "VernacStartTheoremProof",
            "2c3f6cef45fc46cdd8042af593fd939317a6aec5"
        ],
        [
            "by move/(injExtL' pf); rewrite unitR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injExtR W1 W2 (pf : injects W2 (W1 \\+ W2) Unit) : valid (W1 \\+ W2) -> inj_ext pf = W1.",
            "VernacStartTheoremProof",
            "cf3b093d3d6b8fe7f5e9c88814a32cddd73a4c6d"
        ],
        [
            "by move/(injExtR' pf); rewrite unitR.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Exports.",
            "VernacEndSegment",
            "71efedae7ccffd696e1ffe5d8ae6baa8a4484918"
        ],
        [
            "End Injection.",
            "VernacEndSegment",
            "7cb6bd5d50bda415bcb8218c23a7fa42c9845430"
        ],
        [
            "Export Injection.Exports.",
            "VernacImport",
            "5a371bac5d9498d672c2cdf724263d42230d07e3"
        ],
        [
            "Module InjectExtra.",
            "VernacDefineModule",
            "eacf0fd8344bc5010e16a24c6580b4a051cd85bd"
        ],
        [
            "Lemma cohUnKR U W s s': s \\+ s' \\In Coh (U \\+ W) -> s \\In Coh U -> hook_complete W -> s' \\In Coh W.",
            "VernacStartTheoremProof",
            "f0053074974de07efd80f57420cf23ffa7f53b37"
        ],
        [
            "move=>H C G2; move: (cohH C) => G1.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "suff X: s' = projectS W (s \\+ s').",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite X; apply: (projectS_cohR H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "suff X: s = projectS U (s \\+ s').",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: (cohS H)=>V; move/projectSE: (H)=>E.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "rewrite E in V.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite {1}X in E.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (joinxK V (sym_eq E)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /projectS.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff X: {in dom (s \\+ s'), dom U.1 =i dom s}.",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (eq_in_umfilt X) umfilt_dom ?(cohS H)//.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>z _; move: (cohD C z); rewrite /in_mem.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cohUnKL U W s s': s \\+ s' \\In Coh (U \\+ W) -> s' \\In Coh W -> hook_complete U -> s \\In Coh U .",
            "VernacStartTheoremProof",
            "c5c5aff69e5710479b690b7fb4cf144598e64953"
        ],
        [
            "by move=>H C G1; rewrite [U \\+ W]joinC [s\\+_]joinC in H; apply: (cohUnKR H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma getPUn (U W : world) l : valid (U \\+ W) -> l \\in dom U.1 -> getProtocol U l = getProtocol (U \\+ W) l.",
            "VernacStartTheoremProof",
            "744297e30fca855389b5eeb9cf094da329a704cf"
        ],
        [
            "move=>V; rewrite /getProtocol=>D.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "case/andP: (V)=>V1 V2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by rewrite findUnL ?V1// D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma getSUn s1 s2 l : valid (s1 \\+ s2) -> l \\in dom s1 -> getStatelet s1 l = getStatelet (s1 \\+ s2) l.",
            "VernacStartTheoremProof",
            "eb1abf095bae6a608ff237b9f7b1992db76405ae"
        ],
        [
            "move=>V; rewrite /getStatelet=>D.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite findUnL ?V// D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma hook_completeL (U : world) K : valid (U \\+ (Unit, K)) -> hook_complete (U \\+ (Unit, K)) -> hook_complete U.",
            "VernacStartTheoremProof",
            "9e2a958eb147c88bc1109f517d1680448cbfe52e"
        ],
        [
            "case: U=>c h=> V H z lc ls st D.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move: (H z lc ls st); rewrite domUn inE/= D/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case/andP: V=>_->/==>/(_ is_true_true)=>/andP[].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "by rewrite !unitR=>->->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma get_protocol_hooks (U: world) K l: valid U -> getProtocol (U \\+ (Unit, K)) l = getProtocol U l.",
            "VernacStartTheoremProof",
            "3043806bc9c5f40b4fa92632c5b158f88d2685b1"
        ],
        [
            "move=>V; rewrite /getProtocol.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite findUnR ?dom0 ?inE//; rewrite unitR; case/andP: V.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coh_hooks (U : world) K s : s \\In (Coh (U \\+ (Unit, K))) -> s \\In (Coh U).",
            "VernacStartTheoremProof",
            "a70eb4ba7438d2e14dda7d998b2c6cffe5faf8d9"
        ],
        [
            "case=>V Vs Hk D L.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split=>//; first by move/validL: V.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: hook_completeL V Hk.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>z; rewrite -D domUn !inE/= unitR dom0 orbC/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by move/validL:V=>/andP[]->_.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>l; move: (L l); rewrite (get_protocol_hooks K l (validL V)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inj_hooks_complete (U W : world) K: valid (U \\+ W \\+ (Unit, K)) -> hook_complete U -> hook_complete W -> hooks_consistent (U \\+ W).1 K -> hook_complete (U \\+ W \\+ (Unit, K)).",
            "VernacStartTheoremProof",
            "19871b954fa326113882cba847baf90361a200b2"
        ],
        [
            "move=>V G1 G2 G.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move=>z lc ls st; rewrite domUn !inE/= !unitR.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move/andP: (V)=>[_]->/=; case/orP; last by move/G.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !domUn !inE; case/validL/andP:V=>->->/=.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "case/orP; first by case/G1/andP=>->->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case/G2/andP=>->->; rewrite -!(orbC true).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inject_step U W K this s1 s2 s1' s2' : valid (U \\+ W) -> s1 \\In Coh U -> s2 \\In Coh U -> hook_complete U -> hook_complete W -> network_step (U \\+ W \\+ (Unit, K)) this (s1 \\+ s1') (s2 \\+ s2') -> network_step U this s1 s2 /\\ s1' = s2' \\/ network_step W this s1' s2' /\\ s1 = s2.",
            "VernacStartTheoremProof",
            "6d3ffd17f6c9f27c1901a6b35e44342290ad251a"
        ],
        [
            "move=>V C1 C2 Hu Hw S; move/step_coh: (S)=>[C1' C2'].",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "move: (cohW C1')=>V1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (coh_hooks C1')(coh_hooks C2')=>{C1'}C1'{C2'}C2'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (cohUnKR C1' C1 Hw) (cohUnKR C2' C2 Hw)=>D1 D2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: S; first 2 last.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=>l rt R i from H1.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite domUn inE=>/andP[Vs]/=/orP; case=>D C msg H2 [H3 H4]/=; [rewrite updUnL D|rewrite updUnR D]=>G;[left|right].",
            "VernacExtend",
            "0e82711d000764f42d00ee785c9af3a41d99600a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "have X: s1' = s2'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "move: (C2'); rewrite (joinC U) G -[upd _ _ _ \\+ s1'](joinC s1').",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move/cohUnKR/(_ D1)/(_ Hu)=>C1''.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (coh_prec (cohS C2') C2 C1'' G)=>Z; rewrite -Z in G; clear Z.",
            "VernacExtend",
            "e452410748fb86fd56f973b394b9762ca473b546"
        ],
        [
            "by rewrite (joinxK (cohS C2') G).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=>//; subst s2'; rewrite -![_ \\+ s1'](joinC s1') in G C2'.",
            "VernacExtend",
            "58dc102cfc73062d3b5bd1899506637addbf0cea"
        ],
        [
            "rewrite -[upd _ _ _ \\+ s1'](joinC s1') in G; rewrite (joinC U) in C2'.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "move: (joinxK (cohS C2') G)=>{G}G.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have E: getProtocol U l = getProtocol (U \\+ W) l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (getPUn V)// (cohD C1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have E': getStatelet s1 l = getStatelet (s1 \\+ s1') l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (getSUn (cohS C1')).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /get_rt /InMem/= in R.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (getStatelet (s1 \\+ s1') l) E' C (coh_s l C) H1 G H3 H4=>_<-_.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (getProtocol (U \\+ W \\+ (Unit, K)) l) (get_protocol_hooks K l V) E rt R H2=>_-><-rt R H2 coh_s H1 G H3 H4.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: (ReceiveMsg R D H2 (i := i) (from := from) (s2 := s2) (C := C1)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "split=>//=; move: (NetworkSem.coh_s l C1)=>coh_s'; by rewrite -(pf_irr coh_s coh_s').",
            "VernacExtend",
            "d8f601ed755ccf1a2b28f741584fdd753f9fe5da"
        ],
        [
            "move: U W V {V1} Hw Hu s1 s2 s1' s2' C1 C2 C1' C2' D1 D2 rt H1 H2 Vs D C R H3 H4 G.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move=>W U V Hw Hu s1' s2' s1 s2 D1 D2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite !(joinC W) -!(joinC s1) -!(joinC s2)=> C1' C2' C1 C2.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move=>rt H1 H2 Vs D C R H3 H4 G.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have X: s1' = s2'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: (C2'); rewrite (joinC U) G.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move/cohUnKR/(_ D1)/(_ Hw)=>C1''; rewrite (joinC s1') in G.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move: (coh_prec (cohS C2') C2 C1'' G)=>Z; rewrite -Z in G; clear Z.",
            "VernacExtend",
            "e452410748fb86fd56f973b394b9762ca473b546"
        ],
        [
            "by rewrite (joinxK (cohS C2') G).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=>//; subst s2'; rewrite -!(joinC s1') in G C2'.",
            "VernacExtend",
            "58dc102cfc73062d3b5bd1899506637addbf0cea"
        ],
        [
            "rewrite (joinC U) in C2'; move: (joinxK (cohS C2') G)=>{G}G.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "rewrite joinC in V.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have E: getProtocol U l = getProtocol (U \\+ W) l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (getPUn V)// (cohD C1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have E': getStatelet s1 l = getStatelet (s1 \\+ s1') l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (getSUn (cohS C1')).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /get_rt /InMem/= in R.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (getStatelet (s1 \\+ s1') l) E' C (coh_s l C) H1 G H3 H4=>_<-_.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (getProtocol (U \\+ W \\+ (Unit, K)) l) (get_protocol_hooks K l V) E rt R H2=>_-><-rt R H2 coh_s H1 G H3 H4.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: (ReceiveMsg R D H2 (i := i) (from := from) (s2 := s2) (C := C1)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "split=>//=; move: (NetworkSem.coh_s l C1)=>coh_s'; by rewrite -(pf_irr coh_s coh_s').",
            "VernacExtend",
            "d8f601ed755ccf1a2b28f741584fdd753f9fe5da"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case=>_ E; move: (coh_prec (cohS C1') C1 C2 E)=>Z; subst s2.",
            "VernacExtend",
            "3d71ff19ec3167af3aa9b57f6f8ca1e02255a906"
        ],
        [
            "rewrite (joinC U) (joinC s1) in C1'; rewrite !(joinC s1) in E.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "move: (coh_prec (cohS C1') D1 D2 E)=>Z; subst s2'.",
            "VernacExtend",
            "786ad2801d21054a66199aaeacdf95ad17adc3cf"
        ],
        [
            "by left; split=>//; apply: Idle.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>l st H1 to msg h H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite domUn inE=>/andP[Vs]/orP; case=> D _ S Hk H3; [rewrite updUnL D|rewrite updUnR D]=>G;[left|right]; [| move: U W V1 Hu Hw V s1 s2 s1' s2' C1 C2 C1' C2' D1 D2 st Hk H1 H2 Vs D S H3 G; move=> W U V1 Hw Hu V s1' s2' s1 s2 D1 D2 C1' C2' C1 C2 st Hk H1 H2 Vs D S H3 G; rewrite (joinC W) in V C1' C2' st H1 S H3 G H2 Hk; rewrite -?(joinC s1) -?(joinC s2) in C1' C2' S G H3 Vs].",
            "VernacExtend",
            "10ab79ee6250e80270e1301efe14ec2ef21a789e"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "have X: s1' = s2'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: (C2'); rewrite (joinC U) G -[upd _ _ _ \\+ s1'](joinC s1').",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move/cohUnKR/(_ D1)/(_ Hu)=>C1''.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (coh_prec (cohS C2') C2 C1'' G)=>Z; rewrite -Z in G; clear Z.",
            "VernacExtend",
            "e452410748fb86fd56f973b394b9762ca473b546"
        ],
        [
            "by rewrite (joinxK (cohS C2') G).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=>//; subst s2'; rewrite -!(joinC s1') in G C2'.",
            "VernacExtend",
            "58dc102cfc73062d3b5bd1899506637addbf0cea"
        ],
        [
            "rewrite (joinC U) in C2'; move: (joinxK (cohS C2') G)=>{G}G.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "rewrite (joinC s1') in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have E: getProtocol U l = getProtocol (U \\+ W) l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (getPUn V)// (cohD C1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have E': getStatelet s1 l = getStatelet (s1 \\+ s1') l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (getSUn Vs).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /get_st /InMem in H1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (getStatelet (s1 \\+ s1') l) (E') H2 S H3 G=>_<- H2 S H3 G.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (getProtocol (U \\+ W \\+ (Unit, K)) l) (get_protocol_hooks K l V) E st H1 S H2 H3 G Hk=>_-><- st H1 S H2 H3 G Hk.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: (SendMsg H1 H2 D C1 _ H3 G).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move=>z lc hk F A1 A2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: (Hk z lc hk).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -F -joinA !domUn !inE !Vs A1 A2 findUnL ?E' ?(find_some F)/=; last by case/andP:V1; rewrite-joinA =>_->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/(_ erefl is_true_true is_true_true).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite {1 3}/getStatelet findUnL// A1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have X: s1' = s2'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: (C2'); rewrite (joinC U) G.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move/cohUnKR/(_ D1)/(_ Hu)=>C1''; rewrite (joinC s1') in G.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "move: (coh_prec (cohS C2') C2 C1'' G)=>Z; rewrite -Z in G; clear Z.",
            "VernacExtend",
            "e452410748fb86fd56f973b394b9762ca473b546"
        ],
        [
            "by rewrite (joinxK (cohS C2') G).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=>//; subst s2'; rewrite -!(joinC s1') in G C2'.",
            "VernacExtend",
            "58dc102cfc73062d3b5bd1899506637addbf0cea"
        ],
        [
            "rewrite (joinC U) in C2'; move: (joinxK (cohS C2') G)=>{G}G.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "rewrite (joinC s1') in G.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have E: getProtocol U l = getProtocol (U \\+ W) l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (getPUn V)// (cohD C1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have E': getStatelet s1 l = getStatelet (s1 \\+ s1') l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (getSUn Vs).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /get_st /InMem in H1; rewrite (joinC s1') in H2.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "move: (getStatelet (s1 \\+ s1') l) (E') H2 S H3 G=>_<- H2 S H3 G.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (getProtocol (U \\+ W \\+ (Unit, K)) l) (get_protocol_hooks K l V) E st H1 S H2 H3 G Hk=>_-><- st H1 S H2 H3 G Hk.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: (SendMsg H1 H2 D C1 _ H3 G).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move=>z lc hk F A1 A2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: (Hk z lc hk).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -F -joinA !domUn !inE A1 A2 findUnL ?E' ?(find_some F)/=; last by rewrite joinA (joinC U.2); case/andP:V1=>_->.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite !(joinC s1') !Vs/= -!(orbC true).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move/(_ erefl is_true_true is_true_true).",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite {1 3}/getStatelet findUnL// A1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition not_hooked_by (K : hooks) l := forall z lc l' st, (z, lc, (l', st)) \\in dom K -> l != l'.",
            "VernacDefinition",
            "3ecc56c5746d07a3a7a12567117ba5d1faf382a7"
        ],
        [
            "Definition world_not_hooked (W: world) K := forall l, l \\in dom W.1 -> not_hooked_by K l.",
            "VernacDefinition",
            "617dc8f3ac65bdb778507d4c96a1336b807893c0"
        ],
        [
            "Lemma hooks_frame (U W : world) (K : hooks) l st s s' n msg to : hook_complete U -> hook_complete W -> hooks_consistent (U \\+ W).1 K -> l \\in dom s -> s \\In Coh U -> s \\+ s' \\In Coh (U \\+ W \\+ (Unit, K)) -> not_hooked_by K l -> all_hooks_fire (geth U) l st s n msg to -> all_hooks_fire (geth (U \\+ W \\+ (Unit, K))) l st (s \\+ s') n msg to.",
            "VernacStartTheoremProof",
            "16aede7ffe79165dec42a4c667401854c13ca83b"
        ],
        [
            "move=>G1 G2 G D' C1 C' N A z lc hk F D1 D2; move: F.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "case/andP: (cohW C')=>/=V1 V2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (cohUnKR (coh_hooks C') C1 G2) => C2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite findUnL ?V2//=; case: ifP=>D3; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move => F; apply sym_eq in F; move: F.",
            "VernacExtend",
            "642f44b055df07a378aca377ba5b1c270938af87"
        ],
        [
            "by move/find_some/N/negP; rewrite eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite findUnR ?(validL V2)//; case: ifP=>[D|_].",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "case/G2/andP: D=>_ D; rewrite (cohD C2) in D.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "by case: validUn (cohS C')=>//_ _/(_ _ D'); rewrite D.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move => F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "have D'': lc \\in dom s by case/andP:(G1 _ _ _ _ (find_some F)); rewrite (cohD C1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have E: getStatelet s l = getStatelet (s \\+ s') l by rewrite (getSUn (cohS C'))// -?(cohD C1').",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have E': getStatelet s lc = getStatelet (s \\+ s') lc.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (getSUn (cohS C'))// -?(cohD C1').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: (getStatelet (s \\+ s') l) (getStatelet (s \\+ s') lc) E E'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by move=>y1 y2 Z1 Z2; subst y1 y2; apply sym_eq in F; apply: (A z).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma inject_frame U W K this s1 s2 s: s1 \\+ s \\In Coh (U \\+ W \\+ (Unit, K)) -> network_step U this s1 s2 -> hook_complete U -> hook_complete W -> hooks_consistent (U \\+ W).1 K -> world_not_hooked U K -> network_step (U \\+ W \\+ (Unit, K)) this (s1 \\+ s) (s2 \\+ s).",
            "VernacStartTheoremProof",
            "89e6d70e77955367143385f73cf7fbe756c76921"
        ],
        [
            "move=>C1 S Ku Kw Hk N; move/step_coh: (S)=>[C1' C2'].",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "case: S; first by move=>[_ <-]; apply: Idle.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>l st H1 to msg h H2 H3 _ S A H4 G.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have E: getProtocol U l = getProtocol (U \\+ W \\+ (Unit, K)) l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Y: getProtocol U l = getProtocol (U \\+ W) l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by rewrite (getPUn (validL (cohW C1)))// (cohD C1').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Y; rewrite (getPUn (cohW C1))// domUn inE (cohD C1') H3/=.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "by case/andP: (validL (cohW C1))=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have E': getStatelet s1 l = getStatelet (s1 \\+ s) l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (getSUn (cohS C1))// -?(cohD C1').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have X: l \\in dom (s1 \\+ s) by rewrite domUn inE H3 (cohS C1).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (getProtocol U) (E) H2=>_ -> H2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /get_st /InMem/= in H1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite E' in H2 G S H4; clear E'.",
            "VernacExtend",
            "03a8d88df3840f12e149fb55ff0f0e218bc962c6"
        ],
        [
            "move: (getProtocol U l) E st H1 S H4 G H2 A=>_->st H1 S H4 G H2 A.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: (SendMsg H1 H2 X C1 _ H4 (s2 := s2 \\+ s)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite updUnL H3; congr (_ \\+ _).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: hooks_frame=>//; apply: N; rewrite -(cohD C1') in H3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> l rt H1 msg from H2 H3 C tms G [G1 G2/= G3].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have E: getProtocol U l = getProtocol (U \\+ W \\+ (Unit, K)) l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Y: getProtocol U l = getProtocol (U \\+ W) l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (getPUn (validL (cohW C1)))// (cohD C1').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite Y; rewrite (getPUn (cohW C1))// domUn inE (cohD C1') H3/=.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "by case/andP: (validL (cohW C1))=>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have E': getStatelet s1 l = getStatelet (s1 \\+ s) l.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "by rewrite (getSUn (cohS C1))// -?(cohD C1').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have X: l \\in dom (s1 \\+ s) by rewrite domUn inE (cohS C1) H3.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "rewrite /get_rt /InMem /= in H1.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move: (getProtocol U l) (getStatelet s1 l) E E' C H2 (coh_s l C) rt G3 G G2 H1 G1=>z1 z2 Z1 Z2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "subst z1 z2=>C pf C' G3 G G2 H1 H2 G1.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "apply: (ReceiveMsg H2 X G2 (i := msg) (from := from) (s2 := s2 \\+ s)).",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "split=>//=; first by rewrite (pf_irr (coh_s l C1) C').",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite updUnL H3; congr (_ \\+ _); move: (NetworkSem.coh_s l C1)=>pf'.",
            "VernacExtend",
            "c0c351688ce13e8f0f701a0fc7638442e716f190"
        ],
        [
            "by rewrite (pf_irr pf' C').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injectL (U W : world) K : valid (U \\+ W \\+ (Unit, K)) -> hook_complete U -> hook_complete W -> hooks_consistent (getc (U \\+ W)) K -> world_not_hooked U K -> injects U (U \\+ W \\+ (Unit, K)) K.",
            "VernacStartTheoremProof",
            "578a304c90922220bb9b1d4b52f147e2b5d69d50"
        ],
        [
            "move=>H G1 G2 G N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "exists W=>//[s|s1 s2 s this|s1 s2 s1' s2' this]; [split | |].",
            "VernacExtend",
            "d5dfd4f84f08fb4bcfaab1963a966f47b3d69e68"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move/coh_hooks=>C; exists (projectS U s), (projectS W s).",
            "VernacExtend",
            "09d80320600cf2338e2fc228c75ff1c5bb51f8b6"
        ],
        [
            "split; [by apply projectSE|by apply: (projectS_cohL C)| by apply: (projectS_cohR C)].",
            "VernacExtend",
            "498f2319dd7134082eea0e40f3e34ad6260d5a22"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case=>s1[s2][Z]C1 C2; subst s.",
            "VernacExtend",
            "ea72329e99a3a87dbfedc64b9cbd7c6492d91a2e"
        ],
        [
            "have W1 : valid (s1 \\+ s2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "case: validUn; rewrite ?(cohS C1) ?(cohS C2)//.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "move=>l; rewrite -(cohD C1)-(cohD C2).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case/validL/andP: H=>H _; by case: validUn H=>//_ _/(_ l) G' _/G'; move/negbTE=>->.",
            "VernacExtend",
            "14b141a2d70f00681f703015bc169478d399fe62"
        ],
        [
            "split=>//[||l].",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by apply: inj_hooks_complete.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "move=>l; rewrite !domUn !inE !unitR dom0 orbC/=.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "rewrite W1/= -(cohD C1)-(cohD C2) domUn !inE//=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by move/validL/andP:H=>[->]_.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite (get_protocol_hooks K l (validL H)).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite /getProtocol/getStatelet !findUnL//; last by case/validL/andP:H.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite (cohD C1); case B: (l \\in dom s1)=>//; apply: coh_coh.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>C1 C2; apply: inject_frame.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>C1 C2; apply: (inject_step (validL H)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma injectR (U W : world) K : valid (W \\+ U \\+ (Unit, K)) -> hook_complete U -> hook_complete W -> hooks_consistent (getc (U \\+ W)) K -> world_not_hooked U K -> injects U (W \\+ U \\+ (Unit, K)) K.",
            "VernacStartTheoremProof",
            "6970c2afcb9c4cda1406034970601b68e0abbba6"
        ],
        [
            "by rewrite (joinC W); apply: injectL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locProjL (W1 W2 : world) l s1 s2: (s1 \\+ s2) \\In Coh (W1 \\+ W2) -> l \\in dom W1.1 -> s1 \\In Coh W1 -> getStatelet (s1 \\+ s2) l = getStatelet s1 l.",
            "VernacStartTheoremProof",
            "8597277032aaf2fb504238fef8562aefce6dc2c3"
        ],
        [
            "move=>C D C1; rewrite (cohD C1) in D.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "by rewrite (getSUn (cohS C) D).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locProjR (W1 W2 : world) l s1 s2: (s1 \\+ s2) \\In Coh (W1 \\+ W2) -> l \\in dom W2.1 -> s2 \\In Coh W2 -> getStatelet (s1 \\+ s2) l = getStatelet s2 l.",
            "VernacStartTheoremProof",
            "9659497722c4e0d7151afef15a6cde259dfad384"
        ],
        [
            "by rewrite !(joinC W1) !(joinC s1); apply: locProjL.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End InjectExtra.",
            "VernacEndSegment",
            "423e88a0577a1ca0d176a44ba699da552fbe2ee8"
        ],
        [
            "Export InjectExtra.",
            "VernacImport",
            "54391256c6e911f3f0e3b2cfffc397f0dc8740d6"
        ]
    ],
    "proofs": [
        {
            "name": "cohK",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "by case: w=>E/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cohE",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "by case: w=>W ??? cohE sL sR; apply: cohE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_extend",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "by case: w=>W _ _ _ cohE sL sR C G; apply: sL=>//.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sem_split",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "by case: w=>W ??? cohE sl sR; apply: sR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "projectS_cohL",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "case=>V1 V2 G1 D H G2; split=>//; first by move/validL: V1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite valid_umfilt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>z; case B: (z \\in dom (getc W1)).",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by rewrite dom_umfilt !inE B/= -D/=domUn !inE B/=; case/andP:V1=>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite dom_umfilt !inE B.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>l; move: (H l)=>{H}H.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "case B: (l \\in dom (getc W1)); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite /getProtocol /getStatelet; move: (B).",
                        "VernacExtend",
                        "7e529e80bb2879787ee6d9466056f19f0215c721"
                    ]
                },
                {
                    "command": [
                        "case: dom_find=>//-> _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "suff X: ~~(l \\in dom (projectS W1 s)) by case: dom_find X=>//-> _.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite /projectS dom_umfilt inE/= B.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have E1: find l s = find l (projectS W1 s).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite /projectS/= find_umfilt B.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have E2: getProtocol (W1 \\+ W2) l = getProtocol W1 l.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite /getProtocol findUnL//?B//.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite /valid/= in V1; case/andP: V1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by rewrite -E2 /getStatelet -E1 in H *.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "projectS_cohR",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "by rewrite joinC; apply: projectS_cohL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "projectSE",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "case=>Vw Vs G D H; rewrite /projectS.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "have X: {in dom s, dom_filt (getc W2) =1 predD (dom_filt (getc W2)) (dom_filt (getc W1))}.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>z _/=; case I : (z \\in dom (W1.1 \\+ W2.1)).",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "move: I; rewrite domUn !inE/==>/andP[V']/orP[]Z; rewrite Z/=.",
                        "VernacExtend",
                        "6b509b6a448d912d761bbad76ff3082e795e01f6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: validUn V'=>//_ _/(_ z Z)/=G' _;apply/negbTE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite joinC in V'; case: validUn V'=>//_ _/(_ z Z)G' _.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite andbC.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: I; rewrite domUn inE/==>/negbT; rewrite negb_and negb_or/=.",
                        "VernacExtend",
                        "6b509b6a448d912d761bbad76ff3082e795e01f6"
                    ]
                },
                {
                    "command": [
                        "have X: valid (W1 \\+ W2) by [].",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by case/andP: X=>->/=_/andP[]->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite (eq_in_umfilt X) -umfilt_predU/=; clear X.",
                        "VernacExtend",
                        "4e9e68d2c25a943ccfa4c0257e2157db2cc6866c"
                    ]
                },
                {
                    "command": [
                        "suff X: {in dom s, predU (dom_filt (getc W1)) (dom_filt (getc W2)) =1 predT}.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eq_in_umfilt X) umfilt_predT.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>z; rewrite/= -D domUn inE=>/andP[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coh_split",
            "line_nb": 82,
            "steps": [
                {
                    "command": [
                        "move=>C G1 G2; move/projectSE: (C)->.",
                        "VernacExtend",
                        "b5df09ffbf239d22afb2872baa9457f51eb0572c"
                    ]
                },
                {
                    "command": [
                        "exists (projectS W1 s), (projectS W2 s).",
                        "VernacExtend",
                        "4da05688e19478b98b2f2e0c12d034be101f36dc"
                    ]
                },
                {
                    "command": [
                        "split=>//; [by apply: projectS_cohL C G1| by apply: projectS_cohR C G2].",
                        "VernacExtend",
                        "2e73d77e77a6a7d0fa3136321615f5f1a44d38e1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injExtL'",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "move=>H; case: pf=>W2' _ E/=_ _ _ _.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "rewrite -joinA in E.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case/andP: H=>H1 H2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "rewrite /PCM.join/= in H1 H2 E *.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: W2 H1 H2 E=>/=c2 h2 H1 H2 [E1 E2].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (joinxK H1 E1) (joinxK H2 E2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injExtR'",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "move=>H; case: pf=>W2' _ E/= _ _ _ _.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "rewrite -(joinC W2) in E H.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case/andP: H=>H1 H2; rewrite -joinA in E.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite /PCM.join/= in H1 H2 E *.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: W1 H1 H2 E=>/=c1 h1 H1 H2 [E1 E2].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite (joinxK H1 E1) (joinxK H2 E2).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injExtL",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "by move/(injExtL' pf); rewrite unitR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injExtR",
            "line_nb": 106,
            "steps": [
                {
                    "command": [
                        "by move/(injExtR' pf); rewrite unitR.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cohUnKR",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "move=>H C G2; move: (cohH C) => G1.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "suff X: s' = projectS W (s \\+ s').",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite X; apply: (projectS_cohR H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "suff X: s = projectS U (s \\+ s').",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move: (cohS H)=>V; move/projectSE: (H)=>E.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "rewrite E in V.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite {1}X in E.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by rewrite (joinxK V (sym_eq E)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /projectS.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "suff X: {in dom (s \\+ s'), dom U.1 =i dom s}.",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite (eq_in_umfilt X) umfilt_dom ?(cohS H)//.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>z _; move: (cohD C z); rewrite /in_mem.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cohUnKL",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "by move=>H C G1; rewrite [U \\+ W]joinC [s\\+_]joinC in H; apply: (cohUnKR H).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "getPUn",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "move=>V; rewrite /getProtocol=>D.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "case/andP: (V)=>V1 V2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by rewrite findUnL ?V1// D.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "getSUn",
            "line_nb": 139,
            "steps": [
                {
                    "command": [
                        "move=>V; rewrite /getStatelet=>D.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "by rewrite findUnL ?V// D.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hook_completeL",
            "line_nb": 143,
            "steps": [
                {
                    "command": [
                        "case: U=>c h=> V H z lc ls st D.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "move: (H z lc ls st); rewrite domUn inE/= D/=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case/andP: V=>_->/==>/(_ is_true_true)=>/andP[].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "by rewrite !unitR=>->->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "get_protocol_hooks",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "move=>V; rewrite /getProtocol.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite findUnR ?dom0 ?inE//; rewrite unitR; case/andP: V.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coh_hooks",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "case=>V Vs Hk D L.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "split=>//; first by move/validL: V.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: hook_completeL V Hk.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>z; rewrite -D domUn !inE/= unitR dom0 orbC/=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by move/validL:V=>/andP[]->_.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>l; move: (L l); rewrite (get_protocol_hooks K l (validL V)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "inj_hooks_complete",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "move=>V G1 G2 G.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move=>z lc ls st; rewrite domUn !inE/= !unitR.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "move/andP: (V)=>[_]->/=; case/orP; last by move/G.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite !domUn !inE; case/validL/andP:V=>->->/=.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "case/orP; first by case/G1/andP=>->->.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case/G2/andP=>->->; rewrite -!(orbC true).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hooks_frame",
            "line_nb": 279,
            "steps": [
                {
                    "command": [
                        "move=>G1 G2 G D' C1 C' N A z lc hk F D1 D2; move: F.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "case/andP: (cohW C')=>/=V1 V2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (cohUnKR (coh_hooks C') C1 G2) => C2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite findUnL ?V2//=; case: ifP=>D3; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move => F; apply sym_eq in F; move: F.",
                        "VernacExtend",
                        "642f44b055df07a378aca377ba5b1c270938af87"
                    ]
                },
                {
                    "command": [
                        "by move/find_some/N/negP; rewrite eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite findUnR ?(validL V2)//; case: ifP=>[D|_].",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "case/G2/andP: D=>_ D; rewrite (cohD C2) in D.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "by case: validUn (cohS C')=>//_ _/(_ _ D'); rewrite D.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move => F.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq in F.",
                        "VernacExtend",
                        "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
                    ]
                },
                {
                    "command": [
                        "have D'': lc \\in dom s by case/andP:(G1 _ _ _ _ (find_some F)); rewrite (cohD C1).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have E: getStatelet s l = getStatelet (s \\+ s') l by rewrite (getSUn (cohS C'))// -?(cohD C1').",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "have E': getStatelet s lc = getStatelet (s \\+ s') lc.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "by rewrite (getSUn (cohS C'))// -?(cohD C1').",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: (getStatelet (s \\+ s') l) (getStatelet (s \\+ s') lc) E E'.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by move=>y1 y2 Z1 Z2; subst y1 y2; apply sym_eq in F; apply: (A z).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injectL",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "move=>H G1 G2 G N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "exists W=>//[s|s1 s2 s this|s1 s2 s1' s2' this]; [split | |].",
                        "VernacExtend",
                        "d5dfd4f84f08fb4bcfaab1963a966f47b3d69e68"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move/coh_hooks=>C; exists (projectS U s), (projectS W s).",
                        "VernacExtend",
                        "09d80320600cf2338e2fc228c75ff1c5bb51f8b6"
                    ]
                },
                {
                    "command": [
                        "split; [by apply projectSE|by apply: (projectS_cohL C)| by apply: (projectS_cohR C)].",
                        "VernacExtend",
                        "498f2319dd7134082eea0e40f3e34ad6260d5a22"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case=>s1[s2][Z]C1 C2; subst s.",
                        "VernacExtend",
                        "ea72329e99a3a87dbfedc64b9cbd7c6492d91a2e"
                    ]
                },
                {
                    "command": [
                        "have W1 : valid (s1 \\+ s2).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "case: validUn; rewrite ?(cohS C1) ?(cohS C2)//.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "move=>l; rewrite -(cohD C1)-(cohD C2).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "case/validL/andP: H=>H _; by case: validUn H=>//_ _/(_ l) G' _/G'; move/negbTE=>->.",
                        "VernacExtend",
                        "14b141a2d70f00681f703015bc169478d399fe62"
                    ]
                },
                {
                    "command": [
                        "split=>//[||l].",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by apply: inj_hooks_complete.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "move=>l; rewrite !domUn !inE !unitR dom0 orbC/=.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "rewrite W1/= -(cohD C1)-(cohD C2) domUn !inE//=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by move/validL/andP:H=>[->]_.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite (get_protocol_hooks K l (validL H)).",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "rewrite /getProtocol/getStatelet !findUnL//; last by case/validL/andP:H.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite (cohD C1); case B: (l \\in dom s1)=>//; apply: coh_coh.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>C1 C2; apply: inject_frame.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>C1 C2; apply: (inject_step (validL H)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "injectR",
            "line_nb": 368,
            "steps": [
                {
                    "command": [
                        "by rewrite (joinC W); apply: injectL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locProjL",
            "line_nb": 371,
            "steps": [
                {
                    "command": [
                        "move=>C D C1; rewrite (cohD C1) in D.",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "by rewrite (getSUn (cohS C) D).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locProjR",
            "line_nb": 375,
            "steps": [
                {
                    "command": [
                        "by rewrite !(joinC W1) !(joinC s1); apply: locProjL.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}