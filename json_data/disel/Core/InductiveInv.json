{
    "filename": "Core/InductiveInv.v",
    "coq_project": "disel",
    "vernac_cmds": [
        [
            "From mathcomp.ssreflect Require Import ssreflect ssrbool ssrnat eqtype ssrfun seq.",
            "VernacRequire",
            "037d2ffdc90053d89d1b918c36daaeab721d2d83"
        ],
        [
            "From mathcomp Require Import path.",
            "VernacRequire",
            "7c70f445c754a2a74114416d587d02e512c693e2"
        ],
        [
            "Require Import Eqdep.",
            "VernacRequire",
            "a499933d0898d4c0e235af789d9252f633426d20"
        ],
        [
            "Require Import Relation_Operators.",
            "VernacRequire",
            "5c09f52be79db9d019c350cc3153659920102fbb"
        ],
        [
            "From fcsl Require Import axioms pred prelude ordtype finmap pcm unionmap heap.",
            "VernacRequire",
            "576c96e5dbde92d8f1878b78d95e36aa980a0403"
        ],
        [
            "From DiSeL Require Import Freshness State EqTypeX Protocols Worlds NetworkSem Rely.",
            "VernacRequire",
            "26e11e2fa076d0e09ced8c25739f81efacc39c1d"
        ],
        [
            "Require FunctionalExtensionality.",
            "VernacRequire",
            "175dfd4232d2cc6fdc14f507cfb187db7ed0d0cf"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Module ProtocolWithInvariant.",
            "VernacDefineModule",
            "3d6cca9fa796af2e1cfe072af82881d6de62c85c"
        ],
        [
            "Section ProtocolWithInvariant.",
            "VernacBeginSection",
            "97bc21c3803b5925c8c687abfe63c3a46bdd9387"
        ],
        [
            "Variable p : protocol.",
            "VernacAssumption",
            "72bf1c5c330624859b62fed839dbdbb575f4ae29"
        ],
        [
            "Notation l := (plab p).",
            "VernacSyntacticDefinition",
            "e9cce4c6c95c13b817f34abc87d6508c8dbf8965"
        ],
        [
            "Notation coh := (coh p).",
            "VernacSyntacticDefinition",
            "e86ba809da6c5dcfc45c3228dc7a5da0d93d6607"
        ],
        [
            "Variable I : dstatelet -> pred nid -> Prop.",
            "VernacAssumption",
            "d24dd684b16718059d65754269e40f62bc07f5e4"
        ],
        [
            "Variable d0 : dstatelet.",
            "VernacAssumption",
            "157591df750d8f94e0f16cca4edd6840dea14a6a"
        ],
        [
            "Definition W := mkWorld p.",
            "VernacDefinition",
            "7a2ce0a21c7334dab54960b4d893563af5805007"
        ],
        [
            "Notation toSt d := (l \\\\-> d).",
            "VernacSyntacticDefinition",
            "995ddcff3122803063bf7d182968fb0e8a3e383a"
        ],
        [
            "Definition cohI := [Pred d | coh d /\\ I d (nodes p d)].",
            "VernacDefinition",
            "305d5c7a2f038c2ed9cf6439075b49321a2535c7"
        ],
        [
            "Lemma cohIVd d : cohI d -> valid (dstate d).",
            "VernacStartTheoremProof",
            "4fa802feb83c256c3525bcfcd3c02e0da89e6c3b"
        ],
        [
            "by case=>/cohVl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cohIVs d : cohI d -> valid (dsoup d).",
            "VernacStartTheoremProof",
            "a7f7932d8b58d21a9d5c554543eaf0fb79bd06a0"
        ],
        [
            "by case=>/cohVs.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cohIDom d : cohI d -> dom (dstate d) =i nodes p d.",
            "VernacStartTheoremProof",
            "7cdd0a758b2397ace48766e2b4edef50bcf9ee58"
        ],
        [
            "by case=>/cohDom.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition CohI := CohPred (CohPredMixin cohIVd cohIVs cohIDom).",
            "VernacDefinition",
            "4f2ccbdaec640c1cceb7cb19f3e83cdbb287371f"
        ],
        [
            "Lemma st_helper d : (getStatelet (toSt d) l) = d.",
            "VernacStartTheoremProof",
            "6b6af7e29e6b55fbf3c7fc034ab9001c75035333"
        ],
        [
            "by rewrite /getStatelet findPt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cohSt d : coh d -> Coh W (toSt d).",
            "VernacStartTheoremProof",
            "97d00cfa295a4e5840a471c225551c506a0fc118"
        ],
        [
            "move=>C; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply/andP; rewrite valid_unit; split=>//; apply: validPt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: validPt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>z lc ls st; rewrite dom0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>z; rewrite !domPt inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>k; case B: (k \\in dom (toSt d)); last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /getProtocol /getStatelet.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (dom_find k (toSt d))=>[->|v /find_some]; last by rewrite B.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite domPt inE/= in B.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by case: (dom_find k (toSt p))=>[->|? /find_some]//; rewrite domPt inE/= B.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite domPt inE/= in B; move/eqP: B=>B; subst k.",
            "VernacExtend",
            "1958890856e75ca353a48910b6f371ed93ac924d"
        ],
        [
            "by rewrite /getProtocol /getStatelet !findPt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section SendInvWrapper.",
            "VernacBeginSection",
            "ff0377fc4c3180dcd643ac5e250257136fc01b02"
        ],
        [
            "Variable st : send_trans coh.",
            "VernacAssumption",
            "6c7114f464fddd2c032c2f27bc8d82dedfe0d00e"
        ],
        [
            "Definition send_safeI this to d m := send_safe st this to d m /\\ I d (nodes p d).",
            "VernacDefinition",
            "5fa616ee42d6495548acab0795d6671112afc759"
        ],
        [
            "Lemma s_safe_cohI this to d m : send_safeI this to d m -> CohI d.",
            "VernacStartTheoremProof",
            "8b4a77513bcca40d4e924ec5c67770db6ec98182"
        ],
        [
            "by case=>/s_safe_coh=>[H1]H2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma s_safe_inI this to d m : send_safeI this to d m -> this \\in nodes p d /\\ to \\in nodes p d.",
            "VernacStartTheoremProof",
            "3414d0d26d087830d719d74f632b4b29c01e0889"
        ],
        [
            "by case=>/s_safe_in.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition send_stepI: send_step_t (send_safeI) := fun this to d msg S => (@send_step _ _ st this to d msg (proj1 S)).",
            "VernacDefinition",
            "39b4bb2a97448d85b7c0446e3ed41c6997d4c91b"
        ],
        [
            "Lemma s_safe_defI this to d msg : send_safeI this to d msg <-> exists b pf, @send_stepI this to d msg pf = Some b.",
            "VernacStartTheoremProof",
            "7be140611fba2fe207a114aae760f9e65554fc12"
        ],
        [
            "move: (s_safe_def st this to d msg)=>H; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>S; case: (S)=>/H[b][pf]E H1; exists b.",
            "VernacExtend",
            "427c41cef3ab913871d16cf41959ec42faffd2e8"
        ],
        [
            "exists (conj pf H1).",
            "VernacExtend",
            "748a74ff69ab2399085d8d52f99dbcbaa16b9e9a"
        ],
        [
            "by rewrite /send_stepI (pf_irr (proj1 (conj pf H1)) pf).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case=>b[pf]E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition S_inv := forall this to d msg (S : send_safe st this to d msg) b, I d (nodes p d) -> Some b = send_step S -> let: f' := upd this b (dstate d) in let: s' := (post_msg (dsoup d) (Msg (TMsg (t_snd st) msg) this to true)).1 in let: d' := DStatelet f' s' in (forall z, z == this = false -> getLocal z d' = getLocal z d) -> I d' (nodes p d').",
            "VernacDefinition",
            "270f5c583fe04382b886b9c8249f9d9f88103cbb"
        ],
        [
            "Hypothesis HIstep : S_inv.",
            "VernacAssumption",
            "7199ef9c36989cea57902517e42a5771189a9a86"
        ],
        [
            "Lemma s_step_cohI : s_step_coh_t CohI (t_snd st) send_stepI.",
            "VernacStartTheoremProof",
            "3b0cee1d307088b5c01710ec1ec5143b3e37221d"
        ],
        [
            "have E1: (getProtocol W l) = p by rewrite /getProtocol/W/=findPt.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/s_step_coh: (st)=>H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move=>this to d msg [S]H1 b.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /send_stepI (pf_irr (proj1 (conj S H1)) S)=>E.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "split=>//= ; first by apply: (H this to d msg S b E).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "apply: (HIstep H1 E _)=>//.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by move=>z N; rewrite /getLocal/= findU N.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition snd_transI := SendTrans s_safe_cohI s_safe_inI s_safe_defI s_step_cohI.",
            "VernacDefinition",
            "751f3f2c2dc90571cd8d8a027e2c1619b84926ed"
        ],
        [
            "End SendInvWrapper.",
            "VernacEndSegment",
            "41e6c691b34772764a53740cc377f4709c990049"
        ],
        [
            "Section ReceiveInvWrapper.",
            "VernacBeginSection",
            "622161baac8d3e4ea30912d8ec1e57636d524fa7"
        ],
        [
            "Variable rt : receive_trans coh.",
            "VernacAssumption",
            "d2385133a8426c72e5ce745e2a714ecb2c1f1d88"
        ],
        [
            "Definition receive_stepI: receive_step_t CohI := fun this from m d C pf => receive_step rt from m (proj1 C) pf.",
            "VernacDefinition",
            "1b20ef5929e69c75fdb32b664288363156a4cb09"
        ],
        [
            "Definition R_inv := forall d from this i (C : coh d) m (pf: this \\in nodes p d), I d (nodes p d) -> find i (dsoup d) = Some (Msg m from this true) -> this \\in dom (dstate d) -> msg_wf rt C this from m -> tag m = t_rcv rt -> let: loc' := receive_step rt from m C pf in let: s'' := consume_msg (dsoup d) i in let: f' := upd this loc' (dstate d) in let: d' := (DStatelet f' s'') in (forall z, z == this = false -> getLocal z d' = getLocal z d) -> I d' (nodes p d').",
            "VernacDefinition",
            "95142c23155e0d72a4233d70b09f659e34053b42"
        ],
        [
            "Hypothesis HIstep : R_inv.",
            "VernacAssumption",
            "21abd1e40d79b634ac2bd1f7abe7eff2c0b3a0df"
        ],
        [
            "Notation msg_wfI := (fun d (C : CohI d) => msg_wf rt (proj1 C)).",
            "VernacSyntacticDefinition",
            "8088f5ac68aa0482528211f3c6107156a2cf0f3f"
        ],
        [
            "Lemma r_step_cohI : r_step_coh_t msg_wfI (t_rcv rt) receive_stepI.",
            "VernacStartTheoremProof",
            "5eca6c7e8237c664a9e62a5dc3854d5f49dc4f49"
        ],
        [
            "have E1: (getProtocol W l) = p by rewrite /getProtocol/W/=findPt.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move=>d from this i C F m D N Wf T.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite /receive_stepI/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "set d' := {| dstate := upd this (receive_step rt from m (proj1 C) F) (dstate d); dsoup := consume_msg (dsoup d) i |}.",
            "VernacExtend",
            "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
        ],
        [
            "split; first by apply: (r_step_coh F D N Wf T).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "apply: (HIstep (proj2 C) N D Wf T)=>//z N'.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "by rewrite /getLocal findU N'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition rcv_transI := @ReceiveTrans _ CohI _ msg_wfI _ r_step_cohI.",
            "VernacDefinition",
            "e32e3d400264ca0329f4fd757421043abd762276"
        ],
        [
            "End ReceiveInvWrapper.",
            "VernacEndSegment",
            "1334068fdc49ce1fdbcf1cfd9a4e92050238b1ec"
        ],
        [
            "Structure SendInv := SI { st : send_trans coh; st_inv : S_inv st; }.",
            "VernacInductive",
            "6605a83ed1b88b15d7c337cb3756f33229f6af99"
        ],
        [
            "Structure ReceiveInv := RI { rt : receive_trans coh; rt_inv : R_inv rt; }.",
            "VernacInductive",
            "0bb8e7bb66109ed33f3f1ea2c92a2671851d4727"
        ],
        [
            "Structure InductiveInv := II { sts : seq SendInv; rts : seq ReceiveInv; _ : map st sts = snd_trans p; _ : map rt rts = rcv_trans p }.",
            "VernacInductive",
            "9f615c5b9d45eb2d52333fbf64df880a74229296"
        ],
        [
            "Definition stsI sts := map (fun stt => @snd_transI (st stt) (@st_inv stt)) sts.",
            "VernacDefinition",
            "fdd1133d0783a0af65f937b239d60b0ba3822255"
        ],
        [
            "Definition rtsI rts := map (fun rtt => @rcv_transI (rt rtt) (@rt_inv rtt)) rts.",
            "VernacDefinition",
            "056147e0cef6ba424c97bfd47cb27fc2a2a49de9"
        ],
        [
            "Import FunctionalExtensionality.",
            "VernacImport",
            "c5df533563149efa35f96b54ec5eec0b3971518b"
        ],
        [
            "Variable ii : InductiveInv.",
            "VernacAssumption",
            "8deac28a0a940237916b32437bdd6b844bd74eed"
        ],
        [
            "Lemma us : uniq (map (@t_snd _ _) (stsI (sts ii))).",
            "VernacStartTheoremProof",
            "7b93dc7dd63bf4aac5e70a930d243a052c5c4c88"
        ],
        [
            "case: ii=>sts rts Hs Hr; rewrite /stsI -seq.map_comp/=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "suff E: (t_snd (coh:=CohI) \\o (fun stt : SendInv => snd_transI (st_inv (s:=stt)))) = fun stt => t_snd (st stt).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite E seq.map_comp; rewrite Hs; apply: snd_uniq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: functional_extensionality=>z.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ur : uniq (map (@t_rcv _ _) (rtsI (rts ii))).",
            "VernacStartTheoremProof",
            "4402f274b47206e4ecbf328339545c74028bccfc"
        ],
        [
            "case: ii=>sts rts Hs Hr; rewrite /stsI -seq.map_comp/=.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "suff E: (t_rcv (coh:=CohI) \\o (fun rtt : ReceiveInv => rcv_transI (rt_inv (r:=rtt)))) = fun rtt => t_rcv (rt rtt).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by rewrite E seq.map_comp; rewrite Hr; apply: rcv_uniq.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: functional_extensionality=>z.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ProtocolWithIndInv := @Protocol _ l _ _ _ us ur.",
            "VernacDefinition",
            "cf33fd6e0af0699d1dcd7e8deccf0eb5f38473bd"
        ],
        [
            "Lemma stIn (s : SendInv) : s \\In (sts ii) -> (snd_transI (@st_inv s)) \\In (snd_trans ProtocolWithIndInv).",
            "VernacStartTheoremProof",
            "2818b46538f68ba28a555fe7123637f53d28551b"
        ],
        [
            "by move=>H; rewrite /stsI/=; apply/Mem_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rtIn (r : ReceiveInv) : r \\In (rts ii) -> (rcv_transI (@rt_inv r)) \\In (rcv_trans ProtocolWithIndInv).",
            "VernacStartTheoremProof",
            "ecb69beb991995b6d0204eb27055f6e426754099"
        ],
        [
            "by move=>H; rewrite /rtsI/=; apply/Mem_map.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma getInvSendTrans st z to msg s1 h : st \\In (snd_trans ProtocolWithIndInv) -> forall (S : send_safe st z to (getStatelet s1 (plab p)) msg), Some h = send_step S -> exists st', [/\\ st' \\In get_st (mkWorld p) (plab p), t_snd st' = t_snd st, all_hooks_fire (mkWorld p) (plab p) (t_snd st') s1 z msg to & exists S': (send_safe st' z to (getStatelet s1 (plab p)) msg), Some h = send_step S'].",
            "VernacStartTheoremProof",
            "947ebebdeb5474cec23c66e8209c22a5686ecfe6"
        ],
        [
            "simpl; case: ii=>sts rts HS HR/=; rewrite /stsI.",
            "VernacExtend",
            "0c696b55b682e1bb4c0e9593bca2da3e59d068fe"
        ],
        [
            "case/Mem_map_inv; case=>st' stI/= [->]H1; case=>S Is E.",
            "VernacExtend",
            "d4127243a8edd835b38ce1b186629bc51391e41f"
        ],
        [
            "rewrite /get_st/InMem!prEq; exists st'.",
            "VernacExtend",
            "bbddc16145b72b198ee7bce0dc16ac8e085d3683"
        ],
        [
            "split=>//.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -HS/=; apply: (Mem_map ProtocolWithInvariant.st H1).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite/send_step/=/Transitions.send_step/=/send_stepI in E.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>??? F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply sym_eq in F.",
            "VernacExtend",
            "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
        ],
        [
            "move: F.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by move/find_some; rewrite dom0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by exists (proj1 (conj S Is)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ProtocolWithInvariant.",
            "VernacEndSegment",
            "da4bcf9298be893cbee044fee7a9de12cc4aa4fe"
        ],
        [
            "Section InductiveInvConj.",
            "VernacBeginSection",
            "2aff6ff40a0f4ce0abb3f4b8f9245a94ed2214a9"
        ],
        [
            "Variable p : protocol.",
            "VernacAssumption",
            "72bf1c5c330624859b62fed839dbdbb575f4ae29"
        ],
        [
            "Definition s_inv_conj (I1 I2 : dstatelet -> pred nid -> Prop) (st : send_trans (coh p)) := S_inv (fun d n => I1 d n /\\ I2 d n) st.",
            "VernacDefinition",
            "2a5bbc00e34f7ef3c76227cf0919c4d51863b5aa"
        ],
        [
            "Lemma s_inv_conjC I1 I2 st : s_inv_conj I1 I2 st <-> s_inv_conj I2 I1 st.",
            "VernacStartTheoremProof",
            "ac73fb26f28168886adbcc480301bfbd11013cb8"
        ],
        [
            "by split; move=>H this to d msg S b /and_comm G E N; apply/and_comm; apply: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma s_inv_conjA I1 I2 I3 st : s_inv_conj I1 (fun d n => I2 d n /\\ I3 d n) st <-> s_inv_conj (fun d n => I1 d n /\\ I2 d n) I3 st.",
            "VernacStartTheoremProof",
            "e417ce3ac5f161ea1dc48432df5027833642e1cc"
        ],
        [
            "by split=>H this to d msg S b /and_assoc G E N; apply/and_assoc; apply: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition r_inv_conj (I1 I2 : dstatelet -> pred nid -> Prop) (rt : receive_trans (coh p)) := R_inv (fun d n => I1 d n /\\ I2 d n) rt.",
            "VernacDefinition",
            "0ab91086babd54b988e27828b8510724dc2a7dfd"
        ],
        [
            "Lemma r_inv_conjC I1 I2 rt : r_inv_conj I1 I2 rt <-> r_inv_conj I2 I1 rt.",
            "VernacStartTheoremProof",
            "f783363bfbe9a6c14988b01d67c0360e7176b5c2"
        ],
        [
            "by split=>H d from this i C m pf/and_comm G E D W T N; apply/and_comm; apply: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma r_inv_conjA I1 I2 I3 rt : r_inv_conj I1 (fun d n => I2 d n /\\ I3 d n) rt <-> r_inv_conj (fun d n => I1 d n /\\ I2 d n) I3 rt.",
            "VernacStartTheoremProof",
            "2eeec8d097bff3d0d197841dfe917c4def23bbfe"
        ],
        [
            "by split=>H d from this i C m pf/and_assoc G E D W T N; apply/and_assoc; apply: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End InductiveInvConj.",
            "VernacEndSegment",
            "c531512a0ebfb3b3e94f4b4182d67017b15ae17d"
        ],
        [
            "End ProtocolWithInvariant.",
            "VernacEndSegment",
            "da4bcf9298be893cbee044fee7a9de12cc4aa4fe"
        ],
        [
            "Module PWIExports.",
            "VernacDefineModule",
            "2da062dd02527148582cf35bcdfa9136c226294d"
        ],
        [
            "Section PWIExports.",
            "VernacBeginSection",
            "f66e6642a649b28b22a0180e24ca9c1affbf9eb8"
        ],
        [
            "Import ProtocolWithInvariant.",
            "VernacImport",
            "b7d6c6f133e7c1ff5af6236dc8d0c000cd62289c"
        ],
        [
            "Definition st_helper := st_helper.",
            "VernacDefinition",
            "50b00e25f63ab0cb9643fe0f25dc7cac8d129c39"
        ],
        [
            "Definition cohSt := cohSt.",
            "VernacDefinition",
            "087c01a3e168a473d91d412edd08d3bb8e5fcdc9"
        ],
        [
            "Definition S_inv := ProtocolWithInvariant.S_inv.",
            "VernacDefinition",
            "f87337a30ee70bca5333e30326d43e0cc80a617d"
        ],
        [
            "Definition R_inv := ProtocolWithInvariant.R_inv.",
            "VernacDefinition",
            "a6cd1b9e2f4e23e707c4839bec542528f25c0fc1"
        ],
        [
            "Definition SendInv := SendInv.",
            "VernacDefinition",
            "44c9a70ec21caef1a4ca9dcdbd702edf0fc6093a"
        ],
        [
            "Definition SI := SI.",
            "VernacDefinition",
            "a86adc68c66b0a8bdee3a0edc4cd6c1073d23a31"
        ],
        [
            "Definition ReceiveInv := ReceiveInv.",
            "VernacDefinition",
            "979ba22f731096dac534395b67c24bf08effb78c"
        ],
        [
            "Definition RI := RI.",
            "VernacDefinition",
            "24ad7d281becc502eb5a7d24b660736596a500e9"
        ],
        [
            "Definition InductiveInv := InductiveInv.",
            "VernacDefinition",
            "6d38be719a7710d51131daf97dab7c8afd07c81f"
        ],
        [
            "Lemma with_inv_coh pr I (ii : InductiveInv pr I) s: s \\In Coh (mkWorld (ProtocolWithIndInv ii)) -> s \\In Coh (mkWorld pr).",
            "VernacStartTheoremProof",
            "0b13c3af616b905cc63b558b787e21da47949671"
        ],
        [
            "case=>G1 G2 Gh G3 G4; split=>//.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply/andP; rewrite valid_unit; split=>//; rewrite !validPt in G1 *.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>???? ;rewrite dom0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>z; move: (G3 z); rewrite !domPt !inE.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>l; move: (G4 l).",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "case X: (l == plab pr); first by move/eqP:X=>X; subst l; rewrite !prEq; case.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /getProtocol/mkWorld/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff [X1 X2]: l \\notin dom (plab pr \\\\-> ProtocolWithIndInv ii) /\\ l \\notin dom (plab pr \\\\-> pr).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: dom_find X1 X2=>//=->_; case: dom_find=>//=->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !domPt !inE/=; suff: plab pr != l by [].",
            "VernacExtend",
            "0834e8fbfecd5435396b5e25711e57aa86c282e5"
        ],
        [
            "by apply/negbT; apply/negP=>/eqP Z; subst l; rewrite eqxx in X.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma with_inv_nodes pr I (ii : InductiveInv pr I) l : nodes (getProtocol (mkWorld (ProtocolWithIndInv ii)) l) = nodes (getProtocol (mkWorld pr) l).",
            "VernacStartTheoremProof",
            "20db997d293290ded71a088b02918c60b2f8f011"
        ],
        [
            "rewrite /getProtocol/mkWorld/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case X: (l == plab pr); first by move/eqP:X=>X; subst l; rewrite !findPt.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /getProtocol/mkWorld/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "suff [X1 X2]: l \\notin dom (plab pr \\\\-> ProtocolWithIndInv ii) /\\ l \\notin dom (plab pr \\\\-> pr).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "by case: dom_find X1 X2=>//=->_; case: dom_find=>//=->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite !domPt !inE/=; suff: plab pr != l by [].",
            "VernacExtend",
            "0834e8fbfecd5435396b5e25711e57aa86c282e5"
        ],
        [
            "by apply/negbT; apply/negP=>/eqP Z; subst l; rewrite eqxx in X.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma with_inv_labE pr I (ii : InductiveInv pr I): plab (ProtocolWithIndInv ii) = plab pr.",
            "VernacStartTheoremProof",
            "29ea4dcb12c0ae32d52f07742a6ee69872f21b62"
        ],
        [
            "by [].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma with_inv_step pr I (ii : InductiveInv pr I) z s1 s2: s1 \\In Coh (mkWorld (ProtocolWithIndInv ii)) -> network_step (mkWorld pr) z s1 s2 -> network_step (mkWorld (ProtocolWithIndInv ii)) z s1 s2.",
            "VernacStartTheoremProof",
            "cabbe91151edd2b779a87d31ce0a4656adac43f6"
        ],
        [
            "move=>C'; move: (with_inv_coh C')=>C.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "case; first by case=>_<-; apply: Idle.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=>l st Hs to msg h H1 H2 _ S A E ->/=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have Y : l = plab pr by rewrite -(cohD C) domPt inE/= in H2; move/eqP:H2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "subst l; move: st Hs H1 S E A; rewrite /get_st/InMem!prEq/==>st Hs H1 S E A.",
            "VernacExtend",
            "a9595913b20baef260f1ceee4a67f0e7e1f1c251"
        ],
        [
            "suff X: exists st', [/\\ st' \\In get_st (mkWorld (ProtocolWithIndInv ii)) (plab pr), t_snd st' = t_snd st, all_hooks_fire (mkWorld (ProtocolWithIndInv ii)) (plab pr) (t_snd st') s1 z msg to & exists S': (send_safe st' z to (getStatelet s1 (plab pr)) msg), Some h = send_step S'].",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case:X=>st'[Hs']Et A'[S']E'; rewrite -Et.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "move: (with_inv_nodes ii (plab pr)); rewrite !prEq=>P.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "by rewrite -P in H1; apply: (SendMsg (to:=to)(this:=z)(b:=h)(msg:=msg) Hs').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite -(with_inv_labE ii)/get_st/InMem!prEq.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: ii (@stIn _ _ ii) C' =>sts rts HS HR/= Hi C'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -HS in Hs; move/Mem_map_inv: Hs=>[[st' stI]]/=[Es]Si; subst st'.",
            "VernacExtend",
            "e98edc629cb733c092946cc8dfb5d8af0f0490d4"
        ],
        [
            "have G: I (getStatelet s1 (plab pr)) (nodes pr (getStatelet s1 (plab pr))).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by case: C'=>_ _ _ _/(_ (plab pr)); rewrite prEq; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move:(Hi _ Si)=>/={Hi Si}Hi; exists (@snd_transI pr I st stI); split=>//=.",
            "VernacExtend",
            "f286e4c1fe56ee92a6bed0a11f00cfae0578ace3"
        ],
        [
            "rewrite /send_safeI /send_stepI/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by exists (conj S G); rewrite (pf_irr (proj1 (conj S G)) S).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>l rt Hr i from H1 H2 C1 msg E[F]Hw/=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have Y : l = plab pr by rewrite -(cohD C) domPt inE/= in H2; move/eqP:H2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "subst l; move: rt Hr H1 E (coh_s _ C1) Hw.",
            "VernacExtend",
            "4f2614d68fef373d8aecc15802839839cbfde5ab"
        ],
        [
            "rewrite /get_rt/InMem/=!prEq=>rt Hr H1 E C1' Hw .",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have Hi: (coh (getProtocol (mkWorld (ProtocolWithIndInv ii)) (plab pr))) (getStatelet s1 (plab pr)) by case:C'=>_ _ _/(_ (plab pr)).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Hz : z \\in nodes (getProtocol (mkWorld (ProtocolWithIndInv ii)) (plab pr)) (getStatelet s1 (plab pr)) by rewrite (with_inv_nodes ii (plab pr)) prEq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suff X: exists rt', [/\\ rt' \\In get_rt (mkWorld (ProtocolWithIndInv ii)) (plab pr), tag msg = t_rcv rt', msg_wf rt' Hi z from msg & receive_step rt from msg C1' H1 = receive_step rt' from msg Hi Hz].",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case:X=>rt'[Hr']E' Hw' Gr G.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have pf: (z \\in nodes (getProtocol (mkWorld (ProtocolWithIndInv ii)) (plab pr)) (getStatelet s1 (plab pr))) by rewrite prEq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (@ReceiveMsg _ z s1 s2 (plab pr) rt' Hr' i from pf)=>/=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -(cohD C) /= domPt inE eqxx/=; move/(_ is_true_true C' msg E')=>X.",
            "VernacExtend",
            "7e529e80bb2879787ee6d9466056f19f0215c721"
        ],
        [
            "subst s2; apply X; split=>//; clear X.",
            "VernacExtend",
            "e56154e094ddfff19c912917a809b9cce3b8ae24"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (pf_irr (coh_s (plab pr) C') Hi).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "congr (upd _ _); congr {| dstate := _ ; dsoup := _ |}; congr (upd _ _).",
            "VernacExtend",
            "eaa8766e408298dc2c6c5fa427af3f9be6dda251"
        ],
        [
            "rewrite Gr; clear E E' Hw Hw' Hr Hr' Gr rt F H2 H1 C1 C.",
            "VernacExtend",
            "d5b4132f95704002e342236414a64aea63fba528"
        ],
        [
            "rewrite (pf_irr pf Hz).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (pf_irr Hi (coh_s (plab pr) C')).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /get_rt/InMem/=; move: C1' H1 Hi Hz Hw; rewrite !prEq=>C1' H1 Hi Hz Hw.",
            "VernacExtend",
            "a833b3bf0d956d1094f48b394f064884ddd0b86d"
        ],
        [
            "case: ii (@rtIn _ _ ii) C' Hi Hz=>/=sts rts HS HR/= Hi C'.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "rewrite -HR in Hr; move/Mem_map_inv: Hr=>[[rt' rtI]]/=[Er]Ri; subst rt'.",
            "VernacExtend",
            "6ece2152de75d49028dbcf6d3a1437e66dd89e7e"
        ],
        [
            "case=>C1'' Inv Hz.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists (@rcv_transI pr I rt rtI); split=>//.",
            "VernacExtend",
            "0f39765d041c2938d8439e8a074b3da703903d20"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move: (@Hi _ Ri).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /receive_step/=/receive_stepI/=/receive_step/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -(pf_irr C1' (proj1 (conj C1'' Inv))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite ?(pf_irr C1' (proj1 (conj C1'' Inv))) ?(pf_irr H1 Hz).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma with_inv_step' pr I (ii : InductiveInv pr I) z s1 s2: network_step (mkWorld (ProtocolWithIndInv ii)) z s1 s2 -> network_step (mkWorld pr) z s1 s2.",
            "VernacStartTheoremProof",
            "c5550af048d7867ac7d785a221d6ea0400abed18"
        ],
        [
            "case.",
            "VernacExtend",
            "3dfaa17e8190d1522b22601372c66b9913f6a1e2"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case=>C'<-; apply: Idle; split=>//; apply: with_inv_coh C'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>l st Hs to msg h H1 H2 C' S A E->{s2}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have Y : l = plab pr by rewrite -(cohD C') domPt inE/= in H2; move/eqP:H2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "subst l; move: st Hs H1 S E A; rewrite /get_st/InMem!prEq/==>st Hs H1 S E A.",
            "VernacExtend",
            "a9595913b20baef260f1ceee4a67f0e7e1f1c251"
        ],
        [
            "suff X: exists st', [/\\ st' \\In get_st (mkWorld pr) (plab pr), t_snd st' = t_snd st, all_hooks_fire (mkWorld (ProtocolWithIndInv ii)) (plab pr) (t_snd st') s1 z msg to & exists S': (send_safe st' z to (getStatelet s1 (plab pr)) msg), Some h = send_step S'].",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case:X=>st'[Hs']Et A'[S']E'; rewrite -Et.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "apply: (SendMsg (to:=to)(this:=z)(b:=h)(msg:=msg) Hs')=>//; [by rewrite prEq| by apply: (with_inv_coh C')].",
            "VernacExtend",
            "39ad906d85c60d5e211811277fb79b37856d01ed"
        ],
        [
            "by apply: (getInvSendTrans (ii := ii)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>l rt Hr i from H1 H2 C1 msg E[F]Hw/=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have Y : l = plab pr by rewrite -(cohD C1) domPt inE/= in H2; move/eqP:H2.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "subst l; move: rt Hr H1 E (coh_s _ C1) Hw.",
            "VernacExtend",
            "4f2614d68fef373d8aecc15802839839cbfde5ab"
        ],
        [
            "rewrite /get_rt/InMem/=!prEq=>rt Hr H1 E C1' Hw.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "have Hi: (coh (getProtocol (mkWorld pr) (plab pr))) (getStatelet s1 (plab pr)) by case:(C1'); rewrite prEq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "have Hz : z \\in nodes (getProtocol (mkWorld pr) (plab pr)) (getStatelet s1 (plab pr)) by rewrite -(with_inv_nodes ii (plab pr)) prEq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "suff X: exists rt', [/\\ rt' \\In get_rt (mkWorld pr) (plab pr), tag msg = t_rcv rt', msg_wf rt' Hi z from msg & receive_step rt from msg C1' H1 = receive_step rt' from msg Hi Hz].",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "case:X=>rt'[Hr']E' Hw' Gr G.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have pf: (z \\in nodes (getProtocol (mkWorld pr) (plab pr)) (getStatelet s1 (plab pr))) by rewrite prEq.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move: (@ReceiveMsg _ z s1 s2 (plab pr) rt' Hr' i from pf)=>/=.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite -(cohD C1) domPt inE eqxx/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "move/(_ is_true_true (with_inv_coh C1) msg E')=>X.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "subst s2; apply X; split=>//; clear X.",
            "VernacExtend",
            "e56154e094ddfff19c912917a809b9cce3b8ae24"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite (pf_irr (coh_s (plab pr) (with_inv_coh C1)) Hi).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "congr (upd _ _); congr {| dstate := _ ; dsoup := _ |}; congr (upd _ _).",
            "VernacExtend",
            "eaa8766e408298dc2c6c5fa427af3f9be6dda251"
        ],
        [
            "rewrite Gr; clear E E' Hw Hw' Hr Hr' Gr rt F H2 H1.",
            "VernacExtend",
            "2d30217d42a7319acf530432c96286a73ab8264c"
        ],
        [
            "rewrite (pf_irr pf Hz).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (pf_irr Hi (coh_s (plab pr) (with_inv_coh C1))).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: ii C1 H2 rt Hr E H1 C1' Hw=>sts rts HS HR/=C1 H2 rt Hr E H1 C1' Hw.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: Hr; rewrite /rtsI.",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "case/Mem_map_inv; case=>rt' rtI/= [Z] H1'; subst rt.",
            "VernacExtend",
            "2316ded3522af538940e26130d56137ca9c88531"
        ],
        [
            "rewrite /get_rt/InMem; move: C1' H1 Hi Hz Hw; rewrite !prEq=>C1' H1 Hi Hz Hw.",
            "VernacExtend",
            "a833b3bf0d956d1094f48b394f064884ddd0b86d"
        ],
        [
            "exists rt'; split=>//; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite {1}/receive_step /rcv_transI /receive_stepI/=.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "rewrite (pf_irr H1 Hz).",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "by rewrite (pf_irr (proj1 C1') Hi).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite -(pf_irr (proj1 C1') Hi).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by rewrite -HR; apply: (Mem_map (@ProtocolWithInvariant.rt pr I) H1').",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma with_inv_rely' pr I (ii : InductiveInv pr I) z s1 s2: network_rely (mkWorld (ProtocolWithIndInv ii)) z s1 s2 -> network_rely (mkWorld pr) z s1 s2.",
            "VernacStartTheoremProof",
            "2db564bbb5dcc906b869f6f863ea958a3099d2cf"
        ],
        [
            "case=>n; elim: n s1=>[|n Hi] s1; first by move=>[<-]/with_inv_coh=>C; exists 0.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case=>z'[s3][N]H/Hi; move/with_inv_step':H=>S; case=>n' R.",
            "VernacExtend",
            "3e49baeca602ac8e1e5623fd1f96b2badfde5292"
        ],
        [
            "by exists n'.+1, z', s3.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ProtocolWithIndInv := ProtocolWithIndInv.",
            "VernacDefinition",
            "c285aedad839bcd0c2b8a47dccb23165fc73dac4"
        ],
        [
            "End PWIExports.",
            "VernacEndSegment",
            "0e6e8a4ac08f1ba13a9293228b2cf8b8fe071012"
        ],
        [
            "End PWIExports.",
            "VernacEndSegment",
            "0e6e8a4ac08f1ba13a9293228b2cf8b8fe071012"
        ],
        [
            "Export PWIExports.",
            "VernacImport",
            "5cc5433d1b5bac39e3f1057c6835b938ebf881aa"
        ]
    ],
    "proofs": [
        {
            "name": "cohIVd",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "by case=>/cohVl.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cohIVs",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "by case=>/cohVs.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cohIDom",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "by case=>/cohDom.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "st_helper",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "by rewrite /getStatelet findPt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cohSt",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "move=>C; split.",
                        "VernacExtend",
                        "22de1c5faad21de60fd48f882c8175e01347018a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply/andP; rewrite valid_unit; split=>//; apply: validPt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: validPt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>z lc ls st; rewrite dom0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>z; rewrite !domPt inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>k; case B: (k \\in dom (toSt d)); last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite /getProtocol /getStatelet.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (dom_find k (toSt d))=>[->|v /find_some]; last by rewrite B.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite domPt inE/= in B.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "by case: (dom_find k (toSt p))=>[->|? /find_some]//; rewrite domPt inE/= B.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite domPt inE/= in B; move/eqP: B=>B; subst k.",
                        "VernacExtend",
                        "1958890856e75ca353a48910b6f371ed93ac924d"
                    ]
                },
                {
                    "command": [
                        "by rewrite /getProtocol /getStatelet !findPt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "s_safe_cohI",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "by case=>/s_safe_coh=>[H1]H2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "s_safe_inI",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "by case=>/s_safe_in.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "s_safe_defI",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "move: (s_safe_def st this to d msg)=>H; split.",
                        "VernacExtend",
                        "22de1c5faad21de60fd48f882c8175e01347018a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>S; case: (S)=>/H[b][pf]E H1; exists b.",
                        "VernacExtend",
                        "427c41cef3ab913871d16cf41959ec42faffd2e8"
                    ]
                },
                {
                    "command": [
                        "exists (conj pf H1).",
                        "VernacExtend",
                        "748a74ff69ab2399085d8d52f99dbcbaa16b9e9a"
                    ]
                },
                {
                    "command": [
                        "by rewrite /send_stepI (pf_irr (proj1 (conj pf H1)) pf).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case=>b[pf]E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r_step_cohI",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "have E1: (getProtocol W l) = p by rewrite /getProtocol/W/=findPt.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "move=>d from this i C F m D N Wf T.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "rewrite /receive_stepI/=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "set d' := {| dstate := upd this (receive_step rt from m (proj1 C) F) (dstate d); dsoup := consume_msg (dsoup d) i |}.",
                        "VernacExtend",
                        "69a61e99b234580f7b41fa5b9655c87ba9a76f70"
                    ]
                },
                {
                    "command": [
                        "split; first by apply: (r_step_coh F D N Wf T).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "apply: (HIstep (proj2 C) N D Wf T)=>//z N'.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "by rewrite /getLocal findU N'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "us",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "case: ii=>sts rts Hs Hr; rewrite /stsI -seq.map_comp/=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "suff E: (t_snd (coh:=CohI) \\o (fun stt : SendInv => snd_transI (st_inv (s:=stt)))) = fun stt => t_snd (st stt).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite E seq.map_comp; rewrite Hs; apply: snd_uniq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: functional_extensionality=>z.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ur",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "case: ii=>sts rts Hs Hr; rewrite /stsI -seq.map_comp/=.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "suff E: (t_rcv (coh:=CohI) \\o (fun rtt : ReceiveInv => rcv_transI (rt_inv (r:=rtt)))) = fun rtt => t_rcv (rt rtt).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by rewrite E seq.map_comp; rewrite Hr; apply: rcv_uniq.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: functional_extensionality=>z.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "stIn",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "by move=>H; rewrite /stsI/=; apply/Mem_map.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rtIn",
            "line_nb": 124,
            "steps": [
                {
                    "command": [
                        "by move=>H; rewrite /rtsI/=; apply/Mem_map.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "getInvSendTrans",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "simpl; case: ii=>sts rts HS HR/=; rewrite /stsI.",
                        "VernacExtend",
                        "0c696b55b682e1bb4c0e9593bca2da3e59d068fe"
                    ]
                },
                {
                    "command": [
                        "case/Mem_map_inv; case=>st' stI/= [->]H1; case=>S Is E.",
                        "VernacExtend",
                        "d4127243a8edd835b38ce1b186629bc51391e41f"
                    ]
                },
                {
                    "command": [
                        "rewrite /get_st/InMem!prEq; exists st'.",
                        "VernacExtend",
                        "bbddc16145b72b198ee7bce0dc16ac8e085d3683"
                    ]
                },
                {
                    "command": [
                        "split=>//.",
                        "VernacExtend",
                        "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite -HS/=; apply: (Mem_map ProtocolWithInvariant.st H1).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite/send_step/=/Transitions.send_step/=/send_stepI in E.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>??? F.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply sym_eq in F.",
                        "VernacExtend",
                        "76cf18d85a6c70aff426f8c1ee06ccb93e71c674"
                    ]
                },
                {
                    "command": [
                        "move: F.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by move/find_some; rewrite dom0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by exists (proj1 (conj S Is)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "s_inv_conjC",
            "line_nb": 146,
            "steps": [
                {
                    "command": [
                        "by split; move=>H this to d msg S b /and_comm G E N; apply/and_comm; apply: H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "s_inv_conjA",
            "line_nb": 149,
            "steps": [
                {
                    "command": [
                        "by split=>H this to d msg S b /and_assoc G E N; apply/and_assoc; apply: H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r_inv_conjC",
            "line_nb": 153,
            "steps": [
                {
                    "command": [
                        "by split=>H d from this i C m pf/and_comm G E D W T N; apply/and_comm; apply: H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r_inv_conjA",
            "line_nb": 156,
            "steps": [
                {
                    "command": [
                        "by split=>H d from this i C m pf/and_assoc G E D W T N; apply/and_assoc; apply: H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "with_inv_coh",
            "line_nb": 173,
            "steps": [
                {
                    "command": [
                        "case=>G1 G2 Gh G3 G4; split=>//.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply/andP; rewrite valid_unit; split=>//; rewrite !validPt in G1 *.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>???? ;rewrite dom0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>z; move: (G3 z); rewrite !domPt !inE.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>l; move: (G4 l).",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "case X: (l == plab pr); first by move/eqP:X=>X; subst l; rewrite !prEq; case.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite /getProtocol/mkWorld/=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "suff [X1 X2]: l \\notin dom (plab pr \\\\-> ProtocolWithIndInv ii) /\\ l \\notin dom (plab pr \\\\-> pr).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: dom_find X1 X2=>//=->_; case: dom_find=>//=->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !domPt !inE/=; suff: plab pr != l by [].",
                        "VernacExtend",
                        "0834e8fbfecd5435396b5e25711e57aa86c282e5"
                    ]
                },
                {
                    "command": [
                        "by apply/negbT; apply/negP=>/eqP Z; subst l; rewrite eqxx in X.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "with_inv_nodes",
            "line_nb": 190,
            "steps": [
                {
                    "command": [
                        "rewrite /getProtocol/mkWorld/=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case X: (l == plab pr); first by move/eqP:X=>X; subst l; rewrite !findPt.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite /getProtocol/mkWorld/=.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "suff [X1 X2]: l \\notin dom (plab pr \\\\-> ProtocolWithIndInv ii) /\\ l \\notin dom (plab pr \\\\-> pr).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "by case: dom_find X1 X2=>//=->_; case: dom_find=>//=->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite !domPt !inE/=; suff: plab pr != l by [].",
                        "VernacExtend",
                        "0834e8fbfecd5435396b5e25711e57aa86c282e5"
                    ]
                },
                {
                    "command": [
                        "by apply/negbT; apply/negP=>/eqP Z; subst l; rewrite eqxx in X.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "with_inv_labE",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "by [].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "with_inv_rely'",
            "line_nb": 294,
            "steps": [
                {
                    "command": [
                        "case=>n; elim: n s1=>[|n Hi] s1; first by move=>[<-]/with_inv_coh=>C; exists 0.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case=>z'[s3][N]H/Hi; move/with_inv_step':H=>S; case=>n' R.",
                        "VernacExtend",
                        "3e49baeca602ac8e1e5623fd1f96b2badfde5292"
                    ]
                },
                {
                    "command": [
                        "by exists n'.+1, z', s3.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}