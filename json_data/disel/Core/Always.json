{
    "filename": "Core/Always.v",
    "coq_project": "disel",
    "vernac_cmds": [
        [
            "From mathcomp.ssreflect Require Import ssreflect ssrbool ssrnat eqtype ssrfun seq.",
            "VernacRequire",
            "037d2ffdc90053d89d1b918c36daaeab721d2d83"
        ],
        [
            "From mathcomp Require Import path.",
            "VernacRequire",
            "7c70f445c754a2a74114416d587d02e512c693e2"
        ],
        [
            "Require Import Eqdep.",
            "VernacRequire",
            "a499933d0898d4c0e235af789d9252f633426d20"
        ],
        [
            "Require Import Relation_Operators.",
            "VernacRequire",
            "5c09f52be79db9d019c350cc3153659920102fbb"
        ],
        [
            "From fcsl Require Import axioms pred prelude ordtype finmap pcm unionmap heap.",
            "VernacRequire",
            "576c96e5dbde92d8f1878b78d95e36aa980a0403"
        ],
        [
            "From DiSeL Require Import Freshness State EqTypeX DepMaps Protocols Worlds NetworkSem Rely.",
            "VernacRequire",
            "6c33e6a9f60f6493eef47870959de533dbb9d6c8"
        ],
        [
            "From DiSeL Require Import Actions Injection Process InductiveInv.",
            "VernacRequire",
            "312eeb0c7ec59899f182efe065b342906a68c72a"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Section Always.",
            "VernacBeginSection",
            "a0b5dc58d6d8b89ed31252599de7d5e41cd0f2a9"
        ],
        [
            "Variable this : nid.",
            "VernacAssumption",
            "242c7869c0bef3fe166243583278f6bbaa63bbf4"
        ],
        [
            "Variable W : world.",
            "VernacAssumption",
            "92d3732f8ee464718a9d77a50e1d3ac970c2e983"
        ],
        [
            "Notation coherent := (Coh W).",
            "VernacSyntacticDefinition",
            "1c23df7657813c12a5e38bb2a11852e83aab537e"
        ],
        [
            "Arguments proc [this W].",
            "VernacArguments",
            "fb04a87b305eac17d62fa9ff9c3f6456ec1402e4"
        ],
        [
            "Fixpoint always_sc A (s1 : state) p scs (P : state -> proc A -> Prop) : Prop := s1 \\In coherent /\\ if scs is sc :: scs' then forall s2, network_rely W this s1 s2 -> [/\\ safe p sc s2, P s2 p & forall s3 q, @pstep this W A s2 p sc s3 q -> always_sc s3 q scs' P] else forall s2, network_rely W this s1 s2 -> P s2 p.",
            "VernacFixpoint",
            "1f6ad205cfe9bcf0332936d16e6f105aab4e216a"
        ],
        [
            "Definition always A s (p : proc A) P := forall scs, always_sc s p scs P.",
            "VernacDefinition",
            "a6047783a63fb7c2d1205403275c628579c4a4fd"
        ],
        [
            "Lemma alw_coh' A s (p : proc A) scs P : always_sc s p scs P -> s \\In coherent.",
            "VernacStartTheoremProof",
            "498321ac4664253c402b68c5e85926a7a90ded33"
        ],
        [
            "by case: scs=>/=[|a l]; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_coh A s (p : proc A) P : always s p P -> s \\In coherent.",
            "VernacStartTheoremProof",
            "4051a9bc288a8d537ab228c53254f455a3cd8a28"
        ],
        [
            "by move/(_ [::]); move/alw_coh'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_safe' A s (p : proc A) sc scs P : always_sc s p (sc :: scs) P -> safe p sc s.",
            "VernacStartTheoremProof",
            "6186125d4498b18d602a456d03b960a14589ffb7"
        ],
        [
            "by case: scs=>[|a l][]C/(_ s (rely_refl this C))[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_safe A s (p : proc A) P : always s p P -> forall sc, safe p sc s.",
            "VernacStartTheoremProof",
            "cd37c6113b1f9dce1130bbca4cbcfafb7e38aa8a"
        ],
        [
            "by move=>H sc; apply: alw_safe' (H [:: sc]).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_refl' A s (p : proc A) sc P : always_sc s p sc P -> P s p.",
            "VernacStartTheoremProof",
            "9686870afb200f36dfd784a870f67d0c5b262732"
        ],
        [
            "by case: sc=>[|a l][C]/(_ s (rely_refl this C))//; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_refl A s (p : proc A) P : always s p P -> P s p.",
            "VernacStartTheoremProof",
            "b3158d72ec65c88d1445748970203f17426de28b"
        ],
        [
            "by move/(_ [::])/alw_refl'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_envs' A s1 (p : proc A) scs s2 P : always_sc s1 p scs P -> network_rely W this s1 s2 -> always_sc s2 p scs P.",
            "VernacStartTheoremProof",
            "a625c3d02fc6fa162052aeb5b11ed60876287f4b"
        ],
        [
            "by case: scs=>//[|a l][C]H R; move/rely_coh: (R)=>/=[]H1 H2; split=>//s3 R'; apply: H; apply: (rely_trans R).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_envs A s1 (p : proc A) s2 P : always s1 p P -> network_rely W this s1 s2 -> always s2 p P.",
            "VernacStartTheoremProof",
            "561d325914476dfdd394132d7832e7d4f6bd453e"
        ],
        [
            "by move=>S E scs; apply: alw_envs' (S scs) E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_step A s1 (p : proc A) sc s2 q P : always s1 p P -> pstep s1 p sc s2 q -> always s2 q P.",
            "VernacStartTheoremProof",
            "1a8cc0ce8fd4e189821084cf7dfc9b34e9348b43"
        ],
        [
            "move=>Ls Ts; move: (Ls [:: sc])=>/= [C].",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "case/(_ _ (rely_refl this C))=>_ _; move/(_ _ _ Ts)=>_.",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "move=>scs; move: (Ls (sc :: scs))=>/= [_].",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "by case/(_ _ (rely_refl this C))=>_ _; move/(_ _ _ Ts).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alwp_envsq A s1 (p1 : proc A) scs (P : _ -> _ -> Prop) : always_sc s1 p1 scs P -> always_sc s1 p1 scs (fun s2 p2 => forall s3, network_rely W this s2 s3 -> P s3 p2).",
            "VernacStartTheoremProof",
            "d5d48eadf830c5d50625adeeb25b08ede5d3cc8a"
        ],
        [
            "elim: scs s1 p1=>[|sc scs IH] /= s1 p1 [C H]; split=>// s2 M.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>s3 /(rely_trans M); apply: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split; first by case: (H _ M).",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>s3 /(rely_trans M) /H; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>s3 q T; apply: IH; case: (H _ M)=>_ _; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_envsq A s1 (p1 : proc A) (P : _ -> _ -> Prop) : always s1 p1 P -> always s1 p1 (fun s2 p2 => forall s3, network_rely W this s2 s3 -> P s3 p2).",
            "VernacStartTheoremProof",
            "02592a2dc798a617721980db369178562da6c79a"
        ],
        [
            "by move=>H scs; apply: alwp_envsq (H scs).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_unfin' A s1 scs (P : state -> proc A -> Prop) : s1 \\In coherent -> (forall s2, network_rely W this s1 s2 -> P s2 Unfinished) -> always_sc s1 Unfinished scs P.",
            "VernacStartTheoremProof",
            "ec677d86b7ebbed7611e82a2c7af9e16896db94e"
        ],
        [
            "case: scs=>[|sc scs] C H; split=>// s2 E.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "split=>[||s3 q/stepUnfin]//; first by case: sc=>//.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by apply: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_unfin A s1 (P : state -> proc A -> Prop) : s1 \\In coherent -> (forall s2, network_rely W this s1 s2 -> P s2 Unfinished) -> always s1 Unfinished P.",
            "VernacStartTheoremProof",
            "8c1a11af6919f689abbafdb70d6408d9a86230cc"
        ],
        [
            "by move=>C H scs; apply: alw_unfin'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_ret' A s1 (v : A) scs (P : state -> proc A -> Prop) : s1 \\In coherent -> (forall s2, network_rely W this s1 s2 -> P s2 (Ret v)) -> always_sc s1 (Ret v) scs P.",
            "VernacStartTheoremProof",
            "1333c9be3768e34d282974c8357804a67a179727"
        ],
        [
            "case: scs=>[|sc scs] C H; split=>// s2 E.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "split; last by [move=>s3 q; move/stepRet].",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case: sc.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by apply: H E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_ret A s1 (v : A) (P : state -> proc A -> Prop) : s1 \\In coherent -> (forall s2, network_rely W this s1 s2 -> P s2 (Ret v)) -> always s1 (Ret v) P.",
            "VernacStartTheoremProof",
            "91545502c6f5f2f6cfc8d3babcd528cdfada0ffb"
        ],
        [
            "by move=>C H ps; apply: alw_ret'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_act A s1 (a : action W A this) (P : state -> proc A -> Prop) : s1 \\In coherent -> (forall s2, network_rely W this s1 s2 -> exists S : a_safe a s2, P s2 (Act a) /\\ forall s3 v s4, a_step S s3 v -> network_rely W this s3 s4 -> P s4 (Ret v)) -> always s1 (Act a) P.",
            "VernacStartTheoremProof",
            "47fe61da54f2035d57c068aaf302391a551f212c"
        ],
        [
            "move=>C H [|sc scs]; split=>// s2; case/H=>// H1[H2]H3//.",
            "VernacExtend",
            "0141855bf989b515603527748435689146bc68ca"
        ],
        [
            "split=>//; first by case: sc.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=>s3 q /stepAct [v][pf][_ -> St].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "rewrite (pf_irr H1 pf) in H3.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "apply: alw_ret'; last by move=>s4; apply: H3 St.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case: (step_coh (a_step_sem St)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation alwsafe_sc s p scs := (always_sc s p scs (fun _ _ => True)).",
            "VernacSyntacticDefinition",
            "2bf91e58438ea41af8a2603966b64eae5072c393"
        ],
        [
            "Notation alwsafe s p := (always s p (fun _ _ => True)).",
            "VernacSyntacticDefinition",
            "a12c7c3700023f0a3e8aef936a3a629ae1c2a25a"
        ],
        [
            "Lemma alw_imp' A s (p : proc A) scs (P1 P2 : state -> proc A -> Prop) : (forall s p, s \\In coherent -> P1 s p -> P2 s p) -> always_sc s p scs P1 -> always_sc s p scs P2.",
            "VernacStartTheoremProof",
            "efbcebec505a7d47782487dda9f08dd1f8a9b59c"
        ],
        [
            "elim: scs s p=>[|sc scs IH] s p /= I; case=>C L; split=>// s2 E.",
            "VernacExtend",
            "4125fb7ee53fd79a00ac590003f6d80f09707bb5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: I (L _ E); case/rely_coh: E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/L: (E)=>S H T; split=>//; first by apply: I H; case/rely_coh: E.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>s3 q; move/T; apply: IH I.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_imp A s (p : proc A) (P1 P2 : state -> proc A -> Prop) : (forall s p, s \\In coherent -> P1 s p -> P2 s p) -> always s p P1 -> always s p P2.",
            "VernacStartTheoremProof",
            "ff3b83a5a59f2c746cd71934d92e49f413f0e6d5"
        ],
        [
            "by move=>I H ps; apply: alw_imp' I _.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alwA' A B s (p : proc A) scs (P : B -> state -> proc A -> Prop) : alwsafe_sc s p scs -> (always_sc s p scs (fun s' p' => forall x, P x s' p') <-> forall x, always_sc s p scs (fun s' p' => P x s' p')).",
            "VernacStartTheoremProof",
            "0dc7b435381fff71a6060d690522e8b67fc2aeec"
        ],
        [
            "move=>Ls; split=>[{Ls}|].",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "elim: scs s p=>[|sc scs IH] s p /= [C Et x]; split=>// s2; move/Et=>//.",
            "VernacExtend",
            "aa8441d361ad88468a5fcbec18ac0346e88afec4"
        ],
        [
            "by case=>S Ha L; split=>// s3 q; move/L/IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: scs s p Ls=>[|sc scs IH] s p /= [C Et Ha]; split=>// s2 E.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>x; case: (Ha x)=>_; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case/Et: (E)=>/= S _ L; split=>//.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>x; case: (Ha x)=>_; case/(_ _ E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>s3 q T; apply: IH; first by apply: L T.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>x; case: (Ha x)=>_; case/(_ _ E)=>_ _; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alwA A B s (p : proc A) (P : B -> state -> proc A -> Prop) : alwsafe s p -> (always s p (fun s' p' => forall x, P x s' p') <-> forall x, always s p (fun s' p' => P x s' p')).",
            "VernacStartTheoremProof",
            "a3255aab534626326a197b003b4c79f10672e771"
        ],
        [
            "move=>Ls; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>H x ps; move: x; apply/(alwA' _ (Ls ps)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>H ps; apply/(alwA' _ (Ls ps))=>x; apply: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments alwA [A B s p P].",
            "VernacArguments",
            "9ecb4879de4bb2597ef38b2a604c31c7dfc985de"
        ],
        [
            "Lemma alwI' A s (p : proc A) scs (P : Prop) (Q : state -> proc A -> Prop) : alwsafe s p -> (always_sc s p scs (fun s' p' => P -> Q s' p') <-> (P -> always_sc s p scs (fun s' p' => Q s' p'))).",
            "VernacStartTheoremProof",
            "3fa0e86337e05e469089d4429ddb52d1a4991e63"
        ],
        [
            "move=>Ls; split.",
            "VernacExtend",
            "22de1c5faad21de60fd48f882c8175e01347018a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "elim: scs s p Ls=>[|sc scs IH] s p Ls /= [C Et H]; split=>// s2.",
            "VernacExtend",
            "5c0d3b68844697b312245da3ed2c1b277720f6af"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/Et; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>M; move: (alw_envs Ls M)=>{Ls} Ls.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "case/Et: M=>H1 /(_ H) H2 H3; split=>// s3 q T.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "by apply: IH H; [apply: alw_step T | apply: H3].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "elim: scs s p Ls=>[|sc scs IH] s p /= Ls H; move: (alw_coh Ls)=>C; split=>// s2 M; first by case/H=>_; apply.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move: (alw_envs Ls M)=>{Ls} Ls.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "split; first by move/alw_safe: Ls.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by case/H=>_; case/(_ _ M).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>s3 q T; move: (alw_step Ls T)=>{Ls} Ls.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "by apply: IH Ls _; case/H=>_; case/(_ _ M)=>_ _; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alwI A s (p : proc A) (P : Prop) (Q : state -> proc A -> Prop) : alwsafe s p -> always s p (fun s' p' => P -> Q s' p') <-> (P -> always s p (fun s' p' => Q s' p')).",
            "VernacStartTheoremProof",
            "f336f8ba5d81f5243d26106f50f114e5fcf31da0"
        ],
        [
            "move=>Ls; split; first by move=>H Hp scs; apply/alwI': Hp.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>H scs; apply/alwI'=>//; move/H; move/(_ scs).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments alwI [A s p P Q].",
            "VernacArguments",
            "709e944db0b2fa8713c96ce2c8270bbcfbbcb262"
        ],
        [
            "Lemma alw_bnd A B (p1 : proc A) (p12 : proc B) pp2 s1 (P : state -> B -> Prop) : p12 \\In pcat p1 pp2 -> always s1 p1 (fun s2 p2 => forall p v, p2 = Ret v -> p \\In pp2 v -> always s2 p (fun s q => forall v, q = Ret v -> P s v)) -> always s1 p12 (fun s p => forall v, p = Ret v -> P s v).",
            "VernacStartTheoremProof",
            "cea131cc01de8651b8647a58f4b3e2785adf522c"
        ],
        [
            "move=>Tc Ls scs.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: scs s1 p1 p12 Tc Ls=>[|sc scs IH] s1 p1 p12 Tc Ls /=.",
            "VernacExtend",
            "e686a1895f1799b840b76242f931100819a9ad6c"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by split=>[|s2]; [apply: alw_coh Ls | case: Tc=>k [->]].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split=>[|s2 E]; first by apply: alw_coh Ls.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: Tc IH=>k [->{p12}] H IH.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "split=>//; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>s3 q T; case/stepSeq: T Ls.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case=>v [_ ->->-> C]; move/alw_refl/(_ _ _ (erefl _)).",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "by move/(_ _ (H v))/alw_envs; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>sc' [p'][_ ->{q}] T; move/alw_envs/(_ E)/alw_step.",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "by move/(_ _ _ _ T)/IH; apply; exists k.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/(alw_envs Ls): E=>{Ls} Ls.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "have Ls': always s2 p1 (fun s2 p2 => forall sc p v, p2 = Ret v -> p \\In pp2 v -> safe p sc s2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: alw_imp Ls=>s p _ I sc' q v E; move/(I _ _ E)/alw_safe.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case: sc=>//=; first by case: p1 {Ls} Ls'.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=>sc; case: (Ls [:: sc])=>C.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by move/(_ _ (rely_refl this C)); case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alwsafe_bnd A B (p1 : proc A) (p12 : proc B) s1 pp2 : p12 \\In pcat p1 pp2 -> always s1 p1 (fun s2 p2 => forall p v, p2 = Ret v -> p \\In pp2 v -> alwsafe s2 p) -> alwsafe s1 p12.",
            "VernacStartTheoremProof",
            "29289391ad65954eca4285670356d36ffe7fbc06"
        ],
        [
            "move=>T Ls.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "suff H: always s1 p12 (fun s p => forall v, p = Ret v -> True).",
            "VernacExtend",
            "d07fc8b2103f140554938023774bf3f75d04ba99"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by apply: alw_imp H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "apply: alw_bnd T _; apply: alw_imp Ls=>s p _ I q v H.",
            "VernacExtend",
            "8d9dae45eeb3a769b8a865cef8ae476451f63802"
        ],
        [
            "by move/(I _ _ H); apply: alw_imp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition after A s (p : proc A) (P : A -> state -> Prop) := always s p (fun s2 p2 => forall v, p2 = Ret v -> P v s2).",
            "VernacDefinition",
            "747d4bba8ba3ff150036257cd680de301cdcacbb"
        ],
        [
            "Lemma aft_bnd A B (p1 : proc A) (p12 : proc B) pp2 s1 P : p12 \\In pcat p1 pp2 -> after s1 p1 (fun v s => forall p, p \\In pp2 v -> after s p P) -> after s1 p12 P.",
            "VernacStartTheoremProof",
            "26765064b39c8f6b3a92bac9cd9b32ca65bfc4d6"
        ],
        [
            "move=>T H; apply: alw_bnd T _.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "by apply: alw_imp H=>s p _ I q v E; move/(I v E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aftI A s (p : proc A) (P : Prop) (Q : A -> state -> Prop) : alwsafe s p -> after s p (fun v s' => P -> Q v s') <-> (P -> after s p (fun v s' => Q v s')).",
            "VernacStartTheoremProof",
            "b9b1cfc33aee1e5f21734d19567a08fddb127152"
        ],
        [
            "move=>Ls; rewrite -(alwI Ls).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "split; apply: alw_imp=>t q _ I.",
            "VernacExtend",
            "f993428d86d9a7372d95a8c02153f5406f270fb8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>Hp v; move/I; apply.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>v; move/I.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aft_alwsf A s (p : proc A) : alwsafe s p <-> after s p (fun v s => True).",
            "VernacStartTheoremProof",
            "742dce4a60777faa0c21fdc7476a28897f4a001c"
        ],
        [
            "by split; apply: alw_imp.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aft_imp A s (p : proc A) (P1 P2 : A -> state -> Prop) : (forall v s, s \\In coherent -> P1 v s -> P2 v s) -> after s p P1 -> after s p P2.",
            "VernacStartTheoremProof",
            "55464a956142c841611dde500d97cc25224167ea"
        ],
        [
            "by move=>I; apply: alw_imp=>s1 p1 C H v; move/H; apply: I.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aftA A B s (p : proc A) (P : B -> A -> state -> Prop) : alwsafe s p -> (after s p (fun v s' => forall x, P x v s') <-> forall x, after s p (fun v s' => P x v s')).",
            "VernacStartTheoremProof",
            "b9dfe668650de3d235fa6953445eaf7d86a71faa"
        ],
        [
            "move=>Ls; rewrite -(alwA Ls).",
            "VernacExtend",
            "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
        ],
        [
            "split; apply: alw_imp=>t q _ I.",
            "VernacExtend",
            "f993428d86d9a7372d95a8c02153f5406f270fb8"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>x v; move/I.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>v; move/I.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Arguments aftA [A B s p P].",
            "VernacArguments",
            "718cb757c9e936575460394018b7516d46653f2c"
        ],
        [
            "Arguments aftI [A s p P Q].",
            "VernacArguments",
            "8e37a6f5940fa507b60c101f0aa20ae94d8c8140"
        ],
        [
            "End Always.",
            "VernacEndSegment",
            "2674461fe71fe6ecf19d5e3f0c45eb14d24c4aa4"
        ],
        [
            "Section AlwaysInject.",
            "VernacBeginSection",
            "c0e8cd4bdc1dbdf55ca474620bbb1eac157187f3"
        ],
        [
            "Variables (V W : world) (K : hooks) (A : Type) (w : injects V W K) (this: nid).",
            "VernacAssumption",
            "15894edc00a7a57180a66955773399fe6994b6dc"
        ],
        [
            "Notation W2 := (inj_ext w).",
            "VernacSyntacticDefinition",
            "c7a8c3ce43aa605c3f289f38ff7c82776c55ae74"
        ],
        [
            "Lemma rely_ext i j s : i \\In Coh V -> network_rely W this (i \\+ j) s -> exists i' j', s = i' \\+ j' /\\ i' \\In Coh V.",
            "VernacStartTheoremProof",
            "4209fa7218965a1918e7c939aaf7a9e2c8f355ed"
        ],
        [
            "move=>C M; case: (rely_coh M)=>_; rewrite (cohE w).",
            "VernacExtend",
            "9c3f4e82a1696e467f5acd1f5c747a8b7b11bee4"
        ],
        [
            "by case=>[s1][s2][->] Cs1 _; exists s1, s2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rely_split' z s1 s1' s2 s2' : s1 \\In Coh V -> s2 \\In Coh V -> network_step W z (s1 \\+ s1') (s2 \\+ s2') -> network_step V z s1 s2 /\\ network_step (inj_ext w) z s1' s2'.",
            "VernacStartTheoremProof",
            "4a212b8e068960f9494351887a45e835cd74d943"
        ],
        [
            "move=>C1 C2 N.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (sem_split w C1 C2 N); case=>R E; [subst s2'|subst s2]; split=>//; apply: Idle; split=>//.",
            "VernacExtend",
            "3942be36f0e66e13dca79add6810534470637e69"
        ],
        [
            "case: (step_coh N)=>C _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case/(cohE w): (C)=>s3[s4][E]C' C''.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (coh_prec (cohS C) C1 C' E)=>Z; subst s3.",
            "VernacExtend",
            "53ce5db94a732172fd5b939fddfd28efd86cf8af"
        ],
        [
            "by rewrite (joinxK (cohS C) E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rely_split s1 s1' s2 s2' : s1 \\In Coh V -> s2 \\In Coh V -> network_rely W this (s1 \\+ s1') (s2 \\+ s2') -> network_rely V this s1 s2 /\\ network_rely (inj_ext w) this s1' s2'.",
            "VernacStartTheoremProof",
            "74824fb0a2fcc34e0eb8af8b99c54ff789d22c9a"
        ],
        [
            "move=>C1 C2 [n E].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "elim: n s1 s1' E C1 C2=>[|n IH] /= s1 s1'; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move=>[z][s3][N]H1 H2 C1 C2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (step_coh H1)=>D1 D2; move/(cohE w): D2=>[s4][s5][Z]C3 C4.",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "subst s3; case: (IH s4 s5 H2 C3 C2)=>G1 G2.",
            "VernacExtend",
            "1be4aa395d3177e80f4e1090a7296ddf2ce4ddec"
        ],
        [
            "case: (rely_split' C1 _ H1)=>//H3 H4; split=>//.",
            "VernacExtend",
            "ba44c9d0281a02110ce54645304e6d990debd9c0"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "by case: G1=>m R; exists m.+1, z, s4.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by case: G2=>m R; exists m.+1, z, s5.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=> [E1 E2] C1 C2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: (coh_prec (cohS E2) C1 C2 E1)=>Z; subst s2.",
            "VernacExtend",
            "87cbbf7fb3f94f52b29d627f425bb70ea94ec73c"
        ],
        [
            "rewrite (joinxK (cohS E2) E1); split; exists 0=>//.",
            "VernacExtend",
            "c06111fec43384e68a3d6c78dc069429a46fa8c4"
        ],
        [
            "split=>//; rewrite -(joinxK (cohS E2) E1)=>{E1 s2' C2}.",
            "VernacExtend",
            "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
        ],
        [
            "move/(cohE w): (E2)=>[t1][t2][E]C' C''.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "move: ((coh_prec (cohS E2)) C1 C' E)=>Z; subst t1.",
            "VernacExtend",
            "f4b8583c7759af4d09d0d6ba1bfb80164ab919a1"
        ],
        [
            "by rewrite (joinxK (cohS E2) E).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma alw_inject (p : proc this V A) (P : state -> proc this V A -> Prop) i j : i \\+ j \\In Coh W -> always i p P -> always (i \\+ j) (Inject w p) (fun m q => exists i' j', [/\\ m = i' \\+ j', i' \\In Coh V, network_rely W2 this j j' & (exists q', q = Inject w q' /\\ P i' q') \\/ (exists v', q = Ret v' /\\ P i' (Ret v'))]).",
            "VernacStartTheoremProof",
            "44adb0f700422ad0f6d1b13ee961c50af69f7c51"
        ],
        [
            "move=>C Ls scs; elim: scs i j p C Ls=>[|sc scs IH] i j p C Ls /=; split=>// {C} s M; move: (alw_coh Ls) (proj2 (rely_coh M))=>Ci C; case/(rely_ext Ci): M C (M)=>i1 [j1][->{s}] Ci1 C; case/(rely_split Ci Ci1)=> /(alw_envs Ls) {Ls} Ls S1.",
            "VernacExtend",
            "88a48da9558bf5e9605fcc47bb65d009238190bb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by exists i1, j1; split=>//; left; exists p; move/alw_refl: Ls.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: sc=>//; last by case: p Ls=>// v; exists i1, j1.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>sc; move: (alw_safe Ls sc)=>Sf; exists i1; split=>//; exists j1.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by exists i1, j1; split=>//; left; exists p; move/alw_refl: Ls.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>s q; rewrite stepInject => H.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "case: H Ls.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case=>_ [v][_ ->->->{p q s} _] Ls; apply: alw_ret'=>// s M.",
            "VernacExtend",
            "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
        ],
        [
            "case/(rely_ext Ci1): M (M)=>i2 [j2][->{s}] Ci2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case/(rely_split Ci1 Ci2)=> /(alw_envs Ls) {Ls} Ls S2.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "exists i2, j2; split=>//; first by apply: rely_trans S1 S2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by right; exists v; move/alw_refl: Ls.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>sc' [q'][x1][i2][y1][_ -> E -> {sc q s}] _ T Ls.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "have [E1 E2] : x1 = i1 /\\ y1 = j1.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: T=>Cx1 _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: (coh_prec (cohS C) Ci1 Cx1 E) (E)=><-{E Cx1 x1}.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by move/(joinxK (cohS C)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite {E x1}E1 {y1}E2 in T *.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "have C' : i2 \\+ j1 \\In Coh W.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "move: (C)=>C'; rewrite (cohE w) in C *=>[[s1]][s2][E]D1 D2.",
            "VernacExtend",
            "8261237f0cda1915a4077c28869831c5329103ce"
        ],
        [
            "move: (coh_prec (cohS C') Ci1 D1 E)=>Z; subst i1.",
            "VernacExtend",
            "c4ff04708cf2446abfa564248680c1384d115797"
        ],
        [
            "move: (joinxK (cohS C') E)=>Z; subst s2; clear E.",
            "VernacExtend",
            "ae224168a0dfd80858c221d5496fe57fdd9296e9"
        ],
        [
            "apply/(cohE w); exists i2, j1; split=>//.",
            "VernacExtend",
            "afeeabfe8bc5112ba7bc3fe8aac7c53b55aa05ec"
        ],
        [
            "by case/step_coh: (pstep_network_sem T).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/(alw_step Ls): T=>{Ls} Ls.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "apply: alw_imp' (IH _ _ _ C' Ls)=>{IH Ls C' C Ci Ci1 i i1 i2 p q' sc' scs}.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "move=>s p _ [i2][j2][->{s}] Ci2 S2 H; exists i2, j2; split=>//.",
            "VernacExtend",
            "3bf9a647c83ec4af6494388de6ab834b21cb8bd7"
        ],
        [
            "by apply: rely_trans S1 S2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aft_inject (p : proc this V A) (P : A -> state -> Prop) i j : i \\+ j \\In Coh W -> after i p P -> after (i \\+ j) (Inject w p) (fun v m => exists i' j', [/\\ m = i' \\+ j', i' \\In Coh V, network_rely W2 this j j' & P v i']).",
            "VernacStartTheoremProof",
            "af2c946e5e887cf82f528d11fc3002b33b900710"
        ],
        [
            "move=>C /(alw_inject C); apply: alw_imp=>{p i C} s q _.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "case=>i1 [j1][->{s} Ci1 S1] H v E.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "move: E H=>-> [[q'][//]|[_][[<-]] H].",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by exists i1, j1; split=>//; apply: H.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End AlwaysInject.",
            "VernacEndSegment",
            "73a071cb1a8ca653df709945785523be7d6e9c0c"
        ],
        [
            "Notation alwsafe_sc s p scs := (always_sc s p scs (fun _ _ => True)).",
            "VernacSyntacticDefinition",
            "2bf91e58438ea41af8a2603966b64eae5072c393"
        ],
        [
            "Notation alwsafe s p := (always s p (fun _ _ => True)).",
            "VernacSyntacticDefinition",
            "a12c7c3700023f0a3e8aef936a3a629ae1c2a25a"
        ],
        [
            "Module AlwaysInductiveInv.",
            "VernacDefineModule",
            "211286bdab78702e68c128102a44629577fea4d5"
        ],
        [
            "Section AlwaysInductiveInv.",
            "VernacBeginSection",
            "86900ba444e7afc356c16df4fea31cf6dc0ba4e0"
        ],
        [
            "Import InductiveInv.",
            "VernacImport",
            "57471e89735e161d0e03e9b20f3ca96984f3c714"
        ],
        [
            "Variable pr : protocol.",
            "VernacAssumption",
            "d6790772eb3e4aa6e3d921860f3249ca87b4f0f4"
        ],
        [
            "Notation l := (plab pr).",
            "VernacSyntacticDefinition",
            "70cefb7a5b2500da653faa3042413b33e5c3a49e"
        ],
        [
            "Notation coh := (coh pr).",
            "VernacSyntacticDefinition",
            "eca1a74842a12fe116afffaf48c14e07fbfbba87"
        ],
        [
            "Variable I : dstatelet -> pred nid -> Prop.",
            "VernacAssumption",
            "d24dd684b16718059d65754269e40f62bc07f5e4"
        ],
        [
            "Variable ii : InductiveInv pr I.",
            "VernacAssumption",
            "9e0a00beb44958f6d361567e90d4971ed69b712d"
        ],
        [
            "Variables (A : Type) (this: nid).",
            "VernacAssumption",
            "bfb9a170673c785934c00855e41e8f7ae638fe42"
        ],
        [
            "Notation V := (mkWorld pr).",
            "VernacSyntacticDefinition",
            "7ad8b8c12324745ceecc43fd86d0a3078dcdb3b5"
        ],
        [
            "Notation W := (mkWorld (ProtocolWithIndInv ii)).",
            "VernacSyntacticDefinition",
            "423010b81a46b9c209c8faa3c7ee9cc2646ccfd4"
        ],
        [
            "Lemma alw_ind_inv (p : proc this V A) (P : state -> proc this V A -> Prop) i : i \\In Coh W -> always i p P -> always i (WithInv pr I ii (erefl _) p) (fun m q => m \\In Coh W /\\ ((exists q', q = WithInv pr I ii (erefl _) q' /\\ P m q') \\/ (exists v', q = Ret v' /\\ P m (Ret v')))).",
            "VernacStartTheoremProof",
            "98291daabbef05909713942fc0913c1a429a69e9"
        ],
        [
            "move=>C Ls scs; elim: scs i p C Ls=>[|sc scs IH] i p C Ls /=; split=>//{C}s M; move: (alw_coh Ls) (proj2 (rely_coh M))=>Ci C.",
            "VernacExtend",
            "3af1372ac02f787eb58c74235211a6d06a56fb8d"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split; first by case:(rely_coh M)=>_/with_inv_coh.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "left; exists p; split=>//; apply: alw_refl.",
            "VernacExtend",
            "545b4d75f5480dbe3534ad8b33ac83bd13930baf"
        ],
        [
            "by move/with_inv_rely': M; apply: (alw_envs).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: sc=>//; last by case: p Ls=>//.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=>sc; move: (alw_safe Ls sc)=>Sf.",
            "VernacExtend",
            "8b784377bdc4d565ff66d4cf36a6041e9354c156"
        ],
        [
            "by move/with_inv_rely': M; move/(alw_envs Ls)=>H; apply: (alw_safe H).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "split=>//; left; exists p; split=>//.",
            "VernacExtend",
            "46d2d0d04c85304b1b3b3091465a5d7d9d2d90b4"
        ],
        [
            "by move/with_inv_rely': M; move/(alw_envs Ls)=>H; apply: alw_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move=>s' q/stepWithInv=>H; case: H Ls.",
            "VernacExtend",
            "4a95f82aca0fc9a50f43053eca44fc9141212abe"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case=>[v][Z1]Z2 Z3 Z4 _ _ Ls; subst s' p q sc.",
            "VernacExtend",
            "aee7da8c7ce6e3fb7aea58efbb7590448df07f17"
        ],
        [
            "apply: alw_ret'=>//=s' M'.",
            "VernacExtend",
            "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
        ],
        [
            "split; first by case/rely_coh: M'.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "right; exists v; split=>//.",
            "VernacExtend",
            "7eb0181aaab4110068b3a416145e53a1b04d1674"
        ],
        [
            "by move: (rely_trans M M')=>/with_inv_rely'/(alw_envs Ls)/alw_refl.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "case=>sc'[q'][Z1]Z2 _ _ T Ls; subst q sc.",
            "VernacExtend",
            "69ee8fac0dc286b425b31f427765e443eb578b30"
        ],
        [
            "have X: s' \\In Coh W by apply: (pstep_inv (proj2 (rely_coh M)) T).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "move/with_inv_rely': (M)=>/(alw_envs Ls)=>Ls'.",
            "VernacExtend",
            "3c42b53d0efc26db114b00541ac5e7fcb29e6aeb"
        ],
        [
            "move/(alw_step Ls'): T=>{Ls'} Ls'.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by apply: IH.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma aft_ind_inv (p : proc this V A) (P : A -> state -> Prop) i : i \\In Coh W -> after i p P -> after i (WithInv pr I ii (erefl _) p) (fun v m => m \\In Coh W /\\ P v m).",
            "VernacStartTheoremProof",
            "f9bf664b14647bce672fc540a72ae2bc5f513c00"
        ],
        [
            "move=>C /(alw_ind_inv C); apply: alw_imp=>{p i C} s q _.",
            "VernacExtend",
            "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
        ],
        [
            "case=>C H; split=>//; subst q.",
            "VernacExtend",
            "596f7f4ed3d91088347c27116996eacca18d00e5"
        ],
        [
            "case:H; first by move=>[?]; case.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by case=>v'[][]<-{v'}/(_ v (erefl _)).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End AlwaysInductiveInv.",
            "VernacEndSegment",
            "17d74754d99de1c5ec1a456569aeb82617e02ef0"
        ],
        [
            "End AlwaysInductiveInv.",
            "VernacEndSegment",
            "17d74754d99de1c5ec1a456569aeb82617e02ef0"
        ],
        [
            "Export AlwaysInductiveInv.",
            "VernacImport",
            "a821bc6bb479a0fd078b2211018ee3e19b987cbc"
        ]
    ],
    "proofs": [
        {
            "name": "alw_coh'",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "by case: scs=>/=[|a l]; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_coh",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "by move/(_ [::]); move/alw_coh'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_safe'",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "by case: scs=>[|a l][]C/(_ s (rely_refl this C))[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_safe",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "by move=>H sc; apply: alw_safe' (H [:: sc]).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_refl'",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "by case: sc=>[|a l][C]/(_ s (rely_refl this C))//; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_refl",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "by move/(_ [::])/alw_refl'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_envs'",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "by case: scs=>//[|a l][C]H R; move/rely_coh: (R)=>/=[]H1 H2; split=>//s3 R'; apply: H; apply: (rely_trans R).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_envs",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "by move=>S E scs; apply: alw_envs' (S scs) E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_step",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "move=>Ls Ts; move: (Ls [:: sc])=>/= [C].",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "case/(_ _ (rely_refl this C))=>_ _; move/(_ _ _ Ts)=>_.",
                        "VernacExtend",
                        "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
                    ]
                },
                {
                    "command": [
                        "move=>scs; move: (Ls (sc :: scs))=>/= [_].",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "by case/(_ _ (rely_refl this C))=>_ _; move/(_ _ _ Ts).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alwp_envsq",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "elim: scs s1 p1=>[|sc scs IH] /= s1 p1 [C H]; split=>// s2 M.",
                        "VernacExtend",
                        "5c0d3b68844697b312245da3ed2c1b277720f6af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>s3 /(rely_trans M); apply: H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split; first by case: (H _ M).",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>s3 /(rely_trans M) /H; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>s3 q T; apply: IH; case: (H _ M)=>_ _; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_envsq",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "by move=>H scs; apply: alwp_envsq (H scs).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_unfin'",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "case: scs=>[|sc scs] C H; split=>// s2 E.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "split=>[||s3 q/stepUnfin]//; first by case: sc=>//.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by apply: H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_unfin",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "by move=>C H scs; apply: alw_unfin'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_ret'",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "case: scs=>[|sc scs] C H; split=>// s2 E.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "split; last by [move=>s3 q; move/stepRet].",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case: sc.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by apply: H E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_ret",
            "line_nb": 74,
            "steps": [
                {
                    "command": [
                        "by move=>C H ps; apply: alw_ret'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_imp'",
            "line_nb": 87,
            "steps": [
                {
                    "command": [
                        "elim: scs s p=>[|sc scs IH] s p /= I; case=>C L; split=>// s2 E.",
                        "VernacExtend",
                        "4125fb7ee53fd79a00ac590003f6d80f09707bb5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: I (L _ E); case/rely_coh: E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/L: (E)=>S H T; split=>//; first by apply: I H; case/rely_coh: E.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=>s3 q; move/T; apply: IH I.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_imp",
            "line_nb": 94,
            "steps": [
                {
                    "command": [
                        "by move=>I H ps; apply: alw_imp' I _.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alwA'",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "move=>Ls; split=>[{Ls}|].",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "elim: scs s p=>[|sc scs IH] s p /= [C Et x]; split=>// s2; move/Et=>//.",
                        "VernacExtend",
                        "aa8441d361ad88468a5fcbec18ac0346e88afec4"
                    ]
                },
                {
                    "command": [
                        "by case=>S Ha L; split=>// s3 q; move/L/IH.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: scs s p Ls=>[|sc scs IH] s p /= [C Et Ha]; split=>// s2 E.",
                        "VernacExtend",
                        "5c0d3b68844697b312245da3ed2c1b277720f6af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>x; case: (Ha x)=>_; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case/Et: (E)=>/= S _ L; split=>//.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>x; case: (Ha x)=>_; case/(_ _ E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>s3 q T; apply: IH; first by apply: L T.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=>x; case: (Ha x)=>_; case/(_ _ E)=>_ _; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alwA",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "move=>Ls; split.",
                        "VernacExtend",
                        "22de1c5faad21de60fd48f882c8175e01347018a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>H x ps; move: x; apply/(alwA' _ (Ls ps)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>H ps; apply/(alwA' _ (Ls ps))=>x; apply: H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alwI'",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "move=>Ls; split.",
                        "VernacExtend",
                        "22de1c5faad21de60fd48f882c8175e01347018a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "elim: scs s p Ls=>[|sc scs IH] s p Ls /= [C Et H]; split=>// s2.",
                        "VernacExtend",
                        "5c0d3b68844697b312245da3ed2c1b277720f6af"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move/Et; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>M; move: (alw_envs Ls M)=>{Ls} Ls.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "case/Et: M=>H1 /(_ H) H2 H3; split=>// s3 q T.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "by apply: IH H; [apply: alw_step T | apply: H3].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "elim: scs s p Ls=>[|sc scs IH] s p /= Ls H; move: (alw_coh Ls)=>C; split=>// s2 M; first by case/H=>_; apply.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move: (alw_envs Ls M)=>{Ls} Ls.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "split; first by move/alw_safe: Ls.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by case/H=>_; case/(_ _ M).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>s3 q T; move: (alw_step Ls T)=>{Ls} Ls.",
                        "VernacExtend",
                        "8b784377bdc4d565ff66d4cf36a6041e9354c156"
                    ]
                },
                {
                    "command": [
                        "by apply: IH Ls _; case/H=>_; case/(_ _ M)=>_ _; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alwI",
            "line_nb": 135,
            "steps": [
                {
                    "command": [
                        "move=>Ls; split; first by move=>H Hp scs; apply/alwI': Hp.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=>H scs; apply/alwI'=>//; move/H; move/(_ scs).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_bnd",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "move=>Tc Ls scs.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "elim: scs s1 p1 p12 Tc Ls=>[|sc scs IH] s1 p1 p12 Tc Ls /=.",
                        "VernacExtend",
                        "e686a1895f1799b840b76242f931100819a9ad6c"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by split=>[|s2]; [apply: alw_coh Ls | case: Tc=>k [->]].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split=>[|s2 E]; first by apply: alw_coh Ls.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: Tc IH=>k [->{p12}] H IH.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "split=>//; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>s3 q T; case/stepSeq: T Ls.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case=>v [_ ->->-> C]; move/alw_refl/(_ _ _ (erefl _)).",
                        "VernacExtend",
                        "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
                    ]
                },
                {
                    "command": [
                        "by move/(_ _ (H v))/alw_envs; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case=>sc' [p'][_ ->{q}] T; move/alw_envs/(_ E)/alw_step.",
                        "VernacExtend",
                        "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
                    ]
                },
                {
                    "command": [
                        "by move/(_ _ _ _ T)/IH; apply; exists k.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/(alw_envs Ls): E=>{Ls} Ls.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "have Ls': always s2 p1 (fun s2 p2 => forall sc p v, p2 = Ret v -> p \\In pp2 v -> safe p sc s2).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: alw_imp Ls=>s p _ I sc' q v E; move/(I _ _ E)/alw_safe.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case: sc=>//=; first by case: p1 {Ls} Ls'.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move=>sc; case: (Ls [:: sc])=>C.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by move/(_ _ (rely_refl this C)); case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alwsafe_bnd",
            "line_nb": 163,
            "steps": [
                {
                    "command": [
                        "move=>T Ls.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "suff H: always s1 p12 (fun s p => forall v, p = Ret v -> True).",
                        "VernacExtend",
                        "d07fc8b2103f140554938023774bf3f75d04ba99"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by apply: alw_imp H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "apply: alw_bnd T _; apply: alw_imp Ls=>s p _ I q v H.",
                        "VernacExtend",
                        "8d9dae45eeb3a769b8a865cef8ae476451f63802"
                    ]
                },
                {
                    "command": [
                        "by move/(I _ _ H); apply: alw_imp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aft_bnd",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "move=>T H; apply: alw_bnd T _.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "by apply: alw_imp H=>s p _ I q v E; move/(I v E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aftI",
            "line_nb": 176,
            "steps": [
                {
                    "command": [
                        "move=>Ls; rewrite -(alwI Ls).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "split; apply: alw_imp=>t q _ I.",
                        "VernacExtend",
                        "f993428d86d9a7372d95a8c02153f5406f270fb8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>Hp v; move/I; apply.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>v; move/I.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aft_alwsf",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "by split; apply: alw_imp.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aft_imp",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "by move=>I; apply: alw_imp=>s1 p1 C H v; move/H; apply: I.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aftA",
            "line_nb": 189,
            "steps": [
                {
                    "command": [
                        "move=>Ls; rewrite -(alwA Ls).",
                        "VernacExtend",
                        "057edeb0967475c7ea5e8c98c449ddc5613eddc1"
                    ]
                },
                {
                    "command": [
                        "split; apply: alw_imp=>t q _ I.",
                        "VernacExtend",
                        "f993428d86d9a7372d95a8c02153f5406f270fb8"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>x v; move/I.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>v; move/I.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rely_ext",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "move=>C M; case: (rely_coh M)=>_; rewrite (cohE w).",
                        "VernacExtend",
                        "9c3f4e82a1696e467f5acd1f5c747a8b7b11bee4"
                    ]
                },
                {
                    "command": [
                        "by case=>[s1][s2][->] Cs1 _; exists s1, s2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rely_split'",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "move=>C1 C2 N.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (sem_split w C1 C2 N); case=>R E; [subst s2'|subst s2]; split=>//; apply: Idle; split=>//.",
                        "VernacExtend",
                        "3942be36f0e66e13dca79add6810534470637e69"
                    ]
                },
                {
                    "command": [
                        "case: (step_coh N)=>C _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case/(cohE w): (C)=>s3[s4][E]C' C''.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (coh_prec (cohS C) C1 C' E)=>Z; subst s3.",
                        "VernacExtend",
                        "53ce5db94a732172fd5b939fddfd28efd86cf8af"
                    ]
                },
                {
                    "command": [
                        "by rewrite (joinxK (cohS C) E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rely_split",
            "line_nb": 214,
            "steps": [
                {
                    "command": [
                        "move=>C1 C2 [n E].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "elim: n s1 s1' E C1 C2=>[|n IH] /= s1 s1'; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move=>[z][s3][N]H1 H2 C1 C2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (step_coh H1)=>D1 D2; move/(cohE w): D2=>[s4][s5][Z]C3 C4.",
                        "VernacExtend",
                        "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
                    ]
                },
                {
                    "command": [
                        "subst s3; case: (IH s4 s5 H2 C3 C2)=>G1 G2.",
                        "VernacExtend",
                        "1be4aa395d3177e80f4e1090a7296ddf2ce4ddec"
                    ]
                },
                {
                    "command": [
                        "case: (rely_split' C1 _ H1)=>//H3 H4; split=>//.",
                        "VernacExtend",
                        "ba44c9d0281a02110ce54645304e6d990debd9c0"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "by case: G1=>m R; exists m.+1, z, s4.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by case: G2=>m R; exists m.+1, z, s5.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=> [E1 E2] C1 C2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: (coh_prec (cohS E2) C1 C2 E1)=>Z; subst s2.",
                        "VernacExtend",
                        "87cbbf7fb3f94f52b29d627f425bb70ea94ec73c"
                    ]
                },
                {
                    "command": [
                        "rewrite (joinxK (cohS E2) E1); split; exists 0=>//.",
                        "VernacExtend",
                        "c06111fec43384e68a3d6c78dc069429a46fa8c4"
                    ]
                },
                {
                    "command": [
                        "split=>//; rewrite -(joinxK (cohS E2) E1)=>{E1 s2' C2}.",
                        "VernacExtend",
                        "fbaa61af20867a5dfb8bb5213ca8048b258f8f3a"
                    ]
                },
                {
                    "command": [
                        "move/(cohE w): (E2)=>[t1][t2][E]C' C''.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "move: ((coh_prec (cohS E2)) C1 C' E)=>Z; subst t1.",
                        "VernacExtend",
                        "f4b8583c7759af4d09d0d6ba1bfb80164ab919a1"
                    ]
                },
                {
                    "command": [
                        "by rewrite (joinxK (cohS E2) E).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "alw_inject",
            "line_nb": 233,
            "steps": [
                {
                    "command": [
                        "move=>C Ls scs; elim: scs i j p C Ls=>[|sc scs IH] i j p C Ls /=; split=>// {C} s M; move: (alw_coh Ls) (proj2 (rely_coh M))=>Ci C; case/(rely_ext Ci): M C (M)=>i1 [j1][->{s}] Ci1 C; case/(rely_split Ci Ci1)=> /(alw_envs Ls) {Ls} Ls S1.",
                        "VernacExtend",
                        "88a48da9558bf5e9605fcc47bb65d009238190bb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by exists i1, j1; split=>//; left; exists p; move/alw_refl: Ls.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case: sc=>//; last by case: p Ls=>// v; exists i1, j1.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=>sc; move: (alw_safe Ls sc)=>Sf; exists i1; split=>//; exists j1.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by exists i1, j1; split=>//; left; exists p; move/alw_refl: Ls.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move=>s q; rewrite stepInject => H.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "case: H Ls.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case=>_ [v][_ ->->->{p q s} _] Ls; apply: alw_ret'=>// s M.",
                        "VernacExtend",
                        "d62e4c271de3f2a9ff5062b8b89d3c57d965c518"
                    ]
                },
                {
                    "command": [
                        "case/(rely_ext Ci1): M (M)=>i2 [j2][->{s}] Ci2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case/(rely_split Ci1 Ci2)=> /(alw_envs Ls) {Ls} Ls S2.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "exists i2, j2; split=>//; first by apply: rely_trans S1 S2.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by right; exists v; move/alw_refl: Ls.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "case=>sc' [q'][x1][i2][y1][_ -> E -> {sc q s}] _ T Ls.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "have [E1 E2] : x1 = i1 /\\ y1 = j1.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case: T=>Cx1 _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: (coh_prec (cohS C) Ci1 Cx1 E) (E)=><-{E Cx1 x1}.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by move/(joinxK (cohS C)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite {E x1}E1 {y1}E2 in T *.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "have C' : i2 \\+ j1 \\In Coh W.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "move: (C)=>C'; rewrite (cohE w) in C *=>[[s1]][s2][E]D1 D2.",
                        "VernacExtend",
                        "8261237f0cda1915a4077c28869831c5329103ce"
                    ]
                },
                {
                    "command": [
                        "move: (coh_prec (cohS C') Ci1 D1 E)=>Z; subst i1.",
                        "VernacExtend",
                        "c4ff04708cf2446abfa564248680c1384d115797"
                    ]
                },
                {
                    "command": [
                        "move: (joinxK (cohS C') E)=>Z; subst s2; clear E.",
                        "VernacExtend",
                        "ae224168a0dfd80858c221d5496fe57fdd9296e9"
                    ]
                },
                {
                    "command": [
                        "apply/(cohE w); exists i2, j1; split=>//.",
                        "VernacExtend",
                        "afeeabfe8bc5112ba7bc3fe8aac7c53b55aa05ec"
                    ]
                },
                {
                    "command": [
                        "by case/step_coh: (pstep_network_sem T).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/(alw_step Ls): T=>{Ls} Ls.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "apply: alw_imp' (IH _ _ _ C' Ls)=>{IH Ls C' C Ci Ci1 i i1 i2 p q' sc' scs}.",
                        "VernacExtend",
                        "4bd6fa79b17bcd2bfb7af091fb325367a20385d6"
                    ]
                },
                {
                    "command": [
                        "move=>s p _ [i2][j2][->{s}] Ci2 S2 H; exists i2, j2; split=>//.",
                        "VernacExtend",
                        "3bf9a647c83ec4af6494388de6ab834b21cb8bd7"
                    ]
                },
                {
                    "command": [
                        "by apply: rely_trans S1 S2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aft_inject",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "move=>C /(alw_inject C); apply: alw_imp=>{p i C} s q _.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "case=>i1 [j1][->{s} Ci1 S1] H v E.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "move: E H=>-> [[q'][//]|[_][[<-]] H].",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by exists i1, j1; split=>//; apply: H.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "aft_ind_inv",
            "line_nb": 317,
            "steps": [
                {
                    "command": [
                        "move=>C /(alw_ind_inv C); apply: alw_imp=>{p i C} s q _.",
                        "VernacExtend",
                        "d6ebf3361f380a12d5c2c9bbb7ea363132c48b36"
                    ]
                },
                {
                    "command": [
                        "case=>C H; split=>//; subst q.",
                        "VernacExtend",
                        "596f7f4ed3d91088347c27116996eacca18d00e5"
                    ]
                },
                {
                    "command": [
                        "case:H; first by move=>[?]; case.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by case=>v'[][]<-{v'}/(_ v (erefl _)).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}