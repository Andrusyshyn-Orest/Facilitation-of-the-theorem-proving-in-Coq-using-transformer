{
    "filename": "Core/Rely.v",
    "coq_project": "disel",
    "vernac_cmds": [
        [
            "From mathcomp.ssreflect Require Import ssreflect ssrbool ssrnat eqtype ssrfun seq.",
            "VernacRequire",
            "037d2ffdc90053d89d1b918c36daaeab721d2d83"
        ],
        [
            "From mathcomp Require Import path.",
            "VernacRequire",
            "7c70f445c754a2a74114416d587d02e512c693e2"
        ],
        [
            "Require Import Eqdep.",
            "VernacRequire",
            "a499933d0898d4c0e235af789d9252f633426d20"
        ],
        [
            "Require Import Relation_Operators.",
            "VernacRequire",
            "5c09f52be79db9d019c350cc3153659920102fbb"
        ],
        [
            "From fcsl Require Import pred prelude ordtype finmap pcm unionmap heap.",
            "VernacRequire",
            "41347af8188b8bd95ca7fa1d9e375300903274c8"
        ],
        [
            "From DiSeL Require Import Freshness State EqTypeX Protocols Worlds NetworkSem.",
            "VernacRequire",
            "a65744ec81ad82a08754e70e5c28238da257f65a"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Section Rely.",
            "VernacBeginSection",
            "dd120c62c7a69e7303759ba1ca64f7b1b4aaacfc"
        ],
        [
            "Variable w : world.",
            "VernacAssumption",
            "a4b108a65a0ce993960245fb85c96388568f2c47"
        ],
        [
            "Variable this: nid.",
            "VernacAssumption",
            "242c7869c0bef3fe166243583278f6bbaa63bbf4"
        ],
        [
            "Notation getl := (getLocal).",
            "VernacSyntacticDefinition",
            "c02530774b9258f86a548e5ba9576641b4951fec"
        ],
        [
            "Notation gets := getStatelet.",
            "VernacSyntacticDefinition",
            "9f68d12b3e25dbeeaaee2f15b8ee921724c23279"
        ],
        [
            "Notation getp := (@getProtocol _ w).",
            "VernacSyntacticDefinition",
            "29360ac4bd366d42e75b50660e58cfd1a268fade"
        ],
        [
            "Fixpoint network_rely' n s1 s2 := if n is n'.+1 then exists z s3, [/\\ this != z, network_step w z s1 s3 & network_rely' n' s3 s2] else s1 = s2 /\\ s1 \\In Coh w.",
            "VernacFixpoint",
            "1cf9560bf822a805c67cd8f2d936d5f64c05ca93"
        ],
        [
            "Definition network_rely s1 s2 := exists n, network_rely' n s1 s2.",
            "VernacDefinition",
            "d951ea55c1ead1333752078a79a20f932f7013c8"
        ],
        [
            "Lemma rely_refl s : s \\In Coh w -> network_rely s s.",
            "VernacStartTheoremProof",
            "5ff5a6c241a92ce1112f2dba3a99860edfce3879"
        ],
        [
            "move=>H; by exists 0.",
            "VernacExtend",
            "c42ec967bffec70acce34c6295bd61fe6baf57b0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rely_trans s1 s2 s3 : network_rely s1 s2 -> network_rely s2 s3 -> network_rely s1 s3.",
            "VernacStartTheoremProof",
            "a755c3eb5dfe4fcf8a848f2d289bafb0b2abbaa6"
        ],
        [
            "case=>n; elim: n s1 s2=>[?? [<-]|n Hi s1 s2]//.",
            "VernacExtend",
            "1821533cafd21deefc2f797d67a58b45e0a54e79"
        ],
        [
            "move=>[z][s4][N]H1 H2 H3; case: (Hi _ _ H2 H3)=>m H4.",
            "VernacExtend",
            "a01b3d93f426ff68d360351709a5fa5af822af32"
        ],
        [
            "by exists m.+1, z, s4.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rely_coh' n s1 s2 : network_rely' n s1 s2 -> Coh w s1 /\\ Coh w s2.",
            "VernacStartTheoremProof",
            "8e9de34a6395697618b1d432a1daa8374387f667"
        ],
        [
            "by elim:n s1=>[s1[<-]|n Hi s1]//=[z][s3][N]/step_coh[]H1 H2 /Hi[].",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rely_coh s1 s2 : network_rely s1 s2 -> Coh w s1 /\\ Coh w s2.",
            "VernacStartTheoremProof",
            "6957e1e83ac3693bb22fa74e62942638f35ba4b4"
        ],
        [
            "by case=>n/rely_coh'.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rely_loc s1 s2 l: network_rely s1 s2 -> find this (dstate (gets s1 l)) = find this (dstate (gets s2 l)).",
            "VernacStartTheoremProof",
            "090e5cd292fcef98b40e2476ce828b146a25af74"
        ],
        [
            "case=>n; elim: n s1=>/=[s1 [E C]|n Ih s1 [z][s''][N]S R]; first by subst s2.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite -(@Ih s'' R); clear R Ih; apply: (step_is_local l S N).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma step_consume_other l s s' m tm from z: this != z -> network_step w z s s' -> find m (dsoup (gets s l)) = Some (Msg tm from this true) -> find m (dsoup (gets s' l)) = Some (Msg tm from this true).",
            "VernacStartTheoremProof",
            "05e7c76f848410d52d8d2da4ec04e92efe933198"
        ],
        [
            "move=>N S.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (S)=>[[H1 <-] | k st _ to a loc' pf D C S' Pf Spf ->/= | k rt _ m' from' pf D C tm' T [H2 H3->/=]]//; move: (coh_coh l C); rewrite /gets findU; case B: (l == k)=>//=; move/eqP: B=>B; subst k; rewrite (stepV1 S).",
            "VernacExtend",
            "9ad0381a03f61f952c1154130bbfd062b60a38c5"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: (dom_find l s)=>[|d->_]; first by move/find_none; rewrite D.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=> C' E; rewrite -E; rewrite joinC findPtUn2; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite joinC valid_fresh; apply: (cohVs C').",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "case: ifP=>///eqP; move/find_some: E=>F Z.",
            "VernacExtend",
            "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
        ],
        [
            "by move/negbTE: (dom_fresh (dsoup d)); rewrite -Z F.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: H2=>{H3}; move: (coh_s l C) pf; rewrite /gets.",
            "VernacExtend",
            "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
        ],
        [
            "case: (dom_find l s)=>[|d-> _ C' pf H2 _]; first by move/find_none; rewrite D.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case B: (m == m'); do[move/eqP: B=>Z; subst|move=>H].",
            "VernacExtend",
            "09d2a9a8185b9355b5ea9923b8ee73e4bb71f9bf"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by rewrite H2; case=>Z1 Z2 Z3; subst z; move/negbTE: N; rewrite eqxx.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite /consume_msg; case B: (find m' (dsoup d))=>[v|]//= H.",
            "VernacExtend",
            "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
        ],
        [
            "by rewrite findU; move/eqP/negbTE: Z=>->/=.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rely_consume_other l s s' m tm from: network_rely s s' -> find m (dsoup (gets s l)) = Some (Msg tm from this true) -> find m (dsoup (gets s' l)) = Some (Msg tm from this true).",
            "VernacStartTheoremProof",
            "4aac4bc4e07204bf2aee0050bc3754ece3e143f7"
        ],
        [
            "case=>n; elim: n s=>/=[?[-> C]|n Ih s [z][s''][N] S R E]//.",
            "VernacExtend",
            "1821533cafd21deefc2f797d67a58b45e0a54e79"
        ],
        [
            "by rewrite -(@Ih s'' R)=>//; clear Ih; apply: (step_consume_other N S).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma step_send_other l s s' m tm to b z: this != z -> network_step w z s s' -> find m (dsoup (gets s' l)) = Some (Msg tm this to b) -> exists b', find m (dsoup (gets s l)) = Some (Msg tm this to b') /\\ (b -> b').",
            "VernacStartTheoremProof",
            "04d12994e0da8bd39c3394988891af2d3d39c840"
        ],
        [
            "move=>N S.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (S)=>[[H1 <-->] | k st _ to' a loc' pf D C S' Ph Spf ->/= | k rt _ m' from' pf D C tm' T [H2 H3->/=]]//; do?[by exists b]; move: (coh_coh l C); rewrite /gets findU; case B: (l == k)=>//=; do?[by exists b]; move/eqP: B=>B; subst k; rewrite (stepV1 S).",
            "VernacExtend",
            "e92ca37ccf201fe46b2c6303c43b583614201de4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: (dom_find l s)=>[|d->_ C']; first by move/find_none; rewrite D.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite joinC findPtUn2; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite joinC valid_fresh; apply: (cohVs C').",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "case B: (m == fresh (dsoup d)); first by case=>_ Z _; subst; move/eqP: N.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by move=>H; exists b; split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: H2; move: (coh_s l C) pf; rewrite /gets; case B: (m == m'); do[move/eqP: B=>Z; subst m'|]; case: (dom_find l s)=>[|d->_ C' pf H2 _]; do?[by move=>->? ? _; rewrite/consume_msg !find0E].",
            "VernacExtend",
            "ddeb99c217d6840f1760c32a4bc34592625a6d51"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /consume_msg; case B: (find m (dsoup d))=>[v|]; last by rewrite B.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /mark_msg findU eqxx/= (cohVs C')/==>E; rewrite B in H2; clear B.",
            "VernacExtend",
            "d8d6f9ff7ff17159d19c8dc6e14f11b857b85594"
        ],
        [
            "case: v H2 E=>c x y a; case=>Z1 Z2 Z3 Z4; subst c x y a=>/=.",
            "VernacExtend",
            "6042dc43156302d23b188b05386d953cdb248e4f"
        ],
        [
            "by case=>Z1 Z2 Z3 Z4; subst b to from' tm'; exists true; split.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite/consume_msg; case B': (find m' (dsoup d))=>[v|]; last by exists b.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite findU B/==>->; exists b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rely_send_other l s s' m tm to b: network_rely s s' -> find m (dsoup (gets s' l)) = Some (Msg tm this to b) -> exists b', find m (dsoup (gets s l)) = Some (Msg tm this to b') /\\ (b -> b').",
            "VernacStartTheoremProof",
            "a91e6c183a565f1fbbe588387cdc2f6599083097"
        ],
        [
            "case=>n; elim: n s=>/=[?[-> C]|n Ih s [z][s''][N] S R E]//; first by exists b.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "case: (@Ih s'' R E)=>b''[H1 H2].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case: (step_send_other N S H1)=>c[H3 H4]; exists c; split=>// Z; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma step_send_other' l s s' m tm to b z: this != z -> network_step w z s s' -> find m (dsoup (gets s l)) = Some (Msg tm this to b) -> exists b', find m (dsoup (gets s' l)) = Some (Msg tm this to b') /\\ (b' -> b).",
            "VernacStartTheoremProof",
            "4bc461cde66ca7a6fe4903cb84a09da659e4ca81"
        ],
        [
            "move=>N S.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (S)=>[[H1 <-->] | k st _ to' a loc' pf D C S' Ph Spf ->/= | k rt _ m' from' pf D C tm' T [H2 H3->/=]]//; do?[by exists b]; move: (coh_coh l C); rewrite /gets findU; case B: (l == k)=>//=; do?[by exists b]; move/eqP: B=>B; subst k; rewrite (stepV1 S).",
            "VernacExtend",
            "e92ca37ccf201fe46b2c6303c43b583614201de4"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: (dom_find l s)=>[|d->_ C']; first by move/find_none; rewrite D.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite joinC findPtUn2; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "+",
            "VernacBullet",
            "3ddfc0515f916e562bacf863647e0107cb15aa13"
        ],
        [
            "rewrite joinC valid_fresh; apply: (cohVs C').",
            "VernacExtend",
            "634a7639ed2fb7caf62757f84400927f5829b7d5"
        ],
        [
            "case B: (m == fresh (dsoup d)); last by move=>->; exists b.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move/eqP:B=>B; subst m; move: (dom_fresh (dsoup d))=>B.",
            "VernacExtend",
            "3470c873638d0b65de663e3302a644ad44e074e4"
        ],
        [
            "by move/find_some=>E; rewrite E in B.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move: H2; move: (coh_s l C) pf; rewrite /gets; case B: (m == m'); do[move/eqP: B=>Z; subst m'|]; case: (dom_find l s)=>[|d->_ C' pf H2 _]; do?[by move=>->? ? _; rewrite/consume_msg !find0E].",
            "VernacExtend",
            "ddeb99c217d6840f1760c32a4bc34592625a6d51"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /consume_msg; case B: (find m (dsoup d))=>[v|]; last by rewrite B.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "rewrite /mark_msg findU eqxx/= (cohVs C')/==>E; rewrite B in H2; clear B.",
            "VernacExtend",
            "d8d6f9ff7ff17159d19c8dc6e14f11b857b85594"
        ],
        [
            "case: v H2 E=>c x y a; case=>Z1 Z2 Z3 Z4; subst c x y a=>/=.",
            "VernacExtend",
            "6042dc43156302d23b188b05386d953cdb248e4f"
        ],
        [
            "by case=>Z1 Z2 Z3 Z4; subst b to from' tm'; exists false.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "rewrite/consume_msg; case B': (find m' (dsoup d))=>[v|]; last by exists b.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "by rewrite findU B/==>->; exists b.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rely_send_other' l s s' m tm to b: network_rely s s' -> find m (dsoup (gets s l)) = Some (Msg tm this to b) -> exists b', find m (dsoup (gets s' l)) = Some (Msg tm this to b') /\\ (b' -> b).",
            "VernacStartTheoremProof",
            "5490cc6fa8f6ee5dc0ad6b2065db69b3b6fdbc59"
        ],
        [
            "case=>n; elim: n s b; first by move=>s b[Z C]; subst s'; exists b.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=>n Ih s b [z][s''][N] S R H.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: (step_send_other' N S H)=>c[H3 H4].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by case: (@Ih s'' c R H3)=>b'[G1 G2]; exists b'; split=>//; auto.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation loc i l := (getLocal this (getStatelet i l)).",
            "VernacSyntacticDefinition",
            "a3386210a3f04d3ab4498ade909cb4f4a7dc619d"
        ],
        [
            "Notation msgs i l := (dsoup (getStatelet i l)).",
            "VernacSyntacticDefinition",
            "fb761593a95ea6c033207f4a8a9b56474cae6692"
        ],
        [
            "Lemma rely_loc' l i j : network_rely i j -> loc j l = loc i l.",
            "VernacStartTheoremProof",
            "198b9ebfe1f9103c86316c0a7471e3c41325c05d"
        ],
        [
            "move => R.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "now rewrite /getLocal(rely_loc _ R).",
            "VernacExtend",
            "276cb1b1d654c3b906be8c12785939ceeaffac64"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Rely.",
            "VernacEndSegment",
            "dcc5104a135134a925286bfdfc78ce7013e3322c"
        ]
    ],
    "proofs": [
        {
            "name": "rely_refl",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "move=>H; by exists 0.",
                        "VernacExtend",
                        "c42ec967bffec70acce34c6295bd61fe6baf57b0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rely_trans",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "case=>n; elim: n s1 s2=>[?? [<-]|n Hi s1 s2]//.",
                        "VernacExtend",
                        "1821533cafd21deefc2f797d67a58b45e0a54e79"
                    ]
                },
                {
                    "command": [
                        "move=>[z][s4][N]H1 H2 H3; case: (Hi _ _ H2 H3)=>m H4.",
                        "VernacExtend",
                        "a01b3d93f426ff68d360351709a5fa5af822af32"
                    ]
                },
                {
                    "command": [
                        "by exists m.+1, z, s4.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rely_coh'",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "by elim:n s1=>[s1[<-]|n Hi s1]//=[z][s3][N]/step_coh[]H1 H2 /Hi[].",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rely_coh",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "by case=>n/rely_coh'.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rely_loc",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "case=>n; elim: n s1=>/=[s1 [E C]|n Ih s1 [z][s''][N]S R]; first by subst s2.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(@Ih s'' R); clear R Ih; apply: (step_is_local l S N).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "step_consume_other",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "move=>N S.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (S)=>[[H1 <-] | k st _ to a loc' pf D C S' Pf Spf ->/= | k rt _ m' from' pf D C tm' T [H2 H3->/=]]//; move: (coh_coh l C); rewrite /gets findU; case B: (l == k)=>//=; move/eqP: B=>B; subst k; rewrite (stepV1 S).",
                        "VernacExtend",
                        "9ad0381a03f61f952c1154130bbfd062b60a38c5"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case: (dom_find l s)=>[|d->_]; first by move/find_none; rewrite D.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move=> C' E; rewrite -E; rewrite joinC findPtUn2; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite joinC valid_fresh; apply: (cohVs C').",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "case: ifP=>///eqP; move/find_some: E=>F Z.",
                        "VernacExtend",
                        "d09d9458d087c74b7317d831afc65fc07a0f6e3f"
                    ]
                },
                {
                    "command": [
                        "by move/negbTE: (dom_fresh (dsoup d)); rewrite -Z F.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: H2=>{H3}; move: (coh_s l C) pf; rewrite /gets.",
                        "VernacExtend",
                        "ea0cb90c655c5664c1e4bd5e8281f3783b29707c"
                    ]
                },
                {
                    "command": [
                        "case: (dom_find l s)=>[|d-> _ C' pf H2 _]; first by move/find_none; rewrite D.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case B: (m == m'); do[move/eqP: B=>Z; subst|move=>H].",
                        "VernacExtend",
                        "09d2a9a8185b9355b5ea9923b8ee73e4bb71f9bf"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by rewrite H2; case=>Z1 Z2 Z3; subst z; move/negbTE: N; rewrite eqxx.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite /consume_msg; case B: (find m' (dsoup d))=>[v|]//= H.",
                        "VernacExtend",
                        "712d339e99ee17eb7d5033e19ac614eb3ca6b532"
                    ]
                },
                {
                    "command": [
                        "by rewrite findU; move/eqP/negbTE: Z=>->/=.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rely_consume_other",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "case=>n; elim: n s=>/=[?[-> C]|n Ih s [z][s''][N] S R E]//.",
                        "VernacExtend",
                        "1821533cafd21deefc2f797d67a58b45e0a54e79"
                    ]
                },
                {
                    "command": [
                        "by rewrite -(@Ih s'' R)=>//; clear Ih; apply: (step_consume_other N S).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "step_send_other",
            "line_nb": 57,
            "steps": [
                {
                    "command": [
                        "move=>N S.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (S)=>[[H1 <-->] | k st _ to' a loc' pf D C S' Ph Spf ->/= | k rt _ m' from' pf D C tm' T [H2 H3->/=]]//; do?[by exists b]; move: (coh_coh l C); rewrite /gets findU; case B: (l == k)=>//=; do?[by exists b]; move/eqP: B=>B; subst k; rewrite (stepV1 S).",
                        "VernacExtend",
                        "e92ca37ccf201fe46b2c6303c43b583614201de4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case: (dom_find l s)=>[|d->_ C']; first by move/find_none; rewrite D.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite joinC findPtUn2; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite joinC valid_fresh; apply: (cohVs C').",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "case B: (m == fresh (dsoup d)); first by case=>_ Z _; subst; move/eqP: N.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by move=>H; exists b; split.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: H2; move: (coh_s l C) pf; rewrite /gets; case B: (m == m'); do[move/eqP: B=>Z; subst m'|]; case: (dom_find l s)=>[|d->_ C' pf H2 _]; do?[by move=>->? ? _; rewrite/consume_msg !find0E].",
                        "VernacExtend",
                        "ddeb99c217d6840f1760c32a4bc34592625a6d51"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite /consume_msg; case B: (find m (dsoup d))=>[v|]; last by rewrite B.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite /mark_msg findU eqxx/= (cohVs C')/==>E; rewrite B in H2; clear B.",
                        "VernacExtend",
                        "d8d6f9ff7ff17159d19c8dc6e14f11b857b85594"
                    ]
                },
                {
                    "command": [
                        "case: v H2 E=>c x y a; case=>Z1 Z2 Z3 Z4; subst c x y a=>/=.",
                        "VernacExtend",
                        "6042dc43156302d23b188b05386d953cdb248e4f"
                    ]
                },
                {
                    "command": [
                        "by case=>Z1 Z2 Z3 Z4; subst b to from' tm'; exists true; split.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite/consume_msg; case B': (find m' (dsoup d))=>[v|]; last by exists b.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite findU B/==>->; exists b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rely_send_other",
            "line_nb": 76,
            "steps": [
                {
                    "command": [
                        "case=>n; elim: n s=>/=[?[-> C]|n Ih s [z][s''][N] S R E]//; first by exists b.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "case: (@Ih s'' R E)=>b''[H1 H2].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case: (step_send_other N S H1)=>c[H3 H4]; exists c; split=>// Z; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "step_send_other'",
            "line_nb": 81,
            "steps": [
                {
                    "command": [
                        "move=>N S.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (S)=>[[H1 <-->] | k st _ to' a loc' pf D C S' Ph Spf ->/= | k rt _ m' from' pf D C tm' T [H2 H3->/=]]//; do?[by exists b]; move: (coh_coh l C); rewrite /gets findU; case B: (l == k)=>//=; do?[by exists b]; move/eqP: B=>B; subst k; rewrite (stepV1 S).",
                        "VernacExtend",
                        "e92ca37ccf201fe46b2c6303c43b583614201de4"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case: (dom_find l s)=>[|d->_ C']; first by move/find_none; rewrite D.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite joinC findPtUn2; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "+",
                        "VernacBullet",
                        "3ddfc0515f916e562bacf863647e0107cb15aa13"
                    ]
                },
                {
                    "command": [
                        "rewrite joinC valid_fresh; apply: (cohVs C').",
                        "VernacExtend",
                        "634a7639ed2fb7caf62757f84400927f5829b7d5"
                    ]
                },
                {
                    "command": [
                        "case B: (m == fresh (dsoup d)); last by move=>->; exists b.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move/eqP:B=>B; subst m; move: (dom_fresh (dsoup d))=>B.",
                        "VernacExtend",
                        "3470c873638d0b65de663e3302a644ad44e074e4"
                    ]
                },
                {
                    "command": [
                        "by move/find_some=>E; rewrite E in B.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move: H2; move: (coh_s l C) pf; rewrite /gets; case B: (m == m'); do[move/eqP: B=>Z; subst m'|]; case: (dom_find l s)=>[|d->_ C' pf H2 _]; do?[by move=>->? ? _; rewrite/consume_msg !find0E].",
                        "VernacExtend",
                        "ddeb99c217d6840f1760c32a4bc34592625a6d51"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite /consume_msg; case B: (find m (dsoup d))=>[v|]; last by rewrite B.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "rewrite /mark_msg findU eqxx/= (cohVs C')/==>E; rewrite B in H2; clear B.",
                        "VernacExtend",
                        "d8d6f9ff7ff17159d19c8dc6e14f11b857b85594"
                    ]
                },
                {
                    "command": [
                        "case: v H2 E=>c x y a; case=>Z1 Z2 Z3 Z4; subst c x y a=>/=.",
                        "VernacExtend",
                        "6042dc43156302d23b188b05386d953cdb248e4f"
                    ]
                },
                {
                    "command": [
                        "by case=>Z1 Z2 Z3 Z4; subst b to from' tm'; exists false.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "rewrite/consume_msg; case B': (find m' (dsoup d))=>[v|]; last by exists b.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "by rewrite findU B/==>->; exists b.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rely_send_other'",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "case=>n; elim: n s b; first by move=>s b[Z C]; subst s'; exists b.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move=>n Ih s b [z][s''][N] S R H.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: (step_send_other' N S H)=>c[H3 H4].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by case: (@Ih s'' c R H3)=>b'[G1 G2]; exists b'; split=>//; auto.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rely_loc'",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "move => R.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "now rewrite /getLocal(rely_loc _ R).",
                        "VernacExtend",
                        "276cb1b1d654c3b906be8c12785939ceeaffac64"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}