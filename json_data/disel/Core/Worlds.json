{
    "filename": "Core/Worlds.v",
    "coq_project": "disel",
    "vernac_cmds": [
        [
            "From mathcomp.ssreflect Require Import ssreflect ssrbool ssrnat eqtype ssrfun seq.",
            "VernacRequire",
            "037d2ffdc90053d89d1b918c36daaeab721d2d83"
        ],
        [
            "From mathcomp Require Import path.",
            "VernacRequire",
            "7c70f445c754a2a74114416d587d02e512c693e2"
        ],
        [
            "Require Import Eqdep.",
            "VernacRequire",
            "a499933d0898d4c0e235af789d9252f633426d20"
        ],
        [
            "Require Import Relation_Operators.",
            "VernacRequire",
            "5c09f52be79db9d019c350cc3153659920102fbb"
        ],
        [
            "From fcsl Require Import pred prelude ordtype finmap pcm unionmap heap.",
            "VernacRequire",
            "41347af8188b8bd95ca7fa1d9e375300903274c8"
        ],
        [
            "From DiSeL Require Import Freshness State EqTypeX Protocols.",
            "VernacRequire",
            "4fe4637e223971ba5c9309510c99aa46e3444329"
        ],
        [
            "Set Implicit Arguments.",
            "VernacSetOption",
            "9e84ff8896f028601d8aded48c1d4aebe60aa584"
        ],
        [
            "Unset Strict Implicit.",
            "VernacUnsetOption",
            "2842adaf6959318f2042805935c46f513bdc0348"
        ],
        [
            "Unset Printing Implicit Defensive.",
            "VernacUnsetOption",
            "444e5f0be4b25d9b1fd556943a447ec10046d151"
        ],
        [
            "Module WorldGetters.",
            "VernacDefineModule",
            "5ac4ff14f9ecec40fe7506baf527618cb93c588a"
        ],
        [
            "Section WorldGetters.",
            "VernacBeginSection",
            "7427cdc1d49d9fc6cba035ac1637f05af5554b1b"
        ],
        [
            "Definition context := union_map Label protocol.",
            "VernacDefinition",
            "84fa9ad5aad5e80b8ccda47e95a364d6af0fcf3a"
        ],
        [
            "Definition hook_domain := [ordType of ((nat * Label) * (Label * nat))%type].",
            "VernacDefinition",
            "b812fbb91e83040c8f7e9d20d248796fc1c33de8"
        ],
        [
            "Definition hook_type := heap -> heap -> seq nat -> nid -> Prop.",
            "VernacDefinition",
            "d8f0d116a19265279f4509325575ad90cd550718"
        ],
        [
            "Definition hooks := union_map hook_domain hook_type.",
            "VernacDefinition",
            "006d5fd1d8f6ec1aed73410d28b2f16642867394"
        ],
        [
            "Definition world := (context * hooks)%type.",
            "VernacDefinition",
            "770313abc7cb09faa8c5efd4ef5b0c68f40c1f7f"
        ],
        [
            "Definition getc (w: world) : context := fst w.",
            "VernacDefinition",
            "f2be969859a291a1f6ff488933ac2a361ea09298"
        ],
        [
            "Coercion getc : world >-> context.",
            "VernacCoercion",
            "caac505d31c61bb6aae008386b82acb0c0c00cea"
        ],
        [
            "Definition geth (w: world) : hooks := snd w.",
            "VernacDefinition",
            "ac556774f11523470f7eaf174dbdeab306ca383e"
        ],
        [
            "Coercion geth : world >-> hooks.",
            "VernacCoercion",
            "85c4be819415e48505efc289ca30e809a92f7f22"
        ],
        [
            "Variable w : world.",
            "VernacAssumption",
            "a4b108a65a0ce993960245fb85c96388568f2c47"
        ],
        [
            "Variables (p : protocol).",
            "VernacAssumption",
            "72bf1c5c330624859b62fed839dbdbb575f4ae29"
        ],
        [
            "Definition getProtocol i : protocol:= match find i (getc w) with | Some p => p | None => EmptyProt i end.",
            "VernacDefinition",
            "faaae4a515ff29b19fc828cf1b890d1fef822128"
        ],
        [
            "End WorldGetters.",
            "VernacEndSegment",
            "bd850a5a4d83b928b023896c4b395a0df1290140"
        ],
        [
            "End WorldGetters.",
            "VernacEndSegment",
            "bd850a5a4d83b928b023896c4b395a0df1290140"
        ],
        [
            "Export WorldGetters.",
            "VernacImport",
            "eab30ff064fbaf93c9991c3edfffe0b8fd5420c3"
        ],
        [
            "Module Worlds.",
            "VernacDefineModule",
            "8c5ec255db1b628f74886110d97ad74db6425946"
        ],
        [
            "Module Core.",
            "VernacDefineModule",
            "58f22602b1b7b2f55d9670ed65f32a6a6fa8b5d0"
        ],
        [
            "Section Core.",
            "VernacBeginSection",
            "dd35c5b4030bada411b9a16bc6f7e3b9dc7b69a7"
        ],
        [
            "Definition hooks_consistent (c : context) (h : hooks) : Prop := forall z lc ls t, ((z, lc), (ls, t)) \\in dom h -> (lc \\in dom c) && (ls \\in dom c).",
            "VernacDefinition",
            "0dca9da6c0a1e05a703129ee4ce078e26faccb05"
        ],
        [
            "Definition hook_complete w := hooks_consistent (getc w) (geth w).",
            "VernacDefinition",
            "175b143b1ca81f38fc7d28567f121f0129d0481f"
        ],
        [
            "Lemma hook_complete0 c : hook_complete (c, Unit).",
            "VernacStartTheoremProof",
            "46738e3d710e7c05563a76afda06a5e1f4fa9ce6"
        ],
        [
            "by move=>????; rewrite dom0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition Coh (w : world) : Pred state := fun s => let: c := fst w in let: h := snd w in [/\\ valid w, valid s, hook_complete w, dom c =i dom s & forall l, coh (getProtocol w l) (getStatelet s l)].",
            "VernacDefinition",
            "b0305f05afb6e4263cca46cb4cc239f60c4b4ea7"
        ],
        [
            "Lemma cohW w s : Coh w s -> valid w.",
            "VernacStartTheoremProof",
            "187f72f3053b71c7ed31239965d696e2ee0e9137"
        ],
        [
            "by case w=>[c h]; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cohS w s : Coh w s -> valid s.",
            "VernacStartTheoremProof",
            "c7ae9edcb46557c5d766976b7e53052367e9f3ca"
        ],
        [
            "by case w=>[c h]; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cohH w s : Coh w s -> hook_complete w.",
            "VernacStartTheoremProof",
            "285b764d5af351250c61fcb44c6617e6b9811353"
        ],
        [
            "by case w=>[c h]; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma cohD w s : Coh w s -> dom (getc w) =i dom s.",
            "VernacStartTheoremProof",
            "96e372380653afacee5ec8703cbf7ae4a3fc3e27"
        ],
        [
            "by case w=>[c h]; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coh_coh w s l : Coh w s -> coh (getProtocol w l) (getStatelet s l).",
            "VernacStartTheoremProof",
            "3ddaf6b2869fdf6013a57f107a218d0544e551a4"
        ],
        [
            "by case w=>[c h]; case.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unit_coh w s : Coh w s -> w = Unit <-> s = Unit.",
            "VernacStartTheoremProof",
            "c1f32a8194fcf212f9cfea22f7782352e0eae306"
        ],
        [
            "case: (w)=>[c h].",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case=>V V' Hc E H; split.",
            "VernacExtend",
            "88c25af51ded328891892c53c941b62f68d72bd0"
        ],
        [
            "case=>Z1 Z2; subst c h; rewrite dom0 in E; last by rewrite (dom0E V').",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "move=>Z; subst s; move/andP: V=>/=[V1 V2].",
            "VernacExtend",
            "64defb97a9838582fd6adf15a1fd27e01a514a96"
        ],
        [
            "have Z: c = Unit by apply: (dom0E V1); move=>z; rewrite E dom0.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "subst c; suff Z: (h = Unit) by subst h.",
            "VernacExtend",
            "62793d8fcd61e99ec4aad2c3c3051abb57e361cb"
        ],
        [
            "simpl in Hc; clear E H V1 V'.",
            "VernacExtend",
            "89c9886ccc22fb1301bf254de977927deb43d8ef"
        ],
        [
            "apply: (dom0E V2); move=> x; case X: (x \\in dom h)=>//.",
            "VernacExtend",
            "aee299e1f12f6aac1824ee805d975110139f8525"
        ],
        [
            "by move: x X=>[[z lc] [ls t]]/Hc/andP[]; rewrite !dom0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Coh0 (w : world) (s : state) : w = Unit -> s = Unit -> Coh w s.",
            "VernacStartTheoremProof",
            "796c22622d2636f3b430caca98c7da971ac5a8ca"
        ],
        [
            "move=>->->{w s}; split; rewrite ?dom0=>//=; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>l; rewrite /getProtocol /getStatelet !find0E.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>z lc ls t; rewrite dom0.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma CohUn (w1 w2 : world) (s1 s2 : state) : Coh w1 s1 -> Coh w2 s2 -> valid (w1 \\+ w2) -> Coh (w1 \\+ w2) (s1 \\+ s2).",
            "VernacStartTheoremProof",
            "78a6253c721d3a4820874d09255e9d2139b38fbf"
        ],
        [
            "case: w1=>[c1 h1]; case: w2=>[c2 h2]; move=>C1 C2 V.",
            "VernacExtend",
            "9dda2bdd158284551955535b055c222b3c4fedd1"
        ],
        [
            "case: (C1)=>_ G1 K1 J1 H1; case: (C2)=>_ G2 K2 J2 H2.",
            "VernacExtend",
            "5887f8022a4f6389ac249140364feb69c4f18799"
        ],
        [
            "case/andP: V=>V V'; simpl in V, V'.",
            "VernacExtend",
            "32b4ed48c298630f9dd1a1ea32c583a53ef43c65"
        ],
        [
            "have X: valid (s1 \\+ s2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "case: validUn=>//; [by rewrite G1|by rewrite G2|move=>l; rewrite -J1 -J2=>D1 D2].",
            "VernacExtend",
            "1c32bb222dade1347cc855dd9ee1bf6f02be37e6"
        ],
        [
            "by case: validUn V=>//=V1 V2; move/(_ _ D1); rewrite D2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Y: dom (c1 \\+ c2) =i dom (s1 \\+ s2).",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move=>z; rewrite !domUn !inE/=;rewrite V X/= J1 J2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "have Z1: valid ((c1, h1) \\+ (c2, h2)) by rewrite /valid/= V V'.",
            "VernacExtend",
            "406cde1174359c53bf162a2a18c4eede395555f9"
        ],
        [
            "split=>//[|l]; last first.",
            "VernacExtend",
            "3763a4b8db689af316a7372b722bb29806ab4fb6"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "rewrite /getProtocol /getStatelet.",
            "VernacExtend",
            "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
        ],
        [
            "case: (dom_find l (s1 \\+ s2))=>[|v]Z.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "-",
            "VernacBullet",
            "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
        ],
        [
            "by move/find_none: (Z); rewrite -Y; case: dom_find=>//->_; rewrite Z.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "move/find_some: (Z)=>D; rewrite Z; rewrite -Y in D=> E.",
            "VernacExtend",
            "9a27d4cdb663815a1a2248bb21e31e19d3d61cb9"
        ],
        [
            "case: dom_find D=>// p Z' _ _; rewrite Z'.",
            "VernacExtend",
            "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
        ],
        [
            "rewrite findUnL // in Z; rewrite findUnL // J1 in Z'.",
            "VernacExtend",
            "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
        ],
        [
            "by case: ifP Z Z'=>_ F1 F2; [move: (H1 l)|move: (H2 l)]; rewrite /getProtocol /getStatelet F1 F2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "by move=>z lc ls t/=; rewrite domUn inE=>/andP[_]/orP[];[move/K1|move/K2]; move/andP=>[A1 A2]; rewrite !domUn !inE A1 A2 V -?(orbC true).",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma coh_prec w: precise (Coh w).",
            "VernacStartTheoremProof",
            "9080dfe24b8fb9898985c1c3b39d99b072bb4dd6"
        ],
        [
            "move=>s1 s2 t1 t2 V C1 C2.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "case: C1 => H1 G1 K1 D1 _.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "case: C2 => H2 G2 K2 D2 _ H.",
            "VernacExtend",
            "e00fff71ff314c991514fc71c41a3556702e444a"
        ],
        [
            "by apply: (@dom_prec _ _ _ s1 s2 t1 t2)=>//z; rewrite -D1 -D2.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locE i n k x y : k \\in dom i -> valid i -> valid (dstate (getStatelet i k)) -> getLocal n (getStatelet (upd k {| dstate := upd n x (dstate (getStatelet i k)); dsoup := y |} i) k) = x.",
            "VernacStartTheoremProof",
            "99868b5359705bf13b899baf31001893eb9f9dbd"
        ],
        [
            "move=>D V; rewrite /getStatelet; case:dom_find (D) =>//d->_ _.",
            "VernacExtend",
            "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
        ],
        [
            "by rewrite findU eqxx/= V /getLocal/= findU eqxx/==>->.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locE' d n x y : valid (dstate d) -> getLocal n {| dstate := upd n x (dstate d); dsoup := y |} = x.",
            "VernacStartTheoremProof",
            "a1498714f6cf6536d52c1380d703609fda013b29"
        ],
        [
            "by move=>V; rewrite /getLocal findU eqxx/= V.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma locU n n' x st s : n != n' -> valid st -> getLocal n {| dstate := upd n' x st; dsoup := s |} = getLocal n {| dstate := st; dsoup := s |}.",
            "VernacStartTheoremProof",
            "b28b52e6ce9bcb36a765fc48a4cc4a50c0b7c2e6"
        ],
        [
            "move=> /negbTE N V.",
            "VernacExtend",
            "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
        ],
        [
            "by rewrite /getLocal findU/= N.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Section MakeWorld.",
            "VernacBeginSection",
            "871f47909c16c92afa37d6274a1385ad254a0038"
        ],
        [
            "Variable p : protocol.",
            "VernacAssumption",
            "72bf1c5c330624859b62fed839dbdbb575f4ae29"
        ],
        [
            "Notation l := (plab p).",
            "VernacSyntacticDefinition",
            "e9cce4c6c95c13b817f34abc87d6508c8dbf8965"
        ],
        [
            "Definition mkWorld : world := (l \\\\-> p, Unit).",
            "VernacDefinition",
            "9d3f4db7ba59f4d0908b15c18ad3ceaaeeee5e09"
        ],
        [
            "Lemma prEq : (getProtocol mkWorld l) = p.",
            "VernacStartTheoremProof",
            "69ad027d654d76e3e74af716ff69037bad87cbd3"
        ],
        [
            "by rewrite /getProtocol findPt.",
            "VernacExtend",
            "ee1746465e986ababa06bb4e96ee76be726c914a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End MakeWorld.",
            "VernacEndSegment",
            "62d294116613de7074bc0c404907ff9365e8b49e"
        ],
        [
            "End Core.",
            "VernacEndSegment",
            "e02a0ee4956184eb20a6474d5c250963ae40502f"
        ],
        [
            "End Core.",
            "VernacEndSegment",
            "e02a0ee4956184eb20a6474d5c250963ae40502f"
        ],
        [
            "End Worlds.",
            "VernacEndSegment",
            "5da3eed49e953680cae7ec6f9e5a9aa932e2389c"
        ],
        [
            "Export Worlds.Core.",
            "VernacImport",
            "9f17ce97647b4f4a26fdac2c68007f2075cd6f0d"
        ]
    ],
    "proofs": [
        {
            "name": "hook_complete0",
            "line_nb": 31,
            "steps": [
                {
                    "command": [
                        "by move=>????; rewrite dom0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cohW",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "by case w=>[c h]; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cohS",
            "line_nb": 38,
            "steps": [
                {
                    "command": [
                        "by case w=>[c h]; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cohH",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "by case w=>[c h]; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cohD",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "by case w=>[c h]; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coh_coh",
            "line_nb": 47,
            "steps": [
                {
                    "command": [
                        "by case w=>[c h]; case.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unit_coh",
            "line_nb": 50,
            "steps": [
                {
                    "command": [
                        "case: (w)=>[c h].",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case=>V V' Hc E H; split.",
                        "VernacExtend",
                        "88c25af51ded328891892c53c941b62f68d72bd0"
                    ]
                },
                {
                    "command": [
                        "case=>Z1 Z2; subst c h; rewrite dom0 in E; last by rewrite (dom0E V').",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "move=>Z; subst s; move/andP: V=>/=[V1 V2].",
                        "VernacExtend",
                        "64defb97a9838582fd6adf15a1fd27e01a514a96"
                    ]
                },
                {
                    "command": [
                        "have Z: c = Unit by apply: (dom0E V1); move=>z; rewrite E dom0.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "subst c; suff Z: (h = Unit) by subst h.",
                        "VernacExtend",
                        "62793d8fcd61e99ec4aad2c3c3051abb57e361cb"
                    ]
                },
                {
                    "command": [
                        "simpl in Hc; clear E H V1 V'.",
                        "VernacExtend",
                        "89c9886ccc22fb1301bf254de977927deb43d8ef"
                    ]
                },
                {
                    "command": [
                        "apply: (dom0E V2); move=> x; case X: (x \\in dom h)=>//.",
                        "VernacExtend",
                        "aee299e1f12f6aac1824ee805d975110139f8525"
                    ]
                },
                {
                    "command": [
                        "by move: x X=>[[z lc] [ls t]]/Hc/andP[]; rewrite !dom0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Coh0",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "move=>->->{w s}; split; rewrite ?dom0=>//=; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>l; rewrite /getProtocol /getStatelet !find0E.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>z lc ls t; rewrite dom0.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "CohUn",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "case: w1=>[c1 h1]; case: w2=>[c2 h2]; move=>C1 C2 V.",
                        "VernacExtend",
                        "9dda2bdd158284551955535b055c222b3c4fedd1"
                    ]
                },
                {
                    "command": [
                        "case: (C1)=>_ G1 K1 J1 H1; case: (C2)=>_ G2 K2 J2 H2.",
                        "VernacExtend",
                        "5887f8022a4f6389ac249140364feb69c4f18799"
                    ]
                },
                {
                    "command": [
                        "case/andP: V=>V V'; simpl in V, V'.",
                        "VernacExtend",
                        "32b4ed48c298630f9dd1a1ea32c583a53ef43c65"
                    ]
                },
                {
                    "command": [
                        "have X: valid (s1 \\+ s2).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "case: validUn=>//; [by rewrite G1|by rewrite G2|move=>l; rewrite -J1 -J2=>D1 D2].",
                        "VernacExtend",
                        "1c32bb222dade1347cc855dd9ee1bf6f02be37e6"
                    ]
                },
                {
                    "command": [
                        "by case: validUn V=>//=V1 V2; move/(_ _ D1); rewrite D2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have Y: dom (c1 \\+ c2) =i dom (s1 \\+ s2).",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move=>z; rewrite !domUn !inE/=;rewrite V X/= J1 J2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "have Z1: valid ((c1, h1) \\+ (c2, h2)) by rewrite /valid/= V V'.",
                        "VernacExtend",
                        "406cde1174359c53bf162a2a18c4eede395555f9"
                    ]
                },
                {
                    "command": [
                        "split=>//[|l]; last first.",
                        "VernacExtend",
                        "3763a4b8db689af316a7372b722bb29806ab4fb6"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "rewrite /getProtocol /getStatelet.",
                        "VernacExtend",
                        "2a624b3f8ed2cb60890f98119d86e3031fa09e35"
                    ]
                },
                {
                    "command": [
                        "case: (dom_find l (s1 \\+ s2))=>[|v]Z.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "-",
                        "VernacBullet",
                        "581cab4bf49fa4b495e569bbda96fc8d28fddcc0"
                    ]
                },
                {
                    "command": [
                        "by move/find_none: (Z); rewrite -Y; case: dom_find=>//->_; rewrite Z.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "move/find_some: (Z)=>D; rewrite Z; rewrite -Y in D=> E.",
                        "VernacExtend",
                        "9a27d4cdb663815a1a2248bb21e31e19d3d61cb9"
                    ]
                },
                {
                    "command": [
                        "case: dom_find D=>// p Z' _ _; rewrite Z'.",
                        "VernacExtend",
                        "90a2acb29b7a5304b0ab6ba5269c420638ddef63"
                    ]
                },
                {
                    "command": [
                        "rewrite findUnL // in Z; rewrite findUnL // J1 in Z'.",
                        "VernacExtend",
                        "2194fcb4d6d52cbae24a29f7ff14a3997f1912fd"
                    ]
                },
                {
                    "command": [
                        "by case: ifP Z Z'=>_ F1 F2; [move: (H1 l)|move: (H2 l)]; rewrite /getProtocol /getStatelet F1 F2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "by move=>z lc ls t/=; rewrite domUn inE=>/andP[_]/orP[];[move/K1|move/K2]; move/andP=>[A1 A2]; rewrite !domUn !inE A1 A2 V -?(orbC true).",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "coh_prec",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "move=>s1 s2 t1 t2 V C1 C2.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "case: C1 => H1 G1 K1 D1 _.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "case: C2 => H2 G2 K2 D2 _ H.",
                        "VernacExtend",
                        "e00fff71ff314c991514fc71c41a3556702e444a"
                    ]
                },
                {
                    "command": [
                        "by apply: (@dom_prec _ _ _ s1 s2 t1 t2)=>//z; rewrite -D1 -D2.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locE",
            "line_nb": 97,
            "steps": [
                {
                    "command": [
                        "move=>D V; rewrite /getStatelet; case:dom_find (D) =>//d->_ _.",
                        "VernacExtend",
                        "d7214ac8fd48f4d1cd143edd9d16f6d28386a302"
                    ]
                },
                {
                    "command": [
                        "by rewrite findU eqxx/= V /getLocal/= findU eqxx/==>->.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locE'",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "by move=>V; rewrite /getLocal findU eqxx/= V.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "locU",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "move=> /negbTE N V.",
                        "VernacExtend",
                        "b1b2cb7a3a617cba67460b4eca1f04de3c1cc716"
                    ]
                },
                {
                    "command": [
                        "by rewrite /getLocal findU/= N.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prEq",
            "line_nb": 112,
            "steps": [
                {
                    "command": [
                        "by rewrite /getProtocol findPt.",
                        "VernacExtend",
                        "ee1746465e986ababa06bb4e96ee76be726c914a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}