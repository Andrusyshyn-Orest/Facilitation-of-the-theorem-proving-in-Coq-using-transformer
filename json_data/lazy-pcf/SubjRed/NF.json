{
    "filename": "SubjRed/NF.v",
    "coq_project": "lazy-pcf",
    "vernac_cmds": [
        [
            "Require Import syntax.",
            "VernacRequire",
            "fade23789687b5b286a50d71d8c4dc25f4366224"
        ],
        [
            "Inductive F : tm -> Prop := | F_abs : forall (v : vari) (s : ty) (e : tm), F (abs v s e) | F_clos : forall (e e1 : tm) (v : vari) (s : ty), F e -> F (clos e v s e1).",
            "VernacInductive",
            "11da40a152e242dbc292f4426fc3437d6151f6da"
        ],
        [
            "Inductive Sno : tm -> Prop := | Sno_o : Sno o | Sno_s : forall e : tm, Sno e -> Sno (succ e).",
            "VernacInductive",
            "913b9cd451ecc9eec9efcbb74249ca992f3ee2ea"
        ],
        [
            "Inductive NF : tm -> Prop := | NF_ttt : NF ttt | NF_fff : NF fff | NF_Sno : forall e : tm, Sno e -> NF e | NF_F : forall e : tm, F e -> NF e.",
            "VernacInductive",
            "fb64925f62a527ee137cfe605dd66cffd79b05c5"
        ],
        [
            "Definition NFsucc (e : tm) := match e return Prop with | o => True | ttt => True | fff => True | abs v s e => True | appl e1 e2 => True | cond e1 e2 e3 => True | var v => True | succ n => Sno (succ n) | prd n => True | is_o n => True | Fix v s e => True | clos e v s e1 => True end.",
            "VernacDefinition",
            "6a51f675c01033e0dfcd9fadb1997067e5f4c49d"
        ],
        [
            "Goal forall e : tm, NF (succ e) -> Sno (succ e).",
            "VernacDefinition",
            "437c4f344d4d8c67cd2f9219e866acf271e3341c"
        ],
        [
            "intros e HNF.",
            "VernacExtend",
            "746e1fd3dccc98a2d322b2d08f04254563c4cfb9"
        ],
        [
            "change (NFsucc (succ e)) in |- *.",
            "VernacExtend",
            "91bd8402b029cbdc92da30be6de53095f9156851"
        ],
        [
            "elim HNF; simpl in |- *; intros; exact I || elim H; simpl in |- *; intros; exact I || apply Sno_s; assumption.",
            "VernacExtend",
            "f439270e95c616dd941608d73e7cff481324b35c"
        ],
        [
            "Save inv_NF_Sno.",
            "VernacEndProof",
            "01019a2ef5cac0ded85217f924b0dc4fc72e8bc3"
        ],
        [
            "Definition SnoSucc (e : tm) := match e return Prop with | o => True | ttt => True | fff => True | abs v s e => True | appl e1 e2 => True | cond e1 e2 e3 => True | var v => True | succ n => Sno n | prd n => True | is_o n => True | Fix v s e => True | clos e v s e1 => True end.",
            "VernacDefinition",
            "e5250d6cba1d13194e22b67e19a3bf070bbdd247"
        ],
        [
            "Goal forall e : tm, Sno (succ e) -> Sno e.",
            "VernacDefinition",
            "305ab3d5bc8dd96a11abc07286ea1527f38ff57c"
        ],
        [
            "intros e HSno.",
            "VernacExtend",
            "2c68d04adf6f57acbe65f5bb7fc89a377fc24f57"
        ],
        [
            "change (SnoSucc (succ e)) in |- *.",
            "VernacExtend",
            "98feaaf949159c57fbaf0aec781538146e4c64a5"
        ],
        [
            "elim HSno; simpl in |- *; intros; exact I || assumption.",
            "VernacExtend",
            "ba9749a7a492f05847329ce53423e807ddb416ce"
        ],
        [
            "Save inv_Sno_s.",
            "VernacEndProof",
            "f014676dff8ad99d9f21f32471e4d779eb441a78"
        ]
    ],
    "proofs": [
        {
            "name": "inv_NF_Sno",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros e HNF.",
                        "VernacExtend",
                        "746e1fd3dccc98a2d322b2d08f04254563c4cfb9"
                    ]
                },
                {
                    "command": [
                        "change (NFsucc (succ e)) in |- *.",
                        "VernacExtend",
                        "91bd8402b029cbdc92da30be6de53095f9156851"
                    ]
                },
                {
                    "command": [
                        "elim HNF; simpl in |- *; intros; exact I || elim H; simpl in |- *; intros; exact I || apply Sno_s; assumption.",
                        "VernacExtend",
                        "f439270e95c616dd941608d73e7cff481324b35c"
                    ]
                },
                {
                    "command": [
                        "Save inv_NF_Sno.",
                        "VernacEndProof",
                        "01019a2ef5cac0ded85217f924b0dc4fc72e8bc3"
                    ]
                }
            ]
        },
        {
            "name": "inv_Sno_s",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros e HSno.",
                        "VernacExtend",
                        "2c68d04adf6f57acbe65f5bb7fc89a377fc24f57"
                    ]
                },
                {
                    "command": [
                        "change (SnoSucc (succ e)) in |- *.",
                        "VernacExtend",
                        "98feaaf949159c57fbaf0aec781538146e4c64a5"
                    ]
                },
                {
                    "command": [
                        "elim HSno; simpl in |- *; intros; exact I || assumption.",
                        "VernacExtend",
                        "ba9749a7a492f05847329ce53423e807ddb416ce"
                    ]
                },
                {
                    "command": [
                        "Save inv_Sno_s.",
                        "VernacEndProof",
                        "f014676dff8ad99d9f21f32471e4d779eb441a78"
                    ]
                }
            ]
        }
    ]
}