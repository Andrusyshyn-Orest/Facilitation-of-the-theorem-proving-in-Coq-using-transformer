{
    "filename": "Sets.v",
    "coq_project": "zfc",
    "vernac_cmds": [
        [
            "Global Set Asymmetric Patterns.",
            "VernacSetOption",
            "2cc91d0a437fbd1f49bf43960caf4a2b10040c6b"
        ],
        [
            "Inductive Ens : Type := sup : forall A : Type, (A -> Ens) -> Ens.",
            "VernacInductive",
            "d7ad4805c394745ff7213382a731d520c6b5ae39"
        ],
        [
            "Inductive EXType (P : Type) (Q : P -> Prop) : Prop := EXTypei : forall x : P, Q x -> EXType P Q.",
            "VernacInductive",
            "dfa314aee975fd8bfe0fc7a977409ea9871564fe"
        ],
        [
            "Inductive prod_t (A B : Type) : Type := pair_t : A -> B -> prod_t A B.",
            "VernacInductive",
            "02304e21dbf730f50253cd1a0e468afce338d5aa"
        ],
        [
            "Inductive depprod (A : Type) (P : A -> Type) : Type := dep_i : forall x : A, P x -> depprod A P.",
            "VernacInductive",
            "996bac6334262522af7fde83b428ad9df0992a1e"
        ],
        [
            "Definition EQ : Ens -> Ens -> Prop.",
            "VernacDefinition",
            "921a249184818ec84b25991c3139b69deac6d0fa"
        ],
        [
            "simple induction 1; intros A f eq1.",
            "VernacExtend",
            "e03aa504d9b35dc740be9a8ac10273eea4575f07"
        ],
        [
            "simple induction 1; intros B g eq2.",
            "VernacExtend",
            "63e6d7f9c2fd5bf9aa08025b88b2236cc2c13bb6"
        ],
        [
            "apply and.",
            "VernacExtend",
            "9503040e1342a3c3c141c9ed230101a1b98ad393"
        ],
        [
            "exact (forall x : A, EXType _ (fun y : B => eq1 x (g y))).",
            "VernacExtend",
            "1fc60c8c85b9abc373fd89f52d75fa416358dee5"
        ],
        [
            "exact (forall y : B, EXType _ (fun x : A => eq1 x (g y))).",
            "VernacExtend",
            "fd92f0fb15843906675590ea6fb28886b3e879e3"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition IN (E1 E2 : Ens) : Prop := match E2 with | sup A f => EXType _ (fun y : A => EQ E1 (f y)) end.",
            "VernacDefinition",
            "a8ed7bd60e8d7f15ef5f12bee4c3f116ee097d48"
        ],
        [
            "Definition INC : Ens -> Ens -> Prop.",
            "VernacDefinition",
            "7292add0e69c4ca2d0431423e34141db217ee15a"
        ],
        [
            "intros E1 E2.",
            "VernacExtend",
            "c32f28f5a4594fe65c797fa0fba5c4aa7a86607e"
        ],
        [
            "exact (forall E : Ens, IN E E1 -> IN E E2).",
            "VernacExtend",
            "ff02a6af00ada1bef72b04a2a191f1a07127851b"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Theorem EQ_refl : forall E : Ens, EQ E E.",
            "VernacStartTheoremProof",
            "54d2dc2c98b54ead36c6d04d85645645f3b6074e"
        ],
        [
            "simple induction E.",
            "VernacExtend",
            "55db0c164ea3f21ff8ade1c6ef2b494fe4306191"
        ],
        [
            "intros A f HR.",
            "VernacExtend",
            "40e396feb4ef9de90dd650badc8edb9a2fe463c9"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "split; intros.",
            "VernacExtend",
            "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
        ],
        [
            "exists x; auto.",
            "VernacExtend",
            "d8b3edd09d34953d83a4fbc6350c30f804073b09"
        ],
        [
            "exists y; auto.",
            "VernacExtend",
            "2a5ece7ebb3072d93dd214864e7ff9b009d438fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem EQ_tran : forall E1 E2 E3 : Ens, EQ E1 E2 -> EQ E2 E3 -> EQ E1 E3.",
            "VernacStartTheoremProof",
            "81ad6812b3922a3942ab1257cf9bd8b6e6ba8dff"
        ],
        [
            "simple induction E1; intros A1 f1 r1; simple induction E2; intros A2 f2 r2; simple induction E3; intros A3 f3 r3; simpl in |- *; intros e1 e2.",
            "VernacExtend",
            "da9de4c5c8be17d9d9aa22f2c1c48e63023aa6e9"
        ],
        [
            "split; (elim e1; intros I1 I2; elim e2; intros I3 I4).",
            "VernacExtend",
            "d9e63414617bc53c7593afb482272b13b996b7ec"
        ],
        [
            "intros a1; elim (I1 a1); intros a2.",
            "VernacExtend",
            "f4dba077483dcdd5ad038a7de004255d1e9b3e90"
        ],
        [
            "elim (I3 a2); intros a3.",
            "VernacExtend",
            "94cb22e4bbac465ed06ce04b0c7e9f87ff4f884c"
        ],
        [
            "exists a3.",
            "VernacExtend",
            "cffed6104f10c38f7fb746da7acbe69ecc26eb6b"
        ],
        [
            "apply r1 with (f2 a2); auto.",
            "VernacExtend",
            "f3651741360d35bc594cb4fe48864b7a680b0760"
        ],
        [
            "intros a3; elim (I4 a3); intros a2; elim (I2 a2); intros a1; exists a1.",
            "VernacExtend",
            "18c82619f8b4f7e0abd0ad5f5b2a353275f8d705"
        ],
        [
            "apply r1 with (f2 a2); auto.",
            "VernacExtend",
            "f3651741360d35bc594cb4fe48864b7a680b0760"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem EQ_sym : forall E1 E2 : Ens, EQ E1 E2 -> EQ E2 E1.",
            "VernacStartTheoremProof",
            "68dee928be7a59b5960536e932efa63ed7952bbf"
        ],
        [
            "simple induction E1; intros A1 f1 r1; simple induction E2; intros A2 f2 r2; simpl in |- *; simple induction 1; intros e1 e2; split.",
            "VernacExtend",
            "3f30bfb6dcba80dd26ae79dd911e53b36c28f48d"
        ],
        [
            "intros a2; elim (e2 a2); intros a1 H1; exists a1; auto.",
            "VernacExtend",
            "b4be0856df22b7a0c42756103343c82a5b23f5d0"
        ],
        [
            "intros a1; elim (e1 a1); intros a2 H2; exists a2; auto.",
            "VernacExtend",
            "51c6fa07543c8d27df156c6c085e43e1f760e0b3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem EQ_INC : forall E E' : Ens, EQ E E' -> INC E E'.",
            "VernacStartTheoremProof",
            "175a7d87699436d492501d04dc3659791bc25b5b"
        ],
        [
            "simple induction E; intros A f r; simple induction E'; intros A' f' r'; simpl in |- *; simple induction 1; intros e1 e2; unfold INC in |- *; simpl in |- *.",
            "VernacExtend",
            "342dd022df9ef57a6168661f8177de5f760aaa0a"
        ],
        [
            "intros C; simple induction 1; intros a ea; elim (e1 a); intros a' ea'; exists a'.",
            "VernacExtend",
            "2fc2eaea34e9e8193a0a6934d75fbc52f05fb108"
        ],
        [
            "apply EQ_tran with (f a); assumption.",
            "VernacExtend",
            "67b40aeadd3753ecea4a6fa0ceafcca92a9ba637"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve EQ_sym EQ_refl EQ_INC: zfc.",
            "VernacHints",
            "68df9c18a88e73d3918673545b8b7087469ef0b6"
        ],
        [
            "Theorem INC_EQ : forall E E' : Ens, INC E E' -> INC E' E -> EQ E E'.",
            "VernacStartTheoremProof",
            "143a1f1f1f4942b69441fe18e4ca45ea3616e26b"
        ],
        [
            "simple induction E; intros A f r; simple induction E'; intros A' f' r'; unfold INC in |- *; simpl in |- *; intros I1 I2; split.",
            "VernacExtend",
            "9326c7240ab9d0c303eaaaa0915abe9ea1acba2b"
        ],
        [
            "intros a; apply I1.",
            "VernacExtend",
            "eed990e70cae9d90a69978ff4a7bb11eb78f0454"
        ],
        [
            "exists a; auto with zfc.",
            "VernacExtend",
            "eb5e793353b56ca84e3b357e848d07d9542e901f"
        ],
        [
            "intros a'; cut (EXType A (fun x : A => EQ (f' a') (f x))).",
            "VernacExtend",
            "d69da3d33a19bcb7b2240e51d22affb01581043e"
        ],
        [
            "simple induction 1; intros a ea; exists a; auto with zfc.",
            "VernacExtend",
            "45d9ee05f242279f880fabc54d0a252cc27687ff"
        ],
        [
            "apply I2; exists a'; auto with zfc.",
            "VernacExtend",
            "fb9b83eab036fbcaad6bceddf5aaf1ab2189893e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve INC_EQ: zfc.",
            "VernacHints",
            "d40fc779ce5bddd51486b76f6e455ff07cad896c"
        ],
        [
            "Theorem IN_sound_left : forall E E' E'' : Ens, EQ E E' -> IN E E'' -> IN E' E''.",
            "VernacStartTheoremProof",
            "ac039342443f09bcd048dd40eb88520abc9fbbcc"
        ],
        [
            "simple induction E''; intros A'' f'' r'' e; simpl in |- *; simple induction 1; intros a'' p; exists a''; apply EQ_tran with E; auto with zfc.",
            "VernacExtend",
            "3d504eb0eab90b3981363d2d57af32a9185869c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem IN_sound_right : forall E E' E'' : Ens, EQ E' E'' -> IN E E' -> IN E E''.",
            "VernacStartTheoremProof",
            "707bcc30706331bdf21d25c5901420b25ffb3187"
        ],
        [
            "simple induction E'; intros A' f' r'; simple induction E''; intros A'' f'' r''; simpl in |- *; simple induction 1; intros e1 e2; simple induction 1; intros a' e'; elim (e1 a'); intros a'' e''; exists a''; apply EQ_tran with (f' a'); assumption.",
            "VernacExtend",
            "301e44347d9ec8f703f3aaa3e7709b0eab0f3b9c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem INC_refl : forall E : Ens, INC E E.",
            "VernacStartTheoremProof",
            "1a373efef45a7cf9e1ab6792c31e16222d4c3fcd"
        ],
        [
            "unfold INC in |- *; auto with zfc.",
            "VernacExtend",
            "dc68b0932e6fcd3c2272ff7ba33dc4e581583d7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem INC_tran : forall E E' E'' : Ens, INC E E' -> INC E' E'' -> INC E E''.",
            "VernacStartTheoremProof",
            "65dcaa9304a069b1eab547b037c9c83615c615f4"
        ],
        [
            "unfold INC in |- *; auto with zfc.",
            "VernacExtend",
            "dc68b0932e6fcd3c2272ff7ba33dc4e581583d7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem INC_sound_left : forall E E' E'' : Ens, EQ E E' -> INC E E'' -> INC E' E''.",
            "VernacStartTheoremProof",
            "5fc61bacfdd9c50407f73f78ee0d5b30c8385bd3"
        ],
        [
            "simple induction E''; unfold INC in |- *; simpl in |- *; intros A f HR e H1 E0 i; apply H1.",
            "VernacExtend",
            "bda6939d20285dcc99b138e699f25b63ce9b5041"
        ],
        [
            "apply IN_sound_right with E'; auto with zfc.",
            "VernacExtend",
            "569ed89fbab8d2f41c45f7b418bdb7e53ace6e8f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem INC_sound_right : forall E E' E'' : Ens, EQ E' E'' -> INC E E' -> INC E E''.",
            "VernacStartTheoremProof",
            "1d52d68aed34bf154471d0d374a835cb16963ec2"
        ],
        [
            "simple induction E'; simple induction E''; unfold INC in |- *; simpl in |- *; intros.",
            "VernacExtend",
            "527ca4b2a62bf7e3e97402695d6dfff4dbff852b"
        ],
        [
            "elim (H2 E0); try assumption; intros.",
            "VernacExtend",
            "cf2d52522fb90f9c3bd542405063a49ba65bec03"
        ],
        [
            "elim H1; intros HA HB; elim (HA x); intros.",
            "VernacExtend",
            "924b8c5132d8a91f411fc23e860083372ab1aca9"
        ],
        [
            "exists x0; apply EQ_tran with (e x); auto with zfc.",
            "VernacExtend",
            "d467f4264dfa84c0f63010919d3faf3118158620"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "EQ",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "simple induction 1; intros A f eq1.",
                        "VernacExtend",
                        "e03aa504d9b35dc740be9a8ac10273eea4575f07"
                    ]
                },
                {
                    "command": [
                        "simple induction 1; intros B g eq2.",
                        "VernacExtend",
                        "63e6d7f9c2fd5bf9aa08025b88b2236cc2c13bb6"
                    ]
                },
                {
                    "command": [
                        "apply and.",
                        "VernacExtend",
                        "9503040e1342a3c3c141c9ed230101a1b98ad393"
                    ]
                },
                {
                    "command": [
                        "exact (forall x : A, EXType _ (fun y : B => eq1 x (g y))).",
                        "VernacExtend",
                        "1fc60c8c85b9abc373fd89f52d75fa416358dee5"
                    ]
                },
                {
                    "command": [
                        "exact (forall y : B, EXType _ (fun x : A => eq1 x (g y))).",
                        "VernacExtend",
                        "fd92f0fb15843906675590ea6fb28886b3e879e3"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "INC",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros E1 E2.",
                        "VernacExtend",
                        "c32f28f5a4594fe65c797fa0fba5c4aa7a86607e"
                    ]
                },
                {
                    "command": [
                        "exact (forall E : Ens, IN E E1 -> IN E E2).",
                        "VernacExtend",
                        "ff02a6af00ada1bef72b04a2a191f1a07127851b"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "EQ_refl",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "simple induction E.",
                        "VernacExtend",
                        "55db0c164ea3f21ff8ade1c6ef2b494fe4306191"
                    ]
                },
                {
                    "command": [
                        "intros A f HR.",
                        "VernacExtend",
                        "40e396feb4ef9de90dd650badc8edb9a2fe463c9"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "split; intros.",
                        "VernacExtend",
                        "3c0a2af2969d0c39838e9010244dfd28201b7f3e"
                    ]
                },
                {
                    "command": [
                        "exists x; auto.",
                        "VernacExtend",
                        "d8b3edd09d34953d83a4fbc6350c30f804073b09"
                    ]
                },
                {
                    "command": [
                        "exists y; auto.",
                        "VernacExtend",
                        "2a5ece7ebb3072d93dd214864e7ff9b009d438fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EQ_tran",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "simple induction E1; intros A1 f1 r1; simple induction E2; intros A2 f2 r2; simple induction E3; intros A3 f3 r3; simpl in |- *; intros e1 e2.",
                        "VernacExtend",
                        "da9de4c5c8be17d9d9aa22f2c1c48e63023aa6e9"
                    ]
                },
                {
                    "command": [
                        "split; (elim e1; intros I1 I2; elim e2; intros I3 I4).",
                        "VernacExtend",
                        "d9e63414617bc53c7593afb482272b13b996b7ec"
                    ]
                },
                {
                    "command": [
                        "intros a1; elim (I1 a1); intros a2.",
                        "VernacExtend",
                        "f4dba077483dcdd5ad038a7de004255d1e9b3e90"
                    ]
                },
                {
                    "command": [
                        "elim (I3 a2); intros a3.",
                        "VernacExtend",
                        "94cb22e4bbac465ed06ce04b0c7e9f87ff4f884c"
                    ]
                },
                {
                    "command": [
                        "exists a3.",
                        "VernacExtend",
                        "cffed6104f10c38f7fb746da7acbe69ecc26eb6b"
                    ]
                },
                {
                    "command": [
                        "apply r1 with (f2 a2); auto.",
                        "VernacExtend",
                        "f3651741360d35bc594cb4fe48864b7a680b0760"
                    ]
                },
                {
                    "command": [
                        "intros a3; elim (I4 a3); intros a2; elim (I2 a2); intros a1; exists a1.",
                        "VernacExtend",
                        "18c82619f8b4f7e0abd0ad5f5b2a353275f8d705"
                    ]
                },
                {
                    "command": [
                        "apply r1 with (f2 a2); auto.",
                        "VernacExtend",
                        "f3651741360d35bc594cb4fe48864b7a680b0760"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EQ_sym",
            "line_nb": 35,
            "steps": [
                {
                    "command": [
                        "simple induction E1; intros A1 f1 r1; simple induction E2; intros A2 f2 r2; simpl in |- *; simple induction 1; intros e1 e2; split.",
                        "VernacExtend",
                        "3f30bfb6dcba80dd26ae79dd911e53b36c28f48d"
                    ]
                },
                {
                    "command": [
                        "intros a2; elim (e2 a2); intros a1 H1; exists a1; auto.",
                        "VernacExtend",
                        "b4be0856df22b7a0c42756103343c82a5b23f5d0"
                    ]
                },
                {
                    "command": [
                        "intros a1; elim (e1 a1); intros a2 H2; exists a2; auto.",
                        "VernacExtend",
                        "51c6fa07543c8d27df156c6c085e43e1f760e0b3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "EQ_INC",
            "line_nb": 40,
            "steps": [
                {
                    "command": [
                        "simple induction E; intros A f r; simple induction E'; intros A' f' r'; simpl in |- *; simple induction 1; intros e1 e2; unfold INC in |- *; simpl in |- *.",
                        "VernacExtend",
                        "342dd022df9ef57a6168661f8177de5f760aaa0a"
                    ]
                },
                {
                    "command": [
                        "intros C; simple induction 1; intros a ea; elim (e1 a); intros a' ea'; exists a'.",
                        "VernacExtend",
                        "2fc2eaea34e9e8193a0a6934d75fbc52f05fb108"
                    ]
                },
                {
                    "command": [
                        "apply EQ_tran with (f a); assumption.",
                        "VernacExtend",
                        "67b40aeadd3753ecea4a6fa0ceafcca92a9ba637"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INC_EQ",
            "line_nb": 46,
            "steps": [
                {
                    "command": [
                        "simple induction E; intros A f r; simple induction E'; intros A' f' r'; unfold INC in |- *; simpl in |- *; intros I1 I2; split.",
                        "VernacExtend",
                        "9326c7240ab9d0c303eaaaa0915abe9ea1acba2b"
                    ]
                },
                {
                    "command": [
                        "intros a; apply I1.",
                        "VernacExtend",
                        "eed990e70cae9d90a69978ff4a7bb11eb78f0454"
                    ]
                },
                {
                    "command": [
                        "exists a; auto with zfc.",
                        "VernacExtend",
                        "eb5e793353b56ca84e3b357e848d07d9542e901f"
                    ]
                },
                {
                    "command": [
                        "intros a'; cut (EXType A (fun x : A => EQ (f' a') (f x))).",
                        "VernacExtend",
                        "d69da3d33a19bcb7b2240e51d22affb01581043e"
                    ]
                },
                {
                    "command": [
                        "simple induction 1; intros a ea; exists a; auto with zfc.",
                        "VernacExtend",
                        "45d9ee05f242279f880fabc54d0a252cc27687ff"
                    ]
                },
                {
                    "command": [
                        "apply I2; exists a'; auto with zfc.",
                        "VernacExtend",
                        "fb9b83eab036fbcaad6bceddf5aaf1ab2189893e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "IN_sound_left",
            "line_nb": 55,
            "steps": [
                {
                    "command": [
                        "simple induction E''; intros A'' f'' r'' e; simpl in |- *; simple induction 1; intros a'' p; exists a''; apply EQ_tran with E; auto with zfc.",
                        "VernacExtend",
                        "3d504eb0eab90b3981363d2d57af32a9185869c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "IN_sound_right",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "simple induction E'; intros A' f' r'; simple induction E''; intros A'' f'' r''; simpl in |- *; simple induction 1; intros e1 e2; simple induction 1; intros a' e'; elim (e1 a'); intros a'' e''; exists a''; apply EQ_tran with (f' a'); assumption.",
                        "VernacExtend",
                        "301e44347d9ec8f703f3aaa3e7709b0eab0f3b9c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INC_refl",
            "line_nb": 61,
            "steps": [
                {
                    "command": [
                        "unfold INC in |- *; auto with zfc.",
                        "VernacExtend",
                        "dc68b0932e6fcd3c2272ff7ba33dc4e581583d7c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INC_tran",
            "line_nb": 64,
            "steps": [
                {
                    "command": [
                        "unfold INC in |- *; auto with zfc.",
                        "VernacExtend",
                        "dc68b0932e6fcd3c2272ff7ba33dc4e581583d7c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INC_sound_left",
            "line_nb": 67,
            "steps": [
                {
                    "command": [
                        "simple induction E''; unfold INC in |- *; simpl in |- *; intros A f HR e H1 E0 i; apply H1.",
                        "VernacExtend",
                        "bda6939d20285dcc99b138e699f25b63ce9b5041"
                    ]
                },
                {
                    "command": [
                        "apply IN_sound_right with E'; auto with zfc.",
                        "VernacExtend",
                        "569ed89fbab8d2f41c45f7b418bdb7e53ace6e8f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "INC_sound_right",
            "line_nb": 71,
            "steps": [
                {
                    "command": [
                        "simple induction E'; simple induction E''; unfold INC in |- *; simpl in |- *; intros.",
                        "VernacExtend",
                        "527ca4b2a62bf7e3e97402695d6dfff4dbff852b"
                    ]
                },
                {
                    "command": [
                        "elim (H2 E0); try assumption; intros.",
                        "VernacExtend",
                        "cf2d52522fb90f9c3bd542405063a49ba65bec03"
                    ]
                },
                {
                    "command": [
                        "elim H1; intros HA HB; elim (HA x); intros.",
                        "VernacExtend",
                        "924b8c5132d8a91f411fc23e860083372ab1aca9"
                    ]
                },
                {
                    "command": [
                        "exists x0; apply EQ_tran with (e x); auto with zfc.",
                        "VernacExtend",
                        "d467f4264dfa84c0f63010919d3faf3118158620"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}