{
    "filename": "induc.v",
    "coq_project": "param-pi",
    "vernac_cmds": [
        [
            "Require Import processus.",
            "VernacRequire",
            "00d337055a6a8fffe8e0407c6758773714ce97d9"
        ],
        [
            "Theorem inp_ind : forall Pr : proc -> proc -> PP -> PP -> Prop, (forall (p q : PP) (x : VV) (P : proc), Pr (inp (pname p) x P) (subs_var_proc P (pname q) x) p q) -> (forall (P P' : proc) (p q : PP) (x y : VV) (t : type), (forall r : PP, sem (subs_var_proc P (pname r) x) (ainp p q) (subs_var_proc P' (pname r) y)) -> (forall r : PP, Pr (subs_var_proc P (pname r) x) (subs_var_proc P' (pname r) y) p q) -> Pr (res x t P) (res y t P') p q) -> (forall (P P' : proc) (p q : PP), sem (par (ban P) P) (ainp p q) P' -> Pr (par (ban P) P) P' p q -> Pr (ban P) P' p q) -> (forall (P P' Q : proc) (p q : PP), sem P (ainp p q) P' -> Pr P P' p q -> Pr (par P Q) (par P' Q) p q) -> (forall (P P' Q : proc) (p q : PP), sem P (ainp p q) P' -> Pr P P' p q -> Pr (par Q P) (par Q P') p q) -> (forall (P P' Q : proc) (p q : PP), sem P (ainp p q) P' -> Pr P P' p q -> Pr (sum P Q) P' p q) -> (forall (P P' Q : proc) (p q : PP), sem P (ainp p q) P' -> Pr P P' p q -> Pr (sum Q P) P' p q) -> (forall (P P' : proc) (p q r : PP), sem P (ainp p q) P' -> Pr P P' p q -> Pr (mat (pname r) (pname r) P) P' p q) -> forall (P P' : proc) (p q : PP), sem P (ainp p q) P' -> Pr P P' p q.",
            "VernacStartTheoremProof",
            "d9e8aa168d86deaa22ae542b68bc3f62bf91a46a"
        ],
        [
            "intros Pr ok_inp ok_res ok_ban ok_parl ok_parr ok_suml ok_sumr ok_mat.",
            "VernacExtend",
            "f133f4b9bfdfa0842b6b3100cb5ca6e5a2edc242"
        ],
        [
            "cut (forall (P : proc) (mu : act) (P' : proc), sem P mu P' -> forall p q : PP, mu = ainp p q -> Pr P P' p q).",
            "VernacExtend",
            "db8f8d3b466af53edad49b695cdd195388c160ae"
        ],
        [
            "intros cond P P' p q reduction.",
            "VernacExtend",
            "7c212cef54afb52c624b48d62a9f927a61dcf272"
        ],
        [
            "apply cond with (mu := ainp p q).",
            "VernacExtend",
            "b564e8cdb667cc0a3ce722780b91fd0034dc0807"
        ],
        [
            "exact reduction.",
            "VernacExtend",
            "735232ce9918c4824adea789cb347e9ef2feeb27"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros P mu P' reduction.",
            "VernacExtend",
            "8b0248041b221c171f078a71f3b161c17e651414"
        ],
        [
            "apply sem_ind with (P := fun (P : proc) (mu : act) (P' : proc) => forall p q : PP, mu = ainp p q -> Pr P P' p q).",
            "VernacExtend",
            "ba5ebfa8c2cde942ab38f550cc973db66ed1e290"
        ],
        [
            "intros pp qq xx QQ ppp qqq inp_is_inp.",
            "VernacExtend",
            "bbce7d44c92d8927cd30cf551dc369c871e8bc34"
        ],
        [
            "injection inp_is_inp.",
            "VernacExtend",
            "6be4d6755ec7f2c9c74c833e02ce460a3ea7f6e4"
        ],
        [
            "intros qq_is_qqq pp_is_ppp; rewrite qq_is_qqq; rewrite pp_is_ppp.",
            "VernacExtend",
            "cb4c352fe8718f4b1f4761633244573c396e8b42"
        ],
        [
            "apply ok_inp.",
            "VernacExtend",
            "9160b347bf6f7c499152d17563667b7ee8032a6e"
        ],
        [
            "intros p q Q pp qq absurd.",
            "VernacExtend",
            "cbe981d11190fe7800909db1ce0149b5bd8b7d85"
        ],
        [
            "discriminate absurd.",
            "VernacExtend",
            "1826c7b546a7760413dc1636f39a6276f0235c1d"
        ],
        [
            "intros until q0.",
            "VernacExtend",
            "ced0a37fbe5d6676ac1255acb1f6c00d99b7b99d"
        ],
        [
            "intro absurd; discriminate absurd.",
            "VernacExtend",
            "02353c303a122479a37f04e66b4b9957a549c1b5"
        ],
        [
            "intros until q0; intro absurd; discriminate absurd.",
            "VernacExtend",
            "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
        ],
        [
            "intros until q0; intro absurd; discriminate absurd.",
            "VernacExtend",
            "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
        ],
        [
            "intros until q0; intro absurd; discriminate absurd.",
            "VernacExtend",
            "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
        ],
        [
            "intros until q0; intro absurd; discriminate absurd.",
            "VernacExtend",
            "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
        ],
        [
            "intros PP PP' nu x y t cond_sem cond_pr.",
            "VernacExtend",
            "e46277e28065bf1c2b2e3c433c2edf055ff01b0c"
        ],
        [
            "intros p q nu_is.",
            "VernacExtend",
            "3fb369a61bfa2d47c658fae67f0c54e2ff04aa75"
        ],
        [
            "apply ok_res.",
            "VernacExtend",
            "0862d6d707f614c716d1a79208054c9f0c0d6c96"
        ],
        [
            "intro r.",
            "VernacExtend",
            "67f46246e3b1524d7b1bc01bb086bd08cb9cca8d"
        ],
        [
            "rewrite nu_is in cond_sem.",
            "VernacExtend",
            "8df51b3515bfc5cf648a2ca16316da1ba41bdfc6"
        ],
        [
            "apply cond_sem.",
            "VernacExtend",
            "996327e00aa887bd8e2584873baab22141338cf4"
        ],
        [
            "intro r.",
            "VernacExtend",
            "67f46246e3b1524d7b1bc01bb086bd08cb9cca8d"
        ],
        [
            "rewrite nu_is in cond_pr.",
            "VernacExtend",
            "4a7351463e5a6e9e1288a6870bb421e75af8fb65"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros PP PP' mu' reduction' cond_pr p q mu_is_inp.",
            "VernacExtend",
            "d99661ce20346ef53039c494e9f9d926ada9688c"
        ],
        [
            "apply ok_ban.",
            "VernacExtend",
            "4e83ea9d65b92913be88a5069f2fba71c6aff2f1"
        ],
        [
            "rewrite mu_is_inp in reduction'.",
            "VernacExtend",
            "6564706dc7a44cc6d37424beec094ea5603eefcd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' Q mu' cond_fresh reduction' cond_pr p q mu_is_inp.",
            "VernacExtend",
            "b3d590c4f5424daa416539539a2a088013f5a8be"
        ],
        [
            "apply ok_parl.",
            "VernacExtend",
            "263432b3ec52888969061497846ba29b7484128c"
        ],
        [
            "rewrite mu_is_inp in reduction'; assumption.",
            "VernacExtend",
            "780a97c7c2db2b30994337b0acd46c9aa97d2a57"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' Q mu' cond_fresh reduction' cond_pr p q mu_is_inp.",
            "VernacExtend",
            "b3d590c4f5424daa416539539a2a088013f5a8be"
        ],
        [
            "apply ok_parr.",
            "VernacExtend",
            "7800252d7e1866e30e22fce73e1086090db12fb7"
        ],
        [
            "rewrite mu_is_inp in reduction'.",
            "VernacExtend",
            "6564706dc7a44cc6d37424beec094ea5603eefcd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' Q mu' reduction' cond_pr.",
            "VernacExtend",
            "36ec4cacefb809378d3c0488fd062e503d539619"
        ],
        [
            "intros p q mu_is_inp; apply ok_suml.",
            "VernacExtend",
            "45d9bdb980c7e0c392b5aa3b0ebe9bcf355f818d"
        ],
        [
            "rewrite mu_is_inp in reduction'.",
            "VernacExtend",
            "6564706dc7a44cc6d37424beec094ea5603eefcd"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' Q mu' reduction' cond_pr p q mu_is_inp.",
            "VernacExtend",
            "74421bd11e5586fba35f4fb5ac62503d37da4ac5"
        ],
        [
            "rewrite mu_is_inp in reduction'.",
            "VernacExtend",
            "6564706dc7a44cc6d37424beec094ea5603eefcd"
        ],
        [
            "apply ok_sumr.",
            "VernacExtend",
            "5fa39c403845accf9436a7ca3b6f9d804b898a55"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' p mu' reduction' cond_pr p' q mu_is_inp.",
            "VernacExtend",
            "48d28160115bb8b0240b3fe28792d975121904e9"
        ],
        [
            "rewrite mu_is_inp in reduction'.",
            "VernacExtend",
            "6564706dc7a44cc6d37424beec094ea5603eefcd"
        ],
        [
            "apply ok_mat.",
            "VernacExtend",
            "3bf950d94cb49ce6588c0dfc520d909516b6aff2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem out_ind : forall Pr : proc -> proc -> PP -> PP -> Prop, (forall (p q : PP) (P : proc), Pr (out (pname p) (pname q) P) P p q) -> (forall (P P' : proc) (p q : PP) (x y : VV) (t : type), (forall r : PP, sem (subs_var_proc P (pname r) x) (aout p q) (subs_var_proc P' (pname r) y)) -> (forall r : PP, Pr (subs_var_proc P (pname r) x) (subs_var_proc P' (pname r) y) p q) -> Pr (res x t P) (res y t P') p q) -> (forall (P P' : proc) (p q : PP), sem (par (ban P) P) (aout p q) P' -> Pr (par (ban P) P) P' p q -> Pr (ban P) P' p q) -> (forall (P P' Q : proc) (p q : PP), sem P (aout p q) P' -> Pr P P' p q -> Pr (par P Q) (par P' Q) p q) -> (forall (P P' Q : proc) (p q : PP), sem P (aout p q) P' -> Pr P P' p q -> Pr (par Q P) (par Q P') p q) -> (forall (P P' Q : proc) (p q : PP), sem P (aout p q) P' -> Pr P P' p q -> Pr (sum P Q) P' p q) -> (forall (P P' Q : proc) (p q : PP), sem P (aout p q) P' -> Pr P P' p q -> Pr (sum Q P) P' p q) -> (forall (P P' : proc) (p q r : PP), sem P (aout p q) P' -> Pr P P' p q -> Pr (mat (pname r) (pname r) P) P' p q) -> forall (P P' : proc) (p q : PP), sem P (aout p q) P' -> Pr P P' p q.",
            "VernacStartTheoremProof",
            "8fc50b164a252d86ee26506f8fdebc09cd37e42d"
        ],
        [
            "intros Pr ok_inp ok_res ok_ban ok_parl ok_parr ok_suml ok_sumr ok_mat.",
            "VernacExtend",
            "f133f4b9bfdfa0842b6b3100cb5ca6e5a2edc242"
        ],
        [
            "cut (forall (P : proc) (mu : act) (P' : proc), sem P mu P' -> forall p q : PP, mu = aout p q -> Pr P P' p q).",
            "VernacExtend",
            "df3de1789fc19571515aa1669f744d6510040c40"
        ],
        [
            "intros cond P P' p q reduction.",
            "VernacExtend",
            "7c212cef54afb52c624b48d62a9f927a61dcf272"
        ],
        [
            "apply cond with (mu := aout p q).",
            "VernacExtend",
            "e85eaa2497ca8ed00514426073cd26ec1a9fa078"
        ],
        [
            "exact reduction.",
            "VernacExtend",
            "735232ce9918c4824adea789cb347e9ef2feeb27"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros P mu P' reduction.",
            "VernacExtend",
            "8b0248041b221c171f078a71f3b161c17e651414"
        ],
        [
            "apply sem_ind with (P := fun (P : proc) (mu : act) (P' : proc) => forall p q : PP, mu = aout p q -> Pr P P' p q).",
            "VernacExtend",
            "3069ab3bb18370518eeac841c7ef43ef454b8c1a"
        ],
        [
            "intros until q0; intro absurd; discriminate absurd.",
            "VernacExtend",
            "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
        ],
        [
            "intros p q Q p0 q0 out_is_out.",
            "VernacExtend",
            "5303ea848289e836d01366bf26ebea0e225ea7ac"
        ],
        [
            "injection out_is_out.",
            "VernacExtend",
            "31af4753f7266c6612a37b2c0953cc1e3c8f961e"
        ],
        [
            "intros q_is_q0 p_is_p0.",
            "VernacExtend",
            "49c93f626e16799b29bde56d3a2c749e51fabed3"
        ],
        [
            "rewrite q_is_q0.",
            "VernacExtend",
            "f63f75103eec1709ffcc184b385c45c0efbfade4"
        ],
        [
            "rewrite p_is_p0.",
            "VernacExtend",
            "aa94ce68a35462b4d27de0aea26b74447c9d9236"
        ],
        [
            "apply ok_inp.",
            "VernacExtend",
            "9160b347bf6f7c499152d17563667b7ee8032a6e"
        ],
        [
            "intros until q0.",
            "VernacExtend",
            "ced0a37fbe5d6676ac1255acb1f6c00d99b7b99d"
        ],
        [
            "intro absurd; discriminate absurd.",
            "VernacExtend",
            "02353c303a122479a37f04e66b4b9957a549c1b5"
        ],
        [
            "intros until q0; intro absurd; discriminate absurd.",
            "VernacExtend",
            "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
        ],
        [
            "intros until q0; intro absurd; discriminate absurd.",
            "VernacExtend",
            "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
        ],
        [
            "intros until q0; intro absurd; discriminate absurd.",
            "VernacExtend",
            "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
        ],
        [
            "intros until q0; intro absurd; discriminate absurd.",
            "VernacExtend",
            "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
        ],
        [
            "intros PP PP' mu' x y t cond_red cond_pr p q mu_is.",
            "VernacExtend",
            "8857667d95ee74c083638264f2fd2c1efeb060fc"
        ],
        [
            "apply ok_res.",
            "VernacExtend",
            "0862d6d707f614c716d1a79208054c9f0c0d6c96"
        ],
        [
            "intro r.",
            "VernacExtend",
            "67f46246e3b1524d7b1bc01bb086bd08cb9cca8d"
        ],
        [
            "rewrite mu_is in cond_red.",
            "VernacExtend",
            "10ea4af773e0bc486da1829e2e30581b08412746"
        ],
        [
            "apply cond_red.",
            "VernacExtend",
            "145544a8ccbf868d45aed9b01fb5cbb503e1141b"
        ],
        [
            "intro r.",
            "VernacExtend",
            "67f46246e3b1524d7b1bc01bb086bd08cb9cca8d"
        ],
        [
            "rewrite mu_is in cond_pr.",
            "VernacExtend",
            "ae5c47cc75da1a4ace2b8a542d67fabcaaa6545e"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros PP PP' mu' red cond_pr p q mu_is.",
            "VernacExtend",
            "3edb6cf45957eba4034591ef6fec5ce2b6fbb8e3"
        ],
        [
            "apply ok_ban.",
            "VernacExtend",
            "4e83ea9d65b92913be88a5069f2fba71c6aff2f1"
        ],
        [
            "rewrite mu_is in red.",
            "VernacExtend",
            "a37ffac27e9056678cb320fd8e738f10c530a9e8"
        ],
        [
            "exact red.",
            "VernacExtend",
            "f0456c584c4ae8575d0b1bd435a9a9ce351eadf6"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' Q mu' cond red cond_pr p q mu_is.",
            "VernacExtend",
            "4801e63e20f2ab06b3b3d3206bb14ba796682b56"
        ],
        [
            "apply ok_parl.",
            "VernacExtend",
            "263432b3ec52888969061497846ba29b7484128c"
        ],
        [
            "rewrite mu_is in red; exact red.",
            "VernacExtend",
            "c90cff7561e929dc58b0638353611db0e736c290"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' Q mu' cond red cond_pr p q mu_is.",
            "VernacExtend",
            "4801e63e20f2ab06b3b3d3206bb14ba796682b56"
        ],
        [
            "apply ok_parr.",
            "VernacExtend",
            "7800252d7e1866e30e22fce73e1086090db12fb7"
        ],
        [
            "rewrite mu_is in red; exact red.",
            "VernacExtend",
            "c90cff7561e929dc58b0638353611db0e736c290"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' Q mu' red cond_pr p q mu_is.",
            "VernacExtend",
            "126338954aff519ae8c8ae049bf22ca82f84274c"
        ],
        [
            "apply ok_suml.",
            "VernacExtend",
            "6d83e5b28f06a6ac509e4e2008f7a917fabf286e"
        ],
        [
            "rewrite mu_is in red.",
            "VernacExtend",
            "a37ffac27e9056678cb320fd8e738f10c530a9e8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cond_pr; assumption.",
            "VernacExtend",
            "d4524a02900c56316257a895898b5b97a7fc7709"
        ],
        [
            "intros PP PP' Q mu' red cond_pr p q mu_is.",
            "VernacExtend",
            "126338954aff519ae8c8ae049bf22ca82f84274c"
        ],
        [
            "apply ok_sumr.",
            "VernacExtend",
            "5fa39c403845accf9436a7ca3b6f9d804b898a55"
        ],
        [
            "rewrite mu_is in red; exact red.",
            "VernacExtend",
            "c90cff7561e929dc58b0638353611db0e736c290"
        ],
        [
            "apply cond_pr; assumption.",
            "VernacExtend",
            "d4524a02900c56316257a895898b5b97a7fc7709"
        ],
        [
            "intros PP PP' p mu' red cond_pr p' q mu_is.",
            "VernacExtend",
            "388826c224eb1c306fb797e000a3616316bf49c3"
        ],
        [
            "apply ok_mat.",
            "VernacExtend",
            "3bf950d94cb49ce6588c0dfc520d909516b6aff2"
        ],
        [
            "rewrite mu_is in red.",
            "VernacExtend",
            "a37ffac27e9056678cb320fd8e738f10c530a9e8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem bout_ind : forall Pr : proc -> proc -> PP -> PP -> type -> Prop, (forall (p q : PP) (x : VV) (t : type) (P P' : proc), fresh q P -> q <> p -> sem (subs_var_proc P (pname q) x) (aout p q) P' -> Pr (res x t P) P' p q t) -> (forall (p q : PP) (x y : VV) (t t' : type) (P P' : proc), (forall r : PP, sem (subs_var_proc P (pname r) x) (about p q t) (subs_var_proc P' (pname r) y)) -> (forall r : PP, Pr (subs_var_proc P (pname r) x) (subs_var_proc P' (pname r) y) p q t) -> Pr (res x t' P) (res y t' P') p q t) -> (forall (P P' : proc) (p q : PP) (t : type), sem (par (ban P) P) (about p q t) P' -> Pr (par (ban P) P) P' p q t -> Pr (ban P) P' p q t) -> (forall (P P' Q : proc) (p q : PP) (t : type), fresh q Q -> sem P (about p q t) P' -> Pr P P' p q t -> Pr (par P Q) (par P' Q) p q t) -> (forall (P P' Q : proc) (p q : PP) (t : type), fresh q Q -> sem P (about p q t) P' -> Pr P P' p q t -> Pr (par Q P) (par Q P') p q t) -> (forall (P P' Q : proc) (p q : PP) (t : type), sem P (about p q t) P' -> Pr P P' p q t -> Pr (sum P Q) P' p q t) -> (forall (P P' Q : proc) (p q : PP) (t : type), sem P (about p q t) P' -> Pr P P' p q t -> Pr (sum Q P) P' p q t) -> (forall (P P' : proc) (p q r : PP) (t : type), sem P (about p q t) P' -> Pr P P' p q t -> Pr (mat (pname r) (pname r) P) P' p q t) -> forall (P P' : proc) (p q : PP) (t : type), sem P (about p q t) P' -> Pr P P' p q t.",
            "VernacStartTheoremProof",
            "a026eefe646bccd791a6cabcf16961f155c79819"
        ],
        [
            "intros Pr ok_bout ok_res ok_ban ok_parl ok_parr ok_suml ok_sumr ok_mat.",
            "VernacExtend",
            "6907504075b5d17a2e6b1b38fa5cfa0476bdc617"
        ],
        [
            "cut (forall (P : proc) (mu : act) (P' : proc), sem P mu P' -> forall (p q : PP) (t : type), mu = about p q t -> Pr P P' p q t).",
            "VernacExtend",
            "94d552eabdee5f6d6389737a674d6b5b7f715ac3"
        ],
        [
            "intros cond P P' p q t reduction.",
            "VernacExtend",
            "84afa7828634af189552c8df9d2054b366a98cad"
        ],
        [
            "apply cond with (mu := about p q t).",
            "VernacExtend",
            "4203ca0a76a793e703d2042723b4b3275a67fe20"
        ],
        [
            "exact reduction.",
            "VernacExtend",
            "735232ce9918c4824adea789cb347e9ef2feeb27"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros P mu P' reduction.",
            "VernacExtend",
            "8b0248041b221c171f078a71f3b161c17e651414"
        ],
        [
            "apply sem_ind with (P := fun (P : proc) (mu : act) (P' : proc) => forall (p q : PP) (t : type), mu = about p q t -> Pr P P' p q t).",
            "VernacExtend",
            "9ef7fdd201cd39edf748a8c818604a78a55b1108"
        ],
        [
            "intros until t; intro absurd; discriminate absurd.",
            "VernacExtend",
            "be455284f92f2a7b253ec0b36eaf5afdd97d58b2"
        ],
        [
            "intros until t; intro absurd; discriminate absurd.",
            "VernacExtend",
            "be455284f92f2a7b253ec0b36eaf5afdd97d58b2"
        ],
        [
            "intros until t; intro absurd; discriminate absurd.",
            "VernacExtend",
            "be455284f92f2a7b253ec0b36eaf5afdd97d58b2"
        ],
        [
            "intros until t; intro absurd; discriminate absurd.",
            "VernacExtend",
            "be455284f92f2a7b253ec0b36eaf5afdd97d58b2"
        ],
        [
            "intros PP PP' p q x t fresh_q p_not_q reduction' cond_pr p0 q0 t0 bout_is_bout.",
            "VernacExtend",
            "0c8bb56865a7dd2078767f55f121317a8a84aef2"
        ],
        [
            "injection bout_is_bout.",
            "VernacExtend",
            "aaf1fa84f04e94368069e5fe86bbc4c6993d3729"
        ],
        [
            "intros t_is_t0 q_is_q0 p_is_p0.",
            "VernacExtend",
            "f30d1b1792de33b4cf27bcd57b3577dda76dfc32"
        ],
        [
            "rewrite t_is_t0.",
            "VernacExtend",
            "7e97e30fc42ca8ca3c2825b775c163f15174a189"
        ],
        [
            "apply ok_bout.",
            "VernacExtend",
            "19d5552f5d22f124360ab38b2f8a318b364cdc33"
        ],
        [
            "rewrite <- q_is_q0.",
            "VernacExtend",
            "3018a9423a1a9d284e922f7f031c8d3ef10034ef"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite <- q_is_q0; rewrite <- p_is_p0.",
            "VernacExtend",
            "b5313461feb0efcdc39191c8bc12aaa30a4c28c7"
        ],
        [
            "red in |- *; intro; elim p_not_q; symmetry in |- *; assumption.",
            "VernacExtend",
            "16672340550701461be611252b5502961da2718b"
        ],
        [
            "rewrite p_is_p0 in reduction'; rewrite q_is_q0 in reduction'.",
            "VernacExtend",
            "07d0f3ef8c2859381ec55ba423fbd89e8cd75c7f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros until t0; intro absurd; discriminate absurd.",
            "VernacExtend",
            "475e946db6650c1eeaec64587fbb53f85579afb2"
        ],
        [
            "intros until t0; intro absurd; discriminate absurd.",
            "VernacExtend",
            "475e946db6650c1eeaec64587fbb53f85579afb2"
        ],
        [
            "intros PP PP' mu' x y t cond_red cond_pr p q t' mu_is.",
            "VernacExtend",
            "cb5fb845a5aa28f1bafff4743aac08ce5b557a2c"
        ],
        [
            "apply ok_res.",
            "VernacExtend",
            "0862d6d707f614c716d1a79208054c9f0c0d6c96"
        ],
        [
            "intro r.",
            "VernacExtend",
            "67f46246e3b1524d7b1bc01bb086bd08cb9cca8d"
        ],
        [
            "rewrite mu_is in cond_red.",
            "VernacExtend",
            "10ea4af773e0bc486da1829e2e30581b08412746"
        ],
        [
            "apply cond_red.",
            "VernacExtend",
            "145544a8ccbf868d45aed9b01fb5cbb503e1141b"
        ],
        [
            "intro r.",
            "VernacExtend",
            "67f46246e3b1524d7b1bc01bb086bd08cb9cca8d"
        ],
        [
            "rewrite mu_is in cond_pr.",
            "VernacExtend",
            "ae5c47cc75da1a4ace2b8a542d67fabcaaa6545e"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros PP PP' mu' red cond_pr p q t mu''.",
            "VernacExtend",
            "19291489b98ce92e981f05d052405bbb26d46720"
        ],
        [
            "apply ok_ban.",
            "VernacExtend",
            "4e83ea9d65b92913be88a5069f2fba71c6aff2f1"
        ],
        [
            "rewrite mu'' in red; assumption.",
            "VernacExtend",
            "564b87477a8814c6aceed405cbdea1aa03cd3143"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' Q mu' cond red cond_pr p q t mu_is.",
            "VernacExtend",
            "83671bc0bf32d877deceade01804526d6810bcf9"
        ],
        [
            "apply ok_parl.",
            "VernacExtend",
            "263432b3ec52888969061497846ba29b7484128c"
        ],
        [
            "apply cond with (p := p) (t := t).",
            "VernacExtend",
            "dec723986c7670f2d454646f4d118dff7ee2d442"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite mu_is in red.",
            "VernacExtend",
            "a37ffac27e9056678cb320fd8e738f10c530a9e8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' Q mu' cond red cond_pr p q t mu_is.",
            "VernacExtend",
            "83671bc0bf32d877deceade01804526d6810bcf9"
        ],
        [
            "apply ok_parr.",
            "VernacExtend",
            "7800252d7e1866e30e22fce73e1086090db12fb7"
        ],
        [
            "apply cond with (p := p) (t := t).",
            "VernacExtend",
            "dec723986c7670f2d454646f4d118dff7ee2d442"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "rewrite mu_is in red.",
            "VernacExtend",
            "a37ffac27e9056678cb320fd8e738f10c530a9e8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' Q mu' red cond_pr p q t mu_is.",
            "VernacExtend",
            "002db73d452612ef5a7721f00a301d6852b5a72f"
        ],
        [
            "apply ok_suml.",
            "VernacExtend",
            "6d83e5b28f06a6ac509e4e2008f7a917fabf286e"
        ],
        [
            "rewrite mu_is in red; assumption.",
            "VernacExtend",
            "030170ea05f89ffb52d88f599b89085bd8d51376"
        ],
        [
            "apply cond_pr.",
            "VernacExtend",
            "af62ac82fd25d3da54e53b69580c2687c026a34c"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' Q mu' red cond_pr p q t mu_is.",
            "VernacExtend",
            "002db73d452612ef5a7721f00a301d6852b5a72f"
        ],
        [
            "apply ok_sumr.",
            "VernacExtend",
            "5fa39c403845accf9436a7ca3b6f9d804b898a55"
        ],
        [
            "rewrite mu_is in red; assumption.",
            "VernacExtend",
            "030170ea05f89ffb52d88f599b89085bd8d51376"
        ],
        [
            "apply cond_pr; assumption.",
            "VernacExtend",
            "d4524a02900c56316257a895898b5b97a7fc7709"
        ],
        [
            "intros PP PP' q mu' red cond_pr p0 q' t mu''.",
            "VernacExtend",
            "d63fcc4fd594a167a014800df3ba9817b7df568e"
        ],
        [
            "apply ok_mat.",
            "VernacExtend",
            "3bf950d94cb49ce6588c0dfc520d909516b6aff2"
        ],
        [
            "rewrite mu'' in red; assumption.",
            "VernacExtend",
            "564b87477a8814c6aceed405cbdea1aa03cd3143"
        ],
        [
            "apply cond_pr; assumption.",
            "VernacExtend",
            "d4524a02900c56316257a895898b5b97a7fc7709"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem tau_ind : forall Pr : proc -> proc -> Prop, (forall (P P' Q Q' : proc) (p q : PP), sem P (ainp p q) P' -> sem Q (aout p q) Q' -> Pr (par P Q) (par P' Q')) -> (forall (P P' Q Q' : proc) (p q : PP), sem P (ainp p q) P' -> sem Q (aout p q) Q' -> Pr (par Q P) (par Q' P')) -> (forall (P P' Q Q' : proc) (p q r : PP) (t : type) (x : VV), fresh q P -> freshvar x P' -> freshvar x Q' -> sem P (ainp p q) P' -> sem Q (about p r t) Q' -> Pr (par P Q) (res x t (par (subs_par_proc P' (vname x) q) (subs_par_proc Q' (vname x) r)))) -> (forall (P P' Q Q' : proc) (p q r : PP) (t : type) (x : VV), fresh q P -> freshvar x P' -> freshvar x Q' -> sem P (ainp p q) P' -> sem Q (about p r t) Q' -> Pr (par Q P) (res x t (par (subs_par_proc Q' (vname x) r) (subs_par_proc P' (vname x) q)))) -> (forall (x y : VV) (t' : type) (P P' : proc), (forall r : PP, sem (subs_var_proc P (pname r) x) tau (subs_var_proc P' (pname r) y)) -> (forall r : PP, Pr (subs_var_proc P (pname r) x) (subs_var_proc P' (pname r) y)) -> Pr (res x t' P) (res y t' P')) -> (forall P P' : proc, sem (par (ban P) P) tau P' -> Pr (par (ban P) P) P' -> Pr (ban P) P') -> (forall P P' Q : proc, sem P tau P' -> Pr P P' -> Pr (par P Q) (par P' Q)) -> (forall P P' Q : proc, sem P tau P' -> Pr P P' -> Pr (par Q P) (par Q P')) -> (forall P P' Q : proc, sem P tau P' -> Pr P P' -> Pr (sum P Q) P') -> (forall P P' Q : proc, sem P tau P' -> Pr P P' -> Pr (sum Q P) P') -> (forall (P P' : proc) (r : PP), sem P tau P' -> Pr P P' -> Pr (mat (pname r) (pname r) P) P') -> forall P P' : proc, sem P tau P' -> Pr P P'.",
            "VernacStartTheoremProof",
            "39100c4b0306e3e46219fee6b5acf6a6837f93b3"
        ],
        [
            "intros Pr ok_coml ok_comr ok_closel ok_closer ok_res ok_ban ok_parl ok_parr ok_suml ok_sumr ok_mat.",
            "VernacExtend",
            "84bb4ec3e272d72de5e33d9993ef72a067605b6d"
        ],
        [
            "cut (forall (P : proc) (mu : act) (P' : proc), sem P mu P' -> mu = tau -> Pr P P').",
            "VernacExtend",
            "0b8b1a7cac04688b039e314bfeee1b0975b7271f"
        ],
        [
            "intros cond P P' reduction.",
            "VernacExtend",
            "b815e0ebb0c60629ae6689defbbb6c6d3dfdff2b"
        ],
        [
            "apply cond with (mu := tau).",
            "VernacExtend",
            "2809df08eb536d7bae0cb1466c987a4a3a29ba70"
        ],
        [
            "exact reduction.",
            "VernacExtend",
            "735232ce9918c4824adea789cb347e9ef2feeb27"
        ],
        [
            "reflexivity.",
            "VernacExtend",
            "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
        ],
        [
            "intros P mu P' reduction.",
            "VernacExtend",
            "8b0248041b221c171f078a71f3b161c17e651414"
        ],
        [
            "apply sem_ind with (P := fun (P : proc) (mu : act) (P' : proc) => mu = tau -> Pr P P').",
            "VernacExtend",
            "32edee1b90e77352663b7a88f9df5fd16c8eece2"
        ],
        [
            "intros until Q; intro absurd; discriminate absurd.",
            "VernacExtend",
            "cbead0560f5223d26d55f98f2e2718f5c3152fe2"
        ],
        [
            "intros until Q; intro absurd; discriminate absurd.",
            "VernacExtend",
            "cbead0560f5223d26d55f98f2e2718f5c3152fe2"
        ],
        [
            "intros PP PP' Q Q' p q redinp boom redout bam ok.",
            "VernacExtend",
            "84139fea4e773e331a76973a015a4fce4cb527b5"
        ],
        [
            "apply ok_coml with (p := p) (q := q).",
            "VernacExtend",
            "653bfed0afba02fe1fd16c93e415c649c5e9cb8f"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' Q Q' p q redout boom redinp bam ok.",
            "VernacExtend",
            "903c18c101c15967054d4a68e16cb8fd25bee564"
        ],
        [
            "apply ok_comr with (p := p) (q := q).",
            "VernacExtend",
            "a1a1f23128bd291952639a6d736b585c38c814d2"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros z0 z1 z2 z3 z4 z5 z6 z7 z8 absurd.",
            "VernacExtend",
            "db7e8ae89e2d26b14eb7c3fc82eaaa3d532f3521"
        ],
        [
            "intro absurd'; discriminate absurd'.",
            "VernacExtend",
            "cddaf9ef76a830c4f6d400cebd5287e4ec4638b7"
        ],
        [
            "intros PP PP' Q Q' p q r t x fresh_q fresh_P' fresh_Q' redinp boom redout bam ok.",
            "VernacExtend",
            "34d7f0d91dd464cfd70b92c81e7c80721b867ba3"
        ],
        [
            "apply ok_closel with (p := p) (q := q) (r := r) (t := t) (x := x).",
            "VernacExtend",
            "3316ca359377786130cd058fbe19c5db8d307559"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' Q Q' p q r t x fresh_q fresh_P' fresh_Q' redinp boom redout bam ok.",
            "VernacExtend",
            "34d7f0d91dd464cfd70b92c81e7c80721b867ba3"
        ],
        [
            "apply ok_closer with (p := p).",
            "VernacExtend",
            "be5d6075c21143663c3be623ff356678c440f464"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' mu' x y t cond_red cond_pr mu_is.",
            "VernacExtend",
            "08bdafae7a85ad57b979944cb329c6dbda9ef78e"
        ],
        [
            "apply ok_res.",
            "VernacExtend",
            "0862d6d707f614c716d1a79208054c9f0c0d6c96"
        ],
        [
            "intro r.",
            "VernacExtend",
            "67f46246e3b1524d7b1bc01bb086bd08cb9cca8d"
        ],
        [
            "rewrite mu_is in cond_red; apply cond_red.",
            "VernacExtend",
            "6fa73ff797b42fba8dd428f1116e35054170be03"
        ],
        [
            "intro; apply cond_pr.",
            "VernacExtend",
            "66eee2ff9a6c71ba1d6debab8a603ce4097993bf"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "intros PP PP' mu' red cond mu_is.",
            "VernacExtend",
            "180a02be1e306d2f675e7778e6d359fdd3e5bb5f"
        ],
        [
            "apply ok_ban.",
            "VernacExtend",
            "4e83ea9d65b92913be88a5069f2fba71c6aff2f1"
        ],
        [
            "rewrite mu_is in red; exact red.",
            "VernacExtend",
            "c90cff7561e929dc58b0638353611db0e736c290"
        ],
        [
            "apply cond; assumption.",
            "VernacExtend",
            "050192c247668fda86b5a09990d5a6f091f8f107"
        ],
        [
            "intros PP PP' Q mu' cond red cond2 mu_is.",
            "VernacExtend",
            "305852780d512aea12f3b9236aa43fbf24396ba2"
        ],
        [
            "apply ok_parl.",
            "VernacExtend",
            "263432b3ec52888969061497846ba29b7484128c"
        ],
        [
            "rewrite mu_is in red.",
            "VernacExtend",
            "a37ffac27e9056678cb320fd8e738f10c530a9e8"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "apply cond2; assumption.",
            "VernacExtend",
            "cc773987e5ca66d0d5d72e21f27ceb085f4246d2"
        ],
        [
            "intros PP PP' Q mu' cond red cond_pr mu_is.",
            "VernacExtend",
            "63782c6ec0335c8e3b8d72a3843b2b72095cb981"
        ],
        [
            "apply ok_parr.",
            "VernacExtend",
            "7800252d7e1866e30e22fce73e1086090db12fb7"
        ],
        [
            "rewrite mu_is in red; apply red.",
            "VernacExtend",
            "2abc5d7b58c5f748bde4804ce7bce8ca023fc768"
        ],
        [
            "apply cond_pr; assumption.",
            "VernacExtend",
            "d4524a02900c56316257a895898b5b97a7fc7709"
        ],
        [
            "intros PP PP' Q mu' red cond mu_is.",
            "VernacExtend",
            "e76d3c77604285fc9c5b9625061e69bdfa584622"
        ],
        [
            "apply ok_suml.",
            "VernacExtend",
            "6d83e5b28f06a6ac509e4e2008f7a917fabf286e"
        ],
        [
            "rewrite mu_is in red; assumption.",
            "VernacExtend",
            "030170ea05f89ffb52d88f599b89085bd8d51376"
        ],
        [
            "apply cond; assumption.",
            "VernacExtend",
            "050192c247668fda86b5a09990d5a6f091f8f107"
        ],
        [
            "intros PP PP' Q mu' red cond mu_is.",
            "VernacExtend",
            "e76d3c77604285fc9c5b9625061e69bdfa584622"
        ],
        [
            "apply ok_sumr.",
            "VernacExtend",
            "5fa39c403845accf9436a7ca3b6f9d804b898a55"
        ],
        [
            "rewrite mu_is in red; assumption.",
            "VernacExtend",
            "030170ea05f89ffb52d88f599b89085bd8d51376"
        ],
        [
            "apply cond; assumption.",
            "VernacExtend",
            "050192c247668fda86b5a09990d5a6f091f8f107"
        ],
        [
            "intros PP PP' p mu' red cond mu_is.",
            "VernacExtend",
            "fdd99169b5ad6944e9952fc0c7102199a23d5b4d"
        ],
        [
            "apply ok_mat.",
            "VernacExtend",
            "3bf950d94cb49ce6588c0dfc520d909516b6aff2"
        ],
        [
            "rewrite mu_is in red; assumption.",
            "VernacExtend",
            "030170ea05f89ffb52d88f599b89085bd8d51376"
        ],
        [
            "apply cond; assumption.",
            "VernacExtend",
            "050192c247668fda86b5a09990d5a6f091f8f107"
        ],
        [
            "assumption.",
            "VernacExtend",
            "41f0308313ff87e6ab2782f90d6021ec4b55d932"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "inp_ind",
            "line_nb": 1,
            "steps": [
                {
                    "command": [
                        "intros Pr ok_inp ok_res ok_ban ok_parl ok_parr ok_suml ok_sumr ok_mat.",
                        "VernacExtend",
                        "f133f4b9bfdfa0842b6b3100cb5ca6e5a2edc242"
                    ]
                },
                {
                    "command": [
                        "cut (forall (P : proc) (mu : act) (P' : proc), sem P mu P' -> forall p q : PP, mu = ainp p q -> Pr P P' p q).",
                        "VernacExtend",
                        "db8f8d3b466af53edad49b695cdd195388c160ae"
                    ]
                },
                {
                    "command": [
                        "intros cond P P' p q reduction.",
                        "VernacExtend",
                        "7c212cef54afb52c624b48d62a9f927a61dcf272"
                    ]
                },
                {
                    "command": [
                        "apply cond with (mu := ainp p q).",
                        "VernacExtend",
                        "b564e8cdb667cc0a3ce722780b91fd0034dc0807"
                    ]
                },
                {
                    "command": [
                        "exact reduction.",
                        "VernacExtend",
                        "735232ce9918c4824adea789cb347e9ef2feeb27"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros P mu P' reduction.",
                        "VernacExtend",
                        "8b0248041b221c171f078a71f3b161c17e651414"
                    ]
                },
                {
                    "command": [
                        "apply sem_ind with (P := fun (P : proc) (mu : act) (P' : proc) => forall p q : PP, mu = ainp p q -> Pr P P' p q).",
                        "VernacExtend",
                        "ba5ebfa8c2cde942ab38f550cc973db66ed1e290"
                    ]
                },
                {
                    "command": [
                        "intros pp qq xx QQ ppp qqq inp_is_inp.",
                        "VernacExtend",
                        "bbce7d44c92d8927cd30cf551dc369c871e8bc34"
                    ]
                },
                {
                    "command": [
                        "injection inp_is_inp.",
                        "VernacExtend",
                        "6be4d6755ec7f2c9c74c833e02ce460a3ea7f6e4"
                    ]
                },
                {
                    "command": [
                        "intros qq_is_qqq pp_is_ppp; rewrite qq_is_qqq; rewrite pp_is_ppp.",
                        "VernacExtend",
                        "cb4c352fe8718f4b1f4761633244573c396e8b42"
                    ]
                },
                {
                    "command": [
                        "apply ok_inp.",
                        "VernacExtend",
                        "9160b347bf6f7c499152d17563667b7ee8032a6e"
                    ]
                },
                {
                    "command": [
                        "intros p q Q pp qq absurd.",
                        "VernacExtend",
                        "cbe981d11190fe7800909db1ce0149b5bd8b7d85"
                    ]
                },
                {
                    "command": [
                        "discriminate absurd.",
                        "VernacExtend",
                        "1826c7b546a7760413dc1636f39a6276f0235c1d"
                    ]
                },
                {
                    "command": [
                        "intros until q0.",
                        "VernacExtend",
                        "ced0a37fbe5d6676ac1255acb1f6c00d99b7b99d"
                    ]
                },
                {
                    "command": [
                        "intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "02353c303a122479a37f04e66b4b9957a549c1b5"
                    ]
                },
                {
                    "command": [
                        "intros until q0; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
                    ]
                },
                {
                    "command": [
                        "intros until q0; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
                    ]
                },
                {
                    "command": [
                        "intros until q0; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
                    ]
                },
                {
                    "command": [
                        "intros until q0; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' nu x y t cond_sem cond_pr.",
                        "VernacExtend",
                        "e46277e28065bf1c2b2e3c433c2edf055ff01b0c"
                    ]
                },
                {
                    "command": [
                        "intros p q nu_is.",
                        "VernacExtend",
                        "3fb369a61bfa2d47c658fae67f0c54e2ff04aa75"
                    ]
                },
                {
                    "command": [
                        "apply ok_res.",
                        "VernacExtend",
                        "0862d6d707f614c716d1a79208054c9f0c0d6c96"
                    ]
                },
                {
                    "command": [
                        "intro r.",
                        "VernacExtend",
                        "67f46246e3b1524d7b1bc01bb086bd08cb9cca8d"
                    ]
                },
                {
                    "command": [
                        "rewrite nu_is in cond_sem.",
                        "VernacExtend",
                        "8df51b3515bfc5cf648a2ca16316da1ba41bdfc6"
                    ]
                },
                {
                    "command": [
                        "apply cond_sem.",
                        "VernacExtend",
                        "996327e00aa887bd8e2584873baab22141338cf4"
                    ]
                },
                {
                    "command": [
                        "intro r.",
                        "VernacExtend",
                        "67f46246e3b1524d7b1bc01bb086bd08cb9cca8d"
                    ]
                },
                {
                    "command": [
                        "rewrite nu_is in cond_pr.",
                        "VernacExtend",
                        "4a7351463e5a6e9e1288a6870bb421e75af8fb65"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' mu' reduction' cond_pr p q mu_is_inp.",
                        "VernacExtend",
                        "d99661ce20346ef53039c494e9f9d926ada9688c"
                    ]
                },
                {
                    "command": [
                        "apply ok_ban.",
                        "VernacExtend",
                        "4e83ea9d65b92913be88a5069f2fba71c6aff2f1"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is_inp in reduction'.",
                        "VernacExtend",
                        "6564706dc7a44cc6d37424beec094ea5603eefcd"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' cond_fresh reduction' cond_pr p q mu_is_inp.",
                        "VernacExtend",
                        "b3d590c4f5424daa416539539a2a088013f5a8be"
                    ]
                },
                {
                    "command": [
                        "apply ok_parl.",
                        "VernacExtend",
                        "263432b3ec52888969061497846ba29b7484128c"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is_inp in reduction'; assumption.",
                        "VernacExtend",
                        "780a97c7c2db2b30994337b0acd46c9aa97d2a57"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' cond_fresh reduction' cond_pr p q mu_is_inp.",
                        "VernacExtend",
                        "b3d590c4f5424daa416539539a2a088013f5a8be"
                    ]
                },
                {
                    "command": [
                        "apply ok_parr.",
                        "VernacExtend",
                        "7800252d7e1866e30e22fce73e1086090db12fb7"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is_inp in reduction'.",
                        "VernacExtend",
                        "6564706dc7a44cc6d37424beec094ea5603eefcd"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' reduction' cond_pr.",
                        "VernacExtend",
                        "36ec4cacefb809378d3c0488fd062e503d539619"
                    ]
                },
                {
                    "command": [
                        "intros p q mu_is_inp; apply ok_suml.",
                        "VernacExtend",
                        "45d9bdb980c7e0c392b5aa3b0ebe9bcf355f818d"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is_inp in reduction'.",
                        "VernacExtend",
                        "6564706dc7a44cc6d37424beec094ea5603eefcd"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' reduction' cond_pr p q mu_is_inp.",
                        "VernacExtend",
                        "74421bd11e5586fba35f4fb5ac62503d37da4ac5"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is_inp in reduction'.",
                        "VernacExtend",
                        "6564706dc7a44cc6d37424beec094ea5603eefcd"
                    ]
                },
                {
                    "command": [
                        "apply ok_sumr.",
                        "VernacExtend",
                        "5fa39c403845accf9436a7ca3b6f9d804b898a55"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' p mu' reduction' cond_pr p' q mu_is_inp.",
                        "VernacExtend",
                        "48d28160115bb8b0240b3fe28792d975121904e9"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is_inp in reduction'.",
                        "VernacExtend",
                        "6564706dc7a44cc6d37424beec094ea5603eefcd"
                    ]
                },
                {
                    "command": [
                        "apply ok_mat.",
                        "VernacExtend",
                        "3bf950d94cb49ce6588c0dfc520d909516b6aff2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "out_ind",
            "line_nb": 69,
            "steps": [
                {
                    "command": [
                        "intros Pr ok_inp ok_res ok_ban ok_parl ok_parr ok_suml ok_sumr ok_mat.",
                        "VernacExtend",
                        "f133f4b9bfdfa0842b6b3100cb5ca6e5a2edc242"
                    ]
                },
                {
                    "command": [
                        "cut (forall (P : proc) (mu : act) (P' : proc), sem P mu P' -> forall p q : PP, mu = aout p q -> Pr P P' p q).",
                        "VernacExtend",
                        "df3de1789fc19571515aa1669f744d6510040c40"
                    ]
                },
                {
                    "command": [
                        "intros cond P P' p q reduction.",
                        "VernacExtend",
                        "7c212cef54afb52c624b48d62a9f927a61dcf272"
                    ]
                },
                {
                    "command": [
                        "apply cond with (mu := aout p q).",
                        "VernacExtend",
                        "e85eaa2497ca8ed00514426073cd26ec1a9fa078"
                    ]
                },
                {
                    "command": [
                        "exact reduction.",
                        "VernacExtend",
                        "735232ce9918c4824adea789cb347e9ef2feeb27"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros P mu P' reduction.",
                        "VernacExtend",
                        "8b0248041b221c171f078a71f3b161c17e651414"
                    ]
                },
                {
                    "command": [
                        "apply sem_ind with (P := fun (P : proc) (mu : act) (P' : proc) => forall p q : PP, mu = aout p q -> Pr P P' p q).",
                        "VernacExtend",
                        "3069ab3bb18370518eeac841c7ef43ef454b8c1a"
                    ]
                },
                {
                    "command": [
                        "intros until q0; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
                    ]
                },
                {
                    "command": [
                        "intros p q Q p0 q0 out_is_out.",
                        "VernacExtend",
                        "5303ea848289e836d01366bf26ebea0e225ea7ac"
                    ]
                },
                {
                    "command": [
                        "injection out_is_out.",
                        "VernacExtend",
                        "31af4753f7266c6612a37b2c0953cc1e3c8f961e"
                    ]
                },
                {
                    "command": [
                        "intros q_is_q0 p_is_p0.",
                        "VernacExtend",
                        "49c93f626e16799b29bde56d3a2c749e51fabed3"
                    ]
                },
                {
                    "command": [
                        "rewrite q_is_q0.",
                        "VernacExtend",
                        "f63f75103eec1709ffcc184b385c45c0efbfade4"
                    ]
                },
                {
                    "command": [
                        "rewrite p_is_p0.",
                        "VernacExtend",
                        "aa94ce68a35462b4d27de0aea26b74447c9d9236"
                    ]
                },
                {
                    "command": [
                        "apply ok_inp.",
                        "VernacExtend",
                        "9160b347bf6f7c499152d17563667b7ee8032a6e"
                    ]
                },
                {
                    "command": [
                        "intros until q0.",
                        "VernacExtend",
                        "ced0a37fbe5d6676ac1255acb1f6c00d99b7b99d"
                    ]
                },
                {
                    "command": [
                        "intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "02353c303a122479a37f04e66b4b9957a549c1b5"
                    ]
                },
                {
                    "command": [
                        "intros until q0; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
                    ]
                },
                {
                    "command": [
                        "intros until q0; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
                    ]
                },
                {
                    "command": [
                        "intros until q0; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
                    ]
                },
                {
                    "command": [
                        "intros until q0; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "772aaab8e2e8037fbd38b1653cd4b8c7e513ff4d"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' mu' x y t cond_red cond_pr p q mu_is.",
                        "VernacExtend",
                        "8857667d95ee74c083638264f2fd2c1efeb060fc"
                    ]
                },
                {
                    "command": [
                        "apply ok_res.",
                        "VernacExtend",
                        "0862d6d707f614c716d1a79208054c9f0c0d6c96"
                    ]
                },
                {
                    "command": [
                        "intro r.",
                        "VernacExtend",
                        "67f46246e3b1524d7b1bc01bb086bd08cb9cca8d"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in cond_red.",
                        "VernacExtend",
                        "10ea4af773e0bc486da1829e2e30581b08412746"
                    ]
                },
                {
                    "command": [
                        "apply cond_red.",
                        "VernacExtend",
                        "145544a8ccbf868d45aed9b01fb5cbb503e1141b"
                    ]
                },
                {
                    "command": [
                        "intro r.",
                        "VernacExtend",
                        "67f46246e3b1524d7b1bc01bb086bd08cb9cca8d"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in cond_pr.",
                        "VernacExtend",
                        "ae5c47cc75da1a4ace2b8a542d67fabcaaa6545e"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' mu' red cond_pr p q mu_is.",
                        "VernacExtend",
                        "3edb6cf45957eba4034591ef6fec5ce2b6fbb8e3"
                    ]
                },
                {
                    "command": [
                        "apply ok_ban.",
                        "VernacExtend",
                        "4e83ea9d65b92913be88a5069f2fba71c6aff2f1"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red.",
                        "VernacExtend",
                        "a37ffac27e9056678cb320fd8e738f10c530a9e8"
                    ]
                },
                {
                    "command": [
                        "exact red.",
                        "VernacExtend",
                        "f0456c584c4ae8575d0b1bd435a9a9ce351eadf6"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' cond red cond_pr p q mu_is.",
                        "VernacExtend",
                        "4801e63e20f2ab06b3b3d3206bb14ba796682b56"
                    ]
                },
                {
                    "command": [
                        "apply ok_parl.",
                        "VernacExtend",
                        "263432b3ec52888969061497846ba29b7484128c"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red; exact red.",
                        "VernacExtend",
                        "c90cff7561e929dc58b0638353611db0e736c290"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' cond red cond_pr p q mu_is.",
                        "VernacExtend",
                        "4801e63e20f2ab06b3b3d3206bb14ba796682b56"
                    ]
                },
                {
                    "command": [
                        "apply ok_parr.",
                        "VernacExtend",
                        "7800252d7e1866e30e22fce73e1086090db12fb7"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red; exact red.",
                        "VernacExtend",
                        "c90cff7561e929dc58b0638353611db0e736c290"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' red cond_pr p q mu_is.",
                        "VernacExtend",
                        "126338954aff519ae8c8ae049bf22ca82f84274c"
                    ]
                },
                {
                    "command": [
                        "apply ok_suml.",
                        "VernacExtend",
                        "6d83e5b28f06a6ac509e4e2008f7a917fabf286e"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red.",
                        "VernacExtend",
                        "a37ffac27e9056678cb320fd8e738f10c530a9e8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr; assumption.",
                        "VernacExtend",
                        "d4524a02900c56316257a895898b5b97a7fc7709"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' red cond_pr p q mu_is.",
                        "VernacExtend",
                        "126338954aff519ae8c8ae049bf22ca82f84274c"
                    ]
                },
                {
                    "command": [
                        "apply ok_sumr.",
                        "VernacExtend",
                        "5fa39c403845accf9436a7ca3b6f9d804b898a55"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red; exact red.",
                        "VernacExtend",
                        "c90cff7561e929dc58b0638353611db0e736c290"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr; assumption.",
                        "VernacExtend",
                        "d4524a02900c56316257a895898b5b97a7fc7709"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' p mu' red cond_pr p' q mu_is.",
                        "VernacExtend",
                        "388826c224eb1c306fb797e000a3616316bf49c3"
                    ]
                },
                {
                    "command": [
                        "apply ok_mat.",
                        "VernacExtend",
                        "3bf950d94cb49ce6588c0dfc520d909516b6aff2"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red.",
                        "VernacExtend",
                        "a37ffac27e9056678cb320fd8e738f10c530a9e8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bout_ind",
            "line_nb": 133,
            "steps": [
                {
                    "command": [
                        "intros Pr ok_bout ok_res ok_ban ok_parl ok_parr ok_suml ok_sumr ok_mat.",
                        "VernacExtend",
                        "6907504075b5d17a2e6b1b38fa5cfa0476bdc617"
                    ]
                },
                {
                    "command": [
                        "cut (forall (P : proc) (mu : act) (P' : proc), sem P mu P' -> forall (p q : PP) (t : type), mu = about p q t -> Pr P P' p q t).",
                        "VernacExtend",
                        "94d552eabdee5f6d6389737a674d6b5b7f715ac3"
                    ]
                },
                {
                    "command": [
                        "intros cond P P' p q t reduction.",
                        "VernacExtend",
                        "84afa7828634af189552c8df9d2054b366a98cad"
                    ]
                },
                {
                    "command": [
                        "apply cond with (mu := about p q t).",
                        "VernacExtend",
                        "4203ca0a76a793e703d2042723b4b3275a67fe20"
                    ]
                },
                {
                    "command": [
                        "exact reduction.",
                        "VernacExtend",
                        "735232ce9918c4824adea789cb347e9ef2feeb27"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros P mu P' reduction.",
                        "VernacExtend",
                        "8b0248041b221c171f078a71f3b161c17e651414"
                    ]
                },
                {
                    "command": [
                        "apply sem_ind with (P := fun (P : proc) (mu : act) (P' : proc) => forall (p q : PP) (t : type), mu = about p q t -> Pr P P' p q t).",
                        "VernacExtend",
                        "9ef7fdd201cd39edf748a8c818604a78a55b1108"
                    ]
                },
                {
                    "command": [
                        "intros until t; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "be455284f92f2a7b253ec0b36eaf5afdd97d58b2"
                    ]
                },
                {
                    "command": [
                        "intros until t; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "be455284f92f2a7b253ec0b36eaf5afdd97d58b2"
                    ]
                },
                {
                    "command": [
                        "intros until t; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "be455284f92f2a7b253ec0b36eaf5afdd97d58b2"
                    ]
                },
                {
                    "command": [
                        "intros until t; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "be455284f92f2a7b253ec0b36eaf5afdd97d58b2"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' p q x t fresh_q p_not_q reduction' cond_pr p0 q0 t0 bout_is_bout.",
                        "VernacExtend",
                        "0c8bb56865a7dd2078767f55f121317a8a84aef2"
                    ]
                },
                {
                    "command": [
                        "injection bout_is_bout.",
                        "VernacExtend",
                        "aaf1fa84f04e94368069e5fe86bbc4c6993d3729"
                    ]
                },
                {
                    "command": [
                        "intros t_is_t0 q_is_q0 p_is_p0.",
                        "VernacExtend",
                        "f30d1b1792de33b4cf27bcd57b3577dda76dfc32"
                    ]
                },
                {
                    "command": [
                        "rewrite t_is_t0.",
                        "VernacExtend",
                        "7e97e30fc42ca8ca3c2825b775c163f15174a189"
                    ]
                },
                {
                    "command": [
                        "apply ok_bout.",
                        "VernacExtend",
                        "19d5552f5d22f124360ab38b2f8a318b364cdc33"
                    ]
                },
                {
                    "command": [
                        "rewrite <- q_is_q0.",
                        "VernacExtend",
                        "3018a9423a1a9d284e922f7f031c8d3ef10034ef"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite <- q_is_q0; rewrite <- p_is_p0.",
                        "VernacExtend",
                        "b5313461feb0efcdc39191c8bc12aaa30a4c28c7"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intro; elim p_not_q; symmetry in |- *; assumption.",
                        "VernacExtend",
                        "16672340550701461be611252b5502961da2718b"
                    ]
                },
                {
                    "command": [
                        "rewrite p_is_p0 in reduction'; rewrite q_is_q0 in reduction'.",
                        "VernacExtend",
                        "07d0f3ef8c2859381ec55ba423fbd89e8cd75c7f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros until t0; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "475e946db6650c1eeaec64587fbb53f85579afb2"
                    ]
                },
                {
                    "command": [
                        "intros until t0; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "475e946db6650c1eeaec64587fbb53f85579afb2"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' mu' x y t cond_red cond_pr p q t' mu_is.",
                        "VernacExtend",
                        "cb5fb845a5aa28f1bafff4743aac08ce5b557a2c"
                    ]
                },
                {
                    "command": [
                        "apply ok_res.",
                        "VernacExtend",
                        "0862d6d707f614c716d1a79208054c9f0c0d6c96"
                    ]
                },
                {
                    "command": [
                        "intro r.",
                        "VernacExtend",
                        "67f46246e3b1524d7b1bc01bb086bd08cb9cca8d"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in cond_red.",
                        "VernacExtend",
                        "10ea4af773e0bc486da1829e2e30581b08412746"
                    ]
                },
                {
                    "command": [
                        "apply cond_red.",
                        "VernacExtend",
                        "145544a8ccbf868d45aed9b01fb5cbb503e1141b"
                    ]
                },
                {
                    "command": [
                        "intro r.",
                        "VernacExtend",
                        "67f46246e3b1524d7b1bc01bb086bd08cb9cca8d"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in cond_pr.",
                        "VernacExtend",
                        "ae5c47cc75da1a4ace2b8a542d67fabcaaa6545e"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' mu' red cond_pr p q t mu''.",
                        "VernacExtend",
                        "19291489b98ce92e981f05d052405bbb26d46720"
                    ]
                },
                {
                    "command": [
                        "apply ok_ban.",
                        "VernacExtend",
                        "4e83ea9d65b92913be88a5069f2fba71c6aff2f1"
                    ]
                },
                {
                    "command": [
                        "rewrite mu'' in red; assumption.",
                        "VernacExtend",
                        "564b87477a8814c6aceed405cbdea1aa03cd3143"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' cond red cond_pr p q t mu_is.",
                        "VernacExtend",
                        "83671bc0bf32d877deceade01804526d6810bcf9"
                    ]
                },
                {
                    "command": [
                        "apply ok_parl.",
                        "VernacExtend",
                        "263432b3ec52888969061497846ba29b7484128c"
                    ]
                },
                {
                    "command": [
                        "apply cond with (p := p) (t := t).",
                        "VernacExtend",
                        "dec723986c7670f2d454646f4d118dff7ee2d442"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red.",
                        "VernacExtend",
                        "a37ffac27e9056678cb320fd8e738f10c530a9e8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' cond red cond_pr p q t mu_is.",
                        "VernacExtend",
                        "83671bc0bf32d877deceade01804526d6810bcf9"
                    ]
                },
                {
                    "command": [
                        "apply ok_parr.",
                        "VernacExtend",
                        "7800252d7e1866e30e22fce73e1086090db12fb7"
                    ]
                },
                {
                    "command": [
                        "apply cond with (p := p) (t := t).",
                        "VernacExtend",
                        "dec723986c7670f2d454646f4d118dff7ee2d442"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red.",
                        "VernacExtend",
                        "a37ffac27e9056678cb320fd8e738f10c530a9e8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' red cond_pr p q t mu_is.",
                        "VernacExtend",
                        "002db73d452612ef5a7721f00a301d6852b5a72f"
                    ]
                },
                {
                    "command": [
                        "apply ok_suml.",
                        "VernacExtend",
                        "6d83e5b28f06a6ac509e4e2008f7a917fabf286e"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red; assumption.",
                        "VernacExtend",
                        "030170ea05f89ffb52d88f599b89085bd8d51376"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr.",
                        "VernacExtend",
                        "af62ac82fd25d3da54e53b69580c2687c026a34c"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' red cond_pr p q t mu_is.",
                        "VernacExtend",
                        "002db73d452612ef5a7721f00a301d6852b5a72f"
                    ]
                },
                {
                    "command": [
                        "apply ok_sumr.",
                        "VernacExtend",
                        "5fa39c403845accf9436a7ca3b6f9d804b898a55"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red; assumption.",
                        "VernacExtend",
                        "030170ea05f89ffb52d88f599b89085bd8d51376"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr; assumption.",
                        "VernacExtend",
                        "d4524a02900c56316257a895898b5b97a7fc7709"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' q mu' red cond_pr p0 q' t mu''.",
                        "VernacExtend",
                        "d63fcc4fd594a167a014800df3ba9817b7df568e"
                    ]
                },
                {
                    "command": [
                        "apply ok_mat.",
                        "VernacExtend",
                        "3bf950d94cb49ce6588c0dfc520d909516b6aff2"
                    ]
                },
                {
                    "command": [
                        "rewrite mu'' in red; assumption.",
                        "VernacExtend",
                        "564b87477a8814c6aceed405cbdea1aa03cd3143"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr; assumption.",
                        "VernacExtend",
                        "d4524a02900c56316257a895898b5b97a7fc7709"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "tau_ind",
            "line_nb": 204,
            "steps": [
                {
                    "command": [
                        "intros Pr ok_coml ok_comr ok_closel ok_closer ok_res ok_ban ok_parl ok_parr ok_suml ok_sumr ok_mat.",
                        "VernacExtend",
                        "84bb4ec3e272d72de5e33d9993ef72a067605b6d"
                    ]
                },
                {
                    "command": [
                        "cut (forall (P : proc) (mu : act) (P' : proc), sem P mu P' -> mu = tau -> Pr P P').",
                        "VernacExtend",
                        "0b8b1a7cac04688b039e314bfeee1b0975b7271f"
                    ]
                },
                {
                    "command": [
                        "intros cond P P' reduction.",
                        "VernacExtend",
                        "b815e0ebb0c60629ae6689defbbb6c6d3dfdff2b"
                    ]
                },
                {
                    "command": [
                        "apply cond with (mu := tau).",
                        "VernacExtend",
                        "2809df08eb536d7bae0cb1466c987a4a3a29ba70"
                    ]
                },
                {
                    "command": [
                        "exact reduction.",
                        "VernacExtend",
                        "735232ce9918c4824adea789cb347e9ef2feeb27"
                    ]
                },
                {
                    "command": [
                        "reflexivity.",
                        "VernacExtend",
                        "5cd1ae044f26cd6d89a5a5147c1d4fc5fc719d83"
                    ]
                },
                {
                    "command": [
                        "intros P mu P' reduction.",
                        "VernacExtend",
                        "8b0248041b221c171f078a71f3b161c17e651414"
                    ]
                },
                {
                    "command": [
                        "apply sem_ind with (P := fun (P : proc) (mu : act) (P' : proc) => mu = tau -> Pr P P').",
                        "VernacExtend",
                        "32edee1b90e77352663b7a88f9df5fd16c8eece2"
                    ]
                },
                {
                    "command": [
                        "intros until Q; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "cbead0560f5223d26d55f98f2e2718f5c3152fe2"
                    ]
                },
                {
                    "command": [
                        "intros until Q; intro absurd; discriminate absurd.",
                        "VernacExtend",
                        "cbead0560f5223d26d55f98f2e2718f5c3152fe2"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q Q' p q redinp boom redout bam ok.",
                        "VernacExtend",
                        "84139fea4e773e331a76973a015a4fce4cb527b5"
                    ]
                },
                {
                    "command": [
                        "apply ok_coml with (p := p) (q := q).",
                        "VernacExtend",
                        "653bfed0afba02fe1fd16c93e415c649c5e9cb8f"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q Q' p q redout boom redinp bam ok.",
                        "VernacExtend",
                        "903c18c101c15967054d4a68e16cb8fd25bee564"
                    ]
                },
                {
                    "command": [
                        "apply ok_comr with (p := p) (q := q).",
                        "VernacExtend",
                        "a1a1f23128bd291952639a6d736b585c38c814d2"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros z0 z1 z2 z3 z4 z5 z6 z7 z8 absurd.",
                        "VernacExtend",
                        "db7e8ae89e2d26b14eb7c3fc82eaaa3d532f3521"
                    ]
                },
                {
                    "command": [
                        "intro absurd'; discriminate absurd'.",
                        "VernacExtend",
                        "cddaf9ef76a830c4f6d400cebd5287e4ec4638b7"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q Q' p q r t x fresh_q fresh_P' fresh_Q' redinp boom redout bam ok.",
                        "VernacExtend",
                        "34d7f0d91dd464cfd70b92c81e7c80721b867ba3"
                    ]
                },
                {
                    "command": [
                        "apply ok_closel with (p := p) (q := q) (r := r) (t := t) (x := x).",
                        "VernacExtend",
                        "3316ca359377786130cd058fbe19c5db8d307559"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q Q' p q r t x fresh_q fresh_P' fresh_Q' redinp boom redout bam ok.",
                        "VernacExtend",
                        "34d7f0d91dd464cfd70b92c81e7c80721b867ba3"
                    ]
                },
                {
                    "command": [
                        "apply ok_closer with (p := p).",
                        "VernacExtend",
                        "be5d6075c21143663c3be623ff356678c440f464"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' mu' x y t cond_red cond_pr mu_is.",
                        "VernacExtend",
                        "08bdafae7a85ad57b979944cb329c6dbda9ef78e"
                    ]
                },
                {
                    "command": [
                        "apply ok_res.",
                        "VernacExtend",
                        "0862d6d707f614c716d1a79208054c9f0c0d6c96"
                    ]
                },
                {
                    "command": [
                        "intro r.",
                        "VernacExtend",
                        "67f46246e3b1524d7b1bc01bb086bd08cb9cca8d"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in cond_red; apply cond_red.",
                        "VernacExtend",
                        "6fa73ff797b42fba8dd428f1116e35054170be03"
                    ]
                },
                {
                    "command": [
                        "intro; apply cond_pr.",
                        "VernacExtend",
                        "66eee2ff9a6c71ba1d6debab8a603ce4097993bf"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' mu' red cond mu_is.",
                        "VernacExtend",
                        "180a02be1e306d2f675e7778e6d359fdd3e5bb5f"
                    ]
                },
                {
                    "command": [
                        "apply ok_ban.",
                        "VernacExtend",
                        "4e83ea9d65b92913be88a5069f2fba71c6aff2f1"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red; exact red.",
                        "VernacExtend",
                        "c90cff7561e929dc58b0638353611db0e736c290"
                    ]
                },
                {
                    "command": [
                        "apply cond; assumption.",
                        "VernacExtend",
                        "050192c247668fda86b5a09990d5a6f091f8f107"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' cond red cond2 mu_is.",
                        "VernacExtend",
                        "305852780d512aea12f3b9236aa43fbf24396ba2"
                    ]
                },
                {
                    "command": [
                        "apply ok_parl.",
                        "VernacExtend",
                        "263432b3ec52888969061497846ba29b7484128c"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red.",
                        "VernacExtend",
                        "a37ffac27e9056678cb320fd8e738f10c530a9e8"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "apply cond2; assumption.",
                        "VernacExtend",
                        "cc773987e5ca66d0d5d72e21f27ceb085f4246d2"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' cond red cond_pr mu_is.",
                        "VernacExtend",
                        "63782c6ec0335c8e3b8d72a3843b2b72095cb981"
                    ]
                },
                {
                    "command": [
                        "apply ok_parr.",
                        "VernacExtend",
                        "7800252d7e1866e30e22fce73e1086090db12fb7"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red; apply red.",
                        "VernacExtend",
                        "2abc5d7b58c5f748bde4804ce7bce8ca023fc768"
                    ]
                },
                {
                    "command": [
                        "apply cond_pr; assumption.",
                        "VernacExtend",
                        "d4524a02900c56316257a895898b5b97a7fc7709"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' red cond mu_is.",
                        "VernacExtend",
                        "e76d3c77604285fc9c5b9625061e69bdfa584622"
                    ]
                },
                {
                    "command": [
                        "apply ok_suml.",
                        "VernacExtend",
                        "6d83e5b28f06a6ac509e4e2008f7a917fabf286e"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red; assumption.",
                        "VernacExtend",
                        "030170ea05f89ffb52d88f599b89085bd8d51376"
                    ]
                },
                {
                    "command": [
                        "apply cond; assumption.",
                        "VernacExtend",
                        "050192c247668fda86b5a09990d5a6f091f8f107"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' Q mu' red cond mu_is.",
                        "VernacExtend",
                        "e76d3c77604285fc9c5b9625061e69bdfa584622"
                    ]
                },
                {
                    "command": [
                        "apply ok_sumr.",
                        "VernacExtend",
                        "5fa39c403845accf9436a7ca3b6f9d804b898a55"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red; assumption.",
                        "VernacExtend",
                        "030170ea05f89ffb52d88f599b89085bd8d51376"
                    ]
                },
                {
                    "command": [
                        "apply cond; assumption.",
                        "VernacExtend",
                        "050192c247668fda86b5a09990d5a6f091f8f107"
                    ]
                },
                {
                    "command": [
                        "intros PP PP' p mu' red cond mu_is.",
                        "VernacExtend",
                        "fdd99169b5ad6944e9952fc0c7102199a23d5b4d"
                    ]
                },
                {
                    "command": [
                        "apply ok_mat.",
                        "VernacExtend",
                        "3bf950d94cb49ce6588c0dfc520d909516b6aff2"
                    ]
                },
                {
                    "command": [
                        "rewrite mu_is in red; assumption.",
                        "VernacExtend",
                        "030170ea05f89ffb52d88f599b89085bd8d51376"
                    ]
                },
                {
                    "command": [
                        "apply cond; assumption.",
                        "VernacExtend",
                        "050192c247668fda86b5a09990d5a6f091f8f107"
                    ]
                },
                {
                    "command": [
                        "assumption.",
                        "VernacExtend",
                        "41f0308313ff87e6ab2782f90d6021ec4b55d932"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}