{
    "filename": "theories/Aux.v",
    "coq_project": "huffman",
    "vernac_cmds": [
        [
            "Require Export List.",
            "VernacRequire",
            "d626cb98fe764077098989d26509c9f7407e0464"
        ],
        [
            "Require Export Arith.",
            "VernacRequire",
            "70e550b9603a7aa23f63274fffcc443ce7c8f433"
        ],
        [
            "From Huffman Require Export sTactic.",
            "VernacRequire",
            "dbeac83f08f6d9826c435fabd23183ea64aa3113"
        ],
        [
            "Require Import Inverse_Image.",
            "VernacRequire",
            "ec9941725ea30a60867d138856d272242d6ad2c0"
        ],
        [
            "Require Import Wf_nat.",
            "VernacRequire",
            "e78e8b6524a9771b7c95f37880c2b88f96465784"
        ],
        [
            "Section Minus.",
            "VernacBeginSection",
            "f5e844c75117be2f3942aba7e3863e5b16d11d2d"
        ],
        [
            "Theorem lt_minus_O : forall n m, m < n -> 0 < n - m.",
            "VernacStartTheoremProof",
            "06c77295e7f88459272ba80b4e38bb52d701bfd4"
        ],
        [
            "intros n; elim n; simpl in |- *; auto.",
            "VernacExtend",
            "4c8db1b39c3be89d951a6596eac36325adb07903"
        ],
        [
            "intros m H1; Contradict H1; auto with arith.",
            "VernacExtend",
            "289e28c690ab11f5725b8114598244adcff60dce"
        ],
        [
            "intros n1 Rec m; case m; simpl in |- *; auto.",
            "VernacExtend",
            "1d71b7202f3cf564376eff7fc29cbfc58884bbd7"
        ],
        [
            "intros m1 H1; apply Rec; apply lt_S_n; auto.",
            "VernacExtend",
            "fedf18cc76b13ad40cb4956ef00b8e87b2836960"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_minus : forall a b : nat, a - b <= a.",
            "VernacStartTheoremProof",
            "2202354c009b769835b16d9d30b2581e131e9f06"
        ],
        [
            "intros a; elim a; simpl in |- *; auto.",
            "VernacExtend",
            "18164fd9c85bbdc8f3e353cc5fb9a9f25473fa33"
        ],
        [
            "intros n H b; case b; simpl in |- *; auto.",
            "VernacExtend",
            "16e471eaf3e78b620ff67feda7ebc35ef5ce9274"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem minus_minus_simpl4 : forall a b c : nat, b <= c -> c <= a -> a - b - (a - c) = c - b.",
            "VernacStartTheoremProof",
            "d5c752649885e9b4851e4224238082420ac8256a"
        ],
        [
            "intros a b c H H0.",
            "VernacExtend",
            "1cd9ec8ec95f476ed0a31d9d878dc298608e9acc"
        ],
        [
            "apply plus_minus; auto with arith.",
            "VernacExtend",
            "a8a10d734071e733f1dd41b0d22a4a8a6d32e028"
        ],
        [
            "rewrite minus_plus_simpl_l_reverse with (p := b + c).",
            "VernacExtend",
            "d83409fb3ab01c83e4d9e58d69077614b56c0a6d"
        ],
        [
            "repeat rewrite plus_assoc_reverse.",
            "VernacExtend",
            "cb86481b819a9c00904e32d536edf9bbd66369bd"
        ],
        [
            "rewrite <- le_plus_minus; auto with arith.",
            "VernacExtend",
            "a5432e30d7d74e16734630adacbca5118010b9b1"
        ],
        [
            "repeat rewrite plus_assoc.",
            "VernacExtend",
            "5dd8a7fee64febaa68da3d2e8e9db466c70f71a9"
        ],
        [
            "rewrite (plus_comm b c).",
            "VernacExtend",
            "086045ec6ffe14a98cb62ae986400ce780de7327"
        ],
        [
            "repeat rewrite plus_assoc_reverse.",
            "VernacExtend",
            "cb86481b819a9c00904e32d536edf9bbd66369bd"
        ],
        [
            "rewrite <- le_plus_minus; auto with arith.",
            "VernacExtend",
            "a5432e30d7d74e16734630adacbca5118010b9b1"
        ],
        [
            "repeat rewrite (fun x => plus_comm x a).",
            "VernacExtend",
            "7f115b354f6495e032e85c17b9f6ba1a210a65bf"
        ],
        [
            "rewrite <- minus_plus_simpl_l_reverse; auto with arith.",
            "VernacExtend",
            "3de6399ed4d0a66ce084d9d3a5c385021229475f"
        ],
        [
            "apply le_trans with (1 := H); auto.",
            "VernacExtend",
            "d658915b8ffb9ee1ed3afd5a12cad8aba404513d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem plus_minus_simpl4 : forall a b c : nat, b <= a -> c <= b -> a - b + (b - c) = a - c.",
            "VernacStartTheoremProof",
            "0e0786d8f64e5c290500969abeab79a9a155bf79"
        ],
        [
            "intros a b c H H0.",
            "VernacExtend",
            "1cd9ec8ec95f476ed0a31d9d878dc298608e9acc"
        ],
        [
            "apply plus_minus.",
            "VernacExtend",
            "a1f20f6aa6a2a24f9e5d4a5d491beac766ac1947"
        ],
        [
            "rewrite (fun x y => plus_comm (x - y)).",
            "VernacExtend",
            "3b33a41c3b242be45e54c3b1d91684a54b9761ca"
        ],
        [
            "rewrite plus_assoc.",
            "VernacExtend",
            "3bacd64a87549657845fdfa6170cde8d727d12ef"
        ],
        [
            "rewrite <- le_plus_minus; auto.",
            "VernacExtend",
            "fc4f2e87cbcf652674fcb17f749e642b73f98c3a"
        ],
        [
            "rewrite <- le_plus_minus; auto.",
            "VernacExtend",
            "fc4f2e87cbcf652674fcb17f749e642b73f98c3a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Minus.",
            "VernacEndSegment",
            "131eb158ad5fe410e3f0ed06b5fae8198775a691"
        ],
        [
            "Hint Resolve le_minus: arith.",
            "VernacHints",
            "be4e651131b1a8f2a4825281e2cd693c29ad01ee"
        ],
        [
            "Section EqBool.",
            "VernacBeginSection",
            "9460fc830451b0116e0f7c247da10b765cb3cf3d"
        ],
        [
            "Definition eq_bool_dec : forall a b : bool, {a = b} + {a <> b}.",
            "VernacDefinition",
            "19b6c52e90f6bb939762f525f9f2981f90fbd26a"
        ],
        [
            "intros a b; case a; case b; simpl in |- *; auto.",
            "VernacExtend",
            "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
        ],
        [
            "right; red in |- *; intros; discriminate.",
            "VernacExtend",
            "7375ac0ae98b9080a332413bcc16028a0acfaef8"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End EqBool.",
            "VernacEndSegment",
            "cf46b3b65fa3e74b7bf1c479a1cf055a28d8b08a"
        ],
        [
            "Section LeBool.",
            "VernacBeginSection",
            "6992bae291520210c0baa7530847c40815b84319"
        ],
        [
            "Fixpoint le_bool (a b : nat) {struct b} : bool := match a, b with | O, _ => true | S a1, S b1 => le_bool a1 b1 | _, _ => false end.",
            "VernacFixpoint",
            "98a0ea16df7ab754a23df42cedf1ccfd1a85003b"
        ],
        [
            "Theorem le_bool_correct1 : forall a b : nat, a <= b -> le_bool a b = true.",
            "VernacStartTheoremProof",
            "a63ecce07d7fe4a2c031e061ab3270f6a3e40934"
        ],
        [
            "intros a; elim a; simpl in |- *; auto.",
            "VernacExtend",
            "18164fd9c85bbdc8f3e353cc5fb9a9f25473fa33"
        ],
        [
            "intros b; case b; simpl in |- *; auto.",
            "VernacExtend",
            "c7ad60c082ecdb12deafd06e16c8a3b9a132e97a"
        ],
        [
            "intros n H b; case b; simpl in |- *.",
            "VernacExtend",
            "ba7a1479a51d4393616165948aaa6783f9359ef2"
        ],
        [
            "intros H1; inversion H1.",
            "VernacExtend",
            "ac70484e30350794ef2c43b274f64330975ca879"
        ],
        [
            "intros n0 H0; apply H.",
            "VernacExtend",
            "da2164f07e974d63da0ea99815af8027f7677409"
        ],
        [
            "apply le_S_n; auto.",
            "VernacExtend",
            "fc1f683897f131cb7aedf5b0868a7ec612826b5a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_bool_correct2 : forall a b : nat, b < a -> le_bool a b = false.",
            "VernacStartTheoremProof",
            "659cba86a4dd373d211cfe741e5f306980d6b70c"
        ],
        [
            "intros a; elim a; simpl in |- *; auto.",
            "VernacExtend",
            "18164fd9c85bbdc8f3e353cc5fb9a9f25473fa33"
        ],
        [
            "intros b H1; inversion H1.",
            "VernacExtend",
            "edd0218e518cf33aa251a2e9f867e115722815d4"
        ],
        [
            "intros n H b; case b; simpl in |- *; auto.",
            "VernacExtend",
            "16e471eaf3e78b620ff67feda7ebc35ef5ce9274"
        ],
        [
            "intros n0 H0; apply H.",
            "VernacExtend",
            "da2164f07e974d63da0ea99815af8027f7677409"
        ],
        [
            "apply lt_S_n; auto.",
            "VernacExtend",
            "7b6e2b7daf03a4260de01020372f476f10167d1e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_bool_correct3 : forall a b : nat, le_bool a b = true -> a <= b.",
            "VernacStartTheoremProof",
            "2c7b8346452b2f368eb7ba8ee3d1cbd2c6302fee"
        ],
        [
            "intros a; elim a; simpl in |- *; auto.",
            "VernacExtend",
            "18164fd9c85bbdc8f3e353cc5fb9a9f25473fa33"
        ],
        [
            "intros b; case b; simpl in |- *; auto with arith.",
            "VernacExtend",
            "0591dcb5f6102ef20028a98d196fe69b2bbd229f"
        ],
        [
            "intros n H b; case b; simpl in |- *; try (intros; discriminate); auto with arith.",
            "VernacExtend",
            "87e02821db20a46b94391b93a9730e129537d67d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem le_bool_correct4 : forall a b : nat, le_bool a b = false -> b <= a.",
            "VernacStartTheoremProof",
            "43094a357f0a065741e3a415e15075c575489946"
        ],
        [
            "intros a; elim a; simpl in |- *; auto.",
            "VernacExtend",
            "18164fd9c85bbdc8f3e353cc5fb9a9f25473fa33"
        ],
        [
            "intros b; case b; simpl in |- *; try (intros; discriminate); auto with arith.",
            "VernacExtend",
            "dba1870805e8e2a80ff4ad06bcbcb0e75ba72f1b"
        ],
        [
            "intros n H b; case b; simpl in |- *; try (intros; discriminate); auto with arith.",
            "VernacExtend",
            "87e02821db20a46b94391b93a9730e129537d67d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End LeBool.",
            "VernacEndSegment",
            "b15d2a0bab4eee70333e0f68a0837e1e45c3f6de"
        ],
        [
            "Section fold.",
            "VernacBeginSection",
            "ef5cf4b622bdafc47ff606ba19b2a0f8dac9e912"
        ],
        [
            "Variables (A : Type) (B : Type).",
            "VernacAssumption",
            "c98b5f83aa2eac07d836f229072bc31d00ff60ec"
        ],
        [
            "Variable f : A -> B -> A.",
            "VernacAssumption",
            "70dd44699d97abf62e17dcbf19a84e58122f8fd0"
        ],
        [
            "Variable g : B -> A -> A.",
            "VernacAssumption",
            "68d25ccc4344d1c71e71f6de8b3df23d966b1d64"
        ],
        [
            "Variable h : A -> A.",
            "VernacAssumption",
            "3f51104e4cb41e71c0b3eceb7e8038e89fa819be"
        ],
        [
            "Variable eqA_dec : forall a b : A, {a = b} + {a <> b}.",
            "VernacAssumption",
            "c7dce40a1a1159550fac93e6bff94107f0f6b383"
        ],
        [
            "Theorem fold_left_app : forall a l1 l2, fold_left f (l1 ++ l2) a = fold_left f l2 (fold_left f l1 a).",
            "VernacStartTheoremProof",
            "b271ce7f5b2551c19483849401660370f0b8f0e1"
        ],
        [
            "intros a l1; generalize a; elim l1; simpl in |- *; auto; clear a l1.",
            "VernacExtend",
            "795415a976c7fa268593405c6993d26ad041d21c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fold_left_eta : forall l a f1, (forall a b, In b l -> f a b = f1 a b) -> fold_left f l a = fold_left f1 l a.",
            "VernacStartTheoremProof",
            "2d179ceed4308dba16b6c43b8f8e0516c243bc80"
        ],
        [
            "intros l; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "2bbab84295db0ef661ebb58820998893cacdee26"
        ],
        [
            "intros a l0 H a0 f1 H0.",
            "VernacExtend",
            "eeba81e2fe446c179dbe9e0432267798351f54a7"
        ],
        [
            "rewrite H0; auto.",
            "VernacExtend",
            "48df2b0b453adadcea8e6914bccb68bfc33b286b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fold_left_map : forall (C : Type) a l (k : C -> B), fold_left f (map k l) a = fold_left (fun a b => f a (k b)) l a.",
            "VernacStartTheoremProof",
            "6a4f5d1e31dbe52112fab5929185d65271570447"
        ],
        [
            "intros C a l k; generalize a; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "03f334554c55dfdf487761057301a8da8e68c1cb"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fold_right_app : forall a l1 l2, fold_right g a (l1 ++ l2) = fold_right g (fold_right g a l2) l1.",
            "VernacStartTheoremProof",
            "adc6fd11aee86231222b0c89fbfaddc95d710951"
        ],
        [
            "intros a l1; generalize a; elim l1; simpl in |- *; auto; clear a l1.",
            "VernacExtend",
            "795415a976c7fa268593405c6993d26ad041d21c"
        ],
        [
            "intros a l H a0 l2; rewrite H; auto.",
            "VernacExtend",
            "60300329cfc5f3f80d5401d2a9f14e5ce1ef00dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem fold_left_init : (forall (a : A) (b : B), h (f a b) = f (h a) b) -> forall (a : A) (l : list B), fold_left f l (h a) = h (fold_left f l a).",
            "VernacStartTheoremProof",
            "7ec82b429c5c369ba0a789bbe1514aad75fa874f"
        ],
        [
            "intros H a l; generalize a; elim l; clear l a; simpl in |- *; auto.",
            "VernacExtend",
            "f77eea31895df08b9f17a249cddf67faf3240f8b"
        ],
        [
            "intros a l H0 a0.",
            "VernacExtend",
            "ffe6c1f48afb1738d7bc6448a2787b55381caaf9"
        ],
        [
            "rewrite <- H; auto.",
            "VernacExtend",
            "339e32f989b98c4748aacd68dd3407c72de16870"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End fold.",
            "VernacEndSegment",
            "71552a5f45146fff8d1fef03dd148bb45eb88fc2"
        ],
        [
            "Section List.",
            "VernacBeginSection",
            "6407677198b13a558e25e63707ca67e69565117a"
        ],
        [
            "Variables (A : Type) (B : Type) (C : Type).",
            "VernacAssumption",
            "f84b66a9db8d6d8ceffab96b68aca1a24cfd8b5e"
        ],
        [
            "Variable f : A -> B.",
            "VernacAssumption",
            "3004efd9a4fde9fa8a2da5ba1f90ed0ede9c0963"
        ],
        [
            "Theorem list_length_ind : forall P : list A -> Prop, (forall l1 : list A, (forall l2 : list A, length l2 < length l1 -> P l2) -> P l1) -> forall l : list A, P l.",
            "VernacStartTheoremProof",
            "87915fc4bb05fa193fe9e22ab2114e3b68898fa0"
        ],
        [
            "intros P H l; apply well_founded_ind with (R := fun x y : list A => length x < length y); auto.",
            "VernacExtend",
            "3305f437e80ba9b475dd8496645945c502140331"
        ],
        [
            "apply wf_inverse_image with (R := lt); auto.",
            "VernacExtend",
            "f3907f99a00527da881fd8bb36c43ece8ab8e54e"
        ],
        [
            "apply lt_wf.",
            "VernacExtend",
            "b02ed6b1b9b0f5e569a9e95fbb799f31ca941c75"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition list_length_induction : forall P : list A -> Type, (forall l1 : list A, (forall l2 : list A, length l2 < length l1 -> P l2) -> P l1) -> forall l : list A, P l.",
            "VernacDefinition",
            "e9e42d1ee4236fed74b3a0323a98f737ec6532fe"
        ],
        [
            "intros P H l; apply well_founded_induction_type with (R := fun x y : list A => length x < length y); auto.",
            "VernacExtend",
            "862b5581858ae31b4328bb7000b8ac0bbde15ce0"
        ],
        [
            "apply wf_inverse_image with (R := lt); auto.",
            "VernacExtend",
            "f3907f99a00527da881fd8bb36c43ece8ab8e54e"
        ],
        [
            "apply lt_wf.",
            "VernacExtend",
            "b02ed6b1b9b0f5e569a9e95fbb799f31ca941c75"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Theorem in_ex_app : forall (a : A) (l : list A), In a l -> exists l1 : list A, (exists l2 : list A, l = l1 ++ a :: l2).",
            "VernacStartTheoremProof",
            "c0b84860ad93b073e78274c81710175e0bcbd584"
        ],
        [
            "intros a l; elim l; clear l; simpl in |- *; auto.",
            "VernacExtend",
            "f5876a1daa7087808e3acd59c85f178fdda90115"
        ],
        [
            "intros H; case H.",
            "VernacExtend",
            "92504f2aca0180d3869137e0271f95e3042eabe7"
        ],
        [
            "intros a1 l H [H1| H1]; auto.",
            "VernacExtend",
            "80d739dfc17f58877431b400900fbe5ca90c8362"
        ],
        [
            "exists (nil (A:=A)); exists l; simpl in |- *; auto.",
            "VernacExtend",
            "d981d7d4a60ccb6ddb78fe299f83609a03b88f1c"
        ],
        [
            "apply f_equal2 with (f := cons (A:=A)); auto.",
            "VernacExtend",
            "9bc583f3cb3e4595b6a008acd7e9fb7968af39d9"
        ],
        [
            "case H; auto; intros l1 (l2, Hl2); exists (a1 :: l1); exists l2; simpl in |- *; auto.",
            "VernacExtend",
            "d32b38956dff2ea893fd0f5dd5ee0319fca61998"
        ],
        [
            "apply f_equal2 with (f := cons (A:=A)); auto.",
            "VernacExtend",
            "9bc583f3cb3e4595b6a008acd7e9fb7968af39d9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem length_app : forall l1 l2 : list A, length (l1 ++ l2) = length l1 + length l2.",
            "VernacStartTheoremProof",
            "12f140d9318aceb57b7559f22e81af823fc7d189"
        ],
        [
            "intros l1; elim l1; simpl in |- *; auto.",
            "VernacExtend",
            "b73d59c67adc102479fcc10e403f01f21e881ba0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem app_inv_head : forall l1 l2 l3 : list A, l1 ++ l2 = l1 ++ l3 -> l2 = l3.",
            "VernacStartTheoremProof",
            "627c32001d6c16fe51d0529b3b06dbc7614f50ef"
        ],
        [
            "intros l1; elim l1; simpl in |- *; auto.",
            "VernacExtend",
            "b73d59c67adc102479fcc10e403f01f21e881ba0"
        ],
        [
            "intros a l H l2 l3 H0; apply H; injection H0; auto.",
            "VernacExtend",
            "d097f206edb4593b6715b8508f9af9b199afa915"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem app_inv_tail : forall l1 l2 l3 : list A, l2 ++ l1 = l3 ++ l1 -> l2 = l3.",
            "VernacStartTheoremProof",
            "5d6074fec2a7538a90e35763acd5dca2868938ea"
        ],
        [
            "intros l1 l2; generalize l1; elim l2; clear l1 l2; simpl in |- *; auto.",
            "VernacExtend",
            "b4fdfdac016e5d22050568aa04417b88b63a7b87"
        ],
        [
            "intros l1 l3; case l3; auto.",
            "VernacExtend",
            "0ed9d298017c28658f4b36504a61c9a9011fe872"
        ],
        [
            "intros b l H; absurd (length ((b :: l) ++ l1) <= length l1).",
            "VernacExtend",
            "43c209edf8557d88e211c98522f1612d659c2805"
        ],
        [
            "simpl in |- *; rewrite length_app; auto with arith.",
            "VernacExtend",
            "842d09cd01db7b2f531884dbe136929274526da8"
        ],
        [
            "rewrite <- H; auto with arith.",
            "VernacExtend",
            "95ecf2007cea6a6f78a96498bf49ad11dedf95af"
        ],
        [
            "intros a l H l1 l3; case l3.",
            "VernacExtend",
            "c15544eccd26e89a9086767b8ef172a4c47cd58f"
        ],
        [
            "simpl in |- *; intros H1; absurd (length (a :: l ++ l1) <= length l1).",
            "VernacExtend",
            "088e4eb158b6b76166712522b53e765d16b17af0"
        ],
        [
            "simpl in |- *; rewrite length_app; auto with arith.",
            "VernacExtend",
            "842d09cd01db7b2f531884dbe136929274526da8"
        ],
        [
            "rewrite H1; auto with arith.",
            "VernacExtend",
            "f44aafaaaf2fde9554fec757928cccbddbfedddc"
        ],
        [
            "simpl in |- *; intros b l0 H0; injection H0.",
            "VernacExtend",
            "85c58b1957cfe2d6932618fed2f7b5f28640e0b4"
        ],
        [
            "intros H1 H2; apply f_equal2 with (f := cons (A:=A)); auto.",
            "VernacExtend",
            "4667179a3632cf4ab9a3b361659ed7d7688db352"
        ],
        [
            "apply H with (1 := H1); auto.",
            "VernacExtend",
            "6628b15880a21b5a061f67c5c1964b69a6f3a210"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem app_inv_app : forall l1 l2 l3 l4 a, l1 ++ l2 = l3 ++ a :: l4 -> (exists l5 : list A, l1 = l3 ++ a :: l5) \\/ (exists l5 : _, l2 = l5 ++ a :: l4).",
            "VernacStartTheoremProof",
            "e93889c9f448dbe98ef8209574d05cdd96aaa5f2"
        ],
        [
            "intros l1; elim l1; simpl in |- *; auto.",
            "VernacExtend",
            "b73d59c67adc102479fcc10e403f01f21e881ba0"
        ],
        [
            "intros l2 l3 l4 a H; right; exists l3; auto.",
            "VernacExtend",
            "e75581b7b3a3c08eaa9b3d559deb23852dcf3958"
        ],
        [
            "intros a l H l2 l3 l4 a0; case l3; simpl in |- *.",
            "VernacExtend",
            "c24d46199ff40bad81b1a7ad1cd18dff4a4e6891"
        ],
        [
            "intros H0; left; exists l; apply f_equal2 with (f := cons (A:=A)); injection H0; auto.",
            "VernacExtend",
            "20a20503ae015f4a9ac05c5eb8a2583a03982711"
        ],
        [
            "intros b l0 H0; case (H l2 l0 l4 a0); auto.",
            "VernacExtend",
            "69cb9744298571a6332154aaf1e2e7e6b64adfb3"
        ],
        [
            "injection H0; auto.",
            "VernacExtend",
            "0472db19ef82fb52607346ea35cd0ef9ff2a0682"
        ],
        [
            "intros (l5, H1).",
            "VernacExtend",
            "6f7b41ad127528d522fe206f546157bfb238683c"
        ],
        [
            "left; exists l5; apply f_equal2 with (f := cons (A:=A)); injection H0; auto.",
            "VernacExtend",
            "90eb79ace19a2101c6471bec6e044c7913e437a3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem app_inv_app2 : forall l1 l2 l3 l4 a b, l1 ++ l2 = l3 ++ a :: b :: l4 -> (exists l5 : list A, l1 = l3 ++ a :: b :: l5) \\/ (exists l5 : _, l2 = l5 ++ a :: b :: l4) \\/ l1 = l3 ++ a :: nil /\\ l2 = b :: l4.",
            "VernacStartTheoremProof",
            "9687b687f7009549a38c3cdbad86cc00fe301033"
        ],
        [
            "intros l1; elim l1; simpl in |- *; auto.",
            "VernacExtend",
            "b73d59c67adc102479fcc10e403f01f21e881ba0"
        ],
        [
            "intros l2 l3 l4 a b H; right; left; exists l3; auto.",
            "VernacExtend",
            "057b285b8e71b593f414af3a073aa79fd5db3db8"
        ],
        [
            "intros a l H l2 l3 l4 a0 b; case l3; simpl in |- *.",
            "VernacExtend",
            "f6b9b74ca5a9f749e16f74e318639f8635817d46"
        ],
        [
            "case l; simpl in |- *.",
            "VernacExtend",
            "d4562d98f9de7130621fd63a6e7b4d8a193b814f"
        ],
        [
            "intros H0; right; right; injection H0; split; auto.",
            "VernacExtend",
            "e657e1bcbd7b58eede419cdc75a991fa9923fb37"
        ],
        [
            "apply f_equal2 with (f := cons (A:=A)); auto.",
            "VernacExtend",
            "9bc583f3cb3e4595b6a008acd7e9fb7968af39d9"
        ],
        [
            "intros b0 l0 H0; left; exists l0; injection H0; intros; repeat apply f_equal2 with (f := cons (A:=A)); auto.",
            "VernacExtend",
            "6609a0a8b57231fd9dd3fc91a2b8ce0dc73e4e99"
        ],
        [
            "intros b0 l0 H0; case (H l2 l0 l4 a0 b); auto.",
            "VernacExtend",
            "be8e82990184d58329f5d95613fb45a4027b7983"
        ],
        [
            "injection H0; auto.",
            "VernacExtend",
            "0472db19ef82fb52607346ea35cd0ef9ff2a0682"
        ],
        [
            "intros (l5, HH1); left; exists l5; apply f_equal2 with (f := cons (A:=A)); auto; injection H0; auto.",
            "VernacExtend",
            "3be0a0cb2f514a14305266d0609c2c41a6ec45de"
        ],
        [
            "intros [H1| (H1, H2)]; auto.",
            "VernacExtend",
            "7f9552c7907335f76385300e21d50cb1244c20f8"
        ],
        [
            "right; right; split; auto; apply f_equal2 with (f := cons (A:=A)); auto; injection H0; auto.",
            "VernacExtend",
            "50b531954ca7d477ed462ce578366144ebc50e17"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem same_length_ex : forall (a : A) l1 l2 l3, length (l1 ++ a :: l2) = length l3 -> exists l4 : _, (exists l5 : _, (exists b : B, length l1 = length l4 /\\ length l2 = length l5 /\\ l3 = l4 ++ b :: l5)).",
            "VernacStartTheoremProof",
            "68846b1bb540fa13b42f65bcda879bd71b2d10ea"
        ],
        [
            "intros a l1; elim l1; simpl in |- *; auto.",
            "VernacExtend",
            "f6760c9539e0cd09cb41d8dc3dc460e41bcdebd9"
        ],
        [
            "intros l2 l3; case l3; simpl in |- *; try (intros; discriminate).",
            "VernacExtend",
            "6169b09a6b6ecb576bfe1b2f631ce6f4cda17731"
        ],
        [
            "intros b l H; exists (nil (A:=B)); exists l; exists b; repeat (split; auto).",
            "VernacExtend",
            "5e3a8cf45f85e515c6af054ee5bc546bce725b97"
        ],
        [
            "intros a0 l H l2 l3; case l3; simpl in |- *; try (intros; discriminate).",
            "VernacExtend",
            "0bb9ac1a13f563bc81b75f3025665ed33748d376"
        ],
        [
            "intros b l0 H0.",
            "VernacExtend",
            "16946b6f9aa628f6e366b7e92c68b3d1aae2508e"
        ],
        [
            "case (H l2 l0); auto.",
            "VernacExtend",
            "cabb13aef5a66a3741958969cddb40d0ccd9d12f"
        ],
        [
            "intros l4 (l5, (b1, (HH1, (HH2, HH3)))).",
            "VernacExtend",
            "344c6f355caf3f2936830040092fdef922a2d73f"
        ],
        [
            "exists (b :: l4); exists l5; exists b1; repeat (simpl in |- *; split; auto).",
            "VernacExtend",
            "3c0130a6a82715a3d3a8ed7833458d2ed97cba8c"
        ],
        [
            "apply f_equal2 with (f := cons (A:=B)); auto.",
            "VernacExtend",
            "c7294ea1ef9c737942ee7108335a659edb83e7b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem in_map_inv : forall (b : B) (l : list A), In b (map f l) -> exists a : A, In a l /\\ b = f a.",
            "VernacStartTheoremProof",
            "1655eab9639fd40a336c8aa5b0f9afda22594dd4"
        ],
        [
            "intros b l; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "02375c77121bab900bd98ad9ba3e56abba8fb93f"
        ],
        [
            "intros tmp; case tmp.",
            "VernacExtend",
            "41cf146e74fe22f3af7f6805aaafc3f92f493f30"
        ],
        [
            "intros a0 l0 H [H1| H1]; auto.",
            "VernacExtend",
            "cace8dde4d3e1d53ba4c79a53bbe61d98a9c65e7"
        ],
        [
            "exists a0; auto.",
            "VernacExtend",
            "0ec6ef44bc28ba3009440bbdab5347bef3bdebc0"
        ],
        [
            "case (H H1); intros a1 (H2, H3); exists a1; auto.",
            "VernacExtend",
            "f714f3c559262feef773bad083d04b9537c3b436"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem in_map_fst_inv : forall a (l : list (B * C)), In a (map (fst (B:=_)) l) -> exists c : _, In (a, c) l.",
            "VernacStartTheoremProof",
            "8e3540772fe22f007ce75f25cf2bc2f0eb4c09c7"
        ],
        [
            "intros a l; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "65cdea4839d37593b8c879ef8d3dd9ec3faf9f61"
        ],
        [
            "intros H; case H.",
            "VernacExtend",
            "92504f2aca0180d3869137e0271f95e3042eabe7"
        ],
        [
            "intros a0 l0 H [H0| H0]; auto.",
            "VernacExtend",
            "bd5ef061e400f952bf0ef83a21314ea236abcd1d"
        ],
        [
            "exists (snd a0); left; rewrite <- H0; case a0; simpl in |- *; auto.",
            "VernacExtend",
            "e668e7fa7966ae944e46186a474986a893b1ec89"
        ],
        [
            "case H; auto; intros l1 Hl1; exists l1; auto.",
            "VernacExtend",
            "125432c9ae6ba04b4ddeda9db2d4a40ab927113b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem length_map : forall l, length (map f l) = length l.",
            "VernacStartTheoremProof",
            "0227bdbdeaef3765102dca7bf4e4ce63fafa425b"
        ],
        [
            "intros l; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "2bbab84295db0ef661ebb58820998893cacdee26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem map_app : forall l1 l2, map f (l1 ++ l2) = map f l1 ++ map f l2.",
            "VernacStartTheoremProof",
            "abe498357dd5dc5bf20f456132fac0ff4e0b5826"
        ],
        [
            "intros l; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "2bbab84295db0ef661ebb58820998893cacdee26"
        ],
        [
            "intros a l0 H l2; apply f_equal2 with (f := cons (A:=B)); auto.",
            "VernacExtend",
            "4cfa7a3531197e5ba1c6669015bac6d14c1a7c4a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem in_flat_map : forall (l : list B) (f : B -> list C) a b, In a (f b) -> In b l -> In a (flat_map f l).",
            "VernacStartTheoremProof",
            "ef90be8b294f1080f5704c633b7c72a4bfbf3328"
        ],
        [
            "intros l g; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "653d29c5d6c2e50575cc32e618be5e31a6e7c975"
        ],
        [
            "intros a l0 H a0 b H0 [H1| H1]; apply in_or_app; auto.",
            "VernacExtend",
            "1abc810ad783a18879e1a61029b1eed30bf08a8b"
        ],
        [
            "left; rewrite H1; auto.",
            "VernacExtend",
            "cefc500a4b8e2ae3d22cd4f9fb4f636b452c3450"
        ],
        [
            "right; apply H with (b := b); auto.",
            "VernacExtend",
            "5a4ba9fff4777a120e7c0c0eb8b931afa109b79c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem in_flat_map_ex : forall (l : list B) (f : B -> list C) a, In a (flat_map f l) -> exists b : _, In b l /\\ In a (f b).",
            "VernacStartTheoremProof",
            "a0cc4970c660dd64ece83934d3c4ff45cb6e80f3"
        ],
        [
            "intros l g; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "653d29c5d6c2e50575cc32e618be5e31a6e7c975"
        ],
        [
            "intros a H; case H.",
            "VernacExtend",
            "7a1830e56d5586b11b4bed946b9edb4550e2c767"
        ],
        [
            "intros a l0 H a0 H0; case in_app_or with (1 := H0); simpl in |- *; auto.",
            "VernacExtend",
            "d0980cd858a4561b9f403186861a4ce293d5a147"
        ],
        [
            "intros H1; exists a; auto.",
            "VernacExtend",
            "847b8616e9b9b02a259fc925eb8b4f1a223678e1"
        ],
        [
            "intros H1; case H with (1 := H1).",
            "VernacExtend",
            "accac83d71bb9c60020d38606ed90d0669d871ae"
        ],
        [
            "intros b (H2, H3); exists b; simpl in |- *; auto.",
            "VernacExtend",
            "aab14e981d1d40ea243d66fd91b19af92a2060a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End List.",
            "VernacEndSegment",
            "719f5d702f0905f83c02e59058aa3647a66e50ed"
        ],
        [
            "Section map2.",
            "VernacBeginSection",
            "229ffda03df9f379f4c0760d53f766ee8464944a"
        ],
        [
            "Variables (A : Type) (B : Type) (C : Type).",
            "VernacAssumption",
            "f84b66a9db8d6d8ceffab96b68aca1a24cfd8b5e"
        ],
        [
            "Variable f : A -> B -> C.",
            "VernacAssumption",
            "43e9c5907ad5d67097b95e0b8d029e9dfccd8592"
        ],
        [
            "Fixpoint map2 (l1 : list A) : list B -> list C := fun l2 => match l1 with | nil => nil | a :: l3 => match l2 with | nil => nil | b :: l4 => f a b :: map2 l3 l4 end end.",
            "VernacFixpoint",
            "a742c02779f63775cf3414b7876b1124cbbfd61e"
        ],
        [
            "Theorem map2_app : forall l1 l2 l3 l4, length l1 = length l2 -> map2 (l1 ++ l3) (l2 ++ l4) = map2 l1 l2 ++ map2 l3 l4.",
            "VernacStartTheoremProof",
            "94d94e209508d0efe609279690c8a5b6a976bbe1"
        ],
        [
            "intros l1; elim l1; auto.",
            "VernacExtend",
            "b2c1b238aaf0bbcac68c892a97b0702e39f057f6"
        ],
        [
            "intros l2; case l2; simpl in |- *; auto; intros; discriminate.",
            "VernacExtend",
            "2dc772f9df698e7dd2460a89b16c7bde8acb4f29"
        ],
        [
            "intros a l H l2 l3 l4; case l2.",
            "VernacExtend",
            "a7f050c057959a82490c73fd7be5c384c41e12b5"
        ],
        [
            "simpl in |- *; intros; discriminate.",
            "VernacExtend",
            "3d59504195c7deca6b10553f120fad45a6155eb6"
        ],
        [
            "intros b l0 H0.",
            "VernacExtend",
            "16946b6f9aa628f6e366b7e92c68b3d1aae2508e"
        ],
        [
            "apply trans_equal with (f a b :: map2 (l ++ l3) (l0 ++ l4)).",
            "VernacExtend",
            "06200f2eb4410e29e5934057f4e6736a3b253e64"
        ],
        [
            "simpl in |- *; auto.",
            "VernacExtend",
            "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
        ],
        [
            "rewrite H; auto.",
            "VernacExtend",
            "3e25713af8eaa76cddf9287af10d66733da2ee16"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End map2.",
            "VernacEndSegment",
            "d8fa5a056c71fbafe49688800d86ebfc9c8ac374"
        ],
        [
            "Arguments map2 [A B C].",
            "VernacArguments",
            "ccd2b1cd75f3feedf6e84a63468dd2df85c82aba"
        ],
        [
            "Section First.",
            "VernacBeginSection",
            "48d9de4753a32dfc7281876f36a05aa051eca238"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Fixpoint first_n (l : list A) (n : nat) {struct n} : list A := match n with | O => nil | S n1 => match l with | nil => nil | a :: l1 => a :: first_n l1 n1 end end.",
            "VernacFixpoint",
            "c4ffcac170c664fdb164e6f02225aa9feec7c0e3"
        ],
        [
            "Theorem first_n_app1 : forall (n : nat) (l1 l2 : list A), length l1 <= n -> first_n (l1 ++ l2) n = l1 ++ first_n l2 (n - length l1).",
            "VernacStartTheoremProof",
            "2f059780e1908557e9c49e7109da9a6f2beaf2b2"
        ],
        [
            "intros n; elim n; simpl in |- *; auto.",
            "VernacExtend",
            "4c8db1b39c3be89d951a6596eac36325adb07903"
        ],
        [
            "intros l1; case l1; simpl in |- *; auto.",
            "VernacExtend",
            "1bd13e92e1268ac25b43b1bcd9e0c28185fc1355"
        ],
        [
            "intros b l l2 H; Contradict H; auto with arith.",
            "VernacExtend",
            "d9054e8f89db96ea775bb303ab214f5b3e36979e"
        ],
        [
            "intros n0 H l1; case l1; simpl in |- *; auto with arith.",
            "VernacExtend",
            "7ed85e8eae3ee817bf71cdcdbc2ed5beef04d304"
        ],
        [
            "intros b l l2 H0; rewrite H; auto with arith.",
            "VernacExtend",
            "ae0774d81662c68edb222f29f36273dc8b6f9114"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem first_n_app2 : forall (n : nat) (l1 l2 : list A), n <= length l1 -> first_n (l1 ++ l2) n = first_n l1 n.",
            "VernacStartTheoremProof",
            "a7c86d2a307ddf6b9c8c8f453c41199802f4ef5e"
        ],
        [
            "intros n; elim n; simpl in |- *; auto.",
            "VernacExtend",
            "4c8db1b39c3be89d951a6596eac36325adb07903"
        ],
        [
            "intros n0 H l1 l2; case l1; simpl in |- *.",
            "VernacExtend",
            "651f654dfc1a850f1c3840c80b4dc6fa59b88fa6"
        ],
        [
            "intros H1; Contradict H1; auto with arith.",
            "VernacExtend",
            "69efa93b0bfd89373f77a0a5b983c280cd9100e2"
        ],
        [
            "intros a l H0; (apply f_equal2 with (f := cons (A:=A)); auto).",
            "VernacExtend",
            "fed5e953c2a98a881da1a1f2c42618fd204eca0e"
        ],
        [
            "apply H; apply le_S_n; auto.",
            "VernacExtend",
            "ceea56f27565536f01c5345dc607a0dfb7c63750"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem first_n_length : forall (n : nat) (l1 : list A), n <= length l1 -> length (first_n l1 n) = n.",
            "VernacStartTheoremProof",
            "549c2e8a042b003be01e35dea68c9009dcb41394"
        ],
        [
            "intros n l1; generalize n; elim l1; clear n l1; simpl in |- *; auto.",
            "VernacExtend",
            "272ea22976808fb467bb6ad2adefcd792c5bc137"
        ],
        [
            "intros n; case n; simpl in |- *; auto.",
            "VernacExtend",
            "ab60bbcc487ba06f4100c769c45a0ed978fc32e8"
        ],
        [
            "intros n1 H1; Contradict H1; auto with arith.",
            "VernacExtend",
            "b8006dd88096ac273a40e773cc681c6521c11bb4"
        ],
        [
            "intros a l H n; case n; simpl in |- *; auto with arith.",
            "VernacExtend",
            "d5042f5ed0f432237549b7435eb459e614fbac62"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem first_n_id : forall l : list A, first_n l (length l) = l.",
            "VernacStartTheoremProof",
            "dea47049fceeda8d21119be87edc0ccec2074fe8"
        ],
        [
            "intros l; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "2bbab84295db0ef661ebb58820998893cacdee26"
        ],
        [
            "intros a l0 H; apply f_equal2 with (f := cons (A:=A)); auto.",
            "VernacExtend",
            "4cf31ef13600816c7498c232639128261abd9678"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint skip_n (l : list A) (n : nat) {struct n} : list A := match n with | O => l | S n1 => match l with | nil => nil | a :: l1 => skip_n l1 n1 end end.",
            "VernacFixpoint",
            "454b1888624df03cf1b5563c60e71133f9686c08"
        ],
        [
            "Theorem skip_n_app1 : forall (n : nat) (l1 l2 : list A), length l1 <= n -> skip_n (l1 ++ l2) n = skip_n l2 (n - length l1).",
            "VernacStartTheoremProof",
            "6163f44e89ddd33433e9ecc2c89c9b21307f1182"
        ],
        [
            "intros n; elim n; simpl in |- *; auto.",
            "VernacExtend",
            "4c8db1b39c3be89d951a6596eac36325adb07903"
        ],
        [
            "intros l1; case l1; simpl in |- *; auto.",
            "VernacExtend",
            "1bd13e92e1268ac25b43b1bcd9e0c28185fc1355"
        ],
        [
            "intros b l l2 H; Contradict H; auto with arith.",
            "VernacExtend",
            "d9054e8f89db96ea775bb303ab214f5b3e36979e"
        ],
        [
            "intros n0 H l1; case l1; simpl in |- *; auto with arith.",
            "VernacExtend",
            "7ed85e8eae3ee817bf71cdcdbc2ed5beef04d304"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem skip_n_app2 : forall (n : nat) (l1 l2 : list A), n <= length l1 -> skip_n (l1 ++ l2) n = skip_n l1 n ++ l2.",
            "VernacStartTheoremProof",
            "605981aff8cd4a4c0c010635345f379f5cfc495e"
        ],
        [
            "intros n; elim n; simpl in |- *; auto.",
            "VernacExtend",
            "4c8db1b39c3be89d951a6596eac36325adb07903"
        ],
        [
            "intros n0 H l1; case l1; simpl in |- *; auto with arith.",
            "VernacExtend",
            "7ed85e8eae3ee817bf71cdcdbc2ed5beef04d304"
        ],
        [
            "intros l2 H1; Contradict H1; auto with arith.",
            "VernacExtend",
            "91c0353c8183aae65537bebeee47c0536883efa6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem skip_n_length : forall (n : nat) (l1 : list A), length (skip_n l1 n) = length l1 - n.",
            "VernacStartTheoremProof",
            "5b89665b6f9ade6ddf45ab3938905a11007c6503"
        ],
        [
            "intros n; elim n; simpl in |- *; auto with arith.",
            "VernacExtend",
            "3ce118dcfa35fa106b4a0db75896944b3c969987"
        ],
        [
            "intros n0 H l1; case l1; simpl in |- *; auto.",
            "VernacExtend",
            "ab654ea3352e8642962afd48c38ded803e945a7a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem skip_n_id : forall l : list A, skip_n l (length l) = nil.",
            "VernacStartTheoremProof",
            "0c16e10b19fa88ccdd3f0f3b4ad512dc6cf82327"
        ],
        [
            "intros l; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "2bbab84295db0ef661ebb58820998893cacdee26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem first_n_skip_n_app : forall (n : nat) (l : list A), first_n l n ++ skip_n l n = l.",
            "VernacStartTheoremProof",
            "94f065b7bf7367c30b58f1ee3e6ce81dba47cf35"
        ],
        [
            "intros n; elim n; simpl in |- *; auto.",
            "VernacExtend",
            "4c8db1b39c3be89d951a6596eac36325adb07903"
        ],
        [
            "intros n0 H l; case l; simpl in |- *; auto.",
            "VernacExtend",
            "cc00c05b8e313f6625c5dbe7ff57b19eeef2b8e8"
        ],
        [
            "intros a l0; apply f_equal2 with (f := cons (A:=A)); auto.",
            "VernacExtend",
            "1867e0764eebf73e81c30f0edaae530ebfde3e40"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End First.",
            "VernacEndSegment",
            "a6fd1a1e044f3cc9ce266ec30e28669ab8bc194a"
        ],
        [
            "Arguments first_n [A].",
            "VernacArguments",
            "dc9d9b56ff89dd7d446fffabffa6beacb505e552"
        ],
        [
            "Arguments skip_n [A].",
            "VernacArguments",
            "38ee6fcc2a58ab27c945195f471567afc7fb4ecb"
        ],
        [
            "Section FirstMax.",
            "VernacBeginSection",
            "8f910e297e9c55f0fb7f0a6b3c59e9d70e7945a4"
        ],
        [
            "Theorem exist_first_max : forall l : list nat, l <> nil -> exists a : nat, (exists l1 : list nat, (exists l2 : list nat, l = l1 ++ a :: l2 /\\ (forall n1, In n1 l1 -> n1 < a) /\\ (forall n1, In n1 l2 -> n1 <= a))).",
            "VernacStartTheoremProof",
            "a0ee59c7afe13036df9a209d5f5b370b09af20bd"
        ],
        [
            "intros l; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "2bbab84295db0ef661ebb58820998893cacdee26"
        ],
        [
            "intros H; case H; auto.",
            "VernacExtend",
            "0b36977cda16a9ec120d6463bb6c43bcda418cba"
        ],
        [
            "intros a l0; case l0.",
            "VernacExtend",
            "ad9a520624dac4f61d909cee614a7a884d2e5bd3"
        ],
        [
            "intros H H0; exists a; exists (nil (A:=nat)); exists (nil (A:=nat)); repeat (split; simpl in |- *; auto with datatypes).",
            "VernacExtend",
            "bda02fe606779874322c7279eed9e433ee5a3e8d"
        ],
        [
            "intros n1 H1; case H1.",
            "VernacExtend",
            "0cc1876a4fdec7535856a0fb25350500e2a5a6be"
        ],
        [
            "intros n1 H1; case H1.",
            "VernacExtend",
            "0cc1876a4fdec7535856a0fb25350500e2a5a6be"
        ],
        [
            "intros n l1 H H0; case H; clear H; auto.",
            "VernacExtend",
            "4ac3e86389af5917c55bc5243f0b108946e85970"
        ],
        [
            "red in |- *; intros H1; discriminate; auto.",
            "VernacExtend",
            "116de59dd63d111e72e969bae67fc376f84c230c"
        ],
        [
            "intros a1 (l2, (l3, (HH1, (HH2, HH3)))).",
            "VernacExtend",
            "0d159f40ae5124d2cd1769b911a69aecedaf0d8e"
        ],
        [
            "case (le_or_lt a1 a); intros HH4; auto.",
            "VernacExtend",
            "767459420768b0f5dfb573058bd26a86b44c9529"
        ],
        [
            "exists a; exists (nil (A:=nat)); exists (n :: l1); repeat (split; auto with datatypes).",
            "VernacExtend",
            "6a349d7782d96319fbed9f5441c2d92cfdf1c73e"
        ],
        [
            "intros n1 H1; case H1.",
            "VernacExtend",
            "0cc1876a4fdec7535856a0fb25350500e2a5a6be"
        ],
        [
            "rewrite HH1.",
            "VernacExtend",
            "0de7c6247b8dc178902c1fbc536de6588e1ee0e8"
        ],
        [
            "intros n1 H1; apply le_trans with (2 := HH4); case in_app_or with (1 := H1); auto with arith.",
            "VernacExtend",
            "449752a65bfd57438d3907d76a74e5f1a60115e8"
        ],
        [
            "intros H2; apply lt_le_weak; auto.",
            "VernacExtend",
            "3cdec64b8c94c11b27e0b45b043d0466a16be017"
        ],
        [
            "simpl in |- *; intros [H2| H2]; [ rewrite H2 | idtac ]; auto.",
            "VernacExtend",
            "7639f5984c03f493343fe3067c33a74847e87d8a"
        ],
        [
            "exists a1; exists (a :: l2); exists l3; repeat (split; simpl in |- *; auto with datatypes).",
            "VernacExtend",
            "6711eba730311b8922750659018c706ac1d175b0"
        ],
        [
            "apply f_equal2 with (f := cons (A:=nat)); auto.",
            "VernacExtend",
            "ee3ff2576c0c3a1f125151403fa5cd9cc8f1170f"
        ],
        [
            "intros n1 [H2| H2]; [ rewrite <- H2 | idtac ]; auto.",
            "VernacExtend",
            "2624526b1dc2676a552f918933d502df4d97ac0d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FirstMax.",
            "VernacEndSegment",
            "61ca46ef68657f6abcce3ceb003be68e436f1cdf"
        ],
        [
            "Section FindMin.",
            "VernacBeginSection",
            "9d200fd4f94c9d057b25a9859ccd9588c6988dd9"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Variable f : A -> nat.",
            "VernacAssumption",
            "9f23c668cb9b44da0a7007cf5e6e948fbeb3f99a"
        ],
        [
            "Fixpoint find_min (l : list A) : option (nat * A) := match l with | nil => None | a :: l1 => match find_min l1 with | None => Some (f a, a) | Some (n1, b) => let n2 := f a in match le_lt_dec n1 n2 with | left _ => Some (n1, b) | right _ => Some (n2, a) end end end.",
            "VernacFixpoint",
            "4f98956637feb399b327ca4192d7ad39c548fd8d"
        ],
        [
            "Theorem find_min_correct : forall l : list A, match find_min l with | None => l = nil | Some (a, b) => (In b l /\\ a = f b) /\\ (forall c : A, In c l -> f b <= f c) end.",
            "VernacStartTheoremProof",
            "fee2686ef8ac94baa80b9987da9f6c47509b720b"
        ],
        [
            "intros l; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "2bbab84295db0ef661ebb58820998893cacdee26"
        ],
        [
            "intros a l0; case (find_min l0); simpl in |- *.",
            "VernacExtend",
            "b92630af1319192987c0d8efd4a3b53f487b4f5c"
        ],
        [
            "intros p; case p; simpl in |- *.",
            "VernacExtend",
            "f37c5081805907f2bba9fe9cc5e5ad224d6448b8"
        ],
        [
            "intros n b ((H1, H2), H3); case (le_lt_dec n (f a)); simpl in |- *.",
            "VernacExtend",
            "4038e4ee21e7893eaba9cf796123d1276b3022e6"
        ],
        [
            "intros H4; split; auto.",
            "VernacExtend",
            "4201d7b6c423976012bf97e70352cfccd0c0c618"
        ],
        [
            "intros c [H5| H5]; auto.",
            "VernacExtend",
            "5587cdb642d62e1a61fe6162e176658db3918234"
        ],
        [
            "rewrite <- H2; rewrite <- H5; auto.",
            "VernacExtend",
            "8a72f9ec4867af4e5dcc8fc44e8ba360d25e0c19"
        ],
        [
            "intros H4; split; auto.",
            "VernacExtend",
            "4201d7b6c423976012bf97e70352cfccd0c0c618"
        ],
        [
            "intros c [H5| H5]; auto.",
            "VernacExtend",
            "5587cdb642d62e1a61fe6162e176658db3918234"
        ],
        [
            "rewrite <- H5; auto.",
            "VernacExtend",
            "7b23f432ce6f043f0e4ca7e87baaf9e47c547f26"
        ],
        [
            "apply le_trans with (f b); auto.",
            "VernacExtend",
            "fee08de5258ece9faabb37279be22ce72dd4793b"
        ],
        [
            "rewrite <- H2; auto with arith.",
            "VernacExtend",
            "b7497ebabf253a4323ff379fc3665de2df777957"
        ],
        [
            "intros H; rewrite H; split; simpl in |- *; auto.",
            "VernacExtend",
            "1de53eefaf8234cab7155ae31a5168ca586004df"
        ],
        [
            "intros c [H1| H1]; rewrite H1 || case H1; auto.",
            "VernacExtend",
            "16080c5f706fe3b572c5a2aeb0c754647d63a08a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint find_max (l : list A) : option (nat * A) := match l with | nil => None | a :: l1 => match find_max l1 with | None => Some (f a, a) | Some (n1, b) => let n2 := f a in match le_lt_dec n1 n2 with | right _ => Some (n1, b) | left _ => Some (n2, a) end end end.",
            "VernacFixpoint",
            "679cf241f3ceefa3be82cbdd4c8fd73c94acefdb"
        ],
        [
            "Theorem find_max_correct : forall l : list A, match find_max l with | None => l = nil | Some (a, b) => (In b l /\\ a = f b) /\\ (forall c : A, In c l -> f c <= f b) end.",
            "VernacStartTheoremProof",
            "84110c7397d2dd357400c27db00ad27fb6a56388"
        ],
        [
            "intros l; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "2bbab84295db0ef661ebb58820998893cacdee26"
        ],
        [
            "intros a l0; case (find_max l0); simpl in |- *.",
            "VernacExtend",
            "72ae0bd8cacc167d9184043b2f3c3909209b883d"
        ],
        [
            "intros p; case p; simpl in |- *.",
            "VernacExtend",
            "f37c5081805907f2bba9fe9cc5e5ad224d6448b8"
        ],
        [
            "intros n b ((H1, H2), H3); case (le_lt_dec n (f a)); simpl in |- *.",
            "VernacExtend",
            "4038e4ee21e7893eaba9cf796123d1276b3022e6"
        ],
        [
            "intros H4; split; auto.",
            "VernacExtend",
            "4201d7b6c423976012bf97e70352cfccd0c0c618"
        ],
        [
            "intros c [H5| H5]; auto.",
            "VernacExtend",
            "5587cdb642d62e1a61fe6162e176658db3918234"
        ],
        [
            "rewrite <- H5; auto.",
            "VernacExtend",
            "7b23f432ce6f043f0e4ca7e87baaf9e47c547f26"
        ],
        [
            "apply le_trans with (f b); auto.",
            "VernacExtend",
            "fee08de5258ece9faabb37279be22ce72dd4793b"
        ],
        [
            "rewrite <- H2; auto with arith.",
            "VernacExtend",
            "b7497ebabf253a4323ff379fc3665de2df777957"
        ],
        [
            "intros H4; split; auto.",
            "VernacExtend",
            "4201d7b6c423976012bf97e70352cfccd0c0c618"
        ],
        [
            "intros c [H5| H5]; auto.",
            "VernacExtend",
            "5587cdb642d62e1a61fe6162e176658db3918234"
        ],
        [
            "rewrite <- H5; auto.",
            "VernacExtend",
            "7b23f432ce6f043f0e4ca7e87baaf9e47c547f26"
        ],
        [
            "apply le_trans with (f b); auto.",
            "VernacExtend",
            "fee08de5258ece9faabb37279be22ce72dd4793b"
        ],
        [
            "rewrite <- H2; auto with arith.",
            "VernacExtend",
            "b7497ebabf253a4323ff379fc3665de2df777957"
        ],
        [
            "intros H; rewrite H; split; simpl in |- *; auto.",
            "VernacExtend",
            "1de53eefaf8234cab7155ae31a5168ca586004df"
        ],
        [
            "intros c [H1| H1]; rewrite H1 || case H1; auto.",
            "VernacExtend",
            "16080c5f706fe3b572c5a2aeb0c754647d63a08a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End FindMin.",
            "VernacEndSegment",
            "8748ebe572ae0f1cfe47141f4416bb522595a60d"
        ],
        [
            "Arguments find_min [A].",
            "VernacArguments",
            "6ac01dc2a99d4dbf0174669b6e43eb82f28bf98a"
        ],
        [
            "Arguments find_max [A].",
            "VernacArguments",
            "b64859da54453b3a77348a62ec39e67b6d3ef07e"
        ]
    ],
    "proofs": [
        {
            "name": "lt_minus_O",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros n; elim n; simpl in |- *; auto.",
                        "VernacExtend",
                        "4c8db1b39c3be89d951a6596eac36325adb07903"
                    ]
                },
                {
                    "command": [
                        "intros m H1; Contradict H1; auto with arith.",
                        "VernacExtend",
                        "289e28c690ab11f5725b8114598244adcff60dce"
                    ]
                },
                {
                    "command": [
                        "intros n1 Rec m; case m; simpl in |- *; auto.",
                        "VernacExtend",
                        "1d71b7202f3cf564376eff7fc29cbfc58884bbd7"
                    ]
                },
                {
                    "command": [
                        "intros m1 H1; apply Rec; apply lt_S_n; auto.",
                        "VernacExtend",
                        "fedf18cc76b13ad40cb4956ef00b8e87b2836960"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_minus",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros a; elim a; simpl in |- *; auto.",
                        "VernacExtend",
                        "18164fd9c85bbdc8f3e353cc5fb9a9f25473fa33"
                    ]
                },
                {
                    "command": [
                        "intros n H b; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "16e471eaf3e78b620ff67feda7ebc35ef5ce9274"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minus_minus_simpl4",
            "line_nb": 16,
            "steps": [
                {
                    "command": [
                        "intros a b c H H0.",
                        "VernacExtend",
                        "1cd9ec8ec95f476ed0a31d9d878dc298608e9acc"
                    ]
                },
                {
                    "command": [
                        "apply plus_minus; auto with arith.",
                        "VernacExtend",
                        "a8a10d734071e733f1dd41b0d22a4a8a6d32e028"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_plus_simpl_l_reverse with (p := b + c).",
                        "VernacExtend",
                        "d83409fb3ab01c83e4d9e58d69077614b56c0a6d"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite plus_assoc_reverse.",
                        "VernacExtend",
                        "cb86481b819a9c00904e32d536edf9bbd66369bd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_plus_minus; auto with arith.",
                        "VernacExtend",
                        "a5432e30d7d74e16734630adacbca5118010b9b1"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite plus_assoc.",
                        "VernacExtend",
                        "5dd8a7fee64febaa68da3d2e8e9db466c70f71a9"
                    ]
                },
                {
                    "command": [
                        "rewrite (plus_comm b c).",
                        "VernacExtend",
                        "086045ec6ffe14a98cb62ae986400ce780de7327"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite plus_assoc_reverse.",
                        "VernacExtend",
                        "cb86481b819a9c00904e32d536edf9bbd66369bd"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_plus_minus; auto with arith.",
                        "VernacExtend",
                        "a5432e30d7d74e16734630adacbca5118010b9b1"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (fun x => plus_comm x a).",
                        "VernacExtend",
                        "7f115b354f6495e032e85c17b9f6ba1a210a65bf"
                    ]
                },
                {
                    "command": [
                        "rewrite <- minus_plus_simpl_l_reverse; auto with arith.",
                        "VernacExtend",
                        "3de6399ed4d0a66ce084d9d3a5c385021229475f"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (1 := H); auto.",
                        "VernacExtend",
                        "d658915b8ffb9ee1ed3afd5a12cad8aba404513d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plus_minus_simpl4",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "intros a b c H H0.",
                        "VernacExtend",
                        "1cd9ec8ec95f476ed0a31d9d878dc298608e9acc"
                    ]
                },
                {
                    "command": [
                        "apply plus_minus.",
                        "VernacExtend",
                        "a1f20f6aa6a2a24f9e5d4a5d491beac766ac1947"
                    ]
                },
                {
                    "command": [
                        "rewrite (fun x y => plus_comm (x - y)).",
                        "VernacExtend",
                        "3b33a41c3b242be45e54c3b1d91684a54b9761ca"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_assoc.",
                        "VernacExtend",
                        "3bacd64a87549657845fdfa6170cde8d727d12ef"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_plus_minus; auto.",
                        "VernacExtend",
                        "fc4f2e87cbcf652674fcb17f749e642b73f98c3a"
                    ]
                },
                {
                    "command": [
                        "rewrite <- le_plus_minus; auto.",
                        "VernacExtend",
                        "fc4f2e87cbcf652674fcb17f749e642b73f98c3a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "eq_bool_dec",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros a b; case a; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "1855c720c9d08e3f0a4db050c5030ed25370a5ad"
                    ]
                },
                {
                    "command": [
                        "right; red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "7375ac0ae98b9080a332413bcc16028a0acfaef8"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "le_bool_correct1",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "intros a; elim a; simpl in |- *; auto.",
                        "VernacExtend",
                        "18164fd9c85bbdc8f3e353cc5fb9a9f25473fa33"
                    ]
                },
                {
                    "command": [
                        "intros b; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "c7ad60c082ecdb12deafd06e16c8a3b9a132e97a"
                    ]
                },
                {
                    "command": [
                        "intros n H b; case b; simpl in |- *.",
                        "VernacExtend",
                        "ba7a1479a51d4393616165948aaa6783f9359ef2"
                    ]
                },
                {
                    "command": [
                        "intros H1; inversion H1.",
                        "VernacExtend",
                        "ac70484e30350794ef2c43b274f64330975ca879"
                    ]
                },
                {
                    "command": [
                        "intros n0 H0; apply H.",
                        "VernacExtend",
                        "da2164f07e974d63da0ea99815af8027f7677409"
                    ]
                },
                {
                    "command": [
                        "apply le_S_n; auto.",
                        "VernacExtend",
                        "fc1f683897f131cb7aedf5b0868a7ec612826b5a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_bool_correct2",
            "line_nb": 56,
            "steps": [
                {
                    "command": [
                        "intros a; elim a; simpl in |- *; auto.",
                        "VernacExtend",
                        "18164fd9c85bbdc8f3e353cc5fb9a9f25473fa33"
                    ]
                },
                {
                    "command": [
                        "intros b H1; inversion H1.",
                        "VernacExtend",
                        "edd0218e518cf33aa251a2e9f867e115722815d4"
                    ]
                },
                {
                    "command": [
                        "intros n H b; case b; simpl in |- *; auto.",
                        "VernacExtend",
                        "16e471eaf3e78b620ff67feda7ebc35ef5ce9274"
                    ]
                },
                {
                    "command": [
                        "intros n0 H0; apply H.",
                        "VernacExtend",
                        "da2164f07e974d63da0ea99815af8027f7677409"
                    ]
                },
                {
                    "command": [
                        "apply lt_S_n; auto.",
                        "VernacExtend",
                        "7b6e2b7daf03a4260de01020372f476f10167d1e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_bool_correct3",
            "line_nb": 63,
            "steps": [
                {
                    "command": [
                        "intros a; elim a; simpl in |- *; auto.",
                        "VernacExtend",
                        "18164fd9c85bbdc8f3e353cc5fb9a9f25473fa33"
                    ]
                },
                {
                    "command": [
                        "intros b; case b; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "0591dcb5f6102ef20028a98d196fe69b2bbd229f"
                    ]
                },
                {
                    "command": [
                        "intros n H b; case b; simpl in |- *; try (intros; discriminate); auto with arith.",
                        "VernacExtend",
                        "87e02821db20a46b94391b93a9730e129537d67d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_bool_correct4",
            "line_nb": 68,
            "steps": [
                {
                    "command": [
                        "intros a; elim a; simpl in |- *; auto.",
                        "VernacExtend",
                        "18164fd9c85bbdc8f3e353cc5fb9a9f25473fa33"
                    ]
                },
                {
                    "command": [
                        "intros b; case b; simpl in |- *; try (intros; discriminate); auto with arith.",
                        "VernacExtend",
                        "dba1870805e8e2a80ff4ad06bcbcb0e75ba72f1b"
                    ]
                },
                {
                    "command": [
                        "intros n H b; case b; simpl in |- *; try (intros; discriminate); auto with arith.",
                        "VernacExtend",
                        "87e02821db20a46b94391b93a9730e129537d67d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_left_app",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "intros a l1; generalize a; elim l1; simpl in |- *; auto; clear a l1.",
                        "VernacExtend",
                        "795415a976c7fa268593405c6993d26ad041d21c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_left_eta",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "intros l; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "2bbab84295db0ef661ebb58820998893cacdee26"
                    ]
                },
                {
                    "command": [
                        "intros a l0 H a0 f1 H0.",
                        "VernacExtend",
                        "eeba81e2fe446c179dbe9e0432267798351f54a7"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; auto.",
                        "VernacExtend",
                        "48df2b0b453adadcea8e6914bccb68bfc33b286b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_left_map",
            "line_nb": 88,
            "steps": [
                {
                    "command": [
                        "intros C a l k; generalize a; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "03f334554c55dfdf487761057301a8da8e68c1cb"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_right_app",
            "line_nb": 91,
            "steps": [
                {
                    "command": [
                        "intros a l1; generalize a; elim l1; simpl in |- *; auto; clear a l1.",
                        "VernacExtend",
                        "795415a976c7fa268593405c6993d26ad041d21c"
                    ]
                },
                {
                    "command": [
                        "intros a l H a0 l2; rewrite H; auto.",
                        "VernacExtend",
                        "60300329cfc5f3f80d5401d2a9f14e5ce1ef00dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fold_left_init",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "intros H a l; generalize a; elim l; clear l a; simpl in |- *; auto.",
                        "VernacExtend",
                        "f77eea31895df08b9f17a249cddf67faf3240f8b"
                    ]
                },
                {
                    "command": [
                        "intros a l H0 a0.",
                        "VernacExtend",
                        "ffe6c1f48afb1738d7bc6448a2787b55381caaf9"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; auto.",
                        "VernacExtend",
                        "339e32f989b98c4748aacd68dd3407c72de16870"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_length_ind",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "intros P H l; apply well_founded_ind with (R := fun x y : list A => length x < length y); auto.",
                        "VernacExtend",
                        "3305f437e80ba9b475dd8496645945c502140331"
                    ]
                },
                {
                    "command": [
                        "apply wf_inverse_image with (R := lt); auto.",
                        "VernacExtend",
                        "f3907f99a00527da881fd8bb36c43ece8ab8e54e"
                    ]
                },
                {
                    "command": [
                        "apply lt_wf.",
                        "VernacExtend",
                        "b02ed6b1b9b0f5e569a9e95fbb799f31ca941c75"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "list_length_induction",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "intros P H l; apply well_founded_induction_type with (R := fun x y : list A => length x < length y); auto.",
                        "VernacExtend",
                        "862b5581858ae31b4328bb7000b8ac0bbde15ce0"
                    ]
                },
                {
                    "command": [
                        "apply wf_inverse_image with (R := lt); auto.",
                        "VernacExtend",
                        "f3907f99a00527da881fd8bb36c43ece8ab8e54e"
                    ]
                },
                {
                    "command": [
                        "apply lt_wf.",
                        "VernacExtend",
                        "b02ed6b1b9b0f5e569a9e95fbb799f31ca941c75"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "in_ex_app",
            "line_nb": 114,
            "steps": [
                {
                    "command": [
                        "intros a l; elim l; clear l; simpl in |- *; auto.",
                        "VernacExtend",
                        "f5876a1daa7087808e3acd59c85f178fdda90115"
                    ]
                },
                {
                    "command": [
                        "intros H; case H.",
                        "VernacExtend",
                        "92504f2aca0180d3869137e0271f95e3042eabe7"
                    ]
                },
                {
                    "command": [
                        "intros a1 l H [H1| H1]; auto.",
                        "VernacExtend",
                        "80d739dfc17f58877431b400900fbe5ca90c8362"
                    ]
                },
                {
                    "command": [
                        "exists (nil (A:=A)); exists l; simpl in |- *; auto.",
                        "VernacExtend",
                        "d981d7d4a60ccb6ddb78fe299f83609a03b88f1c"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := cons (A:=A)); auto.",
                        "VernacExtend",
                        "9bc583f3cb3e4595b6a008acd7e9fb7968af39d9"
                    ]
                },
                {
                    "command": [
                        "case H; auto; intros l1 (l2, Hl2); exists (a1 :: l1); exists l2; simpl in |- *; auto.",
                        "VernacExtend",
                        "d32b38956dff2ea893fd0f5dd5ee0319fca61998"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := cons (A:=A)); auto.",
                        "VernacExtend",
                        "9bc583f3cb3e4595b6a008acd7e9fb7968af39d9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_app",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "intros l1; elim l1; simpl in |- *; auto.",
                        "VernacExtend",
                        "b73d59c67adc102479fcc10e403f01f21e881ba0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "app_inv_head",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "intros l1; elim l1; simpl in |- *; auto.",
                        "VernacExtend",
                        "b73d59c67adc102479fcc10e403f01f21e881ba0"
                    ]
                },
                {
                    "command": [
                        "intros a l H l2 l3 H0; apply H; injection H0; auto.",
                        "VernacExtend",
                        "d097f206edb4593b6715b8508f9af9b199afa915"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "app_inv_tail",
            "line_nb": 130,
            "steps": [
                {
                    "command": [
                        "intros l1 l2; generalize l1; elim l2; clear l1 l2; simpl in |- *; auto.",
                        "VernacExtend",
                        "b4fdfdac016e5d22050568aa04417b88b63a7b87"
                    ]
                },
                {
                    "command": [
                        "intros l1 l3; case l3; auto.",
                        "VernacExtend",
                        "0ed9d298017c28658f4b36504a61c9a9011fe872"
                    ]
                },
                {
                    "command": [
                        "intros b l H; absurd (length ((b :: l) ++ l1) <= length l1).",
                        "VernacExtend",
                        "43c209edf8557d88e211c98522f1612d659c2805"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite length_app; auto with arith.",
                        "VernacExtend",
                        "842d09cd01db7b2f531884dbe136929274526da8"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H; auto with arith.",
                        "VernacExtend",
                        "95ecf2007cea6a6f78a96498bf49ad11dedf95af"
                    ]
                },
                {
                    "command": [
                        "intros a l H l1 l3; case l3.",
                        "VernacExtend",
                        "c15544eccd26e89a9086767b8ef172a4c47cd58f"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intros H1; absurd (length (a :: l ++ l1) <= length l1).",
                        "VernacExtend",
                        "088e4eb158b6b76166712522b53e765d16b17af0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite length_app; auto with arith.",
                        "VernacExtend",
                        "842d09cd01db7b2f531884dbe136929274526da8"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; auto with arith.",
                        "VernacExtend",
                        "f44aafaaaf2fde9554fec757928cccbddbfedddc"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intros b l0 H0; injection H0.",
                        "VernacExtend",
                        "85c58b1957cfe2d6932618fed2f7b5f28640e0b4"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2; apply f_equal2 with (f := cons (A:=A)); auto.",
                        "VernacExtend",
                        "4667179a3632cf4ab9a3b361659ed7d7688db352"
                    ]
                },
                {
                    "command": [
                        "apply H with (1 := H1); auto.",
                        "VernacExtend",
                        "6628b15880a21b5a061f67c5c1964b69a6f3a210"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "app_inv_app",
            "line_nb": 144,
            "steps": [
                {
                    "command": [
                        "intros l1; elim l1; simpl in |- *; auto.",
                        "VernacExtend",
                        "b73d59c67adc102479fcc10e403f01f21e881ba0"
                    ]
                },
                {
                    "command": [
                        "intros l2 l3 l4 a H; right; exists l3; auto.",
                        "VernacExtend",
                        "e75581b7b3a3c08eaa9b3d559deb23852dcf3958"
                    ]
                },
                {
                    "command": [
                        "intros a l H l2 l3 l4 a0; case l3; simpl in |- *.",
                        "VernacExtend",
                        "c24d46199ff40bad81b1a7ad1cd18dff4a4e6891"
                    ]
                },
                {
                    "command": [
                        "intros H0; left; exists l; apply f_equal2 with (f := cons (A:=A)); injection H0; auto.",
                        "VernacExtend",
                        "20a20503ae015f4a9ac05c5eb8a2583a03982711"
                    ]
                },
                {
                    "command": [
                        "intros b l0 H0; case (H l2 l0 l4 a0); auto.",
                        "VernacExtend",
                        "69cb9744298571a6332154aaf1e2e7e6b64adfb3"
                    ]
                },
                {
                    "command": [
                        "injection H0; auto.",
                        "VernacExtend",
                        "0472db19ef82fb52607346ea35cd0ef9ff2a0682"
                    ]
                },
                {
                    "command": [
                        "intros (l5, H1).",
                        "VernacExtend",
                        "6f7b41ad127528d522fe206f546157bfb238683c"
                    ]
                },
                {
                    "command": [
                        "left; exists l5; apply f_equal2 with (f := cons (A:=A)); injection H0; auto.",
                        "VernacExtend",
                        "90eb79ace19a2101c6471bec6e044c7913e437a3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "app_inv_app2",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "intros l1; elim l1; simpl in |- *; auto.",
                        "VernacExtend",
                        "b73d59c67adc102479fcc10e403f01f21e881ba0"
                    ]
                },
                {
                    "command": [
                        "intros l2 l3 l4 a b H; right; left; exists l3; auto.",
                        "VernacExtend",
                        "057b285b8e71b593f414af3a073aa79fd5db3db8"
                    ]
                },
                {
                    "command": [
                        "intros a l H l2 l3 l4 a0 b; case l3; simpl in |- *.",
                        "VernacExtend",
                        "f6b9b74ca5a9f749e16f74e318639f8635817d46"
                    ]
                },
                {
                    "command": [
                        "case l; simpl in |- *.",
                        "VernacExtend",
                        "d4562d98f9de7130621fd63a6e7b4d8a193b814f"
                    ]
                },
                {
                    "command": [
                        "intros H0; right; right; injection H0; split; auto.",
                        "VernacExtend",
                        "e657e1bcbd7b58eede419cdc75a991fa9923fb37"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := cons (A:=A)); auto.",
                        "VernacExtend",
                        "9bc583f3cb3e4595b6a008acd7e9fb7968af39d9"
                    ]
                },
                {
                    "command": [
                        "intros b0 l0 H0; left; exists l0; injection H0; intros; repeat apply f_equal2 with (f := cons (A:=A)); auto.",
                        "VernacExtend",
                        "6609a0a8b57231fd9dd3fc91a2b8ce0dc73e4e99"
                    ]
                },
                {
                    "command": [
                        "intros b0 l0 H0; case (H l2 l0 l4 a0 b); auto.",
                        "VernacExtend",
                        "be8e82990184d58329f5d95613fb45a4027b7983"
                    ]
                },
                {
                    "command": [
                        "injection H0; auto.",
                        "VernacExtend",
                        "0472db19ef82fb52607346ea35cd0ef9ff2a0682"
                    ]
                },
                {
                    "command": [
                        "intros (l5, HH1); left; exists l5; apply f_equal2 with (f := cons (A:=A)); auto; injection H0; auto.",
                        "VernacExtend",
                        "3be0a0cb2f514a14305266d0609c2c41a6ec45de"
                    ]
                },
                {
                    "command": [
                        "intros [H1| (H1, H2)]; auto.",
                        "VernacExtend",
                        "7f9552c7907335f76385300e21d50cb1244c20f8"
                    ]
                },
                {
                    "command": [
                        "right; right; split; auto; apply f_equal2 with (f := cons (A:=A)); auto; injection H0; auto.",
                        "VernacExtend",
                        "50b531954ca7d477ed462ce578366144ebc50e17"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "same_length_ex",
            "line_nb": 168,
            "steps": [
                {
                    "command": [
                        "intros a l1; elim l1; simpl in |- *; auto.",
                        "VernacExtend",
                        "f6760c9539e0cd09cb41d8dc3dc460e41bcdebd9"
                    ]
                },
                {
                    "command": [
                        "intros l2 l3; case l3; simpl in |- *; try (intros; discriminate).",
                        "VernacExtend",
                        "6169b09a6b6ecb576bfe1b2f631ce6f4cda17731"
                    ]
                },
                {
                    "command": [
                        "intros b l H; exists (nil (A:=B)); exists l; exists b; repeat (split; auto).",
                        "VernacExtend",
                        "5e3a8cf45f85e515c6af054ee5bc546bce725b97"
                    ]
                },
                {
                    "command": [
                        "intros a0 l H l2 l3; case l3; simpl in |- *; try (intros; discriminate).",
                        "VernacExtend",
                        "0bb9ac1a13f563bc81b75f3025665ed33748d376"
                    ]
                },
                {
                    "command": [
                        "intros b l0 H0.",
                        "VernacExtend",
                        "16946b6f9aa628f6e366b7e92c68b3d1aae2508e"
                    ]
                },
                {
                    "command": [
                        "case (H l2 l0); auto.",
                        "VernacExtend",
                        "cabb13aef5a66a3741958969cddb40d0ccd9d12f"
                    ]
                },
                {
                    "command": [
                        "intros l4 (l5, (b1, (HH1, (HH2, HH3)))).",
                        "VernacExtend",
                        "344c6f355caf3f2936830040092fdef922a2d73f"
                    ]
                },
                {
                    "command": [
                        "exists (b :: l4); exists l5; exists b1; repeat (simpl in |- *; split; auto).",
                        "VernacExtend",
                        "3c0130a6a82715a3d3a8ed7833458d2ed97cba8c"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := cons (A:=B)); auto.",
                        "VernacExtend",
                        "c7294ea1ef9c737942ee7108335a659edb83e7b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_map_inv",
            "line_nb": 179,
            "steps": [
                {
                    "command": [
                        "intros b l; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "02375c77121bab900bd98ad9ba3e56abba8fb93f"
                    ]
                },
                {
                    "command": [
                        "intros tmp; case tmp.",
                        "VernacExtend",
                        "41cf146e74fe22f3af7f6805aaafc3f92f493f30"
                    ]
                },
                {
                    "command": [
                        "intros a0 l0 H [H1| H1]; auto.",
                        "VernacExtend",
                        "cace8dde4d3e1d53ba4c79a53bbe61d98a9c65e7"
                    ]
                },
                {
                    "command": [
                        "exists a0; auto.",
                        "VernacExtend",
                        "0ec6ef44bc28ba3009440bbdab5347bef3bdebc0"
                    ]
                },
                {
                    "command": [
                        "case (H H1); intros a1 (H2, H3); exists a1; auto.",
                        "VernacExtend",
                        "f714f3c559262feef773bad083d04b9537c3b436"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_map_fst_inv",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "intros a l; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "65cdea4839d37593b8c879ef8d3dd9ec3faf9f61"
                    ]
                },
                {
                    "command": [
                        "intros H; case H.",
                        "VernacExtend",
                        "92504f2aca0180d3869137e0271f95e3042eabe7"
                    ]
                },
                {
                    "command": [
                        "intros a0 l0 H [H0| H0]; auto.",
                        "VernacExtend",
                        "bd5ef061e400f952bf0ef83a21314ea236abcd1d"
                    ]
                },
                {
                    "command": [
                        "exists (snd a0); left; rewrite <- H0; case a0; simpl in |- *; auto.",
                        "VernacExtend",
                        "e668e7fa7966ae944e46186a474986a893b1ec89"
                    ]
                },
                {
                    "command": [
                        "case H; auto; intros l1 Hl1; exists l1; auto.",
                        "VernacExtend",
                        "125432c9ae6ba04b4ddeda9db2d4a40ab927113b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "length_map",
            "line_nb": 193,
            "steps": [
                {
                    "command": [
                        "intros l; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "2bbab84295db0ef661ebb58820998893cacdee26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_app",
            "line_nb": 196,
            "steps": [
                {
                    "command": [
                        "intros l; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "2bbab84295db0ef661ebb58820998893cacdee26"
                    ]
                },
                {
                    "command": [
                        "intros a l0 H l2; apply f_equal2 with (f := cons (A:=B)); auto.",
                        "VernacExtend",
                        "4cfa7a3531197e5ba1c6669015bac6d14c1a7c4a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_flat_map",
            "line_nb": 200,
            "steps": [
                {
                    "command": [
                        "intros l g; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "653d29c5d6c2e50575cc32e618be5e31a6e7c975"
                    ]
                },
                {
                    "command": [
                        "intros a l0 H a0 b H0 [H1| H1]; apply in_or_app; auto.",
                        "VernacExtend",
                        "1abc810ad783a18879e1a61029b1eed30bf08a8b"
                    ]
                },
                {
                    "command": [
                        "left; rewrite H1; auto.",
                        "VernacExtend",
                        "cefc500a4b8e2ae3d22cd4f9fb4f636b452c3450"
                    ]
                },
                {
                    "command": [
                        "right; apply H with (b := b); auto.",
                        "VernacExtend",
                        "5a4ba9fff4777a120e7c0c0eb8b931afa109b79c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_flat_map_ex",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "intros l g; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "653d29c5d6c2e50575cc32e618be5e31a6e7c975"
                    ]
                },
                {
                    "command": [
                        "intros a H; case H.",
                        "VernacExtend",
                        "7a1830e56d5586b11b4bed946b9edb4550e2c767"
                    ]
                },
                {
                    "command": [
                        "intros a l0 H a0 H0; case in_app_or with (1 := H0); simpl in |- *; auto.",
                        "VernacExtend",
                        "d0980cd858a4561b9f403186861a4ce293d5a147"
                    ]
                },
                {
                    "command": [
                        "intros H1; exists a; auto.",
                        "VernacExtend",
                        "847b8616e9b9b02a259fc925eb8b4f1a223678e1"
                    ]
                },
                {
                    "command": [
                        "intros H1; case H with (1 := H1).",
                        "VernacExtend",
                        "accac83d71bb9c60020d38606ed90d0669d871ae"
                    ]
                },
                {
                    "command": [
                        "intros b (H2, H3); exists b; simpl in |- *; auto.",
                        "VernacExtend",
                        "aab14e981d1d40ea243d66fd91b19af92a2060a5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map2_app",
            "line_nb": 219,
            "steps": [
                {
                    "command": [
                        "intros l1; elim l1; auto.",
                        "VernacExtend",
                        "b2c1b238aaf0bbcac68c892a97b0702e39f057f6"
                    ]
                },
                {
                    "command": [
                        "intros l2; case l2; simpl in |- *; auto; intros; discriminate.",
                        "VernacExtend",
                        "2dc772f9df698e7dd2460a89b16c7bde8acb4f29"
                    ]
                },
                {
                    "command": [
                        "intros a l H l2 l3 l4; case l2.",
                        "VernacExtend",
                        "a7f050c057959a82490c73fd7be5c384c41e12b5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intros; discriminate.",
                        "VernacExtend",
                        "3d59504195c7deca6b10553f120fad45a6155eb6"
                    ]
                },
                {
                    "command": [
                        "intros b l0 H0.",
                        "VernacExtend",
                        "16946b6f9aa628f6e366b7e92c68b3d1aae2508e"
                    ]
                },
                {
                    "command": [
                        "apply trans_equal with (f a b :: map2 (l ++ l3) (l0 ++ l4)).",
                        "VernacExtend",
                        "06200f2eb4410e29e5934057f4e6736a3b253e64"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; auto.",
                        "VernacExtend",
                        "9b631374b1d3067f703fd99c5dc6e1e5c8405957"
                    ]
                },
                {
                    "command": [
                        "rewrite H; auto.",
                        "VernacExtend",
                        "3e25713af8eaa76cddf9287af10d66733da2ee16"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "first_n_app1",
            "line_nb": 234,
            "steps": [
                {
                    "command": [
                        "intros n; elim n; simpl in |- *; auto.",
                        "VernacExtend",
                        "4c8db1b39c3be89d951a6596eac36325adb07903"
                    ]
                },
                {
                    "command": [
                        "intros l1; case l1; simpl in |- *; auto.",
                        "VernacExtend",
                        "1bd13e92e1268ac25b43b1bcd9e0c28185fc1355"
                    ]
                },
                {
                    "command": [
                        "intros b l l2 H; Contradict H; auto with arith.",
                        "VernacExtend",
                        "d9054e8f89db96ea775bb303ab214f5b3e36979e"
                    ]
                },
                {
                    "command": [
                        "intros n0 H l1; case l1; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "7ed85e8eae3ee817bf71cdcdbc2ed5beef04d304"
                    ]
                },
                {
                    "command": [
                        "intros b l l2 H0; rewrite H; auto with arith.",
                        "VernacExtend",
                        "ae0774d81662c68edb222f29f36273dc8b6f9114"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "first_n_app2",
            "line_nb": 241,
            "steps": [
                {
                    "command": [
                        "intros n; elim n; simpl in |- *; auto.",
                        "VernacExtend",
                        "4c8db1b39c3be89d951a6596eac36325adb07903"
                    ]
                },
                {
                    "command": [
                        "intros n0 H l1 l2; case l1; simpl in |- *.",
                        "VernacExtend",
                        "651f654dfc1a850f1c3840c80b4dc6fa59b88fa6"
                    ]
                },
                {
                    "command": [
                        "intros H1; Contradict H1; auto with arith.",
                        "VernacExtend",
                        "69efa93b0bfd89373f77a0a5b983c280cd9100e2"
                    ]
                },
                {
                    "command": [
                        "intros a l H0; (apply f_equal2 with (f := cons (A:=A)); auto).",
                        "VernacExtend",
                        "fed5e953c2a98a881da1a1f2c42618fd204eca0e"
                    ]
                },
                {
                    "command": [
                        "apply H; apply le_S_n; auto.",
                        "VernacExtend",
                        "ceea56f27565536f01c5345dc607a0dfb7c63750"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "first_n_length",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "intros n l1; generalize n; elim l1; clear n l1; simpl in |- *; auto.",
                        "VernacExtend",
                        "272ea22976808fb467bb6ad2adefcd792c5bc137"
                    ]
                },
                {
                    "command": [
                        "intros n; case n; simpl in |- *; auto.",
                        "VernacExtend",
                        "ab60bbcc487ba06f4100c769c45a0ed978fc32e8"
                    ]
                },
                {
                    "command": [
                        "intros n1 H1; Contradict H1; auto with arith.",
                        "VernacExtend",
                        "b8006dd88096ac273a40e773cc681c6521c11bb4"
                    ]
                },
                {
                    "command": [
                        "intros a l H n; case n; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "d5042f5ed0f432237549b7435eb459e614fbac62"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "first_n_id",
            "line_nb": 254,
            "steps": [
                {
                    "command": [
                        "intros l; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "2bbab84295db0ef661ebb58820998893cacdee26"
                    ]
                },
                {
                    "command": [
                        "intros a l0 H; apply f_equal2 with (f := cons (A:=A)); auto.",
                        "VernacExtend",
                        "4cf31ef13600816c7498c232639128261abd9678"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "skip_n_app1",
            "line_nb": 259,
            "steps": [
                {
                    "command": [
                        "intros n; elim n; simpl in |- *; auto.",
                        "VernacExtend",
                        "4c8db1b39c3be89d951a6596eac36325adb07903"
                    ]
                },
                {
                    "command": [
                        "intros l1; case l1; simpl in |- *; auto.",
                        "VernacExtend",
                        "1bd13e92e1268ac25b43b1bcd9e0c28185fc1355"
                    ]
                },
                {
                    "command": [
                        "intros b l l2 H; Contradict H; auto with arith.",
                        "VernacExtend",
                        "d9054e8f89db96ea775bb303ab214f5b3e36979e"
                    ]
                },
                {
                    "command": [
                        "intros n0 H l1; case l1; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "7ed85e8eae3ee817bf71cdcdbc2ed5beef04d304"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "skip_n_app2",
            "line_nb": 265,
            "steps": [
                {
                    "command": [
                        "intros n; elim n; simpl in |- *; auto.",
                        "VernacExtend",
                        "4c8db1b39c3be89d951a6596eac36325adb07903"
                    ]
                },
                {
                    "command": [
                        "intros n0 H l1; case l1; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "7ed85e8eae3ee817bf71cdcdbc2ed5beef04d304"
                    ]
                },
                {
                    "command": [
                        "intros l2 H1; Contradict H1; auto with arith.",
                        "VernacExtend",
                        "91c0353c8183aae65537bebeee47c0536883efa6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "skip_n_length",
            "line_nb": 270,
            "steps": [
                {
                    "command": [
                        "intros n; elim n; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "3ce118dcfa35fa106b4a0db75896944b3c969987"
                    ]
                },
                {
                    "command": [
                        "intros n0 H l1; case l1; simpl in |- *; auto.",
                        "VernacExtend",
                        "ab654ea3352e8642962afd48c38ded803e945a7a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "skip_n_id",
            "line_nb": 274,
            "steps": [
                {
                    "command": [
                        "intros l; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "2bbab84295db0ef661ebb58820998893cacdee26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "first_n_skip_n_app",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "intros n; elim n; simpl in |- *; auto.",
                        "VernacExtend",
                        "4c8db1b39c3be89d951a6596eac36325adb07903"
                    ]
                },
                {
                    "command": [
                        "intros n0 H l; case l; simpl in |- *; auto.",
                        "VernacExtend",
                        "cc00c05b8e313f6625c5dbe7ff57b19eeef2b8e8"
                    ]
                },
                {
                    "command": [
                        "intros a l0; apply f_equal2 with (f := cons (A:=A)); auto.",
                        "VernacExtend",
                        "1867e0764eebf73e81c30f0edaae530ebfde3e40"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "exist_first_max",
            "line_nb": 286,
            "steps": [
                {
                    "command": [
                        "intros l; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "2bbab84295db0ef661ebb58820998893cacdee26"
                    ]
                },
                {
                    "command": [
                        "intros H; case H; auto.",
                        "VernacExtend",
                        "0b36977cda16a9ec120d6463bb6c43bcda418cba"
                    ]
                },
                {
                    "command": [
                        "intros a l0; case l0.",
                        "VernacExtend",
                        "ad9a520624dac4f61d909cee614a7a884d2e5bd3"
                    ]
                },
                {
                    "command": [
                        "intros H H0; exists a; exists (nil (A:=nat)); exists (nil (A:=nat)); repeat (split; simpl in |- *; auto with datatypes).",
                        "VernacExtend",
                        "bda02fe606779874322c7279eed9e433ee5a3e8d"
                    ]
                },
                {
                    "command": [
                        "intros n1 H1; case H1.",
                        "VernacExtend",
                        "0cc1876a4fdec7535856a0fb25350500e2a5a6be"
                    ]
                },
                {
                    "command": [
                        "intros n1 H1; case H1.",
                        "VernacExtend",
                        "0cc1876a4fdec7535856a0fb25350500e2a5a6be"
                    ]
                },
                {
                    "command": [
                        "intros n l1 H H0; case H; clear H; auto.",
                        "VernacExtend",
                        "4ac3e86389af5917c55bc5243f0b108946e85970"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H1; discriminate; auto.",
                        "VernacExtend",
                        "116de59dd63d111e72e969bae67fc376f84c230c"
                    ]
                },
                {
                    "command": [
                        "intros a1 (l2, (l3, (HH1, (HH2, HH3)))).",
                        "VernacExtend",
                        "0d159f40ae5124d2cd1769b911a69aecedaf0d8e"
                    ]
                },
                {
                    "command": [
                        "case (le_or_lt a1 a); intros HH4; auto.",
                        "VernacExtend",
                        "767459420768b0f5dfb573058bd26a86b44c9529"
                    ]
                },
                {
                    "command": [
                        "exists a; exists (nil (A:=nat)); exists (n :: l1); repeat (split; auto with datatypes).",
                        "VernacExtend",
                        "6a349d7782d96319fbed9f5441c2d92cfdf1c73e"
                    ]
                },
                {
                    "command": [
                        "intros n1 H1; case H1.",
                        "VernacExtend",
                        "0cc1876a4fdec7535856a0fb25350500e2a5a6be"
                    ]
                },
                {
                    "command": [
                        "rewrite HH1.",
                        "VernacExtend",
                        "0de7c6247b8dc178902c1fbc536de6588e1ee0e8"
                    ]
                },
                {
                    "command": [
                        "intros n1 H1; apply le_trans with (2 := HH4); case in_app_or with (1 := H1); auto with arith.",
                        "VernacExtend",
                        "449752a65bfd57438d3907d76a74e5f1a60115e8"
                    ]
                },
                {
                    "command": [
                        "intros H2; apply lt_le_weak; auto.",
                        "VernacExtend",
                        "3cdec64b8c94c11b27e0b45b043d0466a16be017"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intros [H2| H2]; [ rewrite H2 | idtac ]; auto.",
                        "VernacExtend",
                        "7639f5984c03f493343fe3067c33a74847e87d8a"
                    ]
                },
                {
                    "command": [
                        "exists a1; exists (a :: l2); exists l3; repeat (split; simpl in |- *; auto with datatypes).",
                        "VernacExtend",
                        "6711eba730311b8922750659018c706ac1d175b0"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := cons (A:=nat)); auto.",
                        "VernacExtend",
                        "ee3ff2576c0c3a1f125151403fa5cd9cc8f1170f"
                    ]
                },
                {
                    "command": [
                        "intros n1 [H2| H2]; [ rewrite <- H2 | idtac ]; auto.",
                        "VernacExtend",
                        "2624526b1dc2676a552f918933d502df4d97ac0d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_max_correct",
            "line_nb": 329,
            "steps": [
                {
                    "command": [
                        "intros l; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "2bbab84295db0ef661ebb58820998893cacdee26"
                    ]
                },
                {
                    "command": [
                        "intros a l0; case (find_max l0); simpl in |- *.",
                        "VernacExtend",
                        "72ae0bd8cacc167d9184043b2f3c3909209b883d"
                    ]
                },
                {
                    "command": [
                        "intros p; case p; simpl in |- *.",
                        "VernacExtend",
                        "f37c5081805907f2bba9fe9cc5e5ad224d6448b8"
                    ]
                },
                {
                    "command": [
                        "intros n b ((H1, H2), H3); case (le_lt_dec n (f a)); simpl in |- *.",
                        "VernacExtend",
                        "4038e4ee21e7893eaba9cf796123d1276b3022e6"
                    ]
                },
                {
                    "command": [
                        "intros H4; split; auto.",
                        "VernacExtend",
                        "4201d7b6c423976012bf97e70352cfccd0c0c618"
                    ]
                },
                {
                    "command": [
                        "intros c [H5| H5]; auto.",
                        "VernacExtend",
                        "5587cdb642d62e1a61fe6162e176658db3918234"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H5; auto.",
                        "VernacExtend",
                        "7b23f432ce6f043f0e4ca7e87baaf9e47c547f26"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (f b); auto.",
                        "VernacExtend",
                        "fee08de5258ece9faabb37279be22ce72dd4793b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2; auto with arith.",
                        "VernacExtend",
                        "b7497ebabf253a4323ff379fc3665de2df777957"
                    ]
                },
                {
                    "command": [
                        "intros H4; split; auto.",
                        "VernacExtend",
                        "4201d7b6c423976012bf97e70352cfccd0c0c618"
                    ]
                },
                {
                    "command": [
                        "intros c [H5| H5]; auto.",
                        "VernacExtend",
                        "5587cdb642d62e1a61fe6162e176658db3918234"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H5; auto.",
                        "VernacExtend",
                        "7b23f432ce6f043f0e4ca7e87baaf9e47c547f26"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (f b); auto.",
                        "VernacExtend",
                        "fee08de5258ece9faabb37279be22ce72dd4793b"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2; auto with arith.",
                        "VernacExtend",
                        "b7497ebabf253a4323ff379fc3665de2df777957"
                    ]
                },
                {
                    "command": [
                        "intros H; rewrite H; split; simpl in |- *; auto.",
                        "VernacExtend",
                        "1de53eefaf8234cab7155ae31a5168ca586004df"
                    ]
                },
                {
                    "command": [
                        "intros c [H1| H1]; rewrite H1 || case H1; auto.",
                        "VernacExtend",
                        "16080c5f706fe3b572c5a2aeb0c754647d63a08a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}