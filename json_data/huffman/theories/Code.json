{
    "filename": "theories/Code.v",
    "coq_project": "huffman",
    "vernac_cmds": [
        [
            "From Huffman Require Export Aux.",
            "VernacRequire",
            "ea24dc75e02edb0748d5e62b170bf0817760d489"
        ],
        [
            "From Huffman Require Export Permutation.",
            "VernacRequire",
            "37394a3a1204d537581ecd2116a50dc029e15045"
        ],
        [
            "From Huffman Require Export UniqueKey.",
            "VernacRequire",
            "3e16aad401d6b127c82271c87b0e0aae2a3a5736"
        ],
        [
            "From Huffman Require Export Frequency.",
            "VernacRequire",
            "e646295d5130bdb5b3cd1ba630f95092a07693fc"
        ],
        [
            "Section Code.",
            "VernacBeginSection",
            "04d142fac13fad42f8c71f8f25866de618a02f8c"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Variable eqA_dec : forall a b : A, {a = b} + {a <> b}.",
            "VernacAssumption",
            "c7dce40a1a1159550fac93e6bff94107f0f6b383"
        ],
        [
            "Definition code := list (A * list bool).",
            "VernacDefinition",
            "9b680a251815182cb3ad1ae3093e4c8808256207"
        ],
        [
            "Definition in_alphabet (m : list A) (c : code) := forall a : A, In a m -> exists l : list bool, In (a, l) c.",
            "VernacDefinition",
            "4575e09302fa258b425a6d75548b78f5092d8896"
        ],
        [
            "Theorem in_alphabet_incl : forall m1 m2 c, incl m1 m2 -> in_alphabet m2 c -> in_alphabet m1 c.",
            "VernacStartTheoremProof",
            "957dd52c8b6e703826ec719d829cfe00df6c054d"
        ],
        [
            "intros m1 m2 c H H0; red in |- *.",
            "VernacExtend",
            "b8d734f55673c28d21ea47fbfda354da745ee242"
        ],
        [
            "intros a H1; case (H0 a); auto.",
            "VernacExtend",
            "6dd1adce1c6d90a8b9939a7c820b92471c0c22fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem in_alphabet_nil : forall c, in_alphabet nil c.",
            "VernacStartTheoremProof",
            "afcffd5400a2e5a949b2babc75e37e504c8b5aef"
        ],
        [
            "intros c a H; inversion H.",
            "VernacExtend",
            "36f35d93a1528c1e6bdaf58ed8e2338420e8e327"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve in_alphabet_nil : core.",
            "VernacHints",
            "61e4f34c91827ee5004dc6518943ad1d97da7331"
        ],
        [
            "Theorem in_alphabet_cons : forall (m : list A) c a ca, In (a, ca) c -> in_alphabet m c -> in_alphabet (a :: m) c.",
            "VernacStartTheoremProof",
            "8d0d50689935a0036cf354b9c86785c42e13c5f8"
        ],
        [
            "intros m c a ca H H0; red in |- *; simpl in |- *.",
            "VernacExtend",
            "97d3c65cb41d0d7be0db8f1f71d28220c040fb3e"
        ],
        [
            "intros a1 [H1| H1].",
            "VernacExtend",
            "d706e5a4caf1811b031ada5f038f37aa6c4290fd"
        ],
        [
            "exists ca; rewrite <- H1; auto.",
            "VernacExtend",
            "5e759dfaaaa9c98b5fa93c6bfda888131f159242"
        ],
        [
            "case (H0 a1); auto.",
            "VernacExtend",
            "cbefb9acb9aa9caa454de9a680d9d4a7e9543653"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve in_alphabet_cons : core.",
            "VernacHints",
            "2293a3339f223c3d922ea8946e2dcb269b37dd14"
        ],
        [
            "Theorem in_alphabet_inv : forall (c : code) (a : A) (l : list A), in_alphabet (a :: l) c -> in_alphabet l c.",
            "VernacStartTheoremProof",
            "501388022bde5e9b02e5626e7c5dde22c39b570b"
        ],
        [
            "intros c a l H; red in |- *.",
            "VernacExtend",
            "5791c0763feb82e7ecd1765ed6973ca1d8e79f27"
        ],
        [
            "intros a1 H1; apply H; simpl in |- *; auto.",
            "VernacExtend",
            "1b49adc05dbc7a48269280e9323d7e3d1d255ab9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition code_dec : forall (c : code) a, {(exists l : list bool, In (a, l) c)} + {(forall l : list bool, ~ In (a, l) c)}.",
            "VernacDefinition",
            "640a7b60f8e8a53d4456b6bd4155ae90dac1a0b5"
        ],
        [
            "intros c a; elim c; simpl in |- *; auto.",
            "VernacExtend",
            "90b9595df10f0954037cfbebcdd94d1af081e6c0"
        ],
        [
            "intros (a1, l1) l H; case (eqA_dec a1 a); intros H1.",
            "VernacExtend",
            "d1f1f6eded5742f07cd38da1e0eeab33e82d4b64"
        ],
        [
            "left; exists l1; rewrite H1; auto.",
            "VernacExtend",
            "d1c892f0cf0de0a517ab3b0a6be0e62bec78aca2"
        ],
        [
            "case H.",
            "VernacExtend",
            "ed133bc3c18fb327812c50c4771060c04c7f32b1"
        ],
        [
            "intros e; left; case e; intros l2 H2; exists l2; auto.",
            "VernacExtend",
            "d36bd6ec3449f686e40156d68776cd4104f7fd20"
        ],
        [
            "intros n; right; intros l0; red in |- *; intros [H0| H0]; [ case H1 | case (n l0) ]; auto.",
            "VernacExtend",
            "627f3aa9248e62b203f6d9bbbf20c62b98de8163"
        ],
        [
            "injection H0; auto.",
            "VernacExtend",
            "0472db19ef82fb52607346ea35cd0ef9ff2a0682"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition in_alphabet_dec : forall m c, {in_alphabet m c} + {~ in_alphabet m c}.",
            "VernacDefinition",
            "c8384a6f9c3496906e7ef5f8d48d4a8f73d32ed2"
        ],
        [
            "intros m; elim m; simpl in |- *; auto.",
            "VernacExtend",
            "2fc3f017969b336e40869746966e57ca7316c270"
        ],
        [
            "intros a l H c; case (H c); intros H1.",
            "VernacExtend",
            "67268a23c2b11eca65152fbc8afe0f61df92806d"
        ],
        [
            "case (code_dec c a); intros H2.",
            "VernacExtend",
            "1fa5ff419f688ee0086b23cedc55abe77b4fccdc"
        ],
        [
            "left; red in |- *; simpl in |- *.",
            "VernacExtend",
            "ef2ca43b132984e33b59125a003026ac0161a3d4"
        ],
        [
            "intros a1 [H3| H3]; [ case H2; intros l1 Hl1; exists l1; rewrite <- H3 | idtac ]; auto.",
            "VernacExtend",
            "638e0fa311565a9ae81ff3857f0ef71561f9bae2"
        ],
        [
            "right; red in |- *; intros H3; case (H3 a); simpl in |- *; auto.",
            "VernacExtend",
            "55bed6f73b530348ab7c79c13417f816dabf65a7"
        ],
        [
            "right; Contradict H1; auto; red in |- *.",
            "VernacExtend",
            "c0f1f21ab08d67b09a6022044917bb694a837c06"
        ],
        [
            "intros a0 H0; case (H1 a0); simpl in |- *; auto.",
            "VernacExtend",
            "1e0058fdb0f40998ebce5c5dd438cefda2b0d91c"
        ],
        [
            "intros x H2; exists x; auto.",
            "VernacExtend",
            "14d49749a6e11e1538882a3e2e0ac3bcb116bcbb"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Definition not_null (c : code) := forall a : A, ~ In (a, nil) c.",
            "VernacDefinition",
            "8bfae037e1db4fbe942dd6b83848d0fc39c0b711"
        ],
        [
            "Theorem not_null_inv : forall (a : A * list bool) l, not_null (a :: l) -> not_null l.",
            "VernacStartTheoremProof",
            "f8c14f722135df0fba3190a7ffd52a4d6528b657"
        ],
        [
            "intros a l H; red in |- *.",
            "VernacExtend",
            "dc685e494a5f59ad5ea0e0755a5f1fca52ca07de"
        ],
        [
            "intros a0; red in |- *; intros H0; case (H a0); simpl in |- *; auto.",
            "VernacExtend",
            "73f960dca906bc60e717d26f36b725c01e701a7b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_null_cons : forall a b (l : list (A * list bool)), b <> nil -> not_null l -> not_null ((a, b) :: l).",
            "VernacStartTheoremProof",
            "a28352f6d537be4e99c77eed2d5457b9dd57fb1c"
        ],
        [
            "intros a b l H H0; red in |- *.",
            "VernacExtend",
            "969ecae7afc634b2f3b21ae30cf3522e580e5d92"
        ],
        [
            "intros a1; simpl in |- *; red in |- *; intros [H1| H1]; auto.",
            "VernacExtend",
            "b3c213d603b3f18a2ef3a60f9baa0748655508f8"
        ],
        [
            "case H; injection H1; auto.",
            "VernacExtend",
            "3f1cfc0a43c2ed61682ec3c7e008aa9c92c7520b"
        ],
        [
            "case (H0 a1); simpl in |- *; auto.",
            "VernacExtend",
            "b254a2fdeb525f4e97cf7c3d26ebf786ca861258"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve not_null_cons : core.",
            "VernacHints",
            "555c47418c4c0dd8574430591c1c49cf2a04dadc"
        ],
        [
            "Theorem not_null_app : forall l1 l2 : list (A * list bool), not_null l1 -> not_null l2 -> not_null (l1 ++ l2).",
            "VernacStartTheoremProof",
            "fd07c203ad93126852e084a80c15d95aaceb6c9b"
        ],
        [
            "intros l1; elim l1; simpl in |- *; auto.",
            "VernacExtend",
            "b73d59c67adc102479fcc10e403f01f21e881ba0"
        ],
        [
            "intros (a2, l2); case l2; auto.",
            "VernacExtend",
            "c9c4b98710c6ecdee0a98e10fa8c7a0e4d84d748"
        ],
        [
            "intros l H l0 H0 H1; case (H0 a2); simpl in |- *; auto.",
            "VernacExtend",
            "81a34d38c3bc3a04594111b507611748c0acc6d5"
        ],
        [
            "intros b l l0 H l3 H0 H1; apply not_null_cons; auto.",
            "VernacExtend",
            "6bba431e7d2559fd0e93c35b5233481424458e36"
        ],
        [
            "red in |- *; intros H2; discriminate.",
            "VernacExtend",
            "f42421f065ea82a74b4c377e2eba0e20f1874839"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply not_null_inv with (1 := H0).",
            "VernacExtend",
            "d74d3f1d41e0521f519cdf73dc642f98bdc11c36"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve not_null_app : core.",
            "VernacHints",
            "13ca6738cc82207be0b628efebf385a31a97e5f9"
        ],
        [
            "Theorem not_null_map : forall (l : list (A * list bool)) b, not_null (map (fun v => match v with | (a1, b1) => (a1, b :: b1) end) l).",
            "VernacStartTheoremProof",
            "719233c1f86633a17a108b38ddf2b207ce8d59e8"
        ],
        [
            "intros l; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "2bbab84295db0ef661ebb58820998893cacdee26"
        ],
        [
            "intros b; red in |- *; intros a; red in |- *; intros H; inversion H.",
            "VernacExtend",
            "84682a8f5d3c74057a7bcec45bc2486d55308ebb"
        ],
        [
            "intros (a1, l1) l0 H b; apply not_null_cons; auto.",
            "VernacExtend",
            "fac039d905a5bd2440ad9cb254a6984895998cba"
        ],
        [
            "red in |- *; intros; discriminate.",
            "VernacExtend",
            "3dc8cab2ad5f5b0f8cdd0c668624cfd3367c3237"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve not_null_map : core.",
            "VernacHints",
            "23f5f755abe2613484510c8a59c35d601de75d00"
        ],
        [
            "Inductive is_prefix : list bool -> list bool -> Prop := | prefixNull : forall l, is_prefix nil l | prefixCons : forall (b : bool) l1 l2, is_prefix l1 l2 -> is_prefix (b :: l1) (b :: l2).",
            "VernacInductive",
            "8c0841a674894b1cb0a0af48464cd680f7b9408d"
        ],
        [
            "Hint Constructors is_prefix : core.",
            "VernacHints",
            "eba6ca64f3bea9218832c854d5b87365b38d5933"
        ],
        [
            "Theorem is_prefix_refl : forall l, is_prefix l l.",
            "VernacStartTheoremProof",
            "5f23b29d7b86f80da905efd81ffa067393646c18"
        ],
        [
            "intros l; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "2bbab84295db0ef661ebb58820998893cacdee26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve is_prefix_refl : core.",
            "VernacHints",
            "4367154a8cc301b1454252a81a261440782e5253"
        ],
        [
            "Definition unique_prefix (l : code) := (forall (a1 a2 : A) (lb1 lb2 : list bool), In (a1, lb1) l -> In (a2, lb2) l -> is_prefix lb1 lb2 -> a1 = a2) /\\ unique_key l.",
            "VernacDefinition",
            "32ead640b12d2f612b1539c77455437efc277507"
        ],
        [
            "Theorem unique_prefix_nil : unique_prefix nil.",
            "VernacStartTheoremProof",
            "8f393b84e3364a8692303108bf5cd30de2c1d28c"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "intros a1 a2 lb1 lb2 H; inversion H; auto.",
            "VernacExtend",
            "82ad3b71cabcead40115a77a105faecb9ae3b3e9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve unique_prefix_nil : core.",
            "VernacHints",
            "23806d90e9fe294be589e56be96217fc39716b1f"
        ],
        [
            "Theorem unique_prefix1 : forall (c : code) (a1 a2 : A) (lb1 lb2 : list bool), unique_prefix c -> In (a1, lb1) c -> In (a2, lb2) c -> is_prefix lb1 lb2 -> a1 = a2.",
            "VernacStartTheoremProof",
            "c2b6da350da4490c66f93a0bb14897dc288cd4a5"
        ],
        [
            "intros c a1 a2 lb1 lb2 (H1, H2); apply (H1 a1 a2 lb1 lb2); auto.",
            "VernacExtend",
            "fe6d44277b89466e4496147b7a9dea3735afaccd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem unique_prefix2 : forall c : code, unique_prefix c -> unique_key c.",
            "VernacStartTheoremProof",
            "fa861e2257506a669bb0fdbdf35fdf711cf088f0"
        ],
        [
            "intros c (H1, H2); auto.",
            "VernacExtend",
            "82e8ab2cc7ea22798fdf9e71574caf41c3b066dd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem unique_prefix_inv : forall (c : code) (a : A) (l : list bool), unique_prefix ((a, l) :: c) -> unique_prefix c.",
            "VernacStartTheoremProof",
            "2a45c1e4dfda443ee597edadba059cd748822e62"
        ],
        [
            "intros c a l (H1, H2); split.",
            "VernacExtend",
            "71e0a2f4589aa67f8f72da5b614d3a651088242a"
        ],
        [
            "intros a1 a2 lb1 lb2 H H0 H3; apply (H1 a1 a2 lb1 lb2); simpl in |- *; auto.",
            "VernacExtend",
            "69ac6e27164bfa294c1e44b4f80f521279fef8ad"
        ],
        [
            "apply unique_key_inv with (1 := H2); auto.",
            "VernacExtend",
            "6ea4510af6bd6479ebade35cfa0fc96c4dbfbd0d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem unique_prefix_not_null : forall (c : code) (a b : A), a <> b -> in_alphabet (a :: b :: nil) c -> unique_prefix c -> not_null c.",
            "VernacStartTheoremProof",
            "dd6af71814884fcf6ed15007f7e1caf040d8954e"
        ],
        [
            "intros c a b H H0 H1.",
            "VernacExtend",
            "995ccfb1b556c13a9b4214e5add36a7bae323b50"
        ],
        [
            "unfold not_null in |- *; intros a1; red in |- *; intros Ha1.",
            "VernacExtend",
            "f43a0246d10744984da787744ad3950733345b7c"
        ],
        [
            "case (H0 a); simpl in |- *; auto; intros l1 Hl1.",
            "VernacExtend",
            "81cddf2140102e64b8fc2e1135a2035deda8adf8"
        ],
        [
            "case (H0 b); simpl in |- *; auto; intros l2 Hl2.",
            "VernacExtend",
            "7c8d6ec5f0ef937aab2a46fa609b45b81a8f7a0d"
        ],
        [
            "case H; apply trans_equal with a1.",
            "VernacExtend",
            "f561a6fa20e5d0e25125eac2da3cb8cfb87b3737"
        ],
        [
            "apply sym_equal; apply unique_prefix1 with (3 := Hl1) (2 := Ha1); auto.",
            "VernacExtend",
            "40d2620c1f0492e5d434a50bc0f78b6f2146b5fa"
        ],
        [
            "apply unique_prefix1 with (3 := Hl2) (2 := Ha1); auto.",
            "VernacExtend",
            "d1a6844782f3122a3b88876350bc021af6385e05"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem unique_prefix_permutation : forall c1 c2 : code, permutation c1 c2 -> unique_prefix c1 -> unique_prefix c2.",
            "VernacStartTheoremProof",
            "b4d419580df1391e11bf2e394a6736a1a0d49168"
        ],
        [
            "intros c1 c2 H (H1, H2).",
            "VernacExtend",
            "566cba2645f73797c6739d8db9c17786aecd5e18"
        ],
        [
            "cut (permutation c2 c1); [ intros HP; split | apply permutation_sym; auto ].",
            "VernacExtend",
            "4256f20f278417c8228ff957ac5a93fe4c8cfc10"
        ],
        [
            "intros a1 a2 lb1 lb2 H0 H3 H4.",
            "VernacExtend",
            "3dde8ce203eb1c11110e1d660cf22d00fff60a0b"
        ],
        [
            "apply (H1 a1 a2 lb1 lb2); auto.",
            "VernacExtend",
            "2aea120b98da5b36e62ff3f8f33e6390802db992"
        ],
        [
            "apply permutation_in with (2 := H0); auto.",
            "VernacExtend",
            "281217ab6b513653776b34f7aebc41eee1ccac62"
        ],
        [
            "apply permutation_in with (2 := H3); auto.",
            "VernacExtend",
            "9cd180cca9d69d8857423975d035456c6defd1fe"
        ],
        [
            "apply unique_key_perm with (2 := H2); auto.",
            "VernacExtend",
            "642a932e14a5c7fb7306f8174d3e1c14d3469f69"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint find_code (a : A) (l : code) {struct l} : list bool := match l with | nil => nil | (b, c) :: l1 => match eqA_dec a b with | left _ => c | right _ => find_code a l1 end end.",
            "VernacFixpoint",
            "d4608573cdc0eeee415f7a2a9f24c4feae21b669"
        ],
        [
            "Theorem find_code_correct1 : forall (c : code) (a : A) (b : bool) (l : list bool), find_code a c = b :: l -> In (a, b :: l) c.",
            "VernacStartTheoremProof",
            "2100e746e45b623b6654928360c750429e37301f"
        ],
        [
            "intros c a b l; elim c; simpl in |- *; auto.",
            "VernacExtend",
            "96f9e24a85acd9b419b6a20e73497b5c9be4daea"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "intros a0; case a0.",
            "VernacExtend",
            "29832a2955c63e4b3174222ed680315b17453d9e"
        ],
        [
            "intros a1; case (eqA_dec a a1); simpl in |- *; auto.",
            "VernacExtend",
            "914bd43dd2cd6755a0efdb63f4e9c80e86fd8bc7"
        ],
        [
            "intros e l0 l1 H H0; left; apply f_equal2 with (f := pair (A:=A) (B:=list bool)); auto.",
            "VernacExtend",
            "dd2da6b967bd6982f92c18b9ab627d2236f49a7c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem find_code_correct2 : forall (c : code) (a : A) (l : list bool), unique_key c -> In (a, l) c -> find_code a c = l.",
            "VernacStartTheoremProof",
            "a9b8b099c732843caf379595f5c3dfbced020100"
        ],
        [
            "intros c a l; generalize a l; elim c; clear a l c; simpl in |- *; auto.",
            "VernacExtend",
            "ea0726fd1d30b0ed626a93d98960a469e2ef4477"
        ],
        [
            "intros a l H H0; case H0.",
            "VernacExtend",
            "9b5cd4010501006b2cbc19aac6d07eb5dd3bb2ca"
        ],
        [
            "intros a; case a.",
            "VernacExtend",
            "81bdd498856e52e8d5896689c32d4f8fce64751d"
        ],
        [
            "intros a0 l l0 H a1 l1 H0 H1; case (eqA_dec a1 a0).",
            "VernacExtend",
            "e34aaeac35585ddd91708e4d17f21a8504254198"
        ],
        [
            "intros H2; case H1; intros H3.",
            "VernacExtend",
            "7f0bcac1d5b4b6ed160b427d83f9867fa23c41e9"
        ],
        [
            "injection H3; auto.",
            "VernacExtend",
            "ba9ea3f0136eaae861c61592542debd40a3a3e62"
        ],
        [
            "apply unique_key_in_inv with (l := (a0, l) :: l0) (a := a0); simpl in |- *; auto.",
            "VernacExtend",
            "75cc4f6a69614ed9e4fbeaa37057b7e066aba71f"
        ],
        [
            "rewrite <- H2; auto.",
            "VernacExtend",
            "32038346176d7468e98cb8f3f68a500b2e560c7d"
        ],
        [
            "intros H2; case H1; auto.",
            "VernacExtend",
            "b53c9c3d13f112bece0a6499b2fc318c61896fee"
        ],
        [
            "intros H3; case H2; injection H3; auto.",
            "VernacExtend",
            "d1711f833354571affaa0b7e3cebf481d02090d6"
        ],
        [
            "intros; apply H; auto.",
            "VernacExtend",
            "7e205d2d9afa71106709b919c8857288a94d61a5"
        ],
        [
            "apply unique_key_inv with (1 := H0); auto.",
            "VernacExtend",
            "cace68d0d5f3e4efba2b71bc3e06652dbcfb0de4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_in_find_code : forall a l, (forall p, ~ In (a, p) l) -> find_code a l = nil.",
            "VernacStartTheoremProof",
            "c200f762fd24c7963ab342e414f0be87eaf9743b"
        ],
        [
            "intros a l; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "65cdea4839d37593b8c879ef8d3dd9ec3faf9f61"
        ],
        [
            "intros (a1, l1) l0 H H0.",
            "VernacExtend",
            "12c57f5675f44943b8b6daab545ac033dc35dff7"
        ],
        [
            "case (eqA_dec a a1); auto.",
            "VernacExtend",
            "51307741493d3987b75faafe6f275d0408fb74ba"
        ],
        [
            "intros H1; case (H0 l1); rewrite H1; auto.",
            "VernacExtend",
            "bae715d8df144598de41e8b9c92a37d8ba6c3c90"
        ],
        [
            "intros H1; apply H; intros p; red in |- *; intros Hp; case (H0 p); auto.",
            "VernacExtend",
            "01cb1f607348d9b21286a45504d566a836596a8c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem find_code_app : forall a l1 l2, not_null l1 -> find_code a (l1 ++ l2) = match find_code a l1 with | nil => find_code a l2 | b1 :: l3 => b1 :: l3 end.",
            "VernacStartTheoremProof",
            "6efb0cc3d4e0b30172a5118c5e2facca08fb11d8"
        ],
        [
            "intros a l1; generalize a; elim l1; simpl in |- *; auto; clear a l1.",
            "VernacExtend",
            "795415a976c7fa268593405c6993d26ad041d21c"
        ],
        [
            "intros (a1, l1) l H a l2 H1; case (eqA_dec a a1); auto.",
            "VernacExtend",
            "68f18ff39c46b93168dcfe06a996fe3b851eba74"
        ],
        [
            "generalize H1; case l1; auto.",
            "VernacExtend",
            "ef5cc1cebb373d0bed9351e690e307478187742d"
        ],
        [
            "intros H0; case (H0 a1); simpl in |- *; auto.",
            "VernacExtend",
            "9db8fdf76823f1590efbefbfdfa80ccef3c7b8e4"
        ],
        [
            "cut (not_null l); simpl in |- *; auto.",
            "VernacExtend",
            "22019d8e6313883d24463ec3854f3bfd89ee952f"
        ],
        [
            "apply not_null_inv with (1 := H1); auto.",
            "VernacExtend",
            "e2bc6835d8feb528922e48d279a7802a43629b9c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem find_code_permutation : forall (a : A) (c1 c2 : code), permutation c1 c2 -> unique_prefix c1 -> find_code a c1 = find_code a c2.",
            "VernacStartTheoremProof",
            "c781cfc9a21a7aaba35cd63d75c9a3c271a2ee87"
        ],
        [
            "intros a c1 c2 H; elim H; simpl in |- *; auto.",
            "VernacExtend",
            "6d8f3b7a788f2a45828e7bea1e54d4ed58829539"
        ],
        [
            "intros a0; case a0.",
            "VernacExtend",
            "29832a2955c63e4b3174222ed680315b17453d9e"
        ],
        [
            "intros a1; case (eqA_dec a a1); auto.",
            "VernacExtend",
            "af461c1e0fca2a0a1be16941594756f04efa44fb"
        ],
        [
            "intros n l L1 L2 H0 H1 H2; apply H1.",
            "VernacExtend",
            "98fb94003c4f565011be972a141c7938b15ee402"
        ],
        [
            "apply unique_prefix_inv with (1 := H2).",
            "VernacExtend",
            "64b96c86313c7523ff549f1732dd07a5b53bf98b"
        ],
        [
            "intros a0; case a0.",
            "VernacExtend",
            "29832a2955c63e4b3174222ed680315b17453d9e"
        ],
        [
            "intros a1 l1.",
            "VernacExtend",
            "dbe3b1dcae1ec84d3cb15166e81a8ac35e06d0d6"
        ],
        [
            "case (eqA_dec a a1).",
            "VernacExtend",
            "421ae1d4283a5fc01627cf6db553d0fc09cc8909"
        ],
        [
            "intros Ha1 b; case b; auto.",
            "VernacExtend",
            "aa940ba21e6feaec8545f32956d0b11fb02d654e"
        ],
        [
            "intros a2 l2 L HL; case (eqA_dec a a2); auto.",
            "VernacExtend",
            "88622aaa2ee2224538dbc2d5a294d4ce6ad8b7f0"
        ],
        [
            "intros e.",
            "VernacExtend",
            "fbf6e34ba1d32ba2da6d52f1b2b34e5349941b8e"
        ],
        [
            "case unique_key_in with (1 := unique_prefix2 _ HL) (b2 := l2); auto.",
            "VernacExtend",
            "4cce6e710357cb9c92cf57a248d85eb05ed8beeb"
        ],
        [
            "rewrite <- Ha1; rewrite e; simpl in |- *; auto.",
            "VernacExtend",
            "885cd18485b359a625e0148d034fe7abfadc4dc8"
        ],
        [
            "intros Ha1 b; case b; auto.",
            "VernacExtend",
            "aa940ba21e6feaec8545f32956d0b11fb02d654e"
        ],
        [
            "intros L1 L2 L3 H0 H1 H2 H3 H4; apply trans_equal with (find_code a L2); auto.",
            "VernacExtend",
            "89bba495b982f972224ba43a543d109b5c67f340"
        ],
        [
            "apply H3.",
            "VernacExtend",
            "fa1602da0db2a348e9fad204067364eaad2a120f"
        ],
        [
            "apply (unique_prefix_permutation _ _ H0); auto.",
            "VernacExtend",
            "286f836520ef60c405e744d10e4ad5f2b746ea98"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem in_find_map : forall p a l b, In (a, l) p -> find_code a (map (fun v : A * list bool => match v with | (a1, b1) => (a1, b :: b1) end) p) = b :: find_code a p.",
            "VernacStartTheoremProof",
            "cc4fc014016f0268a00935907683cb10b0855a90"
        ],
        [
            "intros p; elim p; simpl in |- *; auto.",
            "VernacExtend",
            "02a9974c9e43b8cd76774dcdd246d768e4b8c881"
        ],
        [
            "intros a l b H; case H.",
            "VernacExtend",
            "8c386ebc8985abe6af3ef7585aae57941b44b635"
        ],
        [
            "intros (a1, l1) l H a0 l0 b [H0| H0]; auto.",
            "VernacExtend",
            "ab4da9d6b86b23ae184203efa009eef4d7fa4469"
        ],
        [
            "case (eqA_dec a0 a1); auto.",
            "VernacExtend",
            "1b6139bc6991eca186c0f8c27180e4568771796b"
        ],
        [
            "intros HH; case HH; injection H0; auto.",
            "VernacExtend",
            "fe47bcc0f78d5694f0bf9ca80a38881005260ce2"
        ],
        [
            "case (eqA_dec a0 a1); auto.",
            "VernacExtend",
            "1b6139bc6991eca186c0f8c27180e4568771796b"
        ],
        [
            "intros n; apply (H a0 l0 b); auto.",
            "VernacExtend",
            "608639261981aec3580e7231bdea949d3da2dc75"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem not_in_find_map : forall p a b, (forall l, ~ In (a, l) p) -> find_code a (map (fun v : A * list bool => match v with | (a1, b1) => (a1, b :: b1) end) p) = nil.",
            "VernacStartTheoremProof",
            "2a1d2b915702055d4e986e4fd612ef1e6065b876"
        ],
        [
            "intros p; elim p; simpl in |- *; auto.",
            "VernacExtend",
            "02a9974c9e43b8cd76774dcdd246d768e4b8c881"
        ],
        [
            "intros (a1, l1) l H a0 b H0; case (eqA_dec a0 a1); auto.",
            "VernacExtend",
            "9e76377b9e4d58292ee5e0eeebd0882609c6a16c"
        ],
        [
            "intros e; case (H0 l1); rewrite e; auto.",
            "VernacExtend",
            "e871c396825287b744464f9de0c1657fa4ec2be1"
        ],
        [
            "intros n; apply (H a0 b); auto.",
            "VernacExtend",
            "f93992ec0df4aedd4f131dd31691c44775e396ba"
        ],
        [
            "intros l0; red in |- *; intros H1; case (H0 l0); auto.",
            "VernacExtend",
            "aeb73a5248335922febd628388ff3dac25df4ba2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint find_val (a : list bool) (l : code) {struct l} : option A := match l with | nil => None | (b, c) :: l1 => match list_eq_dec eq_bool_dec a c with | left _ => Some b | right _ => find_val a l1 end end.",
            "VernacFixpoint",
            "7528e2580f84edce625c040a043920733a2784e4"
        ],
        [
            "Theorem find_val_correct1 : forall (c : code) (a : A) (l : list bool), find_val l c = Some a -> In (a, l) c.",
            "VernacStartTheoremProof",
            "543a7e6eb7e20407870d0bed5035341b4ab16147"
        ],
        [
            "intros c a l; elim c; simpl in |- *; auto.",
            "VernacExtend",
            "2083013d1341b0d782c9dcbf2062cc6572bf780c"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "intros a0; case a0.",
            "VernacExtend",
            "29832a2955c63e4b3174222ed680315b17453d9e"
        ],
        [
            "intros a1 l0 l1; case (list_eq_dec eq_bool_dec l l0); auto.",
            "VernacExtend",
            "9abc6a426295fa4b528a25f6f477d9ba241cf80a"
        ],
        [
            "intros e H H0; injection H0.",
            "VernacExtend",
            "a48ff63ec96abeff48f9cbb933def2758e01fcf7"
        ],
        [
            "intros e1; left; apply f_equal2 with (f := pair (A:=A) (B:=list bool)); auto.",
            "VernacExtend",
            "50088a634cc238b8148a072d36543450260b6497"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem find_val_correct2 : forall (c : code) (a : A) (l : list bool), unique_prefix c -> In (a, l) c -> find_val l c = Some a.",
            "VernacStartTheoremProof",
            "31639c632a3bdd5d2ec643cf48559c00db0ed794"
        ],
        [
            "intros c a l; generalize a l; elim c; clear a l c; simpl in |- *; auto.",
            "VernacExtend",
            "ea0726fd1d30b0ed626a93d98960a469e2ef4477"
        ],
        [
            "intros a l H H0; case H0.",
            "VernacExtend",
            "9b5cd4010501006b2cbc19aac6d07eb5dd3bb2ca"
        ],
        [
            "intros a; case a.",
            "VernacExtend",
            "81bdd498856e52e8d5896689c32d4f8fce64751d"
        ],
        [
            "intros a0 l l0 H a1 l1 H0 H1; case (list_eq_dec eq_bool_dec l1 l).",
            "VernacExtend",
            "e5d8bcb52d83873e951b41a9f290e9f815f5e9db"
        ],
        [
            "intros H2; apply f_equal with (f := Some (A:=A)).",
            "VernacExtend",
            "7a044c3246c8d4c140eb4ea51839c0d25a2d5490"
        ],
        [
            "case H1; intros H3.",
            "VernacExtend",
            "5f5c3b4796c912df15d23bcfcc306e7072087caa"
        ],
        [
            "injection H3; auto.",
            "VernacExtend",
            "ba9ea3f0136eaae861c61592542debd40a3a3e62"
        ],
        [
            "apply unique_prefix1 with (1 := H0) (lb1 := l) (lb2 := l1); simpl in |- *; auto.",
            "VernacExtend",
            "8b567dc2342a629774ad0ef113a2c24033bfd6c0"
        ],
        [
            "rewrite H2; auto.",
            "VernacExtend",
            "66cde94939e971b9afbcb9427005c1aa7a40acba"
        ],
        [
            "intros H2; case H1; auto.",
            "VernacExtend",
            "b53c9c3d13f112bece0a6499b2fc318c61896fee"
        ],
        [
            "intros H3; case H2; injection H3; auto.",
            "VernacExtend",
            "d1711f833354571affaa0b7e3cebf481d02090d6"
        ],
        [
            "intros; apply H; auto.",
            "VernacExtend",
            "7e205d2d9afa71106709b919c8857288a94d61a5"
        ],
        [
            "apply unique_prefix_inv with (1 := H0); auto.",
            "VernacExtend",
            "46c0a942fa280b82fd8d14123af2a0d12536c56d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Opaque list_eq_dec.",
            "VernacSetOpacity",
            "d6acfe38ed98eeb6816c08f332bdf3c892a53ff2"
        ],
        [
            "Theorem not_null_find_val : forall c : code, not_null c -> find_val nil c = None.",
            "VernacStartTheoremProof",
            "300840974939783e5c50871c5dff29920b785eeb"
        ],
        [
            "intros c; elim c; simpl; auto.",
            "VernacExtend",
            "88a2a5ea6fa4350c6aa136d4a281897b348f8ec3"
        ],
        [
            "intros a; case a.",
            "VernacExtend",
            "81bdd498856e52e8d5896689c32d4f8fce64751d"
        ],
        [
            "intros a1 l; case (list_eq_dec eq_bool_dec nil l); auto.",
            "VernacExtend",
            "2f0c27365c77ad150758b41f55469f4e8d4dc82f"
        ],
        [
            "intros e l0 H H0; case (H0 a1); rewrite e; simpl in |- *; auto.",
            "VernacExtend",
            "d44d70176f837a4055f28a0a9706163b8da386c2"
        ],
        [
            "intros n l0 H H0; apply H.",
            "VernacExtend",
            "427a2092289aef46b0d4024f1951b9c9c57b88a1"
        ],
        [
            "unfold not_null in |- *; intros a2; red in |- *; intros H1.",
            "VernacExtend",
            "7ad8df268f9c02c0b19d4a0e92c953ed483baa2d"
        ],
        [
            "case (H0 a2); simpl in |- *; auto.",
            "VernacExtend",
            "e0285ea3aa2a3370fb1fdf17490137b940ea43b1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint encode (c : code) (m : list A) {struct m} : list bool := match m with | nil => nil | a :: b => find_code a c ++ encode c b end.",
            "VernacFixpoint",
            "27e7dbfeccf34cae242c93519763a8fd8e87250d"
        ],
        [
            "Theorem encode_app : forall l1 l2 c, encode c (l1 ++ l2) = encode c l1 ++ encode c l2.",
            "VernacStartTheoremProof",
            "bc0835c23d996d383831884964b0a47c6bbae084"
        ],
        [
            "intros l1; elim l1; simpl in |- *; auto.",
            "VernacExtend",
            "b73d59c67adc102479fcc10e403f01f21e881ba0"
        ],
        [
            "intros a l H l2 c; rewrite H; auto.",
            "VernacExtend",
            "48770523b80224e6eca22916312bea7ad79013fb"
        ],
        [
            "rewrite app_ass; auto.",
            "VernacExtend",
            "d1354baf0f42b5d934cf37889f921365ed87a2e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem encode_cons_inv : forall a l1 l m1, ~ In a m1 -> encode ((a, l1) :: l) m1 = encode l m1.",
            "VernacStartTheoremProof",
            "04b67934acab5222696bc2b3066bf77129257817"
        ],
        [
            "intros a l1 l m1; generalize a l1 l; elim m1; simpl in |- *; auto; clear a l1 l m1.",
            "VernacExtend",
            "ac6e574d8635e1ad6958968b906eb9e067be310b"
        ],
        [
            "intros a l H a0 l1 l0 H0; case (eqA_dec a a0); simpl in |- *; auto.",
            "VernacExtend",
            "d7be07ad538d1641db83a7b857fd60444c1aa73a"
        ],
        [
            "intros H1; case H0; auto.",
            "VernacExtend",
            "9d83e1371254c7083ae7e64eac506b611e3c2c4a"
        ],
        [
            "intros e; rewrite H; auto.",
            "VernacExtend",
            "a172743e7536094279de7f401d41bf1032b54fd3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem encode_permutation : forall (m : list A) (c1 c2 : code), permutation c1 c2 -> unique_prefix c1 -> encode c1 m = encode c2 m.",
            "VernacStartTheoremProof",
            "80b45684c2b0efacb6abfa23768709d2e322a7cd"
        ],
        [
            "intros m; elim m; simpl in |- *; auto.",
            "VernacExtend",
            "2fc3f017969b336e40869746966e57ca7316c270"
        ],
        [
            "intros a l H c1 c2 H0 H1.",
            "VernacExtend",
            "078a0a0bfa718fddf9041a387654076b0f507deb"
        ],
        [
            "apply f_equal2 with (f := app (A:=bool)); auto.",
            "VernacExtend",
            "c42801cdd44e59c69ea31f0807da99f281b6c4f9"
        ],
        [
            "apply find_code_permutation; auto.",
            "VernacExtend",
            "8aa6fbe8d0ad8025669c1983cbd908aeb43df211"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem encode_permutation_val : forall m1 m2 c, permutation m1 m2 -> permutation (encode c m1) (encode c m2).",
            "VernacStartTheoremProof",
            "e475e70a4e0f06ad4497dfb60f5e58ec377defdf"
        ],
        [
            "intros m1 m2 c H; elim H; simpl in |- *; auto; clear H m1 m2.",
            "VernacExtend",
            "a512e03d0bd10862c633a52e536037f3b62f8b25"
        ],
        [
            "intros; repeat rewrite <- app_ass; auto.",
            "VernacExtend",
            "26c6e1eee65b66bb8e9032b5752f9a5c6ed2bd04"
        ],
        [
            "intros l1 l2 l3 H H0 H1 H2; apply permutation_trans with (1 := H0); auto.",
            "VernacExtend",
            "0307346bdb6be7c0cc067c18fcbef813492274db"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint decode_aux (c : code) (head m : list bool) {struct m} : list A := match m with | nil => match find_val head c with | Some a => a :: nil | None => nil end | a :: m1 => match find_val head c with | Some a1 => a1 :: decode_aux c (a :: nil) m1 | None => decode_aux c (head ++ a :: nil) m1 end end.",
            "VernacFixpoint",
            "132e3ffbe19584ac5265d6abf9cb413973514869"
        ],
        [
            "Theorem decode_aux_correct : forall c : code, unique_prefix c -> not_null c -> forall (m1 m2 head : list bool) (a : A), find_val (head ++ m1) c = Some a -> decode_aux c head (m1 ++ m2) = a :: decode_aux c nil m2.",
            "VernacStartTheoremProof",
            "4f016aacad265a71c2618802a0530c5d30cda632"
        ],
        [
            "intros c Hc1 Hc2 m1; elim m1; simpl in |- *; auto.",
            "VernacExtend",
            "89256fe3a354d1faad9840dd4e9e02994397914d"
        ],
        [
            "intros m2; case m2; simpl in |- *; auto.",
            "VernacExtend",
            "e7c231b3f38a27873434a924bdf2fe62b1d00b27"
        ],
        [
            "intros head a; rewrite <- app_nil_end.",
            "VernacExtend",
            "174f8a58a4d9e90112424eab150b12e454ae65bb"
        ],
        [
            "intros H1; rewrite H1; auto.",
            "VernacExtend",
            "7e4ba28f2c5c3edded6c22d563531fe80ea4ed70"
        ],
        [
            "rewrite not_null_find_val; auto.",
            "VernacExtend",
            "bd28567acf3a626ca190537c37c9e1517db2a0cc"
        ],
        [
            "intros b l head a; rewrite <- app_nil_end.",
            "VernacExtend",
            "7a549839cfb5f6dea75f80b3188354227e85eec3"
        ],
        [
            "intros H1; rewrite H1; auto.",
            "VernacExtend",
            "7e4ba28f2c5c3edded6c22d563531fe80ea4ed70"
        ],
        [
            "rewrite not_null_find_val; auto.",
            "VernacExtend",
            "bd28567acf3a626ca190537c37c9e1517db2a0cc"
        ],
        [
            "intros a l Rec m2 head a1 H2.",
            "VernacExtend",
            "8804b82f0a1e137458c81370e4beab95af41563f"
        ],
        [
            "rewrite <- Rec with (head := head ++ a :: nil).",
            "VernacExtend",
            "1b9036e7cab25073ba91c51ff4c79f242936adb5"
        ],
        [
            "generalize (fun a => find_val_correct1 c a head).",
            "VernacExtend",
            "680aea75c89f11470fe91c82951c9ca077f24660"
        ],
        [
            "case (find_val head c); auto.",
            "VernacExtend",
            "cb689ad04ae4c73bf18bdcafa311cc3f8aefe157"
        ],
        [
            "intros a0 H; (cut (In (a0, head) c); [ intros Hin1 | auto ]).",
            "VernacExtend",
            "45c7f1ec327a32ce9c7b7878175bb1630cc8c082"
        ],
        [
            "cut (In (a1, head ++ a :: l) c); [ intros Hin2 | apply find_val_correct1; auto ].",
            "VernacExtend",
            "7b6827d53e60e83a3ed09be967a3e4e068d7a3d3"
        ],
        [
            "cut (a1 = a0); [ intros Heq | idtac ].",
            "VernacExtend",
            "c40c556ab63c004b793b3f074baaeb6e8f9be98a"
        ],
        [
            "absurd (head ++ a :: l = head); auto.",
            "VernacExtend",
            "46a9209b98805e8797bb594f8b48e8426e4ff7bc"
        ],
        [
            "elim head; simpl in |- *; auto.",
            "VernacExtend",
            "05505755487d76facfabaf0410b79cbb4c8404bb"
        ],
        [
            "red in |- *; intros; discriminate.",
            "VernacExtend",
            "3dc8cab2ad5f5b0f8cdd0c668624cfd3367c3237"
        ],
        [
            "intros a2 l0 H0; red in |- *; intros H1; case H0; auto.",
            "VernacExtend",
            "1d7e0aef2d3483bae0fab9937fa090a2a00490fd"
        ],
        [
            "injection H1; auto.",
            "VernacExtend",
            "698d05693b7cc26be0e6f347a3e15df54ba36f37"
        ],
        [
            "apply unique_key_in_inv with (l := c) (a := a1); auto.",
            "VernacExtend",
            "a8d8a0269863177bf7198ee7794714d298fa8eb0"
        ],
        [
            "apply unique_prefix2; auto.",
            "VernacExtend",
            "d14f9c85b01ec0e22db9b18192e3f82419954a41"
        ],
        [
            "rewrite Heq; auto.",
            "VernacExtend",
            "c93501bf163348e08a02623b325c9b1ae84b8cc4"
        ],
        [
            "apply sym_equal; apply (unique_prefix1 c a0 a1 head (head ++ a :: l)); auto.",
            "VernacExtend",
            "06a0e6e8222f013e9a47b80497fcfbde8b83e00c"
        ],
        [
            "elim head; simpl in |- *; auto.",
            "VernacExtend",
            "05505755487d76facfabaf0410b79cbb4c8404bb"
        ],
        [
            "rewrite app_ass; auto.",
            "VernacExtend",
            "d1354baf0f42b5d934cf37889f921365ed87a2e8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition decode (c : list (A * list bool)) (m : list bool) := decode_aux c nil m.",
            "VernacDefinition",
            "5e1074e020ebbd9cf5f00704262aa30a9a92a196"
        ],
        [
            "Theorem decode_correct : forall c : code, unique_prefix c -> not_null c -> forall (m1 m2 : list bool) (a : A), find_val m1 c = Some a -> decode c (m1 ++ m2) = a :: decode c m2.",
            "VernacStartTheoremProof",
            "59751c07bb84c449e4ff07fb63bb05659ee06926"
        ],
        [
            "intros c H H0 m1 m2 a H1; unfold decode in |- *; apply decode_aux_correct; auto.",
            "VernacExtend",
            "f73e909dc748a7f7b546d4a8fc9f4ed3f30cbb3d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem correct_encoding : forall c : code, unique_prefix c -> not_null c -> forall m : list A, in_alphabet m c -> decode c (encode c m) = m.",
            "VernacStartTheoremProof",
            "03e279c929a4f5bb7d511a49d2c519f665b1ddd9"
        ],
        [
            "intros c H1 H2 m; elim m; simpl in |- *; auto.",
            "VernacExtend",
            "4db4293fb0093e86f22ea0b293c6a4c72d416270"
        ],
        [
            "intros H3; unfold decode in |- *; simpl in |- *.",
            "VernacExtend",
            "6d88227080e9311f705b1f7115e1fbd4e69e07a8"
        ],
        [
            "rewrite not_null_find_val; auto.",
            "VernacExtend",
            "bd28567acf3a626ca190537c37c9e1517db2a0cc"
        ],
        [
            "intros a l H H0; rewrite decode_correct with (a := a); auto.",
            "VernacExtend",
            "371a789d5fbf2d14c5a41dd6d3748838800646cb"
        ],
        [
            "apply f_equal2 with (f := cons (A:=A)); auto.",
            "VernacExtend",
            "9bc583f3cb3e4595b6a008acd7e9fb7968af39d9"
        ],
        [
            "apply H; apply in_alphabet_inv with (1 := H0); auto.",
            "VernacExtend",
            "deab4b817e85e9c79961fc48eba999993396b877"
        ],
        [
            "case (H0 a); simpl in |- *; auto.",
            "VernacExtend",
            "f8a9e3814dbe80fd829424a87c13ccd546911e81"
        ],
        [
            "intros l1 Hl1.",
            "VernacExtend",
            "f00a317332d545d8df3d77f3ed19d70d9fd4726f"
        ],
        [
            "apply find_val_correct2; auto.",
            "VernacExtend",
            "837e5b5388a5a5eac89add9a56d730558e5f2373"
        ],
        [
            "case (H0 a); simpl in |- *; auto.",
            "VernacExtend",
            "f8a9e3814dbe80fd829424a87c13ccd546911e81"
        ],
        [
            "intros x1; case x1.",
            "VernacExtend",
            "dbb6241ed494dbad8561b5a1dc446803faccc744"
        ],
        [
            "intros H3; case (H2 a); auto.",
            "VernacExtend",
            "89bde392abc5dff63c268061a475af2295ac3c90"
        ],
        [
            "intros b l0 H3; cut (find_code a c = b :: l0).",
            "VernacExtend",
            "dee060a903e71f824a871a6106946da5f4f4a084"
        ],
        [
            "intros H4; rewrite H4; apply find_code_correct1; auto.",
            "VernacExtend",
            "2ec5ecfda3edb533c2346801b960d3ec1fd16c2e"
        ],
        [
            "apply find_code_correct2 with (2 := H3); auto.",
            "VernacExtend",
            "0593c83f18ad65c2b458f033c586bb89ee5aa7d1"
        ],
        [
            "case H1; auto.",
            "VernacExtend",
            "e17d7763e318012934dd49304a7a1025b1fa8bd4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem frequency_not_null : forall m (c : code), 1 < length (frequency_list eqA_dec m) -> unique_prefix c -> in_alphabet m c -> not_null c.",
            "VernacStartTheoremProof",
            "ef41c9cd00586b553daefb5c8a5ea46c7e3ed517"
        ],
        [
            "intros m c H H0 H1.",
            "VernacExtend",
            "a55abb601167737c86e0d0060fb2c27aa69a2b4f"
        ],
        [
            "CaseEq (frequency_list eqA_dec m); auto.",
            "VernacExtend",
            "190d7652d4f17ec849066f955429719d6b2d5889"
        ],
        [
            "intros H2; rewrite H2 in H; Contradict H; simpl in |- *; auto with arith.",
            "VernacExtend",
            "7692bebc860c6f5ea5d3796a3a29e62f804c1351"
        ],
        [
            "intros p l; case p; case l; simpl in |- *; auto.",
            "VernacExtend",
            "c968c08eb62ba34b10bea00b439d97312ed5b292"
        ],
        [
            "intros a n H2; rewrite H2 in H; Contradict H; simpl in |- *; auto with arith.",
            "VernacExtend",
            "e697ce3004729b33bcc797c004bbe77a597b5285"
        ],
        [
            "intros p0 l0; case p0; intros b nb a na H2.",
            "VernacExtend",
            "5c47349e9a530bdea7346ac46223bc03b81c3671"
        ],
        [
            "apply unique_prefix_not_null with a b; auto.",
            "VernacExtend",
            "a82b429fa903cc32139799b1385785f46b2661e7"
        ],
        [
            "intros H3; absurd (In (fst (a, na)) (fst (b, nb) :: map (fst (B:=_)) l0)).",
            "VernacExtend",
            "5e8dadc02115fdb5a42ee17b56d0f49fa8724d29"
        ],
        [
            "cut (ulist (map (fst (B:=_)) (frequency_list eqA_dec m))).",
            "VernacExtend",
            "55995fe4ffcfa86f5d9912b6fbbf00bb36000b95"
        ],
        [
            "rewrite H2; simpl in |- *; intros H4; inversion H4.",
            "VernacExtend",
            "2d58487eac4bfe1a224acf00da68a77789025050"
        ],
        [
            "case H7; rewrite H3; auto with datatypes.",
            "VernacExtend",
            "3ed0de730380e9d3317f82927dc4b804599f8967"
        ],
        [
            "apply unique_key_ulist.",
            "VernacExtend",
            "2e524b248b470cb1eed2331a5d13c74f9d61635b"
        ],
        [
            "apply frequency_list_unique.",
            "VernacExtend",
            "84dc6cf81c29fc8ce8aec2e1a87c78a77d353bc7"
        ],
        [
            "simpl in |- *; rewrite H3; auto with datatypes.",
            "VernacExtend",
            "d4285ab7e1a57c0bfae4ff77dc0b6dbb167ac3e3"
        ],
        [
            "case (H1 a); auto.",
            "VernacExtend",
            "e349cf4a7d602f515ece3aca1cb0fdb5b6b7457f"
        ],
        [
            "apply frequency_list_in with eqA_dec na; rewrite H2; auto with datatypes.",
            "VernacExtend",
            "66f0ccd2d3fdbc3062a13b1c59e208542686b6fa"
        ],
        [
            "intros l1 Hl1; apply in_alphabet_cons with l1; auto.",
            "VernacExtend",
            "f8ee2f32fe3450d5840a6a235223f9e15f62a9d2"
        ],
        [
            "case (H1 b); auto.",
            "VernacExtend",
            "e40bb0a56f737edca97c9a29a120db74bea95dbd"
        ],
        [
            "apply frequency_list_in with eqA_dec nb; rewrite H2; auto with datatypes.",
            "VernacExtend",
            "e37a5e5a2a7a44ee43174a72ea21d4e581680746"
        ],
        [
            "intros l2 Hl2; apply in_alphabet_cons with l2; auto.",
            "VernacExtend",
            "8e0192c2ea36d98458332a4f0b4bc74fb756a378"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Code.",
            "VernacEndSegment",
            "8e1728a3bae4b1117dbd5d3c850e3ac78bb9d7ac"
        ],
        [
            "Arguments encode [A].",
            "VernacArguments",
            "b70a0dc6366bcbd0d661638a104a54b72e5c7787"
        ],
        [
            "Arguments decode [A].",
            "VernacArguments",
            "df3f0af80b821d52a335b9c55a2b949bb86e66bb"
        ],
        [
            "Arguments find_code [A].",
            "VernacArguments",
            "6f60f45f8880afd5143e4c9fc0f122a2d8ad8c39"
        ],
        [
            "Arguments find_val [A].",
            "VernacArguments",
            "9e1b463ce18d9aa8140e5a200243414774921bcb"
        ],
        [
            "Arguments in_alphabet [A].",
            "VernacArguments",
            "de7ceefa322b1109913b3953ddea38a4b77b6574"
        ],
        [
            "Arguments unique_prefix [A].",
            "VernacArguments",
            "c67810d6d78a5c7c052292b9facc4b720ddd9a35"
        ],
        [
            "Arguments not_null [A].",
            "VernacArguments",
            "c08d5d59b65737d44826adc1be645c6c6207f0ad"
        ],
        [
            "Hint Constructors is_prefix : core.",
            "VernacHints",
            "eba6ca64f3bea9218832c854d5b87365b38d5933"
        ],
        [
            "Hint Resolve is_prefix_refl : core.",
            "VernacHints",
            "4367154a8cc301b1454252a81a261440782e5253"
        ],
        [
            "Hint Resolve not_null_map : core.",
            "VernacHints",
            "23f5f755abe2613484510c8a59c35d601de75d00"
        ],
        [
            "Hint Resolve unique_prefix_nil : core.",
            "VernacHints",
            "23806d90e9fe294be589e56be96217fc39716b1f"
        ],
        [
            "Hint Resolve in_alphabet_nil in_alphabet_cons : core.",
            "VernacHints",
            "9720a3779f6eb136b6eb2e7b9b4d0503e1bc564e"
        ],
        [
            "Hint Resolve not_null_app : core.",
            "VernacHints",
            "13ca6738cc82207be0b628efebf385a31a97e5f9"
        ]
    ],
    "proofs": [
        {
            "name": "in_alphabet_incl",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros m1 m2 c H H0; red in |- *.",
                        "VernacExtend",
                        "b8d734f55673c28d21ea47fbfda354da745ee242"
                    ]
                },
                {
                    "command": [
                        "intros a H1; case (H0 a); auto.",
                        "VernacExtend",
                        "6dd1adce1c6d90a8b9939a7c820b92471c0c22fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_alphabet_nil",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros c a H; inversion H.",
                        "VernacExtend",
                        "36f35d93a1528c1e6bdaf58ed8e2338420e8e327"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_alphabet_cons",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros m c a ca H H0; red in |- *; simpl in |- *.",
                        "VernacExtend",
                        "97d3c65cb41d0d7be0db8f1f71d28220c040fb3e"
                    ]
                },
                {
                    "command": [
                        "intros a1 [H1| H1].",
                        "VernacExtend",
                        "d706e5a4caf1811b031ada5f038f37aa6c4290fd"
                    ]
                },
                {
                    "command": [
                        "exists ca; rewrite <- H1; auto.",
                        "VernacExtend",
                        "5e759dfaaaa9c98b5fa93c6bfda888131f159242"
                    ]
                },
                {
                    "command": [
                        "case (H0 a1); auto.",
                        "VernacExtend",
                        "cbefb9acb9aa9caa454de9a680d9d4a7e9543653"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_alphabet_inv",
            "line_nb": 24,
            "steps": [
                {
                    "command": [
                        "intros c a l H; red in |- *.",
                        "VernacExtend",
                        "5791c0763feb82e7ecd1765ed6973ca1d8e79f27"
                    ]
                },
                {
                    "command": [
                        "intros a1 H1; apply H; simpl in |- *; auto.",
                        "VernacExtend",
                        "1b49adc05dbc7a48269280e9323d7e3d1d255ab9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "code_dec",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros c a; elim c; simpl in |- *; auto.",
                        "VernacExtend",
                        "90b9595df10f0954037cfbebcdd94d1af081e6c0"
                    ]
                },
                {
                    "command": [
                        "intros (a1, l1) l H; case (eqA_dec a1 a); intros H1.",
                        "VernacExtend",
                        "d1f1f6eded5742f07cd38da1e0eeab33e82d4b64"
                    ]
                },
                {
                    "command": [
                        "left; exists l1; rewrite H1; auto.",
                        "VernacExtend",
                        "d1c892f0cf0de0a517ab3b0a6be0e62bec78aca2"
                    ]
                },
                {
                    "command": [
                        "case H.",
                        "VernacExtend",
                        "ed133bc3c18fb327812c50c4771060c04c7f32b1"
                    ]
                },
                {
                    "command": [
                        "intros e; left; case e; intros l2 H2; exists l2; auto.",
                        "VernacExtend",
                        "d36bd6ec3449f686e40156d68776cd4104f7fd20"
                    ]
                },
                {
                    "command": [
                        "intros n; right; intros l0; red in |- *; intros [H0| H0]; [ case H1 | case (n l0) ]; auto.",
                        "VernacExtend",
                        "627f3aa9248e62b203f6d9bbbf20c62b98de8163"
                    ]
                },
                {
                    "command": [
                        "injection H0; auto.",
                        "VernacExtend",
                        "0472db19ef82fb52607346ea35cd0ef9ff2a0682"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "in_alphabet_dec",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "intros m; elim m; simpl in |- *; auto.",
                        "VernacExtend",
                        "2fc3f017969b336e40869746966e57ca7316c270"
                    ]
                },
                {
                    "command": [
                        "intros a l H c; case (H c); intros H1.",
                        "VernacExtend",
                        "67268a23c2b11eca65152fbc8afe0f61df92806d"
                    ]
                },
                {
                    "command": [
                        "case (code_dec c a); intros H2.",
                        "VernacExtend",
                        "1fa5ff419f688ee0086b23cedc55abe77b4fccdc"
                    ]
                },
                {
                    "command": [
                        "left; red in |- *; simpl in |- *.",
                        "VernacExtend",
                        "ef2ca43b132984e33b59125a003026ac0161a3d4"
                    ]
                },
                {
                    "command": [
                        "intros a1 [H3| H3]; [ case H2; intros l1 Hl1; exists l1; rewrite <- H3 | idtac ]; auto.",
                        "VernacExtend",
                        "638e0fa311565a9ae81ff3857f0ef71561f9bae2"
                    ]
                },
                {
                    "command": [
                        "right; red in |- *; intros H3; case (H3 a); simpl in |- *; auto.",
                        "VernacExtend",
                        "55bed6f73b530348ab7c79c13417f816dabf65a7"
                    ]
                },
                {
                    "command": [
                        "right; Contradict H1; auto; red in |- *.",
                        "VernacExtend",
                        "c0f1f21ab08d67b09a6022044917bb694a837c06"
                    ]
                },
                {
                    "command": [
                        "intros a0 H0; case (H1 a0); simpl in |- *; auto.",
                        "VernacExtend",
                        "1e0058fdb0f40998ebce5c5dd438cefda2b0d91c"
                    ]
                },
                {
                    "command": [
                        "intros x H2; exists x; auto.",
                        "VernacExtend",
                        "14d49749a6e11e1538882a3e2e0ac3bcb116bcbb"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "not_null_inv",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros a l H; red in |- *.",
                        "VernacExtend",
                        "dc685e494a5f59ad5ea0e0755a5f1fca52ca07de"
                    ]
                },
                {
                    "command": [
                        "intros a0; red in |- *; intros H0; case (H a0); simpl in |- *; auto.",
                        "VernacExtend",
                        "73f960dca906bc60e717d26f36b725c01e701a7b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_null_cons",
            "line_nb": 53,
            "steps": [
                {
                    "command": [
                        "intros a b l H H0; red in |- *.",
                        "VernacExtend",
                        "969ecae7afc634b2f3b21ae30cf3522e580e5d92"
                    ]
                },
                {
                    "command": [
                        "intros a1; simpl in |- *; red in |- *; intros [H1| H1]; auto.",
                        "VernacExtend",
                        "b3c213d603b3f18a2ef3a60f9baa0748655508f8"
                    ]
                },
                {
                    "command": [
                        "case H; injection H1; auto.",
                        "VernacExtend",
                        "3f1cfc0a43c2ed61682ec3c7e008aa9c92c7520b"
                    ]
                },
                {
                    "command": [
                        "case (H0 a1); simpl in |- *; auto.",
                        "VernacExtend",
                        "b254a2fdeb525f4e97cf7c3d26ebf786ca861258"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_null_app",
            "line_nb": 60,
            "steps": [
                {
                    "command": [
                        "intros l1; elim l1; simpl in |- *; auto.",
                        "VernacExtend",
                        "b73d59c67adc102479fcc10e403f01f21e881ba0"
                    ]
                },
                {
                    "command": [
                        "intros (a2, l2); case l2; auto.",
                        "VernacExtend",
                        "c9c4b98710c6ecdee0a98e10fa8c7a0e4d84d748"
                    ]
                },
                {
                    "command": [
                        "intros l H l0 H0 H1; case (H0 a2); simpl in |- *; auto.",
                        "VernacExtend",
                        "81a34d38c3bc3a04594111b507611748c0acc6d5"
                    ]
                },
                {
                    "command": [
                        "intros b l l0 H l3 H0 H1; apply not_null_cons; auto.",
                        "VernacExtend",
                        "6bba431e7d2559fd0e93c35b5233481424458e36"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros H2; discriminate.",
                        "VernacExtend",
                        "f42421f065ea82a74b4c377e2eba0e20f1874839"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "apply not_null_inv with (1 := H0).",
                        "VernacExtend",
                        "d74d3f1d41e0521f519cdf73dc642f98bdc11c36"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_null_map",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "intros l; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "2bbab84295db0ef661ebb58820998893cacdee26"
                    ]
                },
                {
                    "command": [
                        "intros b; red in |- *; intros a; red in |- *; intros H; inversion H.",
                        "VernacExtend",
                        "84682a8f5d3c74057a7bcec45bc2486d55308ebb"
                    ]
                },
                {
                    "command": [
                        "intros (a1, l1) l0 H b; apply not_null_cons; auto.",
                        "VernacExtend",
                        "fac039d905a5bd2440ad9cb254a6984895998cba"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "3dc8cab2ad5f5b0f8cdd0c668624cfd3367c3237"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_prefix_refl",
            "line_nb": 79,
            "steps": [
                {
                    "command": [
                        "intros l; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "2bbab84295db0ef661ebb58820998893cacdee26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unique_prefix_nil",
            "line_nb": 84,
            "steps": [
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "intros a1 a2 lb1 lb2 H; inversion H; auto.",
                        "VernacExtend",
                        "82ad3b71cabcead40115a77a105faecb9ae3b3e9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unique_prefix1",
            "line_nb": 89,
            "steps": [
                {
                    "command": [
                        "intros c a1 a2 lb1 lb2 (H1, H2); apply (H1 a1 a2 lb1 lb2); auto.",
                        "VernacExtend",
                        "fe6d44277b89466e4496147b7a9dea3735afaccd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unique_prefix2",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "intros c (H1, H2); auto.",
                        "VernacExtend",
                        "82e8ab2cc7ea22798fdf9e71574caf41c3b066dd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unique_prefix_inv",
            "line_nb": 95,
            "steps": [
                {
                    "command": [
                        "intros c a l (H1, H2); split.",
                        "VernacExtend",
                        "71e0a2f4589aa67f8f72da5b614d3a651088242a"
                    ]
                },
                {
                    "command": [
                        "intros a1 a2 lb1 lb2 H H0 H3; apply (H1 a1 a2 lb1 lb2); simpl in |- *; auto.",
                        "VernacExtend",
                        "69ac6e27164bfa294c1e44b4f80f521279fef8ad"
                    ]
                },
                {
                    "command": [
                        "apply unique_key_inv with (1 := H2); auto.",
                        "VernacExtend",
                        "6ea4510af6bd6479ebade35cfa0fc96c4dbfbd0d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unique_prefix_not_null",
            "line_nb": 100,
            "steps": [
                {
                    "command": [
                        "intros c a b H H0 H1.",
                        "VernacExtend",
                        "995ccfb1b556c13a9b4214e5add36a7bae323b50"
                    ]
                },
                {
                    "command": [
                        "unfold not_null in |- *; intros a1; red in |- *; intros Ha1.",
                        "VernacExtend",
                        "f43a0246d10744984da787744ad3950733345b7c"
                    ]
                },
                {
                    "command": [
                        "case (H0 a); simpl in |- *; auto; intros l1 Hl1.",
                        "VernacExtend",
                        "81cddf2140102e64b8fc2e1135a2035deda8adf8"
                    ]
                },
                {
                    "command": [
                        "case (H0 b); simpl in |- *; auto; intros l2 Hl2.",
                        "VernacExtend",
                        "7c8d6ec5f0ef937aab2a46fa609b45b81a8f7a0d"
                    ]
                },
                {
                    "command": [
                        "case H; apply trans_equal with a1.",
                        "VernacExtend",
                        "f561a6fa20e5d0e25125eac2da3cb8cfb87b3737"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; apply unique_prefix1 with (3 := Hl1) (2 := Ha1); auto.",
                        "VernacExtend",
                        "40d2620c1f0492e5d434a50bc0f78b6f2146b5fa"
                    ]
                },
                {
                    "command": [
                        "apply unique_prefix1 with (3 := Hl2) (2 := Ha1); auto.",
                        "VernacExtend",
                        "d1a6844782f3122a3b88876350bc021af6385e05"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unique_prefix_permutation",
            "line_nb": 109,
            "steps": [
                {
                    "command": [
                        "intros c1 c2 H (H1, H2).",
                        "VernacExtend",
                        "566cba2645f73797c6739d8db9c17786aecd5e18"
                    ]
                },
                {
                    "command": [
                        "cut (permutation c2 c1); [ intros HP; split | apply permutation_sym; auto ].",
                        "VernacExtend",
                        "4256f20f278417c8228ff957ac5a93fe4c8cfc10"
                    ]
                },
                {
                    "command": [
                        "intros a1 a2 lb1 lb2 H0 H3 H4.",
                        "VernacExtend",
                        "3dde8ce203eb1c11110e1d660cf22d00fff60a0b"
                    ]
                },
                {
                    "command": [
                        "apply (H1 a1 a2 lb1 lb2); auto.",
                        "VernacExtend",
                        "2aea120b98da5b36e62ff3f8f33e6390802db992"
                    ]
                },
                {
                    "command": [
                        "apply permutation_in with (2 := H0); auto.",
                        "VernacExtend",
                        "281217ab6b513653776b34f7aebc41eee1ccac62"
                    ]
                },
                {
                    "command": [
                        "apply permutation_in with (2 := H3); auto.",
                        "VernacExtend",
                        "9cd180cca9d69d8857423975d035456c6defd1fe"
                    ]
                },
                {
                    "command": [
                        "apply unique_key_perm with (2 := H2); auto.",
                        "VernacExtend",
                        "642a932e14a5c7fb7306f8174d3e1c14d3469f69"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_code_correct1",
            "line_nb": 119,
            "steps": [
                {
                    "command": [
                        "intros c a b l; elim c; simpl in |- *; auto.",
                        "VernacExtend",
                        "96f9e24a85acd9b419b6a20e73497b5c9be4daea"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "intros a0; case a0.",
                        "VernacExtend",
                        "29832a2955c63e4b3174222ed680315b17453d9e"
                    ]
                },
                {
                    "command": [
                        "intros a1; case (eqA_dec a a1); simpl in |- *; auto.",
                        "VernacExtend",
                        "914bd43dd2cd6755a0efdb63f4e9c80e86fd8bc7"
                    ]
                },
                {
                    "command": [
                        "intros e l0 l1 H H0; left; apply f_equal2 with (f := pair (A:=A) (B:=list bool)); auto.",
                        "VernacExtend",
                        "dd2da6b967bd6982f92c18b9ab627d2236f49a7c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_code_correct2",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "intros c a l; generalize a l; elim c; clear a l c; simpl in |- *; auto.",
                        "VernacExtend",
                        "ea0726fd1d30b0ed626a93d98960a469e2ef4477"
                    ]
                },
                {
                    "command": [
                        "intros a l H H0; case H0.",
                        "VernacExtend",
                        "9b5cd4010501006b2cbc19aac6d07eb5dd3bb2ca"
                    ]
                },
                {
                    "command": [
                        "intros a; case a.",
                        "VernacExtend",
                        "81bdd498856e52e8d5896689c32d4f8fce64751d"
                    ]
                },
                {
                    "command": [
                        "intros a0 l l0 H a1 l1 H0 H1; case (eqA_dec a1 a0).",
                        "VernacExtend",
                        "e34aaeac35585ddd91708e4d17f21a8504254198"
                    ]
                },
                {
                    "command": [
                        "intros H2; case H1; intros H3.",
                        "VernacExtend",
                        "7f0bcac1d5b4b6ed160b427d83f9867fa23c41e9"
                    ]
                },
                {
                    "command": [
                        "injection H3; auto.",
                        "VernacExtend",
                        "ba9ea3f0136eaae861c61592542debd40a3a3e62"
                    ]
                },
                {
                    "command": [
                        "apply unique_key_in_inv with (l := (a0, l) :: l0) (a := a0); simpl in |- *; auto.",
                        "VernacExtend",
                        "75cc4f6a69614ed9e4fbeaa37057b7e066aba71f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H2; auto.",
                        "VernacExtend",
                        "32038346176d7468e98cb8f3f68a500b2e560c7d"
                    ]
                },
                {
                    "command": [
                        "intros H2; case H1; auto.",
                        "VernacExtend",
                        "b53c9c3d13f112bece0a6499b2fc318c61896fee"
                    ]
                },
                {
                    "command": [
                        "intros H3; case H2; injection H3; auto.",
                        "VernacExtend",
                        "d1711f833354571affaa0b7e3cebf481d02090d6"
                    ]
                },
                {
                    "command": [
                        "intros; apply H; auto.",
                        "VernacExtend",
                        "7e205d2d9afa71106709b919c8857288a94d61a5"
                    ]
                },
                {
                    "command": [
                        "apply unique_key_inv with (1 := H0); auto.",
                        "VernacExtend",
                        "cace68d0d5f3e4efba2b71bc3e06652dbcfb0de4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_in_find_code",
            "line_nb": 140,
            "steps": [
                {
                    "command": [
                        "intros a l; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "65cdea4839d37593b8c879ef8d3dd9ec3faf9f61"
                    ]
                },
                {
                    "command": [
                        "intros (a1, l1) l0 H H0.",
                        "VernacExtend",
                        "12c57f5675f44943b8b6daab545ac033dc35dff7"
                    ]
                },
                {
                    "command": [
                        "case (eqA_dec a a1); auto.",
                        "VernacExtend",
                        "51307741493d3987b75faafe6f275d0408fb74ba"
                    ]
                },
                {
                    "command": [
                        "intros H1; case (H0 l1); rewrite H1; auto.",
                        "VernacExtend",
                        "bae715d8df144598de41e8b9c92a37d8ba6c3c90"
                    ]
                },
                {
                    "command": [
                        "intros H1; apply H; intros p; red in |- *; intros Hp; case (H0 p); auto.",
                        "VernacExtend",
                        "01cb1f607348d9b21286a45504d566a836596a8c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_code_app",
            "line_nb": 147,
            "steps": [
                {
                    "command": [
                        "intros a l1; generalize a; elim l1; simpl in |- *; auto; clear a l1.",
                        "VernacExtend",
                        "795415a976c7fa268593405c6993d26ad041d21c"
                    ]
                },
                {
                    "command": [
                        "intros (a1, l1) l H a l2 H1; case (eqA_dec a a1); auto.",
                        "VernacExtend",
                        "68f18ff39c46b93168dcfe06a996fe3b851eba74"
                    ]
                },
                {
                    "command": [
                        "generalize H1; case l1; auto.",
                        "VernacExtend",
                        "ef5cc1cebb373d0bed9351e690e307478187742d"
                    ]
                },
                {
                    "command": [
                        "intros H0; case (H0 a1); simpl in |- *; auto.",
                        "VernacExtend",
                        "9db8fdf76823f1590efbefbfdfa80ccef3c7b8e4"
                    ]
                },
                {
                    "command": [
                        "cut (not_null l); simpl in |- *; auto.",
                        "VernacExtend",
                        "22019d8e6313883d24463ec3854f3bfd89ee952f"
                    ]
                },
                {
                    "command": [
                        "apply not_null_inv with (1 := H1); auto.",
                        "VernacExtend",
                        "e2bc6835d8feb528922e48d279a7802a43629b9c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_code_permutation",
            "line_nb": 155,
            "steps": [
                {
                    "command": [
                        "intros a c1 c2 H; elim H; simpl in |- *; auto.",
                        "VernacExtend",
                        "6d8f3b7a788f2a45828e7bea1e54d4ed58829539"
                    ]
                },
                {
                    "command": [
                        "intros a0; case a0.",
                        "VernacExtend",
                        "29832a2955c63e4b3174222ed680315b17453d9e"
                    ]
                },
                {
                    "command": [
                        "intros a1; case (eqA_dec a a1); auto.",
                        "VernacExtend",
                        "af461c1e0fca2a0a1be16941594756f04efa44fb"
                    ]
                },
                {
                    "command": [
                        "intros n l L1 L2 H0 H1 H2; apply H1.",
                        "VernacExtend",
                        "98fb94003c4f565011be972a141c7938b15ee402"
                    ]
                },
                {
                    "command": [
                        "apply unique_prefix_inv with (1 := H2).",
                        "VernacExtend",
                        "64b96c86313c7523ff549f1732dd07a5b53bf98b"
                    ]
                },
                {
                    "command": [
                        "intros a0; case a0.",
                        "VernacExtend",
                        "29832a2955c63e4b3174222ed680315b17453d9e"
                    ]
                },
                {
                    "command": [
                        "intros a1 l1.",
                        "VernacExtend",
                        "dbe3b1dcae1ec84d3cb15166e81a8ac35e06d0d6"
                    ]
                },
                {
                    "command": [
                        "case (eqA_dec a a1).",
                        "VernacExtend",
                        "421ae1d4283a5fc01627cf6db553d0fc09cc8909"
                    ]
                },
                {
                    "command": [
                        "intros Ha1 b; case b; auto.",
                        "VernacExtend",
                        "aa940ba21e6feaec8545f32956d0b11fb02d654e"
                    ]
                },
                {
                    "command": [
                        "intros a2 l2 L HL; case (eqA_dec a a2); auto.",
                        "VernacExtend",
                        "88622aaa2ee2224538dbc2d5a294d4ce6ad8b7f0"
                    ]
                },
                {
                    "command": [
                        "intros e.",
                        "VernacExtend",
                        "fbf6e34ba1d32ba2da6d52f1b2b34e5349941b8e"
                    ]
                },
                {
                    "command": [
                        "case unique_key_in with (1 := unique_prefix2 _ HL) (b2 := l2); auto.",
                        "VernacExtend",
                        "4cce6e710357cb9c92cf57a248d85eb05ed8beeb"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Ha1; rewrite e; simpl in |- *; auto.",
                        "VernacExtend",
                        "885cd18485b359a625e0148d034fe7abfadc4dc8"
                    ]
                },
                {
                    "command": [
                        "intros Ha1 b; case b; auto.",
                        "VernacExtend",
                        "aa940ba21e6feaec8545f32956d0b11fb02d654e"
                    ]
                },
                {
                    "command": [
                        "intros L1 L2 L3 H0 H1 H2 H3 H4; apply trans_equal with (find_code a L2); auto.",
                        "VernacExtend",
                        "89bba495b982f972224ba43a543d109b5c67f340"
                    ]
                },
                {
                    "command": [
                        "apply H3.",
                        "VernacExtend",
                        "fa1602da0db2a348e9fad204067364eaad2a120f"
                    ]
                },
                {
                    "command": [
                        "apply (unique_prefix_permutation _ _ H0); auto.",
                        "VernacExtend",
                        "286f836520ef60c405e744d10e4ad5f2b746ea98"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "in_find_map",
            "line_nb": 174,
            "steps": [
                {
                    "command": [
                        "intros p; elim p; simpl in |- *; auto.",
                        "VernacExtend",
                        "02a9974c9e43b8cd76774dcdd246d768e4b8c881"
                    ]
                },
                {
                    "command": [
                        "intros a l b H; case H.",
                        "VernacExtend",
                        "8c386ebc8985abe6af3ef7585aae57941b44b635"
                    ]
                },
                {
                    "command": [
                        "intros (a1, l1) l H a0 l0 b [H0| H0]; auto.",
                        "VernacExtend",
                        "ab4da9d6b86b23ae184203efa009eef4d7fa4469"
                    ]
                },
                {
                    "command": [
                        "case (eqA_dec a0 a1); auto.",
                        "VernacExtend",
                        "1b6139bc6991eca186c0f8c27180e4568771796b"
                    ]
                },
                {
                    "command": [
                        "intros HH; case HH; injection H0; auto.",
                        "VernacExtend",
                        "fe47bcc0f78d5694f0bf9ca80a38881005260ce2"
                    ]
                },
                {
                    "command": [
                        "case (eqA_dec a0 a1); auto.",
                        "VernacExtend",
                        "1b6139bc6991eca186c0f8c27180e4568771796b"
                    ]
                },
                {
                    "command": [
                        "intros n; apply (H a0 l0 b); auto.",
                        "VernacExtend",
                        "608639261981aec3580e7231bdea949d3da2dc75"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_in_find_map",
            "line_nb": 183,
            "steps": [
                {
                    "command": [
                        "intros p; elim p; simpl in |- *; auto.",
                        "VernacExtend",
                        "02a9974c9e43b8cd76774dcdd246d768e4b8c881"
                    ]
                },
                {
                    "command": [
                        "intros (a1, l1) l H a0 b H0; case (eqA_dec a0 a1); auto.",
                        "VernacExtend",
                        "9e76377b9e4d58292ee5e0eeebd0882609c6a16c"
                    ]
                },
                {
                    "command": [
                        "intros e; case (H0 l1); rewrite e; auto.",
                        "VernacExtend",
                        "e871c396825287b744464f9de0c1657fa4ec2be1"
                    ]
                },
                {
                    "command": [
                        "intros n; apply (H a0 b); auto.",
                        "VernacExtend",
                        "f93992ec0df4aedd4f131dd31691c44775e396ba"
                    ]
                },
                {
                    "command": [
                        "intros l0; red in |- *; intros H1; case (H0 l0); auto.",
                        "VernacExtend",
                        "aeb73a5248335922febd628388ff3dac25df4ba2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_val_correct1",
            "line_nb": 191,
            "steps": [
                {
                    "command": [
                        "intros c a l; elim c; simpl in |- *; auto.",
                        "VernacExtend",
                        "2083013d1341b0d782c9dcbf2062cc6572bf780c"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "intros a0; case a0.",
                        "VernacExtend",
                        "29832a2955c63e4b3174222ed680315b17453d9e"
                    ]
                },
                {
                    "command": [
                        "intros a1 l0 l1; case (list_eq_dec eq_bool_dec l l0); auto.",
                        "VernacExtend",
                        "9abc6a426295fa4b528a25f6f477d9ba241cf80a"
                    ]
                },
                {
                    "command": [
                        "intros e H H0; injection H0.",
                        "VernacExtend",
                        "a48ff63ec96abeff48f9cbb933def2758e01fcf7"
                    ]
                },
                {
                    "command": [
                        "intros e1; left; apply f_equal2 with (f := pair (A:=A) (B:=list bool)); auto.",
                        "VernacExtend",
                        "50088a634cc238b8148a072d36543450260b6497"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "find_val_correct2",
            "line_nb": 199,
            "steps": [
                {
                    "command": [
                        "intros c a l; generalize a l; elim c; clear a l c; simpl in |- *; auto.",
                        "VernacExtend",
                        "ea0726fd1d30b0ed626a93d98960a469e2ef4477"
                    ]
                },
                {
                    "command": [
                        "intros a l H H0; case H0.",
                        "VernacExtend",
                        "9b5cd4010501006b2cbc19aac6d07eb5dd3bb2ca"
                    ]
                },
                {
                    "command": [
                        "intros a; case a.",
                        "VernacExtend",
                        "81bdd498856e52e8d5896689c32d4f8fce64751d"
                    ]
                },
                {
                    "command": [
                        "intros a0 l l0 H a1 l1 H0 H1; case (list_eq_dec eq_bool_dec l1 l).",
                        "VernacExtend",
                        "e5d8bcb52d83873e951b41a9f290e9f815f5e9db"
                    ]
                },
                {
                    "command": [
                        "intros H2; apply f_equal with (f := Some (A:=A)).",
                        "VernacExtend",
                        "7a044c3246c8d4c140eb4ea51839c0d25a2d5490"
                    ]
                },
                {
                    "command": [
                        "case H1; intros H3.",
                        "VernacExtend",
                        "5f5c3b4796c912df15d23bcfcc306e7072087caa"
                    ]
                },
                {
                    "command": [
                        "injection H3; auto.",
                        "VernacExtend",
                        "ba9ea3f0136eaae861c61592542debd40a3a3e62"
                    ]
                },
                {
                    "command": [
                        "apply unique_prefix1 with (1 := H0) (lb1 := l) (lb2 := l1); simpl in |- *; auto.",
                        "VernacExtend",
                        "8b567dc2342a629774ad0ef113a2c24033bfd6c0"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; auto.",
                        "VernacExtend",
                        "66cde94939e971b9afbcb9427005c1aa7a40acba"
                    ]
                },
                {
                    "command": [
                        "intros H2; case H1; auto.",
                        "VernacExtend",
                        "b53c9c3d13f112bece0a6499b2fc318c61896fee"
                    ]
                },
                {
                    "command": [
                        "intros H3; case H2; injection H3; auto.",
                        "VernacExtend",
                        "d1711f833354571affaa0b7e3cebf481d02090d6"
                    ]
                },
                {
                    "command": [
                        "intros; apply H; auto.",
                        "VernacExtend",
                        "7e205d2d9afa71106709b919c8857288a94d61a5"
                    ]
                },
                {
                    "command": [
                        "apply unique_prefix_inv with (1 := H0); auto.",
                        "VernacExtend",
                        "46c0a942fa280b82fd8d14123af2a0d12536c56d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "not_null_find_val",
            "line_nb": 215,
            "steps": [
                {
                    "command": [
                        "intros c; elim c; simpl; auto.",
                        "VernacExtend",
                        "88a2a5ea6fa4350c6aa136d4a281897b348f8ec3"
                    ]
                },
                {
                    "command": [
                        "intros a; case a.",
                        "VernacExtend",
                        "81bdd498856e52e8d5896689c32d4f8fce64751d"
                    ]
                },
                {
                    "command": [
                        "intros a1 l; case (list_eq_dec eq_bool_dec nil l); auto.",
                        "VernacExtend",
                        "2f0c27365c77ad150758b41f55469f4e8d4dc82f"
                    ]
                },
                {
                    "command": [
                        "intros e l0 H H0; case (H0 a1); rewrite e; simpl in |- *; auto.",
                        "VernacExtend",
                        "d44d70176f837a4055f28a0a9706163b8da386c2"
                    ]
                },
                {
                    "command": [
                        "intros n l0 H H0; apply H.",
                        "VernacExtend",
                        "427a2092289aef46b0d4024f1951b9c9c57b88a1"
                    ]
                },
                {
                    "command": [
                        "unfold not_null in |- *; intros a2; red in |- *; intros H1.",
                        "VernacExtend",
                        "7ad8df268f9c02c0b19d4a0e92c953ed483baa2d"
                    ]
                },
                {
                    "command": [
                        "case (H0 a2); simpl in |- *; auto.",
                        "VernacExtend",
                        "e0285ea3aa2a3370fb1fdf17490137b940ea43b1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "encode_app",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "intros l1; elim l1; simpl in |- *; auto.",
                        "VernacExtend",
                        "b73d59c67adc102479fcc10e403f01f21e881ba0"
                    ]
                },
                {
                    "command": [
                        "intros a l H l2 c; rewrite H; auto.",
                        "VernacExtend",
                        "48770523b80224e6eca22916312bea7ad79013fb"
                    ]
                },
                {
                    "command": [
                        "rewrite app_ass; auto.",
                        "VernacExtend",
                        "d1354baf0f42b5d934cf37889f921365ed87a2e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "encode_cons_inv",
            "line_nb": 230,
            "steps": [
                {
                    "command": [
                        "intros a l1 l m1; generalize a l1 l; elim m1; simpl in |- *; auto; clear a l1 l m1.",
                        "VernacExtend",
                        "ac6e574d8635e1ad6958968b906eb9e067be310b"
                    ]
                },
                {
                    "command": [
                        "intros a l H a0 l1 l0 H0; case (eqA_dec a a0); simpl in |- *; auto.",
                        "VernacExtend",
                        "d7be07ad538d1641db83a7b857fd60444c1aa73a"
                    ]
                },
                {
                    "command": [
                        "intros H1; case H0; auto.",
                        "VernacExtend",
                        "9d83e1371254c7083ae7e64eac506b611e3c2c4a"
                    ]
                },
                {
                    "command": [
                        "intros e; rewrite H; auto.",
                        "VernacExtend",
                        "a172743e7536094279de7f401d41bf1032b54fd3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "encode_permutation",
            "line_nb": 236,
            "steps": [
                {
                    "command": [
                        "intros m; elim m; simpl in |- *; auto.",
                        "VernacExtend",
                        "2fc3f017969b336e40869746966e57ca7316c270"
                    ]
                },
                {
                    "command": [
                        "intros a l H c1 c2 H0 H1.",
                        "VernacExtend",
                        "078a0a0bfa718fddf9041a387654076b0f507deb"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := app (A:=bool)); auto.",
                        "VernacExtend",
                        "c42801cdd44e59c69ea31f0807da99f281b6c4f9"
                    ]
                },
                {
                    "command": [
                        "apply find_code_permutation; auto.",
                        "VernacExtend",
                        "8aa6fbe8d0ad8025669c1983cbd908aeb43df211"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "encode_permutation_val",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "intros m1 m2 c H; elim H; simpl in |- *; auto; clear H m1 m2.",
                        "VernacExtend",
                        "a512e03d0bd10862c633a52e536037f3b62f8b25"
                    ]
                },
                {
                    "command": [
                        "intros; repeat rewrite <- app_ass; auto.",
                        "VernacExtend",
                        "26c6e1eee65b66bb8e9032b5752f9a5c6ed2bd04"
                    ]
                },
                {
                    "command": [
                        "intros l1 l2 l3 H H0 H1 H2; apply permutation_trans with (1 := H0); auto.",
                        "VernacExtend",
                        "0307346bdb6be7c0cc067c18fcbef813492274db"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decode_aux_correct",
            "line_nb": 248,
            "steps": [
                {
                    "command": [
                        "intros c Hc1 Hc2 m1; elim m1; simpl in |- *; auto.",
                        "VernacExtend",
                        "89256fe3a354d1faad9840dd4e9e02994397914d"
                    ]
                },
                {
                    "command": [
                        "intros m2; case m2; simpl in |- *; auto.",
                        "VernacExtend",
                        "e7c231b3f38a27873434a924bdf2fe62b1d00b27"
                    ]
                },
                {
                    "command": [
                        "intros head a; rewrite <- app_nil_end.",
                        "VernacExtend",
                        "174f8a58a4d9e90112424eab150b12e454ae65bb"
                    ]
                },
                {
                    "command": [
                        "intros H1; rewrite H1; auto.",
                        "VernacExtend",
                        "7e4ba28f2c5c3edded6c22d563531fe80ea4ed70"
                    ]
                },
                {
                    "command": [
                        "rewrite not_null_find_val; auto.",
                        "VernacExtend",
                        "bd28567acf3a626ca190537c37c9e1517db2a0cc"
                    ]
                },
                {
                    "command": [
                        "intros b l head a; rewrite <- app_nil_end.",
                        "VernacExtend",
                        "7a549839cfb5f6dea75f80b3188354227e85eec3"
                    ]
                },
                {
                    "command": [
                        "intros H1; rewrite H1; auto.",
                        "VernacExtend",
                        "7e4ba28f2c5c3edded6c22d563531fe80ea4ed70"
                    ]
                },
                {
                    "command": [
                        "rewrite not_null_find_val; auto.",
                        "VernacExtend",
                        "bd28567acf3a626ca190537c37c9e1517db2a0cc"
                    ]
                },
                {
                    "command": [
                        "intros a l Rec m2 head a1 H2.",
                        "VernacExtend",
                        "8804b82f0a1e137458c81370e4beab95af41563f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rec with (head := head ++ a :: nil).",
                        "VernacExtend",
                        "1b9036e7cab25073ba91c51ff4c79f242936adb5"
                    ]
                },
                {
                    "command": [
                        "generalize (fun a => find_val_correct1 c a head).",
                        "VernacExtend",
                        "680aea75c89f11470fe91c82951c9ca077f24660"
                    ]
                },
                {
                    "command": [
                        "case (find_val head c); auto.",
                        "VernacExtend",
                        "cb689ad04ae4c73bf18bdcafa311cc3f8aefe157"
                    ]
                },
                {
                    "command": [
                        "intros a0 H; (cut (In (a0, head) c); [ intros Hin1 | auto ]).",
                        "VernacExtend",
                        "45c7f1ec327a32ce9c7b7878175bb1630cc8c082"
                    ]
                },
                {
                    "command": [
                        "cut (In (a1, head ++ a :: l) c); [ intros Hin2 | apply find_val_correct1; auto ].",
                        "VernacExtend",
                        "7b6827d53e60e83a3ed09be967a3e4e068d7a3d3"
                    ]
                },
                {
                    "command": [
                        "cut (a1 = a0); [ intros Heq | idtac ].",
                        "VernacExtend",
                        "c40c556ab63c004b793b3f074baaeb6e8f9be98a"
                    ]
                },
                {
                    "command": [
                        "absurd (head ++ a :: l = head); auto.",
                        "VernacExtend",
                        "46a9209b98805e8797bb594f8b48e8426e4ff7bc"
                    ]
                },
                {
                    "command": [
                        "elim head; simpl in |- *; auto.",
                        "VernacExtend",
                        "05505755487d76facfabaf0410b79cbb4c8404bb"
                    ]
                },
                {
                    "command": [
                        "red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "3dc8cab2ad5f5b0f8cdd0c668624cfd3367c3237"
                    ]
                },
                {
                    "command": [
                        "intros a2 l0 H0; red in |- *; intros H1; case H0; auto.",
                        "VernacExtend",
                        "1d7e0aef2d3483bae0fab9937fa090a2a00490fd"
                    ]
                },
                {
                    "command": [
                        "injection H1; auto.",
                        "VernacExtend",
                        "698d05693b7cc26be0e6f347a3e15df54ba36f37"
                    ]
                },
                {
                    "command": [
                        "apply unique_key_in_inv with (l := c) (a := a1); auto.",
                        "VernacExtend",
                        "a8d8a0269863177bf7198ee7794714d298fa8eb0"
                    ]
                },
                {
                    "command": [
                        "apply unique_prefix2; auto.",
                        "VernacExtend",
                        "d14f9c85b01ec0e22db9b18192e3f82419954a41"
                    ]
                },
                {
                    "command": [
                        "rewrite Heq; auto.",
                        "VernacExtend",
                        "c93501bf163348e08a02623b325c9b1ae84b8cc4"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; apply (unique_prefix1 c a0 a1 head (head ++ a :: l)); auto.",
                        "VernacExtend",
                        "06a0e6e8222f013e9a47b80497fcfbde8b83e00c"
                    ]
                },
                {
                    "command": [
                        "elim head; simpl in |- *; auto.",
                        "VernacExtend",
                        "05505755487d76facfabaf0410b79cbb4c8404bb"
                    ]
                },
                {
                    "command": [
                        "rewrite app_ass; auto.",
                        "VernacExtend",
                        "d1354baf0f42b5d934cf37889f921365ed87a2e8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "decode_correct",
            "line_nb": 277,
            "steps": [
                {
                    "command": [
                        "intros c H H0 m1 m2 a H1; unfold decode in |- *; apply decode_aux_correct; auto.",
                        "VernacExtend",
                        "f73e909dc748a7f7b546d4a8fc9f4ed3f30cbb3d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "correct_encoding",
            "line_nb": 280,
            "steps": [
                {
                    "command": [
                        "intros c H1 H2 m; elim m; simpl in |- *; auto.",
                        "VernacExtend",
                        "4db4293fb0093e86f22ea0b293c6a4c72d416270"
                    ]
                },
                {
                    "command": [
                        "intros H3; unfold decode in |- *; simpl in |- *.",
                        "VernacExtend",
                        "6d88227080e9311f705b1f7115e1fbd4e69e07a8"
                    ]
                },
                {
                    "command": [
                        "rewrite not_null_find_val; auto.",
                        "VernacExtend",
                        "bd28567acf3a626ca190537c37c9e1517db2a0cc"
                    ]
                },
                {
                    "command": [
                        "intros a l H H0; rewrite decode_correct with (a := a); auto.",
                        "VernacExtend",
                        "371a789d5fbf2d14c5a41dd6d3748838800646cb"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := cons (A:=A)); auto.",
                        "VernacExtend",
                        "9bc583f3cb3e4595b6a008acd7e9fb7968af39d9"
                    ]
                },
                {
                    "command": [
                        "apply H; apply in_alphabet_inv with (1 := H0); auto.",
                        "VernacExtend",
                        "deab4b817e85e9c79961fc48eba999993396b877"
                    ]
                },
                {
                    "command": [
                        "case (H0 a); simpl in |- *; auto.",
                        "VernacExtend",
                        "f8a9e3814dbe80fd829424a87c13ccd546911e81"
                    ]
                },
                {
                    "command": [
                        "intros l1 Hl1.",
                        "VernacExtend",
                        "f00a317332d545d8df3d77f3ed19d70d9fd4726f"
                    ]
                },
                {
                    "command": [
                        "apply find_val_correct2; auto.",
                        "VernacExtend",
                        "837e5b5388a5a5eac89add9a56d730558e5f2373"
                    ]
                },
                {
                    "command": [
                        "case (H0 a); simpl in |- *; auto.",
                        "VernacExtend",
                        "f8a9e3814dbe80fd829424a87c13ccd546911e81"
                    ]
                },
                {
                    "command": [
                        "intros x1; case x1.",
                        "VernacExtend",
                        "dbb6241ed494dbad8561b5a1dc446803faccc744"
                    ]
                },
                {
                    "command": [
                        "intros H3; case (H2 a); auto.",
                        "VernacExtend",
                        "89bde392abc5dff63c268061a475af2295ac3c90"
                    ]
                },
                {
                    "command": [
                        "intros b l0 H3; cut (find_code a c = b :: l0).",
                        "VernacExtend",
                        "dee060a903e71f824a871a6106946da5f4f4a084"
                    ]
                },
                {
                    "command": [
                        "intros H4; rewrite H4; apply find_code_correct1; auto.",
                        "VernacExtend",
                        "2ec5ecfda3edb533c2346801b960d3ec1fd16c2e"
                    ]
                },
                {
                    "command": [
                        "apply find_code_correct2 with (2 := H3); auto.",
                        "VernacExtend",
                        "0593c83f18ad65c2b458f033c586bb89ee5aa7d1"
                    ]
                },
                {
                    "command": [
                        "case H1; auto.",
                        "VernacExtend",
                        "e17d7763e318012934dd49304a7a1025b1fa8bd4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "frequency_not_null",
            "line_nb": 298,
            "steps": [
                {
                    "command": [
                        "intros m c H H0 H1.",
                        "VernacExtend",
                        "a55abb601167737c86e0d0060fb2c27aa69a2b4f"
                    ]
                },
                {
                    "command": [
                        "CaseEq (frequency_list eqA_dec m); auto.",
                        "VernacExtend",
                        "190d7652d4f17ec849066f955429719d6b2d5889"
                    ]
                },
                {
                    "command": [
                        "intros H2; rewrite H2 in H; Contradict H; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "7692bebc860c6f5ea5d3796a3a29e62f804c1351"
                    ]
                },
                {
                    "command": [
                        "intros p l; case p; case l; simpl in |- *; auto.",
                        "VernacExtend",
                        "c968c08eb62ba34b10bea00b439d97312ed5b292"
                    ]
                },
                {
                    "command": [
                        "intros a n H2; rewrite H2 in H; Contradict H; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "e697ce3004729b33bcc797c004bbe77a597b5285"
                    ]
                },
                {
                    "command": [
                        "intros p0 l0; case p0; intros b nb a na H2.",
                        "VernacExtend",
                        "5c47349e9a530bdea7346ac46223bc03b81c3671"
                    ]
                },
                {
                    "command": [
                        "apply unique_prefix_not_null with a b; auto.",
                        "VernacExtend",
                        "a82b429fa903cc32139799b1385785f46b2661e7"
                    ]
                },
                {
                    "command": [
                        "intros H3; absurd (In (fst (a, na)) (fst (b, nb) :: map (fst (B:=_)) l0)).",
                        "VernacExtend",
                        "5e8dadc02115fdb5a42ee17b56d0f49fa8724d29"
                    ]
                },
                {
                    "command": [
                        "cut (ulist (map (fst (B:=_)) (frequency_list eqA_dec m))).",
                        "VernacExtend",
                        "55995fe4ffcfa86f5d9912b6fbbf00bb36000b95"
                    ]
                },
                {
                    "command": [
                        "rewrite H2; simpl in |- *; intros H4; inversion H4.",
                        "VernacExtend",
                        "2d58487eac4bfe1a224acf00da68a77789025050"
                    ]
                },
                {
                    "command": [
                        "case H7; rewrite H3; auto with datatypes.",
                        "VernacExtend",
                        "3ed0de730380e9d3317f82927dc4b804599f8967"
                    ]
                },
                {
                    "command": [
                        "apply unique_key_ulist.",
                        "VernacExtend",
                        "2e524b248b470cb1eed2331a5d13c74f9d61635b"
                    ]
                },
                {
                    "command": [
                        "apply frequency_list_unique.",
                        "VernacExtend",
                        "84dc6cf81c29fc8ce8aec2e1a87c78a77d353bc7"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; rewrite H3; auto with datatypes.",
                        "VernacExtend",
                        "d4285ab7e1a57c0bfae4ff77dc0b6dbb167ac3e3"
                    ]
                },
                {
                    "command": [
                        "case (H1 a); auto.",
                        "VernacExtend",
                        "e349cf4a7d602f515ece3aca1cb0fdb5b6b7457f"
                    ]
                },
                {
                    "command": [
                        "apply frequency_list_in with eqA_dec na; rewrite H2; auto with datatypes.",
                        "VernacExtend",
                        "66f0ccd2d3fdbc3062a13b1c59e208542686b6fa"
                    ]
                },
                {
                    "command": [
                        "intros l1 Hl1; apply in_alphabet_cons with l1; auto.",
                        "VernacExtend",
                        "f8ee2f32fe3450d5840a6a235223f9e15f62a9d2"
                    ]
                },
                {
                    "command": [
                        "case (H1 b); auto.",
                        "VernacExtend",
                        "e40bb0a56f737edca97c9a29a120db74bea95dbd"
                    ]
                },
                {
                    "command": [
                        "apply frequency_list_in with eqA_dec nb; rewrite H2; auto with datatypes.",
                        "VernacExtend",
                        "e37a5e5a2a7a44ee43174a72ea21d4e581680746"
                    ]
                },
                {
                    "command": [
                        "intros l2 Hl2; apply in_alphabet_cons with l2; auto.",
                        "VernacExtend",
                        "8e0192c2ea36d98458332a4f0b4bc74fb756a378"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}