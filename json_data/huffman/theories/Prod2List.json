{
    "filename": "theories/Prod2List.v",
    "coq_project": "huffman",
    "vernac_cmds": [
        [
            "From Huffman Require Export WeightTree.",
            "VernacRequire",
            "eb4b440017fe2b87730eb4b43044934cb09064a4"
        ],
        [
            "Require Import ArithRing.",
            "VernacRequire",
            "4bc385370568ddd53384be919634bc0439bf028f"
        ],
        [
            "From Huffman Require Export Ordered.",
            "VernacRequire",
            "77de947c353dd2c96810316f90fdf903390444da"
        ],
        [
            "Section Prod2List.",
            "VernacBeginSection",
            "3f4a85c305046772d930fab4b9f761fbd02504ee"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Variable f : A -> nat.",
            "VernacAssumption",
            "9f23c668cb9b44da0a7007cf5e6e948fbeb3f99a"
        ],
        [
            "Definition prod2list l1 l2 := fold_left plus (map2 (fun a b => a * sum_leaves f b + weight_tree f b) l1 l2) 0.",
            "VernacDefinition",
            "43d663ce49a45376c87e3a98bb66e141d81cd78e"
        ],
        [
            "Theorem prod2list_app : forall l1 l2 l3 l4, length l1 = length l2 -> prod2list (l1 ++ l3) (l2 ++ l4) = prod2list l1 l2 + prod2list l3 l4.",
            "VernacStartTheoremProof",
            "2ce986b83f1dfb2c1445fd731ae7b7b21e7fb7fe"
        ],
        [
            "intros l1 l2 l3 l4 H; unfold prod2list in |- *.",
            "VernacExtend",
            "0fb2ec58f0ba807dda0c0bce2225f576e9e2a96e"
        ],
        [
            "rewrite map2_app; auto.",
            "VernacExtend",
            "d572b10c1804c5f86b9ed414525b9394448a9bae"
        ],
        [
            "rewrite fold_left_app.",
            "VernacExtend",
            "94bd7866d849f1a79f70458c9064c0a7877defe5"
        ],
        [
            "rewrite plus_comm.",
            "VernacExtend",
            "f2921c049c57ff33e3248947a1d6b2bcd1257393"
        ],
        [
            "apply sym_equal.",
            "VernacExtend",
            "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
        ],
        [
            "repeat rewrite fold_left_eta with (f := plus) (f1 := fun a b : nat => a + (fun x => x) b); auto.",
            "VernacExtend",
            "439c344813f2b57fe0b65f875545bd4a929f2ea3"
        ],
        [
            "apply sym_equal; rewrite <- fold_plus_split with (f := fun x : nat => x); auto.",
            "VernacExtend",
            "f2e759cf41719acfe3978aedb30dd90a379166fe"
        ],
        [
            "apply plus_comm.",
            "VernacExtend",
            "12475eb4e354334e12b009d49112b8335e8ec9d3"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem prod2list_le_l : forall a b c d l1 l2 l3 l4 l5 l6, length l1 = length l4 -> length l2 = length l5 -> length l3 = length l6 -> sum_leaves f c <= sum_leaves f d -> a <= b -> prod2list (l1 ++ a :: l2 ++ b :: l3) (l4 ++ d :: l5 ++ c :: l6) <= prod2list (l1 ++ a :: l2 ++ b :: l3) (l4 ++ c :: l5 ++ d :: l6).",
            "VernacStartTheoremProof",
            "00690caa6d1f00591abd0449a30dee7320bcbd2a"
        ],
        [
            "intros a b c d l1 l2 l3 l4 l5 l6 H H0 H1 H2 H3; change (prod2list (l1 ++ (a :: nil) ++ l2 ++ (b :: nil) ++ l3) (l4 ++ (d :: nil) ++ l5 ++ (c :: nil) ++ l6) <= prod2list (l1 ++ (a :: nil) ++ l2 ++ (b :: nil) ++ l3) (l4 ++ (c :: nil) ++ l5 ++ (d :: nil) ++ l6)) in |- *.",
            "VernacExtend",
            "2e5175580ec94087b3adb2225e5ed7fe52bf2b30"
        ],
        [
            "repeat rewrite prod2list_app; auto.",
            "VernacExtend",
            "2d47f7f5becfa9d1ed14bc2427e21dfc942ec5dd"
        ],
        [
            "apply plus_le_compat; auto with arith.",
            "VernacExtend",
            "883763167404c469926a982e251db284c05e5deb"
        ],
        [
            "repeat rewrite plus_assoc; apply plus_le_compat; auto.",
            "VernacExtend",
            "15cd2196793d16e5058b497dbe6357103ab10800"
        ],
        [
            "repeat rewrite (fun x y z => plus_comm (prod2list (x :: y) z)).",
            "VernacExtend",
            "0f5d66baa924ffa6c50620c98fcd031c520c4795"
        ],
        [
            "repeat rewrite plus_assoc_reverse; apply plus_le_compat; auto.",
            "VernacExtend",
            "0e39f070e76b0554b5726972e49d1df1b97b4ad1"
        ],
        [
            "unfold prod2list in |- *; simpl in |- *.",
            "VernacExtend",
            "5e00727cfd8b36d26d4ee19471dd5001882d233d"
        ],
        [
            "rewrite le_plus_minus with (1 := H3); auto.",
            "VernacExtend",
            "60d6f272f0a33b2ffd2ac70bba8f830ddcec8856"
        ],
        [
            "rewrite le_plus_minus with (1 := H2); auto.",
            "VernacExtend",
            "785a7e1b05c4783317fe259770d73dd5a835afbd"
        ],
        [
            "replace (a * (sum_leaves f c + (sum_leaves f d - sum_leaves f c)) + weight_tree f d + ((a + (b - a)) * sum_leaves f c + weight_tree f c)) with (a * sum_leaves f c + weight_tree f c + (a * (sum_leaves f d - sum_leaves f c) + (a + (b - a)) * sum_leaves f c + weight_tree f d)); [ idtac | ring ].",
            "VernacExtend",
            "ef1468f63641849d3f8b0760860ffb907b59cb67"
        ],
        [
            "apply plus_le_compat; auto with arith.",
            "VernacExtend",
            "883763167404c469926a982e251db284c05e5deb"
        ],
        [
            "apply plus_le_compat; auto with arith.",
            "VernacExtend",
            "883763167404c469926a982e251db284c05e5deb"
        ],
        [
            "repeat rewrite mult_plus_distr_l || rewrite mult_plus_distr_r; auto with arith.",
            "VernacExtend",
            "b538e157d901249222cc0b1a816b8f32081945e8"
        ],
        [
            "replace (a * (sum_leaves f d - sum_leaves f c) + (a * sum_leaves f c + (b - a) * sum_leaves f c)) with (a * sum_leaves f c + (b - a) * sum_leaves f c + (a * (sum_leaves f d - sum_leaves f c) + 0)); [ auto with arith | ring ].",
            "VernacExtend",
            "d7d4bae16ccf097e26f131f7bcec4d3c024f9e1a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem prod2list_le_r : forall a b c d l1 l2 l3 l4 l5 l6, length l1 = length l4 -> length l2 = length l5 -> length l3 = length l6 -> sum_leaves f d <= sum_leaves f c -> b <= a -> prod2list (l1 ++ a :: l2 ++ b :: l3) (l4 ++ d :: l5 ++ c :: l6) <= prod2list (l1 ++ a :: l2 ++ b :: l3) (l4 ++ c :: l5 ++ d :: l6).",
            "VernacStartTheoremProof",
            "616e06ad19ac5d053fabc74e97c5c3aa8b5bfe47"
        ],
        [
            "intros a b c d l1 l2 l3 l4 l5 l6 H H0 H1 H2 H3; change (prod2list (l1 ++ (a :: nil) ++ l2 ++ (b :: nil) ++ l3) (l4 ++ (d :: nil) ++ l5 ++ (c :: nil) ++ l6) <= prod2list (l1 ++ (a :: nil) ++ l2 ++ (b :: nil) ++ l3) (l4 ++ (c :: nil) ++ l5 ++ (d :: nil) ++ l6)) in |- *.",
            "VernacExtend",
            "2e5175580ec94087b3adb2225e5ed7fe52bf2b30"
        ],
        [
            "repeat rewrite prod2list_app; auto.",
            "VernacExtend",
            "2d47f7f5becfa9d1ed14bc2427e21dfc942ec5dd"
        ],
        [
            "apply plus_le_compat; auto with arith.",
            "VernacExtend",
            "883763167404c469926a982e251db284c05e5deb"
        ],
        [
            "repeat rewrite plus_assoc; apply plus_le_compat; auto.",
            "VernacExtend",
            "15cd2196793d16e5058b497dbe6357103ab10800"
        ],
        [
            "repeat rewrite (fun x y z => plus_comm (prod2list (x :: y) z)).",
            "VernacExtend",
            "0f5d66baa924ffa6c50620c98fcd031c520c4795"
        ],
        [
            "repeat rewrite plus_assoc_reverse; apply plus_le_compat; auto.",
            "VernacExtend",
            "0e39f070e76b0554b5726972e49d1df1b97b4ad1"
        ],
        [
            "unfold prod2list in |- *; simpl in |- *.",
            "VernacExtend",
            "5e00727cfd8b36d26d4ee19471dd5001882d233d"
        ],
        [
            "rewrite le_plus_minus with (1 := H3); auto.",
            "VernacExtend",
            "60d6f272f0a33b2ffd2ac70bba8f830ddcec8856"
        ],
        [
            "rewrite le_plus_minus with (1 := H2); auto.",
            "VernacExtend",
            "785a7e1b05c4783317fe259770d73dd5a835afbd"
        ],
        [
            "replace ((b + (a - b)) * (sum_leaves f d + (sum_leaves f c - sum_leaves f d)) + weight_tree f c + (b * sum_leaves f d + weight_tree f d)) with ((b + (a - b)) * sum_leaves f d + weight_tree f d + ((b + (a - b)) * (sum_leaves f c - sum_leaves f d) + b * sum_leaves f d + weight_tree f c)); [ idtac | ring ].",
            "VernacExtend",
            "9e8d0351377db41c9d10d859696a0927501add2d"
        ],
        [
            "apply plus_le_compat; auto with arith.",
            "VernacExtend",
            "883763167404c469926a982e251db284c05e5deb"
        ],
        [
            "apply plus_le_compat; auto with arith.",
            "VernacExtend",
            "883763167404c469926a982e251db284c05e5deb"
        ],
        [
            "repeat rewrite mult_plus_distr_l || rewrite mult_plus_distr_r; auto with arith.",
            "VernacExtend",
            "b538e157d901249222cc0b1a816b8f32081945e8"
        ],
        [
            "replace (b * sum_leaves f d + b * (sum_leaves f c - sum_leaves f d)) with (b * (sum_leaves f c - sum_leaves f d) + 0 + b * sum_leaves f d); [ auto with arith | ring ].",
            "VernacExtend",
            "4b67df4c5581b6ef7f288a71aa5766227b99170e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem prod2list_eq : forall a b c l1 l2 l3 l4 l5 l6, length l1 = length l4 -> length l2 = length l5 -> length l3 = length l6 -> prod2list (l1 ++ a :: l2 ++ a :: l3) (l4 ++ b :: l5 ++ c :: l6) = prod2list (l1 ++ a :: l2 ++ a :: l3) (l4 ++ c :: l5 ++ b :: l6).",
            "VernacStartTheoremProof",
            "285089ebc012a48a2fce1b17e2fe3ebe3ee158f9"
        ],
        [
            "intros a b c l1 l2 l3 l4 l5 l6 H H0 H1; change (prod2list (l1 ++ (a :: nil) ++ l2 ++ (a :: nil) ++ l3) (l4 ++ (b :: nil) ++ l5 ++ (c :: nil) ++ l6) = prod2list (l1 ++ (a :: nil) ++ l2 ++ (a :: nil) ++ l3) (l4 ++ (c :: nil) ++ l5 ++ (b :: nil) ++ l6)) in |- *.",
            "VernacExtend",
            "a1a4d8a951aa5a8af15ffb06e3e47a6559719722"
        ],
        [
            "repeat rewrite prod2list_app; auto with arith.",
            "VernacExtend",
            "14a106e17932fbf5e187ac36c6a09feef391f93e"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem prod2list_reorder : forall a b b1 l1 l2 l3 l4 l5, length l1 = length l3 -> length l2 = length l4 -> (forall b, In b l1 -> b <= a) -> (forall b, In b l2 -> b <= a) -> permutation (l3 ++ b :: l4) (b1 :: l5) -> ordered (sum_order f) (b1 :: l5) -> exists l6 : _, (exists l7 : _, length l1 = length l6 /\\ length l2 = length l7 /\\ permutation (b1 :: l5) (l6 ++ b1 :: l7) /\\ prod2list (l1 ++ a :: l2) (l6 ++ b1 :: l7) <= prod2list (l1 ++ a :: l2) (l3 ++ b :: l4)).",
            "VernacStartTheoremProof",
            "86e04330269bd41aca6a535f0cbbe32e2b60b33a"
        ],
        [
            "intros a b b1 l1 l2 l3 l4 l5 H H0 H1 H2 H3 H4.",
            "VernacExtend",
            "ea4fc147da470e54fb4f9c3a5e087c312c01d62f"
        ],
        [
            "cut (In b (b1 :: l5)); [ simpl in |- *; intros [HH0| HH0] | apply permutation_in with (1 := H3); auto with datatypes ].",
            "VernacExtend",
            "2584496cac62ef2718fd1bc48aa93aa27bf94e16"
        ],
        [
            "exists l3; exists l4; repeat (split; auto).",
            "VernacExtend",
            "ab68e774e113b4d8b67310dfa52481a141949e60"
        ],
        [
            "pattern b1 at 2 in |- *; rewrite HH0; apply permutation_sym; auto.",
            "VernacExtend",
            "ffa0ef27b62e048b89cd3f9c6f23fbfe61d2d1bf"
        ],
        [
            "rewrite HH0; auto.",
            "VernacExtend",
            "69de9ab4c14b40be7ab01f8b0797cc89f263d4e6"
        ],
        [
            "cut (In b1 (l3 ++ b :: l4)); [ intros HH1 | apply permutation_in with (1 := permutation_sym _ _ _ H3); auto with datatypes ].",
            "VernacExtend",
            "75ad57372093e6d9c2bf5bd5c6e6231b417997b7"
        ],
        [
            "case in_app_or with (1 := HH1); intros HH2.",
            "VernacExtend",
            "1fd99dba3e31384a6107d349c83f37cb94e25f95"
        ],
        [
            "case in_ex_app with (1 := HH2).",
            "VernacExtend",
            "e4242098e9226faa012ff5a273dfe6cf148f4eeb"
        ],
        [
            "intros l6 (l7, HH3); exists (l6 ++ b :: l7); exists l4; repeat (split; auto).",
            "VernacExtend",
            "05b8e3c6c183f3ad5fe0234b6e760cd3b53f64b9"
        ],
        [
            "apply trans_equal with (1 := H).",
            "VernacExtend",
            "200d47995c924a64899c47543cae583ae9f747f0"
        ],
        [
            "rewrite HH3; repeat rewrite length_app; simpl in |- *; auto with arith.",
            "VernacExtend",
            "a078053faefd2f3ab1b589a841289a35a8753a99"
        ],
        [
            "apply permutation_sym; apply permutation_trans with (2 := H3); auto.",
            "VernacExtend",
            "393048fd26ec2db491ab4db6586a8be22ca5a03e"
        ],
        [
            "rewrite HH3.",
            "VernacExtend",
            "a52a001f6afddae6e2ef7a0b7938f609ddef31ff"
        ],
        [
            "repeat rewrite app_ass.",
            "VernacExtend",
            "c5b6ee361540fa0f14fb61b62365b89213ce66af"
        ],
        [
            "simpl in |- *; apply permutation_transposition.",
            "VernacExtend",
            "b70d9375b84043e5ca05393f82f9e7ea3cb2bdcb"
        ],
        [
            "rewrite HH3; auto.",
            "VernacExtend",
            "e7977f1ecb2348277f457f74e78a5b15117e8e32"
        ],
        [
            "repeat rewrite app_ass.",
            "VernacExtend",
            "c5b6ee361540fa0f14fb61b62365b89213ce66af"
        ],
        [
            "case (same_length_ex _ _ b1 l6 l7 l1); auto.",
            "VernacExtend",
            "d1b1cca0520f57e3dfcaf27b229745b305442cbc"
        ],
        [
            "rewrite <- HH3; auto.",
            "VernacExtend",
            "f82339c7c8ee326a74cc2d152bc5f484309a8329"
        ],
        [
            "intros l8 (l9, (b2, (HH4, (HH5, HH6)))).",
            "VernacExtend",
            "0a9bed2f22d2a937d963702cc1dd5e1b052986f4"
        ],
        [
            "rewrite HH6.",
            "VernacExtend",
            "266ff4816cae794241b794db1cb6ff9d03dfcc2f"
        ],
        [
            "repeat rewrite app_ass; simpl in |- *.",
            "VernacExtend",
            "a2e04dba19a013120aa2ce4ee3bfc851332f0a79"
        ],
        [
            "apply prod2list_le_l; auto.",
            "VernacExtend",
            "2bb572b4b81bd76f113eb01f9fbe22862cbb74fd"
        ],
        [
            "change (sum_order f b1 b) in |- *.",
            "VernacExtend",
            "217e7ac621fb58c9c2912db18d1490abc29e6de5"
        ],
        [
            "apply ordered_trans with (2 := H4); auto.",
            "VernacExtend",
            "f6cbe7918515083273a387dc157c7921e2466372"
        ],
        [
            "unfold sum_order in |- *; intros a0 b0 c H5 H6; apply le_trans with (1 := H5); auto.",
            "VernacExtend",
            "b56da7f24bdc7baec2f7ddf8663ed4fc20bd9f82"
        ],
        [
            "apply H1; rewrite HH6; auto with datatypes.",
            "VernacExtend",
            "da8c52118203dd75a483194487c89ad00270e460"
        ],
        [
            "simpl in HH2; case HH2; intros HH3.",
            "VernacExtend",
            "cab3a558258ff7ae5871445acbf58d0b18bdc697"
        ],
        [
            "exists l3; exists l4; repeat (split; auto); try (rewrite <- HH3; auto; fail).",
            "VernacExtend",
            "3c922bf3a9c4fb5ebf712451931900a737f6cced"
        ],
        [
            "pattern b1 at 2 in |- *; rewrite <- HH3; apply permutation_sym; auto.",
            "VernacExtend",
            "57e74162471d28281d02332fca7b0a0722d768d1"
        ],
        [
            "case in_ex_app with (1 := HH3).",
            "VernacExtend",
            "5094cbcb5de79ca935bc3176d04cc74277d7185f"
        ],
        [
            "intros l6 (l7, HH4); exists l3; exists (l6 ++ b :: l7); repeat (split; auto).",
            "VernacExtend",
            "c7b6981eed7a7cef924fbacabf00d56695b36f25"
        ],
        [
            "apply trans_equal with (1 := H0).",
            "VernacExtend",
            "05d950cf774c7277ca88995a592f74ac9cee5ad4"
        ],
        [
            "rewrite HH4; repeat rewrite length_app; simpl in |- *; auto with arith.",
            "VernacExtend",
            "cfdcdb69fabd513cba0221999424bb5519024238"
        ],
        [
            "apply permutation_sym; apply permutation_trans with (2 := H3); auto.",
            "VernacExtend",
            "393048fd26ec2db491ab4db6586a8be22ca5a03e"
        ],
        [
            "rewrite HH4.",
            "VernacExtend",
            "91ed3303ff872033f6c6fbcc0f8cc3e9658a73e6"
        ],
        [
            "simpl in |- *; apply permutation_transposition.",
            "VernacExtend",
            "b70d9375b84043e5ca05393f82f9e7ea3cb2bdcb"
        ],
        [
            "rewrite HH4; auto.",
            "VernacExtend",
            "8250d74bffcff80b8f27f10179946424f7fa4cbe"
        ],
        [
            "case (same_length_ex _ _ b1 l6 l7 l2); auto.",
            "VernacExtend",
            "2025b21377e0ec635f8a642c2d3cc86e2ba8bed7"
        ],
        [
            "rewrite <- HH4; auto.",
            "VernacExtend",
            "c9d789e275e61dc6e6b7bba12f1f5b0eba7ac3e6"
        ],
        [
            "intros l8 (l9, (b2, (HH5, (HH6, HH7)))).",
            "VernacExtend",
            "1db381d63856ef2b067ca0efc1fb3dfb03d69b60"
        ],
        [
            "rewrite HH7.",
            "VernacExtend",
            "88ce753332136c3f2f544ba4d378041ce6935f88"
        ],
        [
            "apply prod2list_le_r; auto.",
            "VernacExtend",
            "45bba6efdfb54a094650a22fd7c0aff3d55fc22a"
        ],
        [
            "change (sum_order f b1 b) in |- *.",
            "VernacExtend",
            "217e7ac621fb58c9c2912db18d1490abc29e6de5"
        ],
        [
            "apply ordered_trans with (2 := H4); auto.",
            "VernacExtend",
            "f6cbe7918515083273a387dc157c7921e2466372"
        ],
        [
            "unfold sum_order in |- *; intros a0 b0 c H5 H6; apply le_trans with (1 := H5); auto.",
            "VernacExtend",
            "b56da7f24bdc7baec2f7ddf8663ed4fc20bd9f82"
        ],
        [
            "apply H2; rewrite HH7; auto with datatypes.",
            "VernacExtend",
            "c48fde30b40c230bf951b997d4c46f0f2ade5320"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem prod2list_reorder2 : forall a b c b1 c1 l1 l2 l3 l4 l5, length l1 = length l3 -> length l2 = length l4 -> (forall b, In b l1 -> b <= a) -> (forall b, In b l2 -> b <= a) -> permutation (l3 ++ b :: c :: l4) (b1 :: c1 :: l5) -> ordered (sum_order f) (b1 :: c1 :: l5) -> exists l6 : _, (exists l7 : _, length l1 = length l6 /\\ length l2 = length l7 /\\ permutation (b1 :: c1 :: l5) (l6 ++ b1 :: c1 :: l7) /\\ prod2list (l1 ++ a :: a :: l2) (l6 ++ b1 :: c1 :: l7) <= prod2list (l1 ++ a :: a :: l2) (l3 ++ b :: c :: l4)).",
            "VernacStartTheoremProof",
            "6e28ecac7ca23132c611b06cc5e48f5409ac8c0b"
        ],
        [
            "intros a b c b1 c1 l1 l2 l3 l4 l5 H H0 H1 H2 H3 H4.",
            "VernacExtend",
            "f670a31568b12307a34a8a4921056729759000a7"
        ],
        [
            "case (prod2list_reorder a b b1 l1 (a :: l2) l3 (c :: l4) (c1 :: l5)); simpl in |- *; auto.",
            "VernacExtend",
            "1f5c4006bb270ec3e7f9333a8bd8a51fdfe8af11"
        ],
        [
            "intros b0 [H5| H5]; auto.",
            "VernacExtend",
            "df01726959026b9dec9dfed324709fcee7f4a598"
        ],
        [
            "rewrite H5; auto.",
            "VernacExtend",
            "b21071c2373ca254f86470b0d9b124cb25551839"
        ],
        [
            "intros l6 (l7, (HH1, (HH2, (HH3, HH4)))).",
            "VernacExtend",
            "a871c5fd8b30281589ab94963ea1c0ef467a4256"
        ],
        [
            "generalize HH2 HH3 HH4; case l7; clear HH2 HH3 HH4 l7.",
            "VernacExtend",
            "670e5ddcdcd5b5078dad8082f6d1494cafb7f87c"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "intros c2 l7 HH2 HH3 HH4.",
            "VernacExtend",
            "bf309b9f5040da9a5cdfce7c85ea4762fbbddf81"
        ],
        [
            "case (prod2list_reorder a c2 c1 l1 l2 l6 l7 l5); simpl in |- *; auto.",
            "VernacExtend",
            "182bd8bb62291f439519604ccf3699b3289ca464"
        ],
        [
            "apply permutation_inv with (a := b1); auto.",
            "VernacExtend",
            "29337367237210ddde18c24a2ef58a9389787054"
        ],
        [
            "apply permutation_sym; apply permutation_trans with (1 := HH3).",
            "VernacExtend",
            "025c4d28fb3f69094043a830d356c97ca9798606"
        ],
        [
            "change (permutation (l6 ++ (b1 :: nil) ++ c2 :: l7) (((b1 :: nil) ++ l6) ++ c2 :: l7)) in |- *.",
            "VernacExtend",
            "49bac3a898572f5087b2a72122552e2cfd7e8469"
        ],
        [
            "repeat rewrite <- app_ass.",
            "VernacExtend",
            "0797b39a941bd4c347cf0dd5af57ded579bb3af1"
        ],
        [
            "apply permutation_app_comp; auto.",
            "VernacExtend",
            "66187756dd15e81b5f4358c8d3ab79b93eed1276"
        ],
        [
            "apply ordered_inv with (1 := H4); auto.",
            "VernacExtend",
            "72a4a2acd59c3b33edefb96ab17c2cdc7cb7c977"
        ],
        [
            "intros l8 (l9, (HH5, (HH6, (HH7, HH8)))).",
            "VernacExtend",
            "cc019e47b02511d9324223817d09ca656254b9d5"
        ],
        [
            "exists l8; exists l9; repeat (split; auto).",
            "VernacExtend",
            "31f4978f70f5de67f1bcdb4e0ee7c931053f62e7"
        ],
        [
            "apply permutation_trans with ((b1 :: c1 :: l9) ++ l8); auto.",
            "VernacExtend",
            "16602a2d1f5d8c17a4ea9047fcac4f7471bc3d47"
        ],
        [
            "simpl in |- *; apply permutation_skip; auto.",
            "VernacExtend",
            "60190dd0baa3024be48e583e6fe472609bfad303"
        ],
        [
            "apply permutation_trans with (1 := HH7).",
            "VernacExtend",
            "536b719ef750791c9f404980223175bed5574043"
        ],
        [
            "apply permutation_trans with ((c1 :: l9) ++ l8); auto.",
            "VernacExtend",
            "d902d57387ed28d411083fc9a651a295836b8f5c"
        ],
        [
            "apply le_trans with (2 := HH4).",
            "VernacExtend",
            "79fc3bda04ea87d2ec2f7e047d19f62522274287"
        ],
        [
            "change (prod2list (l1 ++ (a :: nil) ++ a :: l2) (l8 ++ (b1 :: nil) ++ c1 :: l9) <= prod2list (l1 ++ (a :: nil) ++ a :: l2) (l6 ++ (b1 :: nil) ++ c2 :: l7)) in |- *.",
            "VernacExtend",
            "5b2018bc4d877fe7c7f8e59f6d4dea4754cf4c19"
        ],
        [
            "generalize HH8; repeat rewrite prod2list_app; auto with arith.",
            "VernacExtend",
            "2e53aa5b325a8b88b2fb1f296f9aeeeb33152ceb"
        ],
        [
            "intros HH9.",
            "VernacExtend",
            "293f5ecd1bed3dfc22c0851df9f0380ccc6162e8"
        ],
        [
            "repeat rewrite plus_assoc.",
            "VernacExtend",
            "5dd8a7fee64febaa68da3d2e8e9db466c70f71a9"
        ],
        [
            "repeat rewrite (fun x => plus_comm (prod2list l1 x)).",
            "VernacExtend",
            "1f97b76095fb05ff2041799e839070799a21b055"
        ],
        [
            "repeat rewrite plus_assoc_reverse; auto with arith.",
            "VernacExtend",
            "e2ef2a0751310c773cccbd304432eb51f2ed06c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Prod2List.",
            "VernacEndSegment",
            "77879e56eaaff79eabe2e9d437a419e93cdba24c"
        ],
        [
            "Arguments prod2list [A].",
            "VernacArguments",
            "5d8c291204bdac73657774b2009289132e2605cc"
        ]
    ],
    "proofs": [
        {
            "name": "prod2list_app",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "intros l1 l2 l3 l4 H; unfold prod2list in |- *.",
                        "VernacExtend",
                        "0fb2ec58f0ba807dda0c0bce2225f576e9e2a96e"
                    ]
                },
                {
                    "command": [
                        "rewrite map2_app; auto.",
                        "VernacExtend",
                        "d572b10c1804c5f86b9ed414525b9394448a9bae"
                    ]
                },
                {
                    "command": [
                        "rewrite fold_left_app.",
                        "VernacExtend",
                        "94bd7866d849f1a79f70458c9064c0a7877defe5"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_comm.",
                        "VernacExtend",
                        "f2921c049c57ff33e3248947a1d6b2bcd1257393"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal.",
                        "VernacExtend",
                        "c17550e3f7c4c9c406c00d64da9614cfdcfa6161"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite fold_left_eta with (f := plus) (f1 := fun a b : nat => a + (fun x => x) b); auto.",
                        "VernacExtend",
                        "439c344813f2b57fe0b65f875545bd4a929f2ea3"
                    ]
                },
                {
                    "command": [
                        "apply sym_equal; rewrite <- fold_plus_split with (f := fun x : nat => x); auto.",
                        "VernacExtend",
                        "f2e759cf41719acfe3978aedb30dd90a379166fe"
                    ]
                },
                {
                    "command": [
                        "apply plus_comm.",
                        "VernacExtend",
                        "12475eb4e354334e12b009d49112b8335e8ec9d3"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod2list_le_l",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros a b c d l1 l2 l3 l4 l5 l6 H H0 H1 H2 H3; change (prod2list (l1 ++ (a :: nil) ++ l2 ++ (b :: nil) ++ l3) (l4 ++ (d :: nil) ++ l5 ++ (c :: nil) ++ l6) <= prod2list (l1 ++ (a :: nil) ++ l2 ++ (b :: nil) ++ l3) (l4 ++ (c :: nil) ++ l5 ++ (d :: nil) ++ l6)) in |- *.",
                        "VernacExtend",
                        "2e5175580ec94087b3adb2225e5ed7fe52bf2b30"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite prod2list_app; auto.",
                        "VernacExtend",
                        "2d47f7f5becfa9d1ed14bc2427e21dfc942ec5dd"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat; auto with arith.",
                        "VernacExtend",
                        "883763167404c469926a982e251db284c05e5deb"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite plus_assoc; apply plus_le_compat; auto.",
                        "VernacExtend",
                        "15cd2196793d16e5058b497dbe6357103ab10800"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (fun x y z => plus_comm (prod2list (x :: y) z)).",
                        "VernacExtend",
                        "0f5d66baa924ffa6c50620c98fcd031c520c4795"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite plus_assoc_reverse; apply plus_le_compat; auto.",
                        "VernacExtend",
                        "0e39f070e76b0554b5726972e49d1df1b97b4ad1"
                    ]
                },
                {
                    "command": [
                        "unfold prod2list in |- *; simpl in |- *.",
                        "VernacExtend",
                        "5e00727cfd8b36d26d4ee19471dd5001882d233d"
                    ]
                },
                {
                    "command": [
                        "rewrite le_plus_minus with (1 := H3); auto.",
                        "VernacExtend",
                        "60d6f272f0a33b2ffd2ac70bba8f830ddcec8856"
                    ]
                },
                {
                    "command": [
                        "rewrite le_plus_minus with (1 := H2); auto.",
                        "VernacExtend",
                        "785a7e1b05c4783317fe259770d73dd5a835afbd"
                    ]
                },
                {
                    "command": [
                        "replace (a * (sum_leaves f c + (sum_leaves f d - sum_leaves f c)) + weight_tree f d + ((a + (b - a)) * sum_leaves f c + weight_tree f c)) with (a * sum_leaves f c + weight_tree f c + (a * (sum_leaves f d - sum_leaves f c) + (a + (b - a)) * sum_leaves f c + weight_tree f d)); [ idtac | ring ].",
                        "VernacExtend",
                        "ef1468f63641849d3f8b0760860ffb907b59cb67"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat; auto with arith.",
                        "VernacExtend",
                        "883763167404c469926a982e251db284c05e5deb"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat; auto with arith.",
                        "VernacExtend",
                        "883763167404c469926a982e251db284c05e5deb"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_plus_distr_l || rewrite mult_plus_distr_r; auto with arith.",
                        "VernacExtend",
                        "b538e157d901249222cc0b1a816b8f32081945e8"
                    ]
                },
                {
                    "command": [
                        "replace (a * (sum_leaves f d - sum_leaves f c) + (a * sum_leaves f c + (b - a) * sum_leaves f c)) with (a * sum_leaves f c + (b - a) * sum_leaves f c + (a * (sum_leaves f d - sum_leaves f c) + 0)); [ auto with arith | ring ].",
                        "VernacExtend",
                        "d7d4bae16ccf097e26f131f7bcec4d3c024f9e1a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod2list_le_r",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros a b c d l1 l2 l3 l4 l5 l6 H H0 H1 H2 H3; change (prod2list (l1 ++ (a :: nil) ++ l2 ++ (b :: nil) ++ l3) (l4 ++ (d :: nil) ++ l5 ++ (c :: nil) ++ l6) <= prod2list (l1 ++ (a :: nil) ++ l2 ++ (b :: nil) ++ l3) (l4 ++ (c :: nil) ++ l5 ++ (d :: nil) ++ l6)) in |- *.",
                        "VernacExtend",
                        "2e5175580ec94087b3adb2225e5ed7fe52bf2b30"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite prod2list_app; auto.",
                        "VernacExtend",
                        "2d47f7f5becfa9d1ed14bc2427e21dfc942ec5dd"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat; auto with arith.",
                        "VernacExtend",
                        "883763167404c469926a982e251db284c05e5deb"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite plus_assoc; apply plus_le_compat; auto.",
                        "VernacExtend",
                        "15cd2196793d16e5058b497dbe6357103ab10800"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (fun x y z => plus_comm (prod2list (x :: y) z)).",
                        "VernacExtend",
                        "0f5d66baa924ffa6c50620c98fcd031c520c4795"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite plus_assoc_reverse; apply plus_le_compat; auto.",
                        "VernacExtend",
                        "0e39f070e76b0554b5726972e49d1df1b97b4ad1"
                    ]
                },
                {
                    "command": [
                        "unfold prod2list in |- *; simpl in |- *.",
                        "VernacExtend",
                        "5e00727cfd8b36d26d4ee19471dd5001882d233d"
                    ]
                },
                {
                    "command": [
                        "rewrite le_plus_minus with (1 := H3); auto.",
                        "VernacExtend",
                        "60d6f272f0a33b2ffd2ac70bba8f830ddcec8856"
                    ]
                },
                {
                    "command": [
                        "rewrite le_plus_minus with (1 := H2); auto.",
                        "VernacExtend",
                        "785a7e1b05c4783317fe259770d73dd5a835afbd"
                    ]
                },
                {
                    "command": [
                        "replace ((b + (a - b)) * (sum_leaves f d + (sum_leaves f c - sum_leaves f d)) + weight_tree f c + (b * sum_leaves f d + weight_tree f d)) with ((b + (a - b)) * sum_leaves f d + weight_tree f d + ((b + (a - b)) * (sum_leaves f c - sum_leaves f d) + b * sum_leaves f d + weight_tree f c)); [ idtac | ring ].",
                        "VernacExtend",
                        "9e8d0351377db41c9d10d859696a0927501add2d"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat; auto with arith.",
                        "VernacExtend",
                        "883763167404c469926a982e251db284c05e5deb"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat; auto with arith.",
                        "VernacExtend",
                        "883763167404c469926a982e251db284c05e5deb"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite mult_plus_distr_l || rewrite mult_plus_distr_r; auto with arith.",
                        "VernacExtend",
                        "b538e157d901249222cc0b1a816b8f32081945e8"
                    ]
                },
                {
                    "command": [
                        "replace (b * sum_leaves f d + b * (sum_leaves f c - sum_leaves f d)) with (b * (sum_leaves f c - sum_leaves f d) + 0 + b * sum_leaves f d); [ auto with arith | ring ].",
                        "VernacExtend",
                        "4b67df4c5581b6ef7f288a71aa5766227b99170e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod2list_eq",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros a b c l1 l2 l3 l4 l5 l6 H H0 H1; change (prod2list (l1 ++ (a :: nil) ++ l2 ++ (a :: nil) ++ l3) (l4 ++ (b :: nil) ++ l5 ++ (c :: nil) ++ l6) = prod2list (l1 ++ (a :: nil) ++ l2 ++ (a :: nil) ++ l3) (l4 ++ (c :: nil) ++ l5 ++ (b :: nil) ++ l6)) in |- *.",
                        "VernacExtend",
                        "a1a4d8a951aa5a8af15ffb06e3e47a6559719722"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite prod2list_app; auto with arith.",
                        "VernacExtend",
                        "14a106e17932fbf5e187ac36c6a09feef391f93e"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod2list_reorder",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "intros a b b1 l1 l2 l3 l4 l5 H H0 H1 H2 H3 H4.",
                        "VernacExtend",
                        "ea4fc147da470e54fb4f9c3a5e087c312c01d62f"
                    ]
                },
                {
                    "command": [
                        "cut (In b (b1 :: l5)); [ simpl in |- *; intros [HH0| HH0] | apply permutation_in with (1 := H3); auto with datatypes ].",
                        "VernacExtend",
                        "2584496cac62ef2718fd1bc48aa93aa27bf94e16"
                    ]
                },
                {
                    "command": [
                        "exists l3; exists l4; repeat (split; auto).",
                        "VernacExtend",
                        "ab68e774e113b4d8b67310dfa52481a141949e60"
                    ]
                },
                {
                    "command": [
                        "pattern b1 at 2 in |- *; rewrite HH0; apply permutation_sym; auto.",
                        "VernacExtend",
                        "ffa0ef27b62e048b89cd3f9c6f23fbfe61d2d1bf"
                    ]
                },
                {
                    "command": [
                        "rewrite HH0; auto.",
                        "VernacExtend",
                        "69de9ab4c14b40be7ab01f8b0797cc89f263d4e6"
                    ]
                },
                {
                    "command": [
                        "cut (In b1 (l3 ++ b :: l4)); [ intros HH1 | apply permutation_in with (1 := permutation_sym _ _ _ H3); auto with datatypes ].",
                        "VernacExtend",
                        "75ad57372093e6d9c2bf5bd5c6e6231b417997b7"
                    ]
                },
                {
                    "command": [
                        "case in_app_or with (1 := HH1); intros HH2.",
                        "VernacExtend",
                        "1fd99dba3e31384a6107d349c83f37cb94e25f95"
                    ]
                },
                {
                    "command": [
                        "case in_ex_app with (1 := HH2).",
                        "VernacExtend",
                        "e4242098e9226faa012ff5a273dfe6cf148f4eeb"
                    ]
                },
                {
                    "command": [
                        "intros l6 (l7, HH3); exists (l6 ++ b :: l7); exists l4; repeat (split; auto).",
                        "VernacExtend",
                        "05b8e3c6c183f3ad5fe0234b6e760cd3b53f64b9"
                    ]
                },
                {
                    "command": [
                        "apply trans_equal with (1 := H).",
                        "VernacExtend",
                        "200d47995c924a64899c47543cae583ae9f747f0"
                    ]
                },
                {
                    "command": [
                        "rewrite HH3; repeat rewrite length_app; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "a078053faefd2f3ab1b589a841289a35a8753a99"
                    ]
                },
                {
                    "command": [
                        "apply permutation_sym; apply permutation_trans with (2 := H3); auto.",
                        "VernacExtend",
                        "393048fd26ec2db491ab4db6586a8be22ca5a03e"
                    ]
                },
                {
                    "command": [
                        "rewrite HH3.",
                        "VernacExtend",
                        "a52a001f6afddae6e2ef7a0b7938f609ddef31ff"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite app_ass.",
                        "VernacExtend",
                        "c5b6ee361540fa0f14fb61b62365b89213ce66af"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; apply permutation_transposition.",
                        "VernacExtend",
                        "b70d9375b84043e5ca05393f82f9e7ea3cb2bdcb"
                    ]
                },
                {
                    "command": [
                        "rewrite HH3; auto.",
                        "VernacExtend",
                        "e7977f1ecb2348277f457f74e78a5b15117e8e32"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite app_ass.",
                        "VernacExtend",
                        "c5b6ee361540fa0f14fb61b62365b89213ce66af"
                    ]
                },
                {
                    "command": [
                        "case (same_length_ex _ _ b1 l6 l7 l1); auto.",
                        "VernacExtend",
                        "d1b1cca0520f57e3dfcaf27b229745b305442cbc"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HH3; auto.",
                        "VernacExtend",
                        "f82339c7c8ee326a74cc2d152bc5f484309a8329"
                    ]
                },
                {
                    "command": [
                        "intros l8 (l9, (b2, (HH4, (HH5, HH6)))).",
                        "VernacExtend",
                        "0a9bed2f22d2a937d963702cc1dd5e1b052986f4"
                    ]
                },
                {
                    "command": [
                        "rewrite HH6.",
                        "VernacExtend",
                        "266ff4816cae794241b794db1cb6ff9d03dfcc2f"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite app_ass; simpl in |- *.",
                        "VernacExtend",
                        "a2e04dba19a013120aa2ce4ee3bfc851332f0a79"
                    ]
                },
                {
                    "command": [
                        "apply prod2list_le_l; auto.",
                        "VernacExtend",
                        "2bb572b4b81bd76f113eb01f9fbe22862cbb74fd"
                    ]
                },
                {
                    "command": [
                        "change (sum_order f b1 b) in |- *.",
                        "VernacExtend",
                        "217e7ac621fb58c9c2912db18d1490abc29e6de5"
                    ]
                },
                {
                    "command": [
                        "apply ordered_trans with (2 := H4); auto.",
                        "VernacExtend",
                        "f6cbe7918515083273a387dc157c7921e2466372"
                    ]
                },
                {
                    "command": [
                        "unfold sum_order in |- *; intros a0 b0 c H5 H6; apply le_trans with (1 := H5); auto.",
                        "VernacExtend",
                        "b56da7f24bdc7baec2f7ddf8663ed4fc20bd9f82"
                    ]
                },
                {
                    "command": [
                        "apply H1; rewrite HH6; auto with datatypes.",
                        "VernacExtend",
                        "da8c52118203dd75a483194487c89ad00270e460"
                    ]
                },
                {
                    "command": [
                        "simpl in HH2; case HH2; intros HH3.",
                        "VernacExtend",
                        "cab3a558258ff7ae5871445acbf58d0b18bdc697"
                    ]
                },
                {
                    "command": [
                        "exists l3; exists l4; repeat (split; auto); try (rewrite <- HH3; auto; fail).",
                        "VernacExtend",
                        "3c922bf3a9c4fb5ebf712451931900a737f6cced"
                    ]
                },
                {
                    "command": [
                        "pattern b1 at 2 in |- *; rewrite <- HH3; apply permutation_sym; auto.",
                        "VernacExtend",
                        "57e74162471d28281d02332fca7b0a0722d768d1"
                    ]
                },
                {
                    "command": [
                        "case in_ex_app with (1 := HH3).",
                        "VernacExtend",
                        "5094cbcb5de79ca935bc3176d04cc74277d7185f"
                    ]
                },
                {
                    "command": [
                        "intros l6 (l7, HH4); exists l3; exists (l6 ++ b :: l7); repeat (split; auto).",
                        "VernacExtend",
                        "c7b6981eed7a7cef924fbacabf00d56695b36f25"
                    ]
                },
                {
                    "command": [
                        "apply trans_equal with (1 := H0).",
                        "VernacExtend",
                        "05d950cf774c7277ca88995a592f74ac9cee5ad4"
                    ]
                },
                {
                    "command": [
                        "rewrite HH4; repeat rewrite length_app; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "cfdcdb69fabd513cba0221999424bb5519024238"
                    ]
                },
                {
                    "command": [
                        "apply permutation_sym; apply permutation_trans with (2 := H3); auto.",
                        "VernacExtend",
                        "393048fd26ec2db491ab4db6586a8be22ca5a03e"
                    ]
                },
                {
                    "command": [
                        "rewrite HH4.",
                        "VernacExtend",
                        "91ed3303ff872033f6c6fbcc0f8cc3e9658a73e6"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; apply permutation_transposition.",
                        "VernacExtend",
                        "b70d9375b84043e5ca05393f82f9e7ea3cb2bdcb"
                    ]
                },
                {
                    "command": [
                        "rewrite HH4; auto.",
                        "VernacExtend",
                        "8250d74bffcff80b8f27f10179946424f7fa4cbe"
                    ]
                },
                {
                    "command": [
                        "case (same_length_ex _ _ b1 l6 l7 l2); auto.",
                        "VernacExtend",
                        "2025b21377e0ec635f8a642c2d3cc86e2ba8bed7"
                    ]
                },
                {
                    "command": [
                        "rewrite <- HH4; auto.",
                        "VernacExtend",
                        "c9d789e275e61dc6e6b7bba12f1f5b0eba7ac3e6"
                    ]
                },
                {
                    "command": [
                        "intros l8 (l9, (b2, (HH5, (HH6, HH7)))).",
                        "VernacExtend",
                        "1db381d63856ef2b067ca0efc1fb3dfb03d69b60"
                    ]
                },
                {
                    "command": [
                        "rewrite HH7.",
                        "VernacExtend",
                        "88ce753332136c3f2f544ba4d378041ce6935f88"
                    ]
                },
                {
                    "command": [
                        "apply prod2list_le_r; auto.",
                        "VernacExtend",
                        "45bba6efdfb54a094650a22fd7c0aff3d55fc22a"
                    ]
                },
                {
                    "command": [
                        "change (sum_order f b1 b) in |- *.",
                        "VernacExtend",
                        "217e7ac621fb58c9c2912db18d1490abc29e6de5"
                    ]
                },
                {
                    "command": [
                        "apply ordered_trans with (2 := H4); auto.",
                        "VernacExtend",
                        "f6cbe7918515083273a387dc157c7921e2466372"
                    ]
                },
                {
                    "command": [
                        "unfold sum_order in |- *; intros a0 b0 c H5 H6; apply le_trans with (1 := H5); auto.",
                        "VernacExtend",
                        "b56da7f24bdc7baec2f7ddf8663ed4fc20bd9f82"
                    ]
                },
                {
                    "command": [
                        "apply H2; rewrite HH7; auto with datatypes.",
                        "VernacExtend",
                        "c48fde30b40c230bf951b997d4c46f0f2ade5320"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "prod2list_reorder2",
            "line_nb": 103,
            "steps": [
                {
                    "command": [
                        "intros a b c b1 c1 l1 l2 l3 l4 l5 H H0 H1 H2 H3 H4.",
                        "VernacExtend",
                        "f670a31568b12307a34a8a4921056729759000a7"
                    ]
                },
                {
                    "command": [
                        "case (prod2list_reorder a b b1 l1 (a :: l2) l3 (c :: l4) (c1 :: l5)); simpl in |- *; auto.",
                        "VernacExtend",
                        "1f5c4006bb270ec3e7f9333a8bd8a51fdfe8af11"
                    ]
                },
                {
                    "command": [
                        "intros b0 [H5| H5]; auto.",
                        "VernacExtend",
                        "df01726959026b9dec9dfed324709fcee7f4a598"
                    ]
                },
                {
                    "command": [
                        "rewrite H5; auto.",
                        "VernacExtend",
                        "b21071c2373ca254f86470b0d9b124cb25551839"
                    ]
                },
                {
                    "command": [
                        "intros l6 (l7, (HH1, (HH2, (HH3, HH4)))).",
                        "VernacExtend",
                        "a871c5fd8b30281589ab94963ea1c0ef467a4256"
                    ]
                },
                {
                    "command": [
                        "generalize HH2 HH3 HH4; case l7; clear HH2 HH3 HH4 l7.",
                        "VernacExtend",
                        "670e5ddcdcd5b5078dad8082f6d1494cafb7f87c"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "intros c2 l7 HH2 HH3 HH4.",
                        "VernacExtend",
                        "bf309b9f5040da9a5cdfce7c85ea4762fbbddf81"
                    ]
                },
                {
                    "command": [
                        "case (prod2list_reorder a c2 c1 l1 l2 l6 l7 l5); simpl in |- *; auto.",
                        "VernacExtend",
                        "182bd8bb62291f439519604ccf3699b3289ca464"
                    ]
                },
                {
                    "command": [
                        "apply permutation_inv with (a := b1); auto.",
                        "VernacExtend",
                        "29337367237210ddde18c24a2ef58a9389787054"
                    ]
                },
                {
                    "command": [
                        "apply permutation_sym; apply permutation_trans with (1 := HH3).",
                        "VernacExtend",
                        "025c4d28fb3f69094043a830d356c97ca9798606"
                    ]
                },
                {
                    "command": [
                        "change (permutation (l6 ++ (b1 :: nil) ++ c2 :: l7) (((b1 :: nil) ++ l6) ++ c2 :: l7)) in |- *.",
                        "VernacExtend",
                        "49bac3a898572f5087b2a72122552e2cfd7e8469"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- app_ass.",
                        "VernacExtend",
                        "0797b39a941bd4c347cf0dd5af57ded579bb3af1"
                    ]
                },
                {
                    "command": [
                        "apply permutation_app_comp; auto.",
                        "VernacExtend",
                        "66187756dd15e81b5f4358c8d3ab79b93eed1276"
                    ]
                },
                {
                    "command": [
                        "apply ordered_inv with (1 := H4); auto.",
                        "VernacExtend",
                        "72a4a2acd59c3b33edefb96ab17c2cdc7cb7c977"
                    ]
                },
                {
                    "command": [
                        "intros l8 (l9, (HH5, (HH6, (HH7, HH8)))).",
                        "VernacExtend",
                        "cc019e47b02511d9324223817d09ca656254b9d5"
                    ]
                },
                {
                    "command": [
                        "exists l8; exists l9; repeat (split; auto).",
                        "VernacExtend",
                        "31f4978f70f5de67f1bcdb4e0ee7c931053f62e7"
                    ]
                },
                {
                    "command": [
                        "apply permutation_trans with ((b1 :: c1 :: l9) ++ l8); auto.",
                        "VernacExtend",
                        "16602a2d1f5d8c17a4ea9047fcac4f7471bc3d47"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; apply permutation_skip; auto.",
                        "VernacExtend",
                        "60190dd0baa3024be48e583e6fe472609bfad303"
                    ]
                },
                {
                    "command": [
                        "apply permutation_trans with (1 := HH7).",
                        "VernacExtend",
                        "536b719ef750791c9f404980223175bed5574043"
                    ]
                },
                {
                    "command": [
                        "apply permutation_trans with ((c1 :: l9) ++ l8); auto.",
                        "VernacExtend",
                        "d902d57387ed28d411083fc9a651a295836b8f5c"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (2 := HH4).",
                        "VernacExtend",
                        "79fc3bda04ea87d2ec2f7e047d19f62522274287"
                    ]
                },
                {
                    "command": [
                        "change (prod2list (l1 ++ (a :: nil) ++ a :: l2) (l8 ++ (b1 :: nil) ++ c1 :: l9) <= prod2list (l1 ++ (a :: nil) ++ a :: l2) (l6 ++ (b1 :: nil) ++ c2 :: l7)) in |- *.",
                        "VernacExtend",
                        "5b2018bc4d877fe7c7f8e59f6d4dea4754cf4c19"
                    ]
                },
                {
                    "command": [
                        "generalize HH8; repeat rewrite prod2list_app; auto with arith.",
                        "VernacExtend",
                        "2e53aa5b325a8b88b2fb1f296f9aeeeb33152ceb"
                    ]
                },
                {
                    "command": [
                        "intros HH9.",
                        "VernacExtend",
                        "293f5ecd1bed3dfc22c0851df9f0380ccc6162e8"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite plus_assoc.",
                        "VernacExtend",
                        "5dd8a7fee64febaa68da3d2e8e9db466c70f71a9"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (fun x => plus_comm (prod2list l1 x)).",
                        "VernacExtend",
                        "1f97b76095fb05ff2041799e839070799a21b055"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite plus_assoc_reverse; auto with arith.",
                        "VernacExtend",
                        "e2ef2a0751310c773cccbd304432eb51f2ed06c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}