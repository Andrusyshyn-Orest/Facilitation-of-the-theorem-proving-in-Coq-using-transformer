{
    "filename": "theories/Ordered.v",
    "coq_project": "huffman",
    "vernac_cmds": [
        [
            "Require Export List.",
            "VernacRequire",
            "d626cb98fe764077098989d26509c9f7407e0464"
        ],
        [
            "From Huffman Require Export Permutation.",
            "VernacRequire",
            "37394a3a1204d537581ecd2116a50dc029e15045"
        ],
        [
            "From Huffman Require Export Aux.",
            "VernacRequire",
            "ea24dc75e02edb0748d5e62b170bf0817760d489"
        ],
        [
            "Section ordered.",
            "VernacBeginSection",
            "f2710e4053c6a7d7e20a06fd6e1e1c08b1556d14"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Variable order : A -> A -> Prop.",
            "VernacAssumption",
            "84309ca26067c443940637abab26d77ce73ef8c9"
        ],
        [
            "Variable order_trans : forall a b c : A, order a b -> order b c -> order a c.",
            "VernacAssumption",
            "08d4bc331bf75d61998eb850b73b04e3300997f7"
        ],
        [
            "Inductive ordered : list A -> Prop := | ordered_nil : ordered nil | ordered_one : forall a : A, ordered (a :: nil) | ordered_cons : forall (a b : A) (l : list A), order a b -> ordered (b :: l) -> ordered (a :: b :: l).",
            "VernacInductive",
            "2f5bdfb0bc1352067bc4abe8be54469c038569eb"
        ],
        [
            "Hint Constructors ordered : core.",
            "VernacHints",
            "8c2ee7b45eb062c7ce3400d505a9bbdfe26a1d12"
        ],
        [
            "Theorem ordered_inv_order : forall (a b : A) (l : list A), ordered (a :: b :: l) -> order a b.",
            "VernacStartTheoremProof",
            "238531fd807083341b464b38c70530bcdd5d608b"
        ],
        [
            "intros a b l H; inversion H; auto.",
            "VernacExtend",
            "fe649f513fd9e0e39aede7e504cbff574e598ce2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ordered_inv : forall (a : A) (l : list A), ordered (a :: l) -> ordered l.",
            "VernacStartTheoremProof",
            "1472552c4cd644cde5e7cb88159994e36ba08919"
        ],
        [
            "intros a l H; inversion H; auto.",
            "VernacExtend",
            "9ce99578d992520a14154c97eee6c0929bfde714"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ordered_skip : forall (a b : A) (l : list A), ordered (a :: b :: l) -> ordered (a :: l).",
            "VernacStartTheoremProof",
            "068628bb8e22cb7c476e0f5167cf4f262b39894c"
        ],
        [
            "intros a b l; case l; clear l; auto.",
            "VernacExtend",
            "541538a17e78a8923e1fc75d0aa01cbe5289fd1f"
        ],
        [
            "intros c l H; apply ordered_cons.",
            "VernacExtend",
            "f58c523ec6ff0da21bbcc5c6e83d2aeadaf74739"
        ],
        [
            "apply order_trans with (b := b); auto.",
            "VernacExtend",
            "7534f0ebc02e1ea2df9caa4739bf780940655d92"
        ],
        [
            "apply ordered_inv_order with (1 := H).",
            "VernacExtend",
            "23554e9fce6a77f8e3521109a883486d46c16a4b"
        ],
        [
            "apply ordered_inv_order with (1 := ordered_inv _ _ H).",
            "VernacExtend",
            "31e541f00ee5451071698bfedcb2858d3d71250c"
        ],
        [
            "apply ordered_inv with (1 := ordered_inv _ _ H).",
            "VernacExtend",
            "735deb56b7c2b45e9ad874db3cdb6f5b4d7f8c6c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ordered_trans : forall (a b : A) (l : list A), ordered (a :: l) -> In b l -> order a b.",
            "VernacStartTheoremProof",
            "9288e164dda81f6a2fb16036dd01838bcab779f1"
        ],
        [
            "intros a b l; generalize a b; elim l; clear l a b.",
            "VernacExtend",
            "b9063524a496e4934de28067aa739c1fa33ca8c7"
        ],
        [
            "intros a b H H2; inversion H2.",
            "VernacExtend",
            "194ab0bb0fe790b71c62f14149761b25954994ea"
        ],
        [
            "simpl in |- *; intros c l H a b H0 [H1| H1].",
            "VernacExtend",
            "21aeb61e7c2ab9c8b133f1e16a5741b4ad9c56b2"
        ],
        [
            "rewrite <- H1; apply ordered_inv_order with (1 := H0).",
            "VernacExtend",
            "4095e9926386bbde814709eb93150e3376b91a03"
        ],
        [
            "apply order_trans with (b := c); auto.",
            "VernacExtend",
            "e4492ced9bd67b93c1935663e9d8b13d6ea90f3c"
        ],
        [
            "apply ordered_inv_order with (1 := H0).",
            "VernacExtend",
            "0c400e1b4f3fb012cefe5ff1cf3f1d23ecfde661"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply ordered_inv with (1 := H0).",
            "VernacExtend",
            "d45cbe3c00765773abd8b7c5f318809219ddf81f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ordered_trans_app : forall (a b : A) (l1 l2 : list A), ordered (l1 ++ l2) -> In a l1 -> In b l2 -> order a b.",
            "VernacStartTheoremProof",
            "ec37577ee9e29f57f81156ff5db41544ec3a1f40"
        ],
        [
            "intros a b l1 l2; generalize a b; elim l1; simpl in |- *; clear l1 a b.",
            "VernacExtend",
            "490fc47eea30e408a1b0e8310a1136d2469f4b6f"
        ],
        [
            "intros a b H H1; case H1.",
            "VernacExtend",
            "365409c9cf876547282312cd25f8d4665de385b0"
        ],
        [
            "intros c l H a b H0 [H1| H1] H2.",
            "VernacExtend",
            "d0a8e9507d493dcab2def8313adeff202f22723f"
        ],
        [
            "rewrite <- H1; apply ordered_trans with (1 := H0); auto with datatypes.",
            "VernacExtend",
            "a647d583a3fc52615f05608b487e9a875f6f2fd3"
        ],
        [
            "apply H; auto.",
            "VernacExtend",
            "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
        ],
        [
            "apply ordered_inv with (1 := H0); auto.",
            "VernacExtend",
            "bda46234095307db1fca92625e757f7e81963da0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ordered_perm_antisym_eq : (forall a b : A, order a b -> order b a -> a = b) -> forall l1 l2 : list A, permutation l1 l2 -> ordered l1 -> ordered l2 -> l1 = l2.",
            "VernacStartTheoremProof",
            "3e89865d47d4e227570476c2f11347b734fc9159"
        ],
        [
            "intros antisym l1; elim l1; clear l1; simpl in |- *; auto.",
            "VernacExtend",
            "cc94380e564ec7b4dba0507feda07dd1aedafbe2"
        ],
        [
            "intros l2 H1 H2 H3; apply sym_equal; apply permutation_nil_inv.",
            "VernacExtend",
            "e4a402c76c58e1514f521cf7de2d819ea2ed9125"
        ],
        [
            "apply permutation_sym; auto.",
            "VernacExtend",
            "00ac0f05aa5261d9ca08c5b94f567895ad7baa9d"
        ],
        [
            "intros a l1 Rec l2; case l2; simpl in |- *.",
            "VernacExtend",
            "de79faa2b9c8c205752489caafc7cd74ec2253d1"
        ],
        [
            "intros H; absurd (length (a :: l1) = length (A:=A) nil).",
            "VernacExtend",
            "1fe6d6c4f187b50ccc560c01cd6255f4ca13cae0"
        ],
        [
            "simpl in |- *; red in |- *; intros; discriminate.",
            "VernacExtend",
            "3d9e3cad2127e705c546560dd2e3fde1f1f047e9"
        ],
        [
            "apply permutation_length; auto.",
            "VernacExtend",
            "db6efdac3b46be99ec618661eaea7cef832ed276"
        ],
        [
            "intros a0 l H H0 H1.",
            "VernacExtend",
            "573ed9b4d204a5350a2c6ea43219ee2d89837597"
        ],
        [
            "cut (a = a0).",
            "VernacExtend",
            "2a16e3458e74d7715f08d6b2f607d9976f9d9660"
        ],
        [
            "intros H3; apply f_equal2 with (f := cons (A:=A)); auto.",
            "VernacExtend",
            "784270dbd39ea6f0166611e0480662cea1e340f7"
        ],
        [
            "apply Rec; auto.",
            "VernacExtend",
            "9031ae321520376bb7de9c925d9b38269fd9dcc0"
        ],
        [
            "apply permutation_inv with (a := a); auto.",
            "VernacExtend",
            "f33d181c6f68e58c8719614f0adcbe584478e113"
        ],
        [
            "pattern a at 2 in |- *; rewrite H3; auto.",
            "VernacExtend",
            "5a2f6da75b4a2401ab04d9bc8160982e6dad7c19"
        ],
        [
            "apply ordered_inv with (1 := H0); auto.",
            "VernacExtend",
            "bda46234095307db1fca92625e757f7e81963da0"
        ],
        [
            "apply ordered_inv with (1 := H1); auto.",
            "VernacExtend",
            "2fd5afba77e6bcc2e510658b105078184252b4f9"
        ],
        [
            "generalize (permutation_in _ a _ _ H); simpl in |- *; (intros H2; case H2; auto; clear H2; intros H2).",
            "VernacExtend",
            "4928283d0a4af11cdf4e9a9d23eddbdae4b73c97"
        ],
        [
            "generalize (permutation_in _ a0 _ _ (permutation_sym _ _ _ H)); simpl in |- *; (intros H3; case H3; auto; clear H3; intros H3).",
            "VernacExtend",
            "b88b3467b1d9e2edc9606463e3bc1d4ad987bb14"
        ],
        [
            "apply antisym.",
            "VernacExtend",
            "bad1ab242504b653b1f6f1187fa10e672d3c58d3"
        ],
        [
            "apply ordered_trans with (1 := H0); auto.",
            "VernacExtend",
            "5a8bd2ea217f46deabbbc31b12e777cacd767011"
        ],
        [
            "apply ordered_trans with (1 := H1); auto.",
            "VernacExtend",
            "05496a3ef9ca6b4e46d8a96923669f6ef97640a2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End ordered.",
            "VernacEndSegment",
            "b48f5f2af438cd35b87f9e2089d09c22856f813d"
        ],
        [
            "Hint Constructors ordered : core.",
            "VernacHints",
            "8c2ee7b45eb062c7ce3400d505a9bbdfe26a1d12"
        ],
        [
            "Arguments ordered [A].",
            "VernacArguments",
            "365ef59ed848e0eaf449d7516cc4a973d18f9602"
        ],
        [
            "Theorem ordered_map_inv : forall (A B : Type) (order : A -> A -> Prop) (g : B -> A) (l : list B), ordered (fun x y => order (g x) (g y)) l -> ordered order (map g l).",
            "VernacStartTheoremProof",
            "1e7aecc57771e559a250bcb913f7465d166129cf"
        ],
        [
            "intros A B order g l; elim l; simpl in |- *; auto.",
            "VernacExtend",
            "d40a13251ad8330fd2145ab39f7852f96cde29c2"
        ],
        [
            "intros a1 l1; case l1; simpl in |- *; auto.",
            "VernacExtend",
            "0dec9c14d6843a8bc5129a7d856ad15c2e7c96eb"
        ],
        [
            "intros b l0 H H0; inversion H0; auto.",
            "VernacExtend",
            "0d7a61c0acc4b97f45997fd06caf35e9b2dea588"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "ordered_inv_order",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros a b l H; inversion H; auto.",
                        "VernacExtend",
                        "fe649f513fd9e0e39aede7e504cbff574e598ce2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ordered_inv",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros a l H; inversion H; auto.",
                        "VernacExtend",
                        "9ce99578d992520a14154c97eee6c0929bfde714"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ordered_skip",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros a b l; case l; clear l; auto.",
                        "VernacExtend",
                        "541538a17e78a8923e1fc75d0aa01cbe5289fd1f"
                    ]
                },
                {
                    "command": [
                        "intros c l H; apply ordered_cons.",
                        "VernacExtend",
                        "f58c523ec6ff0da21bbcc5c6e83d2aeadaf74739"
                    ]
                },
                {
                    "command": [
                        "apply order_trans with (b := b); auto.",
                        "VernacExtend",
                        "7534f0ebc02e1ea2df9caa4739bf780940655d92"
                    ]
                },
                {
                    "command": [
                        "apply ordered_inv_order with (1 := H).",
                        "VernacExtend",
                        "23554e9fce6a77f8e3521109a883486d46c16a4b"
                    ]
                },
                {
                    "command": [
                        "apply ordered_inv_order with (1 := ordered_inv _ _ H).",
                        "VernacExtend",
                        "31e541f00ee5451071698bfedcb2858d3d71250c"
                    ]
                },
                {
                    "command": [
                        "apply ordered_inv with (1 := ordered_inv _ _ H).",
                        "VernacExtend",
                        "735deb56b7c2b45e9ad874db3cdb6f5b4d7f8c6c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ordered_trans",
            "line_nb": 23,
            "steps": [
                {
                    "command": [
                        "intros a b l; generalize a b; elim l; clear l a b.",
                        "VernacExtend",
                        "b9063524a496e4934de28067aa739c1fa33ca8c7"
                    ]
                },
                {
                    "command": [
                        "intros a b H H2; inversion H2.",
                        "VernacExtend",
                        "194ab0bb0fe790b71c62f14149761b25954994ea"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intros c l H a b H0 [H1| H1].",
                        "VernacExtend",
                        "21aeb61e7c2ab9c8b133f1e16a5741b4ad9c56b2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1; apply ordered_inv_order with (1 := H0).",
                        "VernacExtend",
                        "4095e9926386bbde814709eb93150e3376b91a03"
                    ]
                },
                {
                    "command": [
                        "apply order_trans with (b := c); auto.",
                        "VernacExtend",
                        "e4492ced9bd67b93c1935663e9d8b13d6ea90f3c"
                    ]
                },
                {
                    "command": [
                        "apply ordered_inv_order with (1 := H0).",
                        "VernacExtend",
                        "0c400e1b4f3fb012cefe5ff1cf3f1d23ecfde661"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "apply ordered_inv with (1 := H0).",
                        "VernacExtend",
                        "d45cbe3c00765773abd8b7c5f318809219ddf81f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ordered_trans_app",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros a b l1 l2; generalize a b; elim l1; simpl in |- *; clear l1 a b.",
                        "VernacExtend",
                        "490fc47eea30e408a1b0e8310a1136d2469f4b6f"
                    ]
                },
                {
                    "command": [
                        "intros a b H H1; case H1.",
                        "VernacExtend",
                        "365409c9cf876547282312cd25f8d4665de385b0"
                    ]
                },
                {
                    "command": [
                        "intros c l H a b H0 [H1| H1] H2.",
                        "VernacExtend",
                        "d0a8e9507d493dcab2def8313adeff202f22723f"
                    ]
                },
                {
                    "command": [
                        "rewrite <- H1; apply ordered_trans with (1 := H0); auto with datatypes.",
                        "VernacExtend",
                        "a647d583a3fc52615f05608b487e9a875f6f2fd3"
                    ]
                },
                {
                    "command": [
                        "apply H; auto.",
                        "VernacExtend",
                        "4fad0139824cf3bfe52c76bdec7336aa3652c5f4"
                    ]
                },
                {
                    "command": [
                        "apply ordered_inv with (1 := H0); auto.",
                        "VernacExtend",
                        "bda46234095307db1fca92625e757f7e81963da0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ordered_perm_antisym_eq",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "intros antisym l1; elim l1; clear l1; simpl in |- *; auto.",
                        "VernacExtend",
                        "cc94380e564ec7b4dba0507feda07dd1aedafbe2"
                    ]
                },
                {
                    "command": [
                        "intros l2 H1 H2 H3; apply sym_equal; apply permutation_nil_inv.",
                        "VernacExtend",
                        "e4a402c76c58e1514f521cf7de2d819ea2ed9125"
                    ]
                },
                {
                    "command": [
                        "apply permutation_sym; auto.",
                        "VernacExtend",
                        "00ac0f05aa5261d9ca08c5b94f567895ad7baa9d"
                    ]
                },
                {
                    "command": [
                        "intros a l1 Rec l2; case l2; simpl in |- *.",
                        "VernacExtend",
                        "de79faa2b9c8c205752489caafc7cd74ec2253d1"
                    ]
                },
                {
                    "command": [
                        "intros H; absurd (length (a :: l1) = length (A:=A) nil).",
                        "VernacExtend",
                        "1fe6d6c4f187b50ccc560c01cd6255f4ca13cae0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; red in |- *; intros; discriminate.",
                        "VernacExtend",
                        "3d9e3cad2127e705c546560dd2e3fde1f1f047e9"
                    ]
                },
                {
                    "command": [
                        "apply permutation_length; auto.",
                        "VernacExtend",
                        "db6efdac3b46be99ec618661eaea7cef832ed276"
                    ]
                },
                {
                    "command": [
                        "intros a0 l H H0 H1.",
                        "VernacExtend",
                        "573ed9b4d204a5350a2c6ea43219ee2d89837597"
                    ]
                },
                {
                    "command": [
                        "cut (a = a0).",
                        "VernacExtend",
                        "2a16e3458e74d7715f08d6b2f607d9976f9d9660"
                    ]
                },
                {
                    "command": [
                        "intros H3; apply f_equal2 with (f := cons (A:=A)); auto.",
                        "VernacExtend",
                        "784270dbd39ea6f0166611e0480662cea1e340f7"
                    ]
                },
                {
                    "command": [
                        "apply Rec; auto.",
                        "VernacExtend",
                        "9031ae321520376bb7de9c925d9b38269fd9dcc0"
                    ]
                },
                {
                    "command": [
                        "apply permutation_inv with (a := a); auto.",
                        "VernacExtend",
                        "f33d181c6f68e58c8719614f0adcbe584478e113"
                    ]
                },
                {
                    "command": [
                        "pattern a at 2 in |- *; rewrite H3; auto.",
                        "VernacExtend",
                        "5a2f6da75b4a2401ab04d9bc8160982e6dad7c19"
                    ]
                },
                {
                    "command": [
                        "apply ordered_inv with (1 := H0); auto.",
                        "VernacExtend",
                        "bda46234095307db1fca92625e757f7e81963da0"
                    ]
                },
                {
                    "command": [
                        "apply ordered_inv with (1 := H1); auto.",
                        "VernacExtend",
                        "2fd5afba77e6bcc2e510658b105078184252b4f9"
                    ]
                },
                {
                    "command": [
                        "generalize (permutation_in _ a _ _ H); simpl in |- *; (intros H2; case H2; auto; clear H2; intros H2).",
                        "VernacExtend",
                        "4928283d0a4af11cdf4e9a9d23eddbdae4b73c97"
                    ]
                },
                {
                    "command": [
                        "generalize (permutation_in _ a0 _ _ (permutation_sym _ _ _ H)); simpl in |- *; (intros H3; case H3; auto; clear H3; intros H3).",
                        "VernacExtend",
                        "b88b3467b1d9e2edc9606463e3bc1d4ad987bb14"
                    ]
                },
                {
                    "command": [
                        "apply antisym.",
                        "VernacExtend",
                        "bad1ab242504b653b1f6f1187fa10e672d3c58d3"
                    ]
                },
                {
                    "command": [
                        "apply ordered_trans with (1 := H0); auto.",
                        "VernacExtend",
                        "5a8bd2ea217f46deabbbc31b12e777cacd767011"
                    ]
                },
                {
                    "command": [
                        "apply ordered_trans with (1 := H1); auto.",
                        "VernacExtend",
                        "05496a3ef9ca6b4e46d8a96923669f6ef97640a2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ordered_map_inv",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intros A B order g l; elim l; simpl in |- *; auto.",
                        "VernacExtend",
                        "d40a13251ad8330fd2145ab39f7852f96cde29c2"
                    ]
                },
                {
                    "command": [
                        "intros a1 l1; case l1; simpl in |- *; auto.",
                        "VernacExtend",
                        "0dec9c14d6843a8bc5129a7d856ad15c2e7c96eb"
                    ]
                },
                {
                    "command": [
                        "intros b l0 H H0; inversion H0; auto.",
                        "VernacExtend",
                        "0d7a61c0acc4b97f45997fd06caf35e9b2dea588"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}