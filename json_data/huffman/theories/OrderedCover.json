{
    "filename": "theories/OrderedCover.v",
    "coq_project": "huffman",
    "vernac_cmds": [
        [
            "From Huffman Require Export Cover.",
            "VernacRequire",
            "8d06a822419adfa46b966ab2aaa1180597a720b0"
        ],
        [
            "Section OrderedCover.",
            "VernacBeginSection",
            "4437c31ca7f799a3ad88863769c061e06f370af4"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Inductive ordered_cover : list (btree A) -> btree A -> Prop := | ordered_cover_one : forall (t : btree A) (l : list (btree A)), ordered_cover (t :: nil) t | ordered_cover_node : forall (t1 t2 : btree A) (l1 l2 l3 : list (btree A)), ordered_cover l1 t1 -> ordered_cover l2 t2 -> ordered_cover (l1 ++ l2) (node t1 t2).",
            "VernacInductive",
            "7b9a6eef6fe3ffd50d18ee9b7cc987137c2d92f2"
        ],
        [
            "Hint Resolve ordered_cover_one ordered_cover_node : core.",
            "VernacHints",
            "251c9b854ebc0ff807a2f7e10cff14dfd84ab44d"
        ],
        [
            "Theorem ordered_cover_cover : forall (l : list (btree A)) (t : btree A), ordered_cover l t -> cover l t.",
            "VernacStartTheoremProof",
            "c9d8a28bed9b3aeaefd5fd05c0999710ea386ec9"
        ],
        [
            "intros l t H; elim H; auto.",
            "VernacExtend",
            "d1fbb3f9ef8aae36f13956edb7805a3c7dba4b7a"
        ],
        [
            "intros t1 t2 l1 l2 l3 H0 H1 H2 H3.",
            "VernacExtend",
            "aac6e93dfb83074880c41415538cce8cada9f256"
        ],
        [
            "apply cover_app; auto.",
            "VernacExtend",
            "a74bd912d034ff3910fcf715ca3e16c83676037f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cover_ordered_cover : forall (l1 : list (btree A)) (t : btree A), cover l1 t -> exists l2 : _, permutation l1 l2 /\\ ordered_cover l2 t.",
            "VernacStartTheoremProof",
            "7222b7d545822bd5f2d0839df47c7f0a2ba4f3a7"
        ],
        [
            "intros l1; elim l1 using list_length_ind.",
            "VernacExtend",
            "abc62ee806b24ee989e279f564186b2eb85468e7"
        ],
        [
            "intros l0 H t; case t.",
            "VernacExtend",
            "bdf81e64b3f7dc6ccf8486d5b3571708aa98cbc3"
        ],
        [
            "intros a H1; rewrite cover_inv_leaf with (1 := H1).",
            "VernacExtend",
            "37da696e5aa3e1d3a6fbd0047e4352ec8fad9cf3"
        ],
        [
            "exists (leaf a :: nil); auto.",
            "VernacExtend",
            "57afc1da23cced014590c734ab284f29958a86c2"
        ],
        [
            "intros t1 t2 H1; case cover_inv_app with (1 := H1).",
            "VernacExtend",
            "a7b9d486701cf750b721ca8c70b226e8967a5380"
        ],
        [
            "intros H2; exists l0; split; auto; rewrite H2; auto.",
            "VernacExtend",
            "68df7e65412260fe4127ec831fe32ddfb75769bc"
        ],
        [
            "intros (l2, (l3, ((HH1, HH2), HH3))).",
            "VernacExtend",
            "9df772184662cbaecc0b4a6ec3442c666103402d"
        ],
        [
            "case H with (2 := HH1); auto.",
            "VernacExtend",
            "a8007c1973bd18d3e19f3461caddab19965bb4f1"
        ],
        [
            "rewrite permutation_length with (1 := HH3).",
            "VernacExtend",
            "ceb2fbf7d4a835b74cbfc81b5d0dad75c012ddfc"
        ],
        [
            "generalize HH2; rewrite length_app; case l3; simpl in |- *; auto with arith.",
            "VernacExtend",
            "ada963770ef4df4a2c040ed62565c00ea0f201ca"
        ],
        [
            "intros HH4; case cover_not_nil with (1 := HH4); auto.",
            "VernacExtend",
            "4bc4858e9b2f2cb1402d64286f1203b258a15099"
        ],
        [
            "intros; rewrite plus_comm; simpl in |- *; auto with arith.",
            "VernacExtend",
            "344ff46449efbf18192f2975b38cb0552665c874"
        ],
        [
            "intros l4 (HP1, HP2).",
            "VernacExtend",
            "9eb81e5f94e8955a4d8b21a2c89c5c00b29bd542"
        ],
        [
            "case H with (2 := HH2); auto.",
            "VernacExtend",
            "a5aad211e8a9db0de9e467e3be66e9bf5fd1b9e9"
        ],
        [
            "rewrite permutation_length with (1 := HH3).",
            "VernacExtend",
            "ceb2fbf7d4a835b74cbfc81b5d0dad75c012ddfc"
        ],
        [
            "generalize HH1; rewrite length_app; case l2; simpl in |- *; auto with arith.",
            "VernacExtend",
            "edbe4d6cd337b582589fa299f0fa3a66258f0125"
        ],
        [
            "intros HH4; case cover_not_nil with (1 := HH4); auto.",
            "VernacExtend",
            "4bc4858e9b2f2cb1402d64286f1203b258a15099"
        ],
        [
            "intros l5 (HP3, HP4).",
            "VernacExtend",
            "6a9b60e2a87cbc5b206274e2cece8978c0994d7c"
        ],
        [
            "exists (l4 ++ l5); split; auto.",
            "VernacExtend",
            "20e9e836438a5952652347711e7a971e2651805d"
        ],
        [
            "apply permutation_trans with (1 := HH3); auto.",
            "VernacExtend",
            "aa20ec3ced746e9ea7c0cba193e4fc01743736c7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem ulist_ordered_cover : forall l1 l2 t, ordered_cover l1 t -> ulist l2 -> l1 = map (fun x : A => leaf x) l2 -> all_leaves t = l2.",
            "VernacStartTheoremProof",
            "78fdfde7cce0109666295f3b03c3804e22edef89"
        ],
        [
            "intros l1 l2 t H; generalize l2; elim H; clear H l1 l2 t; simpl in |- *; auto.",
            "VernacExtend",
            "052060b486cd862217f8f6d72a4bc3dd5df35a38"
        ],
        [
            "intros t l l2; case l2; simpl in |- *; auto.",
            "VernacExtend",
            "39e7776a762a83c6cb46c0b8c2db46da39ad3e34"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "intros a0 l0 H H0; injection H0; intros H1 H2; rewrite H2; auto.",
            "VernacExtend",
            "9c065414642f93be0b6c0c22df66964bb76da0a5"
        ],
        [
            "generalize H1; case l0; simpl in |- *; auto.",
            "VernacExtend",
            "d9dd5e5d0b819a83e4298ce83f05e3a30e8eb6d1"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "intros t1 t2 l1 l2 l3 H H0 H1 H2 l0 H3 H4.",
            "VernacExtend",
            "31ae3fb2b3baa554a3fb439425ca01e48d46321c"
        ],
        [
            "cut ((exists l3 : list A, l1 = map (fun x : A => leaf x) l3) /\\ (exists l4 : list A, l2 = map (fun x : A => leaf x) l4)).",
            "VernacExtend",
            "f437f027fdbd4694376d39560a2835afe3684cd4"
        ],
        [
            "intros ((l4, HH1), (l5, HH2)).",
            "VernacExtend",
            "f2fe3c397b87884c0a604c176fae0443b40de6ab"
        ],
        [
            "cut (l0 = l4 ++ l5); [ intros HH3 | idtac ].",
            "VernacExtend",
            "53270895a61feb7fe33d99f5d15f3d8d79caed9e"
        ],
        [
            "rewrite HH3.",
            "VernacExtend",
            "a52a001f6afddae6e2ef7a0b7938f609ddef31ff"
        ],
        [
            "apply f_equal2 with (f := app (A:=A)).",
            "VernacExtend",
            "de526dcc9460ac82d86d9abf94466b66e3e4e69f"
        ],
        [
            "apply H0; auto.",
            "VernacExtend",
            "e167f871dfeec1cef76aaf201c54c081f29f730b"
        ],
        [
            "apply ulist_app_inv_l with (l2 := l5); rewrite <- HH3; auto.",
            "VernacExtend",
            "a429427e9963b4445e4c6a7a98dd54bdbd4b2990"
        ],
        [
            "apply H2; auto.",
            "VernacExtend",
            "30acbf5144f9dcdba4f738b81d251d83daba847e"
        ],
        [
            "apply ulist_app_inv_r with (l1 := l4); rewrite <- HH3; auto.",
            "VernacExtend",
            "265a9116167a94c1ff120b6d102f8361fbb51256"
        ],
        [
            "rewrite HH2 in H4; rewrite HH1 in H4.",
            "VernacExtend",
            "f3649cfb16f82888a32793296ceb16f17c278733"
        ],
        [
            "rewrite <- map_app in H4.",
            "VernacExtend",
            "97146f144199bc3c60f30dd6741af50d9f844376"
        ],
        [
            "generalize H4; generalize (l4 ++ l5); elim l0; simpl in |- *; auto.",
            "VernacExtend",
            "8fb8f4bf451cf7d01418b2fdc468c834ca30eec1"
        ],
        [
            "intros l; case l; simpl in |- *; auto.",
            "VernacExtend",
            "1cf0a07019c5b62e38c038f915fe4ca0761fa170"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "intros a0 l H5 l6; case l6; simpl in |- *; auto.",
            "VernacExtend",
            "7d31d0d6591536e7b07a580f84eac278b76548fc"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "intros a1 l7 H6; apply f_equal2 with (f := cons (A:=A)); auto.",
            "VernacExtend",
            "f4e2e294b18c01641ffffd1152a6694e02828429"
        ],
        [
            "injection H6; auto.",
            "VernacExtend",
            "5db63cf59c1b4eedebf9ad36154dadc8451ffb02"
        ],
        [
            "injection H6; auto.",
            "VernacExtend",
            "5db63cf59c1b4eedebf9ad36154dadc8451ffb02"
        ],
        [
            "generalize H4; generalize l2 l0; elim l1; simpl in |- *; auto.",
            "VernacExtend",
            "dbd03c2f0081f61479b9e89bbbfa112f699fa45f"
        ],
        [
            "intros l4 l5 H5; split; [ exists (nil (A:=A)) | exists l5 ]; auto.",
            "VernacExtend",
            "178ed0fd26a5ac9baee32c7c98667424351fa72a"
        ],
        [
            "intros a0 l H5 l4 l5; case l5; simpl in |- *; auto.",
            "VernacExtend",
            "7378fc6327fdb4163876bac126c295391cba6bd4"
        ],
        [
            "intros; discriminate.",
            "VernacExtend",
            "1ec997c70ceedc981f8865c1573c00554b73dfd4"
        ],
        [
            "intros a1 l6 H6; case (H5 l4 l6); auto.",
            "VernacExtend",
            "0838466d0c8a157b3dd6e11d3513cdb6434ed0ff"
        ],
        [
            "injection H6; auto.",
            "VernacExtend",
            "5db63cf59c1b4eedebf9ad36154dadc8451ffb02"
        ],
        [
            "intros (l7, HH5) (l8, HH6); split; [ exists (a1 :: l7) | exists l8 ]; simpl in |- *; auto.",
            "VernacExtend",
            "34f9337ef6e0c0ab93ae7e08d042d5f1b2a6abb2"
        ],
        [
            "apply f_equal2 with (f := cons (A:=btree A)); auto.",
            "VernacExtend",
            "ad3c1820dc34e277793f5890f215c455d92bc045"
        ],
        [
            "injection H6; auto.",
            "VernacExtend",
            "5db63cf59c1b4eedebf9ad36154dadc8451ffb02"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End OrderedCover.",
            "VernacEndSegment",
            "75f9bcdcf58cdb8ed3f5cbc2fcbbf12a4138276c"
        ],
        [
            "Arguments ordered_cover [A].",
            "VernacArguments",
            "ef0608ad80c9ffa8d604d20575bad98cfca3f09c"
        ],
        [
            "Hint Resolve ordered_cover_one ordered_cover_node : core.",
            "VernacHints",
            "251c9b854ebc0ff807a2f7e10cff14dfd84ab44d"
        ]
    ],
    "proofs": [
        {
            "name": "ordered_cover_cover",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intros l t H; elim H; auto.",
                        "VernacExtend",
                        "d1fbb3f9ef8aae36f13956edb7805a3c7dba4b7a"
                    ]
                },
                {
                    "command": [
                        "intros t1 t2 l1 l2 l3 H0 H1 H2 H3.",
                        "VernacExtend",
                        "aac6e93dfb83074880c41415538cce8cada9f256"
                    ]
                },
                {
                    "command": [
                        "apply cover_app; auto.",
                        "VernacExtend",
                        "a74bd912d034ff3910fcf715ca3e16c83676037f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cover_ordered_cover",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "intros l1; elim l1 using list_length_ind.",
                        "VernacExtend",
                        "abc62ee806b24ee989e279f564186b2eb85468e7"
                    ]
                },
                {
                    "command": [
                        "intros l0 H t; case t.",
                        "VernacExtend",
                        "bdf81e64b3f7dc6ccf8486d5b3571708aa98cbc3"
                    ]
                },
                {
                    "command": [
                        "intros a H1; rewrite cover_inv_leaf with (1 := H1).",
                        "VernacExtend",
                        "37da696e5aa3e1d3a6fbd0047e4352ec8fad9cf3"
                    ]
                },
                {
                    "command": [
                        "exists (leaf a :: nil); auto.",
                        "VernacExtend",
                        "57afc1da23cced014590c734ab284f29958a86c2"
                    ]
                },
                {
                    "command": [
                        "intros t1 t2 H1; case cover_inv_app with (1 := H1).",
                        "VernacExtend",
                        "a7b9d486701cf750b721ca8c70b226e8967a5380"
                    ]
                },
                {
                    "command": [
                        "intros H2; exists l0; split; auto; rewrite H2; auto.",
                        "VernacExtend",
                        "68df7e65412260fe4127ec831fe32ddfb75769bc"
                    ]
                },
                {
                    "command": [
                        "intros (l2, (l3, ((HH1, HH2), HH3))).",
                        "VernacExtend",
                        "9df772184662cbaecc0b4a6ec3442c666103402d"
                    ]
                },
                {
                    "command": [
                        "case H with (2 := HH1); auto.",
                        "VernacExtend",
                        "a8007c1973bd18d3e19f3461caddab19965bb4f1"
                    ]
                },
                {
                    "command": [
                        "rewrite permutation_length with (1 := HH3).",
                        "VernacExtend",
                        "ceb2fbf7d4a835b74cbfc81b5d0dad75c012ddfc"
                    ]
                },
                {
                    "command": [
                        "generalize HH2; rewrite length_app; case l3; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "ada963770ef4df4a2c040ed62565c00ea0f201ca"
                    ]
                },
                {
                    "command": [
                        "intros HH4; case cover_not_nil with (1 := HH4); auto.",
                        "VernacExtend",
                        "4bc4858e9b2f2cb1402d64286f1203b258a15099"
                    ]
                },
                {
                    "command": [
                        "intros; rewrite plus_comm; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "344ff46449efbf18192f2975b38cb0552665c874"
                    ]
                },
                {
                    "command": [
                        "intros l4 (HP1, HP2).",
                        "VernacExtend",
                        "9eb81e5f94e8955a4d8b21a2c89c5c00b29bd542"
                    ]
                },
                {
                    "command": [
                        "case H with (2 := HH2); auto.",
                        "VernacExtend",
                        "a5aad211e8a9db0de9e467e3be66e9bf5fd1b9e9"
                    ]
                },
                {
                    "command": [
                        "rewrite permutation_length with (1 := HH3).",
                        "VernacExtend",
                        "ceb2fbf7d4a835b74cbfc81b5d0dad75c012ddfc"
                    ]
                },
                {
                    "command": [
                        "generalize HH1; rewrite length_app; case l2; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "edbe4d6cd337b582589fa299f0fa3a66258f0125"
                    ]
                },
                {
                    "command": [
                        "intros HH4; case cover_not_nil with (1 := HH4); auto.",
                        "VernacExtend",
                        "4bc4858e9b2f2cb1402d64286f1203b258a15099"
                    ]
                },
                {
                    "command": [
                        "intros l5 (HP3, HP4).",
                        "VernacExtend",
                        "6a9b60e2a87cbc5b206274e2cece8978c0994d7c"
                    ]
                },
                {
                    "command": [
                        "exists (l4 ++ l5); split; auto.",
                        "VernacExtend",
                        "20e9e836438a5952652347711e7a971e2651805d"
                    ]
                },
                {
                    "command": [
                        "apply permutation_trans with (1 := HH3); auto.",
                        "VernacExtend",
                        "aa20ec3ced746e9ea7c0cba193e4fc01743736c7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ulist_ordered_cover",
            "line_nb": 32,
            "steps": [
                {
                    "command": [
                        "intros l1 l2 t H; generalize l2; elim H; clear H l1 l2 t; simpl in |- *; auto.",
                        "VernacExtend",
                        "052060b486cd862217f8f6d72a4bc3dd5df35a38"
                    ]
                },
                {
                    "command": [
                        "intros t l l2; case l2; simpl in |- *; auto.",
                        "VernacExtend",
                        "39e7776a762a83c6cb46c0b8c2db46da39ad3e34"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "intros a0 l0 H H0; injection H0; intros H1 H2; rewrite H2; auto.",
                        "VernacExtend",
                        "9c065414642f93be0b6c0c22df66964bb76da0a5"
                    ]
                },
                {
                    "command": [
                        "generalize H1; case l0; simpl in |- *; auto.",
                        "VernacExtend",
                        "d9dd5e5d0b819a83e4298ce83f05e3a30e8eb6d1"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "intros t1 t2 l1 l2 l3 H H0 H1 H2 l0 H3 H4.",
                        "VernacExtend",
                        "31ae3fb2b3baa554a3fb439425ca01e48d46321c"
                    ]
                },
                {
                    "command": [
                        "cut ((exists l3 : list A, l1 = map (fun x : A => leaf x) l3) /\\ (exists l4 : list A, l2 = map (fun x : A => leaf x) l4)).",
                        "VernacExtend",
                        "f437f027fdbd4694376d39560a2835afe3684cd4"
                    ]
                },
                {
                    "command": [
                        "intros ((l4, HH1), (l5, HH2)).",
                        "VernacExtend",
                        "f2fe3c397b87884c0a604c176fae0443b40de6ab"
                    ]
                },
                {
                    "command": [
                        "cut (l0 = l4 ++ l5); [ intros HH3 | idtac ].",
                        "VernacExtend",
                        "53270895a61feb7fe33d99f5d15f3d8d79caed9e"
                    ]
                },
                {
                    "command": [
                        "rewrite HH3.",
                        "VernacExtend",
                        "a52a001f6afddae6e2ef7a0b7938f609ddef31ff"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := app (A:=A)).",
                        "VernacExtend",
                        "de526dcc9460ac82d86d9abf94466b66e3e4e69f"
                    ]
                },
                {
                    "command": [
                        "apply H0; auto.",
                        "VernacExtend",
                        "e167f871dfeec1cef76aaf201c54c081f29f730b"
                    ]
                },
                {
                    "command": [
                        "apply ulist_app_inv_l with (l2 := l5); rewrite <- HH3; auto.",
                        "VernacExtend",
                        "a429427e9963b4445e4c6a7a98dd54bdbd4b2990"
                    ]
                },
                {
                    "command": [
                        "apply H2; auto.",
                        "VernacExtend",
                        "30acbf5144f9dcdba4f738b81d251d83daba847e"
                    ]
                },
                {
                    "command": [
                        "apply ulist_app_inv_r with (l1 := l4); rewrite <- HH3; auto.",
                        "VernacExtend",
                        "265a9116167a94c1ff120b6d102f8361fbb51256"
                    ]
                },
                {
                    "command": [
                        "rewrite HH2 in H4; rewrite HH1 in H4.",
                        "VernacExtend",
                        "f3649cfb16f82888a32793296ceb16f17c278733"
                    ]
                },
                {
                    "command": [
                        "rewrite <- map_app in H4.",
                        "VernacExtend",
                        "97146f144199bc3c60f30dd6741af50d9f844376"
                    ]
                },
                {
                    "command": [
                        "generalize H4; generalize (l4 ++ l5); elim l0; simpl in |- *; auto.",
                        "VernacExtend",
                        "8fb8f4bf451cf7d01418b2fdc468c834ca30eec1"
                    ]
                },
                {
                    "command": [
                        "intros l; case l; simpl in |- *; auto.",
                        "VernacExtend",
                        "1cf0a07019c5b62e38c038f915fe4ca0761fa170"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "intros a0 l H5 l6; case l6; simpl in |- *; auto.",
                        "VernacExtend",
                        "7d31d0d6591536e7b07a580f84eac278b76548fc"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "intros a1 l7 H6; apply f_equal2 with (f := cons (A:=A)); auto.",
                        "VernacExtend",
                        "f4e2e294b18c01641ffffd1152a6694e02828429"
                    ]
                },
                {
                    "command": [
                        "injection H6; auto.",
                        "VernacExtend",
                        "5db63cf59c1b4eedebf9ad36154dadc8451ffb02"
                    ]
                },
                {
                    "command": [
                        "injection H6; auto.",
                        "VernacExtend",
                        "5db63cf59c1b4eedebf9ad36154dadc8451ffb02"
                    ]
                },
                {
                    "command": [
                        "generalize H4; generalize l2 l0; elim l1; simpl in |- *; auto.",
                        "VernacExtend",
                        "dbd03c2f0081f61479b9e89bbbfa112f699fa45f"
                    ]
                },
                {
                    "command": [
                        "intros l4 l5 H5; split; [ exists (nil (A:=A)) | exists l5 ]; auto.",
                        "VernacExtend",
                        "178ed0fd26a5ac9baee32c7c98667424351fa72a"
                    ]
                },
                {
                    "command": [
                        "intros a0 l H5 l4 l5; case l5; simpl in |- *; auto.",
                        "VernacExtend",
                        "7378fc6327fdb4163876bac126c295391cba6bd4"
                    ]
                },
                {
                    "command": [
                        "intros; discriminate.",
                        "VernacExtend",
                        "1ec997c70ceedc981f8865c1573c00554b73dfd4"
                    ]
                },
                {
                    "command": [
                        "intros a1 l6 H6; case (H5 l4 l6); auto.",
                        "VernacExtend",
                        "0838466d0c8a157b3dd6e11d3513cdb6434ed0ff"
                    ]
                },
                {
                    "command": [
                        "injection H6; auto.",
                        "VernacExtend",
                        "5db63cf59c1b4eedebf9ad36154dadc8451ffb02"
                    ]
                },
                {
                    "command": [
                        "intros (l7, HH5) (l8, HH6); split; [ exists (a1 :: l7) | exists l8 ]; simpl in |- *; auto.",
                        "VernacExtend",
                        "34f9337ef6e0c0ab93ae7e08d042d5f1b2a6abb2"
                    ]
                },
                {
                    "command": [
                        "apply f_equal2 with (f := cons (A:=btree A)); auto.",
                        "VernacExtend",
                        "ad3c1820dc34e277793f5890f215c455d92bc045"
                    ]
                },
                {
                    "command": [
                        "injection H6; auto.",
                        "VernacExtend",
                        "5db63cf59c1b4eedebf9ad36154dadc8451ffb02"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}