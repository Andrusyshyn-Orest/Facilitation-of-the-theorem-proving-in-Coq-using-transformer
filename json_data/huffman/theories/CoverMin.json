{
    "filename": "theories/CoverMin.v",
    "coq_project": "huffman",
    "vernac_cmds": [
        [
            "From Huffman Require Export Cover.",
            "VernacRequire",
            "8d06a822419adfa46b966ab2aaa1180597a720b0"
        ],
        [
            "From Huffman Require Export WeightTree.",
            "VernacRequire",
            "eb4b440017fe2b87730eb4b43044934cb09064a4"
        ],
        [
            "Section CoverMin.",
            "VernacBeginSection",
            "7d2328c866dcc416cdce865aa9c6f0d8db6d7678"
        ],
        [
            "Variable A : Type.",
            "VernacAssumption",
            "8c1a433b6dc10de37f30039d70ed7113b3dab0e0"
        ],
        [
            "Variable f : A -> nat.",
            "VernacAssumption",
            "9f23c668cb9b44da0a7007cf5e6e948fbeb3f99a"
        ],
        [
            "Definition cover_min (l : list (btree A)) (t1 : btree A) : Prop := cover l t1 /\\ (forall t2 : btree A, cover l t2 -> weight_tree f t1 <= weight_tree f t2).",
            "VernacDefinition",
            "f6eadfba2dd5bdf6d44b18ac3cfc7c9701f31404"
        ],
        [
            "Theorem cover_min_one : forall t : btree A, cover_min (t :: nil) t.",
            "VernacStartTheoremProof",
            "beeb534ecb14893e27301206d8163db8b8cec517"
        ],
        [
            "intros t; split; auto.",
            "VernacExtend",
            "b782924243393aa386c2f7a324b5cf0456d77760"
        ],
        [
            "intros t2 H; inversion H; auto.",
            "VernacExtend",
            "508c29d0f7cb45b077a5f09d4db19c3c2039df37"
        ],
        [
            "generalize (permutation_length _ _ _ H0); simpl in |- *; intros; discriminate.",
            "VernacExtend",
            "5fe15a6f94470e27ad6648a55eefbed88bb75934"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve cover_min_one : core.",
            "VernacHints",
            "f639af19ca67b17c12272a105965c6c8daac8859"
        ],
        [
            "Theorem cover_min_permutation : forall (t : btree A) (l1 l2 : list (btree A)), cover_min l1 t -> permutation l1 l2 -> cover_min l2 t.",
            "VernacStartTheoremProof",
            "6e23bfa9bd9ba1119ed296a21db21deeb3ff35f7"
        ],
        [
            "intros t l1 l2 H H0; split.",
            "VernacExtend",
            "a6d694fb42343a5b16ee4b53c8ca52de17dd3663"
        ],
        [
            "apply cover_permutation with (2 := H0); auto.",
            "VernacExtend",
            "d9f2fd4ec6a58e6337e11a3148302dc551a1e687"
        ],
        [
            "inversion H; auto.",
            "VernacExtend",
            "ca70ce9532e796fd752cb12d4d270e557a16bc8a"
        ],
        [
            "intros t2 H1.",
            "VernacExtend",
            "5cc951f24f458a2ebac64ca1f9f9416bd0e6d384"
        ],
        [
            "assert (cover l1 t2).",
            "VernacExtend",
            "cdb5c4765a92a8f518e0438f7041d188d7c7bc3e"
        ],
        [
            "inversion H; auto.",
            "VernacExtend",
            "ca70ce9532e796fd752cb12d4d270e557a16bc8a"
        ],
        [
            "apply cover_permutation with (2 := permutation_sym _ _ _ H0); auto.",
            "VernacExtend",
            "4fd26f54f4783fe512cad4586a15016ac4c06039"
        ],
        [
            "inversion H; auto.",
            "VernacExtend",
            "ca70ce9532e796fd752cb12d4d270e557a16bc8a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem cover_min_ex : forall l : list (btree A), l <> nil -> exists t : btree A, cover_min l t.",
            "VernacStartTheoremProof",
            "d7ad80c0fb2b9ada658eb1f32c8fe1ded2bc7d76"
        ],
        [
            "intros l H; generalize (find_min_correct (btree A) (weight_tree f) (all_cover _ l)).",
            "VernacExtend",
            "69124e049b9c5f7dd1da6984be6b5f36c9512d95"
        ],
        [
            "case (find_min (weight_tree f) (all_cover _ l)).",
            "VernacExtend",
            "0c183648086d3388b31f4bc5f96895aa4892f1a0"
        ],
        [
            "intros p; case p.",
            "VernacExtend",
            "3fe2912e7637b448c6946cd153d26a7b946522ba"
        ],
        [
            "intros n b ((H1, H2), H3); exists b; auto.",
            "VernacExtend",
            "aeb1c450563fedd05ad41f89db9407d7ba1c15c0"
        ],
        [
            "split; auto.",
            "VernacExtend",
            "fcd44a714bd12fa54b1c7746996e44dbac16df06"
        ],
        [
            "apply all_cover_cover; auto.",
            "VernacExtend",
            "26dec86ad646098e8c97de819bc01dea2a7ada86"
        ],
        [
            "intros t2 H4; apply H3.",
            "VernacExtend",
            "e85c2a9e93f8f9927309b668b6f06d6bbf6a95e6"
        ],
        [
            "apply cover_all_cover; auto.",
            "VernacExtend",
            "0b1934bd2e8cb02934b610d1df7291022a80c87a"
        ],
        [
            "intros H0.",
            "VernacExtend",
            "7be07b7f0ac418af4d02cddf70af6f27f8714110"
        ],
        [
            "case (one_cover_ex _ l); auto.",
            "VernacExtend",
            "da7f9c0466aaffac1047e75521b7385edd425b2b"
        ],
        [
            "intros x H1; absurd (In x (all_cover A l)).",
            "VernacExtend",
            "6565ba645da51e00f9495d12468fb1f43604a3b1"
        ],
        [
            "rewrite H0; simpl in |- *; red in |- *; intros H2; case H2.",
            "VernacExtend",
            "f505c34c46496a429288499930ae9895a285f833"
        ],
        [
            "apply cover_all_cover; auto.",
            "VernacExtend",
            "0b1934bd2e8cb02934b610d1df7291022a80c87a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End CoverMin.",
            "VernacEndSegment",
            "84869b34bb1e9f36680c82db5477c41be7d69e67"
        ],
        [
            "Hint Resolve cover_min_one : core.",
            "VernacHints",
            "f639af19ca67b17c12272a105965c6c8daac8859"
        ]
    ],
    "proofs": [
        {
            "name": "cover_min_one",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intros t; split; auto.",
                        "VernacExtend",
                        "b782924243393aa386c2f7a324b5cf0456d77760"
                    ]
                },
                {
                    "command": [
                        "intros t2 H; inversion H; auto.",
                        "VernacExtend",
                        "508c29d0f7cb45b077a5f09d4db19c3c2039df37"
                    ]
                },
                {
                    "command": [
                        "generalize (permutation_length _ _ _ H0); simpl in |- *; intros; discriminate.",
                        "VernacExtend",
                        "5fe15a6f94470e27ad6648a55eefbed88bb75934"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cover_min_permutation",
            "line_nb": 12,
            "steps": [
                {
                    "command": [
                        "intros t l1 l2 H H0; split.",
                        "VernacExtend",
                        "a6d694fb42343a5b16ee4b53c8ca52de17dd3663"
                    ]
                },
                {
                    "command": [
                        "apply cover_permutation with (2 := H0); auto.",
                        "VernacExtend",
                        "d9f2fd4ec6a58e6337e11a3148302dc551a1e687"
                    ]
                },
                {
                    "command": [
                        "inversion H; auto.",
                        "VernacExtend",
                        "ca70ce9532e796fd752cb12d4d270e557a16bc8a"
                    ]
                },
                {
                    "command": [
                        "intros t2 H1.",
                        "VernacExtend",
                        "5cc951f24f458a2ebac64ca1f9f9416bd0e6d384"
                    ]
                },
                {
                    "command": [
                        "assert (cover l1 t2).",
                        "VernacExtend",
                        "cdb5c4765a92a8f518e0438f7041d188d7c7bc3e"
                    ]
                },
                {
                    "command": [
                        "inversion H; auto.",
                        "VernacExtend",
                        "ca70ce9532e796fd752cb12d4d270e557a16bc8a"
                    ]
                },
                {
                    "command": [
                        "apply cover_permutation with (2 := permutation_sym _ _ _ H0); auto.",
                        "VernacExtend",
                        "4fd26f54f4783fe512cad4586a15016ac4c06039"
                    ]
                },
                {
                    "command": [
                        "inversion H; auto.",
                        "VernacExtend",
                        "ca70ce9532e796fd752cb12d4d270e557a16bc8a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "cover_min_ex",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "intros l H; generalize (find_min_correct (btree A) (weight_tree f) (all_cover _ l)).",
                        "VernacExtend",
                        "69124e049b9c5f7dd1da6984be6b5f36c9512d95"
                    ]
                },
                {
                    "command": [
                        "case (find_min (weight_tree f) (all_cover _ l)).",
                        "VernacExtend",
                        "0c183648086d3388b31f4bc5f96895aa4892f1a0"
                    ]
                },
                {
                    "command": [
                        "intros p; case p.",
                        "VernacExtend",
                        "3fe2912e7637b448c6946cd153d26a7b946522ba"
                    ]
                },
                {
                    "command": [
                        "intros n b ((H1, H2), H3); exists b; auto.",
                        "VernacExtend",
                        "aeb1c450563fedd05ad41f89db9407d7ba1c15c0"
                    ]
                },
                {
                    "command": [
                        "split; auto.",
                        "VernacExtend",
                        "fcd44a714bd12fa54b1c7746996e44dbac16df06"
                    ]
                },
                {
                    "command": [
                        "apply all_cover_cover; auto.",
                        "VernacExtend",
                        "26dec86ad646098e8c97de819bc01dea2a7ada86"
                    ]
                },
                {
                    "command": [
                        "intros t2 H4; apply H3.",
                        "VernacExtend",
                        "e85c2a9e93f8f9927309b668b6f06d6bbf6a95e6"
                    ]
                },
                {
                    "command": [
                        "apply cover_all_cover; auto.",
                        "VernacExtend",
                        "0b1934bd2e8cb02934b610d1df7291022a80c87a"
                    ]
                },
                {
                    "command": [
                        "intros H0.",
                        "VernacExtend",
                        "7be07b7f0ac418af4d02cddf70af6f27f8714110"
                    ]
                },
                {
                    "command": [
                        "case (one_cover_ex _ l); auto.",
                        "VernacExtend",
                        "da7f9c0466aaffac1047e75521b7385edd425b2b"
                    ]
                },
                {
                    "command": [
                        "intros x H1; absurd (In x (all_cover A l)).",
                        "VernacExtend",
                        "6565ba645da51e00f9495d12468fb1f43604a3b1"
                    ]
                },
                {
                    "command": [
                        "rewrite H0; simpl in |- *; red in |- *; intros H2; case H2.",
                        "VernacExtend",
                        "f505c34c46496a429288499930ae9895a285f833"
                    ]
                },
                {
                    "command": [
                        "apply cover_all_cover; auto.",
                        "VernacExtend",
                        "0b1934bd2e8cb02934b610d1df7291022a80c87a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}