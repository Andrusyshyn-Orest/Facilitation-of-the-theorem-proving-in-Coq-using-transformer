{
    "filename": "Factorization/Factorization_Synth.v",
    "coq_project": "hardware",
    "vernac_cmds": [
        [
            "Require Export Factorization.",
            "VernacRequire",
            "ef8a9c8cacff897464095611ce647edabba064bf"
        ],
        [
            "Section Factorization_for_Synthesis.",
            "VernacBeginSection",
            "93c4bbd7924a7f78293a11d0c5ce6aa8daff83fc"
        ],
        [
            "Variable A : Set.",
            "VernacAssumption",
            "913b2bc4093d15ed267c28d55b4536b83f6168df"
        ],
        [
            "Variable BASE : BT.",
            "VernacAssumption",
            "03cb3e9f0105a56656748c99c5b73e671527148e"
        ],
        [
            "Let b := base BASE.",
            "VernacDefinition",
            "c88f84d86bd02ac5b03419e61b1bd012598b1819"
        ],
        [
            "Let Num := num BASE.",
            "VernacDefinition",
            "1d3c4de11c893e35b38f8c91916a69c95a60d30e"
        ],
        [
            "Let Digit := digit BASE.",
            "VernacDefinition",
            "67d36f2d43210d9566ec9c1d11cfbbeb321af1f8"
        ],
        [
            "Let Val_bound := val_bound BASE.",
            "VernacDefinition",
            "b228b2b6452cde3c4517cc3c75f2eb19f7faeda2"
        ],
        [
            "Definition Tl := tl Digit.",
            "VernacDefinition",
            "fd307b42acf4092d4f2bb246b22a1fda52939f8d"
        ],
        [
            "Variable FR : forall n : nat, A -> inf n -> inf n -> A.",
            "VernacAssumption",
            "6faf28a920348190a11f000db90ae40055d603d2"
        ],
        [
            "Let R (n : nat) (a : A) (x y : inf n) (a' : A) : Prop := a' = FR n a x y.",
            "VernacDefinition",
            "cc3df6e92dd4821cd8979b4b1a4cfd62cde97c36"
        ],
        [
            "Notation Factorizable := (factorizable _) (only parsing).",
            "VernacSyntacticDefinition",
            "a59dad1ff671f874113c96c269e3c56442892d9b"
        ],
        [
            "Notation Proper := (proper _) (only parsing).",
            "VernacSyntacticDefinition",
            "8ab500a4cd9e59f20d01c46df0c89ef9d09e2288"
        ],
        [
            "Theorem factorization_for_synthesis : factorizable _ R -> proper _ BASE R -> forall (n : nat) (X Y : Num n) (a : A), {a' : A | R (exp b n) a (Val_bound n X) (Val_bound n Y) a'}.",
            "VernacStartTheoremProof",
            "bb3860ea31edf8635419bc00d7d9ff2840e1642e"
        ],
        [
            "intros F P.",
            "VernacExtend",
            "1130c0baa3c84ce747718e98dbbd3e72f2933eac"
        ],
        [
            "simple induction n.",
            "VernacExtend",
            "55f6dddaea9189658ce497de54569ba3016f1fd5"
        ],
        [
            "intros X Y a.",
            "VernacExtend",
            "a9191f77ddc7d7e7a1db59693e006b541382c732"
        ],
        [
            "exists a.",
            "VernacExtend",
            "59cc5697e7369be65591d2d5e6ad6fd701682809"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "unfold R in |- *; unfold Val_bound in |- *; apply prop_Rel.",
            "VernacExtend",
            "fee20647626d20f97161b0c9cc840399654fa01f"
        ],
        [
            "try trivial.",
            "VernacExtend",
            "ff637401febb7c218c1122f6450e0aad20b51f45"
        ],
        [
            "clear n; intros n H_rec X Y a.",
            "VernacExtend",
            "e51b51dc6103d2419f4a5a73127f51e872df45d7"
        ],
        [
            "elim (H_rec (Tl (S n) X) (Tl (S n) Y) (FR b a (Hd Digit n X) (Hd Digit n Y))).",
            "VernacExtend",
            "7a8e2afe4b673037ae556d42f8be4354e77c01d2"
        ],
        [
            "intros a' H; exists a'.",
            "VernacExtend",
            "b2299fd39e43872dbaf585d7f06bed8825cc2287"
        ],
        [
            "unfold b in |- *; unfold R in |- *; unfold Val_bound in |- *.",
            "VernacExtend",
            "b2a68a200a4467282eedca663c2f5cc1a791de4a"
        ],
        [
            "apply fact_Rel; try trivial.",
            "VernacExtend",
            "7a0376a38b1ccb7c7afd886c74e086ef34225d5f"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End Factorization_for_Synthesis.",
            "VernacEndSegment",
            "ae2871c13cddcd64c5e607488f0fc633ad9f2518"
        ]
    ],
    "proofs": [
        {
            "name": "factorization_for_synthesis",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "intros F P.",
                        "VernacExtend",
                        "1130c0baa3c84ce747718e98dbbd3e72f2933eac"
                    ]
                },
                {
                    "command": [
                        "simple induction n.",
                        "VernacExtend",
                        "55f6dddaea9189658ce497de54569ba3016f1fd5"
                    ]
                },
                {
                    "command": [
                        "intros X Y a.",
                        "VernacExtend",
                        "a9191f77ddc7d7e7a1db59693e006b541382c732"
                    ]
                },
                {
                    "command": [
                        "exists a.",
                        "VernacExtend",
                        "59cc5697e7369be65591d2d5e6ad6fd701682809"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "unfold R in |- *; unfold Val_bound in |- *; apply prop_Rel.",
                        "VernacExtend",
                        "fee20647626d20f97161b0c9cc840399654fa01f"
                    ]
                },
                {
                    "command": [
                        "try trivial.",
                        "VernacExtend",
                        "ff637401febb7c218c1122f6450e0aad20b51f45"
                    ]
                },
                {
                    "command": [
                        "clear n; intros n H_rec X Y a.",
                        "VernacExtend",
                        "e51b51dc6103d2419f4a5a73127f51e872df45d7"
                    ]
                },
                {
                    "command": [
                        "elim (H_rec (Tl (S n) X) (Tl (S n) Y) (FR b a (Hd Digit n X) (Hd Digit n Y))).",
                        "VernacExtend",
                        "7a8e2afe4b673037ae556d42f8be4354e77c01d2"
                    ]
                },
                {
                    "command": [
                        "intros a' H; exists a'.",
                        "VernacExtend",
                        "b2299fd39e43872dbaf585d7f06bed8825cc2287"
                    ]
                },
                {
                    "command": [
                        "unfold b in |- *; unfold R in |- *; unfold Val_bound in |- *.",
                        "VernacExtend",
                        "b2a68a200a4467282eedca663c2f5cc1a791de4a"
                    ]
                },
                {
                    "command": [
                        "apply fact_Rel; try trivial.",
                        "VernacExtend",
                        "7a0376a38b1ccb7c7afd886c74e086ef34225d5f"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        }
    ]
}