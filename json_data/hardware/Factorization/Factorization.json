{
    "filename": "Factorization/Factorization.v",
    "coq_project": "hardware",
    "vernac_cmds": [
        [
            "Require Export Numerals.",
            "VernacRequire",
            "b8b6ed80091d862a5a6b3e76a5589c18e8e61047"
        ],
        [
            "Section factorization.",
            "VernacBeginSection",
            "c56e16a8adc5582cb5043dcc5b0ab7f18a8f1e2d"
        ],
        [
            "Variable A : Set.",
            "VernacAssumption",
            "913b2bc4093d15ed267c28d55b4536b83f6168df"
        ],
        [
            "Variable BASE : BT.",
            "VernacAssumption",
            "03cb3e9f0105a56656748c99c5b73e671527148e"
        ],
        [
            "Let b := base BASE.",
            "VernacDefinition",
            "c88f84d86bd02ac5b03419e61b1bd012598b1819"
        ],
        [
            "Let Num := num BASE.",
            "VernacDefinition",
            "1d3c4de11c893e35b38f8c91916a69c95a60d30e"
        ],
        [
            "Let Digit := digit BASE.",
            "VernacDefinition",
            "67d36f2d43210d9566ec9c1d11cfbbeb321af1f8"
        ],
        [
            "Let Tl := tl Digit.",
            "VernacDefinition",
            "6075bf95ed56029e1d2720d3ff8937e72a41077e"
        ],
        [
            "Let Cons := cons Digit.",
            "VernacDefinition",
            "983bed67fed76be6282fc9bdcc98c05c03fc5dd5"
        ],
        [
            "Let Nil := nil Digit.",
            "VernacDefinition",
            "c70b47ad66a43fd6b62cd47d9645c08f4e2c485d"
        ],
        [
            "Let Val_bound := val_bound BASE.",
            "VernacDefinition",
            "b228b2b6452cde3c4517cc3c75f2eb19f7faeda2"
        ],
        [
            "Section Definitions_for_Relations.",
            "VernacBeginSection",
            "dddcc83e9296ab9c89b3d789b69db1ecaa99fa91"
        ],
        [
            "Definition Diveucl (a b q r : nat) : Prop := a = b * q + r /\\ r < b.",
            "VernacDefinition",
            "d414017d18edcae7ebfa4ea945824377a8af993e"
        ],
        [
            "Definition Zero : inf 1 := Val_bound 0 Nil.",
            "VernacDefinition",
            "5075f7d2ddc55d620a94e240162d51458108afb8"
        ],
        [
            "Variable R : forall n : nat, A -> inf n -> inf n -> A -> Prop.",
            "VernacAssumption",
            "bb4aaf277eaa2a49d0596aa48b6d527dc047f7bb"
        ],
        [
            "Definition factorizable : Prop := forall (m n : nat) (q q' : inf m) (r r' : inf n) (a a1 a' : A) (x x' : inf (m * n)), Diveucl (val_inf (m * n) x) n (val_inf m q) (val_inf n r) -> Diveucl (val_inf (m * n) x') n (val_inf m q') (val_inf n r') -> R m a q q' a1 -> R n a1 r r' a' -> R (m * n) a x x' a'.",
            "VernacDefinition",
            "f03b4ebb8b8739304cc105e6d7b41fee577b2f0e"
        ],
        [
            "Definition proper : Prop := forall a : A, R 1 a Zero Zero a.",
            "VernacDefinition",
            "1386a8e7b8adefeafb81f9284027c538ecc0af74"
        ],
        [
            "End Definitions_for_Relations.",
            "VernacEndSegment",
            "6718ee28209596520eb9dc67d56786a20267bcf6"
        ],
        [
            "Section Three_inputs.",
            "VernacBeginSection",
            "1435d9a996ad140e4c5ddbc210fcdb17650a7d31"
        ],
        [
            "Variable FR : forall n : nat, A -> inf n -> inf n -> A.",
            "VernacAssumption",
            "6faf28a920348190a11f000db90ae40055d603d2"
        ],
        [
            "Let R (n : nat) (a : A) (x y : inf n) (a' : A) : Prop := a' = FR n a x y.",
            "VernacDefinition",
            "cc3df6e92dd4821cd8979b4b1a4cfd62cde97c36"
        ],
        [
            "Lemma prop_Rel : proper R -> forall (X Y : Num 0) (a : A), R 1 a (Val_bound 0 X) (Val_bound 0 Y) a.",
            "VernacStartTheoremProof",
            "3d62c4f48b2e35e87542883213fceeb9e5400838"
        ],
        [
            "intros P X Y a.",
            "VernacExtend",
            "dc522a13348062d6277b6369155b7bad8db1e4e1"
        ],
        [
            "replace X with (nil (digit BASE)); auto with arith.",
            "VernacExtend",
            "d7258ce57d77e7e10f633c5f0c86046ffede54c9"
        ],
        [
            "replace Y with (nil (digit BASE)); auto with arith.",
            "VernacExtend",
            "23691e771ae0f3c16ac19775a68642f53f3386ff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fact_Rel : factorizable R -> forall (n : nat) (X Y : Num (S n)) (a a' : A), R (exp b n) (FR b a (Hd Digit n X) (Hd Digit n Y)) (Val_bound n (Tl (S n) X)) (Val_bound n (Tl (S n) Y)) a' -> R (exp b (S n)) a (Val_bound (S n) X) (Val_bound (S n) Y) a'.",
            "VernacStartTheoremProof",
            "2b83695483da1afc1243b8171dd6c46883d566fc"
        ],
        [
            "intros F n X Y a a' H.",
            "VernacExtend",
            "4def1fedddd50c7dfd9fda45c974a3daf4843040"
        ],
        [
            "simpl in |- *.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "generalize (non_empty (inf b) n X).",
            "VernacExtend",
            "bee3091e881043da0a7c3e51975f6ecec8432fd6"
        ],
        [
            "generalize (non_empty (inf b) n Y).",
            "VernacExtend",
            "80d4daa2c1a7c4fdd8a41d171170307b73698db2"
        ],
        [
            "intros H1 H2.",
            "VernacExtend",
            "1a279bc44908e178ace5c31cb5040905c4829477"
        ],
        [
            "elim H1; elim H2; clear H1 H2.",
            "VernacExtend",
            "e8af03f17186a0b4547cdea119d0c8af69110dc1"
        ],
        [
            "intros d D d' D'.",
            "VernacExtend",
            "e050794aeaabf6f81d298420fc80a148d728ca2c"
        ],
        [
            "elim D; elim D'; clear D D'.",
            "VernacExtend",
            "bc8decc9e5de39643b8de769adf9a5abc365b361"
        ],
        [
            "intros D' HD' D HD.",
            "VernacExtend",
            "010ed4e3dd8a95b6eb53295fcc01a7339acb9dfb"
        ],
        [
            "rewrite HD; rewrite HD'.",
            "VernacExtend",
            "279a9b3aea2005c9d202f88d8dc9ec1b9d6871ba"
        ],
        [
            "apply F with d d' (Val_bound n (Tl (S n) X)) (Val_bound n (Tl (S n) Y)) (FR b a (Hd Digit n X) (Hd Digit n Y)).",
            "VernacExtend",
            "4df6be151421a462b255de0aaafa99b1fff8d566"
        ],
        [
            "unfold Diveucl in |- *; split; simpl in |- *.",
            "VernacExtend",
            "e296a3d451fd324358053a4c73dbca17f3e48755"
        ],
        [
            "rewrite HD; simpl in |- *.",
            "VernacExtend",
            "0157dd18f77f6f586a50131807fb7035c4077f1b"
        ],
        [
            "elim (mult_comm (val_inf b d) (exp b n)); auto with arith.",
            "VernacExtend",
            "1a4655c80bead348ca85cdf802439191d3c77d77"
        ],
        [
            "rewrite HD; simpl in |- *.",
            "VernacExtend",
            "0157dd18f77f6f586a50131807fb7035c4077f1b"
        ],
        [
            "unfold b in |- *; apply upper_bound.",
            "VernacExtend",
            "2e3dfad17fac63c074610bdf18779bcb11834ec0"
        ],
        [
            "unfold Diveucl in |- *; split; simpl in |- *.",
            "VernacExtend",
            "e296a3d451fd324358053a4c73dbca17f3e48755"
        ],
        [
            "rewrite HD'; simpl in |- *.",
            "VernacExtend",
            "78d450885b8158eb040dee4ede4b7bd575be7f1e"
        ],
        [
            "elim (mult_comm (val_inf b d') (exp b n)); auto with arith.",
            "VernacExtend",
            "d0909d9c028bdffad63b5873c79f8f714c922435"
        ],
        [
            "rewrite HD'; simpl in |- *.",
            "VernacExtend",
            "78d450885b8158eb040dee4ede4b7bd575be7f1e"
        ],
        [
            "unfold b in |- *; apply upper_bound.",
            "VernacExtend",
            "2e3dfad17fac63c074610bdf18779bcb11834ec0"
        ],
        [
            "unfold R in |- *.",
            "VernacExtend",
            "26834bae8933c0420b69725db02480df48172fd8"
        ],
        [
            "rewrite HD; rewrite HD'.",
            "VernacExtend",
            "279a9b3aea2005c9d202f88d8dc9ec1b9d6871ba"
        ],
        [
            "rewrite Non_empty_Hd; rewrite Non_empty_Hd; auto with arith.",
            "VernacExtend",
            "6290a869d92eeb472bcf11e278cb8de824e27fe4"
        ],
        [
            "try trivial with arith.",
            "VernacExtend",
            "67676e80e82dd4cd7facd3db3809dc56eca17893"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Three_inputs.",
            "VernacEndSegment",
            "c46c7bd7640f04cb1516e08c85cd61d1f66eb166"
        ],
        [
            "End factorization.",
            "VernacEndSegment",
            "d9bb2dfd3cdfce9516d074f30472be434a1006d2"
        ]
    ],
    "proofs": [
        {
            "name": "prop_Rel",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros P X Y a.",
                        "VernacExtend",
                        "dc522a13348062d6277b6369155b7bad8db1e4e1"
                    ]
                },
                {
                    "command": [
                        "replace X with (nil (digit BASE)); auto with arith.",
                        "VernacExtend",
                        "d7258ce57d77e7e10f633c5f0c86046ffede54c9"
                    ]
                },
                {
                    "command": [
                        "replace Y with (nil (digit BASE)); auto with arith.",
                        "VernacExtend",
                        "23691e771ae0f3c16ac19775a68642f53f3386ff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fact_Rel",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intros F n X Y a a' H.",
                        "VernacExtend",
                        "4def1fedddd50c7dfd9fda45c974a3daf4843040"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "generalize (non_empty (inf b) n X).",
                        "VernacExtend",
                        "bee3091e881043da0a7c3e51975f6ecec8432fd6"
                    ]
                },
                {
                    "command": [
                        "generalize (non_empty (inf b) n Y).",
                        "VernacExtend",
                        "80d4daa2c1a7c4fdd8a41d171170307b73698db2"
                    ]
                },
                {
                    "command": [
                        "intros H1 H2.",
                        "VernacExtend",
                        "1a279bc44908e178ace5c31cb5040905c4829477"
                    ]
                },
                {
                    "command": [
                        "elim H1; elim H2; clear H1 H2.",
                        "VernacExtend",
                        "e8af03f17186a0b4547cdea119d0c8af69110dc1"
                    ]
                },
                {
                    "command": [
                        "intros d D d' D'.",
                        "VernacExtend",
                        "e050794aeaabf6f81d298420fc80a148d728ca2c"
                    ]
                },
                {
                    "command": [
                        "elim D; elim D'; clear D D'.",
                        "VernacExtend",
                        "bc8decc9e5de39643b8de769adf9a5abc365b361"
                    ]
                },
                {
                    "command": [
                        "intros D' HD' D HD.",
                        "VernacExtend",
                        "010ed4e3dd8a95b6eb53295fcc01a7339acb9dfb"
                    ]
                },
                {
                    "command": [
                        "rewrite HD; rewrite HD'.",
                        "VernacExtend",
                        "279a9b3aea2005c9d202f88d8dc9ec1b9d6871ba"
                    ]
                },
                {
                    "command": [
                        "apply F with d d' (Val_bound n (Tl (S n) X)) (Val_bound n (Tl (S n) Y)) (FR b a (Hd Digit n X) (Hd Digit n Y)).",
                        "VernacExtend",
                        "4df6be151421a462b255de0aaafa99b1fff8d566"
                    ]
                },
                {
                    "command": [
                        "unfold Diveucl in |- *; split; simpl in |- *.",
                        "VernacExtend",
                        "e296a3d451fd324358053a4c73dbca17f3e48755"
                    ]
                },
                {
                    "command": [
                        "rewrite HD; simpl in |- *.",
                        "VernacExtend",
                        "0157dd18f77f6f586a50131807fb7035c4077f1b"
                    ]
                },
                {
                    "command": [
                        "elim (mult_comm (val_inf b d) (exp b n)); auto with arith.",
                        "VernacExtend",
                        "1a4655c80bead348ca85cdf802439191d3c77d77"
                    ]
                },
                {
                    "command": [
                        "rewrite HD; simpl in |- *.",
                        "VernacExtend",
                        "0157dd18f77f6f586a50131807fb7035c4077f1b"
                    ]
                },
                {
                    "command": [
                        "unfold b in |- *; apply upper_bound.",
                        "VernacExtend",
                        "2e3dfad17fac63c074610bdf18779bcb11834ec0"
                    ]
                },
                {
                    "command": [
                        "unfold Diveucl in |- *; split; simpl in |- *.",
                        "VernacExtend",
                        "e296a3d451fd324358053a4c73dbca17f3e48755"
                    ]
                },
                {
                    "command": [
                        "rewrite HD'; simpl in |- *.",
                        "VernacExtend",
                        "78d450885b8158eb040dee4ede4b7bd575be7f1e"
                    ]
                },
                {
                    "command": [
                        "elim (mult_comm (val_inf b d') (exp b n)); auto with arith.",
                        "VernacExtend",
                        "d0909d9c028bdffad63b5873c79f8f714c922435"
                    ]
                },
                {
                    "command": [
                        "rewrite HD'; simpl in |- *.",
                        "VernacExtend",
                        "78d450885b8158eb040dee4ede4b7bd575be7f1e"
                    ]
                },
                {
                    "command": [
                        "unfold b in |- *; apply upper_bound.",
                        "VernacExtend",
                        "2e3dfad17fac63c074610bdf18779bcb11834ec0"
                    ]
                },
                {
                    "command": [
                        "unfold R in |- *.",
                        "VernacExtend",
                        "26834bae8933c0420b69725db02480df48172fd8"
                    ]
                },
                {
                    "command": [
                        "rewrite HD; rewrite HD'.",
                        "VernacExtend",
                        "279a9b3aea2005c9d202f88d8dc9ec1b9d6871ba"
                    ]
                },
                {
                    "command": [
                        "rewrite Non_empty_Hd; rewrite Non_empty_Hd; auto with arith.",
                        "VernacExtend",
                        "6290a869d92eeb472bcf11e278cb8de824e27fe4"
                    ]
                },
                {
                    "command": [
                        "try trivial with arith.",
                        "VernacExtend",
                        "67676e80e82dd4cd7facd3db3809dc56eca17893"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}