{
    "filename": "Factorization/Comparator/Comparator_Relation.v",
    "coq_project": "hardware",
    "vernac_cmds": [
        [
            "Require Export Compare_Nat.",
            "VernacRequire",
            "bc7a404e306106a6e692dcc635ca238b4c72b1dc"
        ],
        [
            "Require Export Factorization.",
            "VernacRequire",
            "ef8a9c8cacff897464095611ce647edabba064bf"
        ],
        [
            "Require Export Compare_Num.",
            "VernacRequire",
            "9560634d0c46cebaf35dfb9d2852c2cc4e228288"
        ],
        [
            "Section Comparator_Rel.",
            "VernacBeginSection",
            "c98d82ce905d2ed7b267d88a0b819fe2e75f9d76"
        ],
        [
            "Variable BASE : BT.",
            "VernacAssumption",
            "03cb3e9f0105a56656748c99c5b73e671527148e"
        ],
        [
            "Definition FR (n : nat) (o : order) (x y : inf n) : order := match o return order with | L => L | E => Compare_Nat.comparison (val_inf n x) (val_inf n y) | G => G end.",
            "VernacDefinition",
            "21c449c769e0dbfeab645ea483910fd24d175b12"
        ],
        [
            "Definition R (n : nat) (o : order) (x y : inf n) (o' : order) : Prop := o' = FR n o x y.",
            "VernacDefinition",
            "8a834f54c8799d989967c3cdfc80bca304e43e17"
        ],
        [
            "Notation Proper := (proper _) (only parsing).",
            "VernacSyntacticDefinition",
            "8ab500a4cd9e59f20d01c46df0c89ef9d09e2288"
        ],
        [
            "Lemma is_proper : proper _ BASE R.",
            "VernacStartTheoremProof",
            "1c4e2382335d897970811d9fe6d22c2dab3d799c"
        ],
        [
            "unfold proper in |- *.",
            "VernacExtend",
            "20231eec539e67f06f4a67cdc19ff89ed67f5358"
        ],
        [
            "intros a; case a; unfold R in |- *; simpl in |- *; auto with arith.",
            "VernacExtend",
            "960e8dfd3d945b13c7961a0fc03b672b862bd6fd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation Factorizable := (factorizable _) (only parsing).",
            "VernacSyntacticDefinition",
            "a59dad1ff671f874113c96c269e3c56442892d9b"
        ],
        [
            "Lemma is_factorizable : factorizable _ R.",
            "VernacStartTheoremProof",
            "f89fb802c943150dd0d9808e482884b734d5f477"
        ],
        [
            "unfold factorizable in |- *; unfold R in |- *; intros M N q q' r r' a a1 a' x x' H1 H2; case a.",
            "VernacExtend",
            "6c05dbd85893c02f374cc717b87fd597948baeb0"
        ],
        [
            "simpl in |- *; intro R1; rewrite R1; simpl in |- *; auto with arith.",
            "VernacExtend",
            "6e97f012b08747e46aa5588d1daf0ba53cf49f93"
        ],
        [
            "case a1.",
            "VernacExtend",
            "903299dbc68f5d4fc608acaad0f611217567b498"
        ],
        [
            "intros R1 R2.",
            "VernacExtend",
            "9c71a51da39033391ef21c4e9cf92bcd9d51ab91"
        ],
        [
            "replace a' with L; simpl in |- *; apply sym_equal; apply comparisonL.",
            "VernacExtend",
            "78c3cfb3a6f698c51ec6913ab37382a0fdf2f5b6"
        ],
        [
            "unfold Diveucl in H1; unfold Diveucl in H2; elim H1; elim H2; clear H1 H2; intros H1 H2 H3 H4; rewrite H1; rewrite H3; elim (mult_comm (val_inf M q) N); elim (mult_comm (val_inf M q') N); auto with arith.",
            "VernacExtend",
            "c024c28d9e2b126fbe3000975806c4a820788c3f"
        ],
        [
            "case a'; intros R1 R2.",
            "VernacExtend",
            "d5d9a850b5b8381dc576c68b10bd85b0cfb6a4e5"
        ],
        [
            "simpl in |- *; apply sym_equal; apply comparisonL.",
            "VernacExtend",
            "33b181b88e0e1ceb233fb48154fc1d77b48734bf"
        ],
        [
            "unfold Diveucl in H1; unfold Diveucl in H2; elim H1; elim H2; clear H1 H2; intros H1 H2 H3 H4; rewrite H1; rewrite H3.",
            "VernacExtend",
            "75475aabe69591817b5ac3c8cbce8d45572145ef"
        ],
        [
            "replace (val_inf M q') with (val_inf M q); auto with arith.",
            "VernacExtend",
            "609f8b9b0889d0fbbe1d4af34039afbaf3a91dd3"
        ],
        [
            "simpl in |- *; apply sym_equal; apply comparisonE.",
            "VernacExtend",
            "4b86cf114acd02d09b5d126ceb3ab3e5b357ce89"
        ],
        [
            "unfold Diveucl in H1; unfold Diveucl in H2; elim H1; elim H2; clear H1 H2; intros H1 H2 H3 H4; rewrite H1; rewrite H3.",
            "VernacExtend",
            "75475aabe69591817b5ac3c8cbce8d45572145ef"
        ],
        [
            "replace (val_inf M q') with (val_inf M q); auto with arith.",
            "VernacExtend",
            "609f8b9b0889d0fbbe1d4af34039afbaf3a91dd3"
        ],
        [
            "simpl in |- *; apply sym_equal; apply comparisonG.",
            "VernacExtend",
            "2b276f99011fc8af520d682eee9bfbcdb5d1fbeb"
        ],
        [
            "unfold Diveucl in H1; unfold Diveucl in H2; elim H1; elim H2; clear H1 H2; intros H1 H2 H3 H4; rewrite H1; rewrite H3.",
            "VernacExtend",
            "75475aabe69591817b5ac3c8cbce8d45572145ef"
        ],
        [
            "replace (val_inf M q') with (val_inf M q); auto with arith.",
            "VernacExtend",
            "609f8b9b0889d0fbbe1d4af34039afbaf3a91dd3"
        ],
        [
            "intros R1 R2.",
            "VernacExtend",
            "9c71a51da39033391ef21c4e9cf92bcd9d51ab91"
        ],
        [
            "replace a' with G; simpl in |- *; apply sym_equal; apply comparisonG.",
            "VernacExtend",
            "cc31727eac67cb7f050ec6ae690d2d126df6a81c"
        ],
        [
            "unfold Diveucl in H1; unfold Diveucl in H2; elim H1; elim H2; clear H1 H2; intros H1 H2 H3 H4; rewrite H1; rewrite H3; unfold gt in |- *; elim (mult_comm (val_inf M q) N); elim (mult_comm (val_inf M q') N); auto with arith.",
            "VernacExtend",
            "d7f6a6a8f152ce6e284a678babdd85a8bf2f887d"
        ],
        [
            "simpl in |- *; intro R1; rewrite R1; simpl in |- *; auto with arith.",
            "VernacExtend",
            "6e97f012b08747e46aa5588d1daf0ba53cf49f93"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "End Comparator_Rel.",
            "VernacEndSegment",
            "2be4804ed3c70c4b163215bba0f53418c05b6312"
        ]
    ],
    "proofs": [
        {
            "name": "is_proper",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "unfold proper in |- *.",
                        "VernacExtend",
                        "20231eec539e67f06f4a67cdc19ff89ed67f5358"
                    ]
                },
                {
                    "command": [
                        "intros a; case a; unfold R in |- *; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "960e8dfd3d945b13c7961a0fc03b672b862bd6fd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "is_factorizable",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "unfold factorizable in |- *; unfold R in |- *; intros M N q q' r r' a a1 a' x x' H1 H2; case a.",
                        "VernacExtend",
                        "6c05dbd85893c02f374cc717b87fd597948baeb0"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intro R1; rewrite R1; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "6e97f012b08747e46aa5588d1daf0ba53cf49f93"
                    ]
                },
                {
                    "command": [
                        "case a1.",
                        "VernacExtend",
                        "903299dbc68f5d4fc608acaad0f611217567b498"
                    ]
                },
                {
                    "command": [
                        "intros R1 R2.",
                        "VernacExtend",
                        "9c71a51da39033391ef21c4e9cf92bcd9d51ab91"
                    ]
                },
                {
                    "command": [
                        "replace a' with L; simpl in |- *; apply sym_equal; apply comparisonL.",
                        "VernacExtend",
                        "78c3cfb3a6f698c51ec6913ab37382a0fdf2f5b6"
                    ]
                },
                {
                    "command": [
                        "unfold Diveucl in H1; unfold Diveucl in H2; elim H1; elim H2; clear H1 H2; intros H1 H2 H3 H4; rewrite H1; rewrite H3; elim (mult_comm (val_inf M q) N); elim (mult_comm (val_inf M q') N); auto with arith.",
                        "VernacExtend",
                        "c024c28d9e2b126fbe3000975806c4a820788c3f"
                    ]
                },
                {
                    "command": [
                        "case a'; intros R1 R2.",
                        "VernacExtend",
                        "d5d9a850b5b8381dc576c68b10bd85b0cfb6a4e5"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; apply sym_equal; apply comparisonL.",
                        "VernacExtend",
                        "33b181b88e0e1ceb233fb48154fc1d77b48734bf"
                    ]
                },
                {
                    "command": [
                        "unfold Diveucl in H1; unfold Diveucl in H2; elim H1; elim H2; clear H1 H2; intros H1 H2 H3 H4; rewrite H1; rewrite H3.",
                        "VernacExtend",
                        "75475aabe69591817b5ac3c8cbce8d45572145ef"
                    ]
                },
                {
                    "command": [
                        "replace (val_inf M q') with (val_inf M q); auto with arith.",
                        "VernacExtend",
                        "609f8b9b0889d0fbbe1d4af34039afbaf3a91dd3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; apply sym_equal; apply comparisonE.",
                        "VernacExtend",
                        "4b86cf114acd02d09b5d126ceb3ab3e5b357ce89"
                    ]
                },
                {
                    "command": [
                        "unfold Diveucl in H1; unfold Diveucl in H2; elim H1; elim H2; clear H1 H2; intros H1 H2 H3 H4; rewrite H1; rewrite H3.",
                        "VernacExtend",
                        "75475aabe69591817b5ac3c8cbce8d45572145ef"
                    ]
                },
                {
                    "command": [
                        "replace (val_inf M q') with (val_inf M q); auto with arith.",
                        "VernacExtend",
                        "609f8b9b0889d0fbbe1d4af34039afbaf3a91dd3"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; apply sym_equal; apply comparisonG.",
                        "VernacExtend",
                        "2b276f99011fc8af520d682eee9bfbcdb5d1fbeb"
                    ]
                },
                {
                    "command": [
                        "unfold Diveucl in H1; unfold Diveucl in H2; elim H1; elim H2; clear H1 H2; intros H1 H2 H3 H4; rewrite H1; rewrite H3.",
                        "VernacExtend",
                        "75475aabe69591817b5ac3c8cbce8d45572145ef"
                    ]
                },
                {
                    "command": [
                        "replace (val_inf M q') with (val_inf M q); auto with arith.",
                        "VernacExtend",
                        "609f8b9b0889d0fbbe1d4af34039afbaf3a91dd3"
                    ]
                },
                {
                    "command": [
                        "intros R1 R2.",
                        "VernacExtend",
                        "9c71a51da39033391ef21c4e9cf92bcd9d51ab91"
                    ]
                },
                {
                    "command": [
                        "replace a' with G; simpl in |- *; apply sym_equal; apply comparisonG.",
                        "VernacExtend",
                        "cc31727eac67cb7f050ec6ae690d2d126df6a81c"
                    ]
                },
                {
                    "command": [
                        "unfold Diveucl in H1; unfold Diveucl in H2; elim H1; elim H2; clear H1 H2; intros H1 H2 H3 H4; rewrite H1; rewrite H3; unfold gt in |- *; elim (mult_comm (val_inf M q) N); elim (mult_comm (val_inf M q') N); auto with arith.",
                        "VernacExtend",
                        "d7f6a6a8f152ce6e284a678babdd85a8bf2f887d"
                    ]
                },
                {
                    "command": [
                        "simpl in |- *; intro R1; rewrite R1; simpl in |- *; auto with arith.",
                        "VernacExtend",
                        "6e97f012b08747e46aa5588d1daf0ba53cf49f93"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}