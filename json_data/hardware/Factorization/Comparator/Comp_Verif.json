{
    "filename": "Factorization/Comparator/Comp_Verif.v",
    "coq_project": "hardware",
    "vernac_cmds": [
        [
            "Require Import Factorization_Verif.",
            "VernacRequire",
            "fac63ce91a4a767d146cc6179e452deaf878ca43"
        ],
        [
            "Require Import Comparator_Relation.",
            "VernacRequire",
            "ab073d1d7565858fd37e9d651e9fdd01a427dba5"
        ],
        [
            "Parameter BASE : BT.",
            "VernacAssumption",
            "be20d3dccb919bf00d49b7ad0818328d90940df1"
        ],
        [
            "Definition b := base BASE.",
            "VernacDefinition",
            "41d874b1cdbdc06b7d2b2391c15ac8c47e162b0c"
        ],
        [
            "Definition Digit := digit BASE.",
            "VernacDefinition",
            "a98186292d22b8d572c75ec1304ba16262302876"
        ],
        [
            "Definition Num := num BASE.",
            "VernacDefinition",
            "c319a0558025d4fb8249aaf53e9a771604af44b7"
        ],
        [
            "Definition Val_bound := val_bound BASE.",
            "VernacDefinition",
            "551d2d71368fdc43fee528fb5856d7351eeec188"
        ],
        [
            "Definition Value := Val BASE.",
            "VernacDefinition",
            "92aff72d9caff1fdc00721926fb94dff7fa1e0f0"
        ],
        [
            "Definition Connection := connection order (inf b) (inf b) (R b).",
            "VernacDefinition",
            "0df715aa3db98329d971c28ed7caf89446bc9051"
        ],
        [
            "Theorem general_correct : forall (n : nat) (X Y : Num n) (o o' : order), Connection n o X Y o' -> R (exp b n) o (Val_bound n X) (Val_bound n Y) o'.",
            "VernacStartTheoremProof",
            "2b374183475b432dff64f4eb968755192149573d"
        ],
        [
            "intros n X Y o o' C.",
            "VernacExtend",
            "6f91a964fb43b5732be73bc55950f5d9ea0eeebd"
        ],
        [
            "unfold b in |- *.",
            "VernacExtend",
            "c3ec7361748fdcda40e288cb2667a326ae9a249e"
        ],
        [
            "apply factorization_for_verification with (A := order) (BASE := BASE).",
            "VernacExtend",
            "f6da2496d4574a60b3c478ff5e3788ec32ca186e"
        ],
        [
            "exact is_factorizable.",
            "VernacExtend",
            "2ff103329398ae4dc1c1cbda3d3349570af490b9"
        ],
        [
            "exact (is_proper BASE).",
            "VernacExtend",
            "4e9b38a80e131788a6277efda980e04a7cf803b4"
        ],
        [
            "try trivial.",
            "VernacExtend",
            "ff637401febb7c218c1122f6450e0aad20b51f45"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem correctness : forall (n : nat) (X Y : Num n) (o : order), Connection n E X Y o -> o = Compare_Nat.comparison (Value n X) (Value n Y).",
            "VernacStartTheoremProof",
            "67f4bebfea28124563043cef15da13296720c3d2"
        ],
        [
            "intros n X Y o.",
            "VernacExtend",
            "9212ff15ce9c8d0b4f820be03d4aab681cf62964"
        ],
        [
            "generalize (general_correct n X Y E o).",
            "VernacExtend",
            "c3c72b64c0e620c28c556e5dd1ef21c74ecd214a"
        ],
        [
            "unfold R in |- *; simpl in |- *; auto.",
            "VernacExtend",
            "265b6cd7638b8bae939073c8ff048334e9405474"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "general_correct",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intros n X Y o o' C.",
                        "VernacExtend",
                        "6f91a964fb43b5732be73bc55950f5d9ea0eeebd"
                    ]
                },
                {
                    "command": [
                        "unfold b in |- *.",
                        "VernacExtend",
                        "c3ec7361748fdcda40e288cb2667a326ae9a249e"
                    ]
                },
                {
                    "command": [
                        "apply factorization_for_verification with (A := order) (BASE := BASE).",
                        "VernacExtend",
                        "f6da2496d4574a60b3c478ff5e3788ec32ca186e"
                    ]
                },
                {
                    "command": [
                        "exact is_factorizable.",
                        "VernacExtend",
                        "2ff103329398ae4dc1c1cbda3d3349570af490b9"
                    ]
                },
                {
                    "command": [
                        "exact (is_proper BASE).",
                        "VernacExtend",
                        "4e9b38a80e131788a6277efda980e04a7cf803b4"
                    ]
                },
                {
                    "command": [
                        "try trivial.",
                        "VernacExtend",
                        "ff637401febb7c218c1122f6450e0aad20b51f45"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "correctness",
            "line_nb": 17,
            "steps": [
                {
                    "command": [
                        "intros n X Y o.",
                        "VernacExtend",
                        "9212ff15ce9c8d0b4f820be03d4aab681cf62964"
                    ]
                },
                {
                    "command": [
                        "generalize (general_correct n X Y E o).",
                        "VernacExtend",
                        "c3c72b64c0e620c28c556e5dd1ef21c74ecd214a"
                    ]
                },
                {
                    "command": [
                        "unfold R in |- *; simpl in |- *; auto.",
                        "VernacExtend",
                        "265b6cd7638b8bae939073c8ff048334e9405474"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}