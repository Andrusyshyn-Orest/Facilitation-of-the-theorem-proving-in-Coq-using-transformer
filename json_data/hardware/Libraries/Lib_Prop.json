{
    "filename": "Libraries/Lib_Prop.v",
    "coq_project": "hardware",
    "vernac_cmds": [
        [
            "Inductive or3 (A B C : Prop) : Set := | or3_Left : A -> or3 A B C | or3_Middle : B -> or3 A B C | or3_Right : C -> or3 A B C.",
            "VernacInductive",
            "04822ed4d19670a5ce821adaf124bb741cd2c537"
        ],
        [
            "Lemma sym_and : forall A B : Prop, A /\\ B -> B /\\ A.",
            "VernacStartTheoremProof",
            "759e60842320381e54af29fce4190d9d6bbad3fe"
        ],
        [
            "intros A B H; elim H; split; auto.",
            "VernacExtend",
            "39dbb1394807e848bf5febeede424d27d9d728a9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Immediate sym_and.",
            "VernacHints",
            "745416852ceadcfc27644e04c894b1618d0d1b50"
        ],
        [
            "Lemma sym_or : forall A B : Prop, A \\/ B -> B \\/ A.",
            "VernacStartTheoremProof",
            "6e92a7d0d90e0b9f7a5b118c1a2a16f9abf2ce1b"
        ],
        [
            "simple induction 1; auto.",
            "VernacExtend",
            "9a39907ecc79e5b168fb55631dea1a654e88b050"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Immediate sym_or.",
            "VernacHints",
            "f0c86253cc16db227a811396ff629147b150a835"
        ],
        [
            "Lemma no_and_l : forall A B : Prop, ~ A -> ~ (A /\\ B).",
            "VernacStartTheoremProof",
            "3ae3a64b705445272a098b3a4438d4a09e2e983d"
        ],
        [
            "unfold not in |- *.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intros A B H G; apply H.",
            "VernacExtend",
            "afa7aa71b84bf86b0c14ed6cd369a25bfbc96347"
        ],
        [
            "elim G; auto.",
            "VernacExtend",
            "35d247ca581c84863bbcddb607f3ae4f5f99f0e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve no_and_l.",
            "VernacHints",
            "4e8990ac61b185c130c163ed8efb8a511e4cbddd"
        ],
        [
            "Lemma no_and_r : forall A B : Prop, ~ B -> ~ (A /\\ B).",
            "VernacStartTheoremProof",
            "6fdc6cf247271f6167f41780bf1f369431a463c7"
        ],
        [
            "unfold not in |- *.",
            "VernacExtend",
            "6c337369ba68753b2202c88d3c56bf02e1807b95"
        ],
        [
            "intros A B H G; apply H.",
            "VernacExtend",
            "afa7aa71b84bf86b0c14ed6cd369a25bfbc96347"
        ],
        [
            "elim G; auto.",
            "VernacExtend",
            "35d247ca581c84863bbcddb607f3ae4f5f99f0e5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve no_and_r.",
            "VernacHints",
            "2ed703c1c99dc1c780a5bcfbd276a36a53a4edc4"
        ],
        [
            "Lemma no_or : forall A B : Prop, ~ A -> B \\/ A -> B.",
            "VernacStartTheoremProof",
            "9a46532e540e56e07e5599a1094fc8e3d1111c15"
        ],
        [
            "intros A B H G; elim G; auto.",
            "VernacExtend",
            "636bda527f046115791f5b02294039f850219b42"
        ],
        [
            "intro; absurd A; auto.",
            "VernacExtend",
            "65d622239cbb0248d9e2f54fcfdfa74512605ab2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma no_or_inv : forall A B : Prop, ~ A -> A \\/ B -> B.",
            "VernacStartTheoremProof",
            "89c788848dbfe3a1319ce1ef8d42622b9496c15c"
        ],
        [
            "intros A B H G; elim G; auto.",
            "VernacExtend",
            "636bda527f046115791f5b02294039f850219b42"
        ],
        [
            "intro; absurd A; auto.",
            "VernacExtend",
            "65d622239cbb0248d9e2f54fcfdfa74512605ab2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma no_or_and : forall A B C D : Prop, ~ C -> A /\\ B \\/ C /\\ D -> A /\\ B.",
            "VernacStartTheoremProof",
            "71de47bf1d3236e890034817c06d59635d15574a"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply no_or with (C /\\ D); auto.",
            "VernacExtend",
            "f8ffe0137be163ba878180f90076b05780774fe4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma no_or_and_inv : forall A B C D : Prop, ~ D -> C /\\ D \\/ A /\\ B -> A /\\ B.",
            "VernacStartTheoremProof",
            "10e6cfd2ed33bb3dc1a1e3fd35bc46806f74e04e"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "apply no_or_inv with (C /\\ D); auto.",
            "VernacExtend",
            "b7ceafd7ed37f084bc0a068276e5613bfe4ab584"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma no_no_A : forall A : Prop, A -> ~ ~ A.",
            "VernacStartTheoremProof",
            "15b739f12a9d5861dd2e70db6b047efef141c069"
        ],
        [
            "unfold not in |- *; auto.",
            "VernacExtend",
            "d725a45300c7348567782332d57c37b47b2347c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Hint Resolve no_no_A.",
            "VernacHints",
            "d6c114c3ad30628f30f18d04a6df4e9bcf750f70"
        ],
        [
            "Lemma impl_no_no : forall A B : Prop, (A -> B) -> ~ B -> ~ A.",
            "VernacStartTheoremProof",
            "5bf57d825e697cfef579881d2617d01191b286e7"
        ],
        [
            "unfold not in |- *; auto.",
            "VernacExtend",
            "d725a45300c7348567782332d57c37b47b2347c9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma no_or_r : forall A B : Prop, ~ A -> A \\/ B -> B.",
            "VernacStartTheoremProof",
            "333e4316ac320f3749a3d8287a3f7f4ebe1d062b"
        ],
        [
            "intros A B not_A A_or_B.",
            "VernacExtend",
            "ee4798ad9b3d75fdc3b844f416316b13d16f7171"
        ],
        [
            "elim A_or_B; auto.",
            "VernacExtend",
            "fcfac9a667353eff7df92598cc458ef28ac01e04"
        ],
        [
            "intro; absurd A; auto.",
            "VernacExtend",
            "65d622239cbb0248d9e2f54fcfdfa74512605ab2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma no_or_l : forall A B : Prop, ~ B -> A \\/ B -> A.",
            "VernacStartTheoremProof",
            "1e82f2a920e64efaba35f109455ad45efbe89f3d"
        ],
        [
            "intros A B not_A A_or_B.",
            "VernacExtend",
            "ee4798ad9b3d75fdc3b844f416316b13d16f7171"
        ],
        [
            "elim A_or_B; auto.",
            "VernacExtend",
            "fcfac9a667353eff7df92598cc458ef28ac01e04"
        ],
        [
            "intro; absurd B; auto.",
            "VernacExtend",
            "62c4851e811339fd8cdf4dc794035cc73b6739fe"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "sym_and",
            "line_nb": 1,
            "steps": [
                {
                    "command": [
                        "intros A B H; elim H; split; auto.",
                        "VernacExtend",
                        "39dbb1394807e848bf5febeede424d27d9d728a9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "sym_or",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "simple induction 1; auto.",
                        "VernacExtend",
                        "9a39907ecc79e5b168fb55631dea1a654e88b050"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "no_and_l",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "intros A B H G; apply H.",
                        "VernacExtend",
                        "afa7aa71b84bf86b0c14ed6cd369a25bfbc96347"
                    ]
                },
                {
                    "command": [
                        "elim G; auto.",
                        "VernacExtend",
                        "35d247ca581c84863bbcddb607f3ae4f5f99f0e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "no_and_r",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *.",
                        "VernacExtend",
                        "6c337369ba68753b2202c88d3c56bf02e1807b95"
                    ]
                },
                {
                    "command": [
                        "intros A B H G; apply H.",
                        "VernacExtend",
                        "afa7aa71b84bf86b0c14ed6cd369a25bfbc96347"
                    ]
                },
                {
                    "command": [
                        "elim G; auto.",
                        "VernacExtend",
                        "35d247ca581c84863bbcddb607f3ae4f5f99f0e5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "no_or",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros A B H G; elim G; auto.",
                        "VernacExtend",
                        "636bda527f046115791f5b02294039f850219b42"
                    ]
                },
                {
                    "command": [
                        "intro; absurd A; auto.",
                        "VernacExtend",
                        "65d622239cbb0248d9e2f54fcfdfa74512605ab2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "no_or_inv",
            "line_nb": 25,
            "steps": [
                {
                    "command": [
                        "intros A B H G; elim G; auto.",
                        "VernacExtend",
                        "636bda527f046115791f5b02294039f850219b42"
                    ]
                },
                {
                    "command": [
                        "intro; absurd A; auto.",
                        "VernacExtend",
                        "65d622239cbb0248d9e2f54fcfdfa74512605ab2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "no_or_and",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply no_or with (C /\\ D); auto.",
                        "VernacExtend",
                        "f8ffe0137be163ba878180f90076b05780774fe4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "no_or_and_inv",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "apply no_or_inv with (C /\\ D); auto.",
                        "VernacExtend",
                        "b7ceafd7ed37f084bc0a068276e5613bfe4ab584"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "no_no_A",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; auto.",
                        "VernacExtend",
                        "d725a45300c7348567782332d57c37b47b2347c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "impl_no_no",
            "line_nb": 41,
            "steps": [
                {
                    "command": [
                        "unfold not in |- *; auto.",
                        "VernacExtend",
                        "d725a45300c7348567782332d57c37b47b2347c9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "no_or_r",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "intros A B not_A A_or_B.",
                        "VernacExtend",
                        "ee4798ad9b3d75fdc3b844f416316b13d16f7171"
                    ]
                },
                {
                    "command": [
                        "elim A_or_B; auto.",
                        "VernacExtend",
                        "fcfac9a667353eff7df92598cc458ef28ac01e04"
                    ]
                },
                {
                    "command": [
                        "intro; absurd A; auto.",
                        "VernacExtend",
                        "65d622239cbb0248d9e2f54fcfdfa74512605ab2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "no_or_l",
            "line_nb": 49,
            "steps": [
                {
                    "command": [
                        "intros A B not_A A_or_B.",
                        "VernacExtend",
                        "ee4798ad9b3d75fdc3b844f416316b13d16f7171"
                    ]
                },
                {
                    "command": [
                        "elim A_or_B; auto.",
                        "VernacExtend",
                        "fcfac9a667353eff7df92598cc458ef28ac01e04"
                    ]
                },
                {
                    "command": [
                        "intro; absurd B; auto.",
                        "VernacExtend",
                        "62c4851e811339fd8cdf4dc794035cc73b6739fe"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}