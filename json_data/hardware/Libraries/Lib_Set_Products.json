{
    "filename": "Libraries/Lib_Set_Products.v",
    "coq_project": "hardware",
    "vernac_cmds": [
        [
            "Lemma pair_fst_snd : forall (A B : Set) (c : A * B), (fst c, snd c) = c.",
            "VernacStartTheoremProof",
            "e0006e35bba1426977e28184624c18caaf1044ce"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pattern c in |- *; elim c; auto.",
            "VernacExtend",
            "bf6aa433e85cf1017d9166b3329718ff859e697f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Inductive prod_3 (A B C : Set) : Set := triplet : A -> B -> C -> prod_3 A B C.",
            "VernacInductive",
            "0d685b4a52edc43a4a8cb95219def8d38a60f7b5"
        ],
        [
            "Section programming_3.",
            "VernacBeginSection",
            "96013c88a312373fb5f7708b4f04e1bbd6c8a324"
        ],
        [
            "Variable A B C : Set.",
            "VernacAssumption",
            "d47dcfa600af358041f794491ac2bd9a1f2a9f68"
        ],
        [
            "Theorem fst_3 : prod_3 A B C -> A.",
            "VernacStartTheoremProof",
            "5d88acd780e7df595609f9029d835f54cefb2d33"
        ],
        [
            "simple induction 1; try trivial.",
            "VernacExtend",
            "2390e25d94eb5cc6dcbe86ed0a00d0aeb694990f"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Theorem snd_3 : prod_3 A B C -> B.",
            "VernacStartTheoremProof",
            "d5d6ebee2d845439f6265499aa2bc0b704c1ec8e"
        ],
        [
            "simple induction 1; try trivial.",
            "VernacExtend",
            "2390e25d94eb5cc6dcbe86ed0a00d0aeb694990f"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "Theorem thd_3 : prod_3 A B C -> C.",
            "VernacStartTheoremProof",
            "d681a28534d53e5a2f72fbcd34d49a3d886bcc8c"
        ],
        [
            "simple induction 1; try trivial.",
            "VernacExtend",
            "2390e25d94eb5cc6dcbe86ed0a00d0aeb694990f"
        ],
        [
            "Defined.",
            "VernacEndProof",
            "88c0be54a50df4bb90276c075406fe442428eb9c"
        ],
        [
            "End programming_3.",
            "VernacEndSegment",
            "ee5635b69f3229efd00b49f7c2b6ef77a14b7892"
        ],
        [
            "Notation Fst_3 := (fst_3 _ _ _) (only parsing).",
            "VernacSyntacticDefinition",
            "b2776fc2256e1764dd4dc04de9a440cdd9d02398"
        ],
        [
            "Notation Snd_3 := (snd_3 _ _ _) (only parsing).",
            "VernacSyntacticDefinition",
            "50aad6277315dc16d504620d7d405e7977351a8c"
        ],
        [
            "Notation Thd_3 := (thd_3 _ _ _) (only parsing).",
            "VernacSyntacticDefinition",
            "d77a206931d8bc7c72ea7599dba95b6f3da0ae9d"
        ],
        [
            "Notation Triplet := (triplet _ _ _) (only parsing).",
            "VernacSyntacticDefinition",
            "d978b847ed81e895f99fa303e9aa9d2ca953c2ab"
        ],
        [
            "Lemma triplet_fst_snd_thd : forall (A B C : Set) (c : prod_3 A B C), triplet _ _ _ (fst_3 _ _ _ c) (snd_3 _ _ _ c) (thd_3 _ _ _ c) = c.",
            "VernacStartTheoremProof",
            "b8adfe3209bbbcd9753fad97a659461fb50bb6ed"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "pattern c in |- *; elim c; auto.",
            "VernacExtend",
            "bf6aa433e85cf1017d9166b3329718ff859e697f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition ifProp (C : Type) (b : bool) (x y : C) : C := match b return C with | true => x | false => y end.",
            "VernacDefinition",
            "bba9f92526e5e7f32f11b73d96d168f62bac3a35"
        ],
        [
            "Lemma ifProp_or : forall (b : bool) (P Q : Prop), ifProp Prop b P Q -> P \\/ Q.",
            "VernacStartTheoremProof",
            "6225246caa4075cf0d8b9ff63e19345f308ce709"
        ],
        [
            "simple induction b; auto.",
            "VernacExtend",
            "f774dee14d4bc7b860870b64acea9240ac3f83dc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "pair_fst_snd",
            "line_nb": 0,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pattern c in |- *; elim c; auto.",
                        "VernacExtend",
                        "bf6aa433e85cf1017d9166b3329718ff859e697f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fst_3",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "simple induction 1; try trivial.",
                        "VernacExtend",
                        "2390e25d94eb5cc6dcbe86ed0a00d0aeb694990f"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "snd_3",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "simple induction 1; try trivial.",
                        "VernacExtend",
                        "2390e25d94eb5cc6dcbe86ed0a00d0aeb694990f"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "thd_3",
            "line_nb": 13,
            "steps": [
                {
                    "command": [
                        "simple induction 1; try trivial.",
                        "VernacExtend",
                        "2390e25d94eb5cc6dcbe86ed0a00d0aeb694990f"
                    ]
                },
                {
                    "command": [
                        "Defined.",
                        "VernacEndProof",
                        "88c0be54a50df4bb90276c075406fe442428eb9c"
                    ]
                }
            ]
        },
        {
            "name": "triplet_fst_snd_thd",
            "line_nb": 21,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "pattern c in |- *; elim c; auto.",
                        "VernacExtend",
                        "bf6aa433e85cf1017d9166b3329718ff859e697f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ifProp_or",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "simple induction b; auto.",
                        "VernacExtend",
                        "f774dee14d4bc7b860870b64acea9240ac3f83dc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}