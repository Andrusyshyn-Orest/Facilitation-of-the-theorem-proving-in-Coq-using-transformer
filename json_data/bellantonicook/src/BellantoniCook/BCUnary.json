{
    "filename": "src/BellantoniCook/BCUnary.v",
    "coq_project": "bellantonicook",
    "vernac_cmds": [
        [
            "Require Import Bool Arith Euclid List.",
            "VernacRequire",
            "57a7bbb6bb6042bd456d58547be8c9924dad4c96"
        ],
        [
            "Require Import BellantoniCook.Lib BellantoniCook.Bitstring BellantoniCook.BC BellantoniCook.BCLib.",
            "VernacRequire",
            "46a951d3a3c24a9f393d7707dd949108908c6516"
        ],
        [
            "Fixpoint unary_preserv (e : BC) : bool := match e with | zero => true | proj n s j => true | succ b => b | pred => true | cond => true | rec g h0 h1 => unary_preserv g && unary_preserv h0 && unary_preserv h1 | comp _ _ h nl sl => unary_preserv h && forallb unary_preserv nl && forallb unary_preserv sl end.",
            "VernacFixpoint",
            "d094f0c39b64bdf20db64dd3f46db1b04e35bb8f"
        ],
        [
            "Lemma preservation : forall (e : BC) (vnl vsl : list bs), unary_preserv e = true -> forallb unary vnl = true -> forallb unary vsl = true -> unary (sem e vnl vsl) = true.",
            "VernacStartTheoremProof",
            "b3d9a7f343cae8eb616e946121f569a8a3f8c6b6"
        ],
        [
            "induction e using BC_ind2; simpl; intros; trivial.",
            "VernacExtend",
            "c0b3f49843cffedfdefd98af27a32fc8da305711"
        ],
        [
            "case n; simpl.",
            "VernacExtend",
            "5a94ffc38bdc017e597460a75bae844cdd753e6e"
        ],
        [
            "apply forallb_nth; simpl; trivial.",
            "VernacExtend",
            "d992d065d2b29dd16fc3c78e7d2d130edeb40444"
        ],
        [
            "intros; case (leb i n0); apply forallb_nth; simpl; trivial.",
            "VernacExtend",
            "98718dceca45d21266f115c71577b4a5de4e5a09"
        ],
        [
            "subst; simpl; apply forallb_hd; simpl; trivial.",
            "VernacExtend",
            "88ce76441217c9ffd9a0d70fbae755ec7c830fac"
        ],
        [
            "apply forallb_tl; trivial.",
            "VernacExtend",
            "3e70bf3857578db8d889c5c295d2a210b36233e0"
        ],
        [
            "apply forallb_hd; simpl; trivial.",
            "VernacExtend",
            "1f6e681c066743ca84fcf3775fd211c8c6d2b40e"
        ],
        [
            "destruct vsl; simpl; trivial.",
            "VernacExtend",
            "a502dcbf9234fb33d9238d5559c970341257bb04"
        ],
        [
            "simpl in H1;rewrite andb_true_iff in H1.",
            "VernacExtend",
            "8fae3759c0fd715177d4038ffdb0b013935787ee"
        ],
        [
            "destruct vsl; simpl; trivial.",
            "VernacExtend",
            "a502dcbf9234fb33d9238d5559c970341257bb04"
        ],
        [
            "simpl in H1;rewrite andb_true_iff in H1.",
            "VernacExtend",
            "8fae3759c0fd715177d4038ffdb0b013935787ee"
        ],
        [
            "destruct vsl; simpl; trivial.",
            "VernacExtend",
            "a502dcbf9234fb33d9238d5559c970341257bb04"
        ],
        [
            "case l; trivial; tauto.",
            "VernacExtend",
            "6cbc6dc166c5b321bab1066f5259b48cca324b65"
        ],
        [
            "destruct vsl; simpl; trivial.",
            "VernacExtend",
            "a502dcbf9234fb33d9238d5559c970341257bb04"
        ],
        [
            "simpl in H1;rewrite andb_true_iff in H1.",
            "VernacExtend",
            "8fae3759c0fd715177d4038ffdb0b013935787ee"
        ],
        [
            "case l; trivial; intros.",
            "VernacExtend",
            "d1c5f830ed2a75073116e166748485676865cdaa"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "case b; tauto.",
            "VernacExtend",
            "f769e95c737e4cd95317e028126f48190b449533"
        ],
        [
            "simpl in H1;rewrite andb_true_iff,andb_true_iff in H1.",
            "VernacExtend",
            "fc2cec4069152b0e62ba78a12510b6083296d36b"
        ],
        [
            "case l; trivial; try tauto; intros.",
            "VernacExtend",
            "9417974ea6ab4afa29997ec4f67f4a2e9cc12261"
        ],
        [
            "case b; tauto.",
            "VernacExtend",
            "f769e95c737e4cd95317e028126f48190b449533"
        ],
        [
            "repeat rewrite andb_true_iff in H.",
            "VernacExtend",
            "0df8ad931dae5a1fc47d5a0f879135064c015f30"
        ],
        [
            "assert (unary (hd nil vnl) = true).",
            "VernacExtend",
            "a7f9e9e5e16ce8bfeccc7e3311f2f4cb07f1f127"
        ],
        [
            "apply forallb_hd; trivial.",
            "VernacExtend",
            "6df9309e9f61bf1e41094f01cedec63f816ec55c"
        ],
        [
            "induction (hd nil vnl); simpl in *; intros.",
            "VernacExtend",
            "819ea7fb7872507c9ce70a554d527fe6385bfa49"
        ],
        [
            "apply IHe1; [ tauto | apply forallb_tl | ]; trivial.",
            "VernacExtend",
            "e68880f910e2894abbb44f292345aaf2dfd4dacc"
        ],
        [
            "case a.",
            "VernacExtend",
            "9bc0f7a1b1c171bd37232c7a1605304b61d5baa4"
        ],
        [
            "rewrite andb_true_iff in H2.",
            "VernacExtend",
            "abac8c347f936e6fef8caa46d894608cb57dc960"
        ],
        [
            "apply IHe3; [ tauto | | ]; simpl.",
            "VernacExtend",
            "4d303dd837b4cda777865740478b3c5edc381ab4"
        ],
        [
            "rewrite andb_true_iff; split; [tauto | ].",
            "VernacExtend",
            "90dd96e5fc0bc1e72e7525cf778f188057838593"
        ],
        [
            "apply forallb_tl; trivial.",
            "VernacExtend",
            "3e70bf3857578db8d889c5c295d2a210b36233e0"
        ],
        [
            "rewrite andb_true_iff; split.",
            "VernacExtend",
            "f081002c8428ebb34cec9f228c54d0d647dda6ab"
        ],
        [
            "apply IHl; tauto.",
            "VernacExtend",
            "016b224e56a5b05b7ffe58aa22d8e91300abed82"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite andb_true_iff in H2.",
            "VernacExtend",
            "abac8c347f936e6fef8caa46d894608cb57dc960"
        ],
        [
            "apply IHe2; [ tauto | | ]; simpl.",
            "VernacExtend",
            "5f24fe0f1d8b62b09192ff6c9cee7ab382117c4c"
        ],
        [
            "rewrite andb_true_iff; split; [tauto | ].",
            "VernacExtend",
            "90dd96e5fc0bc1e72e7525cf778f188057838593"
        ],
        [
            "apply forallb_tl; trivial.",
            "VernacExtend",
            "3e70bf3857578db8d889c5c295d2a210b36233e0"
        ],
        [
            "rewrite andb_true_iff; split.",
            "VernacExtend",
            "f081002c8428ebb34cec9f228c54d0d647dda6ab"
        ],
        [
            "apply IHl; tauto.",
            "VernacExtend",
            "016b224e56a5b05b7ffe58aa22d8e91300abed82"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "repeat rewrite andb_true_iff in H1.",
            "VernacExtend",
            "ea603ac58a30bd94eb90840656d33ed5baa149f8"
        ],
        [
            "apply IHe; [ tauto | | ].",
            "VernacExtend",
            "4168ac7869ee25ebf941555f89a38cf2a222710d"
        ],
        [
            "apply forallb_map; auto; intros.",
            "VernacExtend",
            "6799e7dd2627b80666f7eccba953d01722016061"
        ],
        [
            "apply H; trivial.",
            "VernacExtend",
            "2a60de8b8e6fbb9b42656d3eefbf1ae6284bbdbf"
        ],
        [
            "rewrite forallb_forall in H1.",
            "VernacExtend",
            "326979549b54255e48701d7feef4949c92e8ab31"
        ],
        [
            "decompose [and] H1.",
            "VernacExtend",
            "3366722f50b76550e4a977302861289e131c571d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "apply forallb_map; auto; intros.",
            "VernacExtend",
            "6799e7dd2627b80666f7eccba953d01722016061"
        ],
        [
            "apply H0; trivial.",
            "VernacExtend",
            "51e75bf599119e9e6a7f155f3887d20ff5b6e843"
        ],
        [
            "decompose [and] H1.",
            "VernacExtend",
            "3366722f50b76550e4a977302861289e131c571d"
        ],
        [
            "rewrite forallb_forall in H6.",
            "VernacExtend",
            "76ef63e84adc8f7ccaddd869e7f37d9a241b0c7d"
        ],
        [
            "auto.",
            "VernacExtend",
            "1f09da0addd069b3b65326f8c71967acc1e985af"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma zero_correct n s l1 l2: length (sem (zero_e n s) l1 l2) = 0.",
            "VernacStartTheoremProof",
            "ae1adc562259fd2f1e601c4b0b1767c238a9b897"
        ],
        [
            "intros; simpl; trivial.",
            "VernacExtend",
            "30948a0d93eb6288b161919b38b0b5eae13afa29"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition one_e (n s:nat) : BC := comp n s (comp 0 0 (succ true) nil (zero :: nil)) nil nil.",
            "VernacDefinition",
            "012c5ba92db8f118673792f155025a562202e961"
        ],
        [
            "Lemma one_correct n s l1 l2: length (sem (one_e n s) l1 l2) = 1.",
            "VernacStartTheoremProof",
            "5798ef712e33c3f160ff038ebba21ce8ef4b1179"
        ],
        [
            "intros; simpl; trivial.",
            "VernacExtend",
            "30948a0d93eb6288b161919b38b0b5eae13afa29"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition succ_e : BC := succ true.",
            "VernacDefinition",
            "ed735d527e5315fdc4f3f2ea647e910a2b7f7ea6"
        ],
        [
            "Lemma succ_correct : forall n, length (sem succ_e nil [n]) = S (length n).",
            "VernacStartTheoremProof",
            "dde82b77fbeb8c4021712940f0a713a0ac2065b0"
        ],
        [
            "intros; simpl; trivial.",
            "VernacExtend",
            "30948a0d93eb6288b161919b38b0b5eae13afa29"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint nat2BC (n s x:nat) : BC := match x with | 0 => zero_e n s | S x' => comp n s succ_e nil [nat2BC n s x'] end.",
            "VernacFixpoint",
            "b6d03ce7adcbec9bc986aed0af9af821cf4d5096"
        ],
        [
            "Lemma nat2BC_arities : forall n s x, arities (nat2BC n s x) = ok_arities n s.",
            "VernacStartTheoremProof",
            "ab2d066b3aa146c37d720a042edc4ad98e1eadc7"
        ],
        [
            "induction x as [ | x IH].",
            "VernacExtend",
            "62fff01c2acc9e04bd712cc9b542bc882c5f698a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "simpl nat2BC.",
            "VernacExtend",
            "7e4161a9c4abfaa64aacc3bbded59e8bedcb39ce"
        ],
        [
            "rewrite comp_arities.",
            "VernacExtend",
            "9e52d9768e2e3873a9ed2ba8eea31c53fd667373"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "simpl; trivial.",
            "VernacExtend",
            "700c92fe710eacabdba1c0df7cd3aac36ec19aa1"
        ],
        [
            "simpl; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma nat2BC_correct : forall n s x nl sl, length (sem (nat2BC n s x) nl sl) = x.",
            "VernacStartTheoremProof",
            "0ced18c74b1cd024ffe189a85d6fdf2611016e82"
        ],
        [
            "induction x as [ | x IH].",
            "VernacExtend",
            "62fff01c2acc9e04bd712cc9b542bc882c5f698a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros nl sl.",
            "VernacExtend",
            "07c6b4d0ac6042923cc7f20bb4f85b6193d374e2"
        ],
        [
            "simpl nat2BC.",
            "VernacExtend",
            "7e4161a9c4abfaa64aacc3bbded59e8bedcb39ce"
        ],
        [
            "rewrite sem_comp.",
            "VernacExtend",
            "63a4bcd0c747e5e4cd031381dad992dfb675ba60"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite IH.",
            "VernacExtend",
            "dbf4f765dab656705bc8df8600fa3b3017a20858"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Opaque succ_e.",
            "VernacSetOpacity",
            "46dbed03860f2ac07f92d3b6afb777507e9e317a"
        ],
        [
            "Definition plus_e : BC := rec (proj 0 1 0) (comp 1 2 succ_e nil ((proj 1 2 1) :: nil)) (comp 1 2 succ_e nil ((proj 1 2 1) :: nil)).",
            "VernacDefinition",
            "ad9f265202c3d55574cfb50ee50db24fd4b03d29"
        ],
        [
            "Lemma plus_correct : forall m n, length (sem plus_e [m] [n]) = length m + length n.",
            "VernacStartTheoremProof",
            "73595bec251d9b9fdbf35a6d73e4843e24194056"
        ],
        [
            "induction m; simpl in *; intros; trivial.",
            "VernacExtend",
            "557e3efb571711345569b81cf93759db17fc2af4"
        ],
        [
            "case a; simpl; rewrite succ_correct; auto.",
            "VernacExtend",
            "fce185f0dfd3c533797a8305692b3957ec7389b5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Opaque plus_e.",
            "VernacSetOpacity",
            "6276cdb120997df086cdc76d0037c357cb1a283c"
        ],
        [
            "Fixpoint plusl_e (n:nat)(el:list BC) : BC := match el with | nil => zero_e n 0 | e' :: el' => comp n 0 plus_e [e'] [plusl_e n el'] end.",
            "VernacFixpoint",
            "1df6f385ec5ed37efc3163285ac3854286e8e4cd"
        ],
        [
            "Lemma plusl_arities n el : andl (fun e => arities e = ok_arities n 0) el -> arities (plusl_e n el) = ok_arities n 0.",
            "VernacStartTheoremProof",
            "f22f3b23603906e12a61272f1fc248383e644df4"
        ],
        [
            "induction el as [ | e' el' IH].",
            "VernacExtend",
            "239b417169612aaffb3b087ef46ae9c5865871e7"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intro H.",
            "VernacExtend",
            "a9535760040671e8853f25f0b4e9eda38ca392a6"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "simpl plusl_e.",
            "VernacExtend",
            "725ae0ad097b35dc991a28f8c3ae2f86928b90e6"
        ],
        [
            "rewrite comp_arities.",
            "VernacExtend",
            "9e52d9768e2e3873a9ed2ba8eea31c53fd667373"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "simpl; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "simpl; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma plusl_correct : forall n nl el, length (sem (plusl_e n el) nl nil) = plusl (map (fun e => length (sem e nl nil)) el).",
            "VernacStartTheoremProof",
            "38d678b5efa79dd81f6258d53c5f417b536d5cae"
        ],
        [
            "induction el as [ | e el IH]; simpl.",
            "VernacExtend",
            "46fb080c30549d0bc7f1064d457b90d0b1207d99"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite plus_correct, IH.",
            "VernacExtend",
            "6ef2e512887cd2f44c42741e2cc8ed1486ea1f6f"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation or_e := plus_e (only parsing).",
            "VernacSyntacticDefinition",
            "da370ec0e1692668bc4ca17e9f0b3b9b4196468e"
        ],
        [
            "Lemma or_correct : forall b1 b2, bs2bool (sem or_e [bool2bs b1] [bool2bs b2]) = b1 || b2.",
            "VernacStartTheoremProof",
            "2ba07830d5352aace8e9361005ef866cb3a3d791"
        ],
        [
            "intros [ | ] [ | ]; reflexivity.",
            "VernacExtend",
            "6326fb78f3c4c7b4e23b9ced8b67d5a2bc3960c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition mult_e : BC := rec (zero_e 1 0) (comp 2 1 plus_e ((proj 2 0 1) :: nil) ((proj 2 1 2) :: nil)) (comp 2 1 plus_e ((proj 2 0 1) :: nil) ((proj 2 1 2) :: nil)).",
            "VernacDefinition",
            "8fcae37f63ed778ec04dd754788ac6c3e11d472a"
        ],
        [
            "Lemma mult_correct : forall m n, length (sem mult_e [m; n] nil) = (length m) * (length n).",
            "VernacStartTheoremProof",
            "a4d7b9dacd71d676a9ff9c4c3c901415af6a5c05"
        ],
        [
            "induction m; intro n; trivial; simpl in *.",
            "VernacExtend",
            "e20533d110be43fc9fd0804524c71a5ad58cad1c"
        ],
        [
            "case a; rewrite plus_correct; auto.",
            "VernacExtend",
            "18cb258171cbf63fc2a30cf376de0672244a84f5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Opaque mult_e.",
            "VernacSetOpacity",
            "547cfffab45a9d5fbe92db8b5696dd156f1cfc67"
        ],
        [
            "Notation and_e := mult_e (only parsing).",
            "VernacSyntacticDefinition",
            "e6744efdae7a606e7008b0045ffb338ca43e85e2"
        ],
        [
            "Lemma and_correct : forall b1 b2, bs2bool (sem and_e [bool2bs b1; bool2bs b2] nil) = b1 && b2.",
            "VernacStartTheoremProof",
            "8e053ba746e6b8a892e9747588dc77e1c67f01f8"
        ],
        [
            "intros [ | ] [ | ]; reflexivity.",
            "VernacExtend",
            "6326fb78f3c4c7b4e23b9ced8b67d5a2bc3960c2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition minus_rev_e : BC := rec (proj 0 1 0) (comp 1 2 pred nil ((proj 1 2 1) :: nil)) (comp 1 2 pred nil ((proj 1 2 1) :: nil)).",
            "VernacDefinition",
            "dc50ddf8ec7430ceecef21cb38afe3e3e3b81f23"
        ],
        [
            "Lemma minus_rev_correct : forall m n, length (sem minus_rev_e [n] [m]) = (length m) - (length n).",
            "VernacStartTheoremProof",
            "4407206af4946b329f869095616a578881cb9564"
        ],
        [
            "induction n; simpl in *; [ omega | ].",
            "VernacExtend",
            "bae3e20ce454150cd33036945636c58a165c776d"
        ],
        [
            "case a; rewrite length_tail, IHn; omega.",
            "VernacExtend",
            "ca47613cad27e03b04dd8c32ba0e0c9be306d20f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Opaque minus_rev_e.",
            "VernacSetOpacity",
            "2dc6d4dff8ab85c3b98069f1ea5bfe1a501fd425"
        ],
        [
            "Notation lt_e := minus_rev_e.",
            "VernacSyntacticDefinition",
            "8f0bd844344499e392e50bb740455035ff5c9b98"
        ],
        [
            "Lemma lt_correct v1 v2: bs2bool (sem lt_e [v1] [v2]) = true -> length v1 < length v2.",
            "VernacStartTheoremProof",
            "a9f58911fa5f9d29a9a262a2ca445c95d7f6345a"
        ],
        [
            "intros; simpl in *.",
            "VernacExtend",
            "4204ebccd80c56fcc86bac7d33524a002a2d3ee2"
        ],
        [
            "apply bs_nat2bool_true in H.",
            "VernacExtend",
            "9c1f4780f0c22aaeabed7552c9bd9b8fc9aea9a3"
        ],
        [
            "rewrite minus_rev_correct in H; omega.",
            "VernacExtend",
            "c92a4727022dd6664f95b7f3e3f8930734eac376"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma unary_tl l : unary l = true -> unary (tl l) = true.",
            "VernacStartTheoremProof",
            "e994831a3279d84629aa831a1fb5414851b345a7"
        ],
        [
            "intros.",
            "VernacExtend",
            "1b4df911c5412d25278e46f48402870ba987996b"
        ],
        [
            "destruct l; simpl; trivial.",
            "VernacExtend",
            "75c9cab011dcd0798fca429963b6d42722368b2b"
        ],
        [
            "simpl in H.",
            "VernacExtend",
            "78dad51b2bb1130f71851d1e55489020824f59f6"
        ],
        [
            "rewrite andb_true_iff in H; tauto.",
            "VernacExtend",
            "617276d2c0a416a96cbfbed37e26e1f8a0c41a46"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_correct_conv_bool v1 v2: unary v2 = true -> length v1 < length v2 -> bs2bool (sem lt_e [v1] [v2]) = true.",
            "VernacStartTheoremProof",
            "6621368bdc6ca379a45ac490807ba3ca388914ca"
        ],
        [
            "intros; simpl in *.",
            "VernacExtend",
            "4204ebccd80c56fcc86bac7d33524a002a2d3ee2"
        ],
        [
            "apply bs_nat2bool_true_conv.",
            "VernacExtend",
            "25f52369222aa938ba8d32b31ae1fe5af9543182"
        ],
        [
            "Transparent lt_e.",
            "VernacSetOpacity",
            "6ea016a7f97151712a6f0173f2e155774e8a9cfe"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "Opaque lt_e.",
            "VernacSetOpacity",
            "983d7b17d10dd7f150e76db7848e27f6e32ce97f"
        ],
        [
            "induction v1; simpl; trivial.",
            "VernacExtend",
            "b9b0460d131945c70f53f84ad492f163ca0de399"
        ],
        [
            "case a.",
            "VernacExtend",
            "9bc0f7a1b1c171bd37232c7a1605304b61d5baa4"
        ],
        [
            "apply unary_tl.",
            "VernacExtend",
            "6fa1590a21c36f4348b739f75d6fad35328e0b42"
        ],
        [
            "apply IHv1.",
            "VernacExtend",
            "ec1aa0b4c14c3b946c9193c38cb66f1cd1412a39"
        ],
        [
            "simpl in *; omega.",
            "VernacExtend",
            "2e505872d892cb5022bef5b246ceb26cdd84b133"
        ],
        [
            "apply unary_tl.",
            "VernacExtend",
            "6fa1590a21c36f4348b739f75d6fad35328e0b42"
        ],
        [
            "apply IHv1.",
            "VernacExtend",
            "ec1aa0b4c14c3b946c9193c38cb66f1cd1412a39"
        ],
        [
            "simpl in *; omega.",
            "VernacExtend",
            "2e505872d892cb5022bef5b246ceb26cdd84b133"
        ],
        [
            "rewrite minus_rev_correct.",
            "VernacExtend",
            "8dadecc42dd49c8e6037ab50778579069e01cefb"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_correct_conv v1 v2 : unary v1 = true -> unary v2 = true -> bs2bool (sem lt_e [v1] [v2]) = false -> length v2 <= length v1.",
            "VernacStartTheoremProof",
            "fa0b8defba34cc26bcee8b7bc48ab3fe508079c0"
        ],
        [
            "intros; trivial.",
            "VernacExtend",
            "29cbd854258d508d4388ac0a9ccaa5dfbd8db0d6"
        ],
        [
            "apply bs_nat2bool_false in H1.",
            "VernacExtend",
            "1d749aaf03c5ba59a9088d0e373c3cb69ff9cf6b"
        ],
        [
            "rewrite minus_rev_correct in H1.",
            "VernacExtend",
            "408c6092e9d69c32599b7ecfcc6c144d28dfcb96"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply preservation; simpl; try reflexivity; rewrite andb_true_iff; auto.",
            "VernacExtend",
            "faf7a452b2cf6bd06438017e7212b3d6f1fca69b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma lt_correct_conv_nil v1 v2 : unary v1 = true -> unary v2 = true -> sem lt_e [v1] [v2] = nil -> length v2 <= length v1.",
            "VernacStartTheoremProof",
            "55ac2e56ecdaef952b3c5f16330a0072a92549f2"
        ],
        [
            "intros; trivial.",
            "VernacExtend",
            "29cbd854258d508d4388ac0a9ccaa5dfbd8db0d6"
        ],
        [
            "assert (bs2bool (sem lt_e [v1] [v2]) = false).",
            "VernacExtend",
            "496e9be14e1a5d495ec09ffc5488d6fd6ac91ce3"
        ],
        [
            "rewrite H1; simpl; trivial.",
            "VernacExtend",
            "6f70e367992f35ef5afe13f53c1f9a99afe48f91"
        ],
        [
            "apply bs_nat2bool_false in H2.",
            "VernacExtend",
            "09d9ed2f87acd50d379bca2774a7c64fbe3f59c7"
        ],
        [
            "rewrite minus_rev_correct in H2.",
            "VernacExtend",
            "dfc8faf275d5a19f5ffb86cef6bedc2de8e48b2e"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply preservation; simpl; try reflexivity; rewrite andb_true_iff; auto.",
            "VernacExtend",
            "faf7a452b2cf6bd06438017e7212b3d6f1fca69b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition le_e : BC := comp 1 1 lt_e (proj 1 0 0 :: nil) (comp 1 1 succ_e nil (proj 1 1 1 :: nil) :: nil).",
            "VernacDefinition",
            "ce86493eba5d47a237b6393ece55ea349fd874d6"
        ],
        [
            "Lemma le_correct : forall v1 v2, bs2bool (sem le_e [v1] [v2]) = true -> length v1 <= length v2.",
            "VernacStartTheoremProof",
            "dd4973bf80f712ac080c419d4bf5f4a68798117c"
        ],
        [
            "intros v1 v2 H; simpl in H.",
            "VernacExtend",
            "36088eff27e27f5f8d24afeb11927311a119632f"
        ],
        [
            "apply lt_correct in H.",
            "VernacExtend",
            "ad503a097f52af1fbab6ae2968511ec5596ab9c5"
        ],
        [
            "rewrite succ_correct in H.",
            "VernacExtend",
            "d081282d9ac999d101c9fbb240e6d3da256f4e3d"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_correct_conv v1 v2 : unary v1 = true -> unary v2 = true -> bs2bool (sem le_e [v1] [v2]) = false -> length v2 < length v1.",
            "VernacStartTheoremProof",
            "9c7bc6e2ec06a60d03789512ce377861150b017e"
        ],
        [
            "intros; trivial.",
            "VernacExtend",
            "29cbd854258d508d4388ac0a9ccaa5dfbd8db0d6"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "apply lt_correct_conv in H1.",
            "VernacExtend",
            "c6801f523303ff7ee341c137fc5c8c17bc171e66"
        ],
        [
            "rewrite succ_correct in H1.",
            "VernacExtend",
            "7526edcd3128b567bd4570f5ebc1e7ec294db421"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply preservation; simpl; try reflexivity; rewrite andb_true_iff; auto.",
            "VernacExtend",
            "faf7a452b2cf6bd06438017e7212b3d6f1fca69b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma le_correct_conv_nil v1 v2 : unary v1 = true -> unary v2 = true -> sem le_e [v1] [v2] = nil -> S (length v2) <= length v1.",
            "VernacStartTheoremProof",
            "324d74aa2712a4885e28d027396cc36201516a93"
        ],
        [
            "intros; trivial.",
            "VernacExtend",
            "29cbd854258d508d4388ac0a9ccaa5dfbd8db0d6"
        ],
        [
            "simpl in H1.",
            "VernacExtend",
            "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
        ],
        [
            "apply lt_correct_conv_nil in H1.",
            "VernacExtend",
            "93c76a9c74fdede90a27f6bdee84d6c6e502fcf9"
        ],
        [
            "rewrite succ_correct in H1.",
            "VernacExtend",
            "7526edcd3128b567bd4570f5ebc1e7ec294db421"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "apply preservation; simpl; try reflexivity; rewrite andb_true_iff; auto.",
            "VernacExtend",
            "faf7a452b2cf6bd06438017e7212b3d6f1fca69b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Opaque le_e.",
            "VernacSetOpacity",
            "6204dfb22291de96158cde9fb48261ef9c3c66f2"
        ],
        [
            "Notation minus_e := (inv_e (from_11_to_20 minus_rev_e)) (only parsing).",
            "VernacSyntacticDefinition",
            "145890e55c216765abf9436125db5263ffc92fb3"
        ],
        [
            "Lemma minus_correct : forall m n, length (sem minus_e [n; m] nil) = (length n) - (length m).",
            "VernacStartTheoremProof",
            "15a8c2903bbd3ea15671486f1164d39ac3204d66"
        ],
        [
            "intros; simpl; rewrite minus_rev_correct; trivial.",
            "VernacExtend",
            "7ae502c07bcb0c5656ddea90b55272138b84a85b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition max_e : BC := comp 2 0 (rec (proj 2 0 0) (proj 3 1 2) (proj 3 1 2) ) [ P'_e; proj 2 0 0; proj 2 0 1] nil.",
            "VernacDefinition",
            "d9c2ca323d8664e2d7a62bd281eb8a6a5fdd3d60"
        ],
        [
            "Lemma max_correct_l v1 v2 : length v2 <= length v1 -> sem max_e [v1; v2] nil = v1.",
            "VernacStartTheoremProof",
            "a35cb089afdde3187f7b236f6a2921cf6574fbaa"
        ],
        [
            "simpl; intros.",
            "VernacExtend",
            "429a59199da524088af55673600740ccc58db31e"
        ],
        [
            "rewrite P_correct; unfold P.",
            "VernacExtend",
            "cd6d9637300675dd5381ddb77220a96404fbc836"
        ],
        [
            "rewrite skipn_nil; simpl; trivial.",
            "VernacExtend",
            "98314c36f0c3818f5d0d4cf91441850fd2ebb326"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma max_correct_r v1 v2 : length v1 < length v2 -> sem max_e [v1; v2] nil = v2.",
            "VernacStartTheoremProof",
            "79661dd943891fd60f63cdb2fe4a0777edbfe38a"
        ],
        [
            "simpl; intros.",
            "VernacExtend",
            "429a59199da524088af55673600740ccc58db31e"
        ],
        [
            "rewrite P_correct; unfold P.",
            "VernacExtend",
            "cd6d9637300675dd5381ddb77220a96404fbc836"
        ],
        [
            "case_eq ( (skipn (length v1) v2) ); simpl; intros.",
            "VernacExtend",
            "1ab05c73605cf62598ecb824f3dbf4df2ab4f383"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply le_not_lt.",
            "VernacExtend",
            "f8e2533dc073c956a7b1c186bc0eabb50b93a8cf"
        ],
        [
            "apply skipn_nil_length; trivial.",
            "VernacExtend",
            "fe603d6f47fa8b27f8e6b41e59021b75297ce707"
        ],
        [
            "case b; trivial.",
            "VernacExtend",
            "8b7c34b5fda74c40ab94d870acd5c297f0febc4d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint div' (q y:nat)(x:nat) : nat := match q with | 0 => 0 | S q' => if leb (q' * y) x then q' else div' q' y x end.",
            "VernacFixpoint",
            "16e0f6f60385027d669441ede5a6ccee4ebdfacb"
        ],
        [
            "Lemma div'_coq_correct : forall (q x y : nat) (Hy:y>0), (q > proj1_sig (quotient y Hy x) -> div' q y x = proj1_sig (quotient y Hy x)) /\\ (q <= proj1_sig (quotient y Hy x) -> div' q y x = Peano.pred q).",
            "VernacStartTheoremProof",
            "38788b634e6dbd61ac2ca40ff6e64aca9850bf54"
        ],
        [
            "intros q x y Hy.",
            "VernacExtend",
            "169157813f1939162a4f807f7d656dc546758062"
        ],
        [
            "destruct (quotient y Hy x) as (qu & r & H1 & H2); simpl.",
            "VernacExtend",
            "6e818d899d95fdb705948b1e75de7eb17757c6a0"
        ],
        [
            "induction q as [ | q' IH]; simpl; [ omega | ].",
            "VernacExtend",
            "82e2d5ecf5b37520073e2c9e5b7b9f2f1b015f1a"
        ],
        [
            "case_eq (leb (q' * y) x); intro H.",
            "VernacExtend",
            "d331742c626494c6b7f79e33c3fc9e39162a8c90"
        ],
        [
            "clear IH.",
            "VernacExtend",
            "daecf0ea8665f0f6fd551644d47b5ce1d93aef1e"
        ],
        [
            "apply leb_complete in H; split; subst x; intros; trivial.",
            "VernacExtend",
            "943c28edf2fc2169c99f8ed3966396413bf4d78d"
        ],
        [
            "assert (qu <= q') as H1 by omega; clear H0.",
            "VernacExtend",
            "b71d2544d74dc62d759a83123e41ecfab8f08516"
        ],
        [
            "apply le_lt_or_eq in H1.",
            "VernacExtend",
            "50a327a9af7fe516c2de04ca8d2c57839772bf85"
        ],
        [
            "destruct H1; auto.",
            "VernacExtend",
            "7a20f9482fab69ae7a191b5e13d9ac465bf5b222"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply lt_not_le.",
            "VernacExtend",
            "153fbf8b5dfa799e22f198ba7d37d620ab119bf0"
        ],
        [
            "apply lt_le_trans with (qu * y + y); [ omega | ].",
            "VernacExtend",
            "3148408943ac823340148d30b4cfbd3474db6dda"
        ],
        [
            "rewrite <- mult_succ_l.",
            "VernacExtend",
            "b1d49ff8060a11d85c245a76f90c2b0ada6422a2"
        ],
        [
            "apply mult_le_compat_r; omega.",
            "VernacExtend",
            "03717d0db54ded05c6a03ddeb891b35b96b0d206"
        ],
        [
            "apply leb_complete_conv in H; split; intros; subst.",
            "VernacExtend",
            "bad3739bdc283c6b20598e042cf397f114e50607"
        ],
        [
            "assert (q'=qu \\/ q'>qu) as [H3 | H3]; subst; omega.",
            "VernacExtend",
            "822c65aebc36992c719e15bee3d166b2c3a90777"
        ],
        [
            "assert (S q' = qu \\/ S q' < qu) as [H4 | H4] by omega; subst.",
            "VernacExtend",
            "d308d9ad1e5644178b9a3356f5b5f8828b681388"
        ],
        [
            "contradict H.",
            "VernacExtend",
            "0da4c7d87991a3ed628c796c81ed5112e2aac241"
        ],
        [
            "apply le_not_lt; simpl; omega.",
            "VernacExtend",
            "b46580f58b3c9d8235cfe1c514a2bee79cca0ba9"
        ],
        [
            "contradict H4.",
            "VernacExtend",
            "08934dd814b305453c81c048bb601ff2a665b033"
        ],
        [
            "apply le_not_lt.",
            "VernacExtend",
            "f8e2533dc073c956a7b1c186bc0eabb50b93a8cf"
        ],
        [
            "apply mult_S_le_reg_l with (Peano.pred y).",
            "VernacExtend",
            "63b27315e5ef409c51f4e6d093dcd61b6729f359"
        ],
        [
            "rewrite <- S_pred with (m:=0), mult_comm, (mult_comm y (S q')).",
            "VernacExtend",
            "c00a2086057acba7438a2ca4185bb9e9640145c6"
        ],
        [
            "simpl; omega.",
            "VernacExtend",
            "e39ee197bcf8e665eb70095a296ce867a0e4d7ae"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition div (x y:nat) : nat := div' (S x) y x.",
            "VernacDefinition",
            "9d0eb8ecfba0d4cc33b14bbdc66f5fbd2b9e17b6"
        ],
        [
            "Lemma div_coq_correct : forall (x y:nat) (Hy:y>0), div x y = proj1_sig (quotient y Hy x).",
            "VernacStartTheoremProof",
            "dccf320aae52568801e94afdbb1c2e26954729a9"
        ],
        [
            "unfold div; intros x y Hy.",
            "VernacExtend",
            "deca099f88762e576ad6b82fc78744b2630ed8e6"
        ],
        [
            "generalize (div'_coq_correct (S x) x y Hy).",
            "VernacExtend",
            "181a38d381f4b3bc5a3531137c76289de8ecfdf0"
        ],
        [
            "destruct (quotient y Hy x) as (q & r & H1 & H2); simpl.",
            "VernacExtend",
            "4a9df0fad88e5d1902822aa4cde055e0eeadcb8a"
        ],
        [
            "intros [H3 _].",
            "VernacExtend",
            "2c9fa3351702af7b19d74b06cf065149a37a710e"
        ],
        [
            "apply H3; subst x.",
            "VernacExtend",
            "29100fbfa67aa2023849a206b68153ae9ed09104"
        ],
        [
            "apply le_gt_S.",
            "VernacExtend",
            "3316c5b0a74131421e9f7b0457715d8ffa8280c2"
        ],
        [
            "apply le_trans with (q*y); [ | omega ].",
            "VernacExtend",
            "10ab4032e49a994fe3dd4b6ebdb77a35f51d302d"
        ],
        [
            "rewrite <- (mult_1_r q) at 1.",
            "VernacExtend",
            "eae8276d62f9edefc94aeb457e0bc6141eb3bf12"
        ],
        [
            "apply mult_le_compat_l; omega.",
            "VernacExtend",
            "2c6533507c88af1b3aec07c97521dbe284e7a372"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition div'_e : BC := rec (zero_e 1 1) (comp 2 2 cond nil [comp 2 2 le_e [comp 2 0 mult_e [proj 2 0 0; proj 2 0 1] nil] [proj 2 2 3]; proj 2 2 2; proj 2 2 0; proj 2 2 2]) (comp 2 2 cond nil [comp 2 2 le_e [comp 2 0 mult_e [proj 2 0 0; proj 2 0 1] nil] [proj 2 2 3]; proj 2 2 2; proj 2 2 0; proj 2 2 2]).",
            "VernacDefinition",
            "3a781c28c243709f327633d38a2de4febb9586bd"
        ],
        [
            "Lemma hd_cons l a l' : l = a :: l' -> bs2bool l = a.",
            "VernacStartTheoremProof",
            "27ab020b3cd12c23fc394d54c1f8f945bf3043c2"
        ],
        [
            "intros; subst; trivial.",
            "VernacExtend",
            "c3e17ac5c20cfcbd1b387a5bdb3c82da5db08f86"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac elim_if := match goal with | |- context [if ?c then ?c1 else ?c2] => case_eq c end.",
            "VernacExtend",
            "2a68c8a46b35906707ba401100c67d3c51ea0559"
        ],
        [
            "Lemma div'_correct v1 v2 v3 : unary v1 = true -> unary v2 = true -> unary v3 = true -> length (sem div'_e [v1;v2] [v3]) = div' (length v1) (length v2) (length v3).",
            "VernacStartTheoremProof",
            "5981df32d60881934a04f91c636053ca0a999e90"
        ],
        [
            "intros; induction v1; simpl in *; intros; trivial.",
            "VernacExtend",
            "e467b893c7d1417d29fc302119eef7e5424c5cef"
        ],
        [
            "rewrite andb_true_iff in H.",
            "VernacExtend",
            "1834897e3fa90313c295b40dff57d8cb25fa0d5d"
        ],
        [
            "case a; simpl.",
            "VernacExtend",
            "01ac7c991b4b7a293c2b72fb087c54813d9ed444"
        ],
        [
            "case_eq ( sem le_e [sem mult_e [v1; v2] nil] [v3] ); intros.",
            "VernacExtend",
            "3ace5d352f8327ee3eef007aa30296c7651c2292"
        ],
        [
            "rewrite IHv1; trivial.",
            "VernacExtend",
            "5d23ff0c200540a306c3141348ccb80964a72045"
        ],
        [
            "apply le_correct_conv_nil in H2.",
            "VernacExtend",
            "6f6478406cb6b6279bf39736565057cc7702fd5b"
        ],
        [
            "rewrite mult_correct in H2.",
            "VernacExtend",
            "acd56edfa2fa24a7e111a14609a082e7703e602f"
        ],
        [
            "rewrite leb_correct_conv; trivial.",
            "VernacExtend",
            "9adce962677f41c0d1109e86546fbca5a25575fc"
        ],
        [
            "apply preservation; trivial; simpl.",
            "VernacExtend",
            "3c503ac39eb053fe83abbf955095abf47c18b9b9"
        ],
        [
            "repeat rewrite andb_true_iff; tauto.",
            "VernacExtend",
            "e60b4f41249bc56f6aa6b1536295075501adbba4"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply hd_cons in H2.",
            "VernacExtend",
            "a78c3d9ec4180113819f9661b0bb98c27975d3fb"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "apply le_correct in H2.",
            "VernacExtend",
            "3de05518447ddc1176bdf494251b8d66dcf0f0af"
        ],
        [
            "rewrite mult_correct in H2.",
            "VernacExtend",
            "acd56edfa2fa24a7e111a14609a082e7703e602f"
        ],
        [
            "rewrite leb_correct; trivial.",
            "VernacExtend",
            "9b7bfbfb2a5c7b94e342797a88a685a6a0fe5edb"
        ],
        [
            "apply le_correct_conv in H2; trivial.",
            "VernacExtend",
            "f76859ddd7c32e15d8c5276a0354f3a1263aef49"
        ],
        [
            "simpl in IHv1; rewrite IHv1; clear IHv1; try tauto.",
            "VernacExtend",
            "6a354e5f15aac0e3d9e7ff67887d8f17f7fa3936"
        ],
        [
            "rewrite leb_correct_conv; trivial.",
            "VernacExtend",
            "9adce962677f41c0d1109e86546fbca5a25575fc"
        ],
        [
            "rewrite mult_correct in H2; trivial.",
            "VernacExtend",
            "4e2c61d5f6afe76c4a7d51f9ee6bebf90676f313"
        ],
        [
            "apply preservation; trivial; simpl.",
            "VernacExtend",
            "3c503ac39eb053fe83abbf955095abf47c18b9b9"
        ],
        [
            "do 2 rewrite andb_true_iff; tauto.",
            "VernacExtend",
            "4622adb6a15f9bf458863b188ffbd578bb7c294d"
        ],
        [
            "case_eq ( sem le_e [sem mult_e [v1; v2] nil] [v3] ); intros.",
            "VernacExtend",
            "3ace5d352f8327ee3eef007aa30296c7651c2292"
        ],
        [
            "rewrite IHv1; trivial.",
            "VernacExtend",
            "5d23ff0c200540a306c3141348ccb80964a72045"
        ],
        [
            "apply le_correct_conv_nil in H2.",
            "VernacExtend",
            "6f6478406cb6b6279bf39736565057cc7702fd5b"
        ],
        [
            "rewrite mult_correct in H2.",
            "VernacExtend",
            "acd56edfa2fa24a7e111a14609a082e7703e602f"
        ],
        [
            "rewrite leb_correct_conv; trivial.",
            "VernacExtend",
            "9adce962677f41c0d1109e86546fbca5a25575fc"
        ],
        [
            "apply preservation; trivial; simpl.",
            "VernacExtend",
            "3c503ac39eb053fe83abbf955095abf47c18b9b9"
        ],
        [
            "repeat rewrite andb_true_iff; tauto.",
            "VernacExtend",
            "e60b4f41249bc56f6aa6b1536295075501adbba4"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply hd_cons in H2.",
            "VernacExtend",
            "a78c3d9ec4180113819f9661b0bb98c27975d3fb"
        ],
        [
            "destruct b.",
            "VernacExtend",
            "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
        ],
        [
            "apply le_correct in H2.",
            "VernacExtend",
            "3de05518447ddc1176bdf494251b8d66dcf0f0af"
        ],
        [
            "rewrite mult_correct in H2.",
            "VernacExtend",
            "acd56edfa2fa24a7e111a14609a082e7703e602f"
        ],
        [
            "rewrite leb_correct; trivial.",
            "VernacExtend",
            "9b7bfbfb2a5c7b94e342797a88a685a6a0fe5edb"
        ],
        [
            "apply le_correct_conv in H2; trivial.",
            "VernacExtend",
            "f76859ddd7c32e15d8c5276a0354f3a1263aef49"
        ],
        [
            "simpl in IHv1; rewrite IHv1; clear IHv1; try tauto.",
            "VernacExtend",
            "6a354e5f15aac0e3d9e7ff67887d8f17f7fa3936"
        ],
        [
            "rewrite leb_correct_conv; trivial.",
            "VernacExtend",
            "9adce962677f41c0d1109e86546fbca5a25575fc"
        ],
        [
            "rewrite mult_correct in H2; trivial.",
            "VernacExtend",
            "4e2c61d5f6afe76c4a7d51f9ee6bebf90676f313"
        ],
        [
            "apply preservation; trivial; simpl.",
            "VernacExtend",
            "3c503ac39eb053fe83abbf955095abf47c18b9b9"
        ],
        [
            "do 2 rewrite andb_true_iff; tauto.",
            "VernacExtend",
            "4622adb6a15f9bf458863b188ffbd578bb7c294d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Opaque div'_e.",
            "VernacSetOpacity",
            "fb2e806b3d70619bb5c9a672ccd9c8abf8425f8c"
        ],
        [
            "Definition div_e : BC := comp 2 0 div'_e [comp 2 0 succ_e nil [proj 2 0 0]; proj 2 0 1] [proj 2 0 0].",
            "VernacDefinition",
            "d81f61244e4b4a8402656ba7acd8b34377e58156"
        ],
        [
            "Lemma div_correct v1 v2 : unary v1 = true -> unary v2 = true -> length (sem div_e [v1; v2] nil) = div (length v1) (length v2).",
            "VernacStartTheoremProof",
            "e4d4242bee74366da7a3283f8ae5fd7d4951d660"
        ],
        [
            "intros; simpl sem.",
            "VernacExtend",
            "411876d4f526243a32fddf1f72596a64ec68d3ce"
        ],
        [
            "rewrite div'_correct; trivial.",
            "VernacExtend",
            "f3a3bcd7a3f7e7a95dc7f614bc59691c150db62f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint scalar_e (a:nat)(n:nat)(e:BC) : BC := match a with | 0 => zero_e n 0 | S a' => comp n 0 plus_e [e] [scalar_e a' n e] end.",
            "VernacFixpoint",
            "61ad64d078c224a78879df3a1b19cbb2825646ed"
        ],
        [
            "Lemma scalar_arities : forall a n e, arities e = ok_arities n 0 -> arities (scalar_e a n e) = ok_arities n 0.",
            "VernacStartTheoremProof",
            "7e5c1b26c97f6f81cfbb0021cb139e8b9f41ac34"
        ],
        [
            "induction a as [ | a IH]; simpl.",
            "VernacExtend",
            "068f8992a2fd007eb23ae5b6cb865db2ae0cfab5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros n e H.",
            "VernacExtend",
            "e857bf078de6f640e304032d94f260b998e3486e"
        ],
        [
            "rewrite H, (IH _ _ H).",
            "VernacExtend",
            "3fe9faf08d56dc653848fafb8aa247b59f0c2abb"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- beq_nat_refl.",
            "VernacExtend",
            "6483e653b28875693c3c92037ba92da24c711ae3"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Opaque plus_e.",
            "VernacSetOpacity",
            "6276cdb120997df086cdc76d0037c357cb1a283c"
        ],
        [
            "Lemma scalar_correct : forall a n nl e, length (sem (scalar_e a n e) nl nil) = a * length (sem e nl nil).",
            "VernacStartTheoremProof",
            "7f74c55177af2f872c0084373fe269d63ceb17eb"
        ],
        [
            "induction a as [ | a IH]; simpl.",
            "VernacExtend",
            "068f8992a2fd007eb23ae5b6cb865db2ae0cfab5"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros n nl e.",
            "VernacExtend",
            "900092cb74e9514c1f3172078b476587816540ee"
        ],
        [
            "rewrite plus_correct, IH.",
            "VernacExtend",
            "6ef2e512887cd2f44c42741e2cc8ed1486ea1f6f"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint multl_e (n:nat)(el:list BC) : BC := match el with | nil => one_e n 0 | e' :: el' => comp n 0 mult_e [e'; multl_e n el'] nil end.",
            "VernacFixpoint",
            "eb4a58e54a11237134f124901f15c3501591347c"
        ],
        [
            "Lemma multl_arities : forall el n, andl (fun e => arities e = ok_arities n 0) el -> arities (multl_e n el) = ok_arities n 0.",
            "VernacStartTheoremProof",
            "f303fdf3a91f1f77e8aaa5b522e37840ab32cc81"
        ],
        [
            "induction el as [ | e el IH]; simpl.",
            "VernacExtend",
            "46fb080c30549d0bc7f1064d457b90d0b1207d99"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "intros n [H1 H2].",
            "VernacExtend",
            "3f9f35bca84c300e307379a744878b61e339990c"
        ],
        [
            "rewrite H1, (IH _ H2).",
            "VernacExtend",
            "2d5459049e2d8ea3f7de3af5e65406e802979482"
        ],
        [
            "simpl.",
            "VernacExtend",
            "1b93169f4cf876d207c1fab22a2347202ab48d85"
        ],
        [
            "rewrite <- beq_nat_refl.",
            "VernacExtend",
            "6483e653b28875693c3c92037ba92da24c711ae3"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Opaque mult_e.",
            "VernacSetOpacity",
            "547cfffab45a9d5fbe92db8b5696dd156f1cfc67"
        ],
        [
            "Lemma multl_correct : forall n nl el, length (sem (multl_e n el) nl nil) = multl (map (fun e => length (sem e nl nil)) el).",
            "VernacStartTheoremProof",
            "0167e957a33fa5279ea938706746bc436bf8831d"
        ],
        [
            "induction el as [ | e el IH]; simpl.",
            "VernacExtend",
            "46fb080c30549d0bc7f1064d457b90d0b1207d99"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "rewrite mult_correct, IH.",
            "VernacExtend",
            "23da809aee0b9d486bfc59cf9978630cb85d3407"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "preservation",
            "line_nb": 3,
            "steps": [
                {
                    "command": [
                        "induction e using BC_ind2; simpl; intros; trivial.",
                        "VernacExtend",
                        "c0b3f49843cffedfdefd98af27a32fc8da305711"
                    ]
                },
                {
                    "command": [
                        "case n; simpl.",
                        "VernacExtend",
                        "5a94ffc38bdc017e597460a75bae844cdd753e6e"
                    ]
                },
                {
                    "command": [
                        "apply forallb_nth; simpl; trivial.",
                        "VernacExtend",
                        "d992d065d2b29dd16fc3c78e7d2d130edeb40444"
                    ]
                },
                {
                    "command": [
                        "intros; case (leb i n0); apply forallb_nth; simpl; trivial.",
                        "VernacExtend",
                        "98718dceca45d21266f115c71577b4a5de4e5a09"
                    ]
                },
                {
                    "command": [
                        "subst; simpl; apply forallb_hd; simpl; trivial.",
                        "VernacExtend",
                        "88ce76441217c9ffd9a0d70fbae755ec7c830fac"
                    ]
                },
                {
                    "command": [
                        "apply forallb_tl; trivial.",
                        "VernacExtend",
                        "3e70bf3857578db8d889c5c295d2a210b36233e0"
                    ]
                },
                {
                    "command": [
                        "apply forallb_hd; simpl; trivial.",
                        "VernacExtend",
                        "1f6e681c066743ca84fcf3775fd211c8c6d2b40e"
                    ]
                },
                {
                    "command": [
                        "destruct vsl; simpl; trivial.",
                        "VernacExtend",
                        "a502dcbf9234fb33d9238d5559c970341257bb04"
                    ]
                },
                {
                    "command": [
                        "simpl in H1;rewrite andb_true_iff in H1.",
                        "VernacExtend",
                        "8fae3759c0fd715177d4038ffdb0b013935787ee"
                    ]
                },
                {
                    "command": [
                        "destruct vsl; simpl; trivial.",
                        "VernacExtend",
                        "a502dcbf9234fb33d9238d5559c970341257bb04"
                    ]
                },
                {
                    "command": [
                        "simpl in H1;rewrite andb_true_iff in H1.",
                        "VernacExtend",
                        "8fae3759c0fd715177d4038ffdb0b013935787ee"
                    ]
                },
                {
                    "command": [
                        "destruct vsl; simpl; trivial.",
                        "VernacExtend",
                        "a502dcbf9234fb33d9238d5559c970341257bb04"
                    ]
                },
                {
                    "command": [
                        "case l; trivial; tauto.",
                        "VernacExtend",
                        "6cbc6dc166c5b321bab1066f5259b48cca324b65"
                    ]
                },
                {
                    "command": [
                        "destruct vsl; simpl; trivial.",
                        "VernacExtend",
                        "a502dcbf9234fb33d9238d5559c970341257bb04"
                    ]
                },
                {
                    "command": [
                        "simpl in H1;rewrite andb_true_iff in H1.",
                        "VernacExtend",
                        "8fae3759c0fd715177d4038ffdb0b013935787ee"
                    ]
                },
                {
                    "command": [
                        "case l; trivial; intros.",
                        "VernacExtend",
                        "d1c5f830ed2a75073116e166748485676865cdaa"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "case b; tauto.",
                        "VernacExtend",
                        "f769e95c737e4cd95317e028126f48190b449533"
                    ]
                },
                {
                    "command": [
                        "simpl in H1;rewrite andb_true_iff,andb_true_iff in H1.",
                        "VernacExtend",
                        "fc2cec4069152b0e62ba78a12510b6083296d36b"
                    ]
                },
                {
                    "command": [
                        "case l; trivial; try tauto; intros.",
                        "VernacExtend",
                        "9417974ea6ab4afa29997ec4f67f4a2e9cc12261"
                    ]
                },
                {
                    "command": [
                        "case b; tauto.",
                        "VernacExtend",
                        "f769e95c737e4cd95317e028126f48190b449533"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite andb_true_iff in H.",
                        "VernacExtend",
                        "0df8ad931dae5a1fc47d5a0f879135064c015f30"
                    ]
                },
                {
                    "command": [
                        "assert (unary (hd nil vnl) = true).",
                        "VernacExtend",
                        "a7f9e9e5e16ce8bfeccc7e3311f2f4cb07f1f127"
                    ]
                },
                {
                    "command": [
                        "apply forallb_hd; trivial.",
                        "VernacExtend",
                        "6df9309e9f61bf1e41094f01cedec63f816ec55c"
                    ]
                },
                {
                    "command": [
                        "induction (hd nil vnl); simpl in *; intros.",
                        "VernacExtend",
                        "819ea7fb7872507c9ce70a554d527fe6385bfa49"
                    ]
                },
                {
                    "command": [
                        "apply IHe1; [ tauto | apply forallb_tl | ]; trivial.",
                        "VernacExtend",
                        "e68880f910e2894abbb44f292345aaf2dfd4dacc"
                    ]
                },
                {
                    "command": [
                        "case a.",
                        "VernacExtend",
                        "9bc0f7a1b1c171bd37232c7a1605304b61d5baa4"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff in H2.",
                        "VernacExtend",
                        "abac8c347f936e6fef8caa46d894608cb57dc960"
                    ]
                },
                {
                    "command": [
                        "apply IHe3; [ tauto | | ]; simpl.",
                        "VernacExtend",
                        "4d303dd837b4cda777865740478b3c5edc381ab4"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff; split; [tauto | ].",
                        "VernacExtend",
                        "90dd96e5fc0bc1e72e7525cf778f188057838593"
                    ]
                },
                {
                    "command": [
                        "apply forallb_tl; trivial.",
                        "VernacExtend",
                        "3e70bf3857578db8d889c5c295d2a210b36233e0"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff; split.",
                        "VernacExtend",
                        "f081002c8428ebb34cec9f228c54d0d647dda6ab"
                    ]
                },
                {
                    "command": [
                        "apply IHl; tauto.",
                        "VernacExtend",
                        "016b224e56a5b05b7ffe58aa22d8e91300abed82"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff in H2.",
                        "VernacExtend",
                        "abac8c347f936e6fef8caa46d894608cb57dc960"
                    ]
                },
                {
                    "command": [
                        "apply IHe2; [ tauto | | ]; simpl.",
                        "VernacExtend",
                        "5f24fe0f1d8b62b09192ff6c9cee7ab382117c4c"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff; split; [tauto | ].",
                        "VernacExtend",
                        "90dd96e5fc0bc1e72e7525cf778f188057838593"
                    ]
                },
                {
                    "command": [
                        "apply forallb_tl; trivial.",
                        "VernacExtend",
                        "3e70bf3857578db8d889c5c295d2a210b36233e0"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff; split.",
                        "VernacExtend",
                        "f081002c8428ebb34cec9f228c54d0d647dda6ab"
                    ]
                },
                {
                    "command": [
                        "apply IHl; tauto.",
                        "VernacExtend",
                        "016b224e56a5b05b7ffe58aa22d8e91300abed82"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite andb_true_iff in H1.",
                        "VernacExtend",
                        "ea603ac58a30bd94eb90840656d33ed5baa149f8"
                    ]
                },
                {
                    "command": [
                        "apply IHe; [ tauto | | ].",
                        "VernacExtend",
                        "4168ac7869ee25ebf941555f89a38cf2a222710d"
                    ]
                },
                {
                    "command": [
                        "apply forallb_map; auto; intros.",
                        "VernacExtend",
                        "6799e7dd2627b80666f7eccba953d01722016061"
                    ]
                },
                {
                    "command": [
                        "apply H; trivial.",
                        "VernacExtend",
                        "2a60de8b8e6fbb9b42656d3eefbf1ae6284bbdbf"
                    ]
                },
                {
                    "command": [
                        "rewrite forallb_forall in H1.",
                        "VernacExtend",
                        "326979549b54255e48701d7feef4949c92e8ab31"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H1.",
                        "VernacExtend",
                        "3366722f50b76550e4a977302861289e131c571d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "apply forallb_map; auto; intros.",
                        "VernacExtend",
                        "6799e7dd2627b80666f7eccba953d01722016061"
                    ]
                },
                {
                    "command": [
                        "apply H0; trivial.",
                        "VernacExtend",
                        "51e75bf599119e9e6a7f155f3887d20ff5b6e843"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H1.",
                        "VernacExtend",
                        "3366722f50b76550e4a977302861289e131c571d"
                    ]
                },
                {
                    "command": [
                        "rewrite forallb_forall in H6.",
                        "VernacExtend",
                        "76ef63e84adc8f7ccaddd869e7f37d9a241b0c7d"
                    ]
                },
                {
                    "command": [
                        "auto.",
                        "VernacExtend",
                        "1f09da0addd069b3b65326f8c71967acc1e985af"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "zero_correct",
            "line_nb": 58,
            "steps": [
                {
                    "command": [
                        "intros; simpl; trivial.",
                        "VernacExtend",
                        "30948a0d93eb6288b161919b38b0b5eae13afa29"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "one_correct",
            "line_nb": 62,
            "steps": [
                {
                    "command": [
                        "intros; simpl; trivial.",
                        "VernacExtend",
                        "30948a0d93eb6288b161919b38b0b5eae13afa29"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_correct",
            "line_nb": 66,
            "steps": [
                {
                    "command": [
                        "intros; simpl; trivial.",
                        "VernacExtend",
                        "30948a0d93eb6288b161919b38b0b5eae13afa29"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat2BC_arities",
            "line_nb": 70,
            "steps": [
                {
                    "command": [
                        "induction x as [ | x IH].",
                        "VernacExtend",
                        "62fff01c2acc9e04bd712cc9b542bc882c5f698a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "simpl nat2BC.",
                        "VernacExtend",
                        "7e4161a9c4abfaa64aacc3bbded59e8bedcb39ce"
                    ]
                },
                {
                    "command": [
                        "rewrite comp_arities.",
                        "VernacExtend",
                        "9e52d9768e2e3873a9ed2ba8eea31c53fd667373"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "simpl; trivial.",
                        "VernacExtend",
                        "700c92fe710eacabdba1c0df7cd3aac36ec19aa1"
                    ]
                },
                {
                    "command": [
                        "simpl; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "nat2BC_correct",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "induction x as [ | x IH].",
                        "VernacExtend",
                        "62fff01c2acc9e04bd712cc9b542bc882c5f698a"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros nl sl.",
                        "VernacExtend",
                        "07c6b4d0ac6042923cc7f20bb4f85b6193d374e2"
                    ]
                },
                {
                    "command": [
                        "simpl nat2BC.",
                        "VernacExtend",
                        "7e4161a9c4abfaa64aacc3bbded59e8bedcb39ce"
                    ]
                },
                {
                    "command": [
                        "rewrite sem_comp.",
                        "VernacExtend",
                        "63a4bcd0c747e5e4cd031381dad992dfb675ba60"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite IH.",
                        "VernacExtend",
                        "dbf4f765dab656705bc8df8600fa3b3017a20858"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plus_correct",
            "line_nb": 92,
            "steps": [
                {
                    "command": [
                        "induction m; simpl in *; intros; trivial.",
                        "VernacExtend",
                        "557e3efb571711345569b81cf93759db17fc2af4"
                    ]
                },
                {
                    "command": [
                        "case a; simpl; rewrite succ_correct; auto.",
                        "VernacExtend",
                        "fce185f0dfd3c533797a8305692b3957ec7389b5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plusl_arities",
            "line_nb": 98,
            "steps": [
                {
                    "command": [
                        "induction el as [ | e' el' IH].",
                        "VernacExtend",
                        "239b417169612aaffb3b087ef46ae9c5865871e7"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intro H.",
                        "VernacExtend",
                        "a9535760040671e8853f25f0b4e9eda38ca392a6"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "simpl plusl_e.",
                        "VernacExtend",
                        "725ae0ad097b35dc991a28f8c3ae2f86928b90e6"
                    ]
                },
                {
                    "command": [
                        "rewrite comp_arities.",
                        "VernacExtend",
                        "9e52d9768e2e3873a9ed2ba8eea31c53fd667373"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "simpl; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "simpl; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "plusl_correct",
            "line_nb": 110,
            "steps": [
                {
                    "command": [
                        "induction el as [ | e el IH]; simpl.",
                        "VernacExtend",
                        "46fb080c30549d0bc7f1064d457b90d0b1207d99"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_correct, IH.",
                        "VernacExtend",
                        "6ef2e512887cd2f44c42741e2cc8ed1486ea1f6f"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "or_correct",
            "line_nb": 117,
            "steps": [
                {
                    "command": [
                        "intros [ | ] [ | ]; reflexivity.",
                        "VernacExtend",
                        "6326fb78f3c4c7b4e23b9ced8b67d5a2bc3960c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "mult_correct",
            "line_nb": 121,
            "steps": [
                {
                    "command": [
                        "induction m; intro n; trivial; simpl in *.",
                        "VernacExtend",
                        "e20533d110be43fc9fd0804524c71a5ad58cad1c"
                    ]
                },
                {
                    "command": [
                        "case a; rewrite plus_correct; auto.",
                        "VernacExtend",
                        "18cb258171cbf63fc2a30cf376de0672244a84f5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "and_correct",
            "line_nb": 127,
            "steps": [
                {
                    "command": [
                        "intros [ | ] [ | ]; reflexivity.",
                        "VernacExtend",
                        "6326fb78f3c4c7b4e23b9ced8b67d5a2bc3960c2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minus_rev_correct",
            "line_nb": 131,
            "steps": [
                {
                    "command": [
                        "induction n; simpl in *; [ omega | ].",
                        "VernacExtend",
                        "bae3e20ce454150cd33036945636c58a165c776d"
                    ]
                },
                {
                    "command": [
                        "case a; rewrite length_tail, IHn; omega.",
                        "VernacExtend",
                        "ca47613cad27e03b04dd8c32ba0e0c9be306d20f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_correct",
            "line_nb": 137,
            "steps": [
                {
                    "command": [
                        "intros; simpl in *.",
                        "VernacExtend",
                        "4204ebccd80c56fcc86bac7d33524a002a2d3ee2"
                    ]
                },
                {
                    "command": [
                        "apply bs_nat2bool_true in H.",
                        "VernacExtend",
                        "9c1f4780f0c22aaeabed7552c9bd9b8fc9aea9a3"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_rev_correct in H; omega.",
                        "VernacExtend",
                        "c92a4727022dd6664f95b7f3e3f8930734eac376"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "unary_tl",
            "line_nb": 142,
            "steps": [
                {
                    "command": [
                        "intros.",
                        "VernacExtend",
                        "1b4df911c5412d25278e46f48402870ba987996b"
                    ]
                },
                {
                    "command": [
                        "destruct l; simpl; trivial.",
                        "VernacExtend",
                        "75c9cab011dcd0798fca429963b6d42722368b2b"
                    ]
                },
                {
                    "command": [
                        "simpl in H.",
                        "VernacExtend",
                        "78dad51b2bb1130f71851d1e55489020824f59f6"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff in H; tauto.",
                        "VernacExtend",
                        "617276d2c0a416a96cbfbed37e26e1f8a0c41a46"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_correct_conv",
            "line_nb": 165,
            "steps": [
                {
                    "command": [
                        "intros; trivial.",
                        "VernacExtend",
                        "29cbd854258d508d4388ac0a9ccaa5dfbd8db0d6"
                    ]
                },
                {
                    "command": [
                        "apply bs_nat2bool_false in H1.",
                        "VernacExtend",
                        "1d749aaf03c5ba59a9088d0e373c3cb69ff9cf6b"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_rev_correct in H1.",
                        "VernacExtend",
                        "408c6092e9d69c32599b7ecfcc6c144d28dfcb96"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply preservation; simpl; try reflexivity; rewrite andb_true_iff; auto.",
                        "VernacExtend",
                        "faf7a452b2cf6bd06438017e7212b3d6f1fca69b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "lt_correct_conv_nil",
            "line_nb": 172,
            "steps": [
                {
                    "command": [
                        "intros; trivial.",
                        "VernacExtend",
                        "29cbd854258d508d4388ac0a9ccaa5dfbd8db0d6"
                    ]
                },
                {
                    "command": [
                        "assert (bs2bool (sem lt_e [v1] [v2]) = false).",
                        "VernacExtend",
                        "496e9be14e1a5d495ec09ffc5488d6fd6ac91ce3"
                    ]
                },
                {
                    "command": [
                        "rewrite H1; simpl; trivial.",
                        "VernacExtend",
                        "6f70e367992f35ef5afe13f53c1f9a99afe48f91"
                    ]
                },
                {
                    "command": [
                        "apply bs_nat2bool_false in H2.",
                        "VernacExtend",
                        "09d9ed2f87acd50d379bca2774a7c64fbe3f59c7"
                    ]
                },
                {
                    "command": [
                        "rewrite minus_rev_correct in H2.",
                        "VernacExtend",
                        "dfc8faf275d5a19f5ffb86cef6bedc2de8e48b2e"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply preservation; simpl; try reflexivity; rewrite andb_true_iff; auto.",
                        "VernacExtend",
                        "faf7a452b2cf6bd06438017e7212b3d6f1fca69b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_correct",
            "line_nb": 182,
            "steps": [
                {
                    "command": [
                        "intros v1 v2 H; simpl in H.",
                        "VernacExtend",
                        "36088eff27e27f5f8d24afeb11927311a119632f"
                    ]
                },
                {
                    "command": [
                        "apply lt_correct in H.",
                        "VernacExtend",
                        "ad503a097f52af1fbab6ae2968511ec5596ab9c5"
                    ]
                },
                {
                    "command": [
                        "rewrite succ_correct in H.",
                        "VernacExtend",
                        "d081282d9ac999d101c9fbb240e6d3da256f4e3d"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_correct_conv",
            "line_nb": 188,
            "steps": [
                {
                    "command": [
                        "intros; trivial.",
                        "VernacExtend",
                        "29cbd854258d508d4388ac0a9ccaa5dfbd8db0d6"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "apply lt_correct_conv in H1.",
                        "VernacExtend",
                        "c6801f523303ff7ee341c137fc5c8c17bc171e66"
                    ]
                },
                {
                    "command": [
                        "rewrite succ_correct in H1.",
                        "VernacExtend",
                        "7526edcd3128b567bd4570f5ebc1e7ec294db421"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply preservation; simpl; try reflexivity; rewrite andb_true_iff; auto.",
                        "VernacExtend",
                        "faf7a452b2cf6bd06438017e7212b3d6f1fca69b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "le_correct_conv_nil",
            "line_nb": 197,
            "steps": [
                {
                    "command": [
                        "intros; trivial.",
                        "VernacExtend",
                        "29cbd854258d508d4388ac0a9ccaa5dfbd8db0d6"
                    ]
                },
                {
                    "command": [
                        "simpl in H1.",
                        "VernacExtend",
                        "8e8db7ad05fc7a69fb83eaedd7fb1e86ee74784d"
                    ]
                },
                {
                    "command": [
                        "apply lt_correct_conv_nil in H1.",
                        "VernacExtend",
                        "93c76a9c74fdede90a27f6bdee84d6c6e502fcf9"
                    ]
                },
                {
                    "command": [
                        "rewrite succ_correct in H1.",
                        "VernacExtend",
                        "7526edcd3128b567bd4570f5ebc1e7ec294db421"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "apply preservation; simpl; try reflexivity; rewrite andb_true_iff; auto.",
                        "VernacExtend",
                        "faf7a452b2cf6bd06438017e7212b3d6f1fca69b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "minus_correct",
            "line_nb": 208,
            "steps": [
                {
                    "command": [
                        "intros; simpl; rewrite minus_rev_correct; trivial.",
                        "VernacExtend",
                        "7ae502c07bcb0c5656ddea90b55272138b84a85b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_correct_l",
            "line_nb": 212,
            "steps": [
                {
                    "command": [
                        "simpl; intros.",
                        "VernacExtend",
                        "429a59199da524088af55673600740ccc58db31e"
                    ]
                },
                {
                    "command": [
                        "rewrite P_correct; unfold P.",
                        "VernacExtend",
                        "cd6d9637300675dd5381ddb77220a96404fbc836"
                    ]
                },
                {
                    "command": [
                        "rewrite skipn_nil; simpl; trivial.",
                        "VernacExtend",
                        "98314c36f0c3818f5d0d4cf91441850fd2ebb326"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "max_correct_r",
            "line_nb": 217,
            "steps": [
                {
                    "command": [
                        "simpl; intros.",
                        "VernacExtend",
                        "429a59199da524088af55673600740ccc58db31e"
                    ]
                },
                {
                    "command": [
                        "rewrite P_correct; unfold P.",
                        "VernacExtend",
                        "cd6d9637300675dd5381ddb77220a96404fbc836"
                    ]
                },
                {
                    "command": [
                        "case_eq ( (skipn (length v1) v2) ); simpl; intros.",
                        "VernacExtend",
                        "1ab05c73605cf62598ecb824f3dbf4df2ab4f383"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply le_not_lt.",
                        "VernacExtend",
                        "f8e2533dc073c956a7b1c186bc0eabb50b93a8cf"
                    ]
                },
                {
                    "command": [
                        "apply skipn_nil_length; trivial.",
                        "VernacExtend",
                        "fe603d6f47fa8b27f8e6b41e59021b75297ce707"
                    ]
                },
                {
                    "command": [
                        "case b; trivial.",
                        "VernacExtend",
                        "8b7c34b5fda74c40ab94d870acd5c297f0febc4d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div'_coq_correct",
            "line_nb": 227,
            "steps": [
                {
                    "command": [
                        "intros q x y Hy.",
                        "VernacExtend",
                        "169157813f1939162a4f807f7d656dc546758062"
                    ]
                },
                {
                    "command": [
                        "destruct (quotient y Hy x) as (qu & r & H1 & H2); simpl.",
                        "VernacExtend",
                        "6e818d899d95fdb705948b1e75de7eb17757c6a0"
                    ]
                },
                {
                    "command": [
                        "induction q as [ | q' IH]; simpl; [ omega | ].",
                        "VernacExtend",
                        "82e2d5ecf5b37520073e2c9e5b7b9f2f1b015f1a"
                    ]
                },
                {
                    "command": [
                        "case_eq (leb (q' * y) x); intro H.",
                        "VernacExtend",
                        "d331742c626494c6b7f79e33c3fc9e39162a8c90"
                    ]
                },
                {
                    "command": [
                        "clear IH.",
                        "VernacExtend",
                        "daecf0ea8665f0f6fd551644d47b5ce1d93aef1e"
                    ]
                },
                {
                    "command": [
                        "apply leb_complete in H; split; subst x; intros; trivial.",
                        "VernacExtend",
                        "943c28edf2fc2169c99f8ed3966396413bf4d78d"
                    ]
                },
                {
                    "command": [
                        "assert (qu <= q') as H1 by omega; clear H0.",
                        "VernacExtend",
                        "b71d2544d74dc62d759a83123e41ecfab8f08516"
                    ]
                },
                {
                    "command": [
                        "apply le_lt_or_eq in H1.",
                        "VernacExtend",
                        "50a327a9af7fe516c2de04ca8d2c57839772bf85"
                    ]
                },
                {
                    "command": [
                        "destruct H1; auto.",
                        "VernacExtend",
                        "7a20f9482fab69ae7a191b5e13d9ac465bf5b222"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply lt_not_le.",
                        "VernacExtend",
                        "153fbf8b5dfa799e22f198ba7d37d620ab119bf0"
                    ]
                },
                {
                    "command": [
                        "apply lt_le_trans with (qu * y + y); [ omega | ].",
                        "VernacExtend",
                        "3148408943ac823340148d30b4cfbd3474db6dda"
                    ]
                },
                {
                    "command": [
                        "rewrite <- mult_succ_l.",
                        "VernacExtend",
                        "b1d49ff8060a11d85c245a76f90c2b0ada6422a2"
                    ]
                },
                {
                    "command": [
                        "apply mult_le_compat_r; omega.",
                        "VernacExtend",
                        "03717d0db54ded05c6a03ddeb891b35b96b0d206"
                    ]
                },
                {
                    "command": [
                        "apply leb_complete_conv in H; split; intros; subst.",
                        "VernacExtend",
                        "bad3739bdc283c6b20598e042cf397f114e50607"
                    ]
                },
                {
                    "command": [
                        "assert (q'=qu \\/ q'>qu) as [H3 | H3]; subst; omega.",
                        "VernacExtend",
                        "822c65aebc36992c719e15bee3d166b2c3a90777"
                    ]
                },
                {
                    "command": [
                        "assert (S q' = qu \\/ S q' < qu) as [H4 | H4] by omega; subst.",
                        "VernacExtend",
                        "d308d9ad1e5644178b9a3356f5b5f8828b681388"
                    ]
                },
                {
                    "command": [
                        "contradict H.",
                        "VernacExtend",
                        "0da4c7d87991a3ed628c796c81ed5112e2aac241"
                    ]
                },
                {
                    "command": [
                        "apply le_not_lt; simpl; omega.",
                        "VernacExtend",
                        "b46580f58b3c9d8235cfe1c514a2bee79cca0ba9"
                    ]
                },
                {
                    "command": [
                        "contradict H4.",
                        "VernacExtend",
                        "08934dd814b305453c81c048bb601ff2a665b033"
                    ]
                },
                {
                    "command": [
                        "apply le_not_lt.",
                        "VernacExtend",
                        "f8e2533dc073c956a7b1c186bc0eabb50b93a8cf"
                    ]
                },
                {
                    "command": [
                        "apply mult_S_le_reg_l with (Peano.pred y).",
                        "VernacExtend",
                        "63b27315e5ef409c51f4e6d093dcd61b6729f359"
                    ]
                },
                {
                    "command": [
                        "rewrite <- S_pred with (m:=0), mult_comm, (mult_comm y (S q')).",
                        "VernacExtend",
                        "c00a2086057acba7438a2ca4185bb9e9640145c6"
                    ]
                },
                {
                    "command": [
                        "simpl; omega.",
                        "VernacExtend",
                        "e39ee197bcf8e665eb70095a296ce867a0e4d7ae"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div_coq_correct",
            "line_nb": 255,
            "steps": [
                {
                    "command": [
                        "unfold div; intros x y Hy.",
                        "VernacExtend",
                        "deca099f88762e576ad6b82fc78744b2630ed8e6"
                    ]
                },
                {
                    "command": [
                        "generalize (div'_coq_correct (S x) x y Hy).",
                        "VernacExtend",
                        "181a38d381f4b3bc5a3531137c76289de8ecfdf0"
                    ]
                },
                {
                    "command": [
                        "destruct (quotient y Hy x) as (q & r & H1 & H2); simpl.",
                        "VernacExtend",
                        "4a9df0fad88e5d1902822aa4cde055e0eeadcb8a"
                    ]
                },
                {
                    "command": [
                        "intros [H3 _].",
                        "VernacExtend",
                        "2c9fa3351702af7b19d74b06cf065149a37a710e"
                    ]
                },
                {
                    "command": [
                        "apply H3; subst x.",
                        "VernacExtend",
                        "29100fbfa67aa2023849a206b68153ae9ed09104"
                    ]
                },
                {
                    "command": [
                        "apply le_gt_S.",
                        "VernacExtend",
                        "3316c5b0a74131421e9f7b0457715d8ffa8280c2"
                    ]
                },
                {
                    "command": [
                        "apply le_trans with (q*y); [ | omega ].",
                        "VernacExtend",
                        "10ab4032e49a994fe3dd4b6ebdb77a35f51d302d"
                    ]
                },
                {
                    "command": [
                        "rewrite <- (mult_1_r q) at 1.",
                        "VernacExtend",
                        "eae8276d62f9edefc94aeb457e0bc6141eb3bf12"
                    ]
                },
                {
                    "command": [
                        "apply mult_le_compat_l; omega.",
                        "VernacExtend",
                        "2c6533507c88af1b3aec07c97521dbe284e7a372"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "hd_cons",
            "line_nb": 267,
            "steps": [
                {
                    "command": [
                        "intros; subst; trivial.",
                        "VernacExtend",
                        "c3e17ac5c20cfcbd1b387a5bdb3c82da5db08f86"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div'_correct",
            "line_nb": 271,
            "steps": [
                {
                    "command": [
                        "intros; induction v1; simpl in *; intros; trivial.",
                        "VernacExtend",
                        "e467b893c7d1417d29fc302119eef7e5424c5cef"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff in H.",
                        "VernacExtend",
                        "1834897e3fa90313c295b40dff57d8cb25fa0d5d"
                    ]
                },
                {
                    "command": [
                        "case a; simpl.",
                        "VernacExtend",
                        "01ac7c991b4b7a293c2b72fb087c54813d9ed444"
                    ]
                },
                {
                    "command": [
                        "case_eq ( sem le_e [sem mult_e [v1; v2] nil] [v3] ); intros.",
                        "VernacExtend",
                        "3ace5d352f8327ee3eef007aa30296c7651c2292"
                    ]
                },
                {
                    "command": [
                        "rewrite IHv1; trivial.",
                        "VernacExtend",
                        "5d23ff0c200540a306c3141348ccb80964a72045"
                    ]
                },
                {
                    "command": [
                        "apply le_correct_conv_nil in H2.",
                        "VernacExtend",
                        "6f6478406cb6b6279bf39736565057cc7702fd5b"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_correct in H2.",
                        "VernacExtend",
                        "acd56edfa2fa24a7e111a14609a082e7703e602f"
                    ]
                },
                {
                    "command": [
                        "rewrite leb_correct_conv; trivial.",
                        "VernacExtend",
                        "9adce962677f41c0d1109e86546fbca5a25575fc"
                    ]
                },
                {
                    "command": [
                        "apply preservation; trivial; simpl.",
                        "VernacExtend",
                        "3c503ac39eb053fe83abbf955095abf47c18b9b9"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite andb_true_iff; tauto.",
                        "VernacExtend",
                        "e60b4f41249bc56f6aa6b1536295075501adbba4"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "apply hd_cons in H2.",
                        "VernacExtend",
                        "a78c3d9ec4180113819f9661b0bb98c27975d3fb"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "apply le_correct in H2.",
                        "VernacExtend",
                        "3de05518447ddc1176bdf494251b8d66dcf0f0af"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_correct in H2.",
                        "VernacExtend",
                        "acd56edfa2fa24a7e111a14609a082e7703e602f"
                    ]
                },
                {
                    "command": [
                        "rewrite leb_correct; trivial.",
                        "VernacExtend",
                        "9b7bfbfb2a5c7b94e342797a88a685a6a0fe5edb"
                    ]
                },
                {
                    "command": [
                        "apply le_correct_conv in H2; trivial.",
                        "VernacExtend",
                        "f76859ddd7c32e15d8c5276a0354f3a1263aef49"
                    ]
                },
                {
                    "command": [
                        "simpl in IHv1; rewrite IHv1; clear IHv1; try tauto.",
                        "VernacExtend",
                        "6a354e5f15aac0e3d9e7ff67887d8f17f7fa3936"
                    ]
                },
                {
                    "command": [
                        "rewrite leb_correct_conv; trivial.",
                        "VernacExtend",
                        "9adce962677f41c0d1109e86546fbca5a25575fc"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_correct in H2; trivial.",
                        "VernacExtend",
                        "4e2c61d5f6afe76c4a7d51f9ee6bebf90676f313"
                    ]
                },
                {
                    "command": [
                        "apply preservation; trivial; simpl.",
                        "VernacExtend",
                        "3c503ac39eb053fe83abbf955095abf47c18b9b9"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite andb_true_iff; tauto.",
                        "VernacExtend",
                        "4622adb6a15f9bf458863b188ffbd578bb7c294d"
                    ]
                },
                {
                    "command": [
                        "case_eq ( sem le_e [sem mult_e [v1; v2] nil] [v3] ); intros.",
                        "VernacExtend",
                        "3ace5d352f8327ee3eef007aa30296c7651c2292"
                    ]
                },
                {
                    "command": [
                        "rewrite IHv1; trivial.",
                        "VernacExtend",
                        "5d23ff0c200540a306c3141348ccb80964a72045"
                    ]
                },
                {
                    "command": [
                        "apply le_correct_conv_nil in H2.",
                        "VernacExtend",
                        "6f6478406cb6b6279bf39736565057cc7702fd5b"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_correct in H2.",
                        "VernacExtend",
                        "acd56edfa2fa24a7e111a14609a082e7703e602f"
                    ]
                },
                {
                    "command": [
                        "rewrite leb_correct_conv; trivial.",
                        "VernacExtend",
                        "9adce962677f41c0d1109e86546fbca5a25575fc"
                    ]
                },
                {
                    "command": [
                        "apply preservation; trivial; simpl.",
                        "VernacExtend",
                        "3c503ac39eb053fe83abbf955095abf47c18b9b9"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite andb_true_iff; tauto.",
                        "VernacExtend",
                        "e60b4f41249bc56f6aa6b1536295075501adbba4"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "apply hd_cons in H2.",
                        "VernacExtend",
                        "a78c3d9ec4180113819f9661b0bb98c27975d3fb"
                    ]
                },
                {
                    "command": [
                        "destruct b.",
                        "VernacExtend",
                        "8903a74740ba2d4b9b293ac81ed015a01a553cd0"
                    ]
                },
                {
                    "command": [
                        "apply le_correct in H2.",
                        "VernacExtend",
                        "3de05518447ddc1176bdf494251b8d66dcf0f0af"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_correct in H2.",
                        "VernacExtend",
                        "acd56edfa2fa24a7e111a14609a082e7703e602f"
                    ]
                },
                {
                    "command": [
                        "rewrite leb_correct; trivial.",
                        "VernacExtend",
                        "9b7bfbfb2a5c7b94e342797a88a685a6a0fe5edb"
                    ]
                },
                {
                    "command": [
                        "apply le_correct_conv in H2; trivial.",
                        "VernacExtend",
                        "f76859ddd7c32e15d8c5276a0354f3a1263aef49"
                    ]
                },
                {
                    "command": [
                        "simpl in IHv1; rewrite IHv1; clear IHv1; try tauto.",
                        "VernacExtend",
                        "6a354e5f15aac0e3d9e7ff67887d8f17f7fa3936"
                    ]
                },
                {
                    "command": [
                        "rewrite leb_correct_conv; trivial.",
                        "VernacExtend",
                        "9adce962677f41c0d1109e86546fbca5a25575fc"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_correct in H2; trivial.",
                        "VernacExtend",
                        "4e2c61d5f6afe76c4a7d51f9ee6bebf90676f313"
                    ]
                },
                {
                    "command": [
                        "apply preservation; trivial; simpl.",
                        "VernacExtend",
                        "3c503ac39eb053fe83abbf955095abf47c18b9b9"
                    ]
                },
                {
                    "command": [
                        "do 2 rewrite andb_true_iff; tauto.",
                        "VernacExtend",
                        "4622adb6a15f9bf458863b188ffbd578bb7c294d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "div_correct",
            "line_nb": 318,
            "steps": [
                {
                    "command": [
                        "intros; simpl sem.",
                        "VernacExtend",
                        "411876d4f526243a32fddf1f72596a64ec68d3ce"
                    ]
                },
                {
                    "command": [
                        "rewrite div'_correct; trivial.",
                        "VernacExtend",
                        "f3a3bcd7a3f7e7a95dc7f614bc59691c150db62f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalar_arities",
            "line_nb": 323,
            "steps": [
                {
                    "command": [
                        "induction a as [ | a IH]; simpl.",
                        "VernacExtend",
                        "068f8992a2fd007eb23ae5b6cb865db2ae0cfab5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros n e H.",
                        "VernacExtend",
                        "e857bf078de6f640e304032d94f260b998e3486e"
                    ]
                },
                {
                    "command": [
                        "rewrite H, (IH _ _ H).",
                        "VernacExtend",
                        "3fe9faf08d56dc653848fafb8aa247b59f0c2abb"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- beq_nat_refl.",
                        "VernacExtend",
                        "6483e653b28875693c3c92037ba92da24c711ae3"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "scalar_correct",
            "line_nb": 333,
            "steps": [
                {
                    "command": [
                        "induction a as [ | a IH]; simpl.",
                        "VernacExtend",
                        "068f8992a2fd007eb23ae5b6cb865db2ae0cfab5"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros n nl e.",
                        "VernacExtend",
                        "900092cb74e9514c1f3172078b476587816540ee"
                    ]
                },
                {
                    "command": [
                        "rewrite plus_correct, IH.",
                        "VernacExtend",
                        "6ef2e512887cd2f44c42741e2cc8ed1486ea1f6f"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multl_arities",
            "line_nb": 341,
            "steps": [
                {
                    "command": [
                        "induction el as [ | e el IH]; simpl.",
                        "VernacExtend",
                        "46fb080c30549d0bc7f1064d457b90d0b1207d99"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "intros n [H1 H2].",
                        "VernacExtend",
                        "3f9f35bca84c300e307379a744878b61e339990c"
                    ]
                },
                {
                    "command": [
                        "rewrite H1, (IH _ H2).",
                        "VernacExtend",
                        "2d5459049e2d8ea3f7de3af5e65406e802979482"
                    ]
                },
                {
                    "command": [
                        "simpl.",
                        "VernacExtend",
                        "1b93169f4cf876d207c1fab22a2347202ab48d85"
                    ]
                },
                {
                    "command": [
                        "rewrite <- beq_nat_refl.",
                        "VernacExtend",
                        "6483e653b28875693c3c92037ba92da24c711ae3"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "multl_correct",
            "line_nb": 351,
            "steps": [
                {
                    "command": [
                        "induction el as [ | e el IH]; simpl.",
                        "VernacExtend",
                        "46fb080c30549d0bc7f1064d457b90d0b1207d99"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_correct, IH.",
                        "VernacExtend",
                        "23da809aee0b9d486bfc59cf9978630cb85d3407"
                    ]
                },
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}