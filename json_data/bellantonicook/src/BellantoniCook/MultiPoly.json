{
    "filename": "src/BellantoniCook/MultiPoly.v",
    "coq_project": "bellantonicook",
    "vernac_cmds": [
        [
            "Require Import Arith List.",
            "VernacRequire",
            "5f7260eb665bbd003ccedb5c050bdc1b14b0356e"
        ],
        [
            "Require Import BellantoniCook.Lib.",
            "VernacRequire",
            "e11d7c71c6a91f0fa45b6ad1df9749b15e7c7a5d"
        ],
        [
            "Definition pow : Type := (nat*nat)%type.",
            "VernacDefinition",
            "1963cf3ca8435f8b25c96941f5ca1b585e6d040b"
        ],
        [
            "Definition mon : Type := (nat * list pow)%type.",
            "VernacDefinition",
            "8be2db49a7709e548d258c3e38270c5667f2518b"
        ],
        [
            "Definition pol : Type := (nat * list mon)%type.",
            "VernacDefinition",
            "151486ce116aa74c4579ae1b7c9d0792e73be16f"
        ],
        [
            "Definition peval_pow (xn:pow)(l:list nat) : nat := power (nth (fst xn) l 0) (snd xn).",
            "VernacDefinition",
            "8aee9408a6c9f7272043439ae6349639daf8d856"
        ],
        [
            "Definition peval_mon (m:mon)(l:list nat) : nat := (fst m) * multl (map (fun x => peval_pow x l) (snd m)).",
            "VernacDefinition",
            "82f98ba36e73dce778c7e55f0fb1dc0c1a4185ce"
        ],
        [
            "Definition peval (p:pol)(l:list nat) := plusl (map (fun m => peval_mon m l) (snd p)).",
            "VernacDefinition",
            "b2db63268e0ed897a69643304e1bce429fa5e0fa"
        ],
        [
            "Lemma peval_parity : forall ar p l, peval (ar, snd p) l = peval p l.",
            "VernacStartTheoremProof",
            "8ba964c8469e9ba7844a597be4ba5ca7c457e927"
        ],
        [
            "intros ar [ar0 ml] l; simpl; trivial.",
            "VernacExtend",
            "7d99490babf40cb5ee5a4628defd237940943c72"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma peval_pow_monotonic : forall xn l1 l2, (forall i, nth i l1 0 <= nth i l2 0) -> peval_pow xn l1 <= peval_pow xn l2.",
            "VernacStartTheoremProof",
            "7f304dcedfb6c1164638c39113819f624fbe81a9"
        ],
        [
            "intros [x n] l1 l2 H; simpl.",
            "VernacExtend",
            "096df80e85d88a54d53172ce3f306965cbcbf2bf"
        ],
        [
            "apply power_le_l; trivial.",
            "VernacExtend",
            "5485079344fc3df869843d9ed6497986b1b7e4bc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma peval_mon_monotonic : forall m l1 l2, (forall i, nth i l1 0 <= nth i l2 0) -> peval_mon m l1 <= peval_mon m l2.",
            "VernacStartTheoremProof",
            "833652353cd1ab87048cd38b88c82a06ce8a6166"
        ],
        [
            "unfold peval_mon; intros [a xl] l1 l2 H.",
            "VernacExtend",
            "b975dd923eac4943934081471ebf3391359868c3"
        ],
        [
            "induction xl; simpl; trivial.",
            "VernacExtend",
            "b8601b64c9fc87faa432ae3046a281140a84e3eb"
        ],
        [
            "rewrite !mult_assoc, !(mult_comm a), <- !mult_assoc.",
            "VernacExtend",
            "3f17990ffadd5d670d07c6af60e3a2d86683b357"
        ],
        [
            "apply mult_le_compat; trivial.",
            "VernacExtend",
            "d14c25b31373548e00195f3164c33b37e93b35d5"
        ],
        [
            "apply peval_pow_monotonic; trivial.",
            "VernacExtend",
            "261b39bc5a6b45833d539eb32ba18b9fb2eee6a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma peval_monotonic : forall p l1 l2, (forall i, nth i l1 0 <= nth i l2 0) -> peval p l1 <= peval p l2.",
            "VernacStartTheoremProof",
            "b2092e3864bbeab67896896dcf8d64960a1c1303"
        ],
        [
            "unfold peval; intros [ar ml] l1 l2 H.",
            "VernacExtend",
            "1549a02ebfc5d487e57662d0797ce5c1d06a00a3"
        ],
        [
            "induction ml; simpl; trivial.",
            "VernacExtend",
            "2ed750645d4953551bf34e79ad0f2b882f779190"
        ],
        [
            "apply plus_le_compat; trivial.",
            "VernacExtend",
            "4d8f81e2dec8561e5caafc9b43f02dd52cf35a5f"
        ],
        [
            "apply peval_mon_monotonic; trivial.",
            "VernacExtend",
            "5d31c4aeaf880078bb58aad0388260c56c08c995"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma peval_nth i pl p l : peval (nth i pl p) l = nth i (map (fun p => peval p l) pl) (peval p l).",
            "VernacStartTheoremProof",
            "8488fab70629fbcb857bbcc40ecdb332736fa3ea"
        ],
        [
            "intros; revert i.",
            "VernacExtend",
            "81a6c0b523f6e31e85cef8df8a8aa83fe9d4c639"
        ],
        [
            "induction pl; intros [ | i]; simpl; intros; trivial.",
            "VernacExtend",
            "5b9c98077892dfbb5ef6350d995ea5c9d787b274"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Notation parity := (@fst nat (list mon)).",
            "VernacSyntacticDefinition",
            "56eeae7d968bca5131042999e1571ba3dc45b694"
        ],
        [
            "Definition pWF_pow (ar:nat)(xn:pow) : Prop := fst xn < ar.",
            "VernacDefinition",
            "9ddf0f791012efe9a80993da98df176689edf7d1"
        ],
        [
            "Definition pWF_mon (ar:nat)(m:mon) : Prop := andl (pWF_pow ar) (snd m).",
            "VernacDefinition",
            "58b41e7f4229c5d5d198c666648eb9b62a49dc35"
        ],
        [
            "Definition pWF' (ar:nat)(ml:list mon) : Prop := andl (pWF_mon ar) ml.",
            "VernacDefinition",
            "43974423bb940ef3f56431f7effc432cccb6ab46"
        ],
        [
            "Definition pWF (p:pol) : Prop := pWF' (fst p) (snd p).",
            "VernacDefinition",
            "cb0f7d654498784081d3e5cb84d7e72c40e21537"
        ],
        [
            "Lemma pWF_mon_le : forall ar1 ar2 m, ar1 <= ar2 -> pWF_mon ar1 m -> pWF_mon ar2 m.",
            "VernacStartTheoremProof",
            "6b13abda6a2e1085cf09535f0922d6978b133579"
        ],
        [
            "unfold pWF_mon, pWF_pow; intros ar1 ar2 [a xl].",
            "VernacExtend",
            "643748a25fccb0085f34c0ae0c199e6c8b240a0a"
        ],
        [
            "induction xl as [ | xn xl' IH]; simpl; intros; trivial.",
            "VernacExtend",
            "2f5a82f54a4b647d691ebef8562f9f25ef6f3f60"
        ],
        [
            "destruct xn as [x n]; simpl in *.",
            "VernacExtend",
            "793e28afc5f83cb81e89e83cb0c9098ef35d926b"
        ],
        [
            "split;[ omega | tauto].",
            "VernacExtend",
            "a79f42bf4ce24109e405506c5a4d91314657f593"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF'_le ar1 ar2 ml : ar1 <= ar2 -> pWF' ar1 ml -> pWF' ar2 ml.",
            "VernacStartTheoremProof",
            "fc5854774945213bffe672a3fa36217aae4ea48a"
        ],
        [
            "induction ml; simpl; intros; trivial.",
            "VernacExtend",
            "ddc76b06259c1f963f67131969f91747158b24b0"
        ],
        [
            "split;[ | tauto].",
            "VernacExtend",
            "6cedb5e6d492c3f41bb1989b35316e349c3741d2"
        ],
        [
            "apply pWF_mon_le with ar1; trivial; tauto.",
            "VernacExtend",
            "d9fc19fab97cd147d07bff34a565de75cbd00a26"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_mon_app : forall ar a1 xl1 a2 xl2, pWF_mon ar (a1, xl1) -> pWF_mon ar (a2, xl2) -> pWF_mon ar (a1*a2, xl1++xl2).",
            "VernacStartTheoremProof",
            "4c250563f7893f1cb1485f9e39c3f3a02cd23759"
        ],
        [
            "unfold pWF_mon, pWF_pow.",
            "VernacExtend",
            "da7a768f2662fd68310cc64bf99a7426b2c945c8"
        ],
        [
            "induction xl1 as [ | [x n] xl1' IH]; simpl; intros; trivial.",
            "VernacExtend",
            "a0773660ba397e2d8bc41e5e87a60bd1234fbf5f"
        ],
        [
            "split;[ tauto | ].",
            "VernacExtend",
            "eeb813fb82348c980411a834a36457ed83056acd"
        ],
        [
            "apply IH with a1; tauto.",
            "VernacExtend",
            "329c79cb91a74d7189fd4d738b75a6d6ac967b0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF'_app ar ml1 ml2 : pWF' ar ml1 -> pWF' ar ml2 -> pWF' ar (ml1++ml2).",
            "VernacStartTheoremProof",
            "d698f32a4cc18d6a731360728683e2c55f7c7065"
        ],
        [
            "induction ml1 as [ | m1 ml1' IH]; simpl; intros; trivial.",
            "VernacExtend",
            "8ff2f0a9a7f144f92ab3bfbb8b6c952f86d7570a"
        ],
        [
            "split;[ tauto | ].",
            "VernacExtend",
            "eeb813fb82348c980411a834a36457ed83056acd"
        ],
        [
            "apply IH; tauto.",
            "VernacExtend",
            "83150a02da068ca98c9c509ca29ba5d8d4b7e78f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_nth i pl p0 : andl pWF pl -> pWF p0 -> pWF (nth i pl p0).",
            "VernacStartTheoremProof",
            "3037ccf4c5a7bb10c11262a7fe2d6e45f33187f9"
        ],
        [
            "intros; revert i.",
            "VernacExtend",
            "81a6c0b523f6e31e85cef8df8a8aa83fe9d4c639"
        ],
        [
            "induction pl; simpl in *; intros; case i; intros; trivial.",
            "VernacExtend",
            "a989244586b59902f79102b172686aec2e02e371"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "apply IHpl; tauto.",
            "VernacExtend",
            "dfa6a0005a33fe105619af24e162b2a5cf756a5d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma parity_mon_correct : forall ar m l l1 l2, pWF_mon ar m -> length l = ar -> peval_mon m (l++l1) = peval_mon m (l++l2).",
            "VernacStartTheoremProof",
            "5046b22e5a72e9cc937f195236cc6ad20ed404cc"
        ],
        [
            "unfold peval_mon, peval_pow, pWF_mon, pWF_pow.",
            "VernacExtend",
            "3218f0f5c1a8ee57389b03efebd0eb1da65e3d56"
        ],
        [
            "intros ar [a xl] l l1 l2 H1 H2; simpl in *; f_equal; f_equal.",
            "VernacExtend",
            "94dad3d29c230a8c95cd785df4e5ac7b173bcddc"
        ],
        [
            "induction xl as [ | [x n] xl' IH]; simpl in *; trivial.",
            "VernacExtend",
            "926a678e7748432624143e067920b60b6a2eb519"
        ],
        [
            "f_equal;[ | tauto].",
            "VernacExtend",
            "8b642f9a0f570933b75677eb0a24292293250eff"
        ],
        [
            "f_equal; rewrite !app_nth1; trivial; omega.",
            "VernacExtend",
            "41ba33d795dd4f244fac380047e9de18f7102de5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma parity_correct : forall p l l1 l2, pWF p -> length l = parity p -> peval p (l++l1) = peval p (l++l2).",
            "VernacStartTheoremProof",
            "2967e9cf6feab982824144fa26d9a0f826af4583"
        ],
        [
            "unfold peval, peval_mon, peval_pow, pWF, pWF_mon, pWF_pow.",
            "VernacExtend",
            "d876f98407801494408c3a054dcc0f3a071495d8"
        ],
        [
            "intros [ar ml] l l1 l2 H1 H2; simpl in *; f_equal.",
            "VernacExtend",
            "575e70bc72872317c775cabae9dee742825b3d5e"
        ],
        [
            "induction ml as [ | m ml' IH]; simpl in *; trivial.",
            "VernacExtend",
            "a847bd1999b347bc17716986f696cd8131dca481"
        ],
        [
            "f_equal;[ | tauto].",
            "VernacExtend",
            "8b642f9a0f570933b75677eb0a24292293250eff"
        ],
        [
            "apply parity_mon_correct with ar; tauto.",
            "VernacExtend",
            "0ff281675eb0a321a69a4b6af57f30ac9ab12bee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pcst (ar a:nat) : pol := (ar, [(a,nil)]).",
            "VernacDefinition",
            "8b7d432ce295745e4428080900eb51bda5625e1f"
        ],
        [
            "Lemma parity_pcst ar a : parity (pcst ar a) = ar.",
            "VernacStartTheoremProof",
            "b552a50670dd5f49d3c93b6da88e0628af03c226"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_pcst ar a : pWF (pcst ar a).",
            "VernacStartTheoremProof",
            "e0170c9fde21072d812574590e2c53677b8218f6"
        ],
        [
            "compute; intros; tauto.",
            "VernacExtend",
            "f2a8f727947d9d74d596707fd14bf7d7ea95a4ef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pcst_correct : forall ar k l, peval (pcst ar k) l = k.",
            "VernacStartTheoremProof",
            "0b9e573838ece251e10b47543c56d6fb1b42a5f1"
        ],
        [
            "unfold peval, peval_mon, peval_pow; simpl; intros; omega.",
            "VernacExtend",
            "57f9d726ee835cedfb211dc42c47c4711ab4175d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pproj (ar i:nat) : pol := (ar,[(1,[(i,1)])]).",
            "VernacDefinition",
            "401f806b46933f98fbc8de113a892d7305483429"
        ],
        [
            "Lemma parity_pproj n i : parity (pproj n i) = n.",
            "VernacStartTheoremProof",
            "d5f021a5de37b8bdca83a23d10016f38c04f1481"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_pproj ar i : i < ar -> pWF (pproj ar i).",
            "VernacStartTheoremProof",
            "14e8e289e3b0e2e2482b3ab9d418622cf2a3463e"
        ],
        [
            "compute; intros; tauto.",
            "VernacExtend",
            "f2a8f727947d9d74d596707fd14bf7d7ea95a4ef"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pproj_correct : forall ar i l, peval (pproj ar i) l = nth i l 0.",
            "VernacStartTheoremProof",
            "a6a2505b5168004145f60e5feef73e3477f7a0c0"
        ],
        [
            "unfold peval, peval_mon, peval_pow; simpl; intros; omega.",
            "VernacExtend",
            "57f9d726ee835cedfb211dc42c47c4711ab4175d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pscalar_mon (n:nat)(m:mon) : mon := (n * fst m, snd m).",
            "VernacDefinition",
            "03698e789941c630706eb0f1fe60a3991db2e2c2"
        ],
        [
            "Definition pscalar (n:nat)(p:pol) : pol := (fst p, map (pscalar_mon n) (snd p)).",
            "VernacDefinition",
            "0ae3bcd6a25ce160a82d831c9d342e04290f4e24"
        ],
        [
            "Lemma parity_pscalar n p : parity (pscalar n p) = parity p.",
            "VernacStartTheoremProof",
            "c25cfb942c20337b02deeb878087b075ff94751b"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_pscalar : forall n p, pWF p -> pWF (pscalar n p).",
            "VernacStartTheoremProof",
            "9a03214cc13184325c5bb2b145f03ce619c90cc8"
        ],
        [
            "unfold pWF, pWF_mon, pWF_pow; intros n [ar ml] H.",
            "VernacExtend",
            "be710ab2baf9feed75fbf66b7a76f199b3253b2b"
        ],
        [
            "induction ml; simpl in *; trivial; tauto.",
            "VernacExtend",
            "2580ee9119d1d2a8a5856315d4462018aad1df27"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pscalar_mon_correct : forall n m l, peval_mon (pscalar_mon n m) l = n * peval_mon m l.",
            "VernacStartTheoremProof",
            "dffee9994e22b6552eac9717174393482d93a946"
        ],
        [
            "unfold peval_mon; intros n [a xl] l; simpl; ring.",
            "VernacExtend",
            "9e6c997617b83663acccdaf7a7374fd5c95ca569"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_pscalar_mon n ml l : plusl (map (fun m => peval_mon (pscalar_mon n m) l) ml) = n * plusl (map (fun m => peval_mon m l) ml).",
            "VernacStartTheoremProof",
            "c09f37349581b44a2ed00abe2b75ce194838e5f9"
        ],
        [
            "induction ml; simpl; trivial.",
            "VernacExtend",
            "2ed750645d4953551bf34e79ad0f2b882f779190"
        ],
        [
            "rewrite pscalar_mon_correct, IHml; ring.",
            "VernacExtend",
            "fee028d42cffd6552929961263f7274518ad9073"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pscalar_correct : forall n p l, peval (pscalar n p) l = n * peval p l.",
            "VernacStartTheoremProof",
            "d06c6759f7653ee8647964e0f7dbcf5a6c00f319"
        ],
        [
            "unfold peval, pscalar; intros n [ar pl] l.",
            "VernacExtend",
            "9d54f63399842b00b738b0acd1a239e01706f02a"
        ],
        [
            "induction pl; simpl in *; trivial.",
            "VernacExtend",
            "ba9e340ed45d2608545a084fb7557bc53619af72"
        ],
        [
            "rewrite map_map in *.",
            "VernacExtend",
            "aecd10b153d65a2fbf3863c90e80d9d88a41961e"
        ],
        [
            "rewrite pscalar_mon_correct; simpl in IHpl.",
            "VernacExtend",
            "909bd423bb14ca01d244dc50a6f0d7417e951c7a"
        ],
        [
            "rewrite IHpl; ring.",
            "VernacExtend",
            "7fa230bcc2afe37ceceb11198333b77ba7281f86"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pplus (p1 p2:pol) : pol := (max (fst p1) (fst p2), snd p1 ++ snd p2).",
            "VernacDefinition",
            "b0ee48e4b279c1cb07f7eef9049bdc4788152f57"
        ],
        [
            "Lemma parity_pplus : forall p1 p2, parity (pplus p1 p2) = max (parity p1) (parity p2).",
            "VernacStartTheoremProof",
            "b379bc88589e82f0de1dd2844564af3474300f18"
        ],
        [
            "intros [ar1 ml1] [ar2 ml2]; trivial.",
            "VernacExtend",
            "4cd9389e2c84dfe9413fcf7928872d48faf44236"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_pplus : forall p1 p2, pWF p1 -> pWF p2 -> pWF (pplus p1 p2).",
            "VernacStartTheoremProof",
            "6b843f64b3e6e42981a03e0ba04bd9baf3599bb7"
        ],
        [
            "unfold pWF, pWF_mon, pWF_pow.",
            "VernacExtend",
            "e13784056f6aa318af6e0b73abc0ca869f542b36"
        ],
        [
            "intros [ar1 ml1] [ar2 ml2] H1 H2; simpl in *.",
            "VernacExtend",
            "eadc5c0d08eab598e20c451480845bc9e239c658"
        ],
        [
            "induction ml1 as [ | m1 ml1' IH]; simpl in *.",
            "VernacExtend",
            "cb5ba66bd0eb9071ba0d60ed71cab4979a3b45fc"
        ],
        [
            "apply pWF'_le with ar2; auto with arith.",
            "VernacExtend",
            "587a4779cea37fdf4d740fd78648d7c86777da63"
        ],
        [
            "split;[ | tauto ].",
            "VernacExtend",
            "6cedb5e6d492c3f41bb1989b35316e349c3741d2"
        ],
        [
            "apply pWF_mon_le with ar1; auto with arith; tauto.",
            "VernacExtend",
            "b0d47799b848ae6998d5e258a2aa49b35a51faa9"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pplus_correct : forall p1 p2 l, peval (pplus p1 p2) l = peval p1 l + peval p2 l.",
            "VernacStartTheoremProof",
            "a729f7351ca30e3a897187681d208ffbf0a1c15b"
        ],
        [
            "unfold peval, peval_mon, peval_pow.",
            "VernacExtend",
            "434ec54b2d546bc35b1746272b77c07f1e494722"
        ],
        [
            "intros [ar1 ml1] [ar2 ml2] l.",
            "VernacExtend",
            "06bde695171418fdd0881ac6a5a2c5de9913bcac"
        ],
        [
            "induction ml1 as [ | m1 ml1' IH]; simpl in *; trivial.",
            "VernacExtend",
            "d236cfcb2c4a8e9b903281ac6e4550b5ea75e3e0"
        ],
        [
            "unfold peval, pplus in IH; rewrite IH; ring.",
            "VernacExtend",
            "4924db66e2477da7fa5bacf7836f8a08c493a823"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pplusl (pl:list pol) : pol := fold_right pplus (pcst 0 0) pl.",
            "VernacDefinition",
            "522eba40356ac7068c318f12f668621c885b3e3f"
        ],
        [
            "Lemma parity_pplusl : forall pl, parity (pplusl pl) = maxl (map parity pl).",
            "VernacStartTheoremProof",
            "dc0b493170be5bb2003cc34117bc5423f96a91eb"
        ],
        [
            "induction pl; trivial; simpl pplusl.",
            "VernacExtend",
            "653d6581ce7c15471c4efebae0a5a902232a54ab"
        ],
        [
            "rewrite parity_pplus, IHpl; trivial.",
            "VernacExtend",
            "0bdcbad8c10d9855e0971e774aea9c61dbc92c83"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pWF_pplusl : forall pl, andl pWF pl -> pWF (pplusl pl).",
            "VernacDefinition",
            "cd4f66d7ae135e3f9361297fe310c051ff5af6f8"
        ],
        [
            "unfold pWF, pWF_mon, pWF_pow.",
            "VernacExtend",
            "e13784056f6aa318af6e0b73abc0ca869f542b36"
        ],
        [
            "induction pl; intros;[ simpl; tauto |].",
            "VernacExtend",
            "b7dff23bca5b7c98a340b2f779cf64d694237d9a"
        ],
        [
            "apply pWF_pplus; simpl in *; tauto.",
            "VernacExtend",
            "a0258dd2e4e75047bd4485dbf6bfe4f3318da63d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pplusl_correct : forall pl l, peval (pplusl pl) l = plusl (map (fun p => peval p l) pl).",
            "VernacStartTheoremProof",
            "763c1d66f8790f6b09a98c440c6ee0d841df1ae5"
        ],
        [
            "induction pl; simpl; intros; trivial.",
            "VernacExtend",
            "2a04dc37af6a414cbcd0a72bba6850b0b0795684"
        ],
        [
            "rewrite pplus_correct, IHpl; trivial.",
            "VernacExtend",
            "556ec10f8f984aa237f519656b2e3064e9e2e6e6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma peval_nth_pplus : forall pl l i n, peval (nth i pl (pcst n 0)) l <= peval (pplusl pl) l.",
            "VernacStartTheoremProof",
            "57300f7e6d15288f54c62c8615f078cbfa355eff"
        ],
        [
            "induction pl; simpl; intros; case i; trivial; rewrite pplus_correct; [ omega | ].",
            "VernacExtend",
            "912bc90eca3ce1b6781a0ed3cdc8725b6b532cf8"
        ],
        [
            "intros; eapply le_trans;[ apply IHpl | ].",
            "VernacExtend",
            "b0de5780c0b6282e708251a7d0e01e89eeb55d58"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pmult_mon (m12:mon*mon) : mon := (fst (fst m12) * fst (snd m12), snd (fst m12) ++ snd (snd m12)).",
            "VernacDefinition",
            "2bc27ee6c51235d3487c82732f6dc7bb0a690e7e"
        ],
        [
            "Definition pmult (p1 p2:pol) : pol := (max (fst p1) (fst p2), map pmult_mon (list_prod (snd p1) (snd p2))).",
            "VernacDefinition",
            "564369f1d0ee7eec5e8933d0adc3cf2843c820c5"
        ],
        [
            "Lemma parity_pmult : forall p1 p2, parity (pmult p1 p2) = max (parity p1) (parity p2).",
            "VernacStartTheoremProof",
            "14fdab1b619149d8596c4e4f76719857c583a291"
        ],
        [
            "intros [ar1 ml1] [ar2 ml2]; trivial.",
            "VernacExtend",
            "4cd9389e2c84dfe9413fcf7928872d48faf44236"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_pmult_mon : forall ar1 m1 ar2 m2, pWF_mon ar1 m1 -> pWF_mon ar2 m2 -> pWF_mon (max ar1 ar2) (pmult_mon (m1, m2)).",
            "VernacStartTheoremProof",
            "2fd675030a4ec6706147cab89bde0bd1785683e3"
        ],
        [
            "intros ar1 [a1 xl1] ar2 [a2 xl2]; simpl pmult_mon; intros.",
            "VernacExtend",
            "0a92a3e2ccaa962537aafd177e340208581d878d"
        ],
        [
            "apply pWF_mon_app.",
            "VernacExtend",
            "cfff773458215c3c582c220d348f758886a2c7ba"
        ],
        [
            "apply pWF_mon_le with ar1; auto with arith.",
            "VernacExtend",
            "eb8795c654d7b3787131f08f26594f966a1455de"
        ],
        [
            "apply pWF_mon_le with ar2; auto with arith.",
            "VernacExtend",
            "140afd75627b868ded0c671cb2e8c6ff6ca65d6d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_pmult : forall p1 p2, pWF p1 -> pWF p2 -> pWF (pmult p1 p2).",
            "VernacStartTheoremProof",
            "5216787e017f64d1de157571a311d360644d7781"
        ],
        [
            "unfold pWF, pWF_mon, pWF_pow.",
            "VernacExtend",
            "e13784056f6aa318af6e0b73abc0ca869f542b36"
        ],
        [
            "intros [ar1 ml1] [ar2 ml2] H1 H2; simpl in *.",
            "VernacExtend",
            "eadc5c0d08eab598e20c451480845bc9e239c658"
        ],
        [
            "induction ml1 as [ | m1 ml1' IH1]; simpl in *; intros; trivial.",
            "VernacExtend",
            "28a3203978dbdc4ef9425a158398e01ef8feee4f"
        ],
        [
            "rewrite map_app, map_map.",
            "VernacExtend",
            "b9a36555c4d82b8cce9188f6e3b254ec86c12c51"
        ],
        [
            "apply pWF'_app;[ | tauto ].",
            "VernacExtend",
            "a8780899f0d00c2f32675f93c0f7549c191bfbe9"
        ],
        [
            "clear IH1.",
            "VernacExtend",
            "e2283f05633945505be8f0f8e37e8c8e4df49c55"
        ],
        [
            "induction ml2 as [ | m2 ml2' IH2]; simpl in *; intros; trivial.",
            "VernacExtend",
            "2f57929e4734f4d61db0def158e640d88f9ca50b"
        ],
        [
            "split;[ | tauto ].",
            "VernacExtend",
            "6cedb5e6d492c3f41bb1989b35316e349c3741d2"
        ],
        [
            "apply pWF_pmult_mon; tauto.",
            "VernacExtend",
            "ead87280c9682ca159443d854ed51e33df1b9d21"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmult_mon_correct : forall m12 l, peval_mon (pmult_mon m12) l = peval_mon (fst m12) l * peval_mon (snd m12) l.",
            "VernacStartTheoremProof",
            "f8fdcff2e8aac949c7adcb92c7b73e427075adf6"
        ],
        [
            "unfold peval_mon, peval_pow.",
            "VernacExtend",
            "f6a70558f09941a9932f02ed88f593ced9c96a5c"
        ],
        [
            "intros [[a1 xl1] [a2 xl2]] l; simpl.",
            "VernacExtend",
            "5280913f7fed04b0de1c44442d16fbf60d6bb8d6"
        ],
        [
            "induction xl1 as [ | x1 xl1' IH]; simpl;[ ring | ring [IH] ].",
            "VernacExtend",
            "9c487776c5288e2d4e4dcef768cba8355306b327"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_pmult_mon : forall m1 ml2 l, map (fun m2 => peval_mon (pmult_mon (m1, m2)) l) ml2 = map (fun m2 => peval_mon m1 l * peval_mon m2 l) ml2.",
            "VernacStartTheoremProof",
            "e2616ad11eb8e92a61565cc90084afee486c9501"
        ],
        [
            "unfold peval_mon, peval_pow.",
            "VernacExtend",
            "f6a70558f09941a9932f02ed88f593ced9c96a5c"
        ],
        [
            "intros [a1 xl1] ml2 l; simpl.",
            "VernacExtend",
            "c686b4c0318c22cfbd617929b456a15d7eb40124"
        ],
        [
            "induction ml2 as [ | [a2 xl2] ml2' IH]; simpl; trivial.",
            "VernacExtend",
            "a428b033b2a680cf3c969dc6ba7b333a09bd9483"
        ],
        [
            "rewrite IH, map_app, multl_app; f_equal; ring.",
            "VernacExtend",
            "5cb20ad2f4c54c02eb125a8c07843e8830d3914d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmult_correct : forall p1 p2 l, peval (pmult p1 p2) l = peval p1 l * peval p2 l.",
            "VernacStartTheoremProof",
            "27549f77ba3f215603c230d9c580ef79b0b8fc36"
        ],
        [
            "unfold peval; intros [ar1 ml1] [ar2 ml2] l; simpl.",
            "VernacExtend",
            "2fe7f86964e6da4aaaa747fc289a20976a597ebb"
        ],
        [
            "induction ml1 as [ | m1 ml1' IH]; simpl; trivial.",
            "VernacExtend",
            "1a560dacce90c2b7a66694cc490d726f5912d83f"
        ],
        [
            "rewrite !map_app, !map_map, map_pmult_mon, plusl_app.",
            "VernacExtend",
            "c8ae4b05f1723750e948303823f00e0854ab2cc1"
        ],
        [
            "rewrite map_map in IH; rewrite IH.",
            "VernacExtend",
            "919e7ec0fb7d8db1d3552b871a15907c728cd1a5"
        ],
        [
            "rewrite mult_plus_distr_r.",
            "VernacExtend",
            "c98266c52d81f9d2eb96b49e4fc06afcb0572340"
        ],
        [
            "f_equal.",
            "VernacExtend",
            "dfce814d1efcef60f8330516ad88155a3a5ec317"
        ],
        [
            "rewrite multl_plus_distr_l, map_map; trivial.",
            "VernacExtend",
            "38c13b5f47bc43a529114ee8f92fee3cfb342cad"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pmultl (pl:list pol) : pol := fold_right pmult (pcst 0 1) pl.",
            "VernacDefinition",
            "d611671a3ef0130a2dc2e6368d6a4303841ce7eb"
        ],
        [
            "Lemma parity_pmultl pl : parity (pmultl pl) = maxl (map parity pl).",
            "VernacStartTheoremProof",
            "3804b71eff0d593753136ba2c12577a32211351e"
        ],
        [
            "induction pl; simpl pmultl; trivial.",
            "VernacExtend",
            "d993b4843a45fba83f3e4c4ec4c5bc796fd05bd0"
        ],
        [
            "rewrite parity_pmult, IHpl; trivial.",
            "VernacExtend",
            "8e076c446e322054edc14255f5e255042ecb8a3b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pWF_pmultl pl : andl pWF pl -> pWF (pmultl pl).",
            "VernacDefinition",
            "488bece204d7db8cc9fdcd5c17730a4962dab6b4"
        ],
        [
            "induction pl; simpl pmultl; intros.",
            "VernacExtend",
            "8b5a289d903c6d306a8166f19b69df93123460e2"
        ],
        [
            "apply pWF_pcst.",
            "VernacExtend",
            "4f38abf760ebd0ac80111bb2dbf9df41d33017cc"
        ],
        [
            "apply pWF_pmult; simpl in *; tauto.",
            "VernacExtend",
            "0f713dc6bd9ffcccad75e5c1526999050fc99219"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pmultl_correct pl l : peval (pmultl pl) l = multl (map (fun p => peval p l) pl).",
            "VernacStartTheoremProof",
            "c36adb597028139c35006472875b810f41ff02d0"
        ],
        [
            "induction pl; simpl; intros; trivial.",
            "VernacExtend",
            "2a04dc37af6a414cbcd0a72bba6850b0b0795684"
        ],
        [
            "rewrite pmult_correct, IHpl; trivial.",
            "VernacExtend",
            "38822e71abab8a4ce3903ad2a9a42443213a9dce"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint ppower (p:pol)(n:nat) : pol := match n with | 0 => pcst (fst p) 1 | S n' => pmult p (ppower p n') end.",
            "VernacFixpoint",
            "8152dc52f5eccfe8c77689c64baa950c7053c977"
        ],
        [
            "Lemma parity_ppower p n : parity (ppower p n) = parity p.",
            "VernacStartTheoremProof",
            "2ae16958aef17d2c226ab7b6b0c9dd413642793e"
        ],
        [
            "induction n; simpl ppower; trivial.",
            "VernacExtend",
            "275c4e7668ed090d846c21a9996a476528c5a3e0"
        ],
        [
            "rewrite parity_pmult, IHn; auto with arith.",
            "VernacExtend",
            "c9b03f8e57cedf6fe64e6af920a3ef5fbc15d301"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_ppower p n : pWF p -> pWF (ppower p n).",
            "VernacStartTheoremProof",
            "6715ce42f499a6fa0cd36b5131d2ee63e4600090"
        ],
        [
            "induction n; simpl ppower; intros.",
            "VernacExtend",
            "28f338696857d2a1bfae2180a43cc2c46d378867"
        ],
        [
            "apply pWF_pcst.",
            "VernacExtend",
            "4f38abf760ebd0ac80111bb2dbf9df41d33017cc"
        ],
        [
            "apply pWF_pmult; tauto.",
            "VernacExtend",
            "bdcf03e5db29dce9d52ca20283d4d78275d5045c"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma ppower_correct p n l : peval (ppower p n) l = power (peval p l) n.",
            "VernacStartTheoremProof",
            "d247c7b4342baf9a4805cf393fbb415f90b0cb48"
        ],
        [
            "induction n; simpl; intros; trivial.",
            "VernacExtend",
            "f11f88911c08a055d0ebf1f67e856e8f9c990aa8"
        ],
        [
            "rewrite pmult_correct, IHn;trivial.",
            "VernacExtend",
            "2b0298397254122a154078ee0d148f5c2f4cb94a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pcomp_pow' (xn:pow)(pl:list pol) : pol := ppower (nth (fst xn) pl (pcst 0 0)) (snd xn).",
            "VernacDefinition",
            "681271942efc4c6dd4b738b37c5f498a639ebca3"
        ],
        [
            "Definition pcomp_pow (xn:pow)(pl:list pol) : pol := (maxl (map parity pl), snd (pcomp_pow' xn pl)).",
            "VernacDefinition",
            "d3681cbfd311ae619dd3f6913867a6b0d2f10e47"
        ],
        [
            "Definition pcomp_mon' (m:mon)(pl:list pol) : pol := pscalar (fst m) (pmultl (map (fun xn => pcomp_pow xn pl) (snd m))).",
            "VernacDefinition",
            "1c3ced228f3ea570feaba9bc7a7792d4327e7389"
        ],
        [
            "Definition pcomp_mon (m:mon)(pl:list pol) : pol := (maxl (map parity pl), snd (pcomp_mon' m pl)).",
            "VernacDefinition",
            "96e6f749fce2e979e71787273fe61b21dc0bf3d4"
        ],
        [
            "Definition pcomp' (p:pol)(pl:list pol) : pol := pplusl (map (fun m => pcomp_mon m pl) (snd p)).",
            "VernacDefinition",
            "cbdf365a47441df2c96fb34ec024a4e989a5d3cb"
        ],
        [
            "Definition pcomp (p:pol)(pl:list pol) : pol := (maxl (map parity pl), snd (pcomp' p pl)).",
            "VernacDefinition",
            "78c96a7caba837a605307febd582da4b994a3ed0"
        ],
        [
            "Lemma parity_pcomp_pow : forall xn pl, parity (pcomp_pow xn pl) = maxl (map parity pl).",
            "VernacStartTheoremProof",
            "dc5bb90ab08139c7149032197381e37a9dc28c0a"
        ],
        [
            "unfold pcomp_pow; intros [x n] pl; simpl.",
            "VernacExtend",
            "565edef4f5bb65107a0bb09f925ad2796afe9c6f"
        ],
        [
            "case_eq (ppower (nth x pl (pcst 0 0)) n); trivial.",
            "VernacExtend",
            "bd90d1d2d3a335816aa398a129d074a2db75a76e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma map_parity_pcomp_pow xl pl : map (fun xn => parity (pcomp_pow xn pl)) xl = map (fun _ => maxl (map parity pl)) xl.",
            "VernacStartTheoremProof",
            "779c78e638f72605d63a526a8fc67e6f72d84f81"
        ],
        [
            "destruct xl; simpl; trivial.",
            "VernacExtend",
            "0a3dfce17af568ff29f8b0977f476c98761ff2f0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma parity_pcomp_mon' : forall m pl, parity (pcomp_mon' m pl) <= maxl (map parity pl).",
            "VernacStartTheoremProof",
            "a9e51498de2db9b55ac36a8313d1856c7e01cc44"
        ],
        [
            "intros [a xl] pl; simpl.",
            "VernacExtend",
            "c0790bb16fc02bcd947d2b72c15093ad5838d228"
        ],
        [
            "rewrite parity_pmultl.",
            "VernacExtend",
            "394e3385435558f9dad3d4287eaa53f97d7332e9"
        ],
        [
            "induction xl; simpl.",
            "VernacExtend",
            "926b66103f1b2ebf7d4bff9a7c33fcf636a01923"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Nat.max_lub; trivial.",
            "VernacExtend",
            "3baabdde61d00ad046c947af1c00e234ac3b57c6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma parity_pcomp_mon : forall m pl, parity (pcomp_mon m pl) = maxl (map parity pl).",
            "VernacStartTheoremProof",
            "1d7e43dfd77cd760f6a82e90e4caeedc999675b1"
        ],
        [
            "unfold pcomp_mon; intros [a xl] pl; simpl; trivial.",
            "VernacExtend",
            "cf04dfdcf44338205dcc631c046f223b7d585603"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma parity_pcomp p pl : parity (pcomp p pl) = maxl (map parity pl).",
            "VernacStartTheoremProof",
            "c8c83b85a1aeabb531e2a9f9a4bf7306c7c2e5a7"
        ],
        [
            "unfold pcomp; intros.",
            "VernacExtend",
            "6051ec8e89cc90182995a864121a0f74bbe09929"
        ],
        [
            "case (pcomp' p pl); trivial.",
            "VernacExtend",
            "e3c806f838070c8a18a3ce79678a7132ef541eee"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_pcomp_pow' : forall xn pl, andl pWF pl -> pWF (pcomp_pow' xn pl).",
            "VernacStartTheoremProof",
            "25df10ecfce31d13d56ad0a2805cf3b568e5aa58"
        ],
        [
            "intros [x n] pl H; simpl.",
            "VernacExtend",
            "8914670fcaf23dabf1da467f27ee988bb0806045"
        ],
        [
            "apply pWF_ppower.",
            "VernacExtend",
            "2bcd05748fb1d071f605a45c92a7601dcc32bd73"
        ],
        [
            "apply pWF_nth; trivial.",
            "VernacExtend",
            "772be49c7ad0eaab29232d67b85ae2c28974dcaa"
        ],
        [
            "apply pWF_pcst.",
            "VernacExtend",
            "4f38abf760ebd0ac80111bb2dbf9df41d33017cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_pcomp_pow : forall xn pl, andl pWF pl -> pWF (pcomp_pow xn pl).",
            "VernacStartTheoremProof",
            "c3b50c71fe6b475255c4313fb649f1c2f146c4d1"
        ],
        [
            "intros [x n] pl H.",
            "VernacExtend",
            "65d7314af4c7a9cdf91869c27b3f641effee873d"
        ],
        [
            "apply pWF'_le with (ar1 := fst (pcomp_pow' (x, n) pl)).",
            "VernacExtend",
            "cbba5573c3e7618138292013a9bc1c7e286f17bc"
        ],
        [
            "rewrite parity_pcomp_pow.",
            "VernacExtend",
            "cc3b9ad730adfa5ed6e8bde6b268f1bd0595f400"
        ],
        [
            "unfold pcomp_pow'.",
            "VernacExtend",
            "ceed2a693f7eb2b86f2c5ef9bfea8f3eb3a7253a"
        ],
        [
            "rewrite parity_ppower.",
            "VernacExtend",
            "bca8996ee6d5051e8ef25a65a9facab26fb46709"
        ],
        [
            "destruct (le_lt_dec (length pl) x).",
            "VernacExtend",
            "53159ba10f14f7be74f5f146efc5ba807d0e5c87"
        ],
        [
            "rewrite nth_overflow; auto with arith.",
            "VernacExtend",
            "27177ea20e0e45a5b6d79db90c717cba2c446d3d"
        ],
        [
            "apply in_le_maxl.",
            "VernacExtend",
            "3e84d025450b178d5968da17c622f4be8292aa61"
        ],
        [
            "apply in_map.",
            "VernacExtend",
            "8b1d6650eff402b483dc29bd25bb3e04ea7f525b"
        ],
        [
            "apply nth_In; trivial.",
            "VernacExtend",
            "0aa084d71d69e1b8a87a1025ff7a9ca7a09fd7b0"
        ],
        [
            "apply pWF_pcomp_pow'; trivial.",
            "VernacExtend",
            "e70fd4d4f8b6f565d8853e8f060a8ca823242484"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_pcomp_mon' : forall m pl, andl pWF pl -> pWF (pcomp_mon' m pl).",
            "VernacStartTheoremProof",
            "a62638d3534bbc379857c9cc96e10dc728b62947"
        ],
        [
            "unfold pWF, pWF', pWF_mon, pWF_pow.",
            "VernacExtend",
            "e39af9d85850596659c75e2f77838e2ce4e73fed"
        ],
        [
            "intros [a xl] pl H.",
            "VernacExtend",
            "8b8d493c03bc5749f896e12f54ddf378198ae3aa"
        ],
        [
            "induction xl as [ | [x n] xl' IH].",
            "VernacExtend",
            "3a40da5588074d05010dd735cdeb664934422112"
        ],
        [
            "simpl; tauto.",
            "VernacExtend",
            "2c27d7b56602355c3ed4605e551cd6a88509ac37"
        ],
        [
            "apply pWF_pscalar.",
            "VernacExtend",
            "4cad19fcf48288d2dc099f23643ce08a02ac4325"
        ],
        [
            "apply pWF_pmultl.",
            "VernacExtend",
            "97d0b8ac7b1caf82848e9bffc1a52d42df7a5338"
        ],
        [
            "clear IH.",
            "VernacExtend",
            "daecf0ea8665f0f6fd551644d47b5ce1d93aef1e"
        ],
        [
            "induction xl'; simpl in *.",
            "VernacExtend",
            "5d2067931943e6dda85d47229e1906422c784f5c"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "apply pWF_pcomp_pow; trivial.",
            "VernacExtend",
            "8db5b7a3ae34d75ea5678259c9802a9eba38d0a0"
        ],
        [
            "split;[ tauto | split ].",
            "VernacExtend",
            "ec6a602ac86de6d007fb62700e67f91d23f8058a"
        ],
        [
            "apply pWF_pcomp_pow; trivial.",
            "VernacExtend",
            "8db5b7a3ae34d75ea5678259c9802a9eba38d0a0"
        ],
        [
            "apply IHxl'.",
            "VernacExtend",
            "16e1af17b993271d1cbff5e121662660aa9fa2e4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_pcomp_mon : forall m pl, andl pWF pl -> pWF (pcomp_mon m pl).",
            "VernacStartTheoremProof",
            "509df6fd22774e59394812ae626407d7a655d43f"
        ],
        [
            "intros [a xl] pl H.",
            "VernacExtend",
            "8b8d493c03bc5749f896e12f54ddf378198ae3aa"
        ],
        [
            "apply pWF'_le with (ar1 := fst (pcomp_mon' (a, xl) pl)).",
            "VernacExtend",
            "66d0df5cc40d20353033837ea1afd748378d8bc3"
        ],
        [
            "apply parity_pcomp_mon'.",
            "VernacExtend",
            "78c6960ace9feece27f970cfaa99376ecee2194e"
        ],
        [
            "apply pWF_pcomp_mon'; trivial.",
            "VernacExtend",
            "81fe61d2383587875c8a7720ba622de3e0c5e184"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_pcomp' : forall p pl, andl pWF pl -> pWF (pcomp' p pl).",
            "VernacStartTheoremProof",
            "31fe3ed84be9127e96663ab3d272efc58c097d1f"
        ],
        [
            "intros [ar ml] pl H; simpl.",
            "VernacExtend",
            "e9da005269c6b313e779697de6a941107e69955e"
        ],
        [
            "apply pWF_pplusl.",
            "VernacExtend",
            "c0aff1c41369894ba9e1442734d86ce033db7358"
        ],
        [
            "induction ml; simpl in *; trivial.",
            "VernacExtend",
            "ba7c065f37ee612be040e51ce1c4cdb4059ef015"
        ],
        [
            "split; trivial.",
            "VernacExtend",
            "51e6eaa57561ac50797e703222408862cfba3b15"
        ],
        [
            "apply pWF_pcomp_mon; trivial.",
            "VernacExtend",
            "44d52f134e73e766f777c5bb80d36fa03bd5c37b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_pcomp : forall p pl, andl pWF pl -> pWF (pcomp p pl).",
            "VernacStartTheoremProof",
            "070c8d055968755d61940e9f997843cd5ac35d5a"
        ],
        [
            "intros [ar ml] pl H.",
            "VernacExtend",
            "07c4f12aabb31222c90e8c77c97734b29caa51f6"
        ],
        [
            "apply pWF'_le with (ar1 := fst (pcomp' (ar, ml) pl)).",
            "VernacExtend",
            "29e510aacdfbb3f2cbbee73e0e834c7e9e4e4ec3"
        ],
        [
            "rewrite parity_pcomp; unfold pcomp'.",
            "VernacExtend",
            "64bb7aad9235a79318be08cb33c865df1b45b080"
        ],
        [
            "rewrite parity_pplusl, map_map.",
            "VernacExtend",
            "0c723999ca4850afc977ee75e0cef85418c0908b"
        ],
        [
            "induction ml; simpl.",
            "VernacExtend",
            "59c61c5a1fbbb9fd30a1634324a9b5ee3948d411"
        ],
        [
            "omega.",
            "VernacExtend",
            "32c6c865d255452c7e10c77111456d1981cede39"
        ],
        [
            "apply Nat.max_lub; trivial.",
            "VernacExtend",
            "3baabdde61d00ad046c947af1c00e234ac3b57c6"
        ],
        [
            "apply pWF_pcomp'; trivial.",
            "VernacExtend",
            "0d584b2905d531e30607edf47d529a820fbc392f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pcomp_pow'_correct : forall xn pl l, peval (pcomp_pow' xn pl) l = power (peval (nth (fst xn) pl (pcst 0 0)) l) (snd xn).",
            "VernacStartTheoremProof",
            "dbf4633b37a0118b26fcf7bd82824a7798172bc2"
        ],
        [
            "intros [x n] pl l; simpl; apply ppower_correct.",
            "VernacExtend",
            "47ba4f3755f1e1f521b827808b2e3d9fff1ab24e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pcomp_pow_correct xn pl l : peval (pcomp_pow xn pl) l = power (peval (nth (fst xn) pl (pcst 0 0)) l) (snd xn).",
            "VernacStartTheoremProof",
            "7a8d1f24ea0b06b7f67ec4b28c8f7e7faacb1794"
        ],
        [
            "intros; unfold pcomp_pow; apply pcomp_pow'_correct.",
            "VernacExtend",
            "1ee983e4ba720d4c6dc1022b45d2de37f420ab24"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pcomp_mon'_correct : forall m pl l, peval (pcomp_mon' m pl) l = peval_mon m (map (fun p => peval p l) pl).",
            "VernacStartTheoremProof",
            "16dd0bdc3396ee7b11668e3c352129cffaa7cb2e"
        ],
        [
            "intros [a xl] pl l; induction xl.",
            "VernacExtend",
            "105fb036345df9f1fe93a721a99a4b1ca3bc121c"
        ],
        [
            "unfold peval, peval_mon.",
            "VernacExtend",
            "022a705a81b4c2a668e77da1900f14578d7da6b9"
        ],
        [
            "simpl; ring.",
            "VernacExtend",
            "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
        ],
        [
            "unfold pcomp_mon' in *; simpl in *.",
            "VernacExtend",
            "f4ab6208ab79bc9dd5db27a82438eac6e399382e"
        ],
        [
            "rewrite pscalar_correct, pmult_correct, pmultl_correct in *.",
            "VernacExtend",
            "cb3a625067e237150ad3b63fa77a427c08b6daf3"
        ],
        [
            "rewrite mult_assoc, (mult_comm a), <- mult_assoc, IHxl, pcomp_pow_correct, peval_nth.",
            "VernacExtend",
            "f30997c8756aed7e1fe4cd8119d811f67324fa66"
        ],
        [
            "destruct a0 as [x n].",
            "VernacExtend",
            "3c3cd3174de6b20cee5e8e3900d925f586d6897b"
        ],
        [
            "unfold peval_mon, peval_pow.",
            "VernacExtend",
            "f6a70558f09941a9932f02ed88f593ced9c96a5c"
        ],
        [
            "rewrite pcst_correct; simpl; ring.",
            "VernacExtend",
            "8dfa88d1be13ab9811b8ec9db80924f83aa59c7f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pcomp_mon_correct : forall m pl l, peval (pcomp_mon m pl) l = peval_mon m (map (fun p => peval p l) pl).",
            "VernacStartTheoremProof",
            "d2afc26ef42e924016f3a5020a5dca0e7522186e"
        ],
        [
            "intros [a xl] pl l; unfold pcomp_mon.",
            "VernacExtend",
            "8c7fec1d681e646948ba15f069396bd5d680b923"
        ],
        [
            "rewrite peval_parity.",
            "VernacExtend",
            "d9d1cdf7f7f23059fb333f4e4992ce8c7f3763ae"
        ],
        [
            "apply pcomp_mon'_correct.",
            "VernacExtend",
            "6fd343f5dd3c0e4afdf67b4e24cb682e26961a95"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pcomp'_correct : forall p pl l, peval (pcomp' p pl) l = peval p (map (fun p' => peval p' l) pl).",
            "VernacStartTheoremProof",
            "6f7821897cae99f05df3233b6f4fd193bf440ea1"
        ],
        [
            "unfold pcomp'; intros [ar ml] pl l.",
            "VernacExtend",
            "29cb8a87e9f59a79502320418a50ec5d47202b6e"
        ],
        [
            "induction ml; simpl in *; trivial.",
            "VernacExtend",
            "ba7c065f37ee612be040e51ce1c4cdb4059ef015"
        ],
        [
            "rewrite pplus_correct, pcomp_mon_correct, IHml; trivial.",
            "VernacExtend",
            "96f0bba149e57aef02b01a8ba3c2e43359da1806"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pcomp_correct p pl l : peval (pcomp p pl) l = peval p (map (fun p => peval p l) pl).",
            "VernacStartTheoremProof",
            "84f354c3e031eaff70cf57f5d107d7da029d5547"
        ],
        [
            "intros; unfold pcomp; rewrite peval_parity.",
            "VernacExtend",
            "8105ee1672963e53a180083d2d4044bc4e79b694"
        ],
        [
            "apply pcomp'_correct.",
            "VernacExtend",
            "9d25c5833252ff8eee107f21f578bf6752ffc0a4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition pshift_pow (xn:pow) : pow := (S (fst xn), snd xn).",
            "VernacDefinition",
            "86f4591272901452625d4c85adf12f41aa83a18b"
        ],
        [
            "Definition pshift_mon (m:mon) : mon := (fst m, map pshift_pow (snd m)).",
            "VernacDefinition",
            "0b927d157bd728156a75efb697fabc6467590212"
        ],
        [
            "Definition pshift (p:pol) : pol := (S (fst p), map pshift_mon (snd p)).",
            "VernacDefinition",
            "71a9b1a1f57c9532dba649d9623e45ced8600844"
        ],
        [
            "Lemma parity_pshift : forall p, parity (pshift p) = S (parity p).",
            "VernacStartTheoremProof",
            "3550006d1a5fe6bc26e00971abd266992b704fa5"
        ],
        [
            "intros [ar ml]; trivial.",
            "VernacExtend",
            "cf4bdb5d87233e811edc3a4ec0a5c8c8e174e205"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_pshift_mon : forall ar m, pWF_mon ar m -> pWF_mon (S ar) (pshift_mon m).",
            "VernacStartTheoremProof",
            "76c6bfc6c06b26391c8f02346ae2bd80b2341fcf"
        ],
        [
            "unfold pWF_mon, pWF_pow.",
            "VernacExtend",
            "da7a768f2662fd68310cc64bf99a7426b2c945c8"
        ],
        [
            "intros ar [a xl] H; simpl.",
            "VernacExtend",
            "cc75a8cbcd867da71775f370e4c61b0199dfaf23"
        ],
        [
            "induction xl as [ | [x n] xl' IH]; simpl in *; trivial.",
            "VernacExtend",
            "926a678e7748432624143e067920b60b6a2eb519"
        ],
        [
            "split; [ omega | tauto ].",
            "VernacExtend",
            "a79f42bf4ce24109e405506c5a4d91314657f593"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_pshift : forall p, pWF p -> pWF (pshift p).",
            "VernacStartTheoremProof",
            "a2b9c3c4d77f0cec1cc93edf71e26061caff8de7"
        ],
        [
            "unfold pWF; intros [ar ml] H; simpl.",
            "VernacExtend",
            "a4f33f6b470513d9b34d833cd42c0a61725ed3fd"
        ],
        [
            "induction ml; simpl in *; trivial.",
            "VernacExtend",
            "ba7c065f37ee612be040e51ce1c4cdb4059ef015"
        ],
        [
            "split;[ | tauto].",
            "VernacExtend",
            "6cedb5e6d492c3f41bb1989b35316e349c3741d2"
        ],
        [
            "apply pWF_pshift_mon; tauto.",
            "VernacExtend",
            "77d3b857bd77b81232a36df38b40ff74b1a98823"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pshift_pow_correct : forall xn l, peval_pow (pshift_pow xn) l = peval_pow xn (tl l).",
            "VernacStartTheoremProof",
            "4bb934cb3c4ad6698fc126349e0677325d5ec81b"
        ],
        [
            "unfold peval_pow; intros [x n] l; simpl; f_equal.",
            "VernacExtend",
            "527ec4286dfdeacf5b9a2fb23863af79fcf66593"
        ],
        [
            "rewrite nth_S_tl; trivial.",
            "VernacExtend",
            "43754cfef8ca4fb439120edb7b686ea328b26fdc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pshift_mon_correct : forall m l, peval_mon (pshift_mon m) l = peval_mon m (tl l).",
            "VernacStartTheoremProof",
            "07f0cc93a745289f76fe47ff9ee50e82cb7346c8"
        ],
        [
            "unfold peval_mon; intros [a xl] l.",
            "VernacExtend",
            "6c3f53b906020bff4675dba06fe412bb071197c1"
        ],
        [
            "induction xl; simpl in * ;trivial.",
            "VernacExtend",
            "db7d30a9c2513984020a9ba8f975e79989d4e19f"
        ],
        [
            "rewrite mult_assoc, (mult_comm a), <- mult_assoc, pshift_pow_correct, IHxl; ring.",
            "VernacExtend",
            "f614f82d931368873256fa3f6a6355be534d7686"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pshift_correct : forall p l, peval (pshift p) l = peval p (tl l).",
            "VernacStartTheoremProof",
            "b3a1b17d9800d2c037928cc34534176d7e9dc45e"
        ],
        [
            "unfold peval; intros [ar ml] l.",
            "VernacExtend",
            "2ada963a32008c8911b63021b787d8652cde5a2e"
        ],
        [
            "induction ml; simpl in *; trivial.",
            "VernacExtend",
            "ba7c065f37ee612be040e51ce1c4cdb4059ef015"
        ],
        [
            "rewrite pshift_mon_correct, IHml; trivial.",
            "VernacExtend",
            "92cb5d248301c1f00acd61a0393d9e8b4a50d936"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition psum (start len : nat) : pol := pplus (pcst (start+len) 0) (pplusl (map (pproj (start+len)) (seq start len))).",
            "VernacDefinition",
            "76028dec35a1cd6f81f2a707ec79359d7fb1c086"
        ],
        [
            "Lemma psum_correct start len l : peval (psum start len) l = plusl (map (fun i => nth i l 0) (seq start len)).",
            "VernacStartTheoremProof",
            "57af05a8809b0fc47873409b97bd6f03b9b6bb2b"
        ],
        [
            "intros; unfold psum.",
            "VernacExtend",
            "f3eee83bb2ad301d68a899842bfa2ee4bcc212bb"
        ],
        [
            "rewrite pplus_correct, pcst_correct, pplusl_correct; simpl; f_equal.",
            "VernacExtend",
            "268ea833c315b13b7f6b7775acbb07890266bf59"
        ],
        [
            "induction (seq start len); simpl; intros; trivial.",
            "VernacExtend",
            "0759cb3b1949c2343a186c653366e5d5a57629fa"
        ],
        [
            "rewrite pproj_correct; congruence.",
            "VernacExtend",
            "be6e7129b38b9ec982d5e240ff6970b64eb7ad08"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma pWF_psum start len : pWF (psum start len).",
            "VernacStartTheoremProof",
            "de40eec2d85f126aa6bc4b5815f6aad89f893429"
        ],
        [
            "intros;unfold psum.",
            "VernacExtend",
            "f3eee83bb2ad301d68a899842bfa2ee4bcc212bb"
        ],
        [
            "apply pWF_pplus.",
            "VernacExtend",
            "611909db8e810836ac413517609eb81e3b4cb8e6"
        ],
        [
            "apply pWF_pcst.",
            "VernacExtend",
            "4f38abf760ebd0ac80111bb2dbf9df41d33017cc"
        ],
        [
            "apply pWF_pplusl.",
            "VernacExtend",
            "c0aff1c41369894ba9e1442734d86ce033db7358"
        ],
        [
            "rewrite <- forall_andl; intros.",
            "VernacExtend",
            "6db80ba84e60085bb219aea5233dec29749150f0"
        ],
        [
            "rewrite in_map_iff in H.",
            "VernacExtend",
            "1873c142ac9ce2a4c8e575b8482c1beb7667d9d4"
        ],
        [
            "destruct H as (y & H1 & H2); subst.",
            "VernacExtend",
            "70c7e45eaef3d17ac2f2b46a5d46e0f880fadbc2"
        ],
        [
            "apply pWF_pproj.",
            "VernacExtend",
            "d6d4e8f4bdb13c62099b27b50c0485187782ae40"
        ],
        [
            "rewrite in_seq_iff in H2.",
            "VernacExtend",
            "0a76e5bd7250accd2747b5bbf79b7173ed86cad7"
        ],
        [
            "tauto.",
            "VernacExtend",
            "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma parity_psum start len : parity (psum start len) = start + len.",
            "VernacStartTheoremProof",
            "e8e4ab17545ac9f9ada3288778e8a1bf5f45118b"
        ],
        [
            "intros; unfold psum.",
            "VernacExtend",
            "f3eee83bb2ad301d68a899842bfa2ee4bcc212bb"
        ],
        [
            "rewrite parity_pplus, parity_pcst, parity_pplusl, max_l; trivial.",
            "VernacExtend",
            "d2b12356f6f59c91f00101419aac4efe09745173"
        ],
        [
            "apply maxl_map.",
            "VernacExtend",
            "962e77817386d0cc6b86c349e95967d631598ac4"
        ],
        [
            "intros p H.",
            "VernacExtend",
            "f37bbd1f6625e9877de18bdb554a5e6e38d0a116"
        ],
        [
            "rewrite in_map_iff in H.",
            "VernacExtend",
            "1873c142ac9ce2a4c8e575b8482c1beb7667d9d4"
        ],
        [
            "destruct H as (x & H & _).",
            "VernacExtend",
            "4bc038508fd8585a7a41fe3147c9e98047b573c6"
        ],
        [
            "subst; trivial.",
            "VernacExtend",
            "5e01514cf2c2ef4c0cbcbb78bcc4307f62cee790"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Ltac pWF := match goal with | |- pWF (pcst _ _) => apply pWF_pcst | |- pWF (pproj _ _) => apply pWF_pproj; try omega | |- pWF (pscalar _ _) => apply pWF_pscalar; pWF | |- pWF (pplus _ _) => apply pWF_pplus; pWF | |- pWF (pplusl _) => apply pWF_pplusl; rewrite <- forall_andl; intros; pWF | |- pWF (pmult _ _) => apply pWF_pmult; pWF | |- pWF (pmultl _) => apply pWF_pmultl; rewrite <- forall_andl; intros; pWF | |- pWF (ppower _ _) => apply pWF_ppower; pWF | |- pWF (pcomp _ _) => apply pWF_pcomp; rewrite <- forall_andl; intros; pWF | |- pWF (pshift _) => apply pWF_pshift; pWF | |- pWF (psum _ _) => apply pWF_psum | |- _ => idtac end.",
            "VernacExtend",
            "02baf7a083b9a7a5a3bd9f43127d449b3a0a2616"
        ],
        [
            "Definition deg_mon (m:mon) : nat := plusl (map (@snd _ _) (snd m)).",
            "VernacDefinition",
            "6de972e4d187eee333a269e3e2b60fe8e99f3b13"
        ],
        [
            "Definition deg (p:pol) : nat := maxl (map deg_mon (snd p)).",
            "VernacDefinition",
            "1339688f36b9a5f79270ce3f456e0645e8e9bd4c"
        ]
    ],
    "proofs": [
        {
            "name": "peval_parity",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intros ar [ar0 ml] l; simpl; trivial.",
                        "VernacExtend",
                        "7d99490babf40cb5ee5a4628defd237940943c72"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "peval_pow_monotonic",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros [x n] l1 l2 H; simpl.",
                        "VernacExtend",
                        "096df80e85d88a54d53172ce3f306965cbcbf2bf"
                    ]
                },
                {
                    "command": [
                        "apply power_le_l; trivial.",
                        "VernacExtend",
                        "5485079344fc3df869843d9ed6497986b1b7e4bc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "peval_mon_monotonic",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "unfold peval_mon; intros [a xl] l1 l2 H.",
                        "VernacExtend",
                        "b975dd923eac4943934081471ebf3391359868c3"
                    ]
                },
                {
                    "command": [
                        "induction xl; simpl; trivial.",
                        "VernacExtend",
                        "b8601b64c9fc87faa432ae3046a281140a84e3eb"
                    ]
                },
                {
                    "command": [
                        "rewrite !mult_assoc, !(mult_comm a), <- !mult_assoc.",
                        "VernacExtend",
                        "3f17990ffadd5d670d07c6af60e3a2d86683b357"
                    ]
                },
                {
                    "command": [
                        "apply mult_le_compat; trivial.",
                        "VernacExtend",
                        "d14c25b31373548e00195f3164c33b37e93b35d5"
                    ]
                },
                {
                    "command": [
                        "apply peval_pow_monotonic; trivial.",
                        "VernacExtend",
                        "261b39bc5a6b45833d539eb32ba18b9fb2eee6a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "peval_monotonic",
            "line_nb": 22,
            "steps": [
                {
                    "command": [
                        "unfold peval; intros [ar ml] l1 l2 H.",
                        "VernacExtend",
                        "1549a02ebfc5d487e57662d0797ce5c1d06a00a3"
                    ]
                },
                {
                    "command": [
                        "induction ml; simpl; trivial.",
                        "VernacExtend",
                        "2ed750645d4953551bf34e79ad0f2b882f779190"
                    ]
                },
                {
                    "command": [
                        "apply plus_le_compat; trivial.",
                        "VernacExtend",
                        "4d8f81e2dec8561e5caafc9b43f02dd52cf35a5f"
                    ]
                },
                {
                    "command": [
                        "apply peval_mon_monotonic; trivial.",
                        "VernacExtend",
                        "5d31c4aeaf880078bb58aad0388260c56c08c995"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "peval_nth",
            "line_nb": 28,
            "steps": [
                {
                    "command": [
                        "intros; revert i.",
                        "VernacExtend",
                        "81a6c0b523f6e31e85cef8df8a8aa83fe9d4c639"
                    ]
                },
                {
                    "command": [
                        "induction pl; intros [ | i]; simpl; intros; trivial.",
                        "VernacExtend",
                        "5b9c98077892dfbb5ef6350d995ea5c9d787b274"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_mon_le",
            "line_nb": 37,
            "steps": [
                {
                    "command": [
                        "unfold pWF_mon, pWF_pow; intros ar1 ar2 [a xl].",
                        "VernacExtend",
                        "643748a25fccb0085f34c0ae0c199e6c8b240a0a"
                    ]
                },
                {
                    "command": [
                        "induction xl as [ | xn xl' IH]; simpl; intros; trivial.",
                        "VernacExtend",
                        "2f5a82f54a4b647d691ebef8562f9f25ef6f3f60"
                    ]
                },
                {
                    "command": [
                        "destruct xn as [x n]; simpl in *.",
                        "VernacExtend",
                        "793e28afc5f83cb81e89e83cb0c9098ef35d926b"
                    ]
                },
                {
                    "command": [
                        "split;[ omega | tauto].",
                        "VernacExtend",
                        "a79f42bf4ce24109e405506c5a4d91314657f593"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF'_le",
            "line_nb": 43,
            "steps": [
                {
                    "command": [
                        "induction ml; simpl; intros; trivial.",
                        "VernacExtend",
                        "ddc76b06259c1f963f67131969f91747158b24b0"
                    ]
                },
                {
                    "command": [
                        "split;[ | tauto].",
                        "VernacExtend",
                        "6cedb5e6d492c3f41bb1989b35316e349c3741d2"
                    ]
                },
                {
                    "command": [
                        "apply pWF_mon_le with ar1; trivial; tauto.",
                        "VernacExtend",
                        "d9fc19fab97cd147d07bff34a565de75cbd00a26"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_mon_app",
            "line_nb": 48,
            "steps": [
                {
                    "command": [
                        "unfold pWF_mon, pWF_pow.",
                        "VernacExtend",
                        "da7a768f2662fd68310cc64bf99a7426b2c945c8"
                    ]
                },
                {
                    "command": [
                        "induction xl1 as [ | [x n] xl1' IH]; simpl; intros; trivial.",
                        "VernacExtend",
                        "a0773660ba397e2d8bc41e5e87a60bd1234fbf5f"
                    ]
                },
                {
                    "command": [
                        "split;[ tauto | ].",
                        "VernacExtend",
                        "eeb813fb82348c980411a834a36457ed83056acd"
                    ]
                },
                {
                    "command": [
                        "apply IH with a1; tauto.",
                        "VernacExtend",
                        "329c79cb91a74d7189fd4d738b75a6d6ac967b0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF'_app",
            "line_nb": 54,
            "steps": [
                {
                    "command": [
                        "induction ml1 as [ | m1 ml1' IH]; simpl; intros; trivial.",
                        "VernacExtend",
                        "8ff2f0a9a7f144f92ab3bfbb8b6c952f86d7570a"
                    ]
                },
                {
                    "command": [
                        "split;[ tauto | ].",
                        "VernacExtend",
                        "eeb813fb82348c980411a834a36457ed83056acd"
                    ]
                },
                {
                    "command": [
                        "apply IH; tauto.",
                        "VernacExtend",
                        "83150a02da068ca98c9c509ca29ba5d8d4b7e78f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_nth",
            "line_nb": 59,
            "steps": [
                {
                    "command": [
                        "intros; revert i.",
                        "VernacExtend",
                        "81a6c0b523f6e31e85cef8df8a8aa83fe9d4c639"
                    ]
                },
                {
                    "command": [
                        "induction pl; simpl in *; intros; case i; intros; trivial.",
                        "VernacExtend",
                        "a989244586b59902f79102b172686aec2e02e371"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "apply IHpl; tauto.",
                        "VernacExtend",
                        "dfa6a0005a33fe105619af24e162b2a5cf756a5d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_mon_correct",
            "line_nb": 65,
            "steps": [
                {
                    "command": [
                        "unfold peval_mon, peval_pow, pWF_mon, pWF_pow.",
                        "VernacExtend",
                        "3218f0f5c1a8ee57389b03efebd0eb1da65e3d56"
                    ]
                },
                {
                    "command": [
                        "intros ar [a xl] l l1 l2 H1 H2; simpl in *; f_equal; f_equal.",
                        "VernacExtend",
                        "94dad3d29c230a8c95cd785df4e5ac7b173bcddc"
                    ]
                },
                {
                    "command": [
                        "induction xl as [ | [x n] xl' IH]; simpl in *; trivial.",
                        "VernacExtend",
                        "926a678e7748432624143e067920b60b6a2eb519"
                    ]
                },
                {
                    "command": [
                        "f_equal;[ | tauto].",
                        "VernacExtend",
                        "8b642f9a0f570933b75677eb0a24292293250eff"
                    ]
                },
                {
                    "command": [
                        "f_equal; rewrite !app_nth1; trivial; omega.",
                        "VernacExtend",
                        "41ba33d795dd4f244fac380047e9de18f7102de5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_correct",
            "line_nb": 72,
            "steps": [
                {
                    "command": [
                        "unfold peval, peval_mon, peval_pow, pWF, pWF_mon, pWF_pow.",
                        "VernacExtend",
                        "d876f98407801494408c3a054dcc0f3a071495d8"
                    ]
                },
                {
                    "command": [
                        "intros [ar ml] l l1 l2 H1 H2; simpl in *; f_equal.",
                        "VernacExtend",
                        "575e70bc72872317c775cabae9dee742825b3d5e"
                    ]
                },
                {
                    "command": [
                        "induction ml as [ | m ml' IH]; simpl in *; trivial.",
                        "VernacExtend",
                        "a847bd1999b347bc17716986f696cd8131dca481"
                    ]
                },
                {
                    "command": [
                        "f_equal;[ | tauto].",
                        "VernacExtend",
                        "8b642f9a0f570933b75677eb0a24292293250eff"
                    ]
                },
                {
                    "command": [
                        "apply parity_mon_correct with ar; tauto.",
                        "VernacExtend",
                        "0ff281675eb0a321a69a4b6af57f30ac9ab12bee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_pcst",
            "line_nb": 80,
            "steps": [
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pcst",
            "line_nb": 83,
            "steps": [
                {
                    "command": [
                        "compute; intros; tauto.",
                        "VernacExtend",
                        "f2a8f727947d9d74d596707fd14bf7d7ea95a4ef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcst_correct",
            "line_nb": 86,
            "steps": [
                {
                    "command": [
                        "unfold peval, peval_mon, peval_pow; simpl; intros; omega.",
                        "VernacExtend",
                        "57f9d726ee835cedfb211dc42c47c4711ab4175d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_pproj",
            "line_nb": 90,
            "steps": [
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pproj",
            "line_nb": 93,
            "steps": [
                {
                    "command": [
                        "compute; intros; tauto.",
                        "VernacExtend",
                        "f2a8f727947d9d74d596707fd14bf7d7ea95a4ef"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pproj_correct",
            "line_nb": 96,
            "steps": [
                {
                    "command": [
                        "unfold peval, peval_mon, peval_pow; simpl; intros; omega.",
                        "VernacExtend",
                        "57f9d726ee835cedfb211dc42c47c4711ab4175d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_pscalar",
            "line_nb": 101,
            "steps": [
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pscalar",
            "line_nb": 104,
            "steps": [
                {
                    "command": [
                        "unfold pWF, pWF_mon, pWF_pow; intros n [ar ml] H.",
                        "VernacExtend",
                        "be710ab2baf9feed75fbf66b7a76f199b3253b2b"
                    ]
                },
                {
                    "command": [
                        "induction ml; simpl in *; trivial; tauto.",
                        "VernacExtend",
                        "2580ee9119d1d2a8a5856315d4462018aad1df27"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pscalar_mon_correct",
            "line_nb": 108,
            "steps": [
                {
                    "command": [
                        "unfold peval_mon; intros n [a xl] l; simpl; ring.",
                        "VernacExtend",
                        "9e6c997617b83663acccdaf7a7374fd5c95ca569"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_pscalar_mon",
            "line_nb": 111,
            "steps": [
                {
                    "command": [
                        "induction ml; simpl; trivial.",
                        "VernacExtend",
                        "2ed750645d4953551bf34e79ad0f2b882f779190"
                    ]
                },
                {
                    "command": [
                        "rewrite pscalar_mon_correct, IHml; ring.",
                        "VernacExtend",
                        "fee028d42cffd6552929961263f7274518ad9073"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pscalar_correct",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "unfold peval, pscalar; intros n [ar pl] l.",
                        "VernacExtend",
                        "9d54f63399842b00b738b0acd1a239e01706f02a"
                    ]
                },
                {
                    "command": [
                        "induction pl; simpl in *; trivial.",
                        "VernacExtend",
                        "ba9e340ed45d2608545a084fb7557bc53619af72"
                    ]
                },
                {
                    "command": [
                        "rewrite map_map in *.",
                        "VernacExtend",
                        "aecd10b153d65a2fbf3863c90e80d9d88a41961e"
                    ]
                },
                {
                    "command": [
                        "rewrite pscalar_mon_correct; simpl in IHpl.",
                        "VernacExtend",
                        "909bd423bb14ca01d244dc50a6f0d7417e951c7a"
                    ]
                },
                {
                    "command": [
                        "rewrite IHpl; ring.",
                        "VernacExtend",
                        "7fa230bcc2afe37ceceb11198333b77ba7281f86"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_pplus",
            "line_nb": 123,
            "steps": [
                {
                    "command": [
                        "intros [ar1 ml1] [ar2 ml2]; trivial.",
                        "VernacExtend",
                        "4cd9389e2c84dfe9413fcf7928872d48faf44236"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pplus",
            "line_nb": 126,
            "steps": [
                {
                    "command": [
                        "unfold pWF, pWF_mon, pWF_pow.",
                        "VernacExtend",
                        "e13784056f6aa318af6e0b73abc0ca869f542b36"
                    ]
                },
                {
                    "command": [
                        "intros [ar1 ml1] [ar2 ml2] H1 H2; simpl in *.",
                        "VernacExtend",
                        "eadc5c0d08eab598e20c451480845bc9e239c658"
                    ]
                },
                {
                    "command": [
                        "induction ml1 as [ | m1 ml1' IH]; simpl in *.",
                        "VernacExtend",
                        "cb5ba66bd0eb9071ba0d60ed71cab4979a3b45fc"
                    ]
                },
                {
                    "command": [
                        "apply pWF'_le with ar2; auto with arith.",
                        "VernacExtend",
                        "587a4779cea37fdf4d740fd78648d7c86777da63"
                    ]
                },
                {
                    "command": [
                        "split;[ | tauto ].",
                        "VernacExtend",
                        "6cedb5e6d492c3f41bb1989b35316e349c3741d2"
                    ]
                },
                {
                    "command": [
                        "apply pWF_mon_le with ar1; auto with arith; tauto.",
                        "VernacExtend",
                        "b0d47799b848ae6998d5e258a2aa49b35a51faa9"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pplus_correct",
            "line_nb": 134,
            "steps": [
                {
                    "command": [
                        "unfold peval, peval_mon, peval_pow.",
                        "VernacExtend",
                        "434ec54b2d546bc35b1746272b77c07f1e494722"
                    ]
                },
                {
                    "command": [
                        "intros [ar1 ml1] [ar2 ml2] l.",
                        "VernacExtend",
                        "06bde695171418fdd0881ac6a5a2c5de9913bcac"
                    ]
                },
                {
                    "command": [
                        "induction ml1 as [ | m1 ml1' IH]; simpl in *; trivial.",
                        "VernacExtend",
                        "d236cfcb2c4a8e9b903281ac6e4550b5ea75e3e0"
                    ]
                },
                {
                    "command": [
                        "unfold peval, pplus in IH; rewrite IH; ring.",
                        "VernacExtend",
                        "4924db66e2477da7fa5bacf7836f8a08c493a823"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_pplusl",
            "line_nb": 141,
            "steps": [
                {
                    "command": [
                        "induction pl; trivial; simpl pplusl.",
                        "VernacExtend",
                        "653d6581ce7c15471c4efebae0a5a902232a54ab"
                    ]
                },
                {
                    "command": [
                        "rewrite parity_pplus, IHpl; trivial.",
                        "VernacExtend",
                        "0bdcbad8c10d9855e0971e774aea9c61dbc92c83"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pplusl",
            "line_nb": 145,
            "steps": [
                {
                    "command": [
                        "unfold pWF, pWF_mon, pWF_pow.",
                        "VernacExtend",
                        "e13784056f6aa318af6e0b73abc0ca869f542b36"
                    ]
                },
                {
                    "command": [
                        "induction pl; intros;[ simpl; tauto |].",
                        "VernacExtend",
                        "b7dff23bca5b7c98a340b2f779cf64d694237d9a"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pplus; simpl in *; tauto.",
                        "VernacExtend",
                        "a0258dd2e4e75047bd4485dbf6bfe4f3318da63d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pplusl_correct",
            "line_nb": 150,
            "steps": [
                {
                    "command": [
                        "induction pl; simpl; intros; trivial.",
                        "VernacExtend",
                        "2a04dc37af6a414cbcd0a72bba6850b0b0795684"
                    ]
                },
                {
                    "command": [
                        "rewrite pplus_correct, IHpl; trivial.",
                        "VernacExtend",
                        "556ec10f8f984aa237f519656b2e3064e9e2e6e6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "peval_nth_pplus",
            "line_nb": 154,
            "steps": [
                {
                    "command": [
                        "induction pl; simpl; intros; case i; trivial; rewrite pplus_correct; [ omega | ].",
                        "VernacExtend",
                        "912bc90eca3ce1b6781a0ed3cdc8725b6b532cf8"
                    ]
                },
                {
                    "command": [
                        "intros; eapply le_trans;[ apply IHpl | ].",
                        "VernacExtend",
                        "b0de5780c0b6282e708251a7d0e01e89eeb55d58"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_pmult",
            "line_nb": 161,
            "steps": [
                {
                    "command": [
                        "intros [ar1 ml1] [ar2 ml2]; trivial.",
                        "VernacExtend",
                        "4cd9389e2c84dfe9413fcf7928872d48faf44236"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pmult_mon",
            "line_nb": 164,
            "steps": [
                {
                    "command": [
                        "intros ar1 [a1 xl1] ar2 [a2 xl2]; simpl pmult_mon; intros.",
                        "VernacExtend",
                        "0a92a3e2ccaa962537aafd177e340208581d878d"
                    ]
                },
                {
                    "command": [
                        "apply pWF_mon_app.",
                        "VernacExtend",
                        "cfff773458215c3c582c220d348f758886a2c7ba"
                    ]
                },
                {
                    "command": [
                        "apply pWF_mon_le with ar1; auto with arith.",
                        "VernacExtend",
                        "eb8795c654d7b3787131f08f26594f966a1455de"
                    ]
                },
                {
                    "command": [
                        "apply pWF_mon_le with ar2; auto with arith.",
                        "VernacExtend",
                        "140afd75627b868ded0c671cb2e8c6ff6ca65d6d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pmult",
            "line_nb": 170,
            "steps": [
                {
                    "command": [
                        "unfold pWF, pWF_mon, pWF_pow.",
                        "VernacExtend",
                        "e13784056f6aa318af6e0b73abc0ca869f542b36"
                    ]
                },
                {
                    "command": [
                        "intros [ar1 ml1] [ar2 ml2] H1 H2; simpl in *.",
                        "VernacExtend",
                        "eadc5c0d08eab598e20c451480845bc9e239c658"
                    ]
                },
                {
                    "command": [
                        "induction ml1 as [ | m1 ml1' IH1]; simpl in *; intros; trivial.",
                        "VernacExtend",
                        "28a3203978dbdc4ef9425a158398e01ef8feee4f"
                    ]
                },
                {
                    "command": [
                        "rewrite map_app, map_map.",
                        "VernacExtend",
                        "b9a36555c4d82b8cce9188f6e3b254ec86c12c51"
                    ]
                },
                {
                    "command": [
                        "apply pWF'_app;[ | tauto ].",
                        "VernacExtend",
                        "a8780899f0d00c2f32675f93c0f7549c191bfbe9"
                    ]
                },
                {
                    "command": [
                        "clear IH1.",
                        "VernacExtend",
                        "e2283f05633945505be8f0f8e37e8c8e4df49c55"
                    ]
                },
                {
                    "command": [
                        "induction ml2 as [ | m2 ml2' IH2]; simpl in *; intros; trivial.",
                        "VernacExtend",
                        "2f57929e4734f4d61db0def158e640d88f9ca50b"
                    ]
                },
                {
                    "command": [
                        "split;[ | tauto ].",
                        "VernacExtend",
                        "6cedb5e6d492c3f41bb1989b35316e349c3741d2"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pmult_mon; tauto.",
                        "VernacExtend",
                        "ead87280c9682ca159443d854ed51e33df1b9d21"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmult_mon_correct",
            "line_nb": 181,
            "steps": [
                {
                    "command": [
                        "unfold peval_mon, peval_pow.",
                        "VernacExtend",
                        "f6a70558f09941a9932f02ed88f593ced9c96a5c"
                    ]
                },
                {
                    "command": [
                        "intros [[a1 xl1] [a2 xl2]] l; simpl.",
                        "VernacExtend",
                        "5280913f7fed04b0de1c44442d16fbf60d6bb8d6"
                    ]
                },
                {
                    "command": [
                        "induction xl1 as [ | x1 xl1' IH]; simpl;[ ring | ring [IH] ].",
                        "VernacExtend",
                        "9c487776c5288e2d4e4dcef768cba8355306b327"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_pmult_mon",
            "line_nb": 186,
            "steps": [
                {
                    "command": [
                        "unfold peval_mon, peval_pow.",
                        "VernacExtend",
                        "f6a70558f09941a9932f02ed88f593ced9c96a5c"
                    ]
                },
                {
                    "command": [
                        "intros [a1 xl1] ml2 l; simpl.",
                        "VernacExtend",
                        "c686b4c0318c22cfbd617929b456a15d7eb40124"
                    ]
                },
                {
                    "command": [
                        "induction ml2 as [ | [a2 xl2] ml2' IH]; simpl; trivial.",
                        "VernacExtend",
                        "a428b033b2a680cf3c969dc6ba7b333a09bd9483"
                    ]
                },
                {
                    "command": [
                        "rewrite IH, map_app, multl_app; f_equal; ring.",
                        "VernacExtend",
                        "5cb20ad2f4c54c02eb125a8c07843e8830d3914d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmult_correct",
            "line_nb": 192,
            "steps": [
                {
                    "command": [
                        "unfold peval; intros [ar1 ml1] [ar2 ml2] l; simpl.",
                        "VernacExtend",
                        "2fe7f86964e6da4aaaa747fc289a20976a597ebb"
                    ]
                },
                {
                    "command": [
                        "induction ml1 as [ | m1 ml1' IH]; simpl; trivial.",
                        "VernacExtend",
                        "1a560dacce90c2b7a66694cc490d726f5912d83f"
                    ]
                },
                {
                    "command": [
                        "rewrite !map_app, !map_map, map_pmult_mon, plusl_app.",
                        "VernacExtend",
                        "c8ae4b05f1723750e948303823f00e0854ab2cc1"
                    ]
                },
                {
                    "command": [
                        "rewrite map_map in IH; rewrite IH.",
                        "VernacExtend",
                        "919e7ec0fb7d8db1d3552b871a15907c728cd1a5"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_plus_distr_r.",
                        "VernacExtend",
                        "c98266c52d81f9d2eb96b49e4fc06afcb0572340"
                    ]
                },
                {
                    "command": [
                        "f_equal.",
                        "VernacExtend",
                        "dfce814d1efcef60f8330516ad88155a3a5ec317"
                    ]
                },
                {
                    "command": [
                        "rewrite multl_plus_distr_l, map_map; trivial.",
                        "VernacExtend",
                        "38c13b5f47bc43a529114ee8f92fee3cfb342cad"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_pmultl",
            "line_nb": 202,
            "steps": [
                {
                    "command": [
                        "induction pl; simpl pmultl; trivial.",
                        "VernacExtend",
                        "d993b4843a45fba83f3e4c4ec4c5bc796fd05bd0"
                    ]
                },
                {
                    "command": [
                        "rewrite parity_pmult, IHpl; trivial.",
                        "VernacExtend",
                        "8e076c446e322054edc14255f5e255042ecb8a3b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pmultl",
            "line_nb": 206,
            "steps": [
                {
                    "command": [
                        "induction pl; simpl pmultl; intros.",
                        "VernacExtend",
                        "8b5a289d903c6d306a8166f19b69df93123460e2"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pcst.",
                        "VernacExtend",
                        "4f38abf760ebd0ac80111bb2dbf9df41d33017cc"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pmult; simpl in *; tauto.",
                        "VernacExtend",
                        "0f713dc6bd9ffcccad75e5c1526999050fc99219"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pmultl_correct",
            "line_nb": 211,
            "steps": [
                {
                    "command": [
                        "induction pl; simpl; intros; trivial.",
                        "VernacExtend",
                        "2a04dc37af6a414cbcd0a72bba6850b0b0795684"
                    ]
                },
                {
                    "command": [
                        "rewrite pmult_correct, IHpl; trivial.",
                        "VernacExtend",
                        "38822e71abab8a4ce3903ad2a9a42443213a9dce"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_ppower",
            "line_nb": 216,
            "steps": [
                {
                    "command": [
                        "induction n; simpl ppower; trivial.",
                        "VernacExtend",
                        "275c4e7668ed090d846c21a9996a476528c5a3e0"
                    ]
                },
                {
                    "command": [
                        "rewrite parity_pmult, IHn; auto with arith.",
                        "VernacExtend",
                        "c9b03f8e57cedf6fe64e6af920a3ef5fbc15d301"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_ppower",
            "line_nb": 220,
            "steps": [
                {
                    "command": [
                        "induction n; simpl ppower; intros.",
                        "VernacExtend",
                        "28f338696857d2a1bfae2180a43cc2c46d378867"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pcst.",
                        "VernacExtend",
                        "4f38abf760ebd0ac80111bb2dbf9df41d33017cc"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pmult; tauto.",
                        "VernacExtend",
                        "bdcf03e5db29dce9d52ca20283d4d78275d5045c"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "ppower_correct",
            "line_nb": 225,
            "steps": [
                {
                    "command": [
                        "induction n; simpl; intros; trivial.",
                        "VernacExtend",
                        "f11f88911c08a055d0ebf1f67e856e8f9c990aa8"
                    ]
                },
                {
                    "command": [
                        "rewrite pmult_correct, IHn;trivial.",
                        "VernacExtend",
                        "2b0298397254122a154078ee0d148f5c2f4cb94a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_pcomp_pow",
            "line_nb": 235,
            "steps": [
                {
                    "command": [
                        "unfold pcomp_pow; intros [x n] pl; simpl.",
                        "VernacExtend",
                        "565edef4f5bb65107a0bb09f925ad2796afe9c6f"
                    ]
                },
                {
                    "command": [
                        "case_eq (ppower (nth x pl (pcst 0 0)) n); trivial.",
                        "VernacExtend",
                        "bd90d1d2d3a335816aa398a129d074a2db75a76e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "map_parity_pcomp_pow",
            "line_nb": 239,
            "steps": [
                {
                    "command": [
                        "destruct xl; simpl; trivial.",
                        "VernacExtend",
                        "0a3dfce17af568ff29f8b0977f476c98761ff2f0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_pcomp_mon'",
            "line_nb": 242,
            "steps": [
                {
                    "command": [
                        "intros [a xl] pl; simpl.",
                        "VernacExtend",
                        "c0790bb16fc02bcd947d2b72c15093ad5838d228"
                    ]
                },
                {
                    "command": [
                        "rewrite parity_pmultl.",
                        "VernacExtend",
                        "394e3385435558f9dad3d4287eaa53f97d7332e9"
                    ]
                },
                {
                    "command": [
                        "induction xl; simpl.",
                        "VernacExtend",
                        "926b66103f1b2ebf7d4bff9a7c33fcf636a01923"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Nat.max_lub; trivial.",
                        "VernacExtend",
                        "3baabdde61d00ad046c947af1c00e234ac3b57c6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_pcomp_mon",
            "line_nb": 249,
            "steps": [
                {
                    "command": [
                        "unfold pcomp_mon; intros [a xl] pl; simpl; trivial.",
                        "VernacExtend",
                        "cf04dfdcf44338205dcc631c046f223b7d585603"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_pcomp",
            "line_nb": 252,
            "steps": [
                {
                    "command": [
                        "unfold pcomp; intros.",
                        "VernacExtend",
                        "6051ec8e89cc90182995a864121a0f74bbe09929"
                    ]
                },
                {
                    "command": [
                        "case (pcomp' p pl); trivial.",
                        "VernacExtend",
                        "e3c806f838070c8a18a3ce79678a7132ef541eee"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pcomp_pow'",
            "line_nb": 256,
            "steps": [
                {
                    "command": [
                        "intros [x n] pl H; simpl.",
                        "VernacExtend",
                        "8914670fcaf23dabf1da467f27ee988bb0806045"
                    ]
                },
                {
                    "command": [
                        "apply pWF_ppower.",
                        "VernacExtend",
                        "2bcd05748fb1d071f605a45c92a7601dcc32bd73"
                    ]
                },
                {
                    "command": [
                        "apply pWF_nth; trivial.",
                        "VernacExtend",
                        "772be49c7ad0eaab29232d67b85ae2c28974dcaa"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pcst.",
                        "VernacExtend",
                        "4f38abf760ebd0ac80111bb2dbf9df41d33017cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pcomp_pow",
            "line_nb": 262,
            "steps": [
                {
                    "command": [
                        "intros [x n] pl H.",
                        "VernacExtend",
                        "65d7314af4c7a9cdf91869c27b3f641effee873d"
                    ]
                },
                {
                    "command": [
                        "apply pWF'_le with (ar1 := fst (pcomp_pow' (x, n) pl)).",
                        "VernacExtend",
                        "cbba5573c3e7618138292013a9bc1c7e286f17bc"
                    ]
                },
                {
                    "command": [
                        "rewrite parity_pcomp_pow.",
                        "VernacExtend",
                        "cc3b9ad730adfa5ed6e8bde6b268f1bd0595f400"
                    ]
                },
                {
                    "command": [
                        "unfold pcomp_pow'.",
                        "VernacExtend",
                        "ceed2a693f7eb2b86f2c5ef9bfea8f3eb3a7253a"
                    ]
                },
                {
                    "command": [
                        "rewrite parity_ppower.",
                        "VernacExtend",
                        "bca8996ee6d5051e8ef25a65a9facab26fb46709"
                    ]
                },
                {
                    "command": [
                        "destruct (le_lt_dec (length pl) x).",
                        "VernacExtend",
                        "53159ba10f14f7be74f5f146efc5ba807d0e5c87"
                    ]
                },
                {
                    "command": [
                        "rewrite nth_overflow; auto with arith.",
                        "VernacExtend",
                        "27177ea20e0e45a5b6d79db90c717cba2c446d3d"
                    ]
                },
                {
                    "command": [
                        "apply in_le_maxl.",
                        "VernacExtend",
                        "3e84d025450b178d5968da17c622f4be8292aa61"
                    ]
                },
                {
                    "command": [
                        "apply in_map.",
                        "VernacExtend",
                        "8b1d6650eff402b483dc29bd25bb3e04ea7f525b"
                    ]
                },
                {
                    "command": [
                        "apply nth_In; trivial.",
                        "VernacExtend",
                        "0aa084d71d69e1b8a87a1025ff7a9ca7a09fd7b0"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pcomp_pow'; trivial.",
                        "VernacExtend",
                        "e70fd4d4f8b6f565d8853e8f060a8ca823242484"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pcomp_mon'",
            "line_nb": 275,
            "steps": [
                {
                    "command": [
                        "unfold pWF, pWF', pWF_mon, pWF_pow.",
                        "VernacExtend",
                        "e39af9d85850596659c75e2f77838e2ce4e73fed"
                    ]
                },
                {
                    "command": [
                        "intros [a xl] pl H.",
                        "VernacExtend",
                        "8b8d493c03bc5749f896e12f54ddf378198ae3aa"
                    ]
                },
                {
                    "command": [
                        "induction xl as [ | [x n] xl' IH].",
                        "VernacExtend",
                        "3a40da5588074d05010dd735cdeb664934422112"
                    ]
                },
                {
                    "command": [
                        "simpl; tauto.",
                        "VernacExtend",
                        "2c27d7b56602355c3ed4605e551cd6a88509ac37"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pscalar.",
                        "VernacExtend",
                        "4cad19fcf48288d2dc099f23643ce08a02ac4325"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pmultl.",
                        "VernacExtend",
                        "97d0b8ac7b1caf82848e9bffc1a52d42df7a5338"
                    ]
                },
                {
                    "command": [
                        "clear IH.",
                        "VernacExtend",
                        "daecf0ea8665f0f6fd551644d47b5ce1d93aef1e"
                    ]
                },
                {
                    "command": [
                        "induction xl'; simpl in *.",
                        "VernacExtend",
                        "5d2067931943e6dda85d47229e1906422c784f5c"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pcomp_pow; trivial.",
                        "VernacExtend",
                        "8db5b7a3ae34d75ea5678259c9802a9eba38d0a0"
                    ]
                },
                {
                    "command": [
                        "split;[ tauto | split ].",
                        "VernacExtend",
                        "ec6a602ac86de6d007fb62700e67f91d23f8058a"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pcomp_pow; trivial.",
                        "VernacExtend",
                        "8db5b7a3ae34d75ea5678259c9802a9eba38d0a0"
                    ]
                },
                {
                    "command": [
                        "apply IHxl'.",
                        "VernacExtend",
                        "16e1af17b993271d1cbff5e121662660aa9fa2e4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pcomp_mon",
            "line_nb": 290,
            "steps": [
                {
                    "command": [
                        "intros [a xl] pl H.",
                        "VernacExtend",
                        "8b8d493c03bc5749f896e12f54ddf378198ae3aa"
                    ]
                },
                {
                    "command": [
                        "apply pWF'_le with (ar1 := fst (pcomp_mon' (a, xl) pl)).",
                        "VernacExtend",
                        "66d0df5cc40d20353033837ea1afd748378d8bc3"
                    ]
                },
                {
                    "command": [
                        "apply parity_pcomp_mon'.",
                        "VernacExtend",
                        "78c6960ace9feece27f970cfaa99376ecee2194e"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pcomp_mon'; trivial.",
                        "VernacExtend",
                        "81fe61d2383587875c8a7720ba622de3e0c5e184"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pcomp'",
            "line_nb": 296,
            "steps": [
                {
                    "command": [
                        "intros [ar ml] pl H; simpl.",
                        "VernacExtend",
                        "e9da005269c6b313e779697de6a941107e69955e"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pplusl.",
                        "VernacExtend",
                        "c0aff1c41369894ba9e1442734d86ce033db7358"
                    ]
                },
                {
                    "command": [
                        "induction ml; simpl in *; trivial.",
                        "VernacExtend",
                        "ba7c065f37ee612be040e51ce1c4cdb4059ef015"
                    ]
                },
                {
                    "command": [
                        "split; trivial.",
                        "VernacExtend",
                        "51e6eaa57561ac50797e703222408862cfba3b15"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pcomp_mon; trivial.",
                        "VernacExtend",
                        "44d52f134e73e766f777c5bb80d36fa03bd5c37b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pcomp",
            "line_nb": 303,
            "steps": [
                {
                    "command": [
                        "intros [ar ml] pl H.",
                        "VernacExtend",
                        "07c4f12aabb31222c90e8c77c97734b29caa51f6"
                    ]
                },
                {
                    "command": [
                        "apply pWF'_le with (ar1 := fst (pcomp' (ar, ml) pl)).",
                        "VernacExtend",
                        "29e510aacdfbb3f2cbbee73e0e834c7e9e4e4ec3"
                    ]
                },
                {
                    "command": [
                        "rewrite parity_pcomp; unfold pcomp'.",
                        "VernacExtend",
                        "64bb7aad9235a79318be08cb33c865df1b45b080"
                    ]
                },
                {
                    "command": [
                        "rewrite parity_pplusl, map_map.",
                        "VernacExtend",
                        "0c723999ca4850afc977ee75e0cef85418c0908b"
                    ]
                },
                {
                    "command": [
                        "induction ml; simpl.",
                        "VernacExtend",
                        "59c61c5a1fbbb9fd30a1634324a9b5ee3948d411"
                    ]
                },
                {
                    "command": [
                        "omega.",
                        "VernacExtend",
                        "32c6c865d255452c7e10c77111456d1981cede39"
                    ]
                },
                {
                    "command": [
                        "apply Nat.max_lub; trivial.",
                        "VernacExtend",
                        "3baabdde61d00ad046c947af1c00e234ac3b57c6"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pcomp'; trivial.",
                        "VernacExtend",
                        "0d584b2905d531e30607edf47d529a820fbc392f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcomp_pow'_correct",
            "line_nb": 313,
            "steps": [
                {
                    "command": [
                        "intros [x n] pl l; simpl; apply ppower_correct.",
                        "VernacExtend",
                        "47ba4f3755f1e1f521b827808b2e3d9fff1ab24e"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcomp_pow_correct",
            "line_nb": 316,
            "steps": [
                {
                    "command": [
                        "intros; unfold pcomp_pow; apply pcomp_pow'_correct.",
                        "VernacExtend",
                        "1ee983e4ba720d4c6dc1022b45d2de37f420ab24"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcomp_mon'_correct",
            "line_nb": 319,
            "steps": [
                {
                    "command": [
                        "intros [a xl] pl l; induction xl.",
                        "VernacExtend",
                        "105fb036345df9f1fe93a721a99a4b1ca3bc121c"
                    ]
                },
                {
                    "command": [
                        "unfold peval, peval_mon.",
                        "VernacExtend",
                        "022a705a81b4c2a668e77da1900f14578d7da6b9"
                    ]
                },
                {
                    "command": [
                        "simpl; ring.",
                        "VernacExtend",
                        "dbea56eab9f20d9ab08eaf0f2769e833b9098d51"
                    ]
                },
                {
                    "command": [
                        "unfold pcomp_mon' in *; simpl in *.",
                        "VernacExtend",
                        "f4ab6208ab79bc9dd5db27a82438eac6e399382e"
                    ]
                },
                {
                    "command": [
                        "rewrite pscalar_correct, pmult_correct, pmultl_correct in *.",
                        "VernacExtend",
                        "cb3a625067e237150ad3b63fa77a427c08b6daf3"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_assoc, (mult_comm a), <- mult_assoc, IHxl, pcomp_pow_correct, peval_nth.",
                        "VernacExtend",
                        "f30997c8756aed7e1fe4cd8119d811f67324fa66"
                    ]
                },
                {
                    "command": [
                        "destruct a0 as [x n].",
                        "VernacExtend",
                        "3c3cd3174de6b20cee5e8e3900d925f586d6897b"
                    ]
                },
                {
                    "command": [
                        "unfold peval_mon, peval_pow.",
                        "VernacExtend",
                        "f6a70558f09941a9932f02ed88f593ced9c96a5c"
                    ]
                },
                {
                    "command": [
                        "rewrite pcst_correct; simpl; ring.",
                        "VernacExtend",
                        "8dfa88d1be13ab9811b8ec9db80924f83aa59c7f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcomp_mon_correct",
            "line_nb": 330,
            "steps": [
                {
                    "command": [
                        "intros [a xl] pl l; unfold pcomp_mon.",
                        "VernacExtend",
                        "8c7fec1d681e646948ba15f069396bd5d680b923"
                    ]
                },
                {
                    "command": [
                        "rewrite peval_parity.",
                        "VernacExtend",
                        "d9d1cdf7f7f23059fb333f4e4992ce8c7f3763ae"
                    ]
                },
                {
                    "command": [
                        "apply pcomp_mon'_correct.",
                        "VernacExtend",
                        "6fd343f5dd3c0e4afdf67b4e24cb682e26961a95"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcomp'_correct",
            "line_nb": 335,
            "steps": [
                {
                    "command": [
                        "unfold pcomp'; intros [ar ml] pl l.",
                        "VernacExtend",
                        "29cb8a87e9f59a79502320418a50ec5d47202b6e"
                    ]
                },
                {
                    "command": [
                        "induction ml; simpl in *; trivial.",
                        "VernacExtend",
                        "ba7c065f37ee612be040e51ce1c4cdb4059ef015"
                    ]
                },
                {
                    "command": [
                        "rewrite pplus_correct, pcomp_mon_correct, IHml; trivial.",
                        "VernacExtend",
                        "96f0bba149e57aef02b01a8ba3c2e43359da1806"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pcomp_correct",
            "line_nb": 340,
            "steps": [
                {
                    "command": [
                        "intros; unfold pcomp; rewrite peval_parity.",
                        "VernacExtend",
                        "8105ee1672963e53a180083d2d4044bc4e79b694"
                    ]
                },
                {
                    "command": [
                        "apply pcomp'_correct.",
                        "VernacExtend",
                        "9d25c5833252ff8eee107f21f578bf6752ffc0a4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_pshift",
            "line_nb": 347,
            "steps": [
                {
                    "command": [
                        "intros [ar ml]; trivial.",
                        "VernacExtend",
                        "cf4bdb5d87233e811edc3a4ec0a5c8c8e174e205"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pshift_mon",
            "line_nb": 350,
            "steps": [
                {
                    "command": [
                        "unfold pWF_mon, pWF_pow.",
                        "VernacExtend",
                        "da7a768f2662fd68310cc64bf99a7426b2c945c8"
                    ]
                },
                {
                    "command": [
                        "intros ar [a xl] H; simpl.",
                        "VernacExtend",
                        "cc75a8cbcd867da71775f370e4c61b0199dfaf23"
                    ]
                },
                {
                    "command": [
                        "induction xl as [ | [x n] xl' IH]; simpl in *; trivial.",
                        "VernacExtend",
                        "926a678e7748432624143e067920b60b6a2eb519"
                    ]
                },
                {
                    "command": [
                        "split; [ omega | tauto ].",
                        "VernacExtend",
                        "a79f42bf4ce24109e405506c5a4d91314657f593"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_pshift",
            "line_nb": 356,
            "steps": [
                {
                    "command": [
                        "unfold pWF; intros [ar ml] H; simpl.",
                        "VernacExtend",
                        "a4f33f6b470513d9b34d833cd42c0a61725ed3fd"
                    ]
                },
                {
                    "command": [
                        "induction ml; simpl in *; trivial.",
                        "VernacExtend",
                        "ba7c065f37ee612be040e51ce1c4cdb4059ef015"
                    ]
                },
                {
                    "command": [
                        "split;[ | tauto].",
                        "VernacExtend",
                        "6cedb5e6d492c3f41bb1989b35316e349c3741d2"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pshift_mon; tauto.",
                        "VernacExtend",
                        "77d3b857bd77b81232a36df38b40ff74b1a98823"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pshift_pow_correct",
            "line_nb": 362,
            "steps": [
                {
                    "command": [
                        "unfold peval_pow; intros [x n] l; simpl; f_equal.",
                        "VernacExtend",
                        "527ec4286dfdeacf5b9a2fb23863af79fcf66593"
                    ]
                },
                {
                    "command": [
                        "rewrite nth_S_tl; trivial.",
                        "VernacExtend",
                        "43754cfef8ca4fb439120edb7b686ea328b26fdc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pshift_mon_correct",
            "line_nb": 366,
            "steps": [
                {
                    "command": [
                        "unfold peval_mon; intros [a xl] l.",
                        "VernacExtend",
                        "6c3f53b906020bff4675dba06fe412bb071197c1"
                    ]
                },
                {
                    "command": [
                        "induction xl; simpl in * ;trivial.",
                        "VernacExtend",
                        "db7d30a9c2513984020a9ba8f975e79989d4e19f"
                    ]
                },
                {
                    "command": [
                        "rewrite mult_assoc, (mult_comm a), <- mult_assoc, pshift_pow_correct, IHxl; ring.",
                        "VernacExtend",
                        "f614f82d931368873256fa3f6a6355be534d7686"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pshift_correct",
            "line_nb": 371,
            "steps": [
                {
                    "command": [
                        "unfold peval; intros [ar ml] l.",
                        "VernacExtend",
                        "2ada963a32008c8911b63021b787d8652cde5a2e"
                    ]
                },
                {
                    "command": [
                        "induction ml; simpl in *; trivial.",
                        "VernacExtend",
                        "ba7c065f37ee612be040e51ce1c4cdb4059ef015"
                    ]
                },
                {
                    "command": [
                        "rewrite pshift_mon_correct, IHml; trivial.",
                        "VernacExtend",
                        "92cb5d248301c1f00acd61a0393d9e8b4a50d936"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "psum_correct",
            "line_nb": 377,
            "steps": [
                {
                    "command": [
                        "intros; unfold psum.",
                        "VernacExtend",
                        "f3eee83bb2ad301d68a899842bfa2ee4bcc212bb"
                    ]
                },
                {
                    "command": [
                        "rewrite pplus_correct, pcst_correct, pplusl_correct; simpl; f_equal.",
                        "VernacExtend",
                        "268ea833c315b13b7f6b7775acbb07890266bf59"
                    ]
                },
                {
                    "command": [
                        "induction (seq start len); simpl; intros; trivial.",
                        "VernacExtend",
                        "0759cb3b1949c2343a186c653366e5d5a57629fa"
                    ]
                },
                {
                    "command": [
                        "rewrite pproj_correct; congruence.",
                        "VernacExtend",
                        "be6e7129b38b9ec982d5e240ff6970b64eb7ad08"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "pWF_psum",
            "line_nb": 383,
            "steps": [
                {
                    "command": [
                        "intros;unfold psum.",
                        "VernacExtend",
                        "f3eee83bb2ad301d68a899842bfa2ee4bcc212bb"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pplus.",
                        "VernacExtend",
                        "611909db8e810836ac413517609eb81e3b4cb8e6"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pcst.",
                        "VernacExtend",
                        "4f38abf760ebd0ac80111bb2dbf9df41d33017cc"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pplusl.",
                        "VernacExtend",
                        "c0aff1c41369894ba9e1442734d86ce033db7358"
                    ]
                },
                {
                    "command": [
                        "rewrite <- forall_andl; intros.",
                        "VernacExtend",
                        "6db80ba84e60085bb219aea5233dec29749150f0"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff in H.",
                        "VernacExtend",
                        "1873c142ac9ce2a4c8e575b8482c1beb7667d9d4"
                    ]
                },
                {
                    "command": [
                        "destruct H as (y & H1 & H2); subst.",
                        "VernacExtend",
                        "70c7e45eaef3d17ac2f2b46a5d46e0f880fadbc2"
                    ]
                },
                {
                    "command": [
                        "apply pWF_pproj.",
                        "VernacExtend",
                        "d6d4e8f4bdb13c62099b27b50c0485187782ae40"
                    ]
                },
                {
                    "command": [
                        "rewrite in_seq_iff in H2.",
                        "VernacExtend",
                        "0a76e5bd7250accd2747b5bbf79b7173ed86cad7"
                    ]
                },
                {
                    "command": [
                        "tauto.",
                        "VernacExtend",
                        "9bfafe84fb6724789bdf6cfd21cd721dd63fdabd"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "parity_psum",
            "line_nb": 395,
            "steps": [
                {
                    "command": [
                        "intros; unfold psum.",
                        "VernacExtend",
                        "f3eee83bb2ad301d68a899842bfa2ee4bcc212bb"
                    ]
                },
                {
                    "command": [
                        "rewrite parity_pplus, parity_pcst, parity_pplusl, max_l; trivial.",
                        "VernacExtend",
                        "d2b12356f6f59c91f00101419aac4efe09745173"
                    ]
                },
                {
                    "command": [
                        "apply maxl_map.",
                        "VernacExtend",
                        "962e77817386d0cc6b86c349e95967d631598ac4"
                    ]
                },
                {
                    "command": [
                        "intros p H.",
                        "VernacExtend",
                        "f37bbd1f6625e9877de18bdb554a5e6e38d0a116"
                    ]
                },
                {
                    "command": [
                        "rewrite in_map_iff in H.",
                        "VernacExtend",
                        "1873c142ac9ce2a4c8e575b8482c1beb7667d9d4"
                    ]
                },
                {
                    "command": [
                        "destruct H as (x & H & _).",
                        "VernacExtend",
                        "4bc038508fd8585a7a41fe3147c9e98047b573c6"
                    ]
                },
                {
                    "command": [
                        "subst; trivial.",
                        "VernacExtend",
                        "5e01514cf2c2ef4c0cbcbb78bcc4307f62cee790"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}