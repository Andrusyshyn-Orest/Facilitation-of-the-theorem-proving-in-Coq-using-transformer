{
    "filename": "src/BellantoniCook/Bitstring.v",
    "coq_project": "bellantonicook",
    "vernac_cmds": [
        [
            "Require Import Bool Arith Div2 List.",
            "VernacRequire",
            "8bcadad904f6b2c4487f8227a61e5f70f5fe4d5e"
        ],
        [
            "Require Import BellantoniCook.Lib.",
            "VernacRequire",
            "e11d7c71c6a91f0fa45b6ad1df9749b15e7c7a5d"
        ],
        [
            "Notation bs := (list bool).",
            "VernacSyntacticDefinition",
            "7ec1b50af48d85b583859739f42464de10fff702"
        ],
        [
            "Definition unary (v : bs) := forallb id v.",
            "VernacDefinition",
            "c43465bc53393fe9329d6e24ab19febf43328675"
        ],
        [
            "Definition bs2bool (v:bs) : bool := hd false v.",
            "VernacDefinition",
            "d6850fc1b8c5e37d29a292089f3097c2cacfd847"
        ],
        [
            "Definition bool2bs (b:bool) : bs := if b then true::nil else nil.",
            "VernacDefinition",
            "2be624c824186f0df169dfe745a3ecb108791459"
        ],
        [
            "Lemma bs_nat2bool_true : forall v, bs2bool v = true -> length v <> 0.",
            "VernacStartTheoremProof",
            "1cf5d5b780ffa676ea19f0cf3db7943305641295"
        ],
        [
            "intro v; case v; simpl; auto; intros; discriminate.",
            "VernacExtend",
            "6458878b65f854b3b89fa0dc0423619c99b72928"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bs_nat2bool_true_conv : forall v, unary v = true -> length v <> 0 -> bs2bool v = true.",
            "VernacStartTheoremProof",
            "d851619db7703dc8af8fa9754a24ad648425f853"
        ],
        [
            "intro v; case v; simpl; intros.",
            "VernacExtend",
            "20bb76b32eb3b46242df7301f500f9da99d33288"
        ],
        [
            "elim H0; trivial.",
            "VernacExtend",
            "6c808663466e7ff9b4aeb08ee13ba26c533e7f00"
        ],
        [
            "rewrite andb_true_iff in H.",
            "VernacExtend",
            "1834897e3fa90313c295b40dff57d8cb25fa0d5d"
        ],
        [
            "decompose [and] H; destruct b; trivial.",
            "VernacExtend",
            "ac2327e33348b2d05cbc49a07efe13743330f5cc"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bs_nat2bool_false v : unary v = true -> bs2bool v = false -> length v = 0.",
            "VernacStartTheoremProof",
            "794cfe3c28286a71724552145f855ec15cb31d40"
        ],
        [
            "destruct v; simpl; trivial; intros.",
            "VernacExtend",
            "a18cbdd4b181239fb0fc142468adc63fa7cb7ef9"
        ],
        [
            "rewrite andb_true_iff in H.",
            "VernacExtend",
            "1834897e3fa90313c295b40dff57d8cb25fa0d5d"
        ],
        [
            "decompose [and] H; destruct b; discriminate.",
            "VernacExtend",
            "ea26f1a88b87415dcdf24df8b87b8eb442898c0f"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bs_nat2bool_false_conv v : length v = 0 -> bs2bool v = false.",
            "VernacStartTheoremProof",
            "3d332af6455e24fd99c6f87f5b1a49ad96db7900"
        ],
        [
            "destruct v; simpl; trivial; intros.",
            "VernacExtend",
            "a18cbdd4b181239fb0fc142468adc63fa7cb7ef9"
        ],
        [
            "discriminate.",
            "VernacExtend",
            "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint bs2nat (v:bs) : nat := match v with | nil => 0 | false :: v' => 2 * bs2nat v' | true :: v' => S (2 * bs2nat v') end.",
            "VernacFixpoint",
            "e97f4abbc29e561101b8f4f76f031c26833682d9"
        ],
        [
            "Fixpoint succ_bs (v : bs) : bs := match v with | nil => [true] | false :: v' => true :: v' | true :: v' => false :: succ_bs v' end.",
            "VernacFixpoint",
            "f3d09feef3c9e8f5c54c2739791c1a1df062d598"
        ],
        [
            "Lemma succ_bs_correct v : bs2nat (succ_bs v) = bs2nat v + 1.",
            "VernacStartTheoremProof",
            "eee5b1d34ef06e0f2c5c22afead7accb37446eb8"
        ],
        [
            "induction v; simpl; trivial; case a; simpl; ring [IHv].",
            "VernacExtend",
            "ce7e1fe0fc2b3dfef4271dfd9ee8a120e0faaa76"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Fixpoint nat2bs (n:nat) : bs := match n with | 0 => nil | S n' => succ_bs (nat2bs n') end.",
            "VernacFixpoint",
            "9dd741d124b1f2938e9593dc3d2d7232490e4d4f"
        ],
        [
            "Lemma bs2nat_nil : bs2nat nil = 0.",
            "VernacStartTheoremProof",
            "6d8b68395f14484fdbe4c2758668e52cc238b590"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bs2nat_false v : bs2nat (false :: v) = 2 * bs2nat v.",
            "VernacStartTheoremProof",
            "bb3c661df48e1e87db29cbe7d0da2df1dfa3af08"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bs2nat_true v : bs2nat (true :: v) = 1 + 2 * bs2nat v.",
            "VernacStartTheoremProof",
            "f048ecb2073912edf297e8000b645a8cb484dd7a"
        ],
        [
            "trivial.",
            "VernacExtend",
            "6704630005ea37c1f66f817f0d3cb83967ca08c5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bs2nat_tl : forall v, bs2nat (tl v) = div2 (bs2nat v).",
            "VernacStartTheoremProof",
            "2e9cbc0ff00ef60c785015a2ea3760d21de92f15"
        ],
        [
            "destruct v; simpl; [ trivial | ].",
            "VernacExtend",
            "3cb965c65da647354d6dd9e3d6136c8b1249e0be"
        ],
        [
            "replace (bs2nat v + (bs2nat v + 0)) with (2 * bs2nat v) by omega.",
            "VernacExtend",
            "ea7745a19540ac144057f604d4513e89792f08cc"
        ],
        [
            "case b;[ rewrite div2_double_plus_one | rewrite div2_double]; trivial.",
            "VernacExtend",
            "90d88434261ccd933fbc895e8cc990f33bc0eae4"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma bs2nat_nat2bs : forall n, bs2nat (nat2bs n) = n.",
            "VernacStartTheoremProof",
            "ac3c92bd7477d76a32dbbea6c1f538d3ea64ca04"
        ],
        [
            "induction n as [ | n' IHn]; simpl; auto.",
            "VernacExtend",
            "831bb5c79bbc0a164d5056aaf443fa808a8c3a42"
        ],
        [
            "rewrite succ_bs_correct; ring [IHn].",
            "VernacExtend",
            "4fa116ee42ec0cea50898ac9e72f4a4fefe7d94a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "bs_nat2bool_true",
            "line_nb": 6,
            "steps": [
                {
                    "command": [
                        "intro v; case v; simpl; auto; intros; discriminate.",
                        "VernacExtend",
                        "6458878b65f854b3b89fa0dc0423619c99b72928"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bs_nat2bool_true_conv",
            "line_nb": 9,
            "steps": [
                {
                    "command": [
                        "intro v; case v; simpl; intros.",
                        "VernacExtend",
                        "20bb76b32eb3b46242df7301f500f9da99d33288"
                    ]
                },
                {
                    "command": [
                        "elim H0; trivial.",
                        "VernacExtend",
                        "6c808663466e7ff9b4aeb08ee13ba26c533e7f00"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff in H.",
                        "VernacExtend",
                        "1834897e3fa90313c295b40dff57d8cb25fa0d5d"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H; destruct b; trivial.",
                        "VernacExtend",
                        "ac2327e33348b2d05cbc49a07efe13743330f5cc"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bs_nat2bool_false",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "destruct v; simpl; trivial; intros.",
                        "VernacExtend",
                        "a18cbdd4b181239fb0fc142468adc63fa7cb7ef9"
                    ]
                },
                {
                    "command": [
                        "rewrite andb_true_iff in H.",
                        "VernacExtend",
                        "1834897e3fa90313c295b40dff57d8cb25fa0d5d"
                    ]
                },
                {
                    "command": [
                        "decompose [and] H; destruct b; discriminate.",
                        "VernacExtend",
                        "ea26f1a88b87415dcdf24df8b87b8eb442898c0f"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bs_nat2bool_false_conv",
            "line_nb": 20,
            "steps": [
                {
                    "command": [
                        "destruct v; simpl; trivial; intros.",
                        "VernacExtend",
                        "a18cbdd4b181239fb0fc142468adc63fa7cb7ef9"
                    ]
                },
                {
                    "command": [
                        "discriminate.",
                        "VernacExtend",
                        "66ca81b65e1a53372a2515fdfdd2a6b0677cb9c8"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "succ_bs_correct",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "induction v; simpl; trivial; case a; simpl; ring [IHv].",
                        "VernacExtend",
                        "ce7e1fe0fc2b3dfef4271dfd9ee8a120e0faaa76"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bs2nat_nil",
            "line_nb": 30,
            "steps": [
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bs2nat_false",
            "line_nb": 33,
            "steps": [
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bs2nat_true",
            "line_nb": 36,
            "steps": [
                {
                    "command": [
                        "trivial.",
                        "VernacExtend",
                        "6704630005ea37c1f66f817f0d3cb83967ca08c5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bs2nat_tl",
            "line_nb": 39,
            "steps": [
                {
                    "command": [
                        "destruct v; simpl; [ trivial | ].",
                        "VernacExtend",
                        "3cb965c65da647354d6dd9e3d6136c8b1249e0be"
                    ]
                },
                {
                    "command": [
                        "replace (bs2nat v + (bs2nat v + 0)) with (2 * bs2nat v) by omega.",
                        "VernacExtend",
                        "ea7745a19540ac144057f604d4513e89792f08cc"
                    ]
                },
                {
                    "command": [
                        "case b;[ rewrite div2_double_plus_one | rewrite div2_double]; trivial.",
                        "VernacExtend",
                        "90d88434261ccd933fbc895e8cc990f33bc0eae4"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "bs2nat_nat2bs",
            "line_nb": 44,
            "steps": [
                {
                    "command": [
                        "induction n as [ | n' IHn]; simpl; auto.",
                        "VernacExtend",
                        "831bb5c79bbc0a164d5056aaf443fa808a8c3a42"
                    ]
                },
                {
                    "command": [
                        "rewrite succ_bs_correct; ring [IHn].",
                        "VernacExtend",
                        "4fa116ee42ec0cea50898ac9e72f4a4fefe7d94a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}