{
    "filename": "trajectory_def.v",
    "coq_project": "ails",
    "vernac_cmds": [
        [
            "Require Import Reals.",
            "VernacRequire",
            "45681fd6487015ca7aa8c8e9b408e40e3103ca14"
        ],
        [
            "Require Import trajectory_const.",
            "VernacRequire",
            "2389ee65efa36a9e54251476c2bb8cdd2f692ae5"
        ],
        [
            "Require Import rrho.",
            "VernacRequire",
            "b1ddaf030f5c1db5ac37677bcfee62db767aa732"
        ],
        [
            "Record Trajectory : Type := mkTrajectory {x : Differential; y : Differential; theta : Differential; phi : Differential; h : TypeSpeed; cond_x : forall t : R, derive_pt x t (cond_diff x t) = (h * cos (theta t))%R; cond_y : forall t : R, derive_pt y t (cond_diff y t) = (h * sin (theta t))%R; cond_phi : forall t : R, (- MaxBank <= phi t <= MaxBank)%R; cond_theta : forall t : R, derive_pt theta t (cond_diff theta t) = (g * (tan (phi t) / h))%R}.",
            "VernacInductive",
            "4d55de19b2a085335911911cfb941164d148b5cf"
        ],
        [
            "Record EvaderTrajectory : Type := mkEvaderTrajectory {tr : Trajectory; tr_cond1 : forall t : R, x tr t = (x tr 0 + h tr * t)%R; tr_cond2 : forall t : R, y tr t = y tr 0%R; tr_cond3 : forall t : R, theta tr t = 0%R; tr_cond4 : forall t : R, phi tr t = 0%R}.",
            "VernacInductive",
            "b1bdeb4c2ef4ead4cdc1cd2095455e6f3d003bcd"
        ],
        [
            "Lemma init_tr_derivable_x : forall h : TypeSpeed, derivable (fun t : R => (h * t)%R).",
            "VernacStartTheoremProof",
            "0df4556f2cf7aa39c437eed74a05d6409f71e637"
        ],
        [
            "intro; reg.",
            "VernacExtend",
            "ccf8f7334f322d5297b28e8981b599428495a7a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma init_tr_derivable_y : forall h : TypeSpeed, derivable (fun t : R => 0%R).",
            "VernacStartTheoremProof",
            "e40c2289f36d6235e81183b0621700ca936c8d10"
        ],
        [
            "intro; reg.",
            "VernacExtend",
            "ccf8f7334f322d5297b28e8981b599428495a7a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma init_tr_cond_x : forall (h : TypeSpeed) (t : R), derive_pt (fun t : R => (h * t)%R) t (init_tr_derivable_x h t) = (h * cos ((fun t : R => 0) t))%R.",
            "VernacStartTheoremProof",
            "9b9727cd23f370a6976abdafd93b58053039a439"
        ],
        [
            "intros; reg.",
            "VernacExtend",
            "7701089fadc77688dae54eff703f6a67902d61f0"
        ],
        [
            "rewrite cos_0; ring.",
            "VernacExtend",
            "3acae3a3bfe1ae928924a397b1ad178269d87c0a"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma init_tr_cond_y : forall (h : TypeSpeed) (t : R), derive_pt (fun t : R => 0%R) t (init_tr_derivable_y h t) = (h * sin ((fun t : R => 0) t))%R.",
            "VernacStartTheoremProof",
            "0f5e43b43313bacd0ad744fabeb050604ed23f33"
        ],
        [
            "intros; reg.",
            "VernacExtend",
            "7701089fadc77688dae54eff703f6a67902d61f0"
        ],
        [
            "rewrite sin_0; ring.",
            "VernacExtend",
            "22c405a1273f2357a818a6b1d03014e38ff38eb0"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma init_tr_cond_phi : forall t : R, (- MaxBank <= (fun t : R => 0) t)%R /\\ ((fun t : R => 0) t <= MaxBank)%R.",
            "VernacStartTheoremProof",
            "28c3a3667d453d020422cc91c6897ee4a5e91f78"
        ],
        [
            "intros; simpl in |- *; cut (0 < MaxBank)%R.",
            "VernacExtend",
            "01b1b8e76e692695b5a5e3fb7899d39e4a149769"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "left; rewrite <- Ropp_0; apply Ropp_lt_gt_contravar; assumption.",
            "VernacExtend",
            "852e5654073876c3ded1ea475e59cfa4fa8b255f"
        ],
        [
            "left; assumption.",
            "VernacExtend",
            "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
        ],
        [
            "unfold MaxBank in |- *; unfold Rdiv in |- *; apply Rmult_lt_0_compat; [ prove_sup | apply Rinv_0_lt_compat; prove_sup ].",
            "VernacExtend",
            "b227341df756d1bea7e58eb593d5e91b54640ba5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma fct_der1 : forall t : R, derivable_pt (fun t : R => 0%R) t.",
            "VernacStartTheoremProof",
            "3f2bbba93f92cc377aa8a985dfeb03514dc18d9d"
        ],
        [
            "intro; reg.",
            "VernacExtend",
            "ccf8f7334f322d5297b28e8981b599428495a7a6"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma init_tr_cond_theta : forall (h : TypeSpeed) (t : R), derive_pt (fun t : R => 0%R) t (init_tr_derivable_y h t) = (fun t : R => (g * (tan 0 / h))%R) t.",
            "VernacStartTheoremProof",
            "4c78ceeeedba64dce697d71d797ed43f97465ed9"
        ],
        [
            "intros; reg.",
            "VernacExtend",
            "7701089fadc77688dae54eff703f6a67902d61f0"
        ],
        [
            "unfold Rdiv in |- *; rewrite tan_0; ring.",
            "VernacExtend",
            "3d27f9ac436c85d6d48b8af9d14552a3e9a43511"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition init_tr (h : TypeSpeed) : Trajectory := mkTrajectory (mkDifferential (fun t : R => (h * t)%R) (init_tr_derivable_x h)) (mkDifferential (fun t : R => 0%R) (init_tr_derivable_y h)) (mkDifferential (fun t : R => 0%R) (init_tr_derivable_y h)) (mkDifferential (fun t : R => 0%R) (init_tr_derivable_y h)) h (init_tr_cond_x h) (init_tr_cond_y h) init_tr_cond_phi (init_tr_cond_theta h).",
            "VernacDefinition",
            "c6141ebae64ecb2ca4c381e7f97f5cda25aa787d"
        ],
        [
            "Lemma MaxBank_encadr : (0 < MaxBank < PI / 4)%R.",
            "VernacStartTheoremProof",
            "a79850458affda04f092ebb484cf08cb9a2544a9"
        ],
        [
            "split.",
            "VernacExtend",
            "55abc140132bd88981001ac656020469a8d503eb"
        ],
        [
            "unfold MaxBank in |- *; unfold Rdiv in |- *; apply Rmult_lt_0_compat; [ prove_sup | apply Rinv_0_lt_compat; prove_sup ].",
            "VernacExtend",
            "b227341df756d1bea7e58eb593d5e91b54640ba5"
        ],
        [
            "apply Rlt_trans with (PI_lb / 4)%R.",
            "VernacExtend",
            "e2e5e950155e528d60e2545825ffa1e294fa353d"
        ],
        [
            "unfold MaxBank in |- *; unfold Rdiv in |- *; apply Rmult_lt_reg_l with 100%R.",
            "VernacExtend",
            "f472e0f0a7aa4283e5318f54d5099d4d0b00e677"
        ],
        [
            "prove_sup0.",
            "VernacExtend",
            "9681c23836ca7f82fee12028ab3f984ae6ec2935"
        ],
        [
            "rewrite <- Rmult_comm; rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "1618d4438b48844af428fe5053772b313c838455"
        ],
        [
            "rewrite Rmult_1_r; apply Rmult_lt_reg_l with 4%R.",
            "VernacExtend",
            "9965564eaf458b16debd5377c07a9452b98cf369"
        ],
        [
            "prove_sup.",
            "VernacExtend",
            "57e294f00a65db3fc7f5dddeca8e78f99f4a4330"
        ],
        [
            "repeat rewrite (Rmult_comm 4); repeat rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
            "VernacExtend",
            "7509db2fb0c30c46406c853dc97bbd258987536f"
        ],
        [
            "unfold PI_lb in |- *; prove_sup.",
            "VernacExtend",
            "a350ea9c075c538dccaceee5b69e05a6f901c065"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "discrR.",
            "VernacExtend",
            "317ae3d71f99da86881f5bad35bdd745e918f381"
        ],
        [
            "unfold Rdiv in |- *; repeat rewrite <- (Rmult_comm (/ 4)); apply Rmult_lt_compat_l.",
            "VernacExtend",
            "840f331c02934b2b2d56fca6d88dabeabf3a7135"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup.",
            "VernacExtend",
            "f8cbca7f45a499249620f085b2ee2851cca7de7f"
        ],
        [
            "elim PI_approx; trivial.",
            "VernacExtend",
            "f283212afc5bab6b9e6ac96bb0e7cbb12f10d1d7"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma dtheta_rho : forall (tr : Trajectory) (t : R), (- rho (h tr) <= derive_pt (theta tr) t (cond_diff (theta tr) t) <= rho (h tr))%R.",
            "VernacStartTheoremProof",
            "7ccd5e3ee823e5b39fd6179b6f05fa7b843f3875"
        ],
        [
            "intros; generalize (cond_theta tr0); intro; rewrite (H t); unfold rho in |- *; generalize (cond_phi tr0); intro; elim (H0 t); intros H1 H2; generalize MaxBank_encadr; intro H3; elim H3; intros H4 H5; split.",
            "VernacExtend",
            "f14061b0b09c93f3bab1cdccff9594f420a5ea2f"
        ],
        [
            "unfold Rdiv in |- *; replace (- (g * (tan MaxBank * / h tr0)))%R with (g * (- tan MaxBank * / h tr0))%R.",
            "VernacExtend",
            "9f2442f4169e69e66fe879af808c697ccfab645f"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "left; apply g_pos.",
            "VernacExtend",
            "1d7469ed3ee6d346be1d058926d4ca9f8a896639"
        ],
        [
            "setoid_rewrite Rmult_comm at 1 2.",
            "VernacExtend",
            "f9fffbe2cd9b274973a7c1f11f4492fad87103a1"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "left; apply (Rinv_0_lt_compat (h tr0) (TypeSpeed_pos (h tr0))).",
            "VernacExtend",
            "fbbdb03cc7a722962281f7a3412d0a86dfa8d3e2"
        ],
        [
            "rewrite <- tan_neg.",
            "VernacExtend",
            "a92d0db86690b15f6a596d3f5c7533ec58e3d05f"
        ],
        [
            "generalize (Rlt_le (- (PI / 4)) (- MaxBank) (Ropp_lt_gt_contravar MaxBank (PI / 4) H5)); intro H6; generalize (Ropp_lt_gt_contravar 0 MaxBank H4); rewrite Ropp_0; intro H7; generalize (Rlt_le (- MaxBank) (PI / 4) (Rlt_trans (- MaxBank) 0 (PI / 4) H7 PI4_RGT_0)); intro H8; generalize (Rlt_le (phi tr0 t) (PI / 4) (Rle_lt_trans (phi tr0 t) MaxBank (PI / 4) H2 H5)); intro H9; generalize (Rle_trans (- (PI / 4)) (- MaxBank) (phi tr0 t) H6 H1); intro H10; apply tan_incr_1; assumption.",
            "VernacExtend",
            "30417ee28b573cdb4cc2c16e30c7b1e07873329a"
        ],
        [
            "replace (- tan MaxBank)%R with (-1 * tan MaxBank)%R.",
            "VernacExtend",
            "906f3722b80d0a8c8d5106cce2f23d976de056ff"
        ],
        [
            "repeat rewrite <- Rmult_assoc; rewrite <- (Rmult_comm (-1)); repeat rewrite <- Rmult_assoc; replace (- (g * tan MaxBank * / h tr0))%R with (-1 * g * tan MaxBank * / h tr0)%R; [ reflexivity | ring ].",
            "VernacExtend",
            "a826916bc37c02367d8e8b0617cdbf09fc8c3303"
        ],
        [
            "ring.",
            "VernacExtend",
            "baadd9fc4c175005af409bb466fcea9fab25b4e6"
        ],
        [
            "apply Rmult_le_compat_l; [ left; apply g_pos | unfold Rdiv in |- *; rewrite (Rmult_comm (tan MaxBank)); rewrite (Rmult_comm (tan (phi tr0 t))); apply Rmult_le_compat_l; [ left; apply (Rinv_0_lt_compat (h tr0) (TypeSpeed_pos (h tr0))) | generalize (Rlt_le MaxBank (PI / 4) H5); intro H6; generalize (Rle_trans (phi tr0 t) MaxBank (PI / 4) H2 H6); intro H7; generalize PI4_RGT_0; intro H8; generalize (Ropp_lt_gt_contravar 0 (PI / 4) H8); rewrite Ropp_0; intro H9; generalize (Rlt_le (- (PI / 4)) MaxBank (Rlt_trans (- (PI / 4)) 0 MaxBank H9 H4)); intro H10; generalize (Ropp_le_ge_contravar MaxBank (PI / 4) H6); intro H11; generalize (Rge_le (- MaxBank) (- (PI / 4)) H11); intro H12; generalize (Rle_trans (- (PI / 4)) (- MaxBank) (phi tr0 t) H12 H1); intro H13; apply tan_incr_1; assumption ] ].",
            "VernacExtend",
            "b7ec9de2192b1f0d82aec9c8b00dee78e87f3cb2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ]
    ],
    "proofs": [
        {
            "name": "init_tr_derivable_x",
            "line_nb": 5,
            "steps": [
                {
                    "command": [
                        "intro; reg.",
                        "VernacExtend",
                        "ccf8f7334f322d5297b28e8981b599428495a7a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "init_tr_derivable_y",
            "line_nb": 8,
            "steps": [
                {
                    "command": [
                        "intro; reg.",
                        "VernacExtend",
                        "ccf8f7334f322d5297b28e8981b599428495a7a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "init_tr_cond_x",
            "line_nb": 11,
            "steps": [
                {
                    "command": [
                        "intros; reg.",
                        "VernacExtend",
                        "7701089fadc77688dae54eff703f6a67902d61f0"
                    ]
                },
                {
                    "command": [
                        "rewrite cos_0; ring.",
                        "VernacExtend",
                        "3acae3a3bfe1ae928924a397b1ad178269d87c0a"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "init_tr_cond_y",
            "line_nb": 15,
            "steps": [
                {
                    "command": [
                        "intros; reg.",
                        "VernacExtend",
                        "7701089fadc77688dae54eff703f6a67902d61f0"
                    ]
                },
                {
                    "command": [
                        "rewrite sin_0; ring.",
                        "VernacExtend",
                        "22c405a1273f2357a818a6b1d03014e38ff38eb0"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "init_tr_cond_phi",
            "line_nb": 19,
            "steps": [
                {
                    "command": [
                        "intros; simpl in |- *; cut (0 < MaxBank)%R.",
                        "VernacExtend",
                        "01b1b8e76e692695b5a5e3fb7899d39e4a149769"
                    ]
                },
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "left; rewrite <- Ropp_0; apply Ropp_lt_gt_contravar; assumption.",
                        "VernacExtend",
                        "852e5654073876c3ded1ea475e59cfa4fa8b255f"
                    ]
                },
                {
                    "command": [
                        "left; assumption.",
                        "VernacExtend",
                        "3caf0ae349d7f7f5e42b9e4faad0c11c70cd858a"
                    ]
                },
                {
                    "command": [
                        "unfold MaxBank in |- *; unfold Rdiv in |- *; apply Rmult_lt_0_compat; [ prove_sup | apply Rinv_0_lt_compat; prove_sup ].",
                        "VernacExtend",
                        "b227341df756d1bea7e58eb593d5e91b54640ba5"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "fct_der1",
            "line_nb": 26,
            "steps": [
                {
                    "command": [
                        "intro; reg.",
                        "VernacExtend",
                        "ccf8f7334f322d5297b28e8981b599428495a7a6"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "init_tr_cond_theta",
            "line_nb": 29,
            "steps": [
                {
                    "command": [
                        "intros; reg.",
                        "VernacExtend",
                        "7701089fadc77688dae54eff703f6a67902d61f0"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *; rewrite tan_0; ring.",
                        "VernacExtend",
                        "3d27f9ac436c85d6d48b8af9d14552a3e9a43511"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MaxBank_encadr",
            "line_nb": 34,
            "steps": [
                {
                    "command": [
                        "split.",
                        "VernacExtend",
                        "55abc140132bd88981001ac656020469a8d503eb"
                    ]
                },
                {
                    "command": [
                        "unfold MaxBank in |- *; unfold Rdiv in |- *; apply Rmult_lt_0_compat; [ prove_sup | apply Rinv_0_lt_compat; prove_sup ].",
                        "VernacExtend",
                        "b227341df756d1bea7e58eb593d5e91b54640ba5"
                    ]
                },
                {
                    "command": [
                        "apply Rlt_trans with (PI_lb / 4)%R.",
                        "VernacExtend",
                        "e2e5e950155e528d60e2545825ffa1e294fa353d"
                    ]
                },
                {
                    "command": [
                        "unfold MaxBank in |- *; unfold Rdiv in |- *; apply Rmult_lt_reg_l with 100%R.",
                        "VernacExtend",
                        "f472e0f0a7aa4283e5318f54d5099d4d0b00e677"
                    ]
                },
                {
                    "command": [
                        "prove_sup0.",
                        "VernacExtend",
                        "9681c23836ca7f82fee12028ab3f984ae6ec2935"
                    ]
                },
                {
                    "command": [
                        "rewrite <- Rmult_comm; rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "1618d4438b48844af428fe5053772b313c838455"
                    ]
                },
                {
                    "command": [
                        "rewrite Rmult_1_r; apply Rmult_lt_reg_l with 4%R.",
                        "VernacExtend",
                        "9965564eaf458b16debd5377c07a9452b98cf369"
                    ]
                },
                {
                    "command": [
                        "prove_sup.",
                        "VernacExtend",
                        "57e294f00a65db3fc7f5dddeca8e78f99f4a4330"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite (Rmult_comm 4); repeat rewrite Rmult_assoc; rewrite <- Rinv_l_sym.",
                        "VernacExtend",
                        "7509db2fb0c30c46406c853dc97bbd258987536f"
                    ]
                },
                {
                    "command": [
                        "unfold PI_lb in |- *; prove_sup.",
                        "VernacExtend",
                        "a350ea9c075c538dccaceee5b69e05a6f901c065"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "discrR.",
                        "VernacExtend",
                        "317ae3d71f99da86881f5bad35bdd745e918f381"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *; repeat rewrite <- (Rmult_comm (/ 4)); apply Rmult_lt_compat_l.",
                        "VernacExtend",
                        "840f331c02934b2b2d56fca6d88dabeabf3a7135"
                    ]
                },
                {
                    "command": [
                        "apply Rinv_0_lt_compat; prove_sup.",
                        "VernacExtend",
                        "f8cbca7f45a499249620f085b2ee2851cca7de7f"
                    ]
                },
                {
                    "command": [
                        "elim PI_approx; trivial.",
                        "VernacExtend",
                        "f283212afc5bab6b9e6ac96bb0e7cbb12f10d1d7"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "dtheta_rho",
            "line_nb": 51,
            "steps": [
                {
                    "command": [
                        "intros; generalize (cond_theta tr0); intro; rewrite (H t); unfold rho in |- *; generalize (cond_phi tr0); intro; elim (H0 t); intros H1 H2; generalize MaxBank_encadr; intro H3; elim H3; intros H4 H5; split.",
                        "VernacExtend",
                        "f14061b0b09c93f3bab1cdccff9594f420a5ea2f"
                    ]
                },
                {
                    "command": [
                        "unfold Rdiv in |- *; replace (- (g * (tan MaxBank * / h tr0)))%R with (g * (- tan MaxBank * / h tr0))%R.",
                        "VernacExtend",
                        "9f2442f4169e69e66fe879af808c697ccfab645f"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "left; apply g_pos.",
                        "VernacExtend",
                        "1d7469ed3ee6d346be1d058926d4ca9f8a896639"
                    ]
                },
                {
                    "command": [
                        "setoid_rewrite Rmult_comm at 1 2.",
                        "VernacExtend",
                        "f9fffbe2cd9b274973a7c1f11f4492fad87103a1"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "left; apply (Rinv_0_lt_compat (h tr0) (TypeSpeed_pos (h tr0))).",
                        "VernacExtend",
                        "fbbdb03cc7a722962281f7a3412d0a86dfa8d3e2"
                    ]
                },
                {
                    "command": [
                        "rewrite <- tan_neg.",
                        "VernacExtend",
                        "a92d0db86690b15f6a596d3f5c7533ec58e3d05f"
                    ]
                },
                {
                    "command": [
                        "generalize (Rlt_le (- (PI / 4)) (- MaxBank) (Ropp_lt_gt_contravar MaxBank (PI / 4) H5)); intro H6; generalize (Ropp_lt_gt_contravar 0 MaxBank H4); rewrite Ropp_0; intro H7; generalize (Rlt_le (- MaxBank) (PI / 4) (Rlt_trans (- MaxBank) 0 (PI / 4) H7 PI4_RGT_0)); intro H8; generalize (Rlt_le (phi tr0 t) (PI / 4) (Rle_lt_trans (phi tr0 t) MaxBank (PI / 4) H2 H5)); intro H9; generalize (Rle_trans (- (PI / 4)) (- MaxBank) (phi tr0 t) H6 H1); intro H10; apply tan_incr_1; assumption.",
                        "VernacExtend",
                        "30417ee28b573cdb4cc2c16e30c7b1e07873329a"
                    ]
                },
                {
                    "command": [
                        "replace (- tan MaxBank)%R with (-1 * tan MaxBank)%R.",
                        "VernacExtend",
                        "906f3722b80d0a8c8d5106cce2f23d976de056ff"
                    ]
                },
                {
                    "command": [
                        "repeat rewrite <- Rmult_assoc; rewrite <- (Rmult_comm (-1)); repeat rewrite <- Rmult_assoc; replace (- (g * tan MaxBank * / h tr0))%R with (-1 * g * tan MaxBank * / h tr0)%R; [ reflexivity | ring ].",
                        "VernacExtend",
                        "a826916bc37c02367d8e8b0617cdbf09fc8c3303"
                    ]
                },
                {
                    "command": [
                        "ring.",
                        "VernacExtend",
                        "baadd9fc4c175005af409bb466fcea9fab25b4e6"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l; [ left; apply g_pos | unfold Rdiv in |- *; rewrite (Rmult_comm (tan MaxBank)); rewrite (Rmult_comm (tan (phi tr0 t))); apply Rmult_le_compat_l; [ left; apply (Rinv_0_lt_compat (h tr0) (TypeSpeed_pos (h tr0))) | generalize (Rlt_le MaxBank (PI / 4) H5); intro H6; generalize (Rle_trans (phi tr0 t) MaxBank (PI / 4) H2 H6); intro H7; generalize PI4_RGT_0; intro H8; generalize (Ropp_lt_gt_contravar 0 (PI / 4) H8); rewrite Ropp_0; intro H9; generalize (Rlt_le (- (PI / 4)) MaxBank (Rlt_trans (- (PI / 4)) 0 MaxBank H9 H4)); intro H10; generalize (Ropp_le_ge_contravar MaxBank (PI / 4) H6); intro H11; generalize (Rge_le (- MaxBank) (- (PI / 4)) H11); intro H12; generalize (Rle_trans (- (PI / 4)) (- MaxBank) (phi tr0 t) H12 H1); intro H13; apply tan_incr_1; assumption ] ].",
                        "VernacExtend",
                        "b7ec9de2192b1f0d82aec9c8b00dee78e87f3cb2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}