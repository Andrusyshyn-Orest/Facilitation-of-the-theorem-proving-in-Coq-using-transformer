{
    "filename": "constants.v",
    "coq_project": "ails",
    "vernac_cmds": [
        [
            "Section constants.",
            "VernacBeginSection",
            "e0972c5efbf2646e53cccd6618b326c119640f9f"
        ],
        [
            "Require Import Reals.",
            "VernacRequire",
            "45681fd6487015ca7aa8c8e9b408e40e3103ca14"
        ],
        [
            "Require Import trajectory_const.",
            "VernacRequire",
            "2389ee65efa36a9e54251476c2bb8cdd2f692ae5"
        ],
        [
            "Require Import rrho.",
            "VernacRequire",
            "b1ddaf030f5c1db5ac37677bcfee62db767aa732"
        ],
        [
            "Require Import trajectory_def.",
            "VernacRequire",
            "2f188c3fa3e05ac565f1158a91cd827c10440d01"
        ],
        [
            "Variable intr : Trajectory.",
            "VernacAssumption",
            "b885c0ce8988f8b55447b2fef1e9fc76c1d0053c"
        ],
        [
            "Variable evad : EvaderTrajectory.",
            "VernacAssumption",
            "31372ea260b073eada71aedc93994537db36a998"
        ],
        [
            "Lemma Rle_201_250 : (MinSpeed <= 250)%R.",
            "VernacStartTheoremProof",
            "1feacd3599ce014324e9a4fb21e144976589cfc9"
        ],
        [
            "unfold MinSpeed in |- *; left; prove_sup.",
            "VernacExtend",
            "d65f18a5d82d202bff26e75619d95c9c2ec4a7b2"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma Rle_250_880 : (250 <= MaxSpeed)%R.",
            "VernacStartTheoremProof",
            "b8867240f85bd3a3e127a7a42be4dbff3dcfa486"
        ],
        [
            "unfold MaxSpeed in |- *; left; prove_sup.",
            "VernacExtend",
            "c89959b73adb6f9fb93d6785add59f79b634c0d1"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition V : TypeSpeed := mkTypeSpeed 250 Rle_201_250 Rle_250_880.",
            "VernacDefinition",
            "694f3fc2227e60a5c6b7f7cf720cecce05fe8a63"
        ],
        [
            "Definition r_V : R := r V.",
            "VernacDefinition",
            "864e6c27fbc4e4e11bd50b5af3ba054b17479c38"
        ],
        [
            "Definition rho_V : R := rho V.",
            "VernacDefinition",
            "da7caf86d78bfe5ce5367fdae86550ca4b99a748"
        ],
        [
            "Definition AlertTime : R := 19%R.",
            "VernacDefinition",
            "5c492abe737f390eb9089b6f969d558fe1183d01"
        ],
        [
            "Definition AlertRange : R := 1400%R.",
            "VernacDefinition",
            "f0ca5eeb1abb2c6f73ca54bc51326175096570fa"
        ],
        [
            "Definition tstep : R := (/ 2)%R.",
            "VernacDefinition",
            "64355560fa55c64c5a4cb3be8a1b5e410e9969ec"
        ],
        [
            "Definition MaxStep : R := 1%R.",
            "VernacDefinition",
            "b14f95c1fcdece4afc955caf98bf4cd4176d65bf"
        ],
        [
            "Definition MaxT : R := 10%R.",
            "VernacDefinition",
            "3b2ad323bcdc3e89ad06fc72973d40dde64fd5f8"
        ],
        [
            "Definition MinT : R := (MaxT - tstep)%R.",
            "VernacDefinition",
            "52ce7b796f2462bbe0eabb9f45179ab09979b06d"
        ],
        [
            "Definition m (t : R) : R := let z := IZR 2 in (z * r_V * sin (rho_V * (t / z)))%R.",
            "VernacDefinition",
            "138909b90ac6626a025b5c1e772df2830576406d"
        ],
        [
            "Definition m_rho_ub (t : R) : R := let z := IZR 2 in (z * r_lb V * sin_lb (rho_lb V * (t / z)))%R.",
            "VernacDefinition",
            "99ac0dc0ab27c51e84a34a95bdf10a4015819a3e"
        ],
        [
            "Record TimeT : Type := mkTimeT {val :> R; cond_1 : (MinT <= val)%R; cond_2 : (val <= MaxT)%R}.",
            "VernacInductive",
            "24f4b18cd9ff0f7119d2da58e5e4f2854db954c7"
        ],
        [
            "Lemma MinT_is_pos : (0 < MinT)%R.",
            "VernacStartTheoremProof",
            "55f315a997e3a4a7a0d65d37a027ec2383fa2121"
        ],
        [
            "Proof with trivial.",
            "VernacProof",
            "9268eeb221b2345d40e3f4fe2ce96e852cc5a7fc"
        ],
        [
            "unfold MinT in |- *; unfold MaxT, tstep in |- *; apply Rmult_lt_reg_l with 2%R...",
            "VernacExtend",
            "e74a2afab31aaaaf18b24be75fe67c155255147c"
        ],
        [
            "prove_sup...",
            "VernacExtend",
            "25baf1a969d84bbdb0a70524cef9c17cf1bb3d6b"
        ],
        [
            "rewrite Rmult_0_r; rewrite Rmult_minus_distr_l; rewrite <- Rinv_r_sym...",
            "VernacExtend",
            "d9459ad7115137b7890a740368a26bc54c21cc05"
        ],
        [
            "apply Rlt_trans with 1%R; prove_sup...",
            "VernacExtend",
            "e1c65a711a86a43bacf187da68afd4879614f9a5"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem rho_ub_t_PI2 : forall (h : TypeSpeed) (t : TimeT), (rho_ub h * t < PI / 2)%R.",
            "VernacStartTheoremProof",
            "eadb83fdf0915e9e2bc3d601978d480cd6b30479"
        ],
        [
            "Proof with trivial.",
            "VernacProof",
            "9268eeb221b2345d40e3f4fe2ce96e852cc5a7fc"
        ],
        [
            "intros; assert (H := cond_2 t)...",
            "VernacExtend",
            "9fad2c77ccbf33d3507ba96c4c7f64f0174cf0e0"
        ],
        [
            "unfold MaxT in H; apply Rlt_trans with (PI_lb / 2)%R...",
            "VernacExtend",
            "b9d2c24716c58fa25ff0bc56cd28c677c558c00d"
        ],
        [
            "unfold rho_ub in |- *; cut (g < 33)%R...",
            "VernacExtend",
            "618dd3df83d7004bcb2cb6730c24eff384d70813"
        ],
        [
            "cut (tan_ub_MaxBank < 4 / 5)%R...",
            "VernacExtend",
            "3062afe7b8082a29510095b5572e82632f507c4a"
        ],
        [
            "cut (/ h < / 200)%R...",
            "VernacExtend",
            "92308b17b6a6011a96311fb9372c5a69def238b5"
        ],
        [
            "intros; generalize g_pos; intro H3; generalize tan_ub_MaxBank_pos; intro H4; generalize (Rinv_0_lt_compat h (TypeSpeed_pos h)); intro H5...",
            "VernacExtend",
            "21b8d205aa7f3a4e46aa8f482278c91a9eba0850"
        ],
        [
            "generalize (Rmult_le_0_lt_compat g 33 tan_ub_MaxBank (4 / 5) (Rlt_le 0 g H3) (Rlt_le 0 tan_ub_MaxBank H4) H2 H1)...",
            "VernacExtend",
            "e80085afdc101807d8fcd2b74be84be883b964ee"
        ],
        [
            "intro H6; generalize (Rmult_lt_0_compat g tan_ub_MaxBank H3 H4); intro H7...",
            "VernacExtend",
            "c8d8f656b92f56d3887f1a7e5422534740dee162"
        ],
        [
            "assert (H8 := Rmult_le_0_lt_compat (g * tan_ub_MaxBank) (33 * (4 / 5)) (/ h) (/ 200) (Rlt_le 0 (g * tan_ub_MaxBank) H7) (Rlt_le 0 (/ h) H5) H6 H0)...",
            "VernacExtend",
            "c6b2d10f24aecb271ff61bcced70329cc19a8675"
        ],
        [
            "apply Rlt_trans with (33 * / 200 * (4 / 5) * t)%R...",
            "VernacExtend",
            "409b6ca6b0089f60ed340da9205630c2c793f22c"
        ],
        [
            "apply Rmult_lt_compat_r...",
            "VernacExtend",
            "b5b7a1dcb2aa010716072d958aa0c3b2e6e186ae"
        ],
        [
            "apply Rlt_le_trans with MinT...",
            "VernacExtend",
            "b43b5a4f45391dbc7d31fb50ae63f98cb7d6b2fb"
        ],
        [
            "apply MinT_is_pos...",
            "VernacExtend",
            "3e09e2785d349ba1a55a5461854e25876ea2e8e5"
        ],
        [
            "apply (cond_1 t)...",
            "VernacExtend",
            "2ab260fa5c8aa78162bb9edfa7a4d5854346f6f7"
        ],
        [
            "rewrite Rmult_assoc; rewrite (Rmult_comm (/ 200)); unfold Rdiv in |- *; do 2 rewrite <- Rmult_assoc...",
            "VernacExtend",
            "5537d55d3df33eadb51d4133fd31d123f8bf05b6"
        ],
        [
            "apply Rle_lt_trans with (33 * / 200 * (4 / 5) * 10)%R...",
            "VernacExtend",
            "86ff748cd838a14a6baee126cbc4286aa91de826"
        ],
        [
            "apply Rmult_le_compat_l...",
            "VernacExtend",
            "b53c1ba4682835e32d8b6fe37f18309b5664d49a"
        ],
        [
            "left; apply Rmult_lt_0_compat...",
            "VernacExtend",
            "99508e41888cbaa35116e55457b559252880fb5d"
        ],
        [
            "apply Rmult_lt_0_compat; [ prove_sup | apply Rinv_0_lt_compat; prove_sup ]...",
            "VernacExtend",
            "0b84bdad11a041e95ea9579d54c2e5e9ed73ba1e"
        ],
        [
            "unfold Rdiv in |- *; apply Rmult_lt_0_compat; [ prove_sup | apply Rinv_0_lt_compat; prove_sup ]...",
            "VernacExtend",
            "1d7eed222920da925c0439b3f30de080e590071b"
        ],
        [
            "apply Rmult_lt_reg_l with 2%R...",
            "VernacExtend",
            "7c79e1bf7283307864601a73a8e99b38dafa6a1d"
        ],
        [
            "prove_sup...",
            "VernacExtend",
            "25baf1a969d84bbdb0a70524cef9c17cf1bb3d6b"
        ],
        [
            "apply Rmult_lt_reg_l with 200%R...",
            "VernacExtend",
            "45cc9324b61d7aaabfbc7d3d9405778e05ebf1e9"
        ],
        [
            "prove_sup...",
            "VernacExtend",
            "25baf1a969d84bbdb0a70524cef9c17cf1bb3d6b"
        ],
        [
            "apply Rmult_lt_reg_l with 5%R...",
            "VernacExtend",
            "96a3ae7f80cbf210d3f33b875eba53c9188a21de"
        ],
        [
            "prove_sup...",
            "VernacExtend",
            "25baf1a969d84bbdb0a70524cef9c17cf1bb3d6b"
        ],
        [
            "set (x := 200%R); set (y := 33%R); set (z := 10%R); set (u := 5%R); set (v := 4%R); set (w := 2%R)...",
            "VernacExtend",
            "e51cfc4fc18667e82165cf08694627a6fae3cfed"
        ],
        [
            "unfold Rdiv in |- *; replace (u * (x * (w * (PI_lb * / w))))%R with (x * PI_lb * u * (w * / w))%R; [ idtac | ring ]...",
            "VernacExtend",
            "468790776662583f1667120dc0031b59c042507b"
        ],
        [
            "replace (u * (x * (w * (y * / x * (v * / u) * z))))%R with (w * y * v * z * (u * / u) * (x * / x))%R; [ idtac | ring ]...",
            "VernacExtend",
            "5d49d8ffdf90481b29175a674b4795e011ee8198"
        ],
        [
            "repeat rewrite <- Rinv_r_sym; unfold x, y, z, u, v, w in |- *; try discrR...",
            "VernacExtend",
            "984b71ff79a5b17484fcb1b63a50b18718b1f596"
        ],
        [
            "unfold PI_lb in |- *; prove_sup...",
            "VernacExtend",
            "68b073bf589714d89e26a0584b29e37bce46cfb7"
        ],
        [
            "apply Rinv_lt_contravar...",
            "VernacExtend",
            "76ccd6f12046b961ceaedaf9d3d19d12c4316af6"
        ],
        [
            "apply Rmult_lt_0_compat...",
            "VernacExtend",
            "c821cccd87bd5b4c2591e9fd52916edbf65ea085"
        ],
        [
            "prove_sup...",
            "VernacExtend",
            "25baf1a969d84bbdb0a70524cef9c17cf1bb3d6b"
        ],
        [
            "apply Rlt_le_trans with MinSpeed...",
            "VernacExtend",
            "8833e2fd4a170d7cef2c0fd589dc17887e70c045"
        ],
        [
            "unfold MinSpeed in |- *; prove_sup...",
            "VernacExtend",
            "c79fd03420de10fb9a9f64b685ae94e50023ce3e"
        ],
        [
            "apply (v_cond1 h)...",
            "VernacExtend",
            "497b7cb07cb35fe3b884e453770b975a2bb2d2d9"
        ],
        [
            "apply Rlt_le_trans with MinSpeed...",
            "VernacExtend",
            "8833e2fd4a170d7cef2c0fd589dc17887e70c045"
        ],
        [
            "unfold MinSpeed in |- *; prove_sup...",
            "VernacExtend",
            "c79fd03420de10fb9a9f64b685ae94e50023ce3e"
        ],
        [
            "apply (v_cond1 h)...",
            "VernacExtend",
            "497b7cb07cb35fe3b884e453770b975a2bb2d2d9"
        ],
        [
            "unfold tan_ub_MaxBank in |- *; unfold Rdiv in |- *...",
            "VernacExtend",
            "6e2b4bf020a54e0e597d4321710a4661edef4e65"
        ],
        [
            "apply Rmult_lt_reg_l with 10%R...",
            "VernacExtend",
            "33bd65627795c5ca4dd08654336b2192bb78c742"
        ],
        [
            "prove_sup...",
            "VernacExtend",
            "25baf1a969d84bbdb0a70524cef9c17cf1bb3d6b"
        ],
        [
            "rewrite (Rmult_comm 10); rewrite Rmult_assoc; rewrite <- Rinv_l_sym...",
            "VernacExtend",
            "1093727a576034ac6251409ba1be0bae7e59bbe2"
        ],
        [
            "rewrite Rmult_1_r; apply Rmult_lt_reg_l with 5%R...",
            "VernacExtend",
            "58db6bc5a598df4b90b184a7d94769972446105c"
        ],
        [
            "prove_sup...",
            "VernacExtend",
            "25baf1a969d84bbdb0a70524cef9c17cf1bb3d6b"
        ],
        [
            "pattern 5%R at 1 in |- *; rewrite (Rmult_comm 5); do 2 rewrite Rmult_assoc; rewrite <- Rinv_l_sym...",
            "VernacExtend",
            "2b70c7151f7c71d9c410a4ec57d0515f32af9085"
        ],
        [
            "prove_sup...",
            "VernacExtend",
            "25baf1a969d84bbdb0a70524cef9c17cf1bb3d6b"
        ],
        [
            "discrR...",
            "VernacExtend",
            "1d84d56ab750a265209e2ba036b3c6b486c246ee"
        ],
        [
            "discrR...",
            "VernacExtend",
            "1d84d56ab750a265209e2ba036b3c6b486c246ee"
        ],
        [
            "unfold g in |- *; unfold Rdiv in |- *; apply Rmult_lt_reg_l with 10%R...",
            "VernacExtend",
            "a9ee57a99bbb42d14a5daf29321b78c95f334333"
        ],
        [
            "prove_sup...",
            "VernacExtend",
            "25baf1a969d84bbdb0a70524cef9c17cf1bb3d6b"
        ],
        [
            "rewrite <- Rmult_comm; rewrite Rmult_assoc; rewrite <- Rinv_l_sym...",
            "VernacExtend",
            "ba171fbaa93fcc3fa6c3f8c6e7ab21b02a941a14"
        ],
        [
            "rewrite Rmult_1_r; prove_sup...",
            "VernacExtend",
            "70d17d716a41059ac0488ff3a5c999c1d617d541"
        ],
        [
            "discrR...",
            "VernacExtend",
            "1d84d56ab750a265209e2ba036b3c6b486c246ee"
        ],
        [
            "unfold Rdiv in |- *; repeat rewrite <- (Rmult_comm (/ 2)); apply Rmult_lt_compat_l...",
            "VernacExtend",
            "9322d9535e382aae7d384c68d66fe453cca39a94"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup...",
            "VernacExtend",
            "e60295c54f8aa92902f639c623ae12bc433a85fa"
        ],
        [
            "assert (H0 := PI_approx); elim H0...",
            "VernacExtend",
            "c1111155cf7415e79181cbfa965d74e72e4cf143"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Theorem rho_t_PI2 : forall t : TimeT, (rho_V * t < PI / 2)%R.",
            "VernacStartTheoremProof",
            "4a765f9bae48e01ad1de690944802750ef1b972f"
        ],
        [
            "Proof with trivial.",
            "VernacProof",
            "9268eeb221b2345d40e3f4fe2ce96e852cc5a7fc"
        ],
        [
            "intro; generalize (rho_ub_t_PI2 V t); intro; unfold rho_V in |- *...",
            "VernacExtend",
            "4b3be2cec4c5e00085e9d36063d6880292e3abbd"
        ],
        [
            "apply Rlt_trans with (rho_ub V * t)%R...",
            "VernacExtend",
            "4bf1223f28be505bbb119d2f4af937f408f7f518"
        ],
        [
            "apply Rmult_lt_compat_r...",
            "VernacExtend",
            "b5b7a1dcb2aa010716072d958aa0c3b2e6e186ae"
        ],
        [
            "apply Rlt_le_trans with MinT; [ apply MinT_is_pos | apply (cond_1 t) ]...",
            "VernacExtend",
            "2ea216ad16cdbe1e0a10c960fbcb4bff7c0b6c78"
        ],
        [
            "apply rho_ub_0...",
            "VernacExtend",
            "05612ddb771a6fcbdda0bc3de5b85bef0b9cf11e"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rho_t_2 : forall t : TimeT, (rho_V * t < 2)%R.",
            "VernacStartTheoremProof",
            "07017cf1ad4210843504e6aa29705c7286a254e0"
        ],
        [
            "Proof with trivial.",
            "VernacProof",
            "9268eeb221b2345d40e3f4fe2ce96e852cc5a7fc"
        ],
        [
            "intro t; apply Rlt_trans with (PI / 2)%R...",
            "VernacExtend",
            "1afeadc60610d125ccb8f8240b32082ab45430db"
        ],
        [
            "apply rho_t_PI2...",
            "VernacExtend",
            "94210fef8e80235c1b170300c82903ee2d1c087a"
        ],
        [
            "apply Rlt_le_trans with (PI_ub / 2)%R...",
            "VernacExtend",
            "9d223ae6d08f280d12db0c61e609c83a65925a7a"
        ],
        [
            "unfold Rdiv in |- *; repeat rewrite <- (Rmult_comm (/ 2))...",
            "VernacExtend",
            "48e205e5abb9d2852e08215cd6688bdac7cc7884"
        ],
        [
            "apply Rmult_lt_compat_l...",
            "VernacExtend",
            "38d6e4214baff5a201a1920e1bb34fba3dcd184f"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup...",
            "VernacExtend",
            "e60295c54f8aa92902f639c623ae12bc433a85fa"
        ],
        [
            "assert (H := PI_approx); elim H...",
            "VernacExtend",
            "dccc88ebbf508618acba80acd97749346caee8b3"
        ],
        [
            "right; unfold PI_ub in |- *; unfold Rdiv in |- *.",
            "VernacExtend",
            "923dac1191a17110fb5081bd30283e9d5d3ad8b9"
        ],
        [
            "change 4%R with (IZR (2 * 2)).",
            "VernacExtend",
            "3d77dc548663da6e52595c48d8fd39e20dec0c72"
        ],
        [
            "rewrite (mult_IZR 2 2).",
            "VernacExtend",
            "a4c47c6ef446f9f7283a6a2250c5e35d0e077e3e"
        ],
        [
            "rewrite Rmult_assoc; rewrite <- Rinv_r_sym; [ apply Rmult_1_r | discrR ]...",
            "VernacExtend",
            "93e6119c9ac4c74c2e00a1431c7166da12089014"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma r_V_is_pos : (0 < r_V)%R.",
            "VernacStartTheoremProof",
            "8018c65fa1aab3ed33e80d415d28db3fa8f2ca08"
        ],
        [
            "unfold r_V in |- *; unfold r in |- *; unfold Rdiv in |- *; apply Rmult_lt_0_compat; [ apply (TypeSpeed_pos V) | apply Rinv_0_lt_compat; apply rho_pos ].",
            "VernacExtend",
            "2ff1e2104d56a9ffbb0f031373a86bdfa16b2e9b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma rho_V_is_pos : (0 < rho_V)%R.",
            "VernacStartTheoremProof",
            "44d21184e3cdc07d29c10fd2dd6c2f43da291c88"
        ],
        [
            "unfold rho_V in |- *; apply rho_pos.",
            "VernacExtend",
            "c84265bced085bf517cc31d069f4dca6e065ffff"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma m_le : forall t1 t2 : TimeT, (t1 <= t2)%R -> (m t1 <= m t2)%R.",
            "VernacStartTheoremProof",
            "914c0718c94ff483addac9c228228e9114029b2f"
        ],
        [
            "Proof with trivial.",
            "VernacProof",
            "9268eeb221b2345d40e3f4fe2ce96e852cc5a7fc"
        ],
        [
            "intros; unfold m in |- *; repeat rewrite Rmult_assoc...",
            "VernacExtend",
            "cf51081cd68b84efa8bac63d810b7c7a675757b1"
        ],
        [
            "repeat apply Rmult_le_compat_l...",
            "VernacExtend",
            "e38e9c760d4d58b1b3f36a026291673733bf0ff4"
        ],
        [
            "left; simpl in |- *; prove_sup...",
            "VernacExtend",
            "bb8f48233db76fd44578f4730aca61765438b34d"
        ],
        [
            "left; apply r_V_is_pos...",
            "VernacExtend",
            "2829ba8f271b830ff176576ec3a36c46b18e1bac"
        ],
        [
            "generalize (rho_t_PI2 t1); intro H1...",
            "VernacExtend",
            "cddd7d0124b2aa3af35a06618c12f2365e59b607"
        ],
        [
            "generalize (rho_t_PI2 t2); intro H2...",
            "VernacExtend",
            "97ca5f85cbbcbfda6c3f23633da6310e6da30c0a"
        ],
        [
            "assert (Hyp : (0 < 2)%R)...",
            "VernacExtend",
            "47effd6f21b380974e5455b80900f9ebcf6d26a7"
        ],
        [
            "prove_sup0...",
            "VernacExtend",
            "32647afeff6e93aaeda0562e78ea042879005d08"
        ],
        [
            "generalize (Rmult_lt_compat_l (/ 2) (rho_V * t1) (PI / 2) (Rinv_0_lt_compat 2 Hyp) H1)...",
            "VernacExtend",
            "e6c16e72ec6695a976982b8de872449f2d402a4f"
        ],
        [
            "generalize (Rmult_lt_compat_l (/ 2) (rho_V * t2) (PI / 2) (Rinv_0_lt_compat 2 Hyp) H2)...",
            "VernacExtend",
            "40c97eb5b7d00aaf8e9e2588cfa17698adea5405"
        ],
        [
            "replace (/ 2 * (PI / 2))%R with (PI / 4)%R...",
            "VernacExtend",
            "b6d982cc2a71d2df3f3ca8a6d6545d76bd607422"
        ],
        [
            "clear H1 H2; intros H1 H2...",
            "VernacExtend",
            "5b760c88e5532424270c9927bc259ab820831aff"
        ],
        [
            "rewrite Rmult_comm in H1...",
            "VernacExtend",
            "8b61e21f6fb1c1e968e256cf154f3a90a89a0b3f"
        ],
        [
            "rewrite Rmult_comm in H2...",
            "VernacExtend",
            "01e5f59fbebabbc7e1d01112763de4f1eff52c8c"
        ],
        [
            "unfold Rdiv in |- *...",
            "VernacExtend",
            "33b7d12d8ee86b26bcb71a0935eedfb76aa3e5a2"
        ],
        [
            "generalize (cond_1 t1)...",
            "VernacExtend",
            "ceae236e6e020ad490c44b51bc272cc2d3d7ecbf"
        ],
        [
            "generalize (cond_1 t2)...",
            "VernacExtend",
            "468e4586343eefd6c3cc024254602a4df627ef0e"
        ],
        [
            "generalize MinT_is_pos; intro H7...",
            "VernacExtend",
            "318faf17076192fc1cc6303eb783f061d95f71fc"
        ],
        [
            "intros H3 H4...",
            "VernacExtend",
            "7e8930b0b2fb00421d6fd4dcaa9db7f96c8c3c96"
        ],
        [
            "generalize (Rlt_le_trans 0 MinT t1 H7 H4); clear H4; intro H4...",
            "VernacExtend",
            "16a97acf63032c29ebb3942f281ca055fd43fe07"
        ],
        [
            "generalize (Rlt_le_trans 0 MinT t2 H7 H3); clear H3; intro H3...",
            "VernacExtend",
            "bb4a772ca3da912c7f692dfd0f898ac55ae02bdf"
        ],
        [
            "apply sin_incr_1...",
            "VernacExtend",
            "2f178fe639ae0275bdaddc889b9dd71a20d7b6b7"
        ],
        [
            "left; apply Rlt_trans with 0%R...",
            "VernacExtend",
            "744fac8dfa9af08dd22a9fa699a3aad1ffa3aedd"
        ],
        [
            "apply _PI2_RLT_0...",
            "VernacExtend",
            "5fa7c1142e5f75345bc06ab4e9a3354fca2453a7"
        ],
        [
            "repeat simple apply Rmult_lt_0_compat...",
            "VernacExtend",
            "0f59ef33c244eaeebcb068940424256a9f7e6eb9"
        ],
        [
            "apply rho_V_is_pos...",
            "VernacExtend",
            "7f900b4e1bb3fe1d4a85b788845c6e99fd29aa93"
        ],
        [
            "apply Rinv_0_lt_compat; simpl in |- *; prove_sup0...",
            "VernacExtend",
            "8c38a2418e683817307f49a53e9d5b016307ecd9"
        ],
        [
            "left; apply Rlt_trans with (PI / 4)%R...",
            "VernacExtend",
            "c133a691933ebbaf9ae90ea68808109793c4f795"
        ],
        [
            "rewrite <- Rmult_assoc...",
            "VernacExtend",
            "048044ad2c4686fa172f9e79af85d5a61844cee0"
        ],
        [
            "apply PI4_RLT_PI2...",
            "VernacExtend",
            "37cbe549110244db9a10d5ec5561a75d29bfdb0a"
        ],
        [
            "left; apply Rlt_trans with 0%R...",
            "VernacExtend",
            "744fac8dfa9af08dd22a9fa699a3aad1ffa3aedd"
        ],
        [
            "apply _PI2_RLT_0...",
            "VernacExtend",
            "5fa7c1142e5f75345bc06ab4e9a3354fca2453a7"
        ],
        [
            "repeat simple apply Rmult_lt_0_compat...",
            "VernacExtend",
            "0f59ef33c244eaeebcb068940424256a9f7e6eb9"
        ],
        [
            "apply rho_V_is_pos...",
            "VernacExtend",
            "7f900b4e1bb3fe1d4a85b788845c6e99fd29aa93"
        ],
        [
            "apply Rinv_0_lt_compat; simpl in |- *; prove_sup0...",
            "VernacExtend",
            "8c38a2418e683817307f49a53e9d5b016307ecd9"
        ],
        [
            "left; apply Rlt_trans with (PI / 4)%R...",
            "VernacExtend",
            "c133a691933ebbaf9ae90ea68808109793c4f795"
        ],
        [
            "rewrite <- Rmult_assoc...",
            "VernacExtend",
            "048044ad2c4686fa172f9e79af85d5a61844cee0"
        ],
        [
            "apply PI4_RLT_PI2...",
            "VernacExtend",
            "37cbe549110244db9a10d5ec5561a75d29bfdb0a"
        ],
        [
            "apply Rmult_le_compat_l...",
            "VernacExtend",
            "b53c1ba4682835e32d8b6fe37f18309b5664d49a"
        ],
        [
            "left; apply rho_V_is_pos...",
            "VernacExtend",
            "2330bf7241626a5a15f6561a4444fd9dce04753f"
        ],
        [
            "apply Rmult_le_compat_r...",
            "VernacExtend",
            "69469355e60d3938752942beea3213ae6eece6b4"
        ],
        [
            "left; apply Rinv_0_lt_compat; simpl in |- *; prove_sup0...",
            "VernacExtend",
            "5614b0191a2d0f6c15aad7dd6ca72220afe91908"
        ],
        [
            "unfold Rdiv in |- *; rewrite (Rmult_comm (/ 2)); rewrite Rmult_assoc; rewrite <- Rinv_mult_distr...",
            "VernacExtend",
            "5db8faf85ff0516b55997e8394b37917244adbae"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma m_rho_ub_0 : forall t : TimeT, (m_rho_ub t <= m t)%R.",
            "VernacStartTheoremProof",
            "db5f618fa12e33ccfd2c6b9a31040ebf7aba50fe"
        ],
        [
            "Proof with trivial.",
            "VernacProof",
            "9268eeb221b2345d40e3f4fe2ce96e852cc5a7fc"
        ],
        [
            "intro; unfold m_rho_ub, m in |- *; repeat rewrite Rmult_assoc; apply Rmult_le_compat_l...",
            "VernacExtend",
            "ccf975227be8247d20d1ba0609aaeb9bd7a522a6"
        ],
        [
            "left; simpl in |- *; prove_sup0...",
            "VernacExtend",
            "47e1e284a53602a412214ad1463694d8b0bee4d1"
        ],
        [
            "cut (0 <= r_lb V <= r_V)%R...",
            "VernacExtend",
            "9d6e6c762365b411027723a0b80bacf512d65492"
        ],
        [
            "cut (0 <= sin_lb (rho_lb V * (t / 2)) <= sin (rho_V * (t / 2)))%R...",
            "VernacExtend",
            "f31dee003ee9e33eb7b16d7174abbcc0ddd47890"
        ],
        [
            "intros; elim H; intros H1 H2; elim H0; intros H3 H4...",
            "VernacExtend",
            "51cca7440ab96807f44d2817dc6e15ead1774991"
        ],
        [
            "apply Rmult_le_compat...",
            "VernacExtend",
            "433e6081c6d207cc21ed8085d1d0f91984521c94"
        ],
        [
            "cut (0 < rho_lb V * (t / 2) <= rho_V * (t / 2))%R...",
            "VernacExtend",
            "6359068b4c9201bad5fdf3b32811d4102790d84c"
        ],
        [
            "cut (rho_V * (t / 2) <= PI / 2)%R...",
            "VernacExtend",
            "d24fc2b0e64da4b10a4eb9df80cd2805c6428490"
        ],
        [
            "intros; elim H0; intros H1 H2; split...",
            "VernacExtend",
            "68e4b20aa91c635a45b1b7cac215bbed2b3000bc"
        ],
        [
            "left; apply sin_lb_gt_0...",
            "VernacExtend",
            "17ee0a8f106723a399c0d2476fc29491cdeefc4a"
        ],
        [
            "apply Rle_trans with (rho_V * (t / 2))%R...",
            "VernacExtend",
            "9639f3373952d78c572efe427f9cd65788120aee"
        ],
        [
            "apply Rle_trans with (sin (rho_lb V * (t / 2)))...",
            "VernacExtend",
            "fad5b2f8bdadc7368fd22027c5572c0c858952ae"
        ],
        [
            "generalize (SIN (rho_lb V * (t / 2)) (Rlt_le 0 (rho_lb V * (t / 2)) H1) (Rle_trans (rho_lb V * (t / 2)) (PI / 2) PI (Rle_trans (rho_lb V * (t / 2)) (rho_V * (t / 2)) (PI / 2) H2 H) (Rlt_le (PI / 2) PI PI2_Rlt_PI)))...",
            "VernacExtend",
            "7623275d87c4f1831e6b14b1b0fa5575a01ddc74"
        ],
        [
            "intro H3; elim H3; intros H4 H5...",
            "VernacExtend",
            "f5d49284f29f03aa0f13a956d47b3e81e38e65b5"
        ],
        [
            "apply sin_incr_1...",
            "VernacExtend",
            "2f178fe639ae0275bdaddc889b9dd71a20d7b6b7"
        ],
        [
            "left; apply (Rlt_trans (- (PI / 2)) 0 (rho_lb V * (t / 2)) _PI2_RLT_0 H1)...",
            "VernacExtend",
            "b4caa4a1f599efd233cfdf56e59d1aedae6abacf"
        ],
        [
            "apply Rle_trans with (rho_V * (t / 2))%R...",
            "VernacExtend",
            "9639f3373952d78c572efe427f9cd65788120aee"
        ],
        [
            "left; apply (Rlt_trans (- (PI / 2)) 0 (rho_V * (t / 2)) _PI2_RLT_0 (Rlt_le_trans 0 (rho_lb V * (t / 2)) (rho_V * (t / 2)) H1 H2))...",
            "VernacExtend",
            "9e25f78ca4b694637e0070ee02607fd1d8cbced8"
        ],
        [
            "left; apply Rlt_trans with (PI / 4)%R...",
            "VernacExtend",
            "c133a691933ebbaf9ae90ea68808109793c4f795"
        ],
        [
            "generalize (rho_t_PI2 t); intro H; unfold Rdiv in |- *; replace (/ 4)%R with (/ 2 * / 2)%R...",
            "VernacExtend",
            "a93d6ec229110d2c5cb45ebc3a1fdb6ffca30581"
        ],
        [
            "repeat rewrite <- Rmult_assoc; apply Rmult_lt_compat_r...",
            "VernacExtend",
            "72c41edf05b7a0cf1b77b62ec3b1727beeec6a17"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0...",
            "VernacExtend",
            "62b8f650fab141d8e2f98e79c1eb393efa272993"
        ],
        [
            "rewrite <- Rinv_mult_distr...",
            "VernacExtend",
            "7164cd386a3dbe96b4b0f1da77c1c0c9df1b33ba"
        ],
        [
            "discrR...",
            "VernacExtend",
            "1d84d56ab750a265209e2ba036b3c6b486c246ee"
        ],
        [
            "discrR...",
            "VernacExtend",
            "1d84d56ab750a265209e2ba036b3c6b486c246ee"
        ],
        [
            "apply PI4_RLT_PI2...",
            "VernacExtend",
            "37cbe549110244db9a10d5ec5561a75d29bfdb0a"
        ],
        [
            "split...",
            "VernacExtend",
            "baadab085aba401319b7eae3380d34307a7b74d2"
        ],
        [
            "unfold Rdiv in |- *; repeat simple apply Rmult_lt_0_compat...",
            "VernacExtend",
            "1832f9a8a9f580557662fca0d29ba7eec847ba91"
        ],
        [
            "apply rho_lb_pos...",
            "VernacExtend",
            "63020eba2baf2b193b255b7cc9904258e74ec17b"
        ],
        [
            "apply Rlt_le_trans with MinT...",
            "VernacExtend",
            "b43b5a4f45391dbc7d31fb50ae63f98cb7d6b2fb"
        ],
        [
            "apply MinT_is_pos...",
            "VernacExtend",
            "3e09e2785d349ba1a55a5461854e25876ea2e8e5"
        ],
        [
            "apply (cond_1 t)...",
            "VernacExtend",
            "2ab260fa5c8aa78162bb9edfa7a4d5854346f6f7"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0...",
            "VernacExtend",
            "62b8f650fab141d8e2f98e79c1eb393efa272993"
        ],
        [
            "apply Rmult_le_compat_r...",
            "VernacExtend",
            "69469355e60d3938752942beea3213ae6eece6b4"
        ],
        [
            "left; unfold Rdiv in |- *; apply Rmult_lt_0_compat...",
            "VernacExtend",
            "f53394f40f8ef8b86d7141764e716185109b5a20"
        ],
        [
            "apply Rlt_le_trans with MinT...",
            "VernacExtend",
            "b43b5a4f45391dbc7d31fb50ae63f98cb7d6b2fb"
        ],
        [
            "apply MinT_is_pos...",
            "VernacExtend",
            "3e09e2785d349ba1a55a5461854e25876ea2e8e5"
        ],
        [
            "apply (cond_1 t)...",
            "VernacExtend",
            "2ab260fa5c8aa78162bb9edfa7a4d5854346f6f7"
        ],
        [
            "apply Rinv_0_lt_compat; prove_sup0...",
            "VernacExtend",
            "62b8f650fab141d8e2f98e79c1eb393efa272993"
        ],
        [
            "unfold rho_V in |- *...",
            "VernacExtend",
            "4c9fdc26e2aa12078f3357c707beddf391e7c3e7"
        ],
        [
            "left; apply rho_lb_0...",
            "VernacExtend",
            "da87099c385bba9a95689e9a904c8a0e0273b548"
        ],
        [
            "split...",
            "VernacExtend",
            "baadab085aba401319b7eae3380d34307a7b74d2"
        ],
        [
            "unfold r_lb in |- *...",
            "VernacExtend",
            "2a66e5b6ab115e7dc0f0cae5259168d1073a1628"
        ],
        [
            "unfold Rdiv in |- *; left; apply Rmult_lt_0_compat...",
            "VernacExtend",
            "7bce7b10b82fe7ed9b809ef8c2837b749ec479ed"
        ],
        [
            "apply (TypeSpeed_pos V)...",
            "VernacExtend",
            "7e82fa34701094221e59f813cba1274fa5ce343a"
        ],
        [
            "apply Rinv_0_lt_compat; apply rho_ub_pos...",
            "VernacExtend",
            "3e9cae8a9869628a692f0f09926fab1990128f93"
        ],
        [
            "unfold r_V in |- *; left; apply r_lb_0...",
            "VernacExtend",
            "40f32a6096c94c184f4ee1f2f1e47dc63cf72c0b"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma m_rho_T_pos : forall t : TimeT, (0 < m t)%R.",
            "VernacStartTheoremProof",
            "fa788af7910f3f26d084b3a86bd34ee89074874c"
        ],
        [
            "Proof with trivial.",
            "VernacProof",
            "9268eeb221b2345d40e3f4fe2ce96e852cc5a7fc"
        ],
        [
            "intro t; unfold m in |- *; repeat simple apply Rmult_lt_0_compat...",
            "VernacExtend",
            "1e473aa70474a784435326f49990cc496bd1e421"
        ],
        [
            "simpl in |- *; prove_sup0...",
            "VernacExtend",
            "31c93a95a9acff12faed468031f15f7c9c5f7740"
        ],
        [
            "apply r_V_is_pos...",
            "VernacExtend",
            "ab340bd5c8d2f97de1609ebbd8ce4491b5d0ffef"
        ],
        [
            "generalize (cond_1 t); generalize MinT_is_pos; intros H H0; generalize (Rlt_le_trans 0 MinT t H H0); clear H; intro H; apply sin_gt_0...",
            "VernacExtend",
            "167658e6a16b246fca4d3b63c5b7a69fc7546fed"
        ],
        [
            "repeat simple apply Rmult_lt_0_compat...",
            "VernacExtend",
            "0f59ef33c244eaeebcb068940424256a9f7e6eb9"
        ],
        [
            "apply rho_V_is_pos...",
            "VernacExtend",
            "7f900b4e1bb3fe1d4a85b788845c6e99fd29aa93"
        ],
        [
            "unfold Rdiv in |- *; apply Rmult_lt_0_compat; try (apply Rinv_0_lt_compat; simpl in |- *; prove_sup0)...",
            "VernacExtend",
            "bab6c34c5237dcf26207d6002d8217bbad3ccfb7"
        ],
        [
            "generalize (rho_t_PI2 t); intro H1; assert (Hyp : (0 < 2)%R)...",
            "VernacExtend",
            "7124dc350b224eeace502b7abdc935c685293d54"
        ],
        [
            "prove_sup0...",
            "VernacExtend",
            "32647afeff6e93aaeda0562e78ea042879005d08"
        ],
        [
            "generalize (Rmult_lt_compat_r (/ 2) (rho_V * t) (PI / 2) (Rinv_0_lt_compat 2 Hyp) H1); rewrite Rmult_assoc; replace (PI / 2 * / 2)%R with (PI / 4)%R...",
            "VernacExtend",
            "f3fb5386168a7e99f7c4ab04dbc083f0794e3bea"
        ],
        [
            "intro H2; apply Rlt_trans with (PI / 4)%R...",
            "VernacExtend",
            "975c22be5273252eed52979be53f46a20e0dbf64"
        ],
        [
            "apply (Rlt_trans (PI / 4) (PI / 2) PI PI4_RLT_PI2 PI2_Rlt_PI)...",
            "VernacExtend",
            "48cfb8d983583bc0e1859f701a369589cefe0fc9"
        ],
        [
            "unfold Rdiv in |- *; rewrite Rmult_assoc; rewrite <- Rinv_mult_distr...",
            "VernacExtend",
            "532f86d04bc343d39ffeea8e8377bd42578f2e82"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Variable T : TimeT.",
            "VernacAssumption",
            "5a94b4a58a188b44f9bab68977cf8d3a7b607d01"
        ],
        [
            "Definition MaxDistance : R := (V * T + ConflictRange)%R.",
            "VernacDefinition",
            "1d6657a66b7cd37d16582244232eaa78dceaae7e"
        ],
        [
            "Definition MinDistance : R := (m T - ConflictRange)%R.",
            "VernacDefinition",
            "bcbd3b939cf517e2baae62100b482f5def184be9"
        ],
        [
            "Definition MaxDistance_ub : R := (V * MaxT + ConflictRange)%R.",
            "VernacDefinition",
            "07a5c7b309c0e1273112868c1797cea7a639b14e"
        ],
        [
            "Definition MinDistance_lb : R := (m_rho_ub MinT - ConflictRange)%R.",
            "VernacDefinition",
            "cf6853bb8acd66a77245a846e47075e4b46e4877"
        ],
        [
            "Lemma MaxDistance_ub_0 : (MaxDistance <= MaxDistance_ub)%R.",
            "VernacStartTheoremProof",
            "44325e5d53f87a727c71db67ad0d7a8b1c008437"
        ],
        [
            "unfold MaxDistance, MaxDistance_ub in |- *.",
            "VernacExtend",
            "463ca0e7c75f68c9455ea9d04c19c3387f90d399"
        ],
        [
            "rewrite (Rplus_comm (V * T)).",
            "VernacExtend",
            "435048232c60a7d16da879e6e0c9d994d200ef66"
        ],
        [
            "rewrite (Rplus_comm (V * MaxT)).",
            "VernacExtend",
            "ea4ed638cd4f8335f9be62434014e9299112f8e6"
        ],
        [
            "apply Rplus_le_compat_l.",
            "VernacExtend",
            "3af9ea371eb281cf0e58041faab020bb6798a832"
        ],
        [
            "apply Rmult_le_compat_l.",
            "VernacExtend",
            "509839294acd7016ba82d594bfdb05afe131eed3"
        ],
        [
            "left; apply (TypeSpeed_pos V).",
            "VernacExtend",
            "ad7ea255e143b2ea9e7856845b265bc0bf9ef011"
        ],
        [
            "apply (cond_2 T).",
            "VernacExtend",
            "5007b4e2c4c8941d82da7d51f4cb362d9bfbc2ea"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MinT_MaxT : (MinT <= MaxT)%R.",
            "VernacStartTheoremProof",
            "3445ac7ccee5f5b12bbe3a86ab2513b5293869e6"
        ],
        [
            "unfold MinT in |- *; pattern MaxT at 2 in |- *; rewrite <- (Rplus_0_r MaxT).",
            "VernacExtend",
            "d96290f8dc2795bb4747ca09780ddfd6921f82e4"
        ],
        [
            "unfold Rminus in |- *; apply Rplus_le_compat_l.",
            "VernacExtend",
            "c8428ac28c4d5fdc71228b96e0e6cee960447eb6"
        ],
        [
            "unfold tstep in |- *; rewrite <- Ropp_0; left; apply Ropp_lt_gt_contravar; apply Rinv_0_lt_compat; prove_sup.",
            "VernacExtend",
            "91408c1ea80793efc3c86bf83c98bfa4398a885d"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MinDistance_lb_0 : (MinDistance_lb <= MinDistance)%R.",
            "VernacStartTheoremProof",
            "fc8d67fd7aa7fd13454485667e741c4810464275"
        ],
        [
            "Proof with trivial.",
            "VernacProof",
            "9268eeb221b2345d40e3f4fe2ce96e852cc5a7fc"
        ],
        [
            "unfold MinDistance_lb, MinDistance in |- *; unfold Rminus in |- *; rewrite (Rplus_comm (m_rho_ub MinT)); rewrite (Rplus_comm (m T)); apply Rplus_le_compat_l...",
            "VernacExtend",
            "f88fd36038926fce34e1f8bfe99f919fb9a0ea56"
        ],
        [
            "cut (MinT <= MinT)%R...",
            "VernacExtend",
            "bffb8943541235c89791c2f1bc53cd852eea9d0c"
        ],
        [
            "intro H; apply Rle_trans with (m MinT)...",
            "VernacExtend",
            "c92694ab693515954078f56fa0937b479807d79f"
        ],
        [
            "apply (m_rho_ub_0 (mkTimeT MinT H MinT_MaxT))...",
            "VernacExtend",
            "82a65177b126e760c9127dcc2c66d6694a765bb4"
        ],
        [
            "apply (m_le (mkTimeT MinT H MinT_MaxT) T)...",
            "VernacExtend",
            "aa6b084c9d4482309784ac67d9d5b44add42321c"
        ],
        [
            "simpl in |- *; apply (cond_1 T)...",
            "VernacExtend",
            "f480fe19a7b741a2486ff1990b43f3fca69e3a16"
        ],
        [
            "right...",
            "VernacExtend",
            "812b278b3530fdc8b155b846f3e666d427661a31"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Axiom MinDistance_lb_majoration : (V + ConflictRange < MinDistance_lb)%R.",
            "VernacAssumption",
            "39c75d1eac8a105327dfeeed2c8a7e51dc6465a3"
        ],
        [
            "Lemma MinDistance_lb_pos : (0 < MinDistance_lb)%R.",
            "VernacStartTheoremProof",
            "e048642d62dbdd6e31961b91acd3f6a44ab9afb8"
        ],
        [
            "Proof with trivial.",
            "VernacProof",
            "9268eeb221b2345d40e3f4fe2ce96e852cc5a7fc"
        ],
        [
            "apply Rlt_trans with (V + ConflictRange)%R...",
            "VernacExtend",
            "8b2deeb501c61f2dc44d24d0134ed58bcdb677bb"
        ],
        [
            "unfold V, ConflictRange in |- *; simpl in |- *; prove_sup...",
            "VernacExtend",
            "e56e54bdcf57fdf5b6796c959e40d5056fb576b2"
        ],
        [
            "apply MinDistance_lb_majoration...",
            "VernacExtend",
            "15a218d817ee037f0f29f4687ca31a91758f6c90"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Lemma MinDistance_pos : (0 < MinDistance)%R.",
            "VernacStartTheoremProof",
            "e719d88bf4141d6f61920512b12fdd875ef84819"
        ],
        [
            "apply Rlt_le_trans with MinDistance_lb.",
            "VernacExtend",
            "6a4901b86d25373d3d240cbe6e5178367fe217a0"
        ],
        [
            "apply MinDistance_lb_pos.",
            "VernacExtend",
            "cc851bc6ae2577afe702d5dc02d7810f1396a5d1"
        ],
        [
            "apply MinDistance_lb_0.",
            "VernacExtend",
            "3f363c0f085a2d62f42dd5217403280f5f690f25"
        ],
        [
            "Qed.",
            "VernacEndProof",
            "6eee6c55dea8e22a11abc36404343a43e520a888"
        ],
        [
            "Definition MinBeta : R := (539 / 1000)%R.",
            "VernacDefinition",
            "7c5816322f0563518e7b94d8721a53c6da655da0"
        ],
        [
            "End constants.",
            "VernacEndSegment",
            "6f577cd5942d1b9cb618090818b402d3810ffe90"
        ]
    ],
    "proofs": [
        {
            "name": "Rle_201_250",
            "line_nb": 7,
            "steps": [
                {
                    "command": [
                        "unfold MinSpeed in |- *; left; prove_sup.",
                        "VernacExtend",
                        "d65f18a5d82d202bff26e75619d95c9c2ec4a7b2"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "Rle_250_880",
            "line_nb": 10,
            "steps": [
                {
                    "command": [
                        "unfold MaxSpeed in |- *; left; prove_sup.",
                        "VernacExtend",
                        "c89959b73adb6f9fb93d6785add59f79b634c0d1"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "r_V_is_pos",
            "line_nb": 115,
            "steps": [
                {
                    "command": [
                        "unfold r_V in |- *; unfold r in |- *; unfold Rdiv in |- *; apply Rmult_lt_0_compat; [ apply (TypeSpeed_pos V) | apply Rinv_0_lt_compat; apply rho_pos ].",
                        "VernacExtend",
                        "2ff1e2104d56a9ffbb0f031373a86bdfa16b2e9b"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "rho_V_is_pos",
            "line_nb": 118,
            "steps": [
                {
                    "command": [
                        "unfold rho_V in |- *; apply rho_pos.",
                        "VernacExtend",
                        "c84265bced085bf517cc31d069f4dca6e065ffff"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MaxDistance_ub_0",
            "line_nb": 238,
            "steps": [
                {
                    "command": [
                        "unfold MaxDistance, MaxDistance_ub in |- *.",
                        "VernacExtend",
                        "463ca0e7c75f68c9455ea9d04c19c3387f90d399"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rplus_comm (V * T)).",
                        "VernacExtend",
                        "435048232c60a7d16da879e6e0c9d994d200ef66"
                    ]
                },
                {
                    "command": [
                        "rewrite (Rplus_comm (V * MaxT)).",
                        "VernacExtend",
                        "ea4ed638cd4f8335f9be62434014e9299112f8e6"
                    ]
                },
                {
                    "command": [
                        "apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "3af9ea371eb281cf0e58041faab020bb6798a832"
                    ]
                },
                {
                    "command": [
                        "apply Rmult_le_compat_l.",
                        "VernacExtend",
                        "509839294acd7016ba82d594bfdb05afe131eed3"
                    ]
                },
                {
                    "command": [
                        "left; apply (TypeSpeed_pos V).",
                        "VernacExtend",
                        "ad7ea255e143b2ea9e7856845b265bc0bf9ef011"
                    ]
                },
                {
                    "command": [
                        "apply (cond_2 T).",
                        "VernacExtend",
                        "5007b4e2c4c8941d82da7d51f4cb362d9bfbc2ea"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MinT_MaxT",
            "line_nb": 247,
            "steps": [
                {
                    "command": [
                        "unfold MinT in |- *; pattern MaxT at 2 in |- *; rewrite <- (Rplus_0_r MaxT).",
                        "VernacExtend",
                        "d96290f8dc2795bb4747ca09780ddfd6921f82e4"
                    ]
                },
                {
                    "command": [
                        "unfold Rminus in |- *; apply Rplus_le_compat_l.",
                        "VernacExtend",
                        "c8428ac28c4d5fdc71228b96e0e6cee960447eb6"
                    ]
                },
                {
                    "command": [
                        "unfold tstep in |- *; rewrite <- Ropp_0; left; apply Ropp_lt_gt_contravar; apply Rinv_0_lt_compat; prove_sup.",
                        "VernacExtend",
                        "91408c1ea80793efc3c86bf83c98bfa4398a885d"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        },
        {
            "name": "MinDistance_pos",
            "line_nb": 269,
            "steps": [
                {
                    "command": [
                        "apply Rlt_le_trans with MinDistance_lb.",
                        "VernacExtend",
                        "6a4901b86d25373d3d240cbe6e5178367fe217a0"
                    ]
                },
                {
                    "command": [
                        "apply MinDistance_lb_pos.",
                        "VernacExtend",
                        "cc851bc6ae2577afe702d5dc02d7810f1396a5d1"
                    ]
                },
                {
                    "command": [
                        "apply MinDistance_lb_0.",
                        "VernacExtend",
                        "3f363c0f085a2d62f42dd5217403280f5f690f25"
                    ]
                },
                {
                    "command": [
                        "Qed.",
                        "VernacEndProof",
                        "6eee6c55dea8e22a11abc36404343a43e520a888"
                    ]
                }
            ]
        }
    ]
}